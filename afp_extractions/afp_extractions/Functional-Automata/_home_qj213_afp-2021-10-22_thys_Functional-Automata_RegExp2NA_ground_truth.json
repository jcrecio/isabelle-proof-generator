{"file_name": "/home/qj213/afp-2021-10-22/thys/Functional-Automata/RegExp2NA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Functional-Automata", "problem_names": ["lemma fin_atom: \"(fin (atom a) q) = (q = [False])\"", "lemma start_atom: \"start (atom a) = [True]\"", "lemma in_step_atom_Some[simp]:\n \"(p,q) : step (atom a) b = (p=[True] \\<and> q=[False] \\<and> b=a)\"", "lemma False_False_in_steps_atom:\n \"([False],[False]) : steps (atom a) w = (w = [])\"", "lemma start_fin_in_steps_atom:\n \"(start (atom a), [False]) : steps (atom a) w = (w = [a])\"", "lemma accepts_atom:\n \"accepts (atom a) w = (w = [a])\"", "lemma fin_or_True[iff]:\n \"\\<And>L R. fin (or L R) (True#p) = fin L p\"", "lemma fin_or_False[iff]:\n \"\\<And>L R. fin (or L R) (False#p) = fin R p\"", "lemma True_in_step_or[iff]:\n\"\\<And>L R. (True#p,q) : step (or L R) a = (\\<exists>r. q = True#r \\<and> (p,r) \\<in> step L a)\"", "lemma False_in_step_or[iff]:\n\"\\<And>L R. (False#p,q) : step (or L R) a = (\\<exists>r. q = False#r \\<and> (p,r) \\<in> step R a)\"", "lemma lift_True_over_steps_or[iff]:\n \"\\<And>p. (True#p,q)\\<in>steps (or L R) w = (\\<exists>r. q = True # r \\<and> (p,r) \\<in> steps L w)\"", "lemma lift_False_over_steps_or[iff]:\n \"\\<And>p. (False#p,q)\\<in>steps (or L R) w = (\\<exists>r. q = False#r \\<and> (p,r)\\<in>steps R w)\"", "lemma start_step_or[iff]:\n \"\\<And>L R. (start(or L R),q) : step(or L R) a = \n         (\\<exists>p. (q = True#p \\<and> (start L,p) : step L a) | \n               (q = False#p \\<and> (start R,p) : step R a))\"", "lemma steps_or:\n \"(start(or L R), q) : steps (or L R) w = \n  ( (w = [] \\<and> q = start(or L R)) | \n    (w \\<noteq> [] \\<and> (\\<exists>p.  q = True  # p \\<and> (start L,p) : steps L w | \n                      q = False # p \\<and> (start R,p) : steps R w)))\"", "lemma fin_start_or[iff]:\n \"\\<And>L R. fin (or L R) (start(or L R)) = (fin L (start L) | fin R (start R))\"", "lemma accepts_or[iff]:\n \"accepts (or L R) w = (accepts L w | accepts R w)\"", "lemma fin_conc_True[iff]:\n \"\\<And>L R. fin (conc L R) (True#p) = (fin L p \\<and> fin R (start R))\"", "lemma fin_conc_False[iff]:\n \"\\<And>L R. fin (conc L R) (False#p) = fin R p\"", "lemma True_step_conc[iff]:\n \"\\<And>L R. (True#p,q) : step (conc L R) a = \n        ((\\<exists>r. q=True#r \\<and> (p,r): step L a) | \n         (fin L p \\<and> (\\<exists>r. q=False#r \\<and> (start R,r) : step R a)))\"", "lemma False_step_conc[iff]:\n \"\\<And>L R. (False#p,q) : step (conc L R) a = \n       (\\<exists>r. q = False#r \\<and> (p,r) : step R a)\"", "lemma False_steps_conc[iff]:\n \"\\<And>p. (False#p,q): steps (conc L R) w = (\\<exists>r. q=False#r \\<and> (p,r): steps R w)\"", "lemma True_True_steps_concI:\n \"\\<And>L R p. (p,q) : steps L w \\<Longrightarrow> (True#p,True#q) : steps (conc L R) w\"", "lemma True_False_step_conc[iff]:\n \"\\<And>L R. (True#p,False#q) : step (conc L R) a = \n         (fin L p \\<and> (start R,q) : step R a)\"", "lemma True_steps_concD[rule_format]:\n \"\\<forall>p. (True#p,q) : steps (conc L R) w \\<longrightarrow> \n     ((\\<exists>r. (p,r) : steps L w \\<and> q = True#r)  \\<or> \n  (\\<exists>u a v. w = u@a#v \\<and> \n            (\\<exists>r. (p,r) : steps L u \\<and> fin L r \\<and> \n            (\\<exists>s. (start R,s) : step R a \\<and> \n            (\\<exists>t. (s,t) : steps R v \\<and> q = False#t)))))\"", "lemma True_steps_conc:\n \"(True#p,q) : steps (conc L R) w = \n ((\\<exists>r. (p,r) : steps L w \\<and> q = True#r)  \\<or>\n  (\\<exists>u a v. w = u@a#v \\<and>\n            (\\<exists>r. (p,r) : steps L u \\<and> fin L r \\<and> \n            (\\<exists>s. (start R,s) : step R a \\<and> \n            (\\<exists>t. (s,t) : steps R v \\<and> q = False#t)))))\"", "lemma start_conc:\n  \"\\<And>L R. start(conc L R) = True#start L\"", "lemma final_conc:\n \"\\<And>L R. fin(conc L R) p = ((fin R (start R) \\<and> (\\<exists>s. p = True#s \\<and> fin L s)) \\<or>\n                           (\\<exists>s. p = False#s \\<and> fin R s))\"", "lemma accepts_conc:\n \"accepts (conc L R) w = (\\<exists>u v. w = u@v \\<and> accepts L u \\<and> accepts R v)\"", "lemma step_epsilon[simp]: \"step epsilon a = {}\"", "lemma steps_epsilon: \"((p,q) : steps epsilon w) = (w=[] \\<and> p=q)\"", "lemma accepts_epsilon[iff]: \"accepts epsilon w = (w = [])\"", "lemma start_plus[simp]: \"\\<And>A. start (plus A) = start A\"", "lemma fin_plus[iff]: \"\\<And>A. fin (plus A) = fin A\"", "lemma step_plusI:\n  \"\\<And>A. (p,q) : step A a \\<Longrightarrow> (p,q) : step (plus A) a\"", "lemma steps_plusI: \"\\<And>p. (p,q) : steps A w \\<Longrightarrow> (p,q) \\<in> steps (plus A) w\"", "lemma step_plus_conv[iff]:\n \"\\<And>A. (p,r): step (plus A) a = \n       ( (p,r): step A a | fin A p \\<and> (start A,r) : step A a )\"", "lemma fin_steps_plusI:\n \"[| (start A,q) : steps A u; u \\<noteq> []; fin A p |] \n ==> (p,q) : steps (plus A) u\"", "lemma start_steps_plusD[rule_format]:\n \"\\<forall>r. (start A,r) \\<in> steps (plus A) w \\<longrightarrow>\n     (\\<exists>us v. w = concat us @ v \\<and> \n              (\\<forall>u\\<in>set us. accepts A u) \\<and> \n              (start A,r) \\<in> steps A v)\"", "lemma steps_star_cycle[rule_format]:\n \"us \\<noteq> [] \\<longrightarrow> (\\<forall>u \\<in> set us. accepts A u) \\<longrightarrow> accepts (plus A) (concat us)\"", "lemma accepts_plus[iff]:\n \"accepts (plus A) w = \n (\\<exists>us. us \\<noteq> [] \\<and> w = concat us \\<and> (\\<forall>u \\<in> set us. accepts A u))\"", "lemma accepts_star:\n \"accepts (star A) w = (\\<exists>us. (\\<forall>u \\<in> set us. accepts A u) \\<and> w = concat us)\"", "lemma accepts_rexp2na:\n \"\\<And>w. accepts (rexp2na r) w = (w : lang r)\""], "translations": [["", "lemma fin_atom: \"(fin (atom a) q) = (q = [False])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fin (atom a) q = (q = [False])", "by(simp add:atom_def)"], ["", "lemma start_atom: \"start (atom a) = [True]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start (atom a) = [True]", "by(simp add:atom_def)"], ["", "lemma in_step_atom_Some[simp]:\n \"(p,q) : step (atom a) b = (p=[True] \\<and> q=[False] \\<and> b=a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, q) \\<in> step (atom a) b) =\n    (p = [True] \\<and> q = [False] \\<and> b = a)", "by (simp add: atom_def step_def)"], ["", "lemma False_False_in_steps_atom:\n \"([False],[False]) : steps (atom a) w = (w = [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (([False], [False]) \\<in> steps (atom a) w) = (w = [])", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. (([False], [False]) \\<in> steps (atom a) []) = ([] = [])\n 2. \\<And>aa w.\n       (([False], [False]) \\<in> steps (atom a) w) =\n       (w = []) \\<Longrightarrow>\n       (([False], [False]) \\<in> steps (atom a) (aa # w)) = (aa # w = [])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       (([False], [False]) \\<in> steps (atom a) w) =\n       (w = []) \\<Longrightarrow>\n       (([False], [False]) \\<in> steps (atom a) (aa # w)) = (aa # w = [])", "apply (simp add: relcomp_unfold)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma start_fin_in_steps_atom:\n \"(start (atom a), [False]) : steps (atom a) w = (w = [a])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((start (atom a), [False]) \\<in> steps (atom a) w) = (w = [a])", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((start (atom a), [False]) \\<in> steps (atom a) []) = ([] = [a])\n 2. \\<And>aa w.\n       ((start (atom a), [False]) \\<in> steps (atom a) w) =\n       (w = [a]) \\<Longrightarrow>\n       ((start (atom a), [False]) \\<in> steps (atom a) (aa # w)) =\n       (aa # w = [a])", "apply (simp add: start_atom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa w.\n       ((start (atom a), [False]) \\<in> steps (atom a) w) =\n       (w = [a]) \\<Longrightarrow>\n       ((start (atom a), [False]) \\<in> steps (atom a) (aa # w)) =\n       (aa # w = [a])", "apply (simp add: False_False_in_steps_atom relcomp_unfold start_atom)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma accepts_atom:\n \"accepts (atom a) w = (w = [a])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (atom a) w = (w = [a])", "by (simp add: accepts_conv_steps start_fin_in_steps_atom fin_atom)"], ["", "(******************************************************)\n(*                      or                            *)\n(******************************************************)\n\n(***** lift True/False over fin *****)"], ["", "lemma fin_or_True[iff]:\n \"\\<And>L R. fin (or L R) (True#p) = fin L p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R. fin (or L R) (True # p) = fin L p", "by(simp add:or_def)"], ["", "lemma fin_or_False[iff]:\n \"\\<And>L R. fin (or L R) (False#p) = fin R p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R. fin (or L R) (False # p) = fin R p", "by(simp add:or_def)"], ["", "(***** lift True/False over step *****)"], ["", "lemma True_in_step_or[iff]:\n\"\\<And>L R. (True#p,q) : step (or L R) a = (\\<exists>r. q = True#r \\<and> (p,r) \\<in> step L a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((True # p, q) \\<in> step (or L R) a) =\n       (\\<exists>r. q = True # r \\<and> (p, r) \\<in> step L a)", "apply (simp add:or_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       (q \\<in> True ## aa a p) =\n       (\\<exists>r. q = True # r \\<and> r \\<in> aa a p)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma False_in_step_or[iff]:\n\"\\<And>L R. (False#p,q) : step (or L R) a = (\\<exists>r. q = False#r \\<and> (p,r) \\<in> step R a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((False # p, q) \\<in> step (or L R) a) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> step R a)", "apply (simp add:or_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       (q \\<in> False ## aa a p) =\n       (\\<exists>r. q = False # r \\<and> r \\<in> aa a p)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(***** lift True/False over steps *****)"], ["", "lemma lift_True_over_steps_or[iff]:\n \"\\<And>p. (True#p,q)\\<in>steps (or L R) w = (\\<exists>r. q = True # r \\<and> (p,r) \\<in> steps L w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       ((True # p, q) \\<in> steps (or L R) w) =\n       (\\<exists>r. q = True # r \\<and> (p, r) \\<in> steps L w)", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       ((True # p, q) \\<in> steps (or L R) []) =\n       (\\<exists>r. q = True # r \\<and> (p, r) \\<in> steps L [])\n 2. \\<And>a w p.\n       (\\<And>p.\n           ((True # p, q) \\<in> steps (or L R) w) =\n           (\\<exists>r.\n               q = True # r \\<and>\n               (p, r) \\<in> steps L w)) \\<Longrightarrow>\n       ((True # p, q) \\<in> steps (or L R) (a # w)) =\n       (\\<exists>r. q = True # r \\<and> (p, r) \\<in> steps L (a # w))", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p.\n       (\\<And>p.\n           ((True # p, q) \\<in> steps (or L R) w) =\n           (\\<exists>r.\n               q = True # r \\<and>\n               (p, r) \\<in> steps L w)) \\<Longrightarrow>\n       ((True # p, q) \\<in> steps (or L R) (a # w)) =\n       (\\<exists>r. q = True # r \\<and> (p, r) \\<in> steps L (a # w))", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lift_False_over_steps_or[iff]:\n \"\\<And>p. (False#p,q)\\<in>steps (or L R) w = (\\<exists>r. q = False#r \\<and> (p,r)\\<in>steps R w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       ((False # p, q) \\<in> steps (or L R) w) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R w)", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       ((False # p, q) \\<in> steps (or L R) []) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R [])\n 2. \\<And>a w p.\n       (\\<And>p.\n           ((False # p, q) \\<in> steps (or L R) w) =\n           (\\<exists>r.\n               q = False # r \\<and>\n               (p, r) \\<in> steps R w)) \\<Longrightarrow>\n       ((False # p, q) \\<in> steps (or L R) (a # w)) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R (a # w))", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p.\n       (\\<And>p.\n           ((False # p, q) \\<in> steps (or L R) w) =\n           (\\<exists>r.\n               q = False # r \\<and>\n               (p, r) \\<in> steps R w)) \\<Longrightarrow>\n       ((False # p, q) \\<in> steps (or L R) (a # w)) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R (a # w))", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(** From the start  **)"], ["", "lemma start_step_or[iff]:\n \"\\<And>L R. (start(or L R),q) : step(or L R) a = \n         (\\<exists>p. (q = True#p \\<and> (start L,p) : step L a) | \n               (q = False#p \\<and> (start R,p) : step R a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((start (or L R), q) \\<in> step (or L R) a) =\n       (\\<exists>p.\n           q = True # p \\<and> (start L, p) \\<in> step L a \\<or>\n           q = False # p \\<and> (start R, p) \\<in> step R a)", "apply (simp add:or_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa ab ac ad.\n       (q \\<in> True ## ab a aa \\<or> q \\<in> False ## ad a ac) =\n       (\\<exists>p.\n           q = True # p \\<and> p \\<in> ab a aa \\<or>\n           q = False # p \\<and> p \\<in> ad a ac)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma steps_or:\n \"(start(or L R), q) : steps (or L R) w = \n  ( (w = [] \\<and> q = start(or L R)) | \n    (w \\<noteq> [] \\<and> (\\<exists>p.  q = True  # p \\<and> (start L,p) : steps L w | \n                      q = False # p \\<and> (start R,p) : steps R w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((start (or L R), q) \\<in> steps (or L R) w) =\n    (w = [] \\<and> q = start (or L R) \\<or>\n     w \\<noteq> [] \\<and>\n     (\\<exists>p.\n         q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n         q = False # p \\<and> (start R, p) \\<in> steps R w))", "apply (case_tac \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. w = [] \\<Longrightarrow>\n    ((start (or L R), q) \\<in> steps (or L R) w) =\n    (w = [] \\<and> q = start (or L R) \\<or>\n     w \\<noteq> [] \\<and>\n     (\\<exists>p.\n         q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n         q = False # p \\<and> (start R, p) \\<in> steps R w))\n 2. \\<And>a list.\n       w = a # list \\<Longrightarrow>\n       ((start (or L R), q) \\<in> steps (or L R) w) =\n       (w = [] \\<and> q = start (or L R) \\<or>\n        w \\<noteq> [] \\<and>\n        (\\<exists>p.\n            q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n            q = False # p \\<and> (start R, p) \\<in> steps R w))", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. w = [] \\<Longrightarrow> (start (or L R) = q) = (q = start (or L R))\n 2. \\<And>a list.\n       w = a # list \\<Longrightarrow>\n       ((start (or L R), q) \\<in> steps (or L R) w) =\n       (w = [] \\<and> q = start (or L R) \\<or>\n        w \\<noteq> [] \\<and>\n        (\\<exists>p.\n            q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n            q = False # p \\<and> (start R, p) \\<in> steps R w))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       w = a # list \\<Longrightarrow>\n       ((start (or L R), q) \\<in> steps (or L R) w) =\n       (w = [] \\<and> q = start (or L R) \\<or>\n        w \\<noteq> [] \\<and>\n        (\\<exists>p.\n            q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n            q = False # p \\<and> (start R, p) \\<in> steps R w))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       w = a # list \\<Longrightarrow>\n       ((start (or L R), q) \\<in> step (or L R) a O steps (or L R) list) =\n       (\\<exists>p.\n           q = True # p \\<and>\n           (start L, p) \\<in> step L a O steps L list \\<or>\n           q = False # p \\<and> (start R, p) \\<in> step R a O steps R list)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fin_start_or[iff]:\n \"\\<And>L R. fin (or L R) (start(or L R)) = (fin L (start L) | fin R (start R))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       fin (or L R) (start (or L R)) =\n       (fin L (start L) \\<or> fin R (start R))", "by (simp add:or_def)"], ["", "lemma accepts_or[iff]:\n \"accepts (or L R) w = (accepts L w | accepts R w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (or L R) w = (accepts L w \\<or> accepts R w)", "apply (simp add: accepts_conv_steps steps_or)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>q.\n        (w = [] \\<and> q = start (or L R) \\<or>\n         w \\<noteq> [] \\<and>\n         (\\<exists>p.\n             q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n             q = False # p \\<and> (start R, p) \\<in> steps R w)) \\<and>\n        fin (or L R) q) =\n    ((\\<exists>q. (start L, q) \\<in> steps L w \\<and> fin L q) \\<or>\n     (\\<exists>q. (start R, q) \\<in> steps R w \\<and> fin R q))", "(* get rid of case_tac: *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>q.\n        (w = [] \\<and> q = start (or L R) \\<or>\n         w \\<noteq> [] \\<and>\n         (\\<exists>p.\n             q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n             q = False # p \\<and> (start R, p) \\<in> steps R w)) \\<and>\n        fin (or L R) q) =\n    ((\\<exists>q. (start L, q) \\<in> steps L w \\<and> fin L q) \\<or>\n     (\\<exists>q. (start R, q) \\<in> steps R w \\<and> fin R q))", "apply (case_tac \"w = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. w = [] \\<Longrightarrow>\n    (\\<exists>q.\n        (w = [] \\<and> q = start (or L R) \\<or>\n         w \\<noteq> [] \\<and>\n         (\\<exists>p.\n             q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n             q = False # p \\<and> (start R, p) \\<in> steps R w)) \\<and>\n        fin (or L R) q) =\n    ((\\<exists>q. (start L, q) \\<in> steps L w \\<and> fin L q) \\<or>\n     (\\<exists>q. (start R, q) \\<in> steps R w \\<and> fin R q))\n 2. w \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>q.\n        (w = [] \\<and> q = start (or L R) \\<or>\n         w \\<noteq> [] \\<and>\n         (\\<exists>p.\n             q = True # p \\<and> (start L, p) \\<in> steps L w \\<or>\n             q = False # p \\<and> (start R, p) \\<in> steps R w)) \\<and>\n        fin (or L R) q) =\n    ((\\<exists>q. (start L, q) \\<in> steps L w \\<and> fin L q) \\<or>\n     (\\<exists>q. (start R, q) \\<in> steps R w \\<and> fin R q))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(******************************************************)\n(*                      conc                        *)\n(******************************************************)\n\n(** True/False in fin **)"], ["", "lemma fin_conc_True[iff]:\n \"\\<And>L R. fin (conc L R) (True#p) = (fin L p \\<and> fin R (start R))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       fin (RegExp2NA.conc L R) (True # p) =\n       (fin L p \\<and> fin R (start R))", "by(simp add:conc_def)"], ["", "lemma fin_conc_False[iff]:\n \"\\<And>L R. fin (conc L R) (False#p) = fin R p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R. fin (RegExp2NA.conc L R) (False # p) = fin R p", "by(simp add:conc_def)"], ["", "(** True/False in step **)"], ["", "lemma True_step_conc[iff]:\n \"\\<And>L R. (True#p,q) : step (conc L R) a = \n        ((\\<exists>r. q=True#r \\<and> (p,r): step L a) | \n         (fin L p \\<and> (\\<exists>r. q=False#r \\<and> (start R,r) : step R a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((True # p, q) \\<in> step (RegExp2NA.conc L R) a) =\n       ((\\<exists>r. q = True # r \\<and> (p, r) \\<in> step L a) \\<or>\n        fin L p \\<and>\n        (\\<exists>r. q = False # r \\<and> (start R, r) \\<in> step R a))", "apply (simp add:conc_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ab.\n       (b p \\<longrightarrow>\n        (q \\<in> True ## aa a p \\<or> q \\<in> False ## ab a aaa) =\n        ((\\<exists>r. q = True # r \\<and> r \\<in> aa a p) \\<or>\n         (\\<exists>r. q = False # r \\<and> r \\<in> ab a aaa))) \\<and>\n       (\\<not> b p \\<longrightarrow>\n        (q \\<in> True ## aa a p) =\n        (\\<exists>r. q = True # r \\<and> r \\<in> aa a p))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma False_step_conc[iff]:\n \"\\<And>L R. (False#p,q) : step (conc L R) a = \n       (\\<exists>r. q = False#r \\<and> (p,r) : step R a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((False # p, q) \\<in> step (RegExp2NA.conc L R) a) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> step R a)", "apply (simp add:conc_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       (q \\<in> False ## aa a p) =\n       (\\<exists>r. q = False # r \\<and> r \\<in> aa a p)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(** False in steps **)"], ["", "lemma False_steps_conc[iff]:\n \"\\<And>p. (False#p,q): steps (conc L R) w = (\\<exists>r. q=False#r \\<and> (p,r): steps R w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       ((False # p, q) \\<in> steps (RegExp2NA.conc L R) w) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R w)", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       ((False # p, q) \\<in> steps (RegExp2NA.conc L R) []) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R [])\n 2. \\<And>a w p.\n       (\\<And>p.\n           ((False # p, q) \\<in> steps (RegExp2NA.conc L R) w) =\n           (\\<exists>r.\n               q = False # r \\<and>\n               (p, r) \\<in> steps R w)) \\<Longrightarrow>\n       ((False # p, q) \\<in> steps (RegExp2NA.conc L R) (a # w)) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R (a # w))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p.\n       (\\<And>p.\n           ((False # p, q) \\<in> steps (RegExp2NA.conc L R) w) =\n           (\\<exists>r.\n               q = False # r \\<and>\n               (p, r) \\<in> steps R w)) \\<Longrightarrow>\n       ((False # p, q) \\<in> steps (RegExp2NA.conc L R) (a # w)) =\n       (\\<exists>r. q = False # r \\<and> (p, r) \\<in> steps R (a # w))", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(** True in steps **)"], ["", "lemma True_True_steps_concI:\n \"\\<And>L R p. (p,q) : steps L w \\<Longrightarrow> (True#p,True#q) : steps (conc L R) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R p.\n       (p, q) \\<in> steps L w \\<Longrightarrow>\n       (True # p, True # q) \\<in> steps (RegExp2NA.conc L R) w", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>L R p.\n       (p, q) \\<in> steps L [] \\<Longrightarrow>\n       (True # p, True # q) \\<in> steps (RegExp2NA.conc L R) []\n 2. \\<And>a w L R p.\n       \\<lbrakk>\\<And>L R p.\n                   (p, q) \\<in> steps L w \\<Longrightarrow>\n                   (True # p, True # q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, q) \\<in> steps L (a # w)\\<rbrakk>\n       \\<Longrightarrow> (True # p, True # q)\n                         \\<in> steps (RegExp2NA.conc L R) (a # w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w L R p.\n       \\<lbrakk>\\<And>L R p.\n                   (p, q) \\<in> steps L w \\<Longrightarrow>\n                   (True # p, True # q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, q) \\<in> steps L (a # w)\\<rbrakk>\n       \\<Longrightarrow> (True # p, True # q)\n                         \\<in> steps (RegExp2NA.conc L R) (a # w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w aa ab b ac ad ba p.\n       \\<lbrakk>\\<And>a aa b ab ac ba p.\n                   (p, q) \\<in> steps (a, aa, b) w \\<Longrightarrow>\n                   (True # p, True # q)\n                   \\<in> steps (RegExp2NA.conc (a, aa, b) (ab, ac, ba)) w;\n        (p, q) \\<in> step (aa, ab, b) a O steps (aa, ab, b) w\\<rbrakk>\n       \\<Longrightarrow> (True # p, True # q)\n                         \\<in> step\n                                (RegExp2NA.conc (aa, ab, b) (ac, ad, ba))\n                                a O\n                               steps\n                                (RegExp2NA.conc (aa, ab, b) (ac, ad, ba)) w", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma True_False_step_conc[iff]:\n \"\\<And>L R. (True#p,False#q) : step (conc L R) a = \n         (fin L p \\<and> (start R,q) : step R a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       ((True # p, False # q) \\<in> step (RegExp2NA.conc L R) a) =\n       (fin L p \\<and> (start R, q) \\<in> step R a)", "by simp"], ["", "lemma True_steps_concD[rule_format]:\n \"\\<forall>p. (True#p,q) : steps (conc L R) w \\<longrightarrow> \n     ((\\<exists>r. (p,r) : steps L w \\<and> q = True#r)  \\<or> \n  (\\<exists>u a v. w = u@a#v \\<and> \n            (\\<exists>r. (p,r) : steps L u \\<and> fin L r \\<and> \n            (\\<exists>s. (start R,s) : step R a \\<and> \n            (\\<exists>t. (s,t) : steps R v \\<and> q = False#t)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       (True # p, q) \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n       (\\<exists>r. (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n       (\\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (p, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>p.\n       (True # p, q) \\<in> steps (RegExp2NA.conc L R) [] \\<longrightarrow>\n       (\\<exists>r. (p, r) \\<in> steps L [] \\<and> q = True # r) \\<or>\n       (\\<exists>u a v.\n           [] = u @ a # v \\<and>\n           (\\<exists>r.\n               (p, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w.\n       \\<forall>p.\n          (True # p, q) \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n          (\\<exists>r. (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n          (\\<exists>u a v.\n              w = u @ a # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R a \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and>\n                          q = False # t)))) \\<Longrightarrow>\n       \\<forall>p.\n          (True # p, q)\n          \\<in> steps (RegExp2NA.conc L R) (a # w) \\<longrightarrow>\n          (\\<exists>r.\n              (p, r) \\<in> steps L (a # w) \\<and> q = True # r) \\<or>\n          (\\<exists>u aa v.\n              a # w = u @ aa # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R aa \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w.\n       \\<forall>p.\n          (True # p, q) \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n          (\\<exists>r. (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n          (\\<exists>u a v.\n              w = u @ a # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R a \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and>\n                          q = False # t)))) \\<Longrightarrow>\n       \\<forall>p.\n          (True # p, q)\n          \\<in> steps (RegExp2NA.conc L R) (a # w) \\<longrightarrow>\n          (\\<exists>r.\n              (p, r) \\<in> steps L (a # w) \\<and> q = True # r) \\<or>\n          (\\<exists>u aa v.\n              a # w = u @ aa # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R aa \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w.\n       \\<forall>p.\n          (True # p, q) \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n          (\\<exists>r. (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n          (\\<exists>u a v.\n              w = u @ a # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R a \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and>\n                          q = False # t)))) \\<Longrightarrow>\n       \\<forall>p.\n          (True # p, q)\n          \\<in> step (RegExp2NA.conc L R) a O\n                steps (RegExp2NA.conc L R) w \\<longrightarrow>\n          (\\<exists>r.\n              (p, r) \\<in> step L a O steps L w \\<and> q = True # r) \\<or>\n          (\\<exists>u aa v.\n              a # w = u @ aa # v \\<and>\n              (\\<exists>r.\n                  (p, r) \\<in> steps L u \\<and>\n                  fin L r \\<and>\n                  (\\<exists>s.\n                      (start R, s) \\<in> step R aa \\<and>\n                      (\\<exists>t.\n                          (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (clarify del:disjCI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (\\<exists>r. y = True # r \\<and> (p, r) \\<in> step L a) \\<or>\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        \\<exists>r. y = True # r \\<and> (p, r) \\<in> step L a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (clarify del:disjCI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z r.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (erule allE, erule impE, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z r.\n       \\<lbrakk>(True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a;\n        (\\<exists>ra. (r, ra) \\<in> steps L w \\<and> q = True # ra) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>ra.\n                (r, ra) \\<in> steps L u \\<and>\n                fin L ra \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a w p x y z r.\n       \\<lbrakk>(True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a;\n        \\<exists>ra. (r, ra) \\<in> steps L w \\<and> q = True # ra\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w p x y z r.\n       \\<lbrakk>(True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a;\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>ra.\n               (r, ra) \\<in> steps L u \\<and>\n               fin L ra \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 3. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z r.\n       \\<lbrakk>(True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a;\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>ra.\n               (r, ra) \\<in> steps L u \\<and>\n               fin L ra \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z r.\n       \\<lbrakk>(True # r, q) \\<in> steps (RegExp2NA.conc L R) w;\n        (p, r) \\<in> step L a;\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>ra.\n               (r, ra) \\<in> steps L u \\<and>\n               fin L ra \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u aa v.\n                            a # w = u @ aa # v \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L u \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R aa \\<and>\n                                    (\\<exists>t.\n  (s, t) \\<in> steps R v \\<and> q = False # t)))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a w p x y z r u aa v xa ya za ra s t.\n       \\<lbrakk>(p, r) \\<in> step L a;\n        (True # r, ya) \\<in> steps (RegExp2NA.conc L R) u;\n        (ya, False # t) \\<in> steps (RegExp2NA.conc L R) (aa # v);\n        (r, ra) \\<in> steps L u; fin L ra; (start R, s) \\<in> step R aa;\n        (s, t) \\<in> steps R v; q = False # t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua ab va.\n                            a # u @ aa # v = ua @ ab # va \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L ua \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R ab \\<and>\n                                    (\\<exists>ta.\n  (s, ta) \\<in> steps R va \\<and> False # t = False # ta)))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a p r u aa v ya ra s t.\n       \\<lbrakk>(p, r) \\<in> step L a;\n        (True # r, ya) \\<in> steps (RegExp2NA.conc L R) u;\n        (ya, False # t)\n        \\<in> step (RegExp2NA.conc L R) aa O steps (RegExp2NA.conc L R) v;\n        (r, ra) \\<in> steps L u; fin L ra; (start R, s) \\<in> step R aa;\n        (s, t) \\<in> steps R v; q = False # t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua ab va.\n                            a # u @ aa # v = ua @ ab # va \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L ua \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R ab \\<and>\n                                    (s, t) \\<in> steps R va))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (rule_tac x = \"a#u\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a p r u aa v ya ra s t.\n       \\<lbrakk>(p, r) \\<in> step L a;\n        (True # r, ya) \\<in> steps (RegExp2NA.conc L R) u;\n        (ya, False # t)\n        \\<in> step (RegExp2NA.conc L R) aa O steps (RegExp2NA.conc L R) v;\n        (r, ra) \\<in> steps L u; fin L ra; (start R, s) \\<in> step R aa;\n        (s, t) \\<in> steps R v; q = False # t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab va.\n                            a # u @ aa # v = (a # u) @ ab # va \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L (a # u) \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R ab \\<and>\n                                    (s, t) \\<in> steps R va))\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a p r u aa v ya ra s t.\n       \\<lbrakk>(p, r) \\<in> step L a;\n        (True # r, ya) \\<in> steps (RegExp2NA.conc L R) u;\n        (ya, False # t)\n        \\<in> step (RegExp2NA.conc L R) aa O steps (RegExp2NA.conc L R) v;\n        (r, ra) \\<in> steps L u; fin L ra; (start R, s) \\<in> step R aa;\n        (s, t) \\<in> steps R v; q = False # t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            (p, r) \\<in> step L a O steps L u \\<and>\n                            fin L r \\<and>\n                            (\\<exists>s.\n                                (start R, s) \\<in> step R aa \\<and>\n                                (s, t) \\<in> steps R v)\n 2. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>r.\n                             (p, r) \\<in> step L a O steps L w \\<and>\n                             q = True # r) \\<or>\n                         (\\<exists>u aa v.\n                             a # w = u @ aa # v \\<and>\n                             (\\<exists>r.\n                                 (p, r) \\<in> steps L u \\<and>\n                                 fin L r \\<and>\n                                 (\\<exists>s.\n                                     (start R, s) \\<in> step R aa \\<and>\n                                     (\\<exists>t.\n   (s, t) \\<in> steps R v \\<and> q = False # t))))", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p x y z.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, q)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   q = False # t))));\n        (y, q) \\<in> steps (RegExp2NA.conc L R) w;\n        fin L p \\<and>\n        (\\<exists>r.\n            y = False # r \\<and> (start R, r) \\<in> step R a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u aa v.\n                            a # w = u @ aa # v \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L u \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R aa \\<and>\n                                    (\\<exists>t.\n  (s, t) \\<in> steps R v \\<and> q = False # t)))", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p x y z r ra.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, False # ra)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>r.\n                       (p, r) \\<in> steps L w \\<and>\n                       False # ra = True # r) \\<or>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (\\<exists>t.\n                                   (s, t) \\<in> steps R v \\<and>\n                                   False # ra = False # t))));\n        fin L p; (start R, r) \\<in> step R a; (r, ra) \\<in> steps R w;\n        q = False # ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u aa v.\n                            a # w = u @ aa # v \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L u \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R aa \\<and>\n                                    (\\<exists>t.\n  (s, t) \\<in> steps R v \\<and> False # ra = False # t)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p r ra.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, False # ra)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (s, ra) \\<in> steps R v)));\n        fin L p; (start R, r) \\<in> step R a; (r, ra) \\<in> steps R w;\n        q = False # ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u aa v.\n                            a # w = u @ aa # v \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L u \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R aa \\<and>\n                                    (s, ra) \\<in> steps R v))", "apply (rule_tac x = \"[]\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p r ra.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, False # ra)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (s, ra) \\<in> steps R v)));\n        fin L p; (start R, r) \\<in> step R a; (r, ra) \\<in> steps R w;\n        q = False # ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa v.\n                            a # w = [] @ aa # v \\<and>\n                            (\\<exists>r.\n                                (p, r) \\<in> steps L [] \\<and>\n                                fin L r \\<and>\n                                (\\<exists>s.\n                                    (start R, s) \\<in> step R aa \\<and>\n                                    (s, ra) \\<in> steps R v))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p r ra.\n       \\<lbrakk>\\<forall>p.\n                   (True # p, False # ra)\n                   \\<in> steps (RegExp2NA.conc L R) w \\<longrightarrow>\n                   (\\<exists>u a v.\n                       w = u @ a # v \\<and>\n                       (\\<exists>r.\n                           (p, r) \\<in> steps L u \\<and>\n                           fin L r \\<and>\n                           (\\<exists>s.\n                               (start R, s) \\<in> step R a \\<and>\n                               (s, ra) \\<in> steps R v)));\n        fin L p; (start R, r) \\<in> step R a; (r, ra) \\<in> steps R w;\n        q = False # ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (start R, s) \\<in> step R a \\<and>\n                            (s, ra) \\<in> steps R w", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma True_steps_conc:\n \"(True#p,q) : steps (conc L R) w = \n ((\\<exists>r. (p,r) : steps L w \\<and> q = True#r)  \\<or>\n  (\\<exists>u a v. w = u@a#v \\<and>\n            (\\<exists>r. (p,r) : steps L u \\<and> fin L r \\<and> \n            (\\<exists>s. (start R,s) : step R a \\<and> \n            (\\<exists>t. (s,t) : steps R v \\<and> q = False#t)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((True # p, q) \\<in> steps (RegExp2NA.conc L R) w) =\n    ((\\<exists>r. (p, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n     (\\<exists>u a v.\n         w = u @ a # v \\<and>\n         (\\<exists>r.\n             (p, r) \\<in> steps L u \\<and>\n             fin L r \\<and>\n             (\\<exists>s.\n                 (start R, s) \\<in> step R a \\<and>\n                 (\\<exists>t.\n                     (s, t) \\<in> steps R v \\<and> q = False # t)))))", "by(force dest!: True_steps_concD intro!: True_True_steps_concI)"], ["", "(** starting from the start **)"], ["", "lemma start_conc:\n  \"\\<And>L R. start(conc L R) = True#start L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R. start (RegExp2NA.conc L R) = True # start L", "by (simp add:conc_def)"], ["", "lemma final_conc:\n \"\\<And>L R. fin(conc L R) p = ((fin R (start R) \\<and> (\\<exists>s. p = True#s \\<and> fin L s)) \\<or>\n                           (\\<exists>s. p = False#s \\<and> fin R s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>L R.\n       fin (RegExp2NA.conc L R) p =\n       (fin R (start R) \\<and>\n        (\\<exists>s. p = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. p = False # s \\<and> fin R s))", "apply (simp add:conc_def split: list.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a ba.\n       \\<forall>x21 x22.\n          p = x21 # x22 \\<longrightarrow>\n          (x21 \\<and> b x22 \\<and> ba a \\<or> \\<not> x21 \\<and> ba x22) =\n          (ba a \\<and> x21 \\<and> b x22 \\<or> \\<not> x21 \\<and> ba x22)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma accepts_conc:\n \"accepts (conc L R) w = (\\<exists>u v. w = u@v \\<and> accepts L u \\<and> accepts R v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (RegExp2NA.conc L R) w =\n    (\\<exists>u v. w = u @ v \\<and> accepts L u \\<and> accepts R v)", "apply (simp add: accepts_conv_steps True_steps_conc final_conc start_conc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>q.\n        ((\\<exists>r.\n             (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n         (\\<exists>u a v.\n             w = u @ a # v \\<and>\n             (\\<exists>r.\n                 (start L, r) \\<in> steps L u \\<and>\n                 fin L r \\<and>\n                 (\\<exists>s.\n                     (start R, s) \\<in> step R a \\<and>\n                     (\\<exists>t.\n                         (s, t) \\<in> steps R v \\<and>\n                         q = False # t))))) \\<and>\n        (fin R (start R) \\<and>\n         (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n         (\\<exists>s. q = False # s \\<and> fin R s))) =\n    (\\<exists>u v.\n        w = u @ v \\<and>\n        (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n        (\\<exists>q. (start R, q) \\<in> steps R v \\<and> fin R q))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s)) \\<Longrightarrow>\n    \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q. (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>(\\<exists>r.\n                    (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n                (\\<exists>u a v.\n                    w = u @ a # v \\<and>\n                    (\\<exists>r.\n                        (start L, r) \\<in> steps L u \\<and>\n                        fin L r \\<and>\n                        (\\<exists>s.\n                            (start R, s) \\<in> step R a \\<and>\n                            (\\<exists>t.\n                                (s, t) \\<in> steps R v \\<and>\n                                q = False # t))));\n        fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>r.\n           (start L, r) \\<in> steps L w \\<and> q = True # r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (clarify)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>q r.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. True # r = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. True # r = False # s \\<and> fin R s);\n        (start L, r) \\<in> steps L w\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        fin R (start R) \\<and>\n        (\\<exists>s. True # r = True # s \\<and> fin L s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        \\<exists>s. True # r = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 4. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (rule_tac x = \"w\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        fin R (start R) \\<and>\n        (\\<exists>s. True # r = True # s \\<and> fin L s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            w = w @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L w \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        \\<exists>s. True # r = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 4. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        fin R (start R) \\<and> fin L r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start L, q) \\<in> steps L w \\<and> fin L q\n 2. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        \\<exists>s. True # r = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 4. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>q r.\n       \\<lbrakk>(start L, r) \\<in> steps L w;\n        \\<exists>s. True # r = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>fin R (start R) \\<and>\n                (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                (\\<exists>s. q = False # s \\<and> fin R s);\n        \\<exists>u a v.\n           w = u @ a # v \\<and>\n           (\\<exists>r.\n               (start L, r) \\<in> steps L u \\<and>\n               fin L r \\<and>\n               (\\<exists>s.\n                   (start R, s) \\<in> step R a \\<and>\n                   (\\<exists>t.\n                       (s, t) \\<in> steps R v \\<and>\n                       q = False # t)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>\\<exists>u a v.\n                   w = u @ a # v \\<and>\n                   (\\<exists>r.\n                       (start L, r) \\<in> steps L u \\<and>\n                       fin L r \\<and>\n                       (\\<exists>s.\n                           (start R, s) \\<in> step R a \\<and>\n                           (\\<exists>t.\n                               (s, t) \\<in> steps R v \\<and>\n                               q = False # t)));\n        fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<And>q.\n       \\<lbrakk>\\<exists>u a v.\n                   w = u @ a # v \\<and>\n                   (\\<exists>r.\n                       (start L, r) \\<in> steps L u \\<and>\n                       fin L r \\<and>\n                       (\\<exists>s.\n                           (start R, s) \\<in> step R a \\<and>\n                           (\\<exists>t.\n                               (s, t) \\<in> steps R v \\<and>\n                               q = False # t)));\n        \\<exists>s. q = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 3. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>\\<exists>u a v.\n                   w = u @ a # v \\<and>\n                   (\\<exists>r.\n                       (start L, r) \\<in> steps L u \\<and>\n                       fin L r \\<and>\n                       (\\<exists>s.\n                           (start R, s) \\<in> step R a \\<and>\n                           (\\<exists>t.\n                               (s, t) \\<in> steps R v \\<and>\n                               q = False # t)));\n        \\<exists>s. q = False # s \\<and> fin R s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            w = u @ v \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R v \\<and> fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q u s a v r sa t.\n       \\<lbrakk>fin R t; w = u @ a # v; (start L, r) \\<in> steps L u;\n        fin L r; (start R, sa) \\<in> step R a;\n        (sa, t) \\<in> steps R v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua va.\n                            u @ a # v = ua @ va \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L ua \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R va \\<and>\n                                fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (rule_tac x = \"u\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q u s a v r sa t.\n       \\<lbrakk>fin R t; w = u @ a # v; (start L, r) \\<in> steps L u;\n        fin L r; (start R, sa) \\<in> step R a;\n        (sa, t) \\<in> steps R v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            u @ a # v = u @ va \\<and>\n                            (\\<exists>q.\n                                (start L, q) \\<in> steps L u \\<and>\n                                fin L q) \\<and>\n                            (\\<exists>q.\n                                (start R, q) \\<in> steps R va \\<and>\n                                fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u a v r sa t.\n       \\<lbrakk>fin R t; w = u @ a # v; (start L, r) \\<in> steps L u;\n        fin L r; (start R, sa) \\<in> step R a;\n        (sa, t) \\<in> steps R v\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>q.\n                             (start L, q) \\<in> steps L u \\<and>\n                             fin L q) \\<and>\n                         (\\<exists>q.\n                             (start R, q) \\<in> step R a O steps R v \\<and>\n                             fin R q)\n 2. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       w = u @ v \\<and>\n       (\\<exists>q. (start L, q) \\<in> steps L u \\<and> fin L q) \\<and>\n       (\\<exists>q.\n           (start R, q) \\<in> steps R v \\<and> fin R q) \\<Longrightarrow>\n    \\<exists>q.\n       ((\\<exists>r. (start L, r) \\<in> steps L w \\<and> q = True # r) \\<or>\n        (\\<exists>u a v.\n            w = u @ a # v \\<and>\n            (\\<exists>r.\n                (start L, r) \\<in> steps L u \\<and>\n                fin L r \\<and>\n                (\\<exists>s.\n                    (start R, s) \\<in> step R a \\<and>\n                    (\\<exists>t.\n                        (s, t) \\<in> steps R v \\<and>\n                        q = False # t))))) \\<and>\n       (fin R (start R) \\<and>\n        (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n        (\\<exists>s. q = False # s \\<and> fin R s))", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v q qa.\n       \\<lbrakk>w = u @ v; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> steps R v; fin R qa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L (u @ v) \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a va.\n                                 u @ v = ua @ a # va \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R va \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))", "apply (case_tac \"v\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u v q qa.\n       \\<lbrakk>w = u @ v; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> steps R v; fin R qa; v = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L (u @ v) \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a va.\n                                 u @ v = ua @ a # va \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R va \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))\n 2. \\<And>u v q qa a list.\n       \\<lbrakk>w = u @ v; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> steps R v; fin R qa; v = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L (u @ v) \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a va.\n                                 u @ v = ua @ a # va \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R va \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u v q qa.\n       \\<lbrakk>w = u; (start L, q) \\<in> steps L u; fin L q; start R = qa;\n        fin R qa; v = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L u \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a v.\n                                 u = ua @ a # v \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (qa, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R v \\<and> q = False # t))))) \\<and>\n                            ((\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))\n 2. \\<And>u v q qa a list.\n       \\<lbrakk>w = u @ v; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> steps R v; fin R qa; v = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L (u @ v) \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a va.\n                                 u @ v = ua @ a # va \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R va \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v q qa a list.\n       \\<lbrakk>w = u @ v; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> steps R v; fin R qa; v = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r) \\<in> steps L (u @ v) \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua a va.\n                                 u @ v = ua @ a # va \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R a \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R va \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v q qa a list.\n       \\<lbrakk>w = u @ a # list; (start L, q) \\<in> steps L u; fin L q;\n        (start R, qa) \\<in> step R a O steps R list; fin R qa;\n        v = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            ((\\<exists>r.\n                                 (start L, r)\n                                 \\<in> steps L u O\n step L a O steps L list \\<and>\n                                 q = True # r) \\<or>\n                             (\\<exists>ua aa v.\n                                 u @ a # list = ua @ aa # v \\<and>\n                                 (\\<exists>r.\n                                     (start L, r) \\<in> steps L ua \\<and>\n                                     fin L r \\<and>\n                                     (\\<exists>s.\n   (start R, s) \\<in> step R aa \\<and>\n   (\\<exists>t. (s, t) \\<in> steps R v \\<and> q = False # t))))) \\<and>\n                            (fin R (start R) \\<and>\n                             (\\<exists>s. q = True # s \\<and> fin L s) \\<or>\n                             (\\<exists>s. q = False # s \\<and> fin R s))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(******************************************************)\n(*                     epsilon                        *)\n(******************************************************)"], ["", "lemma step_epsilon[simp]: \"step epsilon a = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step epsilon a = {}", "by(simp add:epsilon_def step_def)"], ["", "lemma steps_epsilon: \"((p,q) : steps epsilon w) = (w=[] \\<and> p=q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((p, q) \\<in> steps epsilon w) = (w = [] \\<and> p = q)", "by (induct \"w\") auto"], ["", "lemma accepts_epsilon[iff]: \"accepts epsilon w = (w = [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts epsilon w = (w = [])", "apply (simp add: steps_epsilon accepts_conv_steps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w = [] \\<and> fin epsilon (start epsilon)) = (w = [])", "apply (simp add: epsilon_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(******************************************************)\n(*                       plus                         *)\n(******************************************************)"], ["", "lemma start_plus[simp]: \"\\<And>A. start (plus A) = start A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. start (RegExp2NA.plus A) = start A", "by(simp add:plus_def)"], ["", "lemma fin_plus[iff]: \"\\<And>A. fin (plus A) = fin A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. fin (RegExp2NA.plus A) = fin A", "by(simp add:plus_def)"], ["", "lemma step_plusI:\n  \"\\<And>A. (p,q) : step A a \\<Longrightarrow> (p,q) : step (plus A) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       (p, q) \\<in> step A a \\<Longrightarrow>\n       (p, q) \\<in> step (RegExp2NA.plus A) a", "by(simp add:plus_def step_def)"], ["", "lemma steps_plusI: \"\\<And>p. (p,q) : steps A w \\<Longrightarrow> (p,q) \\<in> steps (plus A) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (p, q) \\<in> steps A w \\<Longrightarrow>\n       (p, q) \\<in> steps (RegExp2NA.plus A) w", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       (p, q) \\<in> steps A [] \\<Longrightarrow>\n       (p, q) \\<in> steps (RegExp2NA.plus A) []\n 2. \\<And>a w p.\n       \\<lbrakk>\\<And>p.\n                   (p, q) \\<in> steps A w \\<Longrightarrow>\n                   (p, q) \\<in> steps (RegExp2NA.plus A) w;\n        (p, q) \\<in> steps A (a # w)\\<rbrakk>\n       \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) (a # w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p.\n       \\<lbrakk>\\<And>p.\n                   (p, q) \\<in> steps A w \\<Longrightarrow>\n                   (p, q) \\<in> steps (RegExp2NA.plus A) w;\n        (p, q) \\<in> steps A (a # w)\\<rbrakk>\n       \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) (a # w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a w p.\n       \\<lbrakk>\\<And>p.\n                   (p, q) \\<in> steps A w \\<Longrightarrow>\n                   (p, q) \\<in> steps (RegExp2NA.plus A) w;\n        (p, q) \\<in> step A a O steps A w\\<rbrakk>\n       \\<Longrightarrow> (p, q)\n                         \\<in> step (RegExp2NA.plus A) a O\n                               steps (RegExp2NA.plus A) w", "apply (blast intro: step_plusI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma step_plus_conv[iff]:\n \"\\<And>A. (p,r): step (plus A) a = \n       ( (p,r): step A a | fin A p \\<and> (start A,r) : step A a )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       ((p, r) \\<in> step (RegExp2NA.plus A) a) =\n       ((p, r) \\<in> step A a \\<or>\n        fin A p \\<and> (start A, r) \\<in> step A a)", "by(simp add:plus_def step_def)"], ["", "lemma fin_steps_plusI:\n \"[| (start A,q) : steps A u; u \\<noteq> []; fin A p |] \n ==> (p,q) : steps (plus A) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(start A, q) \\<in> steps A u; u \\<noteq> []; fin A p\\<rbrakk>\n    \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) u", "apply (case_tac \"u\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(start A, q) \\<in> steps A u; u \\<noteq> []; fin A p;\n     u = []\\<rbrakk>\n    \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) u\n 2. \\<And>a list.\n       \\<lbrakk>(start A, q) \\<in> steps A u; u \\<noteq> []; fin A p;\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) u", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>(start A, q) \\<in> steps A u; u \\<noteq> []; fin A p;\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> (p, q) \\<in> steps (RegExp2NA.plus A) u", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>(start A, q) \\<in> step A a O steps A list; fin A p;\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> (p, q)\n                         \\<in> step (RegExp2NA.plus A) a O\n                               steps (RegExp2NA.plus A) list", "apply (blast intro: steps_plusI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* reverse list induction! Complicates matters for conc? *)"], ["", "lemma start_steps_plusD[rule_format]:\n \"\\<forall>r. (start A,r) \\<in> steps (plus A) w \\<longrightarrow>\n     (\\<exists>us v. w = concat us @ v \\<and> \n              (\\<forall>u\\<in>set us. accepts A u) \\<and> \n              (start A,r) \\<in> steps A v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r.\n       (start A, r) \\<in> steps (RegExp2NA.plus A) w \\<longrightarrow>\n       (\\<exists>us v.\n           w = concat us @ v \\<and>\n           (\\<forall>u\\<in>set us. accepts A u) \\<and>\n           (start A, r) \\<in> steps A v)", "apply (induct w rule: rev_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>r.\n       (start A, r) \\<in> steps (RegExp2NA.plus A) [] \\<longrightarrow>\n       (\\<exists>us v.\n           [] = concat us @ v \\<and>\n           (\\<forall>u\\<in>set us. accepts A u) \\<and>\n           (start A, r) \\<in> steps A v)\n 2. \\<And>x xs.\n       \\<forall>r.\n          (start A, r) \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n          (\\<exists>us v.\n              xs = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v) \\<Longrightarrow>\n       \\<forall>r.\n          (start A, r)\n          \\<in> steps (RegExp2NA.plus A) (xs @ [x]) \\<longrightarrow>\n          (\\<exists>us v.\n              xs @ [x] = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>us.\n       (\\<forall>xs\\<in>set us. xs = []) \\<and> Ball (set us) (accepts A)\n 2. \\<And>x xs.\n       \\<forall>r.\n          (start A, r) \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n          (\\<exists>us v.\n              xs = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v) \\<Longrightarrow>\n       \\<forall>r.\n          (start A, r)\n          \\<in> steps (RegExp2NA.plus A) (xs @ [x]) \\<longrightarrow>\n          (\\<exists>us v.\n              xs @ [x] = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v)", "apply (rule_tac x = \"[]\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<forall>xs\\<in>set []. xs = []) \\<and> Ball (set []) (accepts A)\n 2. \\<And>x xs.\n       \\<forall>r.\n          (start A, r) \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n          (\\<exists>us v.\n              xs = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v) \\<Longrightarrow>\n       \\<forall>r.\n          (start A, r)\n          \\<in> steps (RegExp2NA.plus A) (xs @ [x]) \\<longrightarrow>\n          (\\<exists>us v.\n              xs @ [x] = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<forall>r.\n          (start A, r) \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n          (\\<exists>us v.\n              xs = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v) \\<Longrightarrow>\n       \\<forall>r.\n          (start A, r)\n          \\<in> steps (RegExp2NA.plus A) (xs @ [x]) \\<longrightarrow>\n          (\\<exists>us v.\n              xs @ [x] = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<forall>r.\n          (start A, r) \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n          (\\<exists>us v.\n              xs = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v) \\<Longrightarrow>\n       \\<forall>r.\n          (start A, r)\n          \\<in> steps (RegExp2NA.plus A) xs O\n                step (RegExp2NA.plus A) x \\<longrightarrow>\n          (\\<exists>us v.\n              xs @ [x] = concat us @ v \\<and>\n              (\\<forall>u\\<in>set us. accepts A u) \\<and>\n              (start A, r) \\<in> steps A v)", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs r xa y z.\n       \\<lbrakk>\\<forall>r.\n                   (start A, r)\n                   \\<in> steps (RegExp2NA.plus A) xs \\<longrightarrow>\n                   (\\<exists>us v.\n                       xs = concat us @ v \\<and>\n                       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n                       (start A, r) \\<in> steps A v);\n        (start A, y) \\<in> steps (RegExp2NA.plus A) xs;\n        (y, z) \\<in> step A x \\<or>\n        fin A y \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us v.\n                            xs @ [x] = concat us @ v \\<and>\n                            (\\<forall>u\\<in>set us. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A v", "apply (erule allE, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs r xa y z.\n       \\<lbrakk>(start A, y) \\<in> steps (RegExp2NA.plus A) xs;\n        (y, z) \\<in> step A x \\<or>\n        fin A y \\<and> (start A, z) \\<in> step A x;\n        \\<exists>us v.\n           xs = concat us @ v \\<and>\n           (\\<forall>u\\<in>set us. accepts A u) \\<and>\n           (start A, y) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us v.\n                            xs @ [x] = concat us @ v \\<and>\n                            (\\<forall>u\\<in>set us. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A v", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(za, z) \\<in> step A x \\<or>\n                fin A za \\<and> (start A, z) \\<in> step A x;\n        (start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u;\n        (start A, za) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        (za, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va\n 2. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply (rule_tac x = \"us\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        (za, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (concat us @ v) @ [x] = concat us @ va \\<and>\n                            (\\<forall>u\\<in>set us. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va\n 2. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x z us v ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        Ball (set us) (accepts A); (start A, za) \\<in> steps A v;\n        (za, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> (start A, z) \\<in> steps A v O step A x\n 2. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa va.\n                            (concat us @ v) @ [x] = concat usa @ va \\<and>\n                            (\\<forall>u\\<in>set usa. accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply (rule_tac x = \"us@[v]\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs r xa y z us v xb ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us. accepts A u; (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (concat us @ v) @ [x] =\n                            concat (us @ [v]) @ va \\<and>\n                            (\\<forall>u\\<in>set (us @ [v]).\n                                accepts A u) \\<and>\n                            (start A, z) \\<in> steps A va", "apply (simp add: accepts_conv_steps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x z us v ya za.\n       \\<lbrakk>(start A, ya) \\<in> steps (RegExp2NA.plus A) (concat us);\n        (ya, za) \\<in> steps (RegExp2NA.plus A) v;\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, za) \\<in> steps A v;\n        fin A za \\<and> (start A, z) \\<in> step A x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q) \\<in> steps A v \\<and> fin A q", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma steps_star_cycle[rule_format]:\n \"us \\<noteq> [] \\<longrightarrow> (\\<forall>u \\<in> set us. accepts A u) \\<longrightarrow> accepts (plus A) (concat us)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<longrightarrow>\n    (\\<forall>u\\<in>set us. accepts A u) \\<longrightarrow>\n    accepts (RegExp2NA.plus A) (concat us)", "apply (simp add: accepts_conv_steps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<longrightarrow>\n    (\\<forall>u\\<in>set us.\n        \\<exists>q.\n           (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n    (\\<exists>q.\n        (start A, q) \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n        fin A q)", "apply (induct us rule: rev_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<longrightarrow>\n    (\\<forall>u\\<in>set [].\n        \\<exists>q.\n           (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n    (\\<exists>q.\n        (start A, q) \\<in> steps (RegExp2NA.plus A) (concat []) \\<and>\n        fin A q)\n 2. \\<And>x xs.\n       xs \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set xs.\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q) \\<in> steps (RegExp2NA.plus A) (concat xs) \\<and>\n           fin A q) \\<Longrightarrow>\n       xs @ [x] \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set (xs @ [x]).\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q)\n           \\<in> steps (RegExp2NA.plus A) (concat (xs @ [x])) \\<and>\n           fin A q)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       xs \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set xs.\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q) \\<in> steps (RegExp2NA.plus A) (concat xs) \\<and>\n           fin A q) \\<Longrightarrow>\n       xs @ [x] \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set (xs @ [x]).\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q)\n           \\<in> steps (RegExp2NA.plus A) (concat (xs @ [x])) \\<and>\n           fin A q)", "apply (rename_tac u us)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us.\n       us \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set us.\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q) \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n           fin A q) \\<Longrightarrow>\n       us @ [u] \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set (us @ [u]).\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q)\n           \\<in> steps (RegExp2NA.plus A) (concat (us @ [u])) \\<and>\n           fin A q)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us.\n       us \\<noteq> [] \\<longrightarrow>\n       (\\<forall>u\\<in>set us.\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q) \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n           fin A q) \\<Longrightarrow>\n       (\\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q) \\<and>\n       (\\<forall>u\\<in>set us.\n           \\<exists>q.\n              (start A, q) \\<in> steps A u \\<and> fin A q) \\<longrightarrow>\n       (\\<exists>q.\n           (start A, q)\n           \\<in> steps (RegExp2NA.plus A) (concat us) O\n                 steps (RegExp2NA.plus A) u \\<and>\n           fin A q)", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us q.\n       \\<lbrakk>us \\<noteq> [] \\<longrightarrow>\n                (\\<forall>u\\<in>set us.\n                    \\<exists>q.\n                       (start A, q) \\<in> steps A u \\<and>\n                       fin A q) \\<longrightarrow>\n                (\\<exists>q.\n                    (start A, q)\n                    \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n                    fin A q);\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (case_tac \"us = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u us q.\n       \\<lbrakk>us \\<noteq> [] \\<longrightarrow>\n                (\\<forall>u\\<in>set us.\n                    \\<exists>q.\n                       (start A, q) \\<in> steps A u \\<and>\n                       fin A q) \\<longrightarrow>\n                (\\<exists>q.\n                    (start A, q)\n                    \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n                    fin A q);\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q\n 2. \\<And>u us q.\n       \\<lbrakk>us \\<noteq> [] \\<longrightarrow>\n                (\\<forall>u\\<in>set us.\n                    \\<exists>q.\n                       (start A, q) \\<in> steps A u \\<and>\n                       fin A q) \\<longrightarrow>\n                (\\<exists>q.\n                    (start A, q)\n                    \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n                    fin A q);\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u us q.\n       \\<lbrakk>(start A, q) \\<in> steps A u; fin A q; us = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) u \\<and>\n                            fin A q\n 2. \\<And>u us q.\n       \\<lbrakk>us \\<noteq> [] \\<longrightarrow>\n                (\\<forall>u\\<in>set us.\n                    \\<exists>q.\n                       (start A, q) \\<in> steps A u \\<and>\n                       fin A q) \\<longrightarrow>\n                (\\<exists>q.\n                    (start A, q)\n                    \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n                    fin A q);\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (blast intro: steps_plusI fin_steps_plusI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us q.\n       \\<lbrakk>us \\<noteq> [] \\<longrightarrow>\n                (\\<forall>u\\<in>set us.\n                    \\<exists>q.\n                       (start A, q) \\<in> steps A u \\<and>\n                       fin A q) \\<longrightarrow>\n                (\\<exists>q.\n                    (start A, q)\n                    \\<in> steps (RegExp2NA.plus A) (concat us) \\<and>\n                    fin A q);\n        \\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> [];\n        (start A, qa) \\<in> steps (RegExp2NA.plus A) (concat us);\n        fin A qa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (case_tac \"u = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> [];\n        (start A, qa) \\<in> steps (RegExp2NA.plus A) (concat us); fin A qa;\n        u = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q\n 2. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> [];\n        (start A, qa) \\<in> steps (RegExp2NA.plus A) (concat us); fin A qa;\n        u \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>qa. (q, qa) \\<in> steps A u \\<and> fin A qa;\n        start A = q; fin A q; us \\<noteq> [];\n        (q, qa) \\<in> steps (RegExp2NA.plus A) (concat us); fin A qa;\n        u = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>qa.\n                            (q, qa)\n                            \\<in> steps (RegExp2NA.plus A)\n                                   (concat us) \\<and>\n                            fin A qa\n 2. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> [];\n        (start A, qa) \\<in> steps (RegExp2NA.plus A) (concat us); fin A qa;\n        u \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (blast intro: steps_plusI fin_steps_plusI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u us q qa.\n       \\<lbrakk>\\<forall>u\\<in>set us.\n                   \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q;\n        (start A, q) \\<in> steps A u; fin A q; us \\<noteq> [];\n        (start A, qa) \\<in> steps (RegExp2NA.plus A) (concat us); fin A qa;\n        u \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q)\n                            \\<in> steps (RegExp2NA.plus A) (concat us) O\n                                  steps (RegExp2NA.plus A) u \\<and>\n                            fin A q", "apply (blast intro: steps_plusI fin_steps_plusI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma accepts_plus[iff]:\n \"accepts (plus A) w = \n (\\<exists>us. us \\<noteq> [] \\<and> w = concat us \\<and> (\\<forall>u \\<in> set us. accepts A u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (RegExp2NA.plus A) w =\n    (\\<exists>us.\n        us \\<noteq> [] \\<and>\n        w = concat us \\<and> (\\<forall>u\\<in>set us. accepts A u))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. accepts (RegExp2NA.plus A) w \\<Longrightarrow>\n    \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and> (\\<forall>u\\<in>set us. accepts A u)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (simp add: accepts_conv_steps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>q.\n       (start A, q) \\<in> steps (RegExp2NA.plus A) w \\<and>\n       fin A q \\<Longrightarrow>\n    \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A u \\<and> fin A q)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>(start A, q) \\<in> steps (RegExp2NA.plus A) w;\n        fin A q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us.\n                            us \\<noteq> [] \\<and>\n                            w = concat us \\<and>\n                            (\\<forall>u\\<in>set us.\n                                \\<exists>q.\n                                   (start A, q) \\<in> steps A u \\<and>\n                                   fin A q)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (drule start_steps_plusD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>fin A q;\n        \\<exists>us v.\n           w = concat us @ v \\<and>\n           Ball (set us) (accepts A) \\<and>\n           (start A, q) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us.\n                            us \\<noteq> [] \\<and>\n                            w = concat us \\<and>\n                            (\\<forall>u\\<in>set us.\n                                \\<exists>q.\n                                   (start A, q) \\<in> steps A u \\<and>\n                                   fin A q)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q us v.\n       \\<lbrakk>fin A q; w = concat us @ v; Ball (set us) (accepts A);\n        (start A, q) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>usa.\n                            usa \\<noteq> [] \\<and>\n                            concat us @ v = concat usa \\<and>\n                            (\\<forall>u\\<in>set usa.\n                                \\<exists>q.\n                                   (start A, q) \\<in> steps A u \\<and>\n                                   fin A q)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (rule_tac x = \"us@[v]\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q us v.\n       \\<lbrakk>fin A q; w = concat us @ v; Ball (set us) (accepts A);\n        (start A, q) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> us @ [v] \\<noteq> [] \\<and>\n                         concat us @ v = concat (us @ [v]) \\<and>\n                         (\\<forall>u\\<in>set (us @ [v]).\n                             \\<exists>q.\n                                (start A, q) \\<in> steps A u \\<and> fin A q)\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (simp add: accepts_conv_steps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q us v.\n       \\<lbrakk>fin A q; w = concat us @ v;\n        \\<forall>x\\<in>set us.\n           \\<exists>q. (start A, q) \\<in> steps A x \\<and> fin A q;\n        (start A, q) \\<in> steps A v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            (start A, q) \\<in> steps A v \\<and> fin A q\n 2. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>us.\n       us \\<noteq> [] \\<and>\n       w = concat us \\<and>\n       (\\<forall>u\\<in>set us. accepts A u) \\<Longrightarrow>\n    accepts (RegExp2NA.plus A) w", "apply (blast intro: steps_star_cycle)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(******************************************************)\n(*                       star                         *)\n(******************************************************)"], ["", "lemma accepts_star:\n \"accepts (star A) w = (\\<exists>us. (\\<forall>u \\<in> set us. accepts A u) \\<and> w = concat us)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (RegExp2NA.star A) w =\n    (\\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us)", "apply(unfold star_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts (or epsilon (RegExp2NA.plus A)) w =\n    (\\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. accepts (or epsilon (RegExp2NA.plus A)) w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 2. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. accepts epsilon w \\<or> accepts (RegExp2NA.plus A) w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 2. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. accepts epsilon w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 2. accepts (RegExp2NA.plus A) w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 3. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply (rule_tac x = \"[]\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. accepts epsilon w \\<Longrightarrow>\n    (\\<forall>u\\<in>set []. accepts A u) \\<and> w = concat []\n 2. accepts (RegExp2NA.plus A) w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 3. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. accepts (RegExp2NA.plus A) w \\<Longrightarrow>\n    \\<exists>us. (\\<forall>u\\<in>set us. accepts A u) \\<and> w = concat us\n 2. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>us.\n       (\\<forall>u\\<in>set us. accepts A u) \\<and>\n       w = concat us \\<Longrightarrow>\n    accepts (or epsilon (RegExp2NA.plus A)) w", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(***** Correctness of r2n *****)"], ["", "lemma accepts_rexp2na:\n \"\\<And>w. accepts (rexp2na r) w = (w : lang r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)", "apply (induct \"r\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>w. accepts (rexp2na Zero) w = (w \\<in> lang Zero)\n 2. \\<And>w. accepts (rexp2na One) w = (w \\<in> lang One)\n 3. \\<And>x w. accepts (rexp2na (Atom x)) w = (w \\<in> lang (Atom x))\n 4. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Plus r1 r2)) w =\n                         (w \\<in> lang (Plus r1 r2))\n 5. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Times r1 r2)) w =\n                         (w \\<in> lang (Times r1 r2))\n 6. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply (simp add: accepts_conv_steps)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>w. accepts (rexp2na One) w = (w \\<in> lang One)\n 2. \\<And>x w. accepts (rexp2na (Atom x)) w = (w \\<in> lang (Atom x))\n 3. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Plus r1 r2)) w =\n                         (w \\<in> lang (Plus r1 r2))\n 4. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Times r1 r2)) w =\n                         (w \\<in> lang (Times r1 r2))\n 5. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x w. accepts (rexp2na (Atom x)) w = (w \\<in> lang (Atom x))\n 2. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Plus r1 r2)) w =\n                         (w \\<in> lang (Plus r1 r2))\n 3. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Times r1 r2)) w =\n                         (w \\<in> lang (Times r1 r2))\n 4. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply (simp add: accepts_atom)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Plus r1 r2)) w =\n                         (w \\<in> lang (Plus r1 r2))\n 2. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Times r1 r2)) w =\n                         (w \\<in> lang (Times r1 r2))\n 3. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r1 r2 w.\n       \\<lbrakk>\\<And>w. accepts (rexp2na r1) w = (w \\<in> lang r1);\n        \\<And>w. accepts (rexp2na r2) w = (w \\<in> lang r2)\\<rbrakk>\n       \\<Longrightarrow> accepts (rexp2na (Times r1 r2)) w =\n                         (w \\<in> lang (Times r1 r2))\n 2. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply (simp add: accepts_conc Regular_Set.conc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r w.\n       (\\<And>w. accepts (rexp2na r) w = (w \\<in> lang r)) \\<Longrightarrow>\n       accepts (rexp2na (Star r)) w = (w \\<in> lang (Star r))", "apply (simp add: accepts_star in_star_iff_concat subset_iff Ball_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}