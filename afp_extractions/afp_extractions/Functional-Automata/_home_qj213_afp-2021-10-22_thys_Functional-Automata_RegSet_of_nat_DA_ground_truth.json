{"file_name": "/home/qj213/afp-2021-10-22/thys/Functional-Automata/RegSet_of_nat_DA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Functional-Automata", "problem_names": ["lemma butlast_empty[iff]:\n  \"(butlast xs = []) = (case xs of [] \\<Rightarrow> True | y#ys \\<Rightarrow> ys=[])\"", "lemma in_set_butlast_concatI:\n \"x:set(butlast xs) \\<Longrightarrow> xs:set xss \\<Longrightarrow> x:set(butlast(concat xss))\"", "lemma decompose[rule_format]:\n \"\\<forall>i. k \\<in> set(trace d i xs) \\<longrightarrow> (\\<exists>pref mids suf.\n  xs = pref @ concat mids @ suf \\<and>\n  deltas d pref i = k \\<and> (\\<forall>n\\<in>set(butlast(trace d i pref)). n \\<noteq> k) \\<and>\n  (\\<forall>mid\\<in>set mids. (deltas d mid k = k) \\<and>\n                  (\\<forall>n\\<in>set(butlast(trace d k mid)). n \\<noteq> k)) \\<and>\n  (\\<forall>n\\<in>set(butlast(trace d k suf)). n \\<noteq> k))\"", "lemma length_trace[simp]: \"\\<And>i. length(trace d i xs) = length xs\"", "lemma deltas_append[simp]:\n  \"\\<And>i. deltas d (xs@ys) i = deltas d ys (deltas d xs i)\"", "lemma trace_append[simp]:\n  \"\\<And>i. trace d i (xs@ys) = trace d i xs @ trace d (deltas d xs i) ys\"", "lemma trace_concat[simp]:\n \"(\\<forall>xs \\<in> set xss. deltas d xs i = i) \\<Longrightarrow>\n  trace d i (concat xss) = concat (map (trace d i) xss)\"", "lemma trace_is_Nil[simp]: \"\\<And>i. (trace d i xs = []) = (xs = [])\"", "lemma trace_is_Cons_conv[simp]:\n \"(trace d i xs = n#ns) =\n  (case xs of [] \\<Rightarrow> False | y#ys \\<Rightarrow> n = d y i \\<and> ns = trace d n ys)\"", "lemma set_trace_conv:\n \"\\<And>i. set(trace d i xs) =\n  (if xs=[] then {} else insert(deltas d xs i)(set(butlast(trace d i xs))))\"", "lemma deltas_concat[simp]:\n \"(\\<forall>mid\\<in>set mids. deltas d mid k = k) \\<Longrightarrow> deltas d (concat mids) k = k\"", "lemma lem: \"[| n < Suc k; n \\<noteq> k |] ==> n < k\"", "lemma regset_spec:\n \"\\<And>i j xs. xs \\<in> regset d i j k =\n        ((\\<forall>n\\<in>set(butlast(trace d i xs)). n < k) \\<and> deltas d xs i = j)\"", "lemma trace_below:\n \"bounded d k \\<Longrightarrow> \\<forall>i. i < k \\<longrightarrow> (\\<forall>n\\<in>set(trace d i xs). n < k)\"", "lemma regset_below:\n \"[| bounded d k; i < k; j < k |] ==>\n  regset d i j k = {xs. deltas d xs i = j}\"", "lemma deltas_below:\n \"\\<And>i. bounded d k \\<Longrightarrow> i < k \\<Longrightarrow> deltas d w i < k\"", "lemma regset_DA_equiv:\n \"[| bounded (next A) k; start A < k; j < k |] ==>\n  w : regset_of_DA A k = accepts A w\""], "translations": [["", "lemma butlast_empty[iff]:\n  \"(butlast xs = []) = (case xs of [] \\<Rightarrow> True | y#ys \\<Rightarrow> ys=[])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (butlast xs = []) =\n    (case xs of [] \\<Rightarrow> True | y # ys \\<Rightarrow> ys = [])", "by (cases xs) simp_all"], ["", "lemma in_set_butlast_concatI:\n \"x:set(butlast xs) \\<Longrightarrow> xs:set xss \\<Longrightarrow> x:set(butlast(concat xss))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set (butlast xs); xs \\<in> set xss\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set (butlast (concat xss))", "apply (induct \"xss\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set (butlast xs); xs \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set (butlast (concat []))\n 2. \\<And>a xss.\n       \\<lbrakk>\\<lbrakk>x \\<in> set (butlast xs); xs \\<in> set xss\\<rbrakk>\n                \\<Longrightarrow> x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs \\<in> set (a # xss)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast (concat (a # xss)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xss.\n       \\<lbrakk>\\<lbrakk>x \\<in> set (butlast xs); xs \\<in> set xss\\<rbrakk>\n                \\<Longrightarrow> x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs \\<in> set (a # xss)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast (concat (a # xss)))", "apply (simp add: butlast_append del: ball_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> ((\\<forall>xs\\<in>set xss.\n                              xs = []) \\<longrightarrow>\n                          x \\<in> set (butlast a)) \\<and>\n                         (\\<not> (\\<forall>xs\\<in>set xss.\n                                     xs = []) \\<longrightarrow>\n                          x \\<in> set a \\<or>\n                          x \\<in> set (butlast (concat xss)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>xs\\<in>set xss.\n                             xs = []) \\<longrightarrow>\n                         x \\<in> set (butlast a)\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss;\n        \\<forall>xs\\<in>set xss. xs = []\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast a)\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs = a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast a)\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast a)\n 3. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast a)\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (subgoal_tac \"xs=[]\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs \\<in> set xss; xs = []\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (butlast a)\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> xs = []\n 3. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); \\<forall>xs\\<in>set xss. xs = [];\n        xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> xs = []\n 2. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xss.\n       \\<lbrakk>xs \\<in> set xss \\<Longrightarrow>\n                x \\<in> set (butlast (concat xss));\n        x \\<in> set (butlast xs); xs = a \\<or> xs \\<in> set xss\\<rbrakk>\n       \\<Longrightarrow> \\<not> (\\<forall>xs\\<in>set xss.\n                                    xs = []) \\<longrightarrow>\n                         x \\<in> set a \\<or>\n                         x \\<in> set (butlast (concat xss))", "apply (blast dest: in_set_butlastD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* Regular sets *)\n\n(* The main lemma:\n   how to decompose a trace into a prefix, a list of loops and a suffix.\n*)"], ["", "lemma decompose[rule_format]:\n \"\\<forall>i. k \\<in> set(trace d i xs) \\<longrightarrow> (\\<exists>pref mids suf.\n  xs = pref @ concat mids @ suf \\<and>\n  deltas d pref i = k \\<and> (\\<forall>n\\<in>set(butlast(trace d i pref)). n \\<noteq> k) \\<and>\n  (\\<forall>mid\\<in>set mids. (deltas d mid k = k) \\<and>\n                  (\\<forall>n\\<in>set(butlast(trace d k mid)). n \\<noteq> k)) \\<and>\n  (\\<forall>n\\<in>set(butlast(trace d k suf)). n \\<noteq> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       k \\<in> set (trace d i xs) \\<longrightarrow>\n       (\\<exists>pref mids suf.\n           xs = pref @ concat mids @ suf \\<and>\n           deltas d pref i = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d i pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)). n \\<noteq> k))", "apply (induct \"xs\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i.\n       k \\<in> set (trace d i []) \\<longrightarrow>\n       (\\<exists>pref mids suf.\n           [] = pref @ concat mids @ suf \\<and>\n           deltas d pref i = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d i pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)). n \\<noteq> k))\n 2. \\<And>a xs.\n       \\<forall>i.\n          k \\<in> set (trace d i xs) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              xs = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                  n \\<noteq> k)) \\<Longrightarrow>\n       \\<forall>i.\n          k \\<in> set (trace d i (a # xs)) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              a # xs = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)). n \\<noteq> k))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<forall>i.\n          k \\<in> set (trace d i xs) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              xs = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                  n \\<noteq> k)) \\<Longrightarrow>\n       \\<forall>i.\n          k \\<in> set (trace d i (a # xs)) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              a # xs = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)). n \\<noteq> k))", "apply (rename_tac a as)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as.\n       \\<forall>i.\n          k \\<in> set (trace d i as) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              as = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                  n \\<noteq> k)) \\<Longrightarrow>\n       \\<forall>i.\n          k \\<in> set (trace d i (a # as)) \\<longrightarrow>\n          (\\<exists>pref mids suf.\n              a # as = pref @ concat mids @ suf \\<and>\n              deltas d pref i = k \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                  n \\<noteq> k) \\<and>\n              (\\<forall>mid\\<in>set mids.\n                  deltas d mid k = k \\<and>\n                  (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                      n \\<noteq> k)) \\<and>\n              (\\<forall>n\\<in>set (butlast (trace d k suf)). n \\<noteq> k))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (case_tac \"d a i = k\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i = k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"[a]\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i = k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            a # as = [a] @ concat mids @ suf \\<and>\n                            deltas d [a] i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i [a])).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (case_tac \"k : set(trace d (d a i) as)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<in> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        k \\<in> set (trace d (?i16 a as i) as) \\<longrightarrow>\n        (\\<exists>pref mids suf.\n            as = pref @ concat mids @ suf \\<and>\n            deltas d pref (?i16 a as i) = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d (?i16 a as i) pref)).\n                n \\<noteq> k) \\<and>\n            (\\<forall>mid\\<in>set mids.\n                deltas d mid k = k \\<and>\n                (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                    n \\<noteq> k)) \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                n \\<noteq> k))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule impE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> k \\<in> set (trace d (?i16 a as i) as)\n 2. \\<And>a as i.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        \\<exists>pref mids suf.\n           as = pref @ concat mids @ suf \\<and>\n           deltas d pref (?i16 a as i) = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (?i16 a as i) pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)).\n               n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 4. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        \\<exists>pref mids suf.\n           as = pref @ concat mids @ suf \\<and>\n           deltas d pref (d a i) = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)).\n               n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule exE)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"pref#mids\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>suf.\n                            as = concat (pref # mids) @ suf \\<and>\n                            (\\<forall>mid\\<in>set (pref # mids).\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"suf\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>d a i = k; k \\<in> set (trace d (d a i) as);\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> as = concat (pref # mids) @ suf \\<and>\n                         (\\<forall>mid\\<in>set (pref # mids).\n                             deltas d mid k = k \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                                 n \\<noteq> k)) \\<and>\n                         (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                             n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 3. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            as = concat mids @ suf \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"[]\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>suf.\n                            as = concat [] @ suf \\<and>\n                            (\\<forall>mid\\<in>set [].\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"as\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d (d a i) as)\\<rbrakk>\n       \\<Longrightarrow> as = concat [] @ as \\<and>\n                         (\\<forall>mid\\<in>set [].\n                             deltas d mid k = k \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                                 n \\<noteq> k)) \\<and>\n                         (\\<forall>n\\<in>set (butlast (trace d k as)).\n                             n \\<noteq> k)\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        d a i = k; k \\<notin> set (trace d k as)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set (butlast (trace d k as)).\n                            n \\<noteq> k\n 2. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (blast dest: in_set_butlastD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d i (a # as)); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i.\n       \\<lbrakk>\\<forall>i.\n                   k \\<in> set (trace d i as) \\<longrightarrow>\n                   (\\<exists>pref mids suf.\n                       as = pref @ concat mids @ suf \\<and>\n                       deltas d pref i = k \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                           n \\<noteq> k) \\<and>\n                       (\\<forall>mid\\<in>set mids.\n                           deltas d mid k = k \\<and>\n                           (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                               n \\<noteq> k)) \\<and>\n                       (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                           n \\<noteq> k));\n        k \\<in> set (trace d (d a i) as); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        k \\<in> set (trace d (?i59 a as i) as) \\<longrightarrow>\n        (\\<exists>pref mids suf.\n            as = pref @ concat mids @ suf \\<and>\n            deltas d pref (?i59 a as i) = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d (?i59 a as i) pref)).\n                n \\<noteq> k) \\<and>\n            (\\<forall>mid\\<in>set mids.\n                deltas d mid k = k \\<and>\n                (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                    n \\<noteq> k)) \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                n \\<noteq> k))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as i.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k\\<rbrakk>\n       \\<Longrightarrow> k \\<in> set (trace d (?i59 a as i) as)\n 2. \\<And>a as i.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        \\<exists>pref mids suf.\n           as = pref @ concat mids @ suf \\<and>\n           deltas d pref (?i59 a as i) = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (?i59 a as i) pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)).\n               n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        \\<exists>pref mids suf.\n           as = pref @ concat mids @ suf \\<and>\n           deltas d pref (d a i) = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)).\n               n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>pref mids suf.\n                            a # as = pref @ concat mids @ suf \\<and>\n                            deltas d pref i = k \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"a#pref\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mids suf.\n                            a # as = (a # pref) @ concat mids @ suf \\<and>\n                            deltas d (a # pref) i = k \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d i (a # pref))).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"mids\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>suf.\n                            a # as = (a # pref) @ concat mids @ suf \\<and>\n                            deltas d (a # pref) i = k \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d i (a # pref))).\n                                n \\<noteq> k) \\<and>\n                            (\\<forall>mid\\<in>set mids.\n                                deltas d mid k = k \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k mid)).\n                                    n \\<noteq> k)) \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                                n \\<noteq> k)", "apply (rule_tac x = \"suf\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as i pref mids suf.\n       \\<lbrakk>k \\<in> set (trace d (d a i) as); d a i \\<noteq> k;\n        as = pref @ concat mids @ suf \\<and>\n        deltas d pref (d a i) = k \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d (d a i) pref)).\n            n \\<noteq> k) \\<and>\n        (\\<forall>mid\\<in>set mids.\n            deltas d mid k = k \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                n \\<noteq> k)) \\<and>\n        (\\<forall>n\\<in>set (butlast (trace d k suf)).\n            n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> a # as = (a # pref) @ concat mids @ suf \\<and>\n                         deltas d (a # pref) i = k \\<and>\n                         (\\<forall>n\\<in>set\n    (butlast (trace d i (a # pref))).\n                             n \\<noteq> k) \\<and>\n                         (\\<forall>mid\\<in>set mids.\n                             deltas d mid k = k \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                                 n \\<noteq> k)) \\<and>\n                         (\\<forall>n\\<in>set (butlast (trace d k suf)).\n                             n \\<noteq> k)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma length_trace[simp]: \"\\<And>i. length(trace d i xs) = length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. length (trace d i xs) = length xs", "by (induct \"xs\") simp_all"], ["", "lemma deltas_append[simp]:\n  \"\\<And>i. deltas d (xs@ys) i = deltas d ys (deltas d xs i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. deltas d (xs @ ys) i = deltas d ys (deltas d xs i)", "by (induct \"xs\") simp_all"], ["", "lemma trace_append[simp]:\n  \"\\<And>i. trace d i (xs@ys) = trace d i xs @ trace d (deltas d xs i) ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. trace d i (xs @ ys) = trace d i xs @ trace d (deltas d xs i) ys", "by (induct \"xs\") simp_all"], ["", "lemma trace_concat[simp]:\n \"(\\<forall>xs \\<in> set xss. deltas d xs i = i) \\<Longrightarrow>\n  trace d i (concat xss) = concat (map (trace d i) xss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs\\<in>set xss. deltas d xs i = i \\<Longrightarrow>\n    trace d i (concat xss) = concat (map (trace d i) xss)", "by (induct \"xss\") simp_all"], ["", "lemma trace_is_Nil[simp]: \"\\<And>i. (trace d i xs = []) = (xs = [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. (trace d i xs = []) = (xs = [])", "by (case_tac \"xs\") simp_all"], ["", "lemma trace_is_Cons_conv[simp]:\n \"(trace d i xs = n#ns) =\n  (case xs of [] \\<Rightarrow> False | y#ys \\<Rightarrow> n = d y i \\<and> ns = trace d n ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (trace d i xs = n # ns) =\n    (case xs of [] \\<Rightarrow> False\n     | y # ys \\<Rightarrow> n = d y i \\<and> ns = trace d n ys)", "apply (case_tac \"xs\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    (trace d i xs = n # ns) =\n    (case xs of [] \\<Rightarrow> False\n     | y # ys \\<Rightarrow> n = d y i \\<and> ns = trace d n ys)\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       (trace d i xs = n # ns) =\n       (case xs of [] \\<Rightarrow> False\n        | y # ys \\<Rightarrow> n = d y i \\<and> ns = trace d n ys)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       (d a i = n \\<and> trace d (d a i) list = ns) =\n       (n = d a i \\<and> ns = trace d n list)", "apply (blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma set_trace_conv:\n \"\\<And>i. set(trace d i xs) =\n  (if xs=[] then {} else insert(deltas d xs i)(set(butlast(trace d i xs))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       set (trace d i xs) =\n       (if xs = [] then {}\n        else insert (deltas d xs i) (set (butlast (trace d i xs))))", "apply (induct \"xs\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       set (trace d i []) =\n       (if [] = [] then {}\n        else insert (deltas d [] i) (set (butlast (trace d i []))))\n 2. \\<And>a xs i.\n       (\\<And>i.\n           set (trace d i xs) =\n           (if xs = [] then {}\n            else insert (deltas d xs i)\n                  (set (butlast (trace d i xs))))) \\<Longrightarrow>\n       set (trace d i (a # xs)) =\n       (if a # xs = [] then {}\n        else insert (deltas d (a # xs) i)\n              (set (butlast (trace d i (a # xs)))))", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       (\\<And>i.\n           set (trace d i xs) =\n           (if xs = [] then {}\n            else insert (deltas d xs i)\n                  (set (butlast (trace d i xs))))) \\<Longrightarrow>\n       set (trace d i (a # xs)) =\n       (if a # xs = [] then {}\n        else insert (deltas d (a # xs) i)\n              (set (butlast (trace d i (a # xs)))))", "apply (simp add: insert_commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma deltas_concat[simp]:\n \"(\\<forall>mid\\<in>set mids. deltas d mid k = k) \\<Longrightarrow> deltas d (concat mids) k = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mid\\<in>set mids. deltas d mid k = k \\<Longrightarrow>\n    deltas d (concat mids) k = k", "by (induct mids) simp_all"], ["", "lemma lem: \"[| n < Suc k; n \\<noteq> k |] ==> n < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < Suc k; n \\<noteq> k\\<rbrakk> \\<Longrightarrow> n < k", "by arith"], ["", "lemma regset_spec:\n \"\\<And>i j xs. xs \\<in> regset d i j k =\n        ((\\<forall>n\\<in>set(butlast(trace d i xs)). n < k) \\<and> deltas d xs i = j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j xs.\n       (xs \\<in> regset d i j k) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n        deltas d xs i = j)", "apply (induct k)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j xs.\n       (xs \\<in> regset d i j 0) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < 0) \\<and>\n        deltas d xs i = j)\n 2. \\<And>k i j xs.\n       (\\<And>i j xs.\n           (xs \\<in> regset d i j k) =\n           ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n            deltas d xs i = j)) \\<Longrightarrow>\n       (xs \\<in> regset d i j (Suc k)) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j)", "apply(simp split: list.split)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j xs.\n       \\<forall>x21 x22.\n          xs = x21 # x22 \\<longrightarrow>\n          (i = j \\<longrightarrow>\n           (x22 = [] \\<and> d x21 j = j) =\n           (x22 = [] \\<and> deltas d x22 (d x21 j) = j)) \\<and>\n          (i \\<noteq> j \\<longrightarrow>\n           (x22 = [] \\<and> d x21 i = j) =\n           (x22 = [] \\<and> deltas d x22 (d x21 i) = j))\n 2. \\<And>k i j xs.\n       (\\<And>i j xs.\n           (xs \\<in> regset d i j k) =\n           ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n            deltas d xs i = j)) \\<Longrightarrow>\n       (xs \\<in> regset d i j (Suc k)) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j)", "apply(fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       (\\<And>i j xs.\n           (xs \\<in> regset d i j k) =\n           ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n            deltas d xs i = j)) \\<Longrightarrow>\n       (xs \\<in> regset d i j (Suc k)) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j)", "apply (simp add: conc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       (\\<And>i j xs.\n           (xs \\<in> regset d i j k) =\n           ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n            deltas d xs i = j)) \\<Longrightarrow>\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n        deltas d xs i = j \\<or>\n        (\\<exists>xsa ys.\n            xs = xsa @ ys \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d i xsa)). n < k) \\<and>\n            deltas d xsa i = k \\<and>\n            (\\<exists>xs ysa.\n                ys = xs @ ysa \\<and>\n                xs \\<in> star (regset d k k k) \\<and>\n                (\\<forall>n\\<in>set (butlast (trace d k ysa)). n < k) \\<and>\n                deltas d ysa k = j))) =\n       ((\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n        deltas d xs i = j \\<or>\n        (\\<exists>xsa ys.\n            xs = xsa @ ys \\<and>\n            (\\<forall>n\\<in>set (butlast (trace d i xsa)). n < k) \\<and>\n            deltas d xsa i = k \\<and>\n            (\\<exists>xs ysa.\n                ys = xs @ ysa \\<and>\n                xs \\<in> star (regset d k k k) \\<and>\n                (\\<forall>n\\<in>set (butlast (trace d k ysa)). n < k) \\<and>\n                deltas d ysa k = j))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < Suc k) \\<and>\n                         deltas d xs i = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < Suc k) \\<and>\n                         deltas d xs i = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        \\<exists>xsa ys.\n           xs = xsa @ ys \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d i xsa)). n < k) \\<and>\n           deltas d xsa i = k \\<and>\n           (\\<exists>xs ysa.\n               ys = xs @ ysa \\<and>\n               xs \\<in> star (regset d k k k) \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k ysa)). n < k) \\<and>\n               deltas d ysa k = j)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < Suc k) \\<and>\n                         deltas d xs i = j\n 3. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        \\<exists>xsa ys.\n           xs = xsa @ ys \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d i xsa)). n < k) \\<and>\n           deltas d xsa i = k \\<and>\n           (\\<exists>xs ysa.\n               ys = xs @ ysa \\<and>\n               xs \\<in> star (regset d k k k) \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k ysa)). n < k) \\<and>\n               deltas d ysa k = j)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < Suc k) \\<and>\n                         deltas d xs i = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (erule exE conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ ys; \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa; xsb \\<in> star (regset d k k k);\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < Suc k) \\<and>\n                         deltas d xs i = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa; xsb \\<in> star (regset d k k k);\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set\n    (butlast\n      (trace d i xsa @ trace d k xsb @ trace d (deltas d xsb k) ysa)).\n                             n < Suc k) \\<and>\n                         deltas d ysa (deltas d xsb k) = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (subgoal_tac\n      \"(\\<forall>m\\<in>set(butlast(trace d k xsb)). m < Suc k) \\<and> deltas d xsb k = k\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa; xsb \\<in> star (regset d k k k);\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j;\n        (\\<forall>m\\<in>set (butlast (trace d k xsb)). m < Suc k) \\<and>\n        deltas d xsb k = k\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set\n    (butlast\n      (trace d i xsa @ trace d k xsb @ trace d (deltas d xsb k) ysa)).\n                             n < Suc k) \\<and>\n                         deltas d ysa (deltas d xsb k) = j\n 2. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa; xsb \\<in> star (regset d k k k);\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<in>set (butlast (trace d k xsb)).\n                             m < Suc k) \\<and>\n                         deltas d xsb k = k\n 3. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (simp add: set_trace_conv butlast_append ball_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa; xsb \\<in> star (regset d k k k);\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<in>set (butlast (trace d k xsb)).\n                             m < Suc k) \\<and>\n                         deltas d xsb k = k\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (erule star_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<in>set (butlast (trace d k [])).\n                             m < Suc k) \\<and>\n                         deltas d [] k = k\n 2. \\<And>k i j xs xsa ys xsb ysa u v.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j; u \\<in> regset d k k k;\n        v \\<in> star (regset d k k k);\n        (\\<forall>m\\<in>set (butlast (trace d k v)). m < Suc k) \\<and>\n        deltas d v k = k\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<in>set (butlast (trace d k (u @ v))).\n                             m < Suc k) \\<and>\n                         deltas d (u @ v) k = k\n 3. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs xsa ys xsb ysa u v.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        xs = xsa @ xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d i xsa)). n < k;\n        deltas d xsa i = k; ys = xsb @ ysa;\n        \\<forall>n\\<in>set (butlast (trace d k ysa)). n < k;\n        deltas d ysa k = j; u \\<in> regset d k k k;\n        v \\<in> star (regset d k k k);\n        (\\<forall>m\\<in>set (butlast (trace d k v)). m < Suc k) \\<and>\n        deltas d v k = k\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<in>set (butlast (trace d k (u @ v))).\n                             m < Suc k) \\<and>\n                         deltas d (u @ v) k = k\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (simp add: set_trace_conv butlast_append ball_Un)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (case_tac \"k : set(butlast(trace d i xs))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<in> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<notin> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<notin> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<in> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<notin> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j\n 2. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<in> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (blast intro:lem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<in> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                             n < k) \\<and>\n                         deltas d xs i = j \\<or>\n                         (\\<exists>xsa ys.\n                             xs = xsa @ ys \\<and>\n                             (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                 n < k) \\<and>\n                             deltas d xsa i = k \\<and>\n                             (\\<exists>xs ysa.\n                                 ys = xs @ ysa \\<and>\n                                 xs \\<in> star (regset d k k k) \\<and>\n                                 (\\<forall>n\n     \\<in>set (butlast (trace d k ysa)).\n                                     n < k) \\<and>\n                                 deltas d ysa k = j))", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        k \\<in> set (butlast (trace d i xs))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs = xsa @ ys \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                n < k) \\<and>\n                            deltas d xsa i = k \\<and>\n                            (\\<exists>xs ysa.\n                                ys = xs @ ysa \\<and>\n                                xs \\<in> star (regset d k k k) \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k ysa)).\n                                    n < k) \\<and>\n                                deltas d ysa k = j)", "apply (drule in_set_butlastD[THEN decompose])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs.\n       \\<lbrakk>\\<And>i j xs.\n                   (xs \\<in> regset d i j k) =\n                   ((\\<forall>n\\<in>set (butlast (trace d i xs)).\n                        n < k) \\<and>\n                    deltas d xs i = j);\n        (\\<forall>n\\<in>set (butlast (trace d i xs)). n < Suc k) \\<and>\n        deltas d xs i = j;\n        \\<exists>pref mids suf.\n           xs = pref @ concat mids @ suf \\<and>\n           deltas d pref i = k \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d i pref)).\n               n \\<noteq> k) \\<and>\n           (\\<forall>mid\\<in>set mids.\n               deltas d mid k = k \\<and>\n               (\\<forall>n\\<in>set (butlast (trace d k mid)).\n                   n \\<noteq> k)) \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d k suf)).\n               n \\<noteq> k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xsa ys.\n                            xs = xsa @ ys \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i xsa)).\n                                n < k) \\<and>\n                            deltas d xsa i = k \\<and>\n                            (\\<exists>xs ysa.\n                                ys = xs @ ysa \\<and>\n                                xs \\<in> star (regset d k k k) \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d k ysa)).\n                                    n < k) \\<and>\n                                deltas d ysa k = j)", "apply (clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i (pref @ concat mids @ suf))).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            pref @ concat mids @ suf = xs @ ys \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i xs)).\n                                n < deltas d pref i) \\<and>\n                            deltas d xs i = deltas d pref i \\<and>\n                            (\\<exists>xs ysa.\n                                ys = xs @ ysa \\<and>\n                                xs \\<in> star\n    (regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d (deltas d pref i) ysa)).\n                                    n < deltas d pref i) \\<and>\n                                deltas d ysa (deltas d pref i) =\n                                deltas d (pref @ concat mids @ suf) i)", "apply (rule_tac x = \"pref\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k i j xs pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i (pref @ concat mids @ suf))).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            pref @ concat mids @ suf = pref @ ys \\<and>\n                            (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                                n < deltas d pref i) \\<and>\n                            deltas d pref i = deltas d pref i \\<and>\n                            (\\<exists>xs ysa.\n                                ys = xs @ ysa \\<and>\n                                xs \\<in> star\n    (regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                                (\\<forall>n\n    \\<in>set (butlast (trace d (deltas d pref i) ysa)).\n                                    n < deltas d pref i) \\<and>\n                                deltas d ysa (deltas d pref i) =\n                                deltas d (pref @ concat mids @ suf) i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n\\<in>set (butlast (trace d i pref)).\n                             n < deltas d pref i) \\<and>\n                         (\\<exists>xs ys.\n                             concat mids @ suf = xs @ ys \\<and>\n                             xs \\<in> star\n (regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                             (\\<forall>n\n \\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                 n < deltas d pref i) \\<and>\n                             deltas d ys (deltas d pref i) =\n                             deltas d suf (deltas d pref i))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set (butlast (trace d i pref)).\n                            n < deltas d pref i\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n < deltas d pref i\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply (rule lem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> deltas d pref i\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> deltas d pref i\n 2. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply (drule bspec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> ?n195 i pref mids suf n\n                         \\<in> set (butlast\n                                     (trace d i pref @\nconcat (map (trace d (deltas d pref i)) mids) @\ntrace d (deltas d pref i) suf))\n 2. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref));\n        ?n195 i pref mids suf n < Suc (deltas d pref i)\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref));\n        ?n195 i pref mids suf n < Suc (deltas d pref i)\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> ?n195 i pref mids suf n\n                         \\<in> set (butlast\n                                     (trace d i pref @\nconcat (map (trace d (deltas d pref i)) mids) @\ntrace d (deltas d pref i) suf))\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d i pref))\\<rbrakk>\n       \\<Longrightarrow> n \\<in> set (butlast\n (trace d i pref @\n  concat (map (trace d (deltas d pref i)) mids) @\n  trace d (deltas d pref i) suf))\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs ys.\n                            concat mids @ suf = xs @ ys \\<and>\n                            xs \\<in> star\n(regset d (deltas d pref i) (deltas d pref i) (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply (rule_tac x = \"concat mids\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            concat mids @ suf = concat mids @ ys \\<and>\n                            concat mids\n                            \\<in> star\n                                   (regset d (deltas d pref i)\n                                     (deltas d pref i)\n                                     (deltas d pref i)) \\<and>\n                            (\\<forall>n\n\\<in>set (butlast (trace d (deltas d pref i) ys)).\n                                n < deltas d pref i) \\<and>\n                            deltas d ys (deltas d pref i) =\n                            deltas d suf (deltas d pref i)", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> concat mids\n                         \\<in> star\n                                (regset d (deltas d pref i)\n                                  (deltas d pref i)\n                                  (deltas d pref i)) \\<and>\n                         (\\<forall>n\\<in>set\n    (butlast (trace d (deltas d pref i) suf)).\n                             n < deltas d pref i)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> concat mids\n                         \\<in> star\n                                (regset d (deltas d pref i)\n                                  (deltas d pref i) (deltas d pref i))\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (rule concat_in_star)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> set mids\n                         \\<subseteq> regset d (deltas d pref i)\n(deltas d pref i) (deltas d pref i)\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (clarsimp simp: subset_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n < deltas d pref i\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (rule lem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> deltas d pref i\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> deltas d pref i\n 2. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (drule bspec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> ?n212 i pref mids suf t n\n                         \\<in> set (butlast\n                                     (trace d i pref @\nconcat (map (trace d (deltas d pref i)) mids) @\ntrace d (deltas d pref i) suf))\n 2. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t));\n        ?n212 i pref mids suf t n < Suc (deltas d pref i)\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t));\n        ?n212 i pref mids suf t n < Suc (deltas d pref i)\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> ?n212 i pref mids suf t n\n                         \\<in> set (butlast\n                                     (trace d i pref @\nconcat (map (trace d (deltas d pref i)) mids) @\ntrace d (deltas d pref i) suf))\n 3. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf t n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        t \\<in> set mids;\n        n \\<in> set (butlast (trace d (deltas d pref i) t))\\<rbrakk>\n       \\<Longrightarrow> n \\<in> set (butlast\n (trace d i pref @\n  concat (map (trace d (deltas d pref i)) mids) @\n  trace d (deltas d pref i) suf))\n 2. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (simp add: image_eqI in_set_butlast_concatI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n\\<in>set\n   (butlast (trace d (deltas d pref i) suf)).\n                            n < deltas d pref i", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d (deltas d pref i) suf))\\<rbrakk>\n       \\<Longrightarrow> n < deltas d pref i", "apply (rule lem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d (deltas d pref i) suf))\\<rbrakk>\n       \\<Longrightarrow> n < Suc (deltas d pref i)\n 2. \\<And>i pref mids suf n.\n       \\<lbrakk>\\<And>ia j xs.\n                   (xs \\<in> regset d ia j (deltas d pref i)) =\n                   ((\\<forall>n\\<in>set (butlast (trace d ia xs)).\n                        n < deltas d pref i) \\<and>\n                    deltas d xs ia = j);\n        \\<forall>n\\<in>set (butlast\n                             (trace d i pref @\n                              concat\n                               (map (trace d (deltas d pref i)) mids) @\n                              trace d (deltas d pref i) suf)).\n           n < Suc (deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d i pref)).\n           n \\<noteq> deltas d pref i;\n        \\<forall>mid\\<in>set mids.\n           deltas d mid (deltas d pref i) = deltas d pref i \\<and>\n           (\\<forall>n\\<in>set (butlast (trace d (deltas d pref i) mid)).\n               n \\<noteq> deltas d pref i);\n        \\<forall>n\\<in>set (butlast (trace d (deltas d pref i) suf)).\n           n \\<noteq> deltas d pref i;\n        n \\<in> set (butlast (trace d (deltas d pref i) suf))\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> deltas d pref i", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trace_below:\n \"bounded d k \\<Longrightarrow> \\<forall>i. i < k \\<longrightarrow> (\\<forall>n\\<in>set(trace d i xs). n < k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded d k \\<Longrightarrow>\n    \\<forall>i<k. \\<forall>n\\<in>set (trace d i xs). n < k", "apply (unfold bounded_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n<k. \\<forall>x. d x n < k \\<Longrightarrow>\n    \\<forall>i<k. \\<forall>n\\<in>set (trace d i xs). n < k", "apply (induct \"xs\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>n<k. \\<forall>x. d x n < k \\<Longrightarrow>\n    \\<forall>i<k. \\<forall>n\\<in>set (trace d i []). n < k\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k \\<Longrightarrow>\n                \\<forall>i<k. \\<forall>n\\<in>set (trace d i xs). n < k;\n        \\<forall>n<k. \\<forall>x. d x n < k\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i<k.\n                            \\<forall>n\\<in>set (trace d i (a # xs)). n < k", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k \\<Longrightarrow>\n                \\<forall>i<k. \\<forall>n\\<in>set (trace d i xs). n < k;\n        \\<forall>n<k. \\<forall>x. d x n < k\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i<k.\n                            \\<forall>n\\<in>set (trace d i (a # xs)). n < k", "apply (simp (no_asm))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k \\<Longrightarrow>\n                \\<forall>i<k. \\<forall>n\\<in>set (trace d i xs). n < k;\n        \\<forall>n<k. \\<forall>x. d x n < k\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i<k.\n                            d a i < k \\<and>\n                            (\\<forall>n\\<in>set (trace d (d a i) xs). n < k)", "apply (blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma regset_below:\n \"[| bounded d k; i < k; j < k |] ==>\n  regset d i j k = {xs. deltas d xs i = j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bounded d k; i < k; j < k\\<rbrakk>\n    \\<Longrightarrow> regset d i j k = {xs. deltas d xs i = j}", "apply (rule set_eqI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>bounded d k; i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> (x \\<in> regset d i j k) =\n                         (x \\<in> {xs. deltas d xs i = j})", "apply (simp add: regset_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>bounded d k; i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> ((\\<forall>n\\<in>set (butlast (trace d i x)).\n                              n < k) \\<and>\n                          deltas d x i = j) =\n                         (deltas d x i = j)", "apply (blast dest: trace_below in_set_butlastD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma deltas_below:\n \"\\<And>i. bounded d k \\<Longrightarrow> i < k \\<Longrightarrow> deltas d w i < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>bounded d k; i < k\\<rbrakk>\n       \\<Longrightarrow> deltas d w i < k", "apply (unfold bounded_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k; i < k\\<rbrakk>\n       \\<Longrightarrow> deltas d w i < k", "apply (induct \"w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k; i < k\\<rbrakk>\n       \\<Longrightarrow> deltas d [] i < k\n 2. \\<And>a w i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>\\<forall>n<k. \\<forall>x. d x n < k;\n                    i < k\\<rbrakk>\n                   \\<Longrightarrow> deltas d w i < k;\n        \\<forall>n<k. \\<forall>x. d x n < k; i < k\\<rbrakk>\n       \\<Longrightarrow> deltas d (a # w) i < k", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma regset_DA_equiv:\n \"[| bounded (next A) k; start A < k; j < k |] ==>\n  w : regset_of_DA A k = accepts A w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bounded (next A) k; start A < k; j < k\\<rbrakk>\n    \\<Longrightarrow> (w \\<in> regset_of_DA A k) = accepts A w", "apply(unfold regset_of_DA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bounded (next A) k; start A < k; j < k\\<rbrakk>\n    \\<Longrightarrow> (w \\<in> (\\<Union>j\\<in>{j. j < k \\<and> fin A j}.\n                                   regset (next A) (start A) j k)) =\n                      accepts A w", "apply (simp cong: conj_cong\n            add: regset_below deltas_below accepts_def delta_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}