{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/Floyd_Warshall.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma distinct_list_single_elem_decomp: \"{xs. set xs \\<subseteq> {0} \\<and> distinct xs} = {[], [0]}\"", "lemma cnt_rev: \"cnt x (rev xs) = cnt x xs\"", "lemma remove_cycles_removes: \"cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)\"", "lemma remove_cycles_id: \"x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs\"", "lemma remove_cycles_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs\"", "lemma remove_cycles_ends_cycle: \"remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow> x \\<in> set xs\"", "lemma remove_cycles_begins_with: \"x \\<in> set xs \\<Longrightarrow> \\<exists> zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\"", "lemma remove_cycles_self:\n  \"x \\<in> set xs \\<Longrightarrow> remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\"", "lemma remove_cycles_one: \"remove_cycles (as @ x # xs) x ys = remove_cycles (x#xs) x ys\"", "lemma remove_cycles_cycles:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> xxs as. as @ concat (map (\\<lambda> xs. x # xs) xxs) @ remove_cycles xs x ys = xs \\<and> x \\<notin> set as\"", "lemma start_remove_decomp:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> as bs. xs = as @ x # bs \\<and> start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]\"", "lemma start_remove_removes: \"cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)\"", "lemma start_remove_id[simp]: \"x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs\"", "lemma start_remove_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs\"", "lemma cnt_remove_all_mono:\"cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)\"", "lemma cnt_remove_all_cycles: \"x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1\"", "lemma cnt_mono:\n  \"cnt a (b # xs) \\<le> cnt a (b # c # xs)\"", "lemma cnt_distinct_intro: \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\"", "lemma remove_cycles_subs:\n  \"set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys\"", "lemma start_remove_subs:\n  \"set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys\"", "lemma remove_all_cycles_subs:\n  \"set (remove_all_cycles xs ys) \\<subseteq> set ys\"", "lemma remove_all_cycles_distinct: \"set ys \\<subseteq> set xs \\<Longrightarrow> distinct (remove_all_cycles xs ys)\"", "lemma distinct_remove_cycles_inv: \"distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)\"", "lemma remove_all_distinct:\n  \"distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)\"", "lemma remove_all_removes:\n  \"x \\<notin> set (remove_all x xs)\"", "lemma remove_all_subs:\n  \"set (remove_all x xs) \\<subseteq> set xs\"", "lemma remove_all_rev_distinct: \"distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)\"", "lemma remove_all_rev_removes: \"x \\<notin> set (remove_all_rev x xs)\"", "lemma remove_all_rev_subs: \"set (remove_all_rev x xs) \\<subseteq> set xs\"", "lemma rem_cycles_distinct': \"i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)\"", "lemma rem_cycles_removes_last: \"j \\<notin> set (rem_cycles i j xs)\"", "lemma rem_cycles_distinct: \"distinct (rem_cycles i j xs)\"", "lemma rem_cycles_subs: \"set (rem_cycles i j xs) \\<subseteq> set xs\"", "lemmas assoc = add.assoc", "lemma fw_upd_mono:\n  \"fw_upd m k i j i' j' \\<le> m i' j'\"", "lemma fw_invariant_aux_1:\n  \"j'' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'\"", "lemma fw_invariant_aux_2:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> i'' \\<le> i \\<Longrightarrow> j'' \\<le> j\n   \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\"", "lemma fw_invariant:\n  \"k' \\<le> k \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> j'' \\<le> j \\<Longrightarrow> i'' \\<le> i\n   \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\"", "lemma single_row_inv:\n  \"j' < j \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> fw m n k i' j i' j' = fw m n k i' j' i' j'\"", "lemma single_iteration_inv':\n  \"i' < i \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'\"", "lemma single_iteration_inv:\n  \"i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n\\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'\"", "lemma fw_innermost_id:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n 0 i' j' i j = m i j\"", "lemma fw_middle_id:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n 0 i' j' i j = m i j\"", "lemma fw_outermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\"", "lemma Suc_innermost_id1:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j\"", "lemma Suc_innermost_id2:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j\"", "lemma Suc_innermost_id1':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j\"", "lemma Suc_innermost_id2':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j\"", "lemma Suc_innermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\"", "lemma fw_mono':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n k i j i j \\<le> m i j\"", "lemma fw_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\"", "lemma add_mono_neutr:\n  assumes \"\\<one> \\<le> b\"\n  shows \"a \\<le> a + b\"", "lemma add_mono_neutl:\n  assumes \"\\<one> \\<le> b\"\n  shows \"a \\<le> b + a\"", "lemma fw_step_0:\n  \"m 0 0 \\<ge> \\<one> \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\"", "lemma fw_step_Suc:\n  \"\\<forall> k'\\<le>n. fw m n k n n k' k' \\<ge> \\<one> \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> Suc k \\<le> n\n    \\<Longrightarrow> fw m n (Suc k) i j i j = min (fw m n k n n i j) (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)\"", "lemma len_decomp: \"xs = ys @ y # zs \\<Longrightarrow> len m x z xs = len m x y ys + len m y z zs\"", "lemma len_comp: \"len m a c (xs @ b # ys) = len m a b xs + len m b c ys\"", "lemma remove_cycles_neg_cycles_aux:\n  fixes i xs ys\n  defines \"xs' \\<equiv> i # ys\"\n  assumes \"i \\<notin> set ys\"\n  assumes \"i \\<in> set xs\"\n  assumes \"xs = as @ concat (map ((#) i) xss) @ xs'\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\"", "lemma add_lt_neutral: \"a + b < b \\<Longrightarrow> a < \\<one>\"", "lemma remove_cycles_neg_cycles_aux':\n  fixes j xs ys\n  assumes \"j \\<notin> set ys\"\n  assumes \"j \\<in> set xs\"\n  assumes \"xs = ys @ j # concat (map (\\<lambda> xs. xs @ [j]) xss) @ as\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\"", "lemma add_le_impl: \"a + b < a + c \\<Longrightarrow> b < c\"", "lemma start_remove_neg_cycles:\n  \"len m i j (start_remove xs k []) > len m i j xs \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>\"", "lemma remove_all_cycles_neg_cycles:\n  \"len m i j (remove_all_cycles ys xs) > len m i j xs\n  \\<Longrightarrow> \\<exists> ys k. set ys \\<subseteq> set xs \\<and> k \\<in> set xs \\<and> len m k k ys < \\<one>\"", "lemma (in -) concat_map_cons_rev:\n  \"rev (concat (map ((#) j) xss)) = concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss)))\"", "lemma negative_cycle_dest: \"len m i j (rem_cycles i j xs) > len m i j xs\n       \\<Longrightarrow> \\<exists> i' ys. len m i' i' ys < \\<one> \\<and> set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\"", "lemma (in -) distinct_length_le:\"finite s \\<Longrightarrow> set xs \\<subseteq> s \\<Longrightarrow> distinct xs \\<Longrightarrow> length xs \\<le> card s\"", "lemma (in -) finite_distinct: \"finite s \\<Longrightarrow> finite {xs . set xs \\<subseteq> s \\<and> distinct xs}\"", "lemma D_base_finite:\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\"", "lemma D_base_finite':\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\"", "lemma D_base_finite'':\n  \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"", "lemma D_eqI:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\"", "lemma D_base_not_empty:\n   \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq> {}\"", "lemma Min_elem_dest: \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x = Min A \\<Longrightarrow> x \\<in> A\"", "lemma D_dest: \"x = D m i j k \\<Longrightarrow>\n  x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"", "lemma D_dest': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}\"", "lemma D_dest'': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\"", "lemma cycle_free_loop_dest: \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> cycle_free m n \\<Longrightarrow> len m i i xs \\<ge> \\<one>\"", "lemma cycle_free_dest:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs\"", "lemma cycle_free_up_to_loop_dest:\n  \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..k} \\<Longrightarrow> cycle_free_up_to m k n \\<Longrightarrow> len m i i xs \\<ge> \\<one>\"", "lemma cycle_free_up_to_diag:\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\"\n  shows \"m i i \\<ge> \\<one>\"", "lemma D_eqI2:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n          \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\"", "theorem fw_shortest_path_up_to:\n  \"cycle_free_up_to m k n \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n\n        \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'\"", "lemma cycle_free_cycle_free_up_to:\n  \"cycle_free m n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> cycle_free_up_to m k n\"", "lemma cycle_free_diag:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> \\<one> \\<le> m i i\"", "lemma not_cylce_free_dest: \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> k \\<le> n. \\<not> cycle_free_up_to m k n\"", "lemma D_not_diag_le:\n  \"(x :: 'a) \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<Longrightarrow> D m i j k \\<le> x\"", "lemma D_not_diag_le': \"set xs \\<subseteq> {0..k} \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs\n  \\<Longrightarrow> D m i j k \\<le> len m i j xs\"", "lemma (in -) nat_upto_subs_top_removal':\n  \"S \\<subseteq> {0..Suc n} \\<Longrightarrow> Suc n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n}\"", "lemma (in -) nat_upto_subs_top_removal:\n  \"S \\<subseteq> {0..n::nat} \\<Longrightarrow> n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n - 1}\"", "lemma fw_Suc:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fw m n (Suc k) i' j' i j \\<le> fw m n k n n i j\"", "lemma negative_len_shortest:\n  \"length xs = n \\<Longrightarrow> len m i i xs < \\<one>\n    \\<Longrightarrow> \\<exists> j ys. distinct (j # ys) \\<and> len m j j ys < \\<one> \\<and> j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\"", "theorem FW_neg_cycle_detect:\n  \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> i \\<le> n. fw m n n n n i i < \\<one>\""], "translations": [["", "lemma distinct_list_single_elem_decomp: \"{xs. set xs \\<subseteq> {0} \\<and> distinct xs} = {[], [0]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs} = {[], [0::'a]}", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "fix xs :: \"'a list\""], ["proof (state)\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "assume xs: \"xs \\<in> {xs. set xs \\<subseteq> {0} \\<and> distinct xs}\""], ["proof (state)\nthis:\n  xs \\<in> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "have \"xs \\<in> {[], [0]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> {[], [0::'a]}", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> xs \\<in> {[], [0::'a]}\n 2. \\<And>a list. xs = a # list \\<Longrightarrow> xs \\<in> {[], [0::'a]}", "case (Cons y ys)"], ["proof (state)\nthis:\n  xs = y # ys\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> xs \\<in> {[], [0::'a]}\n 2. \\<And>a list. xs = a # list \\<Longrightarrow> xs \\<in> {[], [0::'a]}", "hence y: \"y = 0\""], ["proof (prove)\nusing this:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. y = (0::'a)", "using xs"], ["proof (prove)\nusing this:\n  xs = y # ys\n  xs \\<in> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. y = (0::'a)", "by auto"], ["proof (state)\nthis:\n  y = (0::'a)\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> xs \\<in> {[], [0::'a]}\n 2. \\<And>a list. xs = a # list \\<Longrightarrow> xs \\<in> {[], [0::'a]}", "with Cons xs"], ["proof (chain)\npicking this:\n  xs = y # ys\n  xs \\<in> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n  y = (0::'a)", "have \"ys = []\""], ["proof (prove)\nusing this:\n  xs = y # ys\n  xs \\<in> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n  y = (0::'a)\n\ngoal (1 subgoal):\n 1. ys = []", "by (cases ys, auto)"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> xs \\<in> {[], [0::'a]}\n 2. \\<And>a list. xs = a # list \\<Longrightarrow> xs \\<in> {[], [0::'a]}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ys = []\n\ngoal (1 subgoal):\n 1. xs \\<in> {[], [0::'a]}", "using y Cons"], ["proof (prove)\nusing this:\n  ys = []\n  y = (0::'a)\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. xs \\<in> {[], [0::'a]}", "by simp"], ["proof (state)\nthis:\n  xs \\<in> {[], [0::'a]}\n\ngoal (1 subgoal):\n 1. xs = [] \\<Longrightarrow> xs \\<in> {[], [0::'a]}", "qed simp"], ["proof (state)\nthis:\n  xs \\<in> {[], [0::'a]}\n\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "}"], ["proof (state)\nthis:\n  ?xs2\n  \\<in> {xs.\n         set xs \\<subseteq> {0::'a} \\<and> distinct xs} \\<Longrightarrow>\n  ?xs2 \\<in> {[], [0::'a]}\n\ngoal (2 subgoals):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}\n 2. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "thus ?case"], ["proof (prove)\nusing this:\n  ?xs2\n  \\<in> {xs.\n         set xs \\<subseteq> {0::'a} \\<and> distinct xs} \\<Longrightarrow>\n  ?xs2 \\<in> {[], [0::'a]}\n\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n    \\<subseteq> {[], [0::'a]}", "by blast"], ["proof (state)\nthis:\n  {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}\n  \\<subseteq> {[], [0::'a]}\n\ngoal (1 subgoal):\n 1. {[], [0::'a]}\n    \\<subseteq> {xs. set xs \\<subseteq> {0::'a} \\<and> distinct xs}", "qed simp"], ["", "section \\<open>Cycles in Lists\\<close>"], ["", "abbreviation \"cnt x xs \\<equiv> length (filter (\\<lambda>y. x = y) xs)\""], ["", "fun remove_cycles :: \"'a list \\<Rightarrow> 'a \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"\nwhere\n  \"remove_cycles [] _ acc = rev acc\" |\n  \"remove_cycles (x#xs) y acc =\n    (if x = y then remove_cycles xs y [x] else remove_cycles xs y (x#acc))\""], ["", "lemma cnt_rev: \"cnt x (rev xs) = cnt x xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (rev xs) = cnt x xs", "by (metis length_rev rev_filter)"], ["", "value \"as @ [x] @ bs @ [x] @ cs @ [x] @ ds\""], ["", "lemma remove_cycles_removes: \"cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)", "by (simp, cases \"x \\<in> set ys\", (auto simp: cnt_rev[of x ys]))"], ["proof (state)\nthis:\n  cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  cnt x (remove_cycles xs x ?ys) \\<le> max 1 (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt x (remove_cycles xs x ?ys) \\<le> max 1 (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "using Cons[of \"[y]\"] True"], ["proof (prove)\nusing this:\n  x = y\n  cnt x (remove_cycles xs x [y]) \\<le> max 1 (cnt x [y])\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "using Cons[of \"y # ys\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  cnt x (remove_cycles xs x (y # ys)) \\<le> max 1 (cnt x (y # ys))\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_id: \"x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs", "by (induction xs arbitrary: ys) auto"], ["", "lemma remove_cycles_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs", "proof (induction xs arbitrary: ys x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys x.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case Nil"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>ys x.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case (Cons z xs)"], ["proof (state)\nthis:\n  ?x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs ?x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  ?x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs ?x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "proof (cases \"x = z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case True"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using Cons.IH[of z \"[z]\"] Cons.prems"], ["proof (prove)\nusing this:\n  x = z\n  z \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs z [z]) \\<le> cnt y [z] + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using Cons.IH[of x \"z # ys\"] Cons.prems False"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_ends_cycle: \"remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow> x \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow>\n    x \\<in> set xs", "using remove_cycles_id"], ["proof (prove)\nusing this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  remove_cycles ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow>\n    x \\<in> set xs", "by fastforce"], ["", "lemma remove_cycles_begins_with: \"x \\<in> set xs \\<Longrightarrow> \\<exists> zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    \\<exists>zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case 1"], ["proof (state)\nthis:\n  x = y\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with Cons"], ["proof (chain)\npicking this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x = y\n  x \\<in> set xs", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x = y\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case 2"], ["proof (state)\nthis:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with remove_cycles_id[of x xs \"[y]\"]"], ["proof (chain)\npicking this:\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n  x = y\n  x \\<notin> set xs", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with Cons"], ["proof (chain)\npicking this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x \\<noteq> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_self:\n  \"x \\<in> set xs \\<Longrightarrow> remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "assume x:\"x \\<in> set xs\""], ["proof (state)\nthis:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "then"], ["proof (chain)\npicking this:\n  x \\<in> set xs", "obtain ws where ws: \"remove_cycles xs x ys = x # ws\" \"x \\<notin> set ws\""], ["proof (prove)\nusing this:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>remove_cycles xs x ys = x # ws; x \\<notin> set ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using remove_cycles_begins_with[OF x, of ys]"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  \\<exists>zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>remove_cycles xs x ys = x # ws; x \\<notin> set ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  remove_cycles xs x ys = x # ws\n  x \\<notin> set ws\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "from remove_cycles_id[OF this(2)]"], ["proof (chain)\npicking this:\n  remove_cycles ws x ?ys = rev ?ys @ ws", "have \"remove_cycles ws x [x] = x # ws\""], ["proof (prove)\nusing this:\n  remove_cycles ws x ?ys = rev ?ys @ ws\n\ngoal (1 subgoal):\n 1. remove_cycles ws x [x] = x # ws", "by auto"], ["proof (state)\nthis:\n  remove_cycles ws x [x] = x # ws\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "with ws(1)"], ["proof (chain)\npicking this:\n  remove_cycles xs x ys = x # ws\n  remove_cycles ws x [x] = x # ws", "show \"remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\""], ["proof (prove)\nusing this:\n  remove_cycles xs x ys = x # ws\n  remove_cycles ws x [x] = x # ws\n\ngoal (1 subgoal):\n 1. remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "by simp"], ["proof (state)\nthis:\n  remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_one: \"remove_cycles (as @ x # xs) x ys = remove_cycles (x#xs) x ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. remove_cycles (as @ x # xs) x ys = remove_cycles (x # xs) x ys", "by (induction as arbitrary: ys) auto"], ["", "lemma remove_cycles_cycles:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> xxs as. as @ concat (map (\\<lambda> xs. x # xs) xxs) @ remove_cycles xs x ys = xs \\<and> x \\<notin> set as\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys = xs \\<and>\n       x \\<notin> set as", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>xxs as.\n          as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n          x \\<notin> set as\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>xxs as.\n          as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n          x \\<notin> set as\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n       x \\<notin> set as", "by auto"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x ?ys = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x ?ys = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case 1"], ["proof (state)\nthis:\n  x = y\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "then"], ["proof (chain)\npicking this:\n  x = y\n  x \\<in> set xs", "obtain as xxs where \"as @ concat (map (\\<lambda>xs. y#xs) xxs) @ remove_cycles xs y [y] = xs\""], ["proof (prove)\nusing this:\n  x = y\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] =\n        xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH[of \"[y]\"]"], ["proof (prove)\nusing this:\n  x = y\n  x \\<in> set xs\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x [y] = xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] =\n        xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] = xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"[] @ concat (map (\\<lambda>xs. x#xs) (as#xxs)) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] = xs\n\ngoal (1 subgoal):\n 1. [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n    y # xs", "by (simp add: \\<open>x = y\\<close>)"], ["proof (state)\nthis:\n  [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n  y # xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n  y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case 2"], ["proof (state)\nthis:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"remove_cycles (y # xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. remove_cycles (y # xs) x ys = y # xs", "using remove_cycles_id[of x xs \"[y]\"]"], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> set xs\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n\ngoal (1 subgoal):\n 1. remove_cycles (y # xs) x ys = y # xs", "by auto"], ["proof (state)\nthis:\n  remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"[] @ concat (map (\\<lambda>xs. x # xs) []) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs", "by auto"], ["proof (state)\nthis:\n  [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "obtain as xxs where as:\n      \"as @ concat (map (\\<lambda>xs. x # xs) xxs) @ remove_cycles xs x (y#ys) = xs\" \"x \\<notin> set as\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        \\<lbrakk>as @\n                 concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) =\n                 xs;\n         x \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH[of \"y # ys\"] Cons.prems"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        \\<lbrakk>as @\n                 concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) =\n                 xs;\n         x \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"(y # as) @ concat (map (\\<lambda>xs. x # xs) xxs) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n\ngoal (1 subgoal):\n 1. (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n    y # xs", "using \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n    y # xs", "by auto"], ["proof (state)\nthis:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "using as(2) \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n  x \\<notin> set as\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["", "fun start_remove :: \"'a list \\<Rightarrow> 'a \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"\nwhere\n  \"start_remove [] _ acc = rev acc\" |\n  \"start_remove (x#xs) y acc =\n    (if x = y then rev acc @ remove_cycles xs y [y] else start_remove xs y (x # acc))\""], ["", "lemma start_remove_decomp:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> as bs. xs = as @ x # bs \\<and> start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    \\<exists>as bs.\n       xs = as @ x # bs \\<and>\n       start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>as bs.\n          [] = as @ x # bs \\<and>\n          start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>as bs.\n          [] = as @ x # bs \\<and>\n          start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       [] = as @ x # bs \\<and>\n       start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]", "by auto"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     [] = as @ x # bs \\<and>\n     start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       y # xs = as @ x # bs \\<and>\n       start_remove (y # xs) x ys = rev ys @ as @ remove_cycles bs x [x]", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "case 1"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set xs\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "from 1(1)[of \"y # ys\"]"], ["proof (chain)\npicking this:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]", "obtain as bs where \n      \"xs = as @ x # bs\" \"start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\""], ["proof (prove)\nusing this:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        \\<lbrakk>xs = as @ x # bs;\n         start_remove xs x (y # ys) =\n         rev (y # ys) @ as @ remove_cycles bs x [x]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = as @ x # bs\n  start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "hence \"y # xs = (y # as) @ x # bs\"\n          \"start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\""], ["proof (prove)\nusing this:\n  xs = as @ x # bs\n  start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. y # xs = (y # as) @ x # bs &&&\n    start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]", "by simp+"], ["proof (state)\nthis:\n  y # xs = (y # as) @ x # bs\n  start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  y # xs = (y # as) @ x # bs\n  start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       y # xs = as @ x # bs \\<and>\n       start_remove xs x (y # ys) = rev ys @ as @ remove_cycles bs x [x]", "by blast"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     y # xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev ys @ as @ remove_cycles bs x [x]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     y # xs = as @ x # bs \\<and>\n     start_remove (y # xs) x ys = rev ys @ as @ remove_cycles bs x [x]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_removes: \"cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)", "using cnt_rev[of x ys]"], ["proof (prove)\nusing this:\n  cnt x (rev ys) = cnt x ys\n\ngoal (1 subgoal):\n 1. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  cnt x (start_remove xs x ?ys) \\<le> Suc (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt x (start_remove xs x ?ys) \\<le> Suc (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "using remove_cycles_removes[of y xs \"[y]\"] cnt_rev[of y ys]"], ["proof (prove)\nusing this:\n  x = y\n  cnt y (remove_cycles xs y [y]) \\<le> max 1 (cnt y [y])\n  cnt y (rev ys) = cnt y ys\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "using Cons[of \"y # ys\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  cnt x (start_remove xs x (y # ys)) \\<le> Suc (cnt x (y # ys))\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_id[simp]: \"x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs", "by (induction xs arbitrary: ys) auto"], ["", "lemma start_remove_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case Nil"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case (Cons z xs)"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "proof (cases \"x = z\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case 1"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using remove_cycles_cnt_id[of x y xs \"[x]\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs x [x]) \\<le> cnt y [x] + cnt y xs\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "from this(1)[of \"(z # ys)\"] this(2,3)"], ["proof (chain)\npicking this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z", "show ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun remove_all_cycles :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"\nwhere\n  \"remove_all_cycles [] xs = xs\" |\n  \"remove_all_cycles (x # xs) ys = remove_all_cycles xs (start_remove ys x [])\""], ["", "lemma cnt_remove_all_mono:\"cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "case (Cons x xs)"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles xs ?ys) \\<le> max 1 (cnt y ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt y (remove_all_cycles xs ?ys) \\<le> max 1 (cnt y ?ys)\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)\n 2. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)\n 2. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "using start_remove_removes[of y ys \"[]\"] Cons[of \"start_remove ys y []\"]"], ["proof (prove)\nusing this:\n  x = y\n  cnt y (start_remove ys y []) \\<le> Suc (cnt y [])\n  cnt y (remove_all_cycles xs (start_remove ys y []))\n  \\<le> max 1 (cnt y (start_remove ys y []))\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "hence \"cnt y (start_remove ys x []) \\<le> cnt y ys\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove ys x []) \\<le> cnt y ys", "using start_remove_cnt_id[of x y ys \"[]\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove ys x []) \\<le> cnt y [] + cnt y ys\n\ngoal (1 subgoal):\n 1. cnt y (start_remove ys x []) \\<le> cnt y ys", "by auto"], ["proof (state)\nthis:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "using Cons[of \"start_remove ys x []\"]"], ["proof (prove)\nusing this:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n  cnt y (remove_all_cycles xs (start_remove ys x []))\n  \\<le> max 1 (cnt y (start_remove ys x []))\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnt_remove_all_cycles: \"x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       cnt x (remove_all_cycles [] ys) \\<le> 1\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       cnt x (remove_all_cycles [] ys) \\<le> 1\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles [] ys) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_all_cycles [] ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles (y # xs) ys) \\<le> 1", "using start_remove_removes[of x ys \"[]\"] cnt_remove_all_mono[of y xs \"start_remove ys y []\"]"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n  cnt x (start_remove ys x []) \\<le> Suc (cnt x [])\n  cnt y (remove_all_cycles xs (start_remove ys y []))\n  \\<le> max 1 (cnt y (start_remove ys y []))\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles (y # xs) ys) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_all_cycles (y # xs) ys) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnt_mono:\n  \"cnt a (b # xs) \\<le> cnt a (b # c # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt a (b # xs) \\<le> cnt a (b # c # xs)", "by (induction xs) auto"], ["", "lemma cnt_distinct_intro: \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs", "proof (induction xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set []. cnt x [] \\<le> 1 \\<Longrightarrow> distinct []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set []. cnt x [] \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set []. cnt x [] \\<le> 1 \\<Longrightarrow> distinct []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set []. cnt x [] \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct []", "by auto"], ["proof (state)\nthis:\n  distinct []\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "from this(2)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "have \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. cnt x xs \\<le> 1", "by (metis filter.simps(2) impossible_Cons linorder_class.linear list.set_intros(2)\n      preorder_class.order_trans)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "with Cons.IH"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1", "have \"distinct xs\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct xs", "by auto"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "moreover"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "have \"x \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "using Cons.prems"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "proof (induction xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set []", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set []\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "case (Cons a xs)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "from this(2)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1", "have \"\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1", "have *: \"\\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "case (1 b)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)", "have \"cnt b (x # a # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)\n\ngoal (1 subgoal):\n 1. cnt b (x # a # xs) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt b (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "with cnt_mono[of b x xs a]"], ["proof (chain)\npicking this:\n  cnt b (x # xs) \\<le> cnt b (x # a # xs)\n  cnt b (x # a # xs) \\<le> 1", "show ?case"], ["proof (prove)\nusing this:\n  cnt b (x # xs) \\<le> cnt b (x # a # xs)\n  cnt b (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. cnt b (x # xs) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  cnt b (x # xs) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "with Cons(1)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "have \"x \\<notin> set xs\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "moreover"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "have \"x \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by (metis (full_types) Cons.prems One_nat_def * empty_iff filter.simps(2) impossible_Cons\n                           le_0_eq le_Suc_eq length_0_conv list.set(1) list.set_intros(1))"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> set xs\n  x \\<noteq> a", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> set xs\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<notin> set (a # xs)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set (a # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "ultimately"], ["proof (chain)\npicking this:\n  distinct xs\n  x \\<notin> set xs", "show ?case"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # xs)", "by auto"], ["proof (state)\nthis:\n  distinct (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_subs:\n  \"set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys", "by (induction xs arbitrary: ys; auto; fastforce)"], ["", "lemma start_remove_subs:\n  \"set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys", "using remove_cycles_subs"], ["proof (prove)\nusing this:\n  set (remove_cycles ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n\ngoal (1 subgoal):\n 1. set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys", "by (induction xs arbitrary: ys; auto; fastforce)"], ["", "lemma remove_all_cycles_subs:\n  \"set (remove_all_cycles xs ys) \\<subseteq> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all_cycles xs ys) \\<subseteq> set ys", "using start_remove_subs"], ["proof (prove)\nusing this:\n  set (start_remove ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n\ngoal (1 subgoal):\n 1. set (remove_all_cycles xs ys) \\<subseteq> set ys", "by (induction xs arbitrary: ys, auto) (fastforce+)"], ["", "lemma remove_all_cycles_distinct: \"set ys \\<subseteq> set xs \\<Longrightarrow> distinct (remove_all_cycles xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "assume \"set ys \\<subseteq> set xs\""], ["proof (state)\nthis:\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "hence \"\\<forall> x \\<in> set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1", "using cnt_remove_all_cycles"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs\n  ?x \\<in> set ?xs \\<Longrightarrow>\n  cnt ?x (remove_all_cycles ?xs ?ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "hence \"\\<forall> x \\<in> set (remove_all_cycles xs ys). cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (remove_all_cycles xs ys).\n       cnt x (remove_all_cycles xs ys) \\<le> 1", "using remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (remove_all_cycles xs ys).\n       cnt x (remove_all_cycles xs ys) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "thus \"distinct (remove_all_cycles xs ys)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs ys)", "using cnt_distinct_intro"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n  \\<forall>x\\<in>set ?xs. cnt x ?xs \\<le> 1 \\<Longrightarrow> distinct ?xs\n\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_all_cycles xs ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_remove_cycles_inv: \"distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       distinct ([] @ ys) \\<Longrightarrow> distinct (remove_cycles [] x ys)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "case Nil"], ["proof (state)\nthis:\n  distinct ([] @ ys)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       distinct ([] @ ys) \\<Longrightarrow> distinct (remove_cycles [] x ys)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  distinct ([] @ ys)\n\ngoal (1 subgoal):\n 1. distinct (remove_cycles [] x ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_cycles [] x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  distinct (xs @ ?ys) \\<Longrightarrow> distinct (remove_cycles xs x ?ys)\n  distinct ((y # xs) @ ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  distinct (xs @ ?ys) \\<Longrightarrow> distinct (remove_cycles xs x ?ys)\n  distinct ((y # xs) @ ys)\n\ngoal (1 subgoal):\n 1. distinct (remove_cycles (y # xs) x ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_cycles (y # xs) x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"remove_all x xs = (if x \\<in> set xs then tl (remove_cycles xs x []) else xs)\""], ["", "definition \"remove_all_rev x xs = (if x \\<in> set xs then rev (tl (remove_cycles (rev xs) x [])) else xs)\""], ["", "lemma remove_all_distinct:\n  \"distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "case 1"], ["proof (state)\nthis:\n  distinct xs\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "from remove_cycles_begins_with[OF 1(2), of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs. remove_cycles xs x [] = x # zs \\<and> x \\<notin> set zs", "obtain zs\n  where \"remove_cycles xs x [] = x # zs\" \"x \\<notin> set zs\""], ["proof (prove)\nusing this:\n  \\<exists>zs. remove_cycles xs x [] = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>remove_cycles xs x [] = x # zs; x \\<notin> set zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "using 1(1) distinct_remove_cycles_inv[of \"xs\" \"[]\" x]"], ["proof (prove)\nusing this:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n  distinct xs\n  distinct (xs @ []) \\<Longrightarrow> distinct (remove_cycles xs x [])\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "case 2"], ["proof (state)\nthis:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all x xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_removes:\n  \"x \\<notin> set (remove_all x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set (remove_all x xs)", "by (metis list.sel(3) remove_all_def remove_cycles_begins_with)"], ["", "lemma remove_all_subs:\n  \"set (remove_all x xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all x xs) \\<subseteq> set xs", "using remove_cycles_subs remove_all_def"], ["proof (prove)\nusing this:\n  set (remove_cycles ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n  remove_all ?x ?xs =\n  (if ?x \\<in> set ?xs then tl (remove_cycles ?xs ?x []) else ?xs)\n\ngoal (1 subgoal):\n 1. set (remove_all x xs) \\<subseteq> set xs", "by (metis (no_types, lifting) append_Nil2 list.sel(2) list.set_sel(2) set_append subsetCE subsetI)"], ["", "lemma remove_all_rev_distinct: \"distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "case 1"], ["proof (state)\nthis:\n  distinct xs\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "then"], ["proof (chain)\npicking this:\n  distinct xs\n  x \\<in> set xs", "have \"x \\<in> set (rev xs)\""], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> set (rev xs)", "by auto"], ["proof (state)\nthis:\n  x \\<in> set (rev xs)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "from remove_cycles_begins_with[OF this, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs. remove_cycles (rev xs) x [] = x # zs \\<and> x \\<notin> set zs", "obtain zs\n  where \"remove_cycles (rev xs) x [] = x # zs\" \"x \\<notin> set zs\""], ["proof (prove)\nusing this:\n  \\<exists>zs. remove_cycles (rev xs) x [] = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>remove_cycles (rev xs) x [] = x # zs;\n         x \\<notin> set zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "using 1(1) distinct_remove_cycles_inv[of \"rev xs\" \"[]\" x]"], ["proof (prove)\nusing this:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n  distinct xs\n  distinct (rev xs @ []) \\<Longrightarrow>\n  distinct (remove_cycles (rev xs) x [])\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all_rev x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "case 2"], ["proof (state)\nthis:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all_rev x xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_rev_removes: \"x \\<notin> set (remove_all_rev x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set (remove_all_rev x xs)", "by (metis remove_all_def remove_all_removes remove_all_rev_def set_rev)"], ["", "lemma remove_all_rev_subs: \"set (remove_all_rev x xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all_rev x xs) \\<subseteq> set xs", "by (metis remove_all_def remove_all_subs set_rev remove_all_rev_def)"], ["", "abbreviation \"rem_cycles i j xs \\<equiv> remove_all i (remove_all_rev j (remove_all_cycles xs xs))\""], ["", "lemma rem_cycles_distinct': \"i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "assume \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "have \"distinct (remove_all_cycles xs xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs xs)", "by (simp add: remove_all_cycles_distinct)"], ["proof (state)\nthis:\n  distinct (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "from remove_all_rev_distinct[OF this]"], ["proof (chain)\npicking this:\n  distinct (?x # remove_all_rev ?x (remove_all_cycles xs xs))", "have\n    \"distinct (remove_all_rev j (remove_all_cycles xs xs))\""], ["proof (prove)\nusing this:\n  distinct (?x # remove_all_rev ?x (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. distinct (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  distinct (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "from remove_all_distinct[OF this]"], ["proof (chain)\npicking this:\n  distinct (?x # rem_cycles ?x j xs)", "have \"distinct (i # rem_cycles i j xs)\""], ["proof (prove)\nusing this:\n  distinct (?x # rem_cycles ?x j xs)\n\ngoal (1 subgoal):\n 1. distinct (i # rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  distinct (i # rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "moreover"], ["proof (state)\nthis:\n  distinct (i # rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "have\n    \"j \\<notin> set (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "using remove_all_subs remove_all_rev_removes remove_all_removes"], ["proof (prove)\nusing this:\n  set (remove_all ?x ?xs) \\<subseteq> set ?xs\n  ?x \\<notin> set (remove_all_rev ?x ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "by fastforce"], ["proof (state)\nthis:\n  j \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "ultimately"], ["proof (chain)\npicking this:\n  distinct (i # rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct (i # rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. distinct (i # j # rem_cycles i j xs)", "by (simp add: \\<open>i \\<noteq> j\\<close>)"], ["proof (state)\nthis:\n  distinct (i # j # rem_cycles i j xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rem_cycles_removes_last: \"j \\<notin> set (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "by (meson remove_all_rev_removes remove_all_subs rev_subsetD)"], ["", "lemma rem_cycles_distinct: \"distinct (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (rem_cycles i j xs)", "by (meson distinct.simps(2) order_refl remove_all_cycles_distinct\n          remove_all_distinct remove_all_rev_distinct)"], ["", "lemma rem_cycles_subs: \"set (rem_cycles i j xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (rem_cycles i j xs) \\<subseteq> set xs", "by (meson order_trans remove_all_cycles_subs remove_all_subs remove_all_rev_subs)"], ["", "section \\<open>Definition of the Algorithm\\<close>"], ["", "text \\<open>\n  We formalize the Floyd-Warshall algorithm on a linearly ordered abelian semigroup.\n  However, we would not need an \\<open>abelian\\<close> monoid if we had the right type class.\n\\<close>"], ["", "class linordered_ab_monoid_add = linordered_ab_semigroup_add +\n  fixes neutral :: 'a (\"\\<one>\")\n    assumes neutl[simp]: \"\\<one> + x = x\"\n    assumes neutr[simp]: \"x + \\<one> = x\"\nbegin"], ["", "lemmas assoc = add.assoc"], ["", "type_synonym 'c mat = \"nat \\<Rightarrow> nat \\<Rightarrow> 'c\""], ["", "definition (in -) upd :: \"'c mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'c \\<Rightarrow> 'c mat\"\nwhere\n  \"upd m x y v = m (x := (m x) (y := v))\""], ["", "definition fw_upd :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a mat\" where\n  \"fw_upd m k i j \\<equiv> upd m i j (min (m i j) (m i k + m k j))\""], ["", "lemma fw_upd_mono:\n  \"fw_upd m k i j i' j' \\<le> m i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd m k i j i' j' \\<le> m i' j'", "by (cases \"i = i'\", cases \"j = j'\") (auto simp: fw_upd_def upd_def)"], ["", "fun fw :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a mat\" where\n  \"fw m n 0       0       0        = fw_upd m 0 0 0\" |\n  \"fw m n (Suc k) 0       0        = fw_upd (fw m n k n n) (Suc k) 0 0\" |\n  \"fw m n k       (Suc i) 0        = fw_upd (fw m n k i n) k (Suc i) 0\" |\n  \"fw m n k       i       (Suc j)  = fw_upd (fw m n k i j) k i (Suc j)\""], ["", "lemma fw_invariant_aux_1:\n  \"j'' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j'' \\<le> 0; i \\<le> n; 0 \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i 0 i' j' \\<le> fw m n k i j'' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i j'' i' j';\n        j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "case 0"], ["proof (state)\nthis:\n  j'' \\<le> 0\n  i \\<le> n\n  0 \\<le> n\n  k \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j'' \\<le> 0; i \\<le> n; 0 \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i 0 i' j' \\<le> fw m n k i j'' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i j'' i' j';\n        j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j'' \\<le> 0\n  i \\<le> n\n  0 \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k i 0 i' j' \\<le> fw m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i 0 i' j' \\<le> fw m n k i j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i j'' i' j';\n        j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i j'' i' j';\n        j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'\n  j'' \\<le> Suc j\n  i \\<le> n\n  Suc j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i j'' i' j';\n        j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'\n  j'' \\<le> Suc j\n  i \\<le> n\n  Suc j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "proof (cases \"j'' = Suc j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "case True"], ["proof (state)\nthis:\n  j'' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  j'' = Suc j\n\ngoal (1 subgoal):\n 1. fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "case False"], ["proof (state)\nthis:\n  j'' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "have \"fw_upd (fw m n k i j) k i (Suc j) i' j' \\<le> fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd (fw m n k i j) k i (Suc j) i' j' \\<le> fw m n k i j i' j'", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fw_upd (fw m n k i j) k i (Suc j) i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i j'' i' j';\n     j'' \\<le> Suc j; i \\<le> n; Suc j \\<le> n; k \\<le> n;\n     j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw_upd (fw m n k i j) k i (Suc j) i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "using Suc False"], ["proof (prove)\nusing this:\n  fw_upd (fw m n k i j) k i (Suc j) i' j' \\<le> fw m n k i j i' j'\n  \\<lbrakk>j'' \\<le> j; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i j'' i' j'\n  j'' \\<le> Suc j\n  i \\<le> n\n  Suc j \\<le> n\n  k \\<le> n\n  j'' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i (Suc j) i' j' \\<le> fw m n k i j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_invariant_aux_2:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> i'' \\<le> i \\<Longrightarrow> j'' \\<le> j\n   \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n     j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> 0;\n     j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k 0 j i' j' \\<le> fw m n k i'' j'' i' j'\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n                 j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i'' j'' i' j';\n        Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i;\n        j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j'\n                         \\<le> fw m n k i'' j'' i' j'", "case 0"], ["proof (state)\nthis:\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> 0;\n     j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k 0 j i' j' \\<le> fw m n k i'' j'' i' j'\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n                 j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i'' j'' i' j';\n        Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i;\n        j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j'\n                         \\<le> fw m n k i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n k 0 j i' j' \\<le> fw m n k i'' j'' i' j'", "using fw_invariant_aux_1"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n  \\<lbrakk>?j'' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k ?i ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n k 0 j i' j' \\<le> fw m n k i'' j'' i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n k 0 j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n                 j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i'' j'' i' j';\n        Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i;\n        j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j'\n                         \\<le> fw m n k i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n                 j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i'' j'' i' j';\n        Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i;\n        j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j'\n                         \\<le> fw m n k i'' j'' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n   j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n                 j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k i'' j'' i' j';\n        Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i;\n        j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j'\n                         \\<le> fw m n k i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n   j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "proof (cases \"i'' = Suc i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "case True"], ["proof (state)\nthis:\n  i'' = Suc i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i'' = Suc i\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "using Suc fw_invariant_aux_1"], ["proof (prove)\nusing this:\n  i'' = Suc i\n  \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n   j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n  \\<lbrakk>?j'' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k ?i ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "case False"], ["proof (state)\nthis:\n  i'' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "have \"fw m n k (Suc i) j i' j' \\<le> fw m n k (Suc i) 0 i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k (Suc i) 0 i' j'", "using fw_invariant_aux_1[of 0 j \"Suc i\" n k] Suc(2-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> j; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw ?m n k (Suc i) j ?i' ?j'\n                    \\<le> fw ?m n k (Suc i) 0 ?i' ?j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k (Suc i) 0 i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k (Suc i) 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k (Suc i) 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k i n i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' \\<le> fw m n k i n i' j'", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' \\<le> fw m n k i n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' \\<le> fw m n k i n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k i n i' j' \\<le> fw m n k i j i' j'", "using fw_invariant_aux_1[of j n i n k] False Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>j \\<le> n; i \\<le> n; n \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw ?m n k i n ?i' ?j' \\<le> fw ?m n k i j ?i' ?j'\n  i'' \\<noteq> Suc i\n  \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n   j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n k i n i' j' \\<le> fw m n k i j i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i n i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n k i n i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'", "using Suc False"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n   j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n  Suc i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n  i'' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> i;\n              j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k i'' j'' i' j';\n     Suc i \\<le> n; j \\<le> n; k \\<le> n; i'' \\<le> Suc i; j'' \\<le> j;\n     i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "finally"], ["proof (chain)\npicking this:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' \\<le> fw m n k i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_invariant:\n  \"k' \\<le> k \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> j'' \\<le> j \\<Longrightarrow> i'' \\<le> i\n   \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>k' \\<le> 0; i \\<le> n; j \\<le> n; 0 \\<le> n; j'' \\<le> j;\n     i'' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j' \\<le> fw m n k' i'' j'' i' j'\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n                 j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k' i'' j'' i' j';\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n        i'' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                         \\<le> fw m n k' i'' j'' i' j'", "case 0"], ["proof (state)\nthis:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>k' \\<le> 0; i \\<le> n; j \\<le> n; 0 \\<le> n; j'' \\<le> j;\n     i'' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j' \\<le> fw m n k' i'' j'' i' j'\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n                 j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k' i'' j'' i' j';\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n        i'' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                         \\<le> fw m n k' i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n k' i'' j'' i' j'", "using fw_invariant_aux_2"], ["proof (prove)\nusing this:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n; ?i'' \\<le> ?i;\n   ?j'' \\<le> ?j\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k ?i'' ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n k' i'' j'' i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n                 j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k' i'' j'' i' j';\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n        i'' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                         \\<le> fw m n k' i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n                 j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k' i'' j'' i' j';\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n        i'' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                         \\<le> fw m n k' i'' j'' i' j'", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n   i'' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n                 j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j'\n                                  \\<le> fw m n k' i'' j'' i' j';\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n        i'' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                         \\<le> fw m n k' i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n   i'' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "proof (cases \"k' = Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' = Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "case True"], ["proof (state)\nthis:\n  k' = Suc k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' = Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  k' = Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "using Suc fw_invariant_aux_2"], ["proof (prove)\nusing this:\n  k' = Suc k\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n   i'' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n; ?i'' \\<le> ?i;\n   ?j'' \\<le> ?j\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k ?i'' ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "case False"], ["proof (state)\nthis:\n  k' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "have \"fw m n (Suc k) i j i' j' \\<le> fw m n (Suc k) 0 0 i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n (Suc k) 0 0 i' j'", "using fw_invariant_aux_2[of i n j \"Suc k\" 0 0] Suc(2-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n; 0 \\<le> i;\n   0 \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fw ?m n (Suc k) i j ?i' ?j'\n                    \\<le> fw ?m n (Suc k) 0 0 ?i' ?j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n (Suc k) 0 0 i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> fw m n (Suc k) 0 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> fw m n (Suc k) 0 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k n n i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 0 i' j' \\<le> fw m n k n n i' j'", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 0 i' j' \\<le> fw m n k n n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 0 i' j' \\<le> fw m n k n n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n i' j' \\<le> fw m n k i j i' j'", "using fw_invariant_aux_2[of n n n k] False Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; k \\<le> n; ?i'' \\<le> n;\n   ?j'' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw ?m n k n n ?i' ?j' \\<le> fw ?m n k ?i'' ?j'' ?i' ?j'\n  k' \\<noteq> Suc k\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n   i'' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n k n n i' j' \\<le> fw m n k i j i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k n n i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fw m n k n n i' j' \\<le> fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "have \"\\<dots> \\<le> fw m n k' i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'", "using Suc False"], ["proof (prove)\nusing this:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n; j'' \\<le> j;\n   i'' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j'' \\<le> j\n  i'' \\<le> i\n  k' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n;\n              j'' \\<le> j; i'' \\<le> i\\<rbrakk>\n             \\<Longrightarrow> fw m n k i j i' j'\n                               \\<le> fw m n k' i'' j'' i' j';\n     k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j'' \\<le> j;\n     i'' \\<le> i; k' \\<noteq> Suc k\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "finally"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> fw m n k' i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_row_inv:\n  \"j' < j \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> fw m n k i' j i' j' = fw m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i' j i' j' = fw m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j' < 0; 0 \\<le> n; i' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i' 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i' j i' j' =\n                                  fw m n k i' j' i' j';\n        j' < Suc j; Suc j \\<le> n; i' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  j' < 0\n  0 \\<le> n\n  i' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j' < 0; 0 \\<le> n; i' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i' 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i' j i' j' =\n                                  fw m n k i' j' i' j';\n        j' < Suc j; Suc j \\<le> n; i' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j' < 0\n  0 \\<le> n\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k i' 0 i' j' = fw m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i' 0 i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i' j i' j' =\n                                  fw m n k i' j' i' j';\n        j' < Suc j; Suc j \\<le> n; i' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i' j i' j' =\n                                  fw m n k i' j' i' j';\n        j' < Suc j; Suc j \\<le> n; i' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i' j i' j' = fw m n k i' j' i' j'\n  j' < Suc j\n  Suc j \\<le> n\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i' j i' j' =\n                                  fw m n k i' j' i' j';\n        j' < Suc j; Suc j \\<le> n; i' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>j' < j; j \\<le> n; i' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i' j i' j' = fw m n k i' j' i' j'\n  j' < Suc j\n  Suc j \\<le> n\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'", "by (cases \"j' = j\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fw m n k i' (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_iteration_inv':\n  \"i' < i \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' < 0; j' \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                    i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' < 0\n  j' \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' < 0; j' \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                    i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' < 0\n  j' \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k 0 j i' j' = fw m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k 0 j i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                    i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                    i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  j \\<le> n\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                    i \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  j \\<le> n\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                             i \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                             i \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "proof (cases \"i = i'\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n;\n     i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n  i \\<noteq> i'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n;\n     i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n  i = i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; 0 \\<le> n; Suc i \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n  i = i'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "using single_row_inv[of j' n n i' m k]"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  0 \\<le> n\n  Suc i \\<le> n\n  i = i'\n  \\<lbrakk>j' < n; n \\<le> n; i' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i' n i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "by (cases \"j' = n\") (fastforce simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                             i \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                             i \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  Suc j \\<le> n\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n;\n                             i \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' < Suc i; j' \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' < i; j' \\<le> n; ?j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  Suc j \\<le> n\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_iteration_inv:\n  \"i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n\\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j'", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' \\<le> 0\n  j' \\<le> j\n  0 \\<le> n\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' \\<le> 0\n  j' \\<le> j\n  0 \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k 0 j i' j' = fw m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> 0; j' \\<le> 0; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k 0 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; 0 \\<le> n; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' \\<le> 0\n  j' \\<le> 0\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> 0; j' \\<le> 0; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k 0 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; 0 \\<le> n; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' \\<le> 0\n  j' \\<le> 0\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k 0 0 i' j' = fw m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k 0 0 i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; 0 \\<le> n; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; 0 \\<le> n; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  0 \\<le> n\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; 0 \\<le> n; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  0 \\<le> n\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "using 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k 0 j i' j' = fw m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  0 \\<le> n\n  Suc j \\<le> n\n  i' \\<le> 0\n  j' \\<le> ja__\n  0 \\<le> n\n  ja__ \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'", "by (cases \"j' = Suc j\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fw m n k 0 (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k 0 j i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> j\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw m n k i j i' j' =\n                                     fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> j\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> 0; Suc i \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n;\n        Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> 0\n  Suc i \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> 0; Suc i \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n;\n        Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> 0\n  Suc i \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'", "by (cases \"i' = Suc i\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fw m n k (Suc i) 0 i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n;\n        Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n;\n        Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw m n k i j i' j' =\n        fw m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n;\n                 j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                                  fw m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n;\n        Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' =\n                         fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "proof (cases \"i' = Suc i\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "proof (cases \"j' = Suc j\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n  j' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' = Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' = Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "proof (cases \"j' = Suc j\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "using single_iteration_inv'[of i' \"Suc i\" j' n \"Suc j\" m k]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' = Suc j\n  \\<lbrakk>i' < Suc i; j' \\<le> n; Suc j \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n;\n                          j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fw m n k i j i' j' =\n     fw m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fw m n k (Suc i) j i' j' =\n                               fw m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc i \\<le> n; Suc j \\<le> n;\n     i' \\<noteq> Suc i; j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw m n k i j i' j' = fw m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j; i \\<le> n; ?j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i ?j i' j' = fw m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc i \\<le> n\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) (Suc j) i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k (Suc i) j i' j' = fw m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_innermost_id:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n 0 i' j' i j = m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i' j' i j = m i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  0 < i\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 \\<le> n; 0 < i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 \\<le> n; 0 < i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 0 i j = m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 (Suc j') i j = m i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 0 j' i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "case (Suc i')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n     i \\<le> n; j \\<le> n; 0 \\<le> n; Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  Suc i' < i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n     i \\<le> n; j \\<le> n; 0 \\<le> n; Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') 0 i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n              \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n   i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n              \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n   i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') (Suc j') i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') j' i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_middle_id:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n 0 i' j' i j = m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i' j' i j = m i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 < j; 0 \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 < j; 0 \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 0 i j = m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 0 j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 0 (Suc j') i j = m i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 0 j' i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "case (Suc i')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n     i \\<le> n; j \\<le> n; 0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n     i \\<le> n; j \\<le> n; 0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') 0 i j = m i j", "using fw_innermost_id"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n 0 ?i' ?j' ?i ?j = ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') 0 i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n   i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fw m n 0 i' j' i j = m i j;\n   i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 (Suc i') j' i j = m i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' ?j' i j = m i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i') (Suc j') i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 (Suc i') j' i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_outermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "using \\<open>j = 0\\<close>"], ["proof (prove)\nusing this:\n  i = 0\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 i j i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "case (Suc i')"], ["proof (state)\nthis:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "hence \"fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\""], ["proof (prove)\nusing this:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. fw m n 0 i' n (Suc i') 0 = m (Suc i') 0", "using fw_innermost_id[of \"Suc i'\" n 0 n i' m]"], ["proof (prove)\nusing this:\n  i = Suc i'\n  \\<lbrakk>Suc i' \\<le> n; 0 \\<le> n; n \\<le> n; i' < Suc i'\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i' n (Suc i') 0 = m (Suc i') 0", "using \\<open>i \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  i = Suc i'\n  \\<lbrakk>Suc i' \\<le> n; 0 \\<le> n; n \\<le> n; i' < Suc i'\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i' n (Suc i') 0 = m (Suc i') 0", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "using \\<open>j = 0\\<close> Suc"], ["proof (prove)\nusing this:\n  fw m n 0 i' n (Suc i') 0 = m (Suc i') 0\n  j = 0\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 i j i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 i j i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "assume \"i \\<le> n\" \"j \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "hence \"fw m n 0 i j' i (Suc j') = m i (Suc j')\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j' i (Suc j') = m i (Suc j')", "using fw_middle_id[of i n \"Suc j'\" j' i m] Suc"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  \\<lbrakk>i \\<le> n; Suc j' \\<le> n; j' < Suc j'; i \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j' i (Suc j') = m i (Suc j')\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j' i (Suc j') = m i (Suc j')", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j' i (Suc j') = m i (Suc j')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 i j' i (Suc j') = m i (Suc j')\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "using Suc"], ["proof (prove)\nusing this:\n  fw m n 0 i j' i (Suc j') = m i (Suc j')\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 i j i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_id1:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  0 < i\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j' i j = fw m n k i j i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 \\<le> n; 0 < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 \\<le> n; 0 < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "hence \"fw m n k n n i j = fw m n k i j i j\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n k n n i j = fw m n k i j i j", "using single_iteration_inv[of i n j n n m k]"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n  \\<lbrakk>i \\<le> n; j \\<le> n; n \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n k n n i j = fw m n k i j i j", "by simp"], ["proof (state)\nthis:\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 \\<le> n; 0 < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 0 i j = fw m n k i j i j", "using 0"], ["proof (prove)\nusing this:\n  fw m n k n n i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 0 i j = fw m n k i j i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 0 i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; 0 < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; 0 < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  0 < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "case (Suc i')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                    i' < i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                  fw m n k i j i j;\n     i \\<le> n; j \\<le> n; 0 \\<le> n; Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  Suc i' < i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                  fw m n k i j i j;\n     i \\<le> n; j \\<le> n; 0 \\<le> n; Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n              \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n   i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n;\n                             i' < i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' \\<le> n; Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n              \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n   i \\<le> n; j \\<le> n; j' \\<le> n; Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' \\<le> n; i' < i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' \\<le> n\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') (Suc j') i j = fw m n k i j i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') (Suc j') i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_id2:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "hence \"fw m n k n n i j = fw m n k i j i j\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n k n n i j = fw m n k i j i j", "using single_iteration_inv[of i n j n n m k]"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n  \\<lbrakk>i \\<le> n; j \\<le> n; n \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n k n n i j = fw m n k i j i j", "by simp"], ["proof (state)\nthis:\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "with 0"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j' i j = fw m n k i j i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 < j; 0 \\<le> i;\n     fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n                 fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i;\n        fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; 0 < j; 0 \\<le> i;\n     fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n                 fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i;\n        fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 0 i j = fw m n k i j i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 0 i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n                 fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i;\n        fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n                 fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i;\n        fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n   fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n                 fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) 0 j' i j =\n                                  fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; 0 \\<le> i;\n        fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; 0 \\<le> i;\n   fw m n k n n i j = fw m n k i j i j\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) 0 j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  0 \\<le> i\n  fw m n k n n i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 (Suc j') i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "case (Suc i')"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                    i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                     fw m n k i j i j;\n        i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                  fw m n k i j i j;\n     i \\<le> n; j \\<le> n; 0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n                                  fw m n k i j i j;\n     i \\<le> n; j \\<le> n; 0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j", "using Suc_innermost_id1"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  0 < j\n  Suc i' \\<le> i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') 0 i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n   i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>i \\<le> n; j \\<le> n; j' < j;\n                             i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fw m n (Suc k) i' j' i j =\n        fw m n k i j i j;\n                 i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j =\n                                  fw m n k i j i j;\n        \\<And>j'.\n           \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n        i \\<le> n; j \\<le> n; Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i') (Suc j') i j =\n                         fw m n k i j i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k i j i j;\n   i \\<le> n; j \\<le> n; j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n  \\<lbrakk>i \\<le> n; j \\<le> n; ?j' < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' ?j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i') (Suc j') i j = fw m n k i j i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') (Suc j') i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i') j' i j = fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_id1':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> i' < i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "case 1"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  i' < i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "hence \"fw m n (Suc k) i' j' i j = fw m n k i j i j\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  i' < i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k i j i j", "using Suc_innermost_id1"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  i' < i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k i j i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' \\<le> n; i' < i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k n n i j", "using 1 single_iteration_inv[of i n]"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' \\<le> n\n  i' < i\n  \\<lbrakk>i \\<le> n; ?j' \\<le> ?j; n \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k n ?j i ?j' = fw ?m ?n ?k i ?j' i ?j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k n n i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i j = fw m n k n n i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_id2':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "case 1"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "hence \"fw m n (Suc k) i' j' i j = fw m n k i j i j\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k i j i j", "using Suc_innermost_id2"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  i' \\<le> i\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k i j i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j = fw m n k n n i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k n n i j", "using 1 single_iteration_inv[of i n]"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i j = fw m n k i j i j\n  i \\<le> n\n  j \\<le> n\n  j' < j\n  i' \\<le> i\n  \\<lbrakk>i \\<le> n; ?j' \\<le> ?j; n \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k n ?j i ?j' = fw ?m ?n ?k i ?j' i ?j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i j = fw m n k n n i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i j = fw m n k n n i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "using \\<open>j = 0\\<close> single_iteration_inv[of 0 n 0 n n m k]"], ["proof (prove)\nusing this:\n  i = 0\n  j = 0\n  \\<lbrakk>0 \\<le> n; 0 \\<le> n; n \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k n n 0 0 = fw m n k 0 0 0 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "case (Suc i')"], ["proof (state)\nthis:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "using Suc_innermost_id1 \\<open>i \\<le> n\\<close> \\<open>j = 0\\<close>"], ["proof (prove)\nusing this:\n  i = Suc i'\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n  i \\<le> n\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "by (auto simp: fw_upd_def upd_def local.min.coboundedI1)"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "assume \"i \\<le> n\" \"j \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "using Suc Suc_innermost_id2"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  j = Suc j'\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> fw m n k i j i j", "by (auto simp: fw_upd_def upd_def local.min.coboundedI1)"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_mono':\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n k i j i j \\<le> m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i j \\<le> m i j", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j \\<le> m i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "using fw_outermost_mono"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n 0 ?i ?j ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> m i j", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j i j \\<le> m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> m i j", "using Suc_innermost_mono[OF Suc.prems, of m k]"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n  fw m n (Suc k) i j i j \\<le> fw m n k i j i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "proof (cases k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case 0"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "assume 0: \"i \\<le> n\" \"j \\<le> n\" \"i' \\<le> n\" \"j' \\<le> n\" \"k = 0\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof (cases \"i' \\<le> i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     \\<not> i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case False"], ["proof (state)\nthis:\n  \\<not> i' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     \\<not> i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using 0 fw_innermost_id"], ["proof (prove)\nusing this:\n  \\<not> i' \\<le> i\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n 0 ?i' ?j' ?i ?j = ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case True"], ["proof (state)\nthis:\n  i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n; k = 0;\n     i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof (cases \"j' \\<le> j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case True"], ["proof (state)\nthis:\n  j' \\<le> j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "have \"fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'", "using fw_invariant True \\<open>i' \\<le> i\\<close> 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n;\n   ?j'' \\<le> ?j; ?i'' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k' ?i'' ?j'' ?i' ?j'\n  j' \\<le> j\n  i' \\<le> i\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "also"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "have \"fw m n 0 i' j' i' j' \\<le> m i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' j'", "using 0 fw_outermost_mono"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n 0 ?i ?j ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' j'", "by blast"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "finally"], ["proof (chain)\npicking this:\n  fw m n 0 i j i' j' \\<le> m i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by (simp add: \\<open>k = 0\\<close>)"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case False"], ["proof (state)\nthis:\n  \\<not> j' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i' \\<le> i; \\<not> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof (cases \"i = i'\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> j' \\<le> j; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>\\<not> j' \\<le> j; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case 1"], ["proof (state)\nthis:\n  \\<not> j' \\<le> j\n  i = i'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> j' \\<le> j; i = i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>\\<not> j' \\<le> j; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "then"], ["proof (chain)\npicking this:\n  \\<not> j' \\<le> j\n  i = i'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n  i = i'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using fw_middle_id[of i' n j' j i' m] 0"], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n  i = i'\n  \\<lbrakk>i' \\<le> n; j' \\<le> n; j < j'; i' \\<le> i'\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' j i' j' = m i' j'\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> j' \\<le> j; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> j' \\<le> j; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case 2"], ["proof (state)\nthis:\n  \\<not> j' \\<le> j\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> j' \\<le> j; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "then"], ["proof (chain)\npicking this:\n  \\<not> j' \\<le> j\n  i \\<noteq> i'", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using single_iteration_inv'[of i' i j' n j m 0] \\<open>i' \\<le> i\\<close> fw_middle_id[of i' n j' j i' m]\n              fw_outermost_mono[of i' n j' m] 0"], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n  i \\<noteq> i'\n  \\<lbrakk>i' < i; j' \\<le> n; j \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n  i' \\<le> i\n  \\<lbrakk>i' \\<le> n; j' \\<le> n; j < j'; i' \\<le> i'\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' j i' j' = m i' j'\n  \\<lbrakk>i' \\<le> n; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' j' i' j' \\<le> m i' j'\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  k = 0\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by simp"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case (Suc k)"], ["proof (state)\nthis:\n  k = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "assume prems: \"i \\<le> n\" \"j \\<le> n\" \"i' \\<le> n\" \"j' \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n        k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof (cases \"i' \\<le> i \\<and> j' \\<le> j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     i' \\<le> i \\<and> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case True"], ["proof (state)\nthis:\n  i' \\<le> i \\<and> j' \\<le> j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     i' \\<le> i \\<and> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "hence \"fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\""], ["proof (prove)\nusing this:\n  i' \\<le> i \\<and> j' \\<le> j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'", "using prems single_iteration_inv"], ["proof (prove)\nusing this:\n  i' \\<le> i \\<and> j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'", "by blast"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     i' \\<le> i \\<and> j' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using Suc prems fw_mono'"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\n  k = Suc k\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case False"], ["proof (state)\nthis:\n  \\<not> (i' \\<le> i \\<and> j' \\<le> j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     \\<not> (i' \\<le> i \\<and> j' \\<le> j)\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (i' \\<le> i \\<and> j' \\<le> j)\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> i' \\<le> i \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "assume \"\\<not> i' \\<le> i\""], ["proof (state)\nthis:\n  \\<not> i' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<not> i' \\<le> i \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i' \\<le> i\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using Suc prems fw_mono' Suc_innermost_id1"], ["proof (prove)\nusing this:\n  \\<not> i' \\<le> i\n  k = Suc k\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i ?j \\<le> ?m ?i ?j\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "assume \"\\<not> j' \\<le> j\""], ["proof (state)\nthis:\n  \\<not> j' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "hence \"j < j'\""], ["proof (prove)\nusing this:\n  \\<not> j' \\<le> j\n\ngoal (1 subgoal):\n 1. j < j'", "by simp"], ["proof (state)\nthis:\n  j < j'\n\ngoal (1 subgoal):\n 1. \\<not> j' \\<le> j \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "proof (cases \"i \\<le> i'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<not> i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case True"], ["proof (state)\nthis:\n  i \\<le> i'\n\ngoal (2 subgoals):\n 1. i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'\n 2. \\<not> i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> i'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using Suc prems Suc_innermost_id2 \\<open>j < j'\\<close> fw_mono'"], ["proof (prove)\nusing this:\n  i \\<le> i'\n  k = Suc k\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?i ?j ?i ?j\n  j < j'\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "case False"], ["proof (state)\nthis:\n  \\<not> i \\<le> i'\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> i' \\<Longrightarrow> fw m n k i j i' j' \\<le> m i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i \\<le> i'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "using single_iteration_inv' Suc prems fw_mono'"], ["proof (prove)\nusing this:\n  \\<not> i \\<le> i'\n  \\<lbrakk>?i' < ?i; ?j' \\<le> ?n; ?j \\<le> ?n; ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  k = Suc k\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> m i' j'", "by auto"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> m i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_mono_neutr:\n  assumes \"\\<one> \\<le> b\"\n  shows \"a \\<le> a + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> a + b", "using neutr add_mono assms"], ["proof (prove)\nusing this:\n  ?x + \\<one> = ?x\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> a + b", "by force"], ["", "lemma add_mono_neutl:\n  assumes \"\\<one> \\<le> b\"\n  shows \"a \\<le> b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b + a", "using neutr add_mono assms"], ["proof (prove)\nusing this:\n  ?x + \\<one> = ?x\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b + a", "by force"], ["", "lemma fw_step_0:\n  \"m 0 0 \\<ge> \\<one> \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "case 0"], ["proof (state)\nthis:\n  \\<one> \\<le> m 0 0\n  0 \\<le> n\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<one> \\<le> m 0 0\n  0 \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n 2. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n 2. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "case (Suc j)"], ["proof (state)\nthis:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "hence \"fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\""], ["proof (prove)\nusing this:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)", "using 0 fw_middle_id[of 0 n \"Suc j\" j 0 m]"], ["proof (prove)\nusing this:\n  j = Suc j\n  \\<one> \\<le> m 0 0\n  0 \\<le> n\n  j \\<le> n\n  \\<lbrakk>0 \\<le> n; Suc j \\<le> n; j < Suc j; 0 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)", "by fast"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "moreover"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "have \"fw m n 0 0 j 0 0 = m 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 0 = m 0 0", "using single_iteration_inv[of 0 0 0 j n m 0] Suc 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> 0; 0 \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j 0 0 = fw m n 0 0 0 0 0\n  j = Suc j\n  \\<one> \\<le> m 0 0\n  0 \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 0 = m 0 0", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<one> \\<le> m 0 0; 0 \\<le> n; j \\<le> n;\n        j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n  fw m n 0 0 j 0 0 = m 0 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n  fw m n 0 0 j 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "using Suc"], ["proof (prove)\nusing this:\n  fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n  fw m n 0 0 j 0 0 = m 0 0\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 j = min (m 0 j) (m 0 0 + m 0 j)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "note A = this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n 0 i j i j =\n                                  min (m i j) (m i 0 + m 0 j);\n        \\<one> \\<le> m 0 0; Suc i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n 0 (Suc i) j (Suc i) j =\n                         min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"fw m n 0 i n (Suc i) 0 = m (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i n (Suc i) 0 = m (Suc i) 0", "using fw_innermost_id[of \"Suc i\" n 0 n i m] Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc i \\<le> n; 0 \\<le> n; n \\<le> n; i < Suc i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i n (Suc i) 0 = m (Suc i) 0", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "moreover"], ["proof (state)\nthis:\n  fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"fw m n 0 i n 0 0 = m 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i n 0 0 = m 0 0", "using Suc single_iteration_inv[of 0 i 0 n n m 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n  \\<lbrakk>0 \\<le> i; 0 \\<le> n; i \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i n 0 0 = fw m n 0 0 0 0 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i n 0 0 = m 0 0", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n 0 i n 0 0 = m 0 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n  fw m n 0 i n 0 0 = m 0 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n  fw m n 0 i n 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "using 0"], ["proof (prove)\nusing this:\n  fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n  fw m n 0 i n 0 0 = m 0 0\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "case (Suc j)"], ["proof (state)\nthis:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have *: \"fw m n 0 0 j 0 0 = m 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 0 = m 0 0", "using single_iteration_inv[ of 0 0 0 j n m 0] A Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> 0; 0 \\<le> j; 0 \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j 0 0 = fw m n 0 0 0 0 0\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 0 j 0 0 = m 0 0", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n 0 0 j 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have **: \"fw m n 0 i n 0 0 = m 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i n 0 0 = m 0 0", "using single_iteration_inv[of 0 i 0 n n m 0] A"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> i; 0 \\<le> n; i \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i n 0 0 = fw m n 0 0 0 0 0\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i n 0 0 = m 0 0", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n 0 i n 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"m 0 (Suc j) = fw_upd m 0 0 (Suc j) 0 (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m 0 (Suc j) = fw_upd m 0 0 (Suc j) 0 (Suc j)", "using \\<open>m 0 0 >= \\<one>\\<close>"], ["proof (prove)\nusing this:\n  \\<one> \\<le> m 0 0\n\ngoal (1 subgoal):\n 1. m 0 (Suc j) = fw_upd m 0 0 (Suc j) 0 (Suc j)", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  m 0 (Suc j) = fw_upd m 0 0 (Suc j) 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "also"], ["proof (state)\nthis:\n  m 0 (Suc j) = fw_upd m 0 0 (Suc j) 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"\\<dots> = fw m n 0 0 (Suc j) 0 (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd m 0 0 (Suc j) 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)", "using fw_middle_id[of 0 n \"Suc j\" j 0 m] Suc A(4)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> n; Suc j \\<le> n; j < Suc j; 0 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 0 j 0 (Suc j) = m 0 (Suc j)\n  j = Suc j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw_upd m 0 0 (Suc j) 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)", "by (simp add: fw_upd_def upd_def *)"], ["proof (state)\nthis:\n  fw_upd m 0 0 (Suc j) 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "finally"], ["proof (chain)\npicking this:\n  m 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)", "have ***: \"fw m n 0 (Suc i) j 0 (Suc j) = m 0 (Suc j)\""], ["proof (prove)\nusing this:\n  m 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j 0 (Suc j) = m 0 (Suc j)", "using single_iteration_inv'[of 0 \"Suc i\" \"Suc j\" n j m 0] A Suc"], ["proof (prove)\nusing this:\n  m 0 (Suc j) = fw m n 0 0 (Suc j) 0 (Suc j)\n  \\<lbrakk>0 < Suc i; Suc j \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 (Suc i) j 0 (Suc j) =\n                    fw m n 0 0 (Suc j) 0 (Suc j)\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j 0 (Suc j) = m 0 (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"m (Suc i) 0 = fw_upd m 0 (Suc i) 0 (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m (Suc i) 0 = fw_upd m 0 (Suc i) 0 (Suc i) 0", "using \\<open>m 0 0 >= \\<one>\\<close>"], ["proof (prove)\nusing this:\n  \\<one> \\<le> m 0 0\n\ngoal (1 subgoal):\n 1. m (Suc i) 0 = fw_upd m 0 (Suc i) 0 (Suc i) 0", "by (auto simp add: fw_upd_def upd_def min_def intro: add_mono_neutr)"], ["proof (state)\nthis:\n  m (Suc i) 0 = fw_upd m 0 (Suc i) 0 (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "also"], ["proof (state)\nthis:\n  m (Suc i) 0 = fw_upd m 0 (Suc i) 0 (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"\\<dots> = fw m n 0 (Suc i) 0 (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd m 0 (Suc i) 0 (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0", "using fw_innermost_id[of \"Suc i\" n 0 n i m] \\<open>Suc i \\<le> n\\<close> **"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc i \\<le> n; 0 \\<le> n; n \\<le> n; i < Suc i\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i n (Suc i) 0 = m (Suc i) 0\n  Suc i \\<le> n\n  fw m n 0 i n 0 0 = m 0 0\n\ngoal (1 subgoal):\n 1. fw_upd m 0 (Suc i) 0 (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw_upd m 0 (Suc i) 0 (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "finally"], ["proof (chain)\npicking this:\n  m (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0", "have \"fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\""], ["proof (prove)\nusing this:\n  m (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0", "using single_iteration_inv A Suc"], ["proof (prove)\nusing this:\n  m (Suc i) 0 = fw m n 0 (Suc i) 0 (Suc i) 0\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0", "by auto"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "moreover"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "have \"fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)", "using fw_middle_id A Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n 0 ?i' ?j' ?i ?j = ?m ?i ?j\n  \\<lbrakk>\\<one> \\<le> m 0 0; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i j i j = min (m i j) (m i 0 + m 0 j)\n  \\<one> \\<le> m 0 0\n  Suc i \\<le> n\n  j \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n 0 (Suc i) j (Suc i) j =\n       min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\n  fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\n  fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "using Suc ***"], ["proof (prove)\nusing this:\n  fw m n 0 (Suc i) j (Suc i) 0 = m (Suc i) 0\n  fw m n 0 (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n  j = Suc j\n  fw m n 0 (Suc i) j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 (Suc i) j (Suc i) j = min (m (Suc i) j) (m (Suc i) 0 + m 0 j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_step_Suc:\n  \"\\<forall> k'\\<le>n. fw m n k n n k' k' \\<ge> \\<one> \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> Suc k \\<le> n\n    \\<Longrightarrow> fw m n (Suc k) i j i j = min (fw m n k n n i j) (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; i \\<le> n;\n     j \\<le> n; Suc k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i j =\n                      min (fw m n k n n i j)\n                       (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; 0 \\<le> n;\n     j \\<le> n; Suc k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                      min (fw m n k n n 0 j)\n                       (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "case 0"], ["proof (state)\nthis:\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; 0 \\<le> n;\n     j \\<le> n; Suc k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                      min (fw m n k n n 0 j)\n                       (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 j =\n    min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; 0 \\<le> n;\n     j \\<le> n; Suc k \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                      min (fw m n k n n 0 j)\n                       (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; 0 \\<le> n;\n     j \\<le> n; Suc k \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                      min (fw m n k n n 0 j)\n                       (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 j =\n    min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 j =\n  min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "case (Suc j)"], ["proof (state)\nthis:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "then"], ["proof (chain)\npicking this:\n  j = Suc j", "have\n      \"fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\""], ["proof (prove)\nusing this:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)", "using 0(2-) Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  j = Suc j\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "proof (cases \"j < Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "case True"], ["proof (state)\nthis:\n  j < Suc k\n\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "using 0 Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  j < Suc k\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> j < Suc k\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "hence\n        \"fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\""], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)", "using 0(2-) Suc Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j = Suc j\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "have \"fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using 0(2-) Suc Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j = Suc j\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "have \"fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)", "using False single_iteration_inv 0(2-) Suc"], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)", "by force"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "using 0(1)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) 0 k 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n (Suc k) 0 k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n (Suc k) 0 (Suc k) 0 (Suc k)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutr)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)", "using 0(2-) Suc Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j = Suc j\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n        0 \\<le> n; j \\<le> n; Suc k \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) 0 j 0 j =\n                         min (fw m n k n n 0 j)\n                          (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 j =\n    min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "using Suc"], ["proof (prove)\nusing this:\n  fw m n k n n 0 (Suc j) = fw m n (Suc k) 0 j 0 (Suc j)\n  fw m n (Suc k) 0 j 0 (Suc k) = fw m n k n n 0 (Suc k)\n  fw m n k n n (Suc k) (Suc j) = fw m n (Suc k) 0 j (Suc k) (Suc j)\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) 0 j 0 j =\n    min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 j =\n  min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) 0 j 0 j =\n  min (fw m n k n n 0 j) (fw m n k n n 0 (Suc k) + fw m n k n n (Suc k) j)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; i \\<le> n;\n   j \\<le> n; Suc k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i j i j =\n                    min (fw m n k n n i j)\n                     (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "note A = this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; i \\<le> n;\n   j \\<le> n; Suc k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i j i j =\n                    min (fw m n k n n i j)\n                     (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k';\n                 i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n (Suc k) i j i j =\n                                  min (fw m n k n n i j)\n                                   (fw m n k n n i (Suc k) +\n                                    fw m n k n n (Suc k) j);\n        \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; Suc i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) j =\n                         min (fw m n k n n (Suc i) j)\n                          (fw m n k n n (Suc i) (Suc k) +\n                           fw m n k n n (Suc k) j)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "hence\n      \"fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\""], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0", "using Suc_innermost_id1' \\<open>Suc i \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  j = 0\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "using Suc_innermost_id1' A(3,5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "proof (cases \"i < Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n 2. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "case True"], ["proof (state)\nthis:\n  i < Suc k\n\ngoal (2 subgoals):\n 1. i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n 2. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  i < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "using Suc_innermost_id1' A(3,5)"], ["proof (prove)\nusing this:\n  i < Suc k\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "case False"], ["proof (state)\nthis:\n  \\<not> i < Suc k\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "have \"fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id1' \\<open>Suc i \\<le> n\\<close> False"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  \\<not> i < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "have \"fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0", "using Suc_innermost_id1' \\<open>Suc i \\<le> n\\<close> False"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' \\<le> ?n; ?i' < ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  \\<not> i < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "have \"fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0", "using single_iteration_inv \\<open>Suc i \\<le> n\\<close> False"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  Suc i \\<le> n\n  \\<not> i < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0\n\ngoal (1 subgoal):\n 1. \\<not> i < Suc k \\<Longrightarrow>\n    fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\n  fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\n  fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "using Suc(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) k n (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) k n (Suc k) 0 = fw m n k n n (Suc k) 0\n  fw m n (Suc k) i n (Suc k) 0 = fw m n (Suc k) (Suc k) 0 (Suc k) 0\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\n  fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\n  fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "using 0"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i n (Suc i) 0 = fw m n k n n (Suc i) 0\n  fw m n (Suc k) i n (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) i n (Suc k) 0 = fw m n k n n (Suc k) 0\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) j =\n  min (fw m n k n n (Suc i) j)\n   (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "case (Suc j)"], ["proof (state)\nthis:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "hence \"fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\""], ["proof (prove)\nusing this:\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)", "using Suc_innermost_id2' A(3,4)"], ["proof (prove)\nusing this:\n  j = Suc j\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "proof (cases \"j < Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "case True"], ["proof (state)\nthis:\n  j < Suc k\n\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "using Suc A(3-) Suc_innermost_id2'"], ["proof (prove)\nusing this:\n  j < Suc k\n  j = Suc j\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> j < Suc k\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "have *:\"fw m n (Suc k) (Suc i) k (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "using Suc_innermost_id2' A(3,5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc i \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "have **:\"fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "proof (cases \"Suc i \\<le> Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n 2. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "case True"], ["proof (state)\nthis:\n  Suc i \\<le> Suc k\n\ngoal (2 subgoals):\n 1. Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n 2. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id2' A(5)"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc k\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "hence \"fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\""], ["proof (prove)\nusing this:\n  \\<not> Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n    fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)", "using single_iteration_inv'[of \"Suc k\" \"Suc i\" \"Suc k\" n k m \"Suc k\"] A(3)"], ["proof (prove)\nusing this:\n  \\<not> Suc i \\<le> Suc k\n  \\<lbrakk>Suc k < Suc i; Suc k \\<le> n; k \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n                    fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  Suc i \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n    fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "have \"fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id2' A(5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using A(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "have \"fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) =\n    fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)", "using False single_iteration_inv[of \"Suc i\" \"Suc i\" \"Suc k\" j n m \"Suc k\"] A(3-) Suc"], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n  \\<lbrakk>Suc i \\<le> Suc i; Suc k \\<le> j; Suc i \\<le> n;\n   j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc i) (Suc k) =\n                    fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) =\n    fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) =\n  fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "also"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) =\n  fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "have \"\\<dots> = fw m n k n n (Suc i) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k) =\n    fw m n k n n (Suc i) (Suc k)", "using * ** A(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) k (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) (Suc i) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k) =\n    fw m n k n n (Suc i) (Suc k)", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutr)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) (Suc k) (Suc i) (Suc k) =\n  fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "finally"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "have \"fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "proof (cases \"Suc i \\<le> Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n 2. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "case True"], ["proof (state)\nthis:\n  Suc i \\<le> Suc k\n\ngoal (2 subgoals):\n 1. Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n 2. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "using Suc_innermost_id2' Suc A(3-5)"], ["proof (prove)\nusing this:\n  Suc i \\<le> Suc k\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  j = Suc j\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "have \"fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "proof (cases \"j < Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "case True"], ["proof (state)\nthis:\n  j < Suc k\n\ngoal (2 subgoals):\n 1. j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n 2. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id2' A(5)"], ["proof (prove)\nusing this:\n  j < Suc k\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> j < Suc k\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "hence \"fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\""], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n    fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)", "using single_iteration_inv A(3,4) Suc"], ["proof (prove)\nusing this:\n  \\<not> j < Suc k\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  Suc i \\<le> n\n  j \\<le> n\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n    fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "have \"fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id2' A(5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> j < Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using A(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) =\n  fw m n (Suc k) (Suc k) (Suc k) (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "have \"fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "using Suc_innermost_id2' Suc A(3-5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  j = Suc j\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "have \"fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\""], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n    fw m n k n n (Suc k) (Suc j)", "using A(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  fw m n (Suc k) (Suc k) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n    fw m n k n n (Suc k) (Suc j)", "by (auto simp add: fw_upd_def upd_def \\<open>Suc k \\<le> n\\<close> min_def intro: add_mono_neutl)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n  fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n  fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "have \"fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n    fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)", "using single_iteration_inv'[of \"Suc k\" \"Suc i\" \"Suc j\" n j m \"Suc k\"] Suc A(3-) False"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc k < Suc i; Suc j \\<le> n; j \\<le> n; Suc i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n                    fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n  j = Suc j\n  Suc i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<not> Suc i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n    fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "have \"fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "using Suc_innermost_id2' A(5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n (Suc ?k) ?i' ?j' ?i ?j =\n                    fw ?m ?n ?k ?n ?n ?i ?j\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> Suc k \\<Longrightarrow>\n    fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n  fw m n k n n (Suc k) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n  fw m n k n n (Suc k) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "using A(2)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j) =\n  fw m n k n n (Suc k) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) =\n  fw m n (Suc k) (Suc k) (Suc j) (Suc k) (Suc j)\n  fw m n (Suc k) (Suc k) k (Suc k) (Suc k) = fw m n k n n (Suc k) (Suc k)\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       fw m n (Suc k) (Suc i) j (Suc i) j =\n       min (fw m n k n n (Suc i) j)\n        (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "using Suc"], ["proof (prove)\nusing this:\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc j) = fw m n k n n (Suc i) (Suc j)\n  fw m n (Suc k) (Suc i) j (Suc i) (Suc k) = fw m n k n n (Suc i) (Suc k)\n  fw m n (Suc k) (Suc i) j (Suc k) (Suc j) = fw m n k n n (Suc k) (Suc j)\n  j = Suc j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) (Suc i) j (Suc i) j =\n    min (fw m n k n n (Suc i) j)\n     (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) j =\n  min (fw m n k n n (Suc i) j)\n   (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) (Suc i) j (Suc i) j =\n  min (fw m n k n n (Suc i) j)\n   (fw m n k n n (Suc i) (Suc k) + fw m n k n n (Suc k) j)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Length of Paths\\<close>"], ["", "fun len :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat list \\<Rightarrow> 'a\" where\n  \"len m u v [] = m u v\" |\n  \"len m u v (w#ws) = m u w + len m w v ws\""], ["", "lemma len_decomp: \"xs = ys @ y # zs \\<Longrightarrow> len m x z xs = len m x y ys + len m y z zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = ys @ y # zs \\<Longrightarrow>\n    len m x z xs = len m x y ys + len m y z zs", "by (induction ys arbitrary: x xs) (simp add: assoc)+"], ["", "lemma len_comp: \"len m a c (xs @ b # ys) = len m a b xs + len m b c ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m a c (xs @ b # ys) = len m a b xs + len m b c ys", "by (induction xs arbitrary: a) (auto simp: assoc)"], ["", "subsection \\<open>Shortening Negative Cycles\\<close>"], ["", "lemma remove_cycles_neg_cycles_aux:\n  fixes i xs ys\n  defines \"xs' \\<equiv> i # ys\"\n  assumes \"i \\<notin> set ys\"\n  assumes \"i \\<in> set xs\"\n  assumes \"xs = as @ concat (map ((#) i) xss) @ xs'\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "using assms"], ["proof (prove)\nusing this:\n  xs' \\<equiv> i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) xss) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "proof (induction xss arbitrary: xs as)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) []) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "case Nil"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) []) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "with Nil"], ["proof (chain)\npicking this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "proof (cases \"len m i i as \\<ge> \\<one>\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "case 1"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  \\<one> \\<le> len m i i as\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "from this(4,6) len_decomp[of xs as i ys m i j]"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) []) @ xs'\n  xs' = i # ys\n  xs = as @ i # ys \\<Longrightarrow>\n  len m i j xs = len m i i as + len m i j ys", "have \"len m i j xs = len m i i as + len m i j ys\""], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) []) @ xs'\n  xs' = i # ys\n  xs = as @ i # ys \\<Longrightarrow>\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j xs = len m i i as + len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "with 1(11)"], ["proof (chain)\npicking this:\n  \\<one> \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys", "have \"len m i j ys \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "using add_mono"], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j ys \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m i j ys \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "using Nil(5)"], ["proof (prove)\nusing this:\n  len m i j ys \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "case 2"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> \\<one> \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "thus ?case"], ["proof (prove)\nusing this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> \\<one> \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "case (Cons zs xss)"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs;\n   ?xs = ?as @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m i i ys < \\<one>\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "let ?xs = \"zs @ concat (map ((#) i) xss) @ xs'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>;\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < \\<one>", "from Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs;\n   ?xs = ?as @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m i i ys < \\<one>\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs;\n   ?xs = ?as @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m i i ys < \\<one>\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "proof (cases \"len m i i as \\<ge> \\<one>\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs;\n   ?xs = ?as @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m i i ys < \\<one>\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n  \\<one> \\<le> len m i i as\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "from this(5,7) len_decomp add_mono"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<one> \\<le> len m i i as\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d", "have \"len m i j ?xs \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<one> \\<le> len m i i as\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "hence 4:\"len m i j ?xs < len m i j ys\""], ["proof (prove)\nusing this:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys", "using 1(6)"], ["proof (prove)\nusing this:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "have 2:\"i \\<in> set ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')", "using Cons(2)"], ["proof (prove)\nusing this:\n  xs' = i # ys\n\ngoal (1 subgoal):\n 1. i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')", "by auto"], ["proof (state)\nthis:\n  i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "have \"set ?xs \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs", "using Cons(5)"], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n\ngoal (1 subgoal):\n 1. set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "moreover"], ["proof (state)\nthis:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "from Cons(1)[OF 1(2,3) 2 _ 4]"], ["proof (chain)\npicking this:\n  zs @ concat (map ((#) i) xss) @ xs' =\n  ?as @ concat (map ((#) i) xss) @ xs' \\<Longrightarrow>\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < \\<one>", "have \"\\<exists>ys. set ys \\<subseteq> set ?xs \\<and> len m i i ys < \\<one>\""], ["proof (prove)\nusing this:\n  zs @ concat (map ((#) i) xss) @ xs' =\n  ?as @ concat (map ((#) i) xss) @ xs' \\<Longrightarrow>\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n       len m i i ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < \\<one>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs;\n   ?xs = ?as @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m i i ys < \\<one>\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> \\<one> \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < \\<one>;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> \\<one> \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < \\<one>", "from this(5,7)"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<not> \\<one> \\<le> len m i i as", "show ?case"], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<not> \\<one> \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_lt_neutral: \"a + b < b \\<Longrightarrow> a < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b < b \\<Longrightarrow> a < \\<one>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < \\<one>\\<rbrakk> \\<Longrightarrow> False", "assume \"a + b < b\" \"\\<not> a < \\<one>\""], ["proof (state)\nthis:\n  a + b < b\n  \\<not> a < \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < \\<one>\\<rbrakk> \\<Longrightarrow> False", "hence \"a \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  a + b < b\n  \\<not> a < \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> a", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<le> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < \\<one>\\<rbrakk> \\<Longrightarrow> False", "from add_mono[OF this, of b b] \\<open>a + b < b\\<close>"], ["proof (chain)\npicking this:\n  b \\<le> b \\<Longrightarrow> \\<one> + b \\<le> a + b\n  a + b < b", "show False"], ["proof (prove)\nusing this:\n  b \\<le> b \\<Longrightarrow> \\<one> + b \\<le> a + b\n  a + b < b\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_neg_cycles_aux':\n  fixes j xs ys\n  assumes \"j \\<notin> set ys\"\n  assumes \"j \\<in> set xs\"\n  assumes \"xs = ys @ j # concat (map (\\<lambda> xs. xs @ [j]) xss) @ as\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "using assms"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "proof (induction xss arbitrary: xs as)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "case Nil"], ["proof (state)\nthis:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "proof (cases \"len m j j as \\<ge> \\<one>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "case True"], ["proof (state)\nthis:\n  \\<one> \\<le> len m j j as\n\ngoal (2 subgoals):\n 1. \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "from Nil(3) len_decomp[of xs ys j as m i j]"], ["proof (chain)\npicking this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  xs = ys @ j # as \\<Longrightarrow>\n  len m i j xs = len m i j ys + len m j j as", "have \"len m i j xs = len m i j ys + len m j j as\""], ["proof (prove)\nusing this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  xs = ys @ j # as \\<Longrightarrow>\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (1 subgoal):\n 1. len m i j xs = len m i j ys + len m j j as", "by simp"], ["proof (state)\nthis:\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (2 subgoals):\n 1. \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "with True"], ["proof (chain)\npicking this:\n  \\<one> \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as", "have \"len m i j ys \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "using add_mono"], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j ys \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "with Nil"], ["proof (chain)\npicking this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  len m i j ys \\<le> len m i j xs", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  len m i j ys \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "case False"], ["proof (state)\nthis:\n  \\<not> \\<one> \\<le> len m j j as\n\ngoal (1 subgoal):\n 1. \\<not> \\<one> \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "with Nil"], ["proof (chain)\npicking this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  \\<not> \\<one> \\<le> len m j j as", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  \\<not> \\<one> \\<le> len m j j as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "case (Cons zs xss)"], ["proof (state)\nthis:\n  \\<lbrakk>j \\<notin> set ys; j \\<in> set ?xs;\n   ?xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as;\n   len m i j ?xs < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs \\<and>\n                       len m j j ys < \\<one>\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "let ?xs = \"ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "let ?t = \"concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>;\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < \\<one>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "proof (cases \"len m i j ?xs \\<le> len m i j xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "case True"], ["proof (state)\nthis:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "hence 4:\"len m i j ?xs < len m i j ys\""], ["proof (prove)\nusing this:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m i j ys", "using Cons(5)"], ["proof (prove)\nusing this:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m i j ys\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "have 2:\"j \\<in> set ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "using Cons(2)"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "have \"set ?xs \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<subseteq> set xs", "using Cons(4)"], ["proof (prove)\nusing this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n\ngoal (1 subgoal):\n 1. set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "moreover"], ["proof (state)\nthis:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "from Cons(1)[OF Cons(2) 2 _ 4]"], ["proof (chain)\npicking this:\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as \\<Longrightarrow>\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < \\<one>", "have \"\\<exists>ys. set ys \\<subseteq> set ?xs \\<and> len m j j ys < \\<one>\""], ["proof (prove)\nusing this:\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as \\<Longrightarrow>\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       set ysa\n       \\<subseteq> set (ys @\n                        j #\n                        concat (map (\\<lambda>xs. xs @ [j]) xss) @\n                        as) \\<and>\n       len m j j ysa < \\<one>", "by blast"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < \\<one>\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "hence \"len m i j xs < len m i j ?xs\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j xs\n    < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "from this len_decomp Cons(4) add_mono"], ["proof (chain)\npicking this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d", "have \"len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as) < len m j j ?t\""], ["proof (prove)\nusing this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "using False local.leI"], ["proof (prove)\nusing this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by fastforce"], ["proof (state)\nthis:\n  len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "hence \"len m j j (zs @ j # ?t) < len m j j ?t\""], ["proof (prove)\nusing this:\n  len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by simp"], ["proof (state)\nthis:\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "with len_decomp[of \"zs @ j # ?t\" zs j ?t m j j]"], ["proof (chain)\npicking this:\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as \\<Longrightarrow>\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) =\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "have \"len m j j zs + len m j j ?t < len m j j ?t\""], ["proof (prove)\nusing this:\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as \\<Longrightarrow>\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) =\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "hence \"len m j j zs < \\<one>\""], ["proof (prove)\nusing this:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j zs < \\<one>", "using add_lt_neutral"], ["proof (prove)\nusing this:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?a + ?b < ?b \\<Longrightarrow> ?a < \\<one>\n\ngoal (1 subgoal):\n 1. len m j j zs < \\<one>", "by auto"], ["proof (state)\nthis:\n  len m j j zs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m j j zs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "using Cons.prems(3)"], ["proof (prove)\nusing this:\n  len m j j zs < \\<one>\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_le_impl: \"a + b < a + c \\<Longrightarrow> b < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b < a + c \\<Longrightarrow> b < c", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "assume \"a + b < a + c\" \"\\<not> b < c\""], ["proof (state)\nthis:\n  a + b < a + c\n  \\<not> b < c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "hence \"b \\<ge> c\""], ["proof (prove)\nusing this:\n  a + b < a + c\n  \\<not> b < c\n\ngoal (1 subgoal):\n 1. c \\<le> b", "by auto"], ["proof (state)\nthis:\n  c \\<le> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "from add_mono[OF _ this, of a a] \\<open>a + b < a + c\\<close>"], ["proof (chain)\npicking this:\n  a \\<le> a \\<Longrightarrow> a + c \\<le> a + b\n  a + b < a + c", "show False"], ["proof (prove)\nusing this:\n  a \\<le> a \\<Longrightarrow> a + c \\<le> a + b\n  a + b < a + c\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_neg_cycles:\n  \"len m i j (start_remove xs k []) > len m i j xs \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "let ?xs = \"start_remove xs k []\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "assume len_lt:\"len m i j ?xs > len m i j xs\""], ["proof (state)\nthis:\n  len m i j xs < len m i j (start_remove xs k [])\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "hence \"k \\<in> set xs\""], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (start_remove xs k [])\n\ngoal (1 subgoal):\n 1. k \\<in> set xs", "using start_remove_id"], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (start_remove xs k [])\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. k \\<in> set xs", "by fastforce"], ["proof (state)\nthis:\n  k \\<in> set xs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "from start_remove_decomp[OF this, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>as bs.\n     xs = as @ k # bs \\<and>\n     start_remove xs k [] = rev [] @ as @ remove_cycles bs k [k]", "obtain as bs where as_bs:\n    \"xs = as @ k # bs\" \"?xs = as @ remove_cycles bs k [k]\""], ["proof (prove)\nusing this:\n  \\<exists>as bs.\n     xs = as @ k # bs \\<and>\n     start_remove xs k [] = rev [] @ as @ remove_cycles bs k [k]\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        \\<lbrakk>xs = as @ k # bs;\n         start_remove xs k [] = as @ remove_cycles bs k [k]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  xs = as @ k # bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "let ?xs' = \"remove_cycles bs k [k]\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "have \"k \\<in> set bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> set bs", "using as_bs len_lt remove_cycles_id"], ["proof (prove)\nusing this:\n  xs = as @ k # bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n  len m i j xs < len m i j (start_remove xs k [])\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  remove_cycles ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. k \\<in> set bs", "by fastforce"], ["proof (state)\nthis:\n  k \\<in> set bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "then"], ["proof (chain)\npicking this:\n  k \\<in> set bs", "obtain ys where ys: \"?xs = as @ k # ys\" \"?xs' = k # ys\" \"k \\<notin> set ys\""], ["proof (prove)\nusing this:\n  k \\<in> set bs\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>start_remove xs k [] = as @ k # ys;\n         remove_cycles bs k [k] = k # ys; k \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using as_bs(2) remove_cycles_begins_with[OF \\<open>k \\<in> set bs\\<close>]"], ["proof (prove)\nusing this:\n  k \\<in> set bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n  \\<exists>zs. remove_cycles bs k ?ys = k # zs \\<and> k \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>start_remove xs k [] = as @ k # ys;\n         remove_cycles bs k [k] = k # ys; k \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  start_remove xs k [] = as @ k # ys\n  remove_cycles bs k [k] = k # ys\n  k \\<notin> set ys\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "have len_lt': \"len m k j bs < len m k j ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m k j bs < len m k j ys", "using len_decomp[OF as_bs(1), of m i j] len_decomp[OF ys(1), of m i j] len_lt add_le_impl"], ["proof (prove)\nusing this:\n  len m i j xs = len m i k as + len m k j bs\n  len m i j (start_remove xs k []) = len m i k as + len m k j ys\n  len m i j xs < len m i j (start_remove xs k [])\n  ?a + ?b < ?a + ?c \\<Longrightarrow> ?b < ?c\n\ngoal (1 subgoal):\n 1. len m k j bs < len m k j ys", "by metis"], ["proof (state)\nthis:\n  len m k j bs < len m k j ys\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "from remove_cycles_cycles[OF \\<open>k \\<in> set bs\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @ concat (map ((#) k) xxs) @ remove_cycles bs k ?ys = bs \\<and>\n     k \\<notin> set as", "obtain xss as'\n  where \"as' @ concat (map ((#) k) xss) @ ?xs' = bs\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @ concat (map ((#) k) xxs) @ remove_cycles bs k ?ys = bs \\<and>\n     k \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as' xss.\n        as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] =\n        bs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "hence \"as' @ concat (map ((#) k) xss) @ k # ys = bs\""], ["proof (prove)\nusing this:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n\ngoal (1 subgoal):\n 1. as' @ concat (map ((#) k) xss) @ k # ys = bs", "using ys(2)"], ["proof (prove)\nusing this:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n  remove_cycles bs k [k] = k # ys\n\ngoal (1 subgoal):\n 1. as' @ concat (map ((#) k) xss) @ k # ys = bs", "by simp"], ["proof (state)\nthis:\n  as' @ concat (map ((#) k) xss) @ k # ys = bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "from remove_cycles_neg_cycles_aux[OF \\<open>k \\<notin> set ys\\<close> \\<open>k \\<in> set bs\\<close> this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "using as_bs(1)"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < \\<one>\n  xs = as @ k # bs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_cycles_neg_cycles:\n  \"len m i j (remove_all_cycles ys xs) > len m i j xs\n  \\<Longrightarrow> \\<exists> ys k. set ys \\<subseteq> set xs \\<and> k \\<in> set xs \\<and> len m k k ys < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "proof (induction ys arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       len m i j xs < len m i j (remove_all_cycles [] xs) \\<Longrightarrow>\n       \\<exists>ys k.\n          set ys \\<subseteq> set xs \\<and>\n          k \\<in> set xs \\<and> len m k k ys < \\<one>\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "case Nil"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_cycles [] xs)\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       len m i j xs < len m i j (remove_all_cycles [] xs) \\<Longrightarrow>\n       \\<exists>ys k.\n          set ys \\<subseteq> set xs \\<and>\n          k \\<in> set xs \\<and> len m k k ys < \\<one>\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "thus ?case"], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (remove_all_cycles [] xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "case (Cons y ys)"], ["proof (state)\nthis:\n  len m i j ?xs < len m i j (remove_all_cycles ys ?xs) \\<Longrightarrow>\n  \\<exists>ys k.\n     set ys \\<subseteq> set ?xs \\<and>\n     k \\<in> set ?xs \\<and> len m k k ys < \\<one>\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "let ?xs = \"start_remove xs y []\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < \\<one>;\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < \\<one>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "proof (cases \"len m i j xs < len m i j ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "case True"], ["proof (state)\nthis:\n  len m i j xs < len m i j (start_remove xs y [])\n\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "with start_remove_id"], ["proof (chain)\npicking this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n  len m i j xs < len m i j (start_remove xs y [])", "have \"y \\<in> set xs\""], ["proof (prove)\nusing this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n  len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. y \\<in> set xs", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> set xs\n\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "with start_remove_neg_cycles[OF True]"], ["proof (chain)\npicking this:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m y y ys < \\<one>\n  y \\<in> set xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m y y ys < \\<one>\n  y \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "with Cons(2)"], ["proof (chain)\npicking this:\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n  \\<not> len m i j xs < len m i j (start_remove xs y [])", "have \"len m i j ?xs < len m i j (remove_all_cycles (y # ys) xs)\""], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n  \\<not> len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. len m i j (start_remove xs y [])\n    < len m i j (remove_all_cycles (y # ys) xs)", "by auto"], ["proof (state)\nthis:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "hence \"len m i j ?xs < len m i j (remove_all_cycles ys ?xs)\""], ["proof (prove)\nusing this:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. len m i j (start_remove xs y [])\n    < len m i j (remove_all_cycles ys (start_remove xs y []))", "by auto"], ["proof (state)\nthis:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles ys (start_remove xs y []))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "from Cons(1)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "using start_remove_subs[of xs y \"[]\"]"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < \\<one>\n  set (start_remove xs y []) \\<subseteq> set xs \\<union> set []\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in -) concat_map_cons_rev:\n  \"rev (concat (map ((#) j) xss)) = concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (concat (map ((#) j) xss)) =\n    concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss)))", "by (induction xss) auto"], ["", "lemma negative_cycle_dest: \"len m i j (rem_cycles i j xs) > len m i j xs\n       \\<Longrightarrow> \\<exists> i' ys. len m i' i' ys < \\<one> \\<and> set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xsij = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xsj  = \"remove_all_rev j (remove_all_cycles xs xs)\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xs   = \"remove_all_cycles xs xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "assume len_lt: \"len m i j ?xsij > len m i j xs\""], ["proof (state)\nthis:\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"len m i j ?xsij \\<le> len m i j ?xsj\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence len_lt: \"len m i j ?xsj > len m i j xs\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "using len_lt"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"len m i j ?xsj \\<le> len m i j ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"len m i j ?xs > len m i j xs\""], ["proof (prove)\nusing this:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles xs xs)", "using len_lt"], ["proof (prove)\nusing this:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n  len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_all_cycles_neg_cycles[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n  len m i j xs < len m i j (remove_all_cycles xs xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < \\<one>\n  len m i j xs < len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "then"], ["proof (chain)\npicking this:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)", "have len_lt': \"len m i j ?xsj > len m i j ?xs\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. len m i j (remove_all_cycles xs xs)\n    < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  len m i j (remove_all_cycles xs xs)\n  < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"j \\<in> set ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. j \\<notin> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  j \\<notin> set (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. j \\<notin> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using len_lt'"], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_cycles xs xs)\n  len m i j (remove_all_cycles xs xs)\n  < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_all_rev_removes[of j]"], ["proof (chain)\npicking this:\n  j \\<notin> set (remove_all_rev j ?xs)", "have 1: \"j \\<notin> set ?xsj\""], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_rev j ?xs)\n\ngoal (1 subgoal):\n 1. j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  j \\<in> set (remove_all_cycles xs xs)", "have \"j \\<in> set (rev ?xs)\""], ["proof (prove)\nusing this:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (rev (remove_all_cycles xs xs))", "by auto"], ["proof (state)\nthis:\n  j \\<in> set (rev (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_cycles[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) j) xxs) @\n     remove_cycles (rev (remove_all_cycles xs xs)) j ?ys =\n     rev (remove_all_cycles xs xs) \\<and>\n     j \\<notin> set as", "obtain xss as where as:\n          \"as @ concat (map ((#) j) xss) @ remove_cycles (rev ?xs) j [] = rev ?xs\" \"j \\<notin> set as\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) j) xxs) @\n     remove_cycles (rev (remove_all_cycles xs xs)) j ?ys =\n     rev (remove_all_cycles xs xs) \\<and>\n     j \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xss.\n        \\<lbrakk>as @\n                 concat (map ((#) j) xss) @\n                 remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n                 rev (remove_all_cycles xs xs);\n         j \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  j \\<notin> set as\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  j \\<in> set (remove_all_cycles xs xs)", "have \"?xsj = rev (tl (remove_cycles (rev ?xs) j []))\""], ["proof (prove)\nusing this:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) =\n    rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_cycles_begins_with[OF \\<open>j \\<in> set (rev ?xs)\\<close>, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs.\n     remove_cycles (rev (remove_all_cycles xs xs)) j [] = j # zs \\<and>\n     j \\<notin> set zs\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))", "have \"remove_cycles (rev ?xs) j [] = j # rev ?xsj\" \"j \\<notin> set ?xsj\""], ["proof (prove)\nusing this:\n  \\<exists>zs.\n     remove_cycles (rev (remove_all_cycles xs xs)) j [] = j # zs \\<and>\n     j \\<notin> set zs\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))\n\ngoal (1 subgoal):\n 1. remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n    j # rev (remove_all_rev j (remove_all_cycles xs xs)) &&&\n    j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "by auto"], ["proof (state)\nthis:\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with as(1)"], ["proof (chain)\npicking this:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "have xss: \"as @ concat (map ((#) j) xss) @ j # rev ?xsj = rev ?xs\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. as @\n    concat (map ((#) j) xss) @\n    j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n    rev (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) j) xss) @\n  j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n  rev (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"rev (as @ concat (map ((#) j) xss) @ j # rev ?xsj) = ?xs\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) j) xss) @\n  j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n  rev (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. rev (as @\n         concat (map ((#) j) xss) @\n         j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n    remove_all_cycles xs xs", "by simp"], ["proof (state)\nthis:\n  rev (as @\n       concat (map ((#) j) xss) @\n       j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"?xsj @ j # rev (concat (map ((#) j) xss)) @ rev as = ?xs\""], ["proof (prove)\nusing this:\n  rev (as @\n       concat (map ((#) j) xss) @\n       j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) @\n    j # rev (concat (map ((#) j) xss)) @ rev as =\n    remove_all_cycles xs xs", "by simp"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # rev (concat (map ((#) j) xss)) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"?xsj @ j # concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss))) @ rev as = ?xs\""], ["proof (prove)\nusing this:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # rev (concat (map ((#) j) xss)) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) @\n    j # concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss))) @ rev as =\n    remove_all_cycles xs xs", "by (simp add: concat_map_cons_rev)"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss))) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_neg_cycles_aux'[OF 1 True this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < \\<one>\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (rem_cycles i j xs)\n         \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence len_lt': \"len m i j ?xsij > len m i j ?xsj\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (rem_cycles i j xs)\n         \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    < len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"i \\<in> set ?xsj\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. i \\<notin> set (remove_all_rev j\n                     (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. i \\<notin> set (remove_all_rev j\n                     (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using len_lt'"], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_all_removes[of i]"], ["proof (chain)\npicking this:\n  i \\<notin> set (remove_all i ?xs)", "have 1: \"i \\<notin> set ?xsij\""], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all i ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_cycles[OF True]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) i) xxs) @\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i ?ys =\n     remove_all_rev j (remove_all_cycles xs xs) \\<and>\n     i \\<notin> set as", "obtain xss as where as:\n      \"as @ concat (map ((#) i) xss) @ remove_cycles ?xsj i [] = ?xsj\" \"i \\<notin> set as\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) i) xxs) @\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i ?ys =\n     remove_all_rev j (remove_all_cycles xs xs) \\<and>\n     i \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xss.\n        \\<lbrakk>as @\n                 concat (map ((#) i) xss) @\n                 remove_cycles (remove_all_rev j (remove_all_cycles xs xs))\n                  i [] =\n                 remove_all_rev j (remove_all_cycles xs xs);\n         i \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  i \\<notin> set as\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))", "have \"?xsij = tl (remove_cycles ?xsj i [])\""], ["proof (prove)\nusing this:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. rem_cycles i j xs =\n    tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_cycles_begins_with[OF True, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs.\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n     i # zs \\<and>\n     i \\<notin> set zs\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])", "have \"remove_cycles ?xsj i [] = i # ?xsij\" \"i \\<notin> set ?xsij\""], ["proof (prove)\nusing this:\n  \\<exists>zs.\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n     i # zs \\<and>\n     i \\<notin> set zs\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])\n\ngoal (1 subgoal):\n 1. remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n    i # rem_cycles i j xs &&&\n    i \\<notin> set (rem_cycles i j xs)", "by auto"], ["proof (state)\nthis:\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with as(1)"], ["proof (chain)\npicking this:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)", "have xss: \"as @ concat (map ((#) i) xss) @ i # ?xsij = ?xsj\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. as @ concat (map ((#) i) xss) @ i # rem_cycles i j xs =\n    remove_all_rev j (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  as @ concat (map ((#) i) xss) @ i # rem_cycles i j xs =\n  remove_all_rev j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_neg_cycles_aux[OF 1 True this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using remove_all_rev_subs remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < \\<one>\n  set (remove_all_rev ?x ?xs) \\<subseteq> set ?xs\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < \\<one> \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Definition of Shortest Paths\\<close>"], ["", "definition D :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a\" where\n  \"D m i j k \\<equiv> Min {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["", "lemma (in -) distinct_length_le:\"finite s \\<Longrightarrow> set xs \\<subseteq> s \\<Longrightarrow> distinct xs \\<Longrightarrow> length xs \\<le> card s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite s; set xs \\<subseteq> s; distinct xs\\<rbrakk>\n    \\<Longrightarrow> length xs \\<le> card s", "by (metis card_mono distinct_card)"], ["", "lemma (in -) finite_distinct: \"finite s \\<Longrightarrow> finite {xs . set xs \\<subseteq> s \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "assume \"finite s\""], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "hence \"{xs . set xs \\<subseteq> s \\<and> distinct xs} \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\""], ["proof (prove)\nusing this:\n  finite s\n\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> s \\<and> distinct xs}\n    \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "using distinct_length_le"], ["proof (prove)\nusing this:\n  finite s\n  \\<lbrakk>finite ?s; set ?xs \\<subseteq> ?s; distinct ?xs\\<rbrakk>\n  \\<Longrightarrow> length ?xs \\<le> card ?s\n\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> s \\<and> distinct xs}\n    \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "by auto"], ["proof (state)\nthis:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "have \"finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "using finite_lists_length_le[OF \\<open>finite s\\<close>]"], ["proof (prove)\nusing this:\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> ?n}\n\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "by auto"], ["proof (state)\nthis:\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "show ?thesis"], ["proof (prove)\nusing this:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite {xs. set xs \\<subseteq> s \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_finite:\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}", "using finite_distinct finite_image_set"], ["proof (prove)\nusing this:\n  finite ?s \\<Longrightarrow>\n  finite {xs. set xs \\<subseteq> ?s \\<and> distinct xs}\n  finite {x. ?P x} \\<Longrightarrow> finite {?f x |x. ?P x}\n\ngoal (1 subgoal):\n 1. finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by blast"], ["", "lemma D_base_finite':\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "have \"{len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n        \\<subseteq> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n    \\<subseteq> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "with D_base_finite[of m i j k]"], ["proof (chain)\npicking this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "by (rule rev_finite_subset)"], ["proof (state)\nthis:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_finite'':\n  \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using D_base_finite[of m i j k]"], ["proof (prove)\nusing this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by - (rule finite_subset, auto)"], ["", "definition cycle_free :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cycle_free m n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n  (\\<forall> j. j \\<le> n \\<longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and> len m i i xs \\<ge> \\<one>\""], ["", "lemma D_eqI:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "using assms"], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. D m i j k = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "let ?S = \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} =\n    x", "proof (rule Min_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 3. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have \"?S \\<subseteq> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n    \\<subseteq> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (3 subgoals):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 3. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using D_base_finite[of m i j k]"], ["proof (prove)\nusing this:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "assume \"y \\<in> ?S\""], ["proof (state)\nthis:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "hence \"y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. y \\<in> A_distinct", "using assms(2,7)"], ["proof (prove)\nusing this:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n\ngoal (1 subgoal):\n 1. y \\<in> A_distinct", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"x \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> y", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> y", "by meson"], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "from assms"], ["proof (chain)\npicking this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A", "obtain xs where xs: \"x = len m i j xs\" \"set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>x = len m i j xs; set xs \\<subseteq> {0..k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "let ?ys = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "let ?y = \"len m i j ?ys\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "from assms(3-6) xs"], ["proof (chain)\npicking this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}", "have *:\"?y \\<le> x\""], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have distinct: \"i \\<notin> set ?ys\" \"j \\<notin> set ?ys\" \"distinct ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "using rem_cycles_distinct remove_all_removes rem_cycles_removes_last"], ["proof (prove)\nusing this:\n  distinct (rem_cycles ?i ?j ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n  ?j \\<notin> set (rem_cycles ?i ?j ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "by fast+"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "with xs(2)"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)", "have \"?y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using rem_cycles_subs"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set (rem_cycles ?i ?j ?xs) \\<subseteq> set ?xs\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "hence \"x \\<le> ?y\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "using assms"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "by meson"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have \"?y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "using assms(3-6) xs"], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x", "have \"x = ?y\""], ["proof (prove)\nusing this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x = len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"x \\<in> ?S\""], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using distinct xs(2) rem_cycles_subs[of i j xs]"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i j k = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_not_empty:\n   \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "have \"len m i j [] \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j []\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j []\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m i j []\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Min_elem_dest: \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x = Min A \\<Longrightarrow> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}; x = Min A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A", "by simp"], ["", "lemma D_dest: \"x = D m i j k \\<Longrightarrow>\n  x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..Suc k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..Suc k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by (fastforce simp add: D_def)"], ["", "lemma D_dest': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}", "by (fastforce simp add: D_def)"], ["", "lemma D_dest'': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "by (fastforce simp add: D_def)"], ["", "lemma cycle_free_loop_dest: \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> cycle_free m n \\<Longrightarrow> len m i i xs \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; cycle_free m n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> len m i i xs", "unfolding cycle_free_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n        \\<one> \\<le> len m i i xs\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> len m i i xs", "by auto"], ["", "lemma cycle_free_dest:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n; j \\<le> n;\n     set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs", "by (auto simp add: cycle_free_def)"], ["", "definition cycle_free_up_to :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cycle_free_up_to m k n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n  (\\<forall> j. j \\<le> n \\<longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and> len m i i xs \\<ge> \\<one>\""], ["", "lemma cycle_free_up_to_loop_dest:\n  \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..k} \\<Longrightarrow> cycle_free_up_to m k n \\<Longrightarrow> len m i i xs \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..k};\n     cycle_free_up_to m k n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> len m i i xs", "unfolding cycle_free_up_to_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..k};\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n        \\<one> \\<le> len m i i xs\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> len m i i xs", "by auto"], ["", "lemma cycle_free_up_to_diag:\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\"\n  shows \"m i i \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<le> m i i", "using cycle_free_up_to_loop_dest[OF assms(2) _ assms(1), of \"[]\"]"], ["proof (prove)\nusing this:\n  set [] \\<subseteq> {0..k} \\<Longrightarrow> \\<one> \\<le> len m i i []\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> m i i", "by auto"], ["", "lemma D_eqI2:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n          \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "using assms"], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. D m i j k = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free_up_to m k n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "proof (simp add: D_def A_distinct_def[symmetric], rule Min_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite A_distinct\n 2. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 3. x \\<in> A_distinct", "show \"finite A_distinct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A_distinct", "using D_base_finite''[of m i j k]"], ["proof (prove)\nusing this:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  finite A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "assume \"y \\<in> A_distinct\""], ["proof (state)\nthis:\n  y \\<in> A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "thus \"x \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> y", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> y", "by meson"], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "from assms"], ["proof (chain)\npicking this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A", "obtain xs where xs: \"x = len m i j xs\" \"set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>x = len m i j xs; set xs \\<subseteq> {0..k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "let ?ys = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "let ?y = \"len m i j ?ys\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "from assms(3-6) xs"], ["proof (chain)\npicking this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}", "have *:\"?y \\<le> x\""], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_up_to_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "have distinct: \"i \\<notin> set ?ys\" \"j \\<notin> set ?ys\" \"distinct ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "using rem_cycles_distinct remove_all_removes rem_cycles_removes_last"], ["proof (prove)\nusing this:\n  distinct (rem_cycles ?i ?j ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n  ?j \\<notin> set (rem_cycles ?i ?j ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "by fast+"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "with xs(2)"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)", "have \"?y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using rem_cycles_subs"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set (rem_cycles ?i ?j ?xs) \\<subseteq> set ?xs\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "hence \"x \\<le> ?y\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "using assms"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "by meson"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "moreover"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "have \"?y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "using assms(3-6) xs"], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_up_to_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "ultimately"], ["proof (chain)\npicking this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x", "have \"x = ?y\""], ["proof (prove)\nusing this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x = len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "then"], ["proof (chain)\npicking this:\n  x = len m i j (rem_cycles i j xs)", "show \"x \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "using distinct xs(2) rem_cycles_subs[of i j xs]"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> A_distinct\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i j k = x\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Result Under The Absence of Negative Cycles\\<close>"], ["", "text \\<open>\n  This proves that the algorithm correctly computes shortest paths under the absence of negative\n  cycles by a standard argument.\n\\<close>"], ["", "theorem fw_shortest_path_up_to:\n  \"cycle_free_up_to m k n \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n\n        \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'", "proof (induction k arbitrary: i j i' j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j i' j'.\n       \\<lbrakk>cycle_free_up_to m 0 n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' 0 = fw m n 0 i j i' j'\n 2. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "case 0"], ["proof (state)\nthis:\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i j i' j'.\n       \\<lbrakk>cycle_free_up_to m 0 n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' 0 = fw m n 0 i j i' j'\n 2. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "from cycle_free_up_to_diag[OF 0(1)]"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> m ?i ?i", "have diag: \"\\<forall> k \\<le> n. m k k \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> m ?i ?i\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. \\<one> \\<le> m k k", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k\n\ngoal (2 subgoals):\n 1. \\<And>i j i' j'.\n       \\<lbrakk>cycle_free_up_to m 0 n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' 0 = fw m n 0 i j i' j'\n 2. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k", "have m_diag: \"m 0 0 \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> m 0 0", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<le> m 0 0\n\ngoal (2 subgoals):\n 1. \\<And>i j i' j'.\n       \\<lbrakk>cycle_free_up_to m 0 n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' 0 = fw m n 0 i j i' j'\n 2. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "let ?S = \"{len m i' j' xs |xs. set xs \\<subseteq> {0} \\<and> i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j i' j'.\n       \\<lbrakk>cycle_free_up_to m 0 n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' 0 = fw m n 0 i j i' j'\n 2. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i' j' 0 = fw m n 0 i j i' j'", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {len m i' j' xs |xs.\n         set xs \\<subseteq> {0..0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs} =\n    fw m n 0 i j i' j'", "proof (simp, rule Min_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 3. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"?S \\<subseteq> {len m i' j' xs |xs. set xs \\<subseteq> {0..0} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i' j' xs |xs.\n     set xs \\<subseteq> {0} \\<and>\n     i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n    \\<subseteq> {len m i' j' xs |xs.\n                 set xs \\<subseteq> {0..0} \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  {len m i' j' xs |xs.\n   set xs \\<subseteq> {0} \\<and>\n   i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i' j' xs |xs.\n               set xs \\<subseteq> {0..0} \\<and> distinct xs}\n\ngoal (3 subgoals):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 3. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "thus \"finite ?S\""], ["proof (prove)\nusing this:\n  {len m i' j' xs |xs.\n   set xs \\<subseteq> {0} \\<and>\n   i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i' j' xs |xs.\n               set xs \\<subseteq> {0..0} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "using D_base_finite[of m i' j' 0]"], ["proof (prove)\nusing this:\n  {len m i' j' xs |xs.\n   set xs \\<subseteq> {0} \\<and>\n   i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i' j' xs |xs.\n               set xs \\<subseteq> {0..0} \\<and> distinct xs}\n  finite {len m i' j' xs |xs. set xs \\<subseteq> {0..0} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite\n   {len m i' j' xs |xs.\n    set xs \\<subseteq> {0} \\<and>\n    i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "fix l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "assume \"l \\<in> ?S\""], ["proof (state)\nthis:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "then"], ["proof (chain)\npicking this:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "obtain xs where l: \"l = len m i' j' xs\" and xs: \"xs = [] \\<or> xs = [0]\""], ["proof (prove)\nusing this:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>l = len m i' j' xs; xs = [] \\<or> xs = [0]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using distinct_list_single_elem_decomp"], ["proof (prove)\nusing this:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  {xs. set xs \\<subseteq> {0::?'a} \\<and> distinct xs} = {[], [0::?'a]}\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>l = len m i' j' xs; xs = [] \\<or> xs = [0]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = len m i' j' xs\n  xs = [] \\<or> xs = [0]\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "{"], ["proof (state)\nthis:\n  l = len m i' j' xs\n  xs = [] \\<or> xs = [0]\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "assume \"xs = []\""], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"fw m n 0 i j i' j' \\<le> fw m n 0 0 0 i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 0 0 i' j'", "using fw_invariant 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n;\n   ?j'' \\<le> ?j; ?i'' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k' ?i'' ?j'' ?i' ?j'\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 0 0 i' j'", "by blast"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 0 0 i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "also"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 0 0 i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"\\<dots> \\<le> m i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 0 0 i' j' \\<le> m i' j'", "by (cases \"i' = 0 \\<and> j' = 0\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fw m n 0 0 0 i' j' \\<le> m i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "finally"], ["proof (chain)\npicking this:\n  fw m n 0 i j i' j' \\<le> m i' j'", "have \"fw m n 0 i j i' j' \\<le> l\""], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "using \\<open>xs = []\\<close> l"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' \\<le> m i' j'\n  xs = []\n  l = len m i' j' xs\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "}"], ["proof (state)\nthis:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "{"], ["proof (state)\nthis:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "assume \"xs = [0]\""], ["proof (state)\nthis:\n  xs = [0]\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'", "using fw_invariant 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n;\n   ?j'' \\<le> ?j; ?i'' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k' ?i'' ?j'' ?i' ?j'\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'", "by blast"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "also"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> fw m n 0 i' j' i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"\\<dots> \\<le> m i' 0 + m 0 j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "proof (cases j')"], ["proof (state)\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow> fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "assume \"j' = 0\""], ["proof (state)\nthis:\n  j' = 0\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow> fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "proof (cases i')"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = 0 \\<Longrightarrow> fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n 2. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "assume \"i' = 0\""], ["proof (state)\nthis:\n  i' = 0\n\ngoal (2 subgoals):\n 1. i' = 0 \\<Longrightarrow> fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n 2. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i' = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "using \\<open>j' = 0\\<close>"], ["proof (prove)\nusing this:\n  i' = 0\n  j' = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "fix i''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "assume i'': \"i' = Suc i''\""], ["proof (state)\nthis:\n  i' = Suc i''\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "have \"fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0 \\<le> fw m n 0 i'' n (Suc i'') 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0\n    \\<le> fw m n 0 i'' n (Suc i'') 0", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0\n  \\<le> fw m n 0 i'' n (Suc i'') 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "also"], ["proof (state)\nthis:\n  fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0\n  \\<le> fw m n 0 i'' n (Suc i'') 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "have \"\\<dots> \\<le> m (Suc i'') 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i'' n (Suc i'') 0 \\<le> m (Suc i'') 0", "using fw_mono 0 i''"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?i' \\<le> ?n; ?j' \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' \\<le> ?m ?i' ?j'\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  i' = Suc i''\n\ngoal (1 subgoal):\n 1. fw m n 0 i'' n (Suc i'') 0 \\<le> m (Suc i'') 0", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i'' n (Suc i'') 0 \\<le> m (Suc i'') 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "finally"], ["proof (chain)\npicking this:\n  fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0 \\<le> m (Suc i'') 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0 \\<le> m (Suc i'') 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "using \\<open>j' = 0\\<close> m_diag i'' neutr add_mono"], ["proof (prove)\nusing this:\n  fw_upd (fw m n 0 i'' n) 0 (Suc i'') 0 (Suc i'') 0 \\<le> m (Suc i'') 0\n  j' = 0\n  \\<one> \\<le> m 0 0\n  i' = Suc i''\n  ?x + \\<one> = ?x\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "by fastforce"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "fix j''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "assume j'': \"j' = Suc j''\""], ["proof (state)\nthis:\n  j' = Suc j''\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "have \"fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n              \\<le> fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'') \""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n    \\<le> fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n  \\<le> fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "also"], ["proof (state)\nthis:\n  fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n  \\<le> fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "have \"\\<dots> \\<le> m i' 0 + m 0 (Suc j'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')\n    \\<le> m i' 0 + m 0 (Suc j'')", "using fw_mono[of i' n j'' i' 0 m 0] fw_mono[of i' n j'' 0 \"Suc j''\" m 0 ] j'' 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; j'' \\<le> n; i' \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' j'' i' 0 \\<le> m i' 0\n  \\<lbrakk>i' \\<le> n; j'' \\<le> n; 0 \\<le> n; Suc j'' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 i' j'' 0 (Suc j'') \\<le> m 0 (Suc j'')\n  j' = Suc j''\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')\n    \\<le> m i' 0 + m 0 (Suc j'')", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  fw m n 0 i' j'' i' 0 + fw m n 0 i' j'' 0 (Suc j'')\n  \\<le> m i' 0 + m 0 (Suc j'')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "finally"], ["proof (chain)\npicking this:\n  fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n  \\<le> m i' 0 + m 0 (Suc j'')", "show ?thesis"], ["proof (prove)\nusing this:\n  fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n  \\<le> m i' 0 + m 0 (Suc j'')\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "using j''"], ["proof (prove)\nusing this:\n  fw_upd (fw m n 0 i' j'') 0 i' (Suc j'') i' (Suc j'')\n  \\<le> m i' 0 + m 0 (Suc j'')\n  j' = Suc j''\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' \\<le> m i' 0 + m 0 j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "finally"], ["proof (chain)\npicking this:\n  fw m n 0 i j i' j' \\<le> m i' 0 + m 0 j'", "have \"fw m n 0 i j i' j' \\<le> l\""], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' \\<le> m i' 0 + m 0 j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "using \\<open>xs = [0]\\<close> l"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' \\<le> m i' 0 + m 0 j'\n  xs = [0]\n  l = len m i' j' xs\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "}"], ["proof (state)\nthis:\n  xs = [0] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n 0 i j i' j' \\<le> y\n 2. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n  xs = [0] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l", "show \"fw m n 0 i j i' j' \\<le> l\""], ["proof (prove)\nusing this:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n  xs = [0] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "using xs"], ["proof (prove)\nusing this:\n  xs = [] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n  xs = [0] \\<Longrightarrow> fw m n 0 i j i' j' \\<le> l\n  xs = [] \\<or> xs = [0]\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' \\<le> l", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have A: \"fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = fw m n 0 i' j' i' j'", "using single_iteration_inv 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' = fw ?m ?n ?k ?i' ?j' ?i' ?j'\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = fw m n 0 i' j' i' j'", "by blast"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"fw m n 0 i' j' i' j' = min (m i' j') (m i' 0 + m 0 j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = min (m i' j') (m i' 0 + m 0 j')", "using 0"], ["proof (prove)\nusing this:\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = min (m i' j') (m i' 0 + m 0 j')", "by (simp add: fw_step_0[of m, OF m_diag])"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' = min (m i' j') (m i' 0 + m 0 j')\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "hence\n      \"fw m n 0 i' j' i' j' = m i' j'\n      \\<or> (fw m n 0 i' j' i' j' = m i' 0 + m 0 j'\\<and> m i' 0 + m 0 j' \\<le> m i' j')\""], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = min (m i' j') (m i' 0 + m 0 j')\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = m i' j' \\<or>\n    fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j'", "by (auto simp add: ord.min_def)"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' = m i' j' \\<or>\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "thus \"fw m n 0 i j i' j' \\<in> ?S\""], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = m i' j' \\<or>\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. fw m n 0 i' j' i' j' = m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n 2. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "case 1"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' = m i' j'\n\ngoal (2 subgoals):\n 1. fw m n 0 i' j' i' j' = m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n 2. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "hence \"fw m n 0 i j i' j' = len m i' j' []\""], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' []", "using A"], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = m i' j'\n  fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' []", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = len m i' j' []\n\ngoal (2 subgoals):\n 1. fw m n 0 i' j' i' j' = m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n 2. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "thus ?case"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' = len m i' j' []\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  fw m n 0 i j i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "case 2"], ["proof (state)\nthis:\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "hence *:\"fw m n 0 i j i' j' = len m i' j' [0]\""], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' [0]", "using A"], ["proof (prove)\nusing this:\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n  fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' [0]", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = len m i' j' [0]\n\ngoal (1 subgoal):\n 1. fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n    m i' 0 + m 0 j' \\<le> m i' j' \\<Longrightarrow>\n    fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "thus ?case"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' = len m i' j' [0]\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "proof (cases \"i' = 0 \\<or> j' = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}\n 2. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     \\<not> (i' = 0 \\<or> j' = 0)\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "case False"], ["proof (state)\nthis:\n  \\<not> (i' = 0 \\<or> j' = 0)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}\n 2. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     \\<not> (i' = 0 \\<or> j' = 0)\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (i' = 0 \\<or> j' = 0)\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "using *"], ["proof (prove)\nusing this:\n  \\<not> (i' = 0 \\<or> j' = 0)\n  fw m n 0 i j i' j' = len m i' j' [0]\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  fw m n 0 i j i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "case True"], ["proof (state)\nthis:\n  i' = 0 \\<or> j' = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "{"], ["proof (state)\nthis:\n  i' = 0 \\<or> j' = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "assume \"i' = 0\""], ["proof (state)\nthis:\n  i' = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "from diag"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k", "have \"m 0 0 + m 0 j' \\<ge> m 0 j'\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k\n\ngoal (1 subgoal):\n 1. m 0 j' \\<le> m 0 0 + m 0 j'", "by (auto intro: add_mono_neutl)"], ["proof (state)\nthis:\n  m 0 j' \\<le> m 0 0 + m 0 j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "with \\<open>i' = 0\\<close>"], ["proof (chain)\npicking this:\n  i' = 0\n  m 0 j' \\<le> m 0 0 + m 0 j'", "have \"fw m n 0 i j i' j' = len m 0 j' []\""], ["proof (prove)\nusing this:\n  i' = 0\n  m 0 j' \\<le> m 0 0 + m 0 j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m 0 j' []", "using 0 A 2"], ["proof (prove)\nusing this:\n  i' = 0\n  m 0 j' \\<le> m 0 0 + m 0 j'\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m 0 j' []", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = len m 0 j' []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "}"], ["proof (state)\nthis:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "{"], ["proof (state)\nthis:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "assume \"j' = 0\""], ["proof (state)\nthis:\n  j' = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "from diag"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k", "have \"m i' 0 + m 0 0 \\<ge> m i' 0\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k\n\ngoal (1 subgoal):\n 1. m i' 0 \\<le> m i' 0 + m 0 0", "by (auto intro: add_mono_neutr)"], ["proof (state)\nthis:\n  m i' 0 \\<le> m i' 0 + m 0 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "with \\<open>j' = 0\\<close>"], ["proof (chain)\npicking this:\n  j' = 0\n  m i' 0 \\<le> m i' 0 + m 0 0", "have \"fw m n 0 i j i' j' = len m i' 0 []\""], ["proof (prove)\nusing this:\n  j' = 0\n  m i' 0 \\<le> m i' 0 + m 0 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' 0 []", "using 0 A 2"], ["proof (prove)\nusing this:\n  j' = 0\n  m i' 0 \\<le> m i' 0 + m 0 0\n  cycle_free_up_to m 0 n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  fw m n 0 i j i' j' = fw m n 0 i' j' i' j'\n  fw m n 0 i' j' i' j' = m i' 0 + m 0 j' \\<and>\n  m i' 0 + m 0 j' \\<le> m i' j'\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' 0 []", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = len m i' 0 []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "}"], ["proof (state)\nthis:\n  j' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m i' 0 []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n  j' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m i' 0 []", "have \"fw m n 0 i j i' j' = len m i' j' []\""], ["proof (prove)\nusing this:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n  j' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m i' 0 []\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' []", "using True"], ["proof (prove)\nusing this:\n  i' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m 0 j' []\n  j' = 0 \\<Longrightarrow> fw m n 0 i j i' j' = len m i' 0 []\n  i' = 0 \\<or> j' = 0\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j' = len m i' j' []", "by auto"], ["proof (state)\nthis:\n  fw m n 0 i j i' j' = len m i' j' []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n 0 i j i' j' = len m i' j' [0];\n     i' = 0 \\<or> j' = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0} \\<and>\n                             i' \\<notin> set xs \\<and>\n                             j' \\<notin> set xs \\<and> distinct xs}", "then"], ["proof (chain)\npicking this:\n  fw m n 0 i j i' j' = len m i' j' []", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 i j i' j' = len m i' j' []\n\ngoal (1 subgoal):\n 1. fw m n 0 i j i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  fw m n 0 i j i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 i j i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 i j i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i' j' 0 = fw m n 0 i j i' j'\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>cycle_free_up_to m k n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> n;\n   ?j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i' ?j' k = fw m n k ?i ?j ?i' ?j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "from cycle_free_up_to_diag[OF Suc.prems(1)]"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> m ?i ?i", "have diag: \"\\<forall> k \\<le> n. m k k \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> m ?i ?i\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. \\<one> \\<le> m k k", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. \\<one> \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "from Suc.prems"], ["proof (chain)\npicking this:\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n", "have cycle_free_to_k:\n    \"cycle_free_up_to m k n\""], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. cycle_free_up_to m k n", "by (fastforce simp add: cycle_free_up_to_def)"], ["proof (state)\nthis:\n  cycle_free_up_to m k n\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "{"], ["proof (state)\nthis:\n  cycle_free_up_to m k n\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "fix k'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "assume \"k' \\<le> n\""], ["proof (state)\nthis:\n  k' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "with Suc cycle_free_to_k"], ["proof (chain)\npicking this:\n  \\<lbrakk>cycle_free_up_to m k n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> n;\n   ?j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i' ?j' k = fw m n k ?i ?j ?i' ?j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  cycle_free_up_to m k n\n  k' \\<le> n", "have \"D m k' k' k = fw m n k n n k' k'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free_up_to m k n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> n;\n   ?j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i' ?j' k = fw m n k ?i ?j ?i' ?j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  cycle_free_up_to m k n\n  k' \\<le> n\n\ngoal (1 subgoal):\n 1. D m k' k' k = fw m n k n n k' k'", "by auto"], ["proof (state)\nthis:\n  D m k' k' k = fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "from D_dest''[OF this[symmetric]]"], ["proof (chain)\npicking this:\n  fw m n k n n k' k' \\<in> {len m k' k' xs |xs. set xs \\<subseteq> {0..k}}", "obtain xs where\n      \"set xs \\<subseteq> {0..k}\" \"fw m n k n n k' k'= len m k' k' xs\""], ["proof (prove)\nusing this:\n  fw m n k n n k' k' \\<in> {len m k' k' xs |xs. set xs \\<subseteq> {0..k}}\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>set xs \\<subseteq> {0..k};\n         fw m n k n n k' k' = len m k' k' xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set xs \\<subseteq> {0..k}\n  fw m n k n n k' k' = len m k' k' xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "with Suc(2) \\<open>Suc k \\<le> n\\<close> \\<open>k' \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  cycle_free_up_to m (Suc k) n\n  Suc k \\<le> n\n  k' \\<le> n\n  set xs \\<subseteq> {0..k}\n  fw m n k n n k' k' = len m k' k' xs", "have \"fw m n k n n k' k' \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n  Suc k \\<le> n\n  k' \\<le> n\n  set xs \\<subseteq> {0..k}\n  fw m n k n n k' k' = len m k' k' xs\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> fw m n k n n k' k'", "unfolding cycle_free_up_to_def"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (\\<forall>j\\<le>n.\n         len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n     \\<one> \\<le> len m i i xs\n  Suc k \\<le> n\n  k' \\<le> n\n  set xs \\<subseteq> {0..k}\n  fw m n k n n k' k' = len m k' k' xs\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> fw m n k n n k' k'", "by force"], ["proof (state)\nthis:\n  \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "}"], ["proof (state)\nthis:\n  ?k'2 \\<le> n \\<Longrightarrow> \\<one> \\<le> fw m n k n n ?k'2 ?k'2\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "hence K: \"\\<forall>k'\\<le>n. fw m n k n n k' k' \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  ?k'2 \\<le> n \\<Longrightarrow> \\<one> \\<le> fw m n k n n ?k'2 ?k'2\n\ngoal (1 subgoal):\n 1. \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'", "by simp"], ["proof (state)\nthis:\n  \\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'\n\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "let ?S = \"\\<lambda> k i j. {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i j i' j'.\n       \\<lbrakk>\\<And>i j i' j'.\n                   \\<lbrakk>cycle_free_up_to m k n; i' \\<le> i; j' \\<le> j;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> D m i' j' k = fw m n k i j i' j';\n        cycle_free_up_to m (Suc k) n; i' \\<le> i; j' \\<le> j; i \\<le> n;\n        j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i' j' (Suc k) = fw m n (Suc k) i j i' j'", "proof (rule D_eqI2)"], ["proof (state)\ngoal (6 subgoals):\n 1. cycle_free_up_to m (Suc k) ?n\n 2. i' \\<le> ?n\n 3. j' \\<le> ?n\n 4. Suc k \\<le> ?n\n 5. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 6. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show \"cycle_free_up_to m (Suc k) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free_up_to m (Suc k) n", "using Suc.prems(1)"], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n\ngoal (1 subgoal):\n 1. cycle_free_up_to m (Suc k) n", "."], ["proof (state)\nthis:\n  cycle_free_up_to m (Suc k) n\n\ngoal (5 subgoals):\n 1. i' \\<le> n\n 2. j' \\<le> n\n 3. Suc k \\<le> n\n 4. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 5. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. i' \\<le> n\n 2. j' \\<le> n\n 3. Suc k \\<le> n\n 4. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 5. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show \"i' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i' \\<le> n", "using Suc.prems"], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. i' \\<le> n", "by simp"], ["proof (state)\nthis:\n  i' \\<le> n\n\ngoal (4 subgoals):\n 1. j' \\<le> n\n 2. Suc k \\<le> n\n 3. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 4. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. j' \\<le> n\n 2. Suc k \\<le> n\n 3. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 4. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show \"j' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' \\<le> n", "using Suc.prems"], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. j' \\<le> n", "by simp"], ["proof (state)\nthis:\n  j' \\<le> n\n\ngoal (3 subgoals):\n 1. Suc k \\<le> n\n 2. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 3. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. Suc k \\<le> n\n 2. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 3. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show \"Suc k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k \\<le> n", "using Suc.prems"], ["proof (prove)\nusing this:\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. Suc k \\<le> n", "by simp"], ["proof (state)\nthis:\n  Suc k \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "fix l"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "assume \"l \\<in> {len m i' j' xs | xs. set xs \\<subseteq> {0..Suc k} \\<and> i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\""], ["proof (state)\nthis:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..Suc k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "then"], ["proof (chain)\npicking this:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..Suc k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "obtain xs where xs:\n      \"l = len m i' j' xs\" \"set xs \\<subseteq> {0..Suc k}\" \"i' \\<notin> set xs\" \"j' \\<notin> set xs\" \"distinct xs\""], ["proof (prove)\nusing this:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..Suc k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>l = len m i' j' xs; set xs \\<subseteq> {0..Suc k};\n         i' \\<notin> set xs; j' \\<notin> set xs; distinct xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = len m i' j' xs\n  set xs \\<subseteq> {0..Suc k}\n  i' \\<notin> set xs\n  j' \\<notin> set xs\n  distinct xs\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "have IH: \"D m i' j' k = fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i' j' k = fw m n k i j i' j'", "using cycle_free_to_k Suc"], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  \\<lbrakk>cycle_free_up_to m k n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> n;\n   ?j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i' ?j' k = fw m n k ?i ?j ?i' ?j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. D m i' j' k = fw m n k i j i' j'", "by auto"], ["proof (state)\nthis:\n  D m i' j' k = fw m n k i j i' j'\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "have fin:\n      \"finite {len m i' j' xs |xs. set xs \\<subseteq> {0..k} \\<and> i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "using D_base_finite''"], ["proof (prove)\nusing this:\n  finite\n   {len ?m ?i ?j xs |xs.\n    set xs \\<subseteq> {0..?k} \\<and>\n    ?i \\<notin> set xs \\<and> ?j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i' j' xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by simp"], ["proof (state)\nthis:\n  finite\n   {len m i' j' xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i' j' xs |xs.\n                set xs \\<subseteq> {0..Suc k} \\<and>\n                i' \\<notin> set xs \\<and>\n                j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       fw m n (Suc k) i j i' j' \\<le> y\n 2. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show \"fw m n (Suc k) i j i' j' \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> l", "proof (cases \"Suc k \\<in> set xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l\n 2. Suc k \\<notin> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "case False"], ["proof (state)\nthis:\n  Suc k \\<notin> set xs\n\ngoal (2 subgoals):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l\n 2. Suc k \\<notin> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "hence \"set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  Suc k \\<notin> set xs\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> {0..k}", "using xs(2)"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set xs\n  set xs \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> {0..k}", "using atLeastAtMostSuc_conv"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set xs\n  set xs \\<subseteq> {0..Suc k}\n  ?m \\<le> Suc ?n \\<Longrightarrow> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> {0..k}", "by auto"], ["proof (state)\nthis:\n  set xs \\<subseteq> {0..k}\n\ngoal (2 subgoals):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l\n 2. Suc k \\<notin> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "hence\n        \"l \\<in> {len m i' j' xs | xs. set xs \\<subseteq> {0..k} \\<and> i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. l \\<in> {len m i' j' xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i' \\<notin> set xs \\<and>\n             j' \\<notin> set xs \\<and> distinct xs}", "using xs"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  l = len m i' j' xs\n  set xs \\<subseteq> {0..Suc k}\n  i' \\<notin> set xs\n  j' \\<notin> set xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. l \\<in> {len m i' j' xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i' \\<notin> set xs \\<and>\n             j' \\<notin> set xs \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l\n 2. Suc k \\<notin> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "with Min_le[OF fin this]"], ["proof (chain)\npicking this:\n  Min {len m i' j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> l\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"fw m n k i j i' j' \\<le> l\""], ["proof (prove)\nusing this:\n  Min {len m i' j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> l\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> l", "using IH"], ["proof (prove)\nusing this:\n  Min {len m i' j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> l\n  l \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  D m i' j' k = fw m n k i j i' j'\n\ngoal (1 subgoal):\n 1. fw m n k i j i' j' \\<le> l", "by (simp add: D_def)"], ["proof (state)\nthis:\n  fw m n k i j i' j' \\<le> l\n\ngoal (2 subgoals):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l\n 2. Suc k \\<notin> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n k i j i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> l", "using fw_invariant[of k \"Suc k\" i n j j i m i' j'] Suc.prems"], ["proof (prove)\nusing this:\n  fw m n k i j i' j' \\<le> l\n  \\<lbrakk>k \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n; j \\<le> j;\n   i \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> fw m n k i j i' j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> l", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "case True"], ["proof (state)\nthis:\n  Suc k \\<in> set xs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "then"], ["proof (chain)\npicking this:\n  Suc k \\<in> set xs", "obtain ys zs where ys_zs_id: \"xs = ys @ Suc k # zs\""], ["proof (prove)\nusing this:\n  Suc k \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        xs = ys @ Suc k # zs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list)"], ["proof (state)\nthis:\n  xs = ys @ Suc k # zs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "with xs(5)"], ["proof (chain)\npicking this:\n  distinct xs\n  xs = ys @ Suc k # zs", "have ys_zs: \"distinct ys\" \"distinct zs\" \"Suc k \\<notin> set ys\" \"Suc k \\<notin> set zs\"\n      \"set ys \\<inter> set zs = {}\""], ["proof (prove)\nusing this:\n  distinct xs\n  xs = ys @ Suc k # zs\n\ngoal (1 subgoal):\n 1. (distinct ys &&& distinct zs) &&&\n    Suc k \\<notin> set ys &&&\n    Suc k \\<notin> set zs &&& set ys \\<inter> set zs = {}", "by auto"], ["proof (state)\nthis:\n  distinct ys\n  distinct zs\n  Suc k \\<notin> set ys\n  Suc k \\<notin> set zs\n  set ys \\<inter> set zs = {}\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"i' \\<noteq> Suc k\" \"j' \\<noteq> Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i' \\<noteq> Suc k &&& j' \\<noteq> Suc k", "using xs(3,4) True"], ["proof (prove)\nusing this:\n  i' \\<notin> set xs\n  j' \\<notin> set xs\n  Suc k \\<in> set xs\n\ngoal (1 subgoal):\n 1. i' \\<noteq> Suc k &&& j' \\<noteq> Suc k", "by auto"], ["proof (state)\nthis:\n  i' \\<noteq> Suc k\n  j' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"set ys \\<subseteq> {0..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..k}", "using ys_zs(3) xs(2) ys_zs_id"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set ys\n  set xs \\<subseteq> {0..Suc k}\n  xs = ys @ Suc k # zs\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..k}", "using atLeastAtMostSuc_conv"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set ys\n  set xs \\<subseteq> {0..Suc k}\n  xs = ys @ Suc k # zs\n  ?m \\<le> Suc ?n \\<Longrightarrow> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..k}", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "hence \"len m i' (Suc k) ys \\<in> ?S k i' (Suc k)\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i' (Suc k) ys\n    \\<in> {len m i' (Suc k) xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and>\n           Suc k \\<notin> set xs \\<and> distinct xs}", "using ys_zs_id ys_zs xs(3)"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..k}\n  xs = ys @ Suc k # zs\n  distinct ys\n  distinct zs\n  Suc k \\<notin> set ys\n  Suc k \\<notin> set zs\n  set ys \\<inter> set zs = {}\n  i' \\<notin> set xs\n\ngoal (1 subgoal):\n 1. len m i' (Suc k) ys\n    \\<in> {len m i' (Suc k) xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i' \\<notin> set xs \\<and>\n           Suc k \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i' (Suc k) ys\n  \\<in> {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "with Min_le[OF _ this]"], ["proof (chain)\npicking this:\n  finite\n   {len m i' (Suc k) xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i' \\<notin> set xs \\<and>\n    Suc k \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  len m i' (Suc k) ys\n  \\<in> {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}", "have \"Min (?S k i' (Suc k)) \\<le> len m i' (Suc k) ys\""], ["proof (prove)\nusing this:\n  finite\n   {len m i' (Suc k) xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i' \\<notin> set xs \\<and>\n    Suc k \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  len m i' (Suc k) ys\n  \\<in> {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. Min {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n    \\<le> len m i' (Suc k) ys", "using D_base_finite'[of m i' \"Suc k\" k] \\<open>i' \\<noteq> Suc k\\<close>"], ["proof (prove)\nusing this:\n  finite\n   {len m i' (Suc k) xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i' \\<notin> set xs \\<and>\n    Suc k \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  len m i' (Suc k) ys\n  \\<in> {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  finite\n   {len m i' (Suc k) xs |xs.\n    set xs \\<subseteq> {0..k} \\<and> distinct (i' # Suc k # xs)}\n  i' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. Min {len m i' (Suc k) xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n    \\<le> len m i' (Suc k) ys", "by fastforce"], ["proof (state)\nthis:\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "moreover"], ["proof (state)\nthis:\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"fw m n k n n i' (Suc k)  =  D m i' (Suc k) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) = D m i' (Suc k) k", "using Suc.IH[OF cycle_free_to_k, of i' n] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; ?j' \\<le> ?j; n \\<le> n; ?j \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m i' ?j' k = fw m n k n ?j i' ?j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) = D m i' (Suc k) k", "by auto"], ["proof (state)\nthis:\n  fw m n k n n i' (Suc k) = D m i' (Suc k) k\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "ultimately"], ["proof (chain)\npicking this:\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  fw m n k n n i' (Suc k) = D m i' (Suc k) k", "have *:\"fw m n k n n i' (Suc k) \\<le> len m i' (Suc k) ys\""], ["proof (prove)\nusing this:\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  fw m n k n n i' (Suc k) = D m i' (Suc k) k\n\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) \\<le> len m i' (Suc k) ys", "using \\<open>i' \\<noteq> Suc k\\<close>"], ["proof (prove)\nusing this:\n  Min {len m i' (Suc k) xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       i' \\<notin> set xs \\<and> Suc k \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m i' (Suc k) ys\n  fw m n k n n i' (Suc k) = D m i' (Suc k) k\n  i' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) \\<le> len m i' (Suc k) ys", "by (auto simp: D_def)"], ["proof (state)\nthis:\n  fw m n k n n i' (Suc k) \\<le> len m i' (Suc k) ys\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"set zs \\<subseteq> {0..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set zs \\<subseteq> {0..k}", "using ys_zs(4) xs(2) ys_zs_id"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set zs\n  set xs \\<subseteq> {0..Suc k}\n  xs = ys @ Suc k # zs\n\ngoal (1 subgoal):\n 1. set zs \\<subseteq> {0..k}", "using atLeastAtMostSuc_conv"], ["proof (prove)\nusing this:\n  Suc k \\<notin> set zs\n  set xs \\<subseteq> {0..Suc k}\n  xs = ys @ Suc k # zs\n  ?m \\<le> Suc ?n \\<Longrightarrow> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}\n\ngoal (1 subgoal):\n 1. set zs \\<subseteq> {0..k}", "by auto"], ["proof (state)\nthis:\n  set zs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "hence \"len m (Suc k) j' zs \\<in> ?S k (Suc k) j'\""], ["proof (prove)\nusing this:\n  set zs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m (Suc k) j' zs\n    \\<in> {len m (Suc k) j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           Suc k \\<notin> set xs \\<and>\n           j' \\<notin> set xs \\<and> distinct xs}", "using ys_zs_id ys_zs xs(3,4,5)"], ["proof (prove)\nusing this:\n  set zs \\<subseteq> {0..k}\n  xs = ys @ Suc k # zs\n  distinct ys\n  distinct zs\n  Suc k \\<notin> set ys\n  Suc k \\<notin> set zs\n  set ys \\<inter> set zs = {}\n  i' \\<notin> set xs\n  j' \\<notin> set xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. len m (Suc k) j' zs\n    \\<in> {len m (Suc k) j' xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           Suc k \\<notin> set xs \\<and>\n           j' \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m (Suc k) j' zs\n  \\<in> {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "with Min_le[OF _ this]"], ["proof (chain)\npicking this:\n  finite\n   {len m (Suc k) j' xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    Suc k \\<notin> set xs \\<and>\n    j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  len m (Suc k) j' zs\n  \\<in> {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have \"Min (?S k (Suc k) j') \\<le> len m (Suc k) j' zs\""], ["proof (prove)\nusing this:\n  finite\n   {len m (Suc k) j' xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    Suc k \\<notin> set xs \\<and>\n    j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  len m (Suc k) j' zs\n  \\<in> {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. Min {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n    \\<le> len m (Suc k) j' zs", "using D_base_finite'[of m \"Suc k\" j' k] \\<open>j' \\<noteq> Suc k\\<close>"], ["proof (prove)\nusing this:\n  finite\n   {len m (Suc k) j' xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    Suc k \\<notin> set xs \\<and>\n    j' \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  len m (Suc k) j' zs\n  \\<in> {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  finite\n   {len m (Suc k) j' xs |xs.\n    set xs \\<subseteq> {0..k} \\<and> distinct (Suc k # j' # xs)}\n  j' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. Min {len m (Suc k) j' xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n    \\<le> len m (Suc k) j' zs", "by fastforce"], ["proof (state)\nthis:\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "moreover"], ["proof (state)\nthis:\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"fw m n k n n (Suc k) j'  =  D m (Suc k) j' k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' = D m (Suc k) j' k", "using Suc.IH[OF cycle_free_to_k, of \"Suc k\" n j' n] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc k \\<le> n; j' \\<le> n; n \\<le> n; n \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m (Suc k) j' k = fw m n k n n (Suc k) j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' = D m (Suc k) j' k", "by auto"], ["proof (state)\nthis:\n  fw m n k n n (Suc k) j' = D m (Suc k) j' k\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "ultimately"], ["proof (chain)\npicking this:\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  fw m n k n n (Suc k) j' = D m (Suc k) j' k", "have **:\"fw m n k n n (Suc k) j' \\<le> len m (Suc k) j' zs\""], ["proof (prove)\nusing this:\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  fw m n k n n (Suc k) j' = D m (Suc k) j' k\n\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' \\<le> len m (Suc k) j' zs", "using \\<open>j' \\<noteq> Suc k\\<close>"], ["proof (prove)\nusing this:\n  Min {len m (Suc k) j' xs |xs.\n       set xs \\<subseteq> {0..k} \\<and>\n       Suc k \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n  \\<le> len m (Suc k) j' zs\n  fw m n k n n (Suc k) j' = D m (Suc k) j' k\n  j' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' \\<le> len m (Suc k) j' zs", "by (auto simp: D_def)"], ["proof (state)\nthis:\n  fw m n k n n (Suc k) j' \\<le> len m (Suc k) j' zs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have len_eq: \"l = len m i' (Suc k) ys + len m (Suc k) j' zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = len m i' (Suc k) ys + len m (Suc k) j' zs", "by (simp add: xs(1) len_decomp[OF ys_zs_id, symmetric] ys_zs_id)"], ["proof (state)\nthis:\n  l = len m i' (Suc k) ys + len m (Suc k) j' zs\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "have \"fw m n (Suc k) i' j' i' j' \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j'\n    \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'", "using fw_step_Suc[of n m k i' j', OF K] Suc.prems(2-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; j' \\<le> n; Suc k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i' j' i' j' =\n                    min (fw m n k n n i' j')\n                     (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j'\n    \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i' j'\n  \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "hence \"fw m n (Suc k) i' j' i' j' \\<le> l\""], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i' j'\n  \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j' \\<le> l", "using fw_step_Suc[of n m k i j] Suc.prems(3-) * ** len_eq add_mono"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i' j'\n  \\<le> fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n  \\<lbrakk>\\<forall>k'\\<le>n. \\<one> \\<le> fw m n k n n k' k'; i \\<le> n;\n   j \\<le> n; Suc k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i j i j =\n                    min (fw m n k n n i j)\n                     (fw m n k n n i (Suc k) + fw m n k n n (Suc k) j)\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  fw m n k n n i' (Suc k) \\<le> len m i' (Suc k) ys\n  fw m n k n n (Suc k) j' \\<le> len m (Suc k) j' zs\n  l = len m i' (Suc k) ys + len m (Suc k) j' zs\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j' \\<le> l", "by fastforce"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. Suc k \\<in> set xs \\<Longrightarrow> fw m n (Suc k) i j i' j' \\<le> l", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> l", "using fw_invariant[of \"Suc k\" \"Suc k\" i n j j' i' m i' j'] Suc.prems(2-)"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i' j' i' j' \\<le> l\n  \\<lbrakk>Suc k \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n;\n   j' \\<le> j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                    \\<le> fw m n (Suc k) i' j' i' j'\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' \\<le> l", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' \\<le> l\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "have \"fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'", "using single_iteration_inv[OF Suc.prems(2-5)]"], ["proof (prove)\nusing this:\n  fw ?m n ?k i j i' j' = fw ?m n ?k i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'", "."], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "also"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = fw m n (Suc k) i' j' i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "have \"\\<dots> = min (fw m n k n n i' j') (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j' =\n    min (fw m n k n n i' j')\n     (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')", "using fw_step_Suc[OF K] Suc.prems(2-)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n; Suc k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n (Suc k) ?i ?j ?i ?j =\n                    min (fw m n k n n ?i ?j)\n                     (fw m n k n n ?i (Suc k) + fw m n k n n (Suc k) ?j)\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i' j' i' j' =\n    min (fw m n k n n i' j')\n     (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i' j' i' j' =\n  min (fw m n k n n i' j')\n   (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "finally"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i j i' j' =\n  min (fw m n k n n i' j')\n   (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')", "show \"fw m n (Suc k) i j i' j' \\<in> {len m i' j' xs | xs. set xs \\<subseteq> {0..Suc k}}\""], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' =\n  min (fw m n k n n i' j')\n   (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "proof (cases \"fw m n (Suc k) i j i' j' = fw m n k n n i' j'\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' = fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}\n 2. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "case True"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = fw m n k n n i' j'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' = fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}\n 2. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "have \"fw m n (Suc k) i j i' j' = D m i' j' k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = D m i' j' k", "using Suc.IH[OF cycle_free_to_k, of i' n j' n] Suc.prems(2-) True"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; j' \\<le> n; n \\<le> n; n \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m i' j' k = fw m n k n n i' j'\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  fw m n (Suc k) i j i' j' = fw m n k n n i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = D m i' j' k", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = D m i' j' k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' = fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}\n 2. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "from D_dest'[OF this]"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i j i' j'\n  \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j'\n  \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "by blast"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j'\n  \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "case 2"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' =\n  min (fw m n k n n i' j')\n   (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\n  fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "hence A:\"fw m n (Suc k) i j i' j' = fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\""], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' =\n  min (fw m n k n n i' j')\n   (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j')\n  fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' =\n    fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'", "by (metis ord.min_def)"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' =\n  fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "have \"fw m n k n n i' j' = D m i' j' k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n i' j' = D m i' j' k", "using Suc.IH[OF cycle_free_to_k, of i' n j' n] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; j' \\<le> n; n \\<le> n; n \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m i' j' k = fw m n k n n i' j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k n n i' j' = D m i' j' k", "by simp"], ["proof (state)\nthis:\n  fw m n k n n i' j' = D m i' j' k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "from D_dest[OF this]"], ["proof (chain)\npicking this:\n  fw m n k n n i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0..Suc k} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "have B:\"fw m n k n n i' j' \\<in> ?S (Suc k) i' j'\""], ["proof (prove)\nusing this:\n  fw m n k n n i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0..Suc k} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n k n n i' j'\n    \\<in> {len m i' j' xs |xs.\n           set xs \\<subseteq> {0..Suc k} \\<and>\n           i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}", "by blast"], ["proof (state)\nthis:\n  fw m n k n n i' j'\n  \\<in> {len m i' j' xs |xs.\n         set xs \\<subseteq> {0..Suc k} \\<and>\n         i' \\<notin> set xs \\<and> j' \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "have \"fw m n k n n i' (Suc k) = D m i' (Suc k) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) = D m i' (Suc k) k", "using Suc.IH[OF cycle_free_to_k, of i' n \"Suc k\" n] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> n; Suc k \\<le> n; n \\<le> n; n \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m i' (Suc k) k = fw m n k n n i' (Suc k)\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k n n i' (Suc k) = D m i' (Suc k) k", "by simp"], ["proof (state)\nthis:\n  fw m n k n n i' (Suc k) = D m i' (Suc k) k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "from D_dest'[OF this]"], ["proof (chain)\npicking this:\n  fw m n k n n i' (Suc k)\n  \\<in> {len m i' (Suc k) xs |xs. set xs \\<subseteq> {0..Suc k}}", "obtain xs where xs:\n        \"fw m n k n n i' (Suc k) = len m i' (Suc k) xs\" \"set xs \\<subseteq> {0..Suc k}\""], ["proof (prove)\nusing this:\n  fw m n k n n i' (Suc k)\n  \\<in> {len m i' (Suc k) xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>fw m n k n n i' (Suc k) = len m i' (Suc k) xs;\n         set xs \\<subseteq> {0..Suc k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  fw m n k n n i' (Suc k) = len m i' (Suc k) xs\n  set xs \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "have \"fw m n k n n (Suc k) j' = D m (Suc k) j' k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' = D m (Suc k) j' k", "using Suc.IH[OF cycle_free_to_k, of \"Suc k\" n j' n] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>Suc k \\<le> n; j' \\<le> n; n \\<le> n; n \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m (Suc k) j' k = fw m n k n n (Suc k) j'\n  cycle_free_up_to m (Suc k) n\n  i' \\<le> i\n  j' \\<le> j\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k n n (Suc k) j' = D m (Suc k) j' k", "by simp"], ["proof (state)\nthis:\n  fw m n k n n (Suc k) j' = D m (Suc k) j' k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "from D_dest'[OF this]"], ["proof (chain)\npicking this:\n  fw m n k n n (Suc k) j'\n  \\<in> {len m (Suc k) j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "obtain ys where ys:\n        \"fw m n k n n (Suc k) j' = len m (Suc k) j' ys\" \"set ys \\<subseteq> {0..Suc k}\""], ["proof (prove)\nusing this:\n  fw m n k n n (Suc k) j'\n  \\<in> {len m (Suc k) j' xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>fw m n k n n (Suc k) j' = len m (Suc k) j' ys;\n         set ys \\<subseteq> {0..Suc k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  fw m n k n n (Suc k) j' = len m (Suc k) j' ys\n  set ys \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "from A xs(1) ys(1) len_comp"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i j i' j' =\n  fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n  fw m n k n n i' (Suc k) = len m i' (Suc k) xs\n  fw m n k n n (Suc k) j' = len m (Suc k) j' ys\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys", "have \"fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)\""], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' =\n  fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j'\n  fw m n k n n i' (Suc k) = len m i' (Suc k) xs\n  fw m n k n n (Suc k) j' = len m (Suc k) j' ys\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "moreover"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "have \"set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}", "using xs(2) ys(2)"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..Suc k}\n  set ys \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}", "by auto"], ["proof (state)\nthis:\n  set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fw m n (Suc k) i j i' j' =\n             min (fw m n k n n i' j')\n              (fw m n k n n i' (Suc k) + fw m n k n n (Suc k) j');\n     fw m n (Suc k) i j i' j' \\<noteq> fw m n k n n i' j'\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j i' j'\n                      \\<in> {len m i' j' xs |xs.\n                             set xs \\<subseteq> {0..Suc k}}", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)\n  set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Suc k) i j i' j' = len m i' j' (xs @ Suc k # ys)\n  set (xs @ Suc k # ys) \\<subseteq> {0..Suc k}\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j i' j'\n    \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}", "by blast"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j'\n  \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i j i' j'\n  \\<in> {len m i' j' xs |xs. set xs \\<subseteq> {0..Suc k}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i' j' (Suc k) = fw m n (Suc k) i j i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_free_cycle_free_up_to:\n  \"cycle_free m n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> cycle_free_up_to m k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> cycle_free_up_to m k n", "unfolding cycle_free_def cycle_free_up_to_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (\\<forall>j\\<le>n.\n                    len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n                \\<one> \\<le> len m i i xs;\n     k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..k} \\<longrightarrow>\n                         (\\<forall>j\\<le>n.\n                             len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<and>\n                         \\<one> \\<le> len m i i xs", "by force"], ["", "lemma cycle_free_diag:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> \\<one> \\<le> m i i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "using cycle_free_up_to_diag[OF cycle_free_cycle_free_up_to]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free ?m ?n; ?k \\<le> ?n; ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> \\<one> \\<le> ?m ?i ?i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "by blast"], ["", "corollary fw_shortest_path:\n  \"cycle_free m n \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n\n        \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n;\n     k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'", "using fw_shortest_path_up_to[OF cycle_free_cycle_free_up_to]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free ?m ?n; ?k \\<le> ?n; ?i' \\<le> ?i; ?j' \\<le> ?j;\n   ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> D ?m ?i' ?j' ?k = fw ?m ?n ?k ?i ?j ?i' ?j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i' \\<le> i; j' \\<le> j; i \\<le> n; j \\<le> n;\n     k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> D m i' j' k = fw m n k i j i' j'", "by auto"], ["", "corollary fw_shortest:\n  assumes \"cycle_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n  shows \"fw m n n n n i j \\<le> fw m n n n n i k + fw m n n n n k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n n n n i j \\<le> fw m n n n n i k + fw m n n n n k j", "proof (rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "case 1"], ["proof (state)\nthis:\n  \\<not> fw m n n n n i j \\<le> fw m n n n n i k + fw m n n n n k j\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "let ?S = \"\\<lambda> i j. {len m i j xs |xs. set xs \\<subseteq> {0..n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "let ?FW = \"fw m n n n n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "from assms fw_shortest_path"], ["proof (chain)\npicking this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  \\<lbrakk>cycle_free ?m ?n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n;\n   ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> D ?m ?i' ?j' ?k = fw ?m ?n ?k ?i ?j ?i' ?j'", "have FW: \"?FW i j = D m i j n\" \"?FW i k = D m i k n\" \"?FW k j = D m k j n\""], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  \\<lbrakk>cycle_free ?m ?n; ?i' \\<le> ?i; ?j' \\<le> ?j; ?i \\<le> ?n;\n   ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> D ?m ?i' ?j' ?k = fw ?m ?n ?k ?i ?j ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n n n n i j = D m i j n &&&\n    fw m n n n n i k = D m i k n &&& fw m n n n n k j = D m k j n", "by auto"], ["proof (state)\nthis:\n  fw m n n n n i j = D m i j n\n  fw m n n n n i k = D m i k n\n  fw m n n n n k j = D m k j n\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "with D_dest'' FW"], ["proof (chain)\npicking this:\n  ?x = D ?m ?i ?j ?k \\<Longrightarrow>\n  ?x \\<in> {len ?m ?i ?j xs |xs. set xs \\<subseteq> {0..?k}}\n  fw m n n n n i j = D m i j n\n  fw m n n n n i k = D m i k n\n  fw m n n n n k j = D m k j n\n  fw m n n n n i j = D m i j n\n  fw m n n n n i k = D m i k n\n  fw m n n n n k j = D m k j n", "have \"?FW i k \\<in> ?S i k\" \"?FW k j \\<in> ?S k j\""], ["proof (prove)\nusing this:\n  ?x = D ?m ?i ?j ?k \\<Longrightarrow>\n  ?x \\<in> {len ?m ?i ?j xs |xs. set xs \\<subseteq> {0..?k}}\n  fw m n n n n i j = D m i j n\n  fw m n n n n i k = D m i k n\n  fw m n n n n k j = D m k j n\n  fw m n n n n i j = D m i j n\n  fw m n n n n i k = D m i k n\n  fw m n n n n k j = D m k j n\n\ngoal (1 subgoal):\n 1. fw m n n n n i k \\<in> {len m i k xs |xs. set xs \\<subseteq> {0..n}} &&&\n    fw m n n n n k j \\<in> {len m k j xs |xs. set xs \\<subseteq> {0..n}}", "by auto"], ["proof (state)\nthis:\n  fw m n n n n i k \\<in> {len m i k xs |xs. set xs \\<subseteq> {0..n}}\n  fw m n n n n k j \\<in> {len m k j xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  fw m n n n n i k \\<in> {len m i k xs |xs. set xs \\<subseteq> {0..n}}\n  fw m n n n n k j \\<in> {len m k j xs |xs. set xs \\<subseteq> {0..n}}", "obtain xs ys where xs_ys:\n    \"?FW i k = len m i k xs\" \"set xs \\<subseteq> {0..n}\" \"?FW k j = len m k j ys\" \"set ys \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  fw m n n n n i k \\<in> {len m i k xs |xs. set xs \\<subseteq> {0..n}}\n  fw m n n n n k j \\<in> {len m k j xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        \\<lbrakk>fw m n n n n i k = len m i k xs; set xs \\<subseteq> {0..n};\n         fw m n n n n k j = len m k j ys; set ys \\<subseteq> {0..n}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  fw m n n n n i k = len m i k xs\n  set xs \\<subseteq> {0..n}\n  fw m n n n n k j = len m k j ys\n  set ys \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "let ?zs = \"rem_cycles i j (xs @ k # ys)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "have *:\"?FW i j = Min {len m i j xs |xs. set xs \\<subseteq> {0..n} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n n n n i j =\n    Min {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using FW(1)"], ["proof (prove)\nusing this:\n  fw m n n n n i j = D m i j n\n\ngoal (1 subgoal):\n 1. fw m n n n n i j =\n    Min {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "unfolding D_def"], ["proof (prove)\nusing this:\n  fw m n n n n i j =\n  Min {len m i j xs |xs.\n       set xs \\<subseteq> {0..n} \\<and>\n       i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n n n n i j =\n    Min {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "."], ["proof (state)\nthis:\n  fw m n n n n i j =\n  Min {len m i j xs |xs.\n       set xs \\<subseteq> {0..n} \\<and>\n       i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "have \"set (xs @ k # ys) \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (xs @ k # ys) \\<subseteq> {0..n}", "using assms xs_ys"], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  fw m n n n n i k = len m i k xs\n  set xs \\<subseteq> {0..n}\n  fw m n n n n k j = len m k j ys\n  set ys \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set (xs @ k # ys) \\<subseteq> {0..n}", "by fastforce"], ["proof (state)\nthis:\n  set (xs @ k # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "from cycle_free_dest [OF \\<open>cycle_free m n\\<close> \\<open>i \\<le> n\\<close> \\<open>j \\<le> n\\<close> this]"], ["proof (chain)\npicking this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)", "have **:\"len m i j ?zs \\<le> len m i j (xs @ k # ys)\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)", "by auto"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "have \"i \\<notin> set ?zs\" \"j \\<notin> set ?zs\" \"distinct ?zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j (xs @ k # ys)) &&&\n    j \\<notin> set (rem_cycles i j (xs @ k # ys)) &&&\n    distinct (rem_cycles i j (xs @ k # ys))", "using rem_cycles_distinct remove_all_removes rem_cycles_removes_last"], ["proof (prove)\nusing this:\n  distinct (rem_cycles ?i ?j ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n  ?j \\<notin> set (rem_cycles ?i ?j ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j (xs @ k # ys)) &&&\n    j \\<notin> set (rem_cycles i j (xs @ k # ys)) &&&\n    distinct (rem_cycles i j (xs @ k # ys))", "by fast+"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j (xs @ k # ys))\n  j \\<notin> set (rem_cycles i j (xs @ k # ys))\n  distinct (rem_cycles i j (xs @ k # ys))\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j (xs @ k # ys))\n  j \\<notin> set (rem_cycles i j (xs @ k # ys))\n  distinct (rem_cycles i j (xs @ k # ys))\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "have \"set ?zs \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (rem_cycles i j (xs @ k # ys)) \\<subseteq> {0..n}", "using rem_cycles_subs[of i j\"xs @ k # ys\"] xs_ys assms"], ["proof (prove)\nusing this:\n  set (rem_cycles i j (xs @ k # ys)) \\<subseteq> set (xs @ k # ys)\n  fw m n n n n i k = len m i k xs\n  set xs \\<subseteq> {0..n}\n  fw m n n n n k j = len m k j ys\n  set ys \\<subseteq> {0..n}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. set (rem_cycles i j (xs @ k # ys)) \\<subseteq> {0..n}", "by fastforce"], ["proof (state)\nthis:\n  set (rem_cycles i j (xs @ k # ys)) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n  i \\<notin> set (rem_cycles i j (xs @ k # ys))\n  j \\<notin> set (rem_cycles i j (xs @ k # ys))\n  distinct (rem_cycles i j (xs @ k # ys))\n  set (rem_cycles i j (xs @ k # ys)) \\<subseteq> {0..n}", "have\n    \"len m i j ?zs \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..n} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n  i \\<notin> set (rem_cycles i j (xs @ k # ys))\n  j \\<notin> set (rem_cycles i j (xs @ k # ys))\n  distinct (rem_cycles i j (xs @ k # ys))\n  set (rem_cycles i j (xs @ k # ys)) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j (xs @ k # ys))\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..n} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by blast"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j (xs @ k # ys))\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "with *"], ["proof (chain)\npicking this:\n  fw m n n n n i j =\n  Min {len m i j xs |xs.\n       set xs \\<subseteq> {0..n} \\<and>\n       i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  len m i j (rem_cycles i j (xs @ k # ys))\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have \"?FW i j \\<le> len m i j ?zs\""], ["proof (prove)\nusing this:\n  fw m n n n n i j =\n  Min {len m i j xs |xs.\n       set xs \\<subseteq> {0..n} \\<and>\n       i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  len m i j (rem_cycles i j (xs @ k # ys))\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n n n n i j \\<le> len m i j (rem_cycles i j (xs @ k # ys))", "using D_base_finite''"], ["proof (prove)\nusing this:\n  fw m n n n n i j =\n  Min {len m i j xs |xs.\n       set xs \\<subseteq> {0..n} \\<and>\n       i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  len m i j (rem_cycles i j (xs @ k # ys))\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..n} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  finite\n   {len ?m ?i ?j xs |xs.\n    set xs \\<subseteq> {0..?k} \\<and>\n    ?i \\<notin> set xs \\<and> ?j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. fw m n n n n i j \\<le> len m i j (rem_cycles i j (xs @ k # ys))", "by auto"], ["proof (state)\nthis:\n  fw m n n n n i j \\<le> len m i j (rem_cycles i j (xs @ k # ys))\n\ngoal (1 subgoal):\n 1. \\<not> fw m n n n n i j\n           \\<le> fw m n n n n i k + fw m n n n n k j \\<Longrightarrow>\n    False", "with ** xs_ys len_comp 1"], ["proof (chain)\npicking this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n  fw m n n n n i k = len m i k xs\n  set xs \\<subseteq> {0..n}\n  fw m n n n n k j = len m k j ys\n  set ys \\<subseteq> {0..n}\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  \\<not> fw m n n n n i j \\<le> fw m n n n n i k + fw m n n n n k j\n  fw m n n n n i j \\<le> len m i j (rem_cycles i j (xs @ k # ys))", "show ?case"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j (xs @ k # ys)) \\<le> len m i j (xs @ k # ys)\n  fw m n n n n i k = len m i k xs\n  set xs \\<subseteq> {0..n}\n  fw m n n n n k j = len m k j ys\n  set ys \\<subseteq> {0..n}\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  \\<not> fw m n n n n i j \\<le> fw m n n n n i k + fw m n n n n k j\n  fw m n n n n i j \\<le> len m i j (rem_cycles i j (xs @ k # ys))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Result Under the Presence of Negative Cycles\\<close>"], ["", "lemma not_cylce_free_dest: \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> k \\<le> n. \\<not> cycle_free_up_to m k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>k\\<le>n. \\<not> cycle_free_up_to m k n", "by (auto simp add: cycle_free_def cycle_free_up_to_def)"], ["", "lemma D_not_diag_le:\n  \"(x :: 'a) \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<Longrightarrow> D m i j k \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and>\n             j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n    D m i j k \\<le> x", "using Min_le[OF D_base_finite'']"], ["proof (prove)\nusing this:\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and> ?j1 \\<notin> set xs \\<and> distinct xs}\n  \\<le> ?x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and>\n             j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n    D m i j k \\<le> x", "by (auto simp add: D_def)"], ["", "lemma D_not_diag_le': \"set xs \\<subseteq> {0..k} \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs\n  \\<Longrightarrow> D m i j k \\<le> len m i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n     j \\<notin> set xs; distinct xs\\<rbrakk>\n    \\<Longrightarrow> D m i j k \\<le> len m i j xs", "using Min_le[OF D_base_finite'']"], ["proof (prove)\nusing this:\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and> ?j1 \\<notin> set xs \\<and> distinct xs}\n  \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n     j \\<notin> set xs; distinct xs\\<rbrakk>\n    \\<Longrightarrow> D m i j k \\<le> len m i j xs", "by (fastforce simp add: D_def)"], ["", "lemma (in -) nat_upto_subs_top_removal':\n  \"S \\<subseteq> {0..Suc n} \\<Longrightarrow> Suc n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n}", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> S \\<subseteq> {0..Suc n}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..0}\n 2. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..0}\n 2. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (case_tac \"x = Suc 0\"; fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (rename_tac n x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (case_tac \"x = Suc (Suc n)\"; fastforce)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in -) nat_upto_subs_top_removal:\n  \"S \\<subseteq> {0..n::nat} \\<Longrightarrow> n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n - 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..n}; n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n - 1}", "using nat_upto_subs_top_removal'"], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> {0..Suc ?n}; Suc ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..n}; n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n - 1}", "by (cases n; simp)"], ["", "lemma fw_Suc:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fw m n (Suc k) i' j' i j \\<le> fw m n k n n i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i' j' i j \\<le> fw m n k n n i j", "by (metis Suc_innermost_id1' Suc_innermost_id2 Suc_innermost_mono linorder_class.not_le local.eq_iff\n          preorder_class.order_refl single_iteration_inv single_iteration_inv')"], ["", "lemma negative_len_shortest:\n  \"length xs = n \\<Longrightarrow> len m i i xs < \\<one>\n    \\<Longrightarrow> \\<exists> j ys. distinct (j # ys) \\<and> len m j j ys < \\<one> \\<and> j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = n; len m i i xs < \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         distinct (j # ys) \\<and>\n                         len m j j ys < \\<one> \\<and>\n                         j \\<in> set (i # xs) \\<and>\n                         set ys \\<subseteq> set xs", "proof (induction n arbitrary: xs i rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs i.\n       \\<lbrakk>\\<And>y xs i.\n                   \\<lbrakk>y < x; length xs = y;\n                    len m i i xs < \\<one>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>j ys.\n  distinct (j # ys) \\<and>\n  len m j j ys < \\<one> \\<and>\n  j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs;\n        length xs = x; len m i i xs < \\<one>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j ys.\n                            distinct (j # ys) \\<and>\n                            len m j j ys < \\<one> \\<and>\n                            j \\<in> set (i # xs) \\<and>\n                            set ys \\<subseteq> set xs", "case (less n)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < n; length ?xs = ?y; len m ?i ?i ?xs < \\<one>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < \\<one> \\<and>\n                       j \\<in> set (?i # ?xs) \\<and>\n                       set ys \\<subseteq> set ?xs\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x xs i.\n       \\<lbrakk>\\<And>y xs i.\n                   \\<lbrakk>y < x; length xs = y;\n                    len m i i xs < \\<one>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>j ys.\n  distinct (j # ys) \\<and>\n  len m j j ys < \\<one> \\<and>\n  j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs;\n        length xs = x; len m i i xs < \\<one>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j ys.\n                            distinct (j # ys) \\<and>\n                            len m j j ys < \\<one> \\<and>\n                            j \\<in> set (i # xs) \\<and>\n                            set ys \\<subseteq> set xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "using less.prems"], ["proof (prove)\nusing this:\n  xs = []\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case (Cons y ys)"], ["proof (state)\nthis:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "then"], ["proof (chain)\npicking this:\n  xs = y # ys", "have \"length xs \\<ge> 1\""], ["proof (prove)\nusing this:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. 1 \\<le> length xs", "by auto"], ["proof (state)\nthis:\n  1 \\<le> length xs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < \\<one> \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"i \\<in> set xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "assume i: \"i \\<in> set xs\""], ["proof (state)\nthis:\n  i \\<in> set xs\n\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "then"], ["proof (chain)\npicking this:\n  i \\<in> set xs", "obtain as bs where xs: \"xs = as @ i # bs\""], ["proof (prove)\nusing this:\n  i \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        xs = as @ i # bs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list)"], ["proof (state)\nthis:\n  xs = as @ i # bs\n\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"len m i i as < \\<one>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  len m i i as < \\<one>\n\ngoal (2 subgoals):\n 1. len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < \\<one>", "have \"length as < n\""], ["proof (prove)\nusing this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. length as < n", "by auto"], ["proof (state)\nthis:\n  length as < n\n\ngoal (2 subgoals):\n 1. len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ True] xs"], ["proof (chain)\npicking this:\n  length as = length as \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # as) \\<and> set ys \\<subseteq> set as\n  xs = as @ i # bs", "show ?thesis"], ["proof (prove)\nusing this:\n  length as = length as \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # as) \\<and> set ys \\<subseteq> set as\n  xs = as @ i # bs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> len m i i as < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from len_decomp[OF xs]"], ["proof (chain)\npicking this:\n  len ?m ?x ?z xs = len ?m ?x i as + len ?m i ?z bs", "have \"len m i i xs = len m i i as + len m i i bs\""], ["proof (prove)\nusing this:\n  len ?m ?x ?z xs = len ?m ?x i as + len ?m i ?z bs\n\ngoal (1 subgoal):\n 1. len m i i xs = len m i i as + len m i i bs", "by auto"], ["proof (state)\nthis:\n  len m i i xs = len m i i as + len m i i bs\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with False less.prems"], ["proof (chain)\npicking this:\n  \\<not> len m i i as < \\<one>\n  length xs = n\n  len m i i xs < \\<one>\n  len m i i xs = len m i i as + len m i i bs", "have *: \"len m i i bs < \\<one>\""], ["proof (prove)\nusing this:\n  \\<not> len m i i as < \\<one>\n  length xs = n\n  len m i i xs < \\<one>\n  len m i i xs = len m i i as + len m i i bs\n\ngoal (1 subgoal):\n 1. len m i i bs < \\<one>", "by (metis add_lt_neutral local.dual_order.strict_trans local.neqE)"], ["proof (state)\nthis:\n  len m i i bs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < \\<one>", "have \"length bs < n\""], ["proof (prove)\nusing this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. length bs < n", "by auto"], ["proof (state)\nthis:\n  length bs < n\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ *] xs"], ["proof (chain)\npicking this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ i # bs", "show ?thesis"], ["proof (prove)\nusing this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ i # bs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "assume i: \"i \\<notin> set xs\""], ["proof (state)\nthis:\n  i \\<notin> set xs\n\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"distinct xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with i less.prems"], ["proof (chain)\npicking this:\n  i \\<notin> set xs\n  length xs = n\n  len m i i xs < \\<one>\n  distinct xs", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<notin> set xs\n  length xs = n\n  len m i i xs < \\<one>\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> distinct xs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from not_distinct_decomp[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs ys zs y. xs = xs @ [y] @ ys @ [y] @ zs", "obtain a as bs cs where xs:\n          \"xs = as @ a # bs @ a # cs\""], ["proof (prove)\nusing this:\n  \\<exists>xs ys zs y. xs = xs @ [y] @ ys @ [y] @ zs\n\ngoal (1 subgoal):\n 1. (\\<And>as a bs cs.\n        xs = as @ a # bs @ a # cs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = as @ a # bs @ a # cs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"len m a a bs < \\<one>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  len m a a bs < \\<one>\n\ngoal (2 subgoals):\n 1. len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < \\<one>", "have \"length bs < n\""], ["proof (prove)\nusing this:\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. length bs < n", "by auto"], ["proof (state)\nthis:\n  length bs < n\n\ngoal (2 subgoals):\n 1. len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ True] xs"], ["proof (chain)\npicking this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (a # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ a # bs @ a # cs", "show ?thesis"], ["proof (prove)\nusing this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (a # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ a # bs @ a # cs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> len m a a bs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from len_decomp[OF xs, of m  i i] len_decomp[of \"bs @ a # cs\" bs a cs m a i]"], ["proof (chain)\npicking this:\n  len m i i xs = len m i a as + len m a i (bs @ a # cs)\n  bs @ a # cs = bs @ a # cs \\<Longrightarrow>\n  len m a i (bs @ a # cs) = len m a a bs + len m a i cs", "have *:\"len m i i xs = len m i a as + (len m a a bs + len m a i cs)\""], ["proof (prove)\nusing this:\n  len m i i xs = len m i a as + len m a i (bs @ a # cs)\n  bs @ a # cs = bs @ a # cs \\<Longrightarrow>\n  len m a i (bs @ a # cs) = len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. len m i i xs = len m i a as + (len m a a bs + len m a i cs)", "by auto"], ["proof (state)\nthis:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from False"], ["proof (chain)\npicking this:\n  \\<not> len m a a bs < \\<one>", "have \"len m a a bs \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  \\<not> len m a a bs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> len m a a bs", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<le> len m a a bs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with add_mono"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> len m a a bs", "have \"len m a a bs + len m a i cs \\<ge> len m a i cs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> len m a a bs\n\ngoal (1 subgoal):\n 1. len m a i cs \\<le> len m a a bs + len m a i cs", "by fastforce"], ["proof (state)\nthis:\n  len m a i cs \\<le> len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with *"], ["proof (chain)\npicking this:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n  len m a i cs \\<le> len m a a bs + len m a i cs", "have \"len m i i xs \\<ge> len m i a as + len m a i cs\""], ["proof (prove)\nusing this:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n  len m a i cs \\<le> len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. len m i a as + len m a i cs \\<le> len m i i xs", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  len m i a as + len m a i cs \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with less.prems(2)"], ["proof (chain)\npicking this:\n  len m i i xs < \\<one>\n  len m i a as + len m a i cs \\<le> len m i i xs", "have \"len m i a as + len m a i cs < \\<one>\""], ["proof (prove)\nusing this:\n  len m i i xs < \\<one>\n  len m i a as + len m a i cs \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. len m i a as + len m a i cs < \\<one>", "by auto"], ["proof (state)\nthis:\n  len m i a as + len m a i cs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with len_comp"], ["proof (chain)\npicking this:\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  len m i a as + len m a i cs < \\<one>", "have \"len m i i (as @ a # cs) < \\<one>\""], ["proof (prove)\nusing this:\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  len m i a as + len m a i cs < \\<one>\n\ngoal (1 subgoal):\n 1. len m i i (as @ a # cs) < \\<one>", "by auto"], ["proof (state)\nthis:\n  len m i i (as @ a # cs) < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < \\<one> \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF _ _ this, of \"length (as @ a # cs)\"] xs less.prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>length (as @ a # cs) < n;\n   length (as @ a # cs) = length (as @ a # cs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < \\<one> \\<and>\n                       j \\<in> set (i # as @ a # cs) \\<and>\n                       set ys \\<subseteq> set (as @ a # cs)\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>length (as @ a # cs) < n;\n   length (as @ a # cs) = length (as @ a # cs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < \\<one> \\<and>\n                       j \\<in> set (i # as @ a # cs) \\<and>\n                       set ys \\<subseteq> set (as @ a # cs)\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < \\<one> \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem FW_neg_cycle_detect:\n  \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> i \\<le> n. fw m n n n n i i < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "assume A: \"\\<not> cycle_free m n\""], ["proof (state)\nthis:\n  \\<not> cycle_free m n\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "let ?K = \"{k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "let ?k = \"Min ?K\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have not_empty_K: \"?K \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<noteq> {}", "using not_cylce_free_dest[OF A(1)]"], ["proof (prove)\nusing this:\n  \\<exists>k\\<le>n. \\<not> cycle_free_up_to m k n\n\ngoal (1 subgoal):\n 1. {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"finite ?K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "by auto"], ["proof (state)\nthis:\n  finite {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with not_empty_K"], ["proof (chain)\npicking this:\n  {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<noteq> {}\n  finite {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "have *:\n    \"\\<forall> k' < ?k. cycle_free_up_to m k' n\""], ["proof (prove)\nusing this:\n  {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<noteq> {}\n  finite {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<forall>k'<Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}.\n       cycle_free_up_to m k' n", "by (auto, metis le_trans less_or_eq_imp_le preorder_class.less_irrefl)"], ["proof (state)\nthis:\n  \\<forall>k'<Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}.\n     cycle_free_up_to m k' n\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "from linorder_class.Min_in[OF \\<open>finite ?K\\<close> \\<open>?K \\<noteq> {}\\<close>]"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n  \\<in> {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "have\n    \"\\<not> cycle_free_up_to m ?k n\" \"?k \\<le> n\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n  \\<in> {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free_up_to m\n            (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) n &&&\n    Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n", "by auto"], ["proof (state)\nthis:\n  \\<not> cycle_free_up_to m\n          (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<not> cycle_free_up_to m\n          (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n", "have \"\\<exists> xs j. j \\<le> n \\<and> len m j j xs < \\<one> \\<and> set xs \\<subseteq> {0..?k}\""], ["proof (prove)\nusing this:\n  \\<not> cycle_free_up_to m\n          (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               \\<not> cycle_free_up_to m k n}}", "unfolding cycle_free_up_to_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and>\n             set xs\n             \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                     \\<not> (\\<forall>i xs.\n          i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n          (\\<forall>j\\<le>n.\n              len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n          \\<one> \\<le> len m i i xs)}} \\<longrightarrow>\n             (\\<forall>j\\<le>n.\n                 len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n             \\<one> \\<le> len m i i xs)\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (\\<forall>j\\<le>n.\n                         len m i j (rem_cycles i j xs)\n                         \\<le> len m i j xs) \\<and>\n                     \\<one> \\<le> len m i i xs)}\n  \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               \\<not> (\\<forall>i xs.\n    i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n    (\\<forall>j\\<le>n.\n        len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n    \\<one> \\<le> len m i i xs)}}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<And>i xs.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        \\<not> \\<one> \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "case (2 i xs)"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  \\<not> \\<one> \\<le> len m i i xs\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<And>i xs.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        \\<not> \\<one> \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "then"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  \\<not> \\<one> \\<le> len m i i xs", "have \"len m i i xs < \\<one>\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  \\<not> \\<one> \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. len m i i xs < \\<one>", "by auto"], ["proof (state)\nthis:\n  len m i i xs < \\<one>\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<And>i xs.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        \\<not> \\<one> \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "with 2"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  \\<not> \\<one> \\<le> len m i i xs\n  len m i i xs < \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  \\<not> \\<one> \\<le> len m i i xs\n  len m i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               (\\<exists>i\\<le>n.\n                                   \\<exists>xs.\nset xs \\<subseteq> {0..k} \\<and>\n((\\<exists>j\\<le>n.\n     \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n \\<not> \\<one> \\<le> len m i i xs))}}", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}}\n\ngoal (1 subgoal):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "case (1 i xs j)"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "then"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs", "have \"len m i j (rem_cycles i j xs) > len m i j xs\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          (\\<exists>i\\<le>n.\n              \\<exists>xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 ((\\<exists>j\\<le>n.\n                      \\<not> len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<or>\n                  \\<not> \\<one> \\<le> len m i i xs))}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs)", "by auto"], ["proof (state)\nthis:\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "from negative_cycle_dest[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "obtain i' ys where ys: \"i' \\<in> set (i # j # xs)\" \"len m i' i' ys < \\<one>\" \"set ys \\<subseteq> set xs\""], ["proof (prove)\nusing this:\n  \\<exists>i' ys.\n     len m i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i' ys.\n        \\<lbrakk>i' \\<in> set (i # j # xs); len m i' i' ys < \\<one>;\n         set ys \\<subseteq> set xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i' \\<in> set (i # j # xs)\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<And>i xs j.\n       \\<lbrakk>Min {k. k \\<le> n \\<and>\n                        (\\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               ((\\<exists>j\\<le>n.\n                                    \\<not> len m i j (rem_cycles i j xs)\n     \\<le> len m i j xs) \\<or>\n                                \\<not> \\<one> \\<le> len m i i xs))}\n                \\<le> n;\n        i \\<le> n;\n        set xs\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                (\\<exists>i\\<le>n.\n                                    \\<exists>xs.\n set xs \\<subseteq> {0..k} \\<and>\n ((\\<exists>j\\<le>n.\n      \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n  \\<not> \\<one> \\<le> len m i i xs))}};\n        j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs j.\n                            j \\<le> n \\<and>\n                            len m j j xs < \\<one> \\<and>\n                            set xs\n                            \\<subseteq> {0..Min\n       {k. k \\<le> n \\<and>\n           (\\<exists>i\\<le>n.\n               \\<exists>xs.\n                  set xs \\<subseteq> {0..k} \\<and>\n                  ((\\<exists>j\\<le>n.\n                       \\<not> len m i j (rem_cycles i j xs)\n                              \\<le> len m i j xs) \\<or>\n                   \\<not> \\<one> \\<le> len m i i xs))}}", "from ys(1) 1(2-4)"], ["proof (chain)\npicking this:\n  i' \\<in> set (i # j # xs)\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  i' \\<in> set (i # j # xs)\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               (\\<exists>i\\<le>n.\n                                   \\<exists>xs.\nset xs \\<subseteq> {0..k} \\<and>\n((\\<exists>j\\<le>n.\n     \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n \\<not> \\<one> \\<le> len m i i xs))}}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = i\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 3. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "case 1"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = i\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = i\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 3. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "with ys(2,3)"], ["proof (chain)\npicking this:\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = i", "show ?case"], ["proof (prove)\nusing this:\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = i\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               (\\<exists>i\\<le>n.\n                                   \\<exists>xs.\nset xs \\<subseteq> {0..k} \\<and>\n((\\<exists>j\\<le>n.\n     \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n \\<not> \\<one> \\<le> len m i i xs))}}", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "case 2"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}\n 2. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "with ys(2,3)"], ["proof (chain)\npicking this:\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = j", "show ?case"], ["proof (prove)\nusing this:\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' = j\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               (\\<exists>i\\<le>n.\n                                   \\<exists>xs.\nset xs \\<subseteq> {0..k} \\<and>\n((\\<exists>j\\<le>n.\n     \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n \\<not> \\<one> \\<le> len m i i xs))}}", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "case 3"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "with \\<open>?k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs", "have \"i' \\<le> n\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs\n\ngoal (1 subgoal):\n 1. i' \\<le> n", "unfolding cycle_free_up_to_def"], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (\\<forall>j\\<le>n.\n                         len m i j (rem_cycles i j xs)\n                         \\<le> len m i j xs) \\<and>\n                     \\<one> \\<le> len m i i xs)}\n  \\<le> n\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs\n\ngoal (1 subgoal):\n 1. i' \\<le> n", "by auto"], ["proof (state)\nthis:\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n;\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}};\n     j \\<le> n; i' \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs j.\n                         j \\<le> n \\<and>\n                         len m j j xs < \\<one> \\<and>\n                         set xs\n                         \\<subseteq> {0..Min\n    {k. k \\<le> n \\<and>\n        (\\<exists>i\\<le>n.\n            \\<exists>xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               ((\\<exists>j\\<le>n.\n                    \\<not> len m i j (rem_cycles i j xs)\n                           \\<le> len m i j xs) \\<or>\n                \\<not> \\<one> \\<le> len m i i xs))}}", "with 3 ys(2,3)"], ["proof (chain)\npicking this:\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i' \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                          (\\<exists>i\\<le>n.\n                              \\<exists>xs.\n                                 set xs \\<subseteq> {0..k} \\<and>\n                                 ((\\<exists>j\\<le>n.\n\\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                  \\<not> \\<one> \\<le> len m i i xs))}}\n  j \\<le> n\n  i' \\<in> set xs\n  len m i' i' ys < \\<one>\n  set ys \\<subseteq> set xs\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < \\<one> \\<and>\n       set xs\n       \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                               (\\<exists>i\\<le>n.\n                                   \\<exists>xs.\nset xs \\<subseteq> {0..k} \\<and>\n((\\<exists>j\\<le>n.\n     \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n \\<not> \\<one> \\<le> len m i i xs))}}", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             (\\<exists>i\\<le>n.\n                                 \\<exists>xs.\n                                    set xs \\<subseteq> {0..k} \\<and>\n                                    ((\\<exists>j\\<le>n.\n   \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<or>\n                                     \\<not> \\<one> \\<le> len m i i xs))}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             \\<not> cycle_free_up_to m k n}}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             \\<not> cycle_free_up_to m k n}}", "obtain a as where a_as: \"a \\<le> n \\<and> len m a a as < \\<one> \\<and> set as \\<subseteq> {0..?k}\""], ["proof (prove)\nusing this:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < \\<one> \\<and>\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             \\<not> cycle_free_up_to m k n}}\n\ngoal (1 subgoal):\n 1. (\\<And>a as.\n        a \\<le> n \\<and>\n        len m a a as < \\<one> \\<and>\n        set as\n        \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                \\<not> cycle_free_up_to m k\n  n}} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<le> n \\<and>\n  len m a a as < \\<one> \\<and>\n  set as\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with negative_len_shortest[of as \"length as\" m a]"], ["proof (chain)\npicking this:\n  \\<lbrakk>length as = length as; len m a a as < \\<one>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < \\<one> \\<and>\n                       j \\<in> set (a # as) \\<and> set ys \\<subseteq> set as\n  a \\<le> n \\<and>\n  len m a a as < \\<one> \\<and>\n  set as\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}", "obtain j xs where j_xs:\n  \"distinct (j # xs) \\<and> len m j j xs < \\<one> \\<and> j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\""], ["proof (prove)\nusing this:\n  \\<lbrakk>length as = length as; len m a a as < \\<one>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < \\<one> \\<and>\n                       j \\<in> set (a # as) \\<and> set ys \\<subseteq> set as\n  a \\<le> n \\<and>\n  len m a a as < \\<one> \\<and>\n  set as\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n\ngoal (1 subgoal):\n 1. (\\<And>j xs.\n        distinct (j # xs) \\<and>\n        len m j j xs < \\<one> \\<and>\n        j \\<in> set (a # as) \\<and>\n        set xs \\<subseteq> set as \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  distinct (j # xs) \\<and>\n  len m j j xs < \\<one> \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with a_as \\<open>?k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  a \\<le> n \\<and>\n  len m a a as < \\<one> \\<and>\n  set as\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  distinct (j # xs) \\<and>\n  len m j j xs < \\<one> \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as", "have cyc: \"j \\<le> n\" \"set xs \\<subseteq> {0..?k}\" \"len m j j xs < \\<one>\" \"distinct (j # xs)\""], ["proof (prove)\nusing this:\n  a \\<le> n \\<and>\n  len m a a as < \\<one> \\<and>\n  set as\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  distinct (j # xs) \\<and>\n  len m j j xs < \\<one> \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\n\ngoal (1 subgoal):\n 1. (j \\<le> n &&&\n     set xs\n     \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                             \\<not> cycle_free_up_to m k n}}) &&&\n    len m j j xs < \\<one> &&& distinct (j # xs)", "by auto"], ["proof (state)\nthis:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "{"], ["proof (state)\nthis:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "assume \"?k > 0\""], ["proof (state)\nthis:\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "have \"?k - 1 < ?k\""], ["proof (prove)\nusing this:\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n    < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "by simp"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n  < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with *"], ["proof (chain)\npicking this:\n  \\<forall>k'<Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}.\n     cycle_free_up_to m k' n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n  < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "have **:\"cycle_free_up_to m (?k - 1) n\""], ["proof (prove)\nusing this:\n  \\<forall>k'<Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}.\n     cycle_free_up_to m k' n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n  < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. cycle_free_up_to m\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n", "by blast"], ["proof (state)\nthis:\n  cycle_free_up_to m\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"?k \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs", "proof (rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n    \\<notin> set xs \\<Longrightarrow>\n    False", "case 1"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set xs\n\ngoal (1 subgoal):\n 1. Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n    \\<notin> set xs \\<Longrightarrow>\n    False", "with \\<open>set xs \\<subseteq> {0..?k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set xs", "have \"set xs \\<subseteq> {0..?k-1}\""], ["proof (prove)\nusing this:\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set xs\n\ngoal (1 subgoal):\n 1. set xs\n    \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                            \\<not> cycle_free_up_to m k n} -\n                    1}", "by auto"], ["proof (state)\nthis:\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} -\n                  1}\n\ngoal (1 subgoal):\n 1. Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n    \\<notin> set xs \\<Longrightarrow>\n    False", "from cycle_free_up_to_loop_dest[OF \\<open>j \\<le> n\\<close> this \\<open>cycle_free_up_to m (?k - 1) n\\<close>] cyc(3)"], ["proof (chain)\npicking this:\n  \\<one> \\<le> len m j j xs\n  len m j j xs < \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m j j xs\n  len m j j xs < \\<one>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with cyc(4)"], ["proof (chain)\npicking this:\n  distinct (j # xs)\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs", "have \"j \\<noteq> ?k\""], ["proof (prove)\nusing this:\n  distinct (j # xs)\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs\n\ngoal (1 subgoal):\n 1. j \\<noteq> Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}", "by auto"], ["proof (state)\nthis:\n  j \\<noteq> Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "from \\<open>?k \\<in> set xs\\<close>"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs", "obtain ys zs where \"xs = ys @ ?k # zs\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        xs =\n        ys @\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} #\n        zs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list)"], ["proof (state)\nthis:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with \\<open>distinct (j # xs)\\<close>"], ["proof (chain)\npicking this:\n  distinct (j # xs)\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs", "have xs: \"xs = ys @ ?k # zs\" \"distinct ys\" \"distinct zs\" \"?k \\<notin> set ys\" \"?k \\<notin> set zs\"\n             \"j \\<notin> set ys\" \"j \\<notin> set zs\""], ["proof (prove)\nusing this:\n  distinct (j # xs)\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n\ngoal (1 subgoal):\n 1. (xs =\n     ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs &&&\n     distinct ys &&& distinct zs) &&&\n    (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n     \\<notin> set ys &&&\n     Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n     \\<notin> set zs) &&&\n    j \\<notin> set ys &&& j \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  distinct ys\n  distinct zs\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set ys\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set zs\n  j \\<notin> set ys\n  j \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "from xs(1,4) \\<open>set xs \\<subseteq> {0..?k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set ys\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}", "have ys: \"set ys \\<subseteq> {0..?k-1}\""], ["proof (prove)\nusing this:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set ys\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n\ngoal (1 subgoal):\n 1. set ys\n    \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                            \\<not> cycle_free_up_to m k n} -\n                    1}", "by auto"], ["proof (state)\nthis:\n  set ys\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} -\n                  1}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "from xs(1,5) \\<open>set xs \\<subseteq> {0..?k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set zs\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}", "have zs: \"set zs \\<subseteq> {0..?k-1}\""], ["proof (prove)\nusing this:\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<notin> set zs\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n\ngoal (1 subgoal):\n 1. set zs\n    \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                            \\<not> cycle_free_up_to m k n} -\n                    1}", "by auto"], ["proof (state)\nthis:\n  set zs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} -\n                  1}\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"D m j ?k (?k - 1) = fw m n (?k - 1) n n j ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})", "using \\<open>?k \\<le> n\\<close> \\<open>j \\<le> n\\<close> fw_shortest_path_up_to[OF **, of j n ?k n]"], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  j \\<le> n\n  \\<lbrakk>j \\<le> n;\n   Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n;\n   n \\<le> n; n \\<le> n;\n   Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n   \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m j\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n})\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n} -\n                      1) =\n                    fw m n\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n} -\n                      1)\n                     n n j\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n})\n\ngoal (1 subgoal):\n 1. D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})", "by auto"], ["proof (state)\nthis:\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "moreover"], ["proof (state)\nthis:\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"D m ?k j (?k - 1) = fw m n (?k - 1) n n ?k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "using \\<open>?k \\<le> n\\<close> \\<open>j \\<le> n\\<close> fw_shortest_path_up_to[OF **, of ?k n j n]"], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  j \\<le> n\n  \\<lbrakk>Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n;\n   j \\<le> n; n \\<le> n; n \\<le> n;\n   Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1\n   \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m (Min {k. k \\<le> n \\<and>\n                                 \\<not> cycle_free_up_to m k n})\n                     j (Min {k. k \\<le> n \\<and>\n                                \\<not> cycle_free_up_to m k n} -\n                        1) =\n                    fw m n\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n} -\n                      1)\n                     n n\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n})\n                     j\n\ngoal (1 subgoal):\n 1. D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by auto"], ["proof (state)\nthis:\n  D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "have \"fw m n (?k - 1) n n j ?k + fw m n (?k - 1) n n ?k j \\<le> len m j ?k ys + len m ?k j zs\""], ["proof (prove)\nusing this:\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n           ys +\n          len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           zs", "using D_not_diag_le'[OF zs(1) xs(5,7,3), of m]\n          D_not_diag_le'[OF ys(1) xs(6,4,2), of m]"], ["proof (prove)\nusing this:\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) =\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  D m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n  \\<le> len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j zs\n  D m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n  \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) ys\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n           ys +\n          len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           zs", "by (auto simp: add_mono)"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n         ys +\n        len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j zs\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n         ys +\n        len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j zs", "have neg: \"fw m n (?k - 1) n n j ?k + fw m n (?k - 1) n n ?k j < \\<one>\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n         ys +\n        len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j zs\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    < \\<one>", "using xs(1) \\<open>len m j j xs < \\<one>\\<close> len_comp"], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> len m j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n         ys +\n        len m (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j zs\n  xs = ys @ Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} # zs\n  len m j j xs < \\<one>\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"fw m n ?k j j j j \\<le> fw m n (?k - 1) n n j ?k + fw m n (?k - 1) n n ?k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "with\\<open>?k > 0\\<close> fw.simps(2)[of m n \"?k - 1\"]"], ["proof (chain)\npicking this:\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n  fw m n (Suc (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1))\n   0 0 =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n     n)\n   (Suc (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)) 0 0\n  j = 0", "have \"fw m n ?k j j = fw_upd (fw m n (?k - 1) n n) ?k j j\""], ["proof (prove)\nusing this:\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n  fw m n (Suc (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1))\n   0 0 =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n     n)\n   (Suc (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)) 0 0\n  j = 0\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n    fw_upd\n     (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n       n)\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n     n)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "then"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n     n)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j", "have \"fw m n ?k j j j j \\<le> fw m n (?k - 1) n n j ?k + fw m n (?k - 1) n n ?k j\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n\n     n)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "then"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "with fw.simps(4)[of m n ?k j \"j - 1\"]"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Suc (j - 1)) =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1))\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (Suc (j - 1))\n  j \\<noteq> 0", "have \"fw m n ?k j j = fw_upd (fw m n ?k j (j -1)) ?k j j\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n   (Suc (j - 1)) =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1))\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (Suc (j - 1))\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n    fw_upd\n     (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n       (j - 1))\n     (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j", "by simp"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1))\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "then"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1))\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j", "have *: \"fw m n ?k j j j j \\<le> fw m n ?k j (j -1) j ?k + fw m n ?k j (j -1) ?k j\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j =\n  fw_upd\n   (fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1))\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           (j - 1) j\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           (j - 1) (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n           j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n         (j - 1) j\n         (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n         (j - 1) (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "have \"j - 1 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j - 1 < n", "using \\<open>j \\<le> n\\<close> False"], ["proof (prove)\nusing this:\n  j \\<le> n\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j - 1 < n", "by auto"], ["proof (state)\nthis:\n  j - 1 < n\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "then"], ["proof (chain)\npicking this:\n  j - 1 < n", "have \"fw m n ?k j (j -1) j ?k \\<le> fw m n (?k - 1) n n j ?k\""], ["proof (prove)\nusing this:\n  j - 1 < n\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1) j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})", "using fw_Suc[of j n ?k j \"j - 1\" m \"?k - 1\"] \\<open>j \\<le> n\\<close> \\<open>?k \\<le> n\\<close> \\<open>?k > 0\\<close>"], ["proof (prove)\nusing this:\n  j - 1 < n\n  \\<lbrakk>j \\<le> n;\n   Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n;\n   j \\<le> n; j - 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n\n                     (Suc (Min {k. k \\<le> n \\<and>\n                                   \\<not> cycle_free_up_to m k n} -\n                           1))\n                     j (j - 1) j\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n})\n                    \\<le> fw m n\n                           (Min {k. k \\<le> n \\<and>\n                                    \\<not> cycle_free_up_to m k n} -\n                            1)\n                           n n j\n                           (Min {k. k \\<le> n \\<and>\n                                    \\<not> cycle_free_up_to m k n})\n  j \\<le> n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1) j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "moreover"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "have \"fw m n ?k j (j -1) ?k j \\<le> fw m n (?k - 1) n n ?k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1) (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "using fw_Suc[of ?k n j j \"j - 1\" m \"?k - 1\"] \\<open>j \\<le> n\\<close> \\<open>?k \\<le> n\\<close> \\<open>?k > 0\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n;\n   j \\<le> n; j \\<le> n; j - 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n\n                     (Suc (Min {k. k \\<le> n \\<and>\n                                   \\<not> cycle_free_up_to m k n} -\n                           1))\n                     j (j - 1)\n                     (Min {k. k \\<le> n \\<and>\n                              \\<not> cycle_free_up_to m k n})\n                     j\n                    \\<le> fw m n\n                           (Min {k. k \\<le> n \\<and>\n                                    \\<not> cycle_free_up_to m k n} -\n                            1)\n                           n n\n                           (Min {k. k \\<le> n \\<and>\n                                    \\<not> cycle_free_up_to m k n})\n                           j\n  j \\<le> n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n  0 < Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n     (j - 1) (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "have \"fw m n ?k j j j j \\<le> fw m n (?k - 1) n n j ?k + fw m n (?k - 1) n n ?k j\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "using * add_mono"], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n})\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j (j - 1)\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n         (j - 1) j\n         (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n         (j - 1) (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by fastforce"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "then"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    \\<le> fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n          fw m n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n           (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with neg"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  < \\<one>\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j", "have \"fw m n ?k j j j j < \\<one>\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  < \\<one>\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n j (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n        fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1)\n         n n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n\ngoal (1 subgoal):\n 1. fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n    < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "moreover"], ["proof (state)\nthis:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "have \"fw m n n n n j j \\<le> fw m n ?k j j j j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n n n n j j\n    \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           j j j", "using fw_invariant \\<open>j\\<le>n\\<close> \\<open>?k \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n;\n   ?j'' \\<le> ?j; ?i'' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j'\n                    \\<le> fw ?m ?n ?k' ?i'' ?j'' ?i' ?j'\n  j \\<le> n\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n n n n j j\n    \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n           j j j", "by auto"], ["proof (state)\nthis:\n  fw m n n n n j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n         j j\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  < \\<one>\n  fw m n n n n j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n         j j", "have \"fw m n n n n j j < \\<one>\""], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  < \\<one>\n  fw m n n n n j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n         j j\n\ngoal (1 subgoal):\n 1. fw m n n n n j j < \\<one>", "using neg"], ["proof (prove)\nusing this:\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j j j\n  < \\<one>\n  fw m n n n n j j\n  \\<le> fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j j\n         j j\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n j\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) +\n  fw m n (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} - 1) n n\n   (Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}) j\n  < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n n n n j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n n n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with \\<open>j\\<le>n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>", "have ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "}"], ["proof (state)\nthis:\n  0 < Min {k. k \\<le> n \\<and>\n              \\<not> cycle_free_up_to m k n} \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "moreover"], ["proof (state)\nthis:\n  0 < Min {k. k \\<le> n \\<and>\n              \\<not> cycle_free_up_to m k n} \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "{"], ["proof (state)\nthis:\n  0 < Min {k. k \\<le> n \\<and>\n              \\<not> cycle_free_up_to m k n} \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "assume \"?k = 0\""], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with cyc(2,4)"], ["proof (chain)\npicking this:\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  distinct (j # xs)\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0", "have \"xs = [] \\<or> xs = [0]\""], ["proof (prove)\nusing this:\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  distinct (j # xs)\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0\n\ngoal (1 subgoal):\n 1. xs = [] \\<or> xs = [0]", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs\n             \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                     \\<not> cycle_free_up_to m k n}};\n     distinct (j # xs);\n     Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n     xs \\<noteq> [0]\\<rbrakk>\n    \\<Longrightarrow> xs = []", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>set xs\n             \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n                                     \\<not> cycle_free_up_to m k n}};\n     distinct (j # xs);\n     Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n     xs \\<noteq> [0]; xs = []\\<rbrakk>\n    \\<Longrightarrow> xs = []\n 2. \\<And>a list.\n       \\<lbrakk>set xs\n                \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n  \\<not> cycle_free_up_to m k n}};\n        distinct (j # xs);\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n        xs \\<noteq> [0]; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>set xs\n                \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n  \\<not> cycle_free_up_to m k n}};\n        distinct (j # xs);\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n        xs \\<noteq> [0]; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply (rename_tac ys)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys.\n       \\<lbrakk>set xs\n                \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n  \\<not> cycle_free_up_to m k n}};\n        distinct (j # xs);\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n        xs \\<noteq> [0]; xs = a # ys\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ys.\n       \\<lbrakk>set xs\n                \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n  \\<not> cycle_free_up_to m k n}};\n        distinct (j # xs);\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n        xs \\<noteq> [0]; xs = a # ys; ys = []\\<rbrakk>\n       \\<Longrightarrow> xs = []\n 2. \\<And>a ys aa list.\n       \\<lbrakk>set xs\n                \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n  \\<not> cycle_free_up_to m k n}};\n        distinct (j # xs);\n        Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} = 0;\n        xs \\<noteq> [0]; xs = a # ys; ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  xs = [] \\<or> xs = [0]\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  xs = [] \\<or> xs = [0]", "have ?thesis"], ["proof (prove)\nusing this:\n  xs = [] \\<or> xs = [0]\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "assume \"xs = []\""], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with cyc"], ["proof (chain)\npicking this:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n  xs = []", "have \"m j j < \\<one>\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n  xs = []\n\ngoal (1 subgoal):\n 1. m j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  m j j < \\<one>\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with fw_mono[of n n n j j m n] \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n j j \\<le> m j j\n  j \\<le> n\n  m j j < \\<one>", "have \"fw m n n n n j j < \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n j j \\<le> m j j\n  j \\<le> n\n  m j j < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n n n n j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n n n n j j < \\<one>\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "assume xs: \"xs = [0]\""], ["proof (state)\nthis:\n  xs = [0]\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with cyc"], ["proof (chain)\npicking this:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n  xs = [0]", "have \"m j 0 + m 0 j < \\<one>\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  set xs\n  \\<subseteq> {0..Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n}}\n  len m j j xs < \\<one>\n  distinct (j # xs)\n  xs = [0]\n\ngoal (1 subgoal):\n 1. m j 0 + m 0 j < \\<one>", "by auto"], ["proof (state)\nthis:\n  m j 0 + m 0 j < \\<one>\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  m j 0 + m 0 j < \\<one>", "have \"fw m n 0 j j j j < \\<one>\""], ["proof (prove)\nusing this:\n  m j 0 + m 0 j < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n 0 j j j j < \\<one>", "proof (cases \"j = 0\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>\n 2. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "case 1"], ["proof (state)\nthis:\n  m j 0 + m 0 j < \\<one>\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>\n 2. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "have \"m j j < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m j j < \\<one>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m j j < \\<one> \\<Longrightarrow> False", "assume \"\\<not> m j j < \\<one>\""], ["proof (state)\nthis:\n  \\<not> m j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> m j j < \\<one> \\<Longrightarrow> False", "with 1"], ["proof (chain)\npicking this:\n  m j 0 + m 0 j < \\<one>\n  j = 0\n  \\<not> m j j < \\<one>", "have \"m 0 0 \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  m j 0 + m 0 j < \\<one>\n  j = 0\n  \\<not> m j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> m 0 0", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<le> m 0 0\n\ngoal (1 subgoal):\n 1. \\<not> m j j < \\<one> \\<Longrightarrow> False", "with add_mono"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> m 0 0", "have \"m 0 0 + m 0 0 \\<ge> \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<one> \\<le> m 0 0\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> m 0 0 + m 0 0", "by fastforce"], ["proof (state)\nthis:\n  \\<one> \\<le> m 0 0 + m 0 0\n\ngoal (1 subgoal):\n 1. \\<not> m j j < \\<one> \\<Longrightarrow> False", "with 1"], ["proof (chain)\npicking this:\n  m j 0 + m 0 j < \\<one>\n  j = 0\n  \\<one> \\<le> m 0 0 + m 0 0", "show False"], ["proof (prove)\nusing this:\n  m j 0 + m 0 j < \\<one>\n  j = 0\n  \\<one> \\<le> m 0 0 + m 0 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m j j < \\<one>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j = 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>\n 2. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "with fw_mono[of j n j j j m 0] \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>j \\<le> n; j \\<le> n; j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 j j j j \\<le> m j j\n  j \\<le> n\n  m j j < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>j \\<le> n; j \\<le> n; j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n 0 j j j j \\<le> m j j\n  j \\<le> n\n  m j j < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n 0 j j j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n 0 j j j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "case 2"], ["proof (state)\nthis:\n  m j 0 + m 0 j < \\<one>\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "with fw.simps(4)[of m n 0 j \"j - 1\"]"], ["proof (chain)\npicking this:\n  fw m n 0 j (Suc (j - 1)) = fw_upd (fw m n 0 j (j - 1)) 0 j (Suc (j - 1))\n  m j 0 + m 0 j < \\<one>\n  j \\<noteq> 0", "have \"fw m n 0 j j = fw_upd (fw m n 0 j (j - 1)) 0 j j\""], ["proof (prove)\nusing this:\n  fw m n 0 j (Suc (j - 1)) = fw_upd (fw m n 0 j (j - 1)) 0 j (Suc (j - 1))\n  m j 0 + m 0 j < \\<one>\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fw m n 0 j j = fw_upd (fw m n 0 j (j - 1)) 0 j j", "by simp"], ["proof (state)\nthis:\n  fw m n 0 j j = fw_upd (fw m n 0 j (j - 1)) 0 j j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "then"], ["proof (chain)\npicking this:\n  fw m n 0 j j = fw_upd (fw m n 0 j (j - 1)) 0 j j", "have \"fw m n 0 j j j j \\<le> fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j\""], ["proof (prove)\nusing this:\n  fw m n 0 j j = fw_upd (fw m n 0 j (j - 1)) 0 j j\n\ngoal (1 subgoal):\n 1. fw m n 0 j j j j \\<le> fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fw m n 0 j j j j \\<le> fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "also"], ["proof (state)\nthis:\n  fw m n 0 j j j j \\<le> fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "have \"\\<dots> \\<le> m j 0 + m 0 j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j \\<le> m j 0 + m 0 j", "using \\<open>j \\<le> n\\<close> add_mono fw_mono"], ["proof (prove)\nusing this:\n  j \\<le> n\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n; ?i' \\<le> ?n; ?j' \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j ?i' ?j' \\<le> ?m ?i' ?j'\n\ngoal (1 subgoal):\n 1. fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j \\<le> m j 0 + m 0 j", "by auto"], ["proof (state)\nthis:\n  fw m n 0 j (j - 1) j 0 + fw m n 0 j (j - 1) 0 j \\<le> m j 0 + m 0 j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m j 0 + m 0 j < \\<one>; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 j j j j < \\<one>", "finally"], ["proof (chain)\npicking this:\n  fw m n 0 j j j j \\<le> m j 0 + m 0 j", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n 0 j j j j \\<le> m j 0 + m 0 j\n\ngoal (1 subgoal):\n 1. fw m n 0 j j j j < \\<one>", "using 2"], ["proof (prove)\nusing this:\n  fw m n 0 j j j j \\<le> m j 0 + m 0 j\n  m j 0 + m 0 j < \\<one>\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. fw m n 0 j j j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n 0 j j j j < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n 0 j j j j < \\<one>\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "then"], ["proof (chain)\npicking this:\n  fw m n 0 j j j j < \\<one>", "have \"fw m n 0 n n j j < \\<one>\""], ["proof (prove)\nusing this:\n  fw m n 0 j j j j < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n 0 n n j j < \\<one>", "by (metis cyc(1) less_or_eq_imp_le single_iteration_inv)"], ["proof (state)\nthis:\n  fw m n 0 n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with fw_invariant[of 0 n n n n n n m j j] \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> n; n \\<le> n; n \\<le> n; n \\<le> n; n \\<le> n;\n   n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n j j \\<le> fw m n 0 n n j j\n  j \\<le> n\n  fw m n 0 n n j j < \\<one>", "have \"fw m n n n n j j < \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> n; n \\<le> n; n \\<le> n; n \\<le> n; n \\<le> n;\n   n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n j j \\<le> fw m n 0 n n j j\n  j \\<le> n\n  fw m n 0 n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. fw m n n n n j j < \\<one>", "by auto"], ["proof (state)\nthis:\n  fw m n n n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "with \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n n n n j j < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "}"], ["proof (state)\nthis:\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} =\n  0 \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  0 < Min {k. k \\<le> n \\<and>\n              \\<not> cycle_free_up_to m k n} \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} =\n  0 \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < Min {k. k \\<le> n \\<and>\n              \\<not> cycle_free_up_to m k n} \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n  Min {k. k \\<le> n \\<and> \\<not> cycle_free_up_to m k n} =\n  0 \\<Longrightarrow>\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n n n i i < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n n n i i < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* End of local class context *)"], ["", "end"], ["", "(* End of theory *)"]]}