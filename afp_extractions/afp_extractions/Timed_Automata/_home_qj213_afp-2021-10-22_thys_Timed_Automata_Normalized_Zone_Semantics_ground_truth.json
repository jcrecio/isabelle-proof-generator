{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/Normalized_Zone_Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma apx_empty_iff'':\n  assumes \"canonical M1 n\" \"[M1]\\<^bsub>v,n\\<^esub> \\<subseteq> V\" \"dbm_int M1 n\"\n  shows \"[M1]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [norm M1 (k o v') n]\\<^bsub>v,n\\<^esub> = {}\"", "lemma step_z_valid_dbm:\n  assumes \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\"\n    and \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"valid_dbm D'\"", "lemma FW_zone_equiv_spec:\n  shows \"[M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\"", "lemma cn_weak: \"\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\"", "lemma valid_dbm_non_empty_diag:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<forall> k \\<le> n. M k k \\<ge> \\<one>\"", "lemma non_empty_cycle_free:\n  assumes \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"cycle_free M n\"", "lemma norm_empty_diag_preservation:\n  assumes \"i \\<le> n\"\n  assumes \"M i i < Le 0\"\n  shows \"norm M (k o v') n i i < Le 0\"", "lemma norm_FW_empty:\n  assumes \"valid_dbm M\"\n  assumes \"[M]\\<^bsub>v,n\\<^esub> = {}\"\n  shows \"[norm (FW M n) (k o v') n]\\<^bsub>v,n\\<^esub> = {}\" (is \"[?M]\\<^bsub>v,n\\<^esub> = {}\")", "lemma apx_norm_eq_spec:\n  assumes \"valid_dbm M\"\n    and \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"beta_interp.Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) = [norm (FW M n) (k o v') n]\\<^bsub>v,n\\<^esub>\"", "lemma step_z_norm_induct[case_names _ step_z_norm step_z_refl]:\n  assumes \"x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub> \\<langle>x7,x8\\<rangle>\"\n    and step_z_norm:\n    \"\\<And>A l D l' D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l',D'\\<rangle> \\<Longrightarrow>\n        P A l D l' (norm (FW D' n) (k o v') n)\"\n  shows \"P x1 x2 x3 x7 x8\"", "lemma FW_valid_preservation:\n  assumes \"valid_dbm M\"\n  shows \"valid_dbm (FW M n)\"", "lemma norm_diag_preservation:\n  assumes \"\\<forall>l\\<le>n. M1 l l \\<le> \\<one>\"\n  shows \"\\<forall>l\\<le>n. (norm M1 (k o v') n) l l \\<le> \\<one>\" (is \"\\<forall> l \\<le> n. ?M l l \\<le> \\<one>\")", "lemma norm_FW_valid_preservation_non_empty:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\" (is \"valid_dbm ?M\")", "lemma norm_FW_valid_preservation_empty:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> = {}\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\" (is \"valid_dbm ?M\")", "lemma norm_FW_valid_preservation:\n  assumes \"valid_dbm M\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\"", "lemma norm_beta_sound:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  shows   \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle>\"", "lemma step_z_norm_valid_dbm:\n  assumes \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"valid_dbm D'\"", "lemma norm_beta_complete:\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  obtains D' where \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"[D']\\<^bsub>v,n\\<^esub> = Z\" \"valid_dbm D'\"", "lemma steps_z_norm_induct[case_names _ refl step]:\n  assumes \"x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub>* \\<langle>x7,x8\\<rangle>\"\n    and \"\\<And>A l Z. P A l Z l Z\"\n    and\n    \"\\<And>A l Z l' Z' l'' Z''.\n        A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub>* \\<langle>l',Z'\\<rangle> \\<Longrightarrow>\n        P A l Z l' Z' \\<Longrightarrow>\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub> \\<langle>l'',Z''\\<rangle> \\<Longrightarrow> P A l Z l'' Z''\"\n  shows \"P x1 x2 x3 x7 x8\"", "lemma norm_beta_sound_multi:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and> valid_dbm D'\"", "lemma norm_beta_complete_multi:\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  obtains D' where \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\" \"[D']\\<^bsub>v,n\\<^esub> = Z\" \"valid_dbm D'\"", "lemma norm_beta_equiv_multi:\n  assumes \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  shows \"(\\<exists> D'. A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> Z = [D']\\<^bsub>v,n\\<^esub>) \\<longleftrightarrow> A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',Z\\<rangle>\"", "lemma steps_z_norm_complete':\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and \"valid_dbm D\"\n  shows \"\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and>  Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>\"", "lemma valid_dbm_V':\n  assumes \"valid_dbm M\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> \\<in> V'\"", "lemma steps_z_norm_sound':\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\"\n    and \"global_clock_numbering A v n\"\n    and \"valid_abstraction A X k\"\n    and \"valid_dbm D\"\n    and \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<exists>Z. A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle> \\<and> Z \\<noteq> {}\"", "lemma steps_z_norm_complete:\n  assumes \"A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>\" \"u \\<in> [D]\\<^bsub>v,n\\<^esub>\"\n    and   \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> u' \\<in> [D']\\<^bsub>v,n\\<^esub>\"", "lemma steps_z_norm_sound:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\"\n    and   \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n    and   \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<exists> u \\<in> [D]\\<^bsub>v,n\\<^esub>. \\<exists> u'. A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>\"", "theorem steps_z_norm_decides_emptiness:\n  assumes \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"(\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> [D']\\<^bsub>v,n\\<^esub> \\<noteq> {})\n     \\<longleftrightarrow> (\\<exists> u \\<in> [D]\\<^bsub>v,n\\<^esub>. \\<exists> u'. A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>)\"", "lemma \"a \\<in> \\<int> \\<Longrightarrow> \\<exists> b. a = real_of_int b\"", "lemma norm_default_preservation:\n  \"dbm_default M \\<Longrightarrow> dbm_default (norm M (k o v') n)\"", "lemma normalized_integral_dbms_finite:\n  \"finite {norm M (k o v') n | M. dbm_int M n \\<and> dbm_default M}\"", "lemma inj: \"inj_on v X\"", "lemma cn_weak: \"\\<forall> c. v c > 0\"", "lemma in_X: assumes \"v x \\<le> n\" shows \"x \\<in> X\"", "lemma standard_abstraction:\n  assumes \"finite (clkp_set A)\" \"finite (collect_clkvt (trans_of A))\" \"\\<forall>(_,m::real) \\<in> clkp_set A. m \\<in> \\<nat>\"\n  obtains k :: \"'c \\<Rightarrow> nat\" where \"valid_abstraction A (clk_set A) k\"", "lemma finite_ta_Regions':\n  fixes A :: \"('a, 'c, real, 's) ta\"\n  assumes \"finite_ta A\"\n  obtains v n x where \"Regions' (clk_set A) v n x\"", "lemma finite_ta_RegionsD:\n  assumes \"finite_ta A\"\n  obtains k :: \"'b \\<Rightarrow> nat\" and v n x where\n    \"Regions' (clk_set A) v n x\" \"valid_abstraction A (clk_set A) k\" \"global_clock_numbering A v n\"", "lemma dbm_positive:\n  assumes \"M 0 (v c) \\<le> \\<one>\" \"v c \\<le> n\" \"DBM_val_bounded v u M n\"\n  shows \"u c \\<ge> 0\"", "lemma valid_dbm_pos:\n  assumes \"valid_dbm M n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> \\<subseteq> {u. \\<forall> c. v c \\<le> n \\<longrightarrow> u c \\<ge> 0}\"", "lemma (in Regions') V_alt_def:\n  shows \"{u. \\<forall> c. v c > 0 \\<and> v c \\<le> n \\<longrightarrow> u c \\<ge> 0} = V\"", "lemma steps_z_norm_sound_spec:\n  assumes \"finite_ta A\"\n  obtains k v n where\n  \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l',D'\\<rangle> \\<and> valid_dbm D n \\<and> [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n  \\<longrightarrow> (\\<exists>Z. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle> \\<and> Z \\<noteq> {})\""], "translations": [["", "lemma apx_empty_iff'':\n  assumes \"canonical M1 n\" \"[M1]\\<^bsub>v,n\\<^esub> \\<subseteq> V\" \"dbm_int M1 n\"\n  shows \"[M1]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [norm M1 (k o v') n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([M1]\\<^bsub>v,n\\<^esub> = {}) =\n    ([DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x))\n       n]\\<^bsub>v,n\\<^esub> =\n     {})", "using beta_interp.apx_norm_eq[OF assms] apx_empty_iff'[of \"[M1]\\<^bsub>v,n\\<^esub>\"] assms"], ["proof (prove)\nusing this:\n  Approx\\<^sub>\\<beta> ([M1]\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  [M1]\\<^bsub>v,n\\<^esub> \\<in> V' \\<Longrightarrow>\n  ([M1]\\<^bsub>v,n\\<^esub> = {}) =\n  (Approx\\<^sub>\\<beta> ([M1]\\<^bsub>v,n\\<^esub>) = {})\n  canonical M1 n\n  [M1]\\<^bsub>v,n\\<^esub> \\<subseteq> V\n  dbm_int M1 n\n\ngoal (1 subgoal):\n 1. ([M1]\\<^bsub>v,n\\<^esub> = {}) =\n    ([DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x))\n       n]\\<^bsub>v,n\\<^esub> =\n     {})", "unfolding V'_def"], ["proof (prove)\nusing this:\n  Approx\\<^sub>\\<beta> ([M1]\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  [M1]\\<^bsub>v,n\\<^esub>\n  \\<in> {Z. Z \\<subseteq> V \\<and>\n            (\\<exists>M.\n                Z = [M]\\<^bsub>v,n\\<^esub> \\<and>\n                dbm_int M n)} \\<Longrightarrow>\n  ([M1]\\<^bsub>v,n\\<^esub> = {}) =\n  (Approx\\<^sub>\\<beta> ([M1]\\<^bsub>v,n\\<^esub>) = {})\n  canonical M1 n\n  [M1]\\<^bsub>v,n\\<^esub> \\<subseteq> V\n  dbm_int M1 n\n\ngoal (1 subgoal):\n 1. ([M1]\\<^bsub>v,n\\<^esub> = {}) =\n    ([DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x))\n       n]\\<^bsub>v,n\\<^esub> =\n     {})", "by blast"], ["", "inductive valid_dbm where\n  \"[M]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow> dbm_int M n \\<Longrightarrow> valid_dbm M\""], ["", "inductive_cases valid_dbm_cases[elim]: \"valid_dbm M\""], ["", "declare valid_dbm.intros[intro]"], ["", "lemma step_z_valid_dbm:\n  assumes \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\"\n    and \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"valid_dbm D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm D'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid_dbm D'", "from alpha_interp.step_z_V step_z_dbm_sound[OF assms(1,2)] step_z_dbm_preserves_int[OF assms(1,2)]\n       assms(3,4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A \\<turnstile> \\<langle>?l, ?Z\\<rangle> \\<leadsto> \\<langle>?l', ?Z'\\<rangle>;\n   ?Z \\<subseteq> V\\<rbrakk>\n  \\<Longrightarrow> ?Z' \\<subseteq> V\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n  \\<lbrakk>valid_abstraction A ?X ?k; dbm_int D n\\<rbrakk>\n  \\<Longrightarrow> dbm_int D' n\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D", "have\n    \"dbm_int D' n\" \"A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<turnstile> \\<langle>?l, ?Z\\<rangle> \\<leadsto> \\<langle>?l', ?Z'\\<rangle>;\n   ?Z \\<subseteq> V\\<rbrakk>\n  \\<Longrightarrow> ?Z' \\<subseteq> V\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n  \\<lbrakk>valid_abstraction A ?X ?k; dbm_int D n\\<rbrakk>\n  \\<Longrightarrow> dbm_int D' n\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. dbm_int D' n &&&\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "by fastforce+"], ["proof (state)\nthis:\n  dbm_int D' n\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. valid_dbm D'", "with alpha_interp.step_z_V[OF this(2)] assms(4)"], ["proof (chain)\npicking this:\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  [D']\\<^bsub>v,n\\<^esub> \\<subseteq> V\n  valid_dbm D\n  dbm_int D' n\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  [D']\\<^bsub>v,n\\<^esub> \\<subseteq> V\n  valid_dbm D\n  dbm_int D' n\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. valid_dbm D'", "by auto"], ["proof (state)\nthis:\n  valid_dbm D'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FW_zone_equiv_spec:\n  shows \"[M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>", "apply (rule FW_zone_equiv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "using clock_numbering(2)"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c\\<in>X. v c = k)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "by auto"], ["", "lemma cn_weak: \"\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "using clock_numbering(2)"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c\\<in>X. v c = k)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "by blast"], ["", "lemma valid_dbm_non_empty_diag:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<forall> k \\<le> n. M k k \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. \\<one> \\<le> M k k", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> n \\<Longrightarrow> \\<one> \\<le> M k k", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> n \\<Longrightarrow> \\<one> \\<le> M k k", "assume k: \"k \\<le> n\""], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> n \\<Longrightarrow> \\<one> \\<le> M k k", "have \"\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "using clock_numbering(2)"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c\\<in>X. v c = k)\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)", "by blast"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<And>k. k \\<le> n \\<Longrightarrow> \\<one> \\<le> M k k", "from k not_empty_cyc_free[OF this assms(2)]"], ["proof (chain)\npicking this:\n  k \\<le> n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs", "show \"\\<one> \\<le> M k k\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> M k k", "by (simp add: cyc_free_diag_dest')"], ["proof (state)\nthis:\n  \\<one> \\<le> M k k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma non_empty_cycle_free:\n  assumes \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"cycle_free M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free M n", "by (meson assms clock_numbering(2) neg_cycle_empty negative_cycle_dest_diag)"], ["", "lemma norm_empty_diag_preservation:\n  assumes \"i \\<le> n\"\n  assumes \"M i i < Le 0\"\n  shows \"norm M (k o v') n i i < Le 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i i\n    < Le 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i i\n    < Le 0", "have \"\\<not> Le (k (v' i)) \\<prec> Le 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Le (real (k (v' i))) \\<prec> Le 0", "by auto"], ["proof (state)\nthis:\n  \\<not> Le (real (k (v' i))) \\<prec> Le 0\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i i\n    < Le 0", "with assms"], ["proof (chain)\npicking this:\n  i \\<le> n\n  M i i < Le 0\n  \\<not> Le (real (k (v' i))) \\<prec> Le 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  M i i < Le 0\n  \\<not> Le (real (k (v' i))) \\<prec> Le 0\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i i\n    < Le 0", "unfolding norm_def"], ["proof (prove)\nusing this:\n  i \\<le> n\n  M i i < Le 0\n  \\<not> Le (real (k (v' i))) \\<prec> Le 0\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < i then real ((k \\<circ> v') i) else 0;\n         lb = if 0 < i then - real ((k \\<circ> v') i) else 0\n     in if i \\<le> n \\<and> i \\<le> n\n        then norm_lower (norm_upper (M i i) ub) lb else M i i)\n    < Le 0", "by (auto simp: Let_def less)"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i i\n  < Le 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_FW_empty:\n  assumes \"valid_dbm M\"\n  assumes \"[M]\\<^bsub>v,n\\<^esub> = {}\"\n  shows \"[norm (FW M n) (k o v') n]\\<^bsub>v,n\\<^esub> = {}\" (is \"[?M]\\<^bsub>v,n\\<^esub> = {}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "from assms(2) cyc_free_not_empty clock_numbering(1) cycle_free_diag_equiv"], ["proof (chain)\npicking this:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n              \\<one> \\<le> len ?M i i xs;\n   \\<forall>c. ?v c \\<le> ?n \\<longrightarrow> 0 < ?v c\\<rbrakk>\n  \\<Longrightarrow> [?M]\\<^bsub>?v,?n\\<^esub> \\<noteq> {}\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n", "have \"\\<not> cycle_free M n\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n              \\<one> \\<le> len ?M i i xs;\n   \\<forall>c. ?v c \\<le> ?n \\<longrightarrow> 0 < ?v c\\<rbrakk>\n  \\<Longrightarrow> [?M]\\<^bsub>?v,?n\\<^esub> \\<noteq> {}\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n\n\ngoal (1 subgoal):\n 1. \\<not> cycle_free M n", "by metis"], ["proof (state)\nthis:\n  \\<not> cycle_free M n\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "from FW_neg_cycle_detect[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>i\\<le>n. FW M n i i < \\<one>", "obtain i where i: \"i \\<le> n\" \"FW M n i i < \\<one>\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<le>n. FW M n i i < \\<one>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<le> n; FW M n i i < \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  FW M n i i < \\<one>\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "with norm_empty_diag_preservation[folded neutral]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i \\<le> n; ?M ?i ?i < \\<one>\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?i\n                    < \\<one>\n  i \\<le> n\n  FW M n i i < \\<one>", "have \"?M i i < \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> n; ?M ?i ?i < \\<one>\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?i\n                    < \\<one>\n  i \\<le> n\n  FW M n i i < \\<one>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n     i i\n    < \\<one>", "."], ["proof (state)\nthis:\n  DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   i\n  < \\<one>\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "with \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   i\n  < \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   i\n  < \\<one>\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "using beta_interp.neg_diag_empty_spec"], ["proof (prove)\nusing this:\n  i \\<le> n\n  DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   i\n  < \\<one>\n  \\<lbrakk>?i \\<le> n; ?M ?i ?i < \\<one>\\<rbrakk>\n  \\<Longrightarrow> [?M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub> =\n    {}", "by auto"], ["proof (state)\nthis:\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma apx_norm_eq_spec:\n  assumes \"valid_dbm M\"\n    and \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"beta_interp.Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) = [norm (FW M n) (k o v') n]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n    [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n    [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>", "note cyc_free = non_empty_cycle_free[OF assms(2)]"], ["proof (state)\nthis:\n  cycle_free M n\n\ngoal (1 subgoal):\n 1. Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n    [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>", "from assms(1) FW_zone_equiv_spec[of M]"], ["proof (chain)\npicking this:\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>", "have \"[M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\nusing this:\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>", "by (auto simp: neutral)"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n    [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>", "with beta_interp.apx_norm_eq[OF fw_canonical[OF cyc_free] _ FW_int_preservation]\n      valid_dbm_non_empty_diag[OF assms(1,2)] assms(1)"], ["proof (chain)\npicking this:\n  \\<lbrakk>[FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V; dbm_int M n\\<rbrakk>\n  \\<Longrightarrow> Approx\\<^sub>\\<beta> ([FW M n]\\<^bsub>v,n\\<^esub>) =\n                    [DBM_Normalization.norm (FW M n)\n                      (\\<lambda>x. real ((k \\<circ> v') x))\n                      n]\\<^bsub>v,n\\<^esub>\n  \\<forall>k\\<le>n. \\<one> \\<le> M k k\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>", "show \"Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) = [norm (FW M n) (k o v') n]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>[FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V; dbm_int M n\\<rbrakk>\n  \\<Longrightarrow> Approx\\<^sub>\\<beta> ([FW M n]\\<^bsub>v,n\\<^esub>) =\n                    [DBM_Normalization.norm (FW M n)\n                      (\\<lambda>x. real ((k \\<circ> v') x))\n                      n]\\<^bsub>v,n\\<^esub>\n  \\<forall>k\\<le>n. \\<one> \\<le> M k k\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n    [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  Approx\\<^sub>\\<beta> ([M]\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "print_statement step_z_norm.inducts"], ["", "(* Crudely copied from step_z_norm.inducts *)"], ["", "lemma step_z_norm_induct[case_names _ step_z_norm step_z_refl]:\n  assumes \"x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub> \\<langle>x7,x8\\<rangle>\"\n    and step_z_norm:\n    \"\\<And>A l D l' D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l',D'\\<rangle> \\<Longrightarrow>\n        P A l D l' (norm (FW D' n) (k o v') n)\"\n  shows \"P x1 x2 x3 x7 x8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x1 x2 x3 x7 x8", "using assms"], ["proof (prove)\nusing this:\n  x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>x7, x8\\<rangle>\n  ?A6 \\<turnstile> \\<langle>?l6, ?D6\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>?l'6, ?D'6\\<rangle> \\<Longrightarrow>\n  P ?A6 ?l6 ?D6 ?l'6\n   (DBM_Normalization.norm (FW ?D'6 n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n\ngoal (1 subgoal):\n 1. P x1 x2 x3 x7 x8", "by (induction rule: step_z_norm.inducts) auto"], ["", "lemma FW_valid_preservation:\n  assumes \"valid_dbm M\"\n  shows \"valid_dbm (FW M n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm (FW M n)", "proof standard"], ["proof (state)\ngoal (2 subgoals):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V\n 2. dbm_int (FW M n) n", "from FW_int_preservation assms"], ["proof (chain)\npicking this:\n  dbm_int ?M ?n \\<Longrightarrow> dbm_int (FW ?M ?n) ?n\n  valid_dbm M", "show \"dbm_int (FW M n) n\""], ["proof (prove)\nusing this:\n  dbm_int ?M ?n \\<Longrightarrow> dbm_int (FW ?M ?n) ?n\n  valid_dbm M\n\ngoal (1 subgoal):\n 1. dbm_int (FW M n) n", "by blast"], ["proof (state)\nthis:\n  dbm_int (FW M n) n\n\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V", "from FW_zone_equiv_spec[of M, folded neutral] assms"], ["proof (chain)\npicking this:\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\n  valid_dbm M", "show \"[FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> = [FW M n]\\<^bsub>v,n\\<^esub>\n  valid_dbm M\n\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V", "by fastforce"], ["proof (state)\nthis:\n  [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Obsolete\\<close>"], ["", "lemma norm_diag_preservation:\n  assumes \"\\<forall>l\\<le>n. M1 l l \\<le> \\<one>\"\n  shows \"\\<forall>l\\<le>n. (norm M1 (k o v') n) l l \\<le> \\<one>\" (is \"\\<forall> l \\<le> n. ?M l l \\<le> \\<one>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<le>n.\n       DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n l l\n       \\<le> \\<one>", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<le> n \\<Longrightarrow>\n       DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n l l\n       \\<le> \\<one>", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<le> n \\<Longrightarrow>\n       DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n l l\n       \\<le> \\<one>", "assume j: \"j \\<le> n\""], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<le> n \\<Longrightarrow>\n       DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n l l\n       \\<le> \\<one>", "show \"?M j j \\<le> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "with j assms"], ["proof (chain)\npicking this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n  j = 0\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "unfolding norm_def neutral less_eq dbm_le_def"], ["proof (prove)\nusing this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<prec> Le 0 \\<or> M1 l l = Le 0\n  j = 0\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < j then real ((k \\<circ> v') j) else 0;\n         lb = if 0 < j then - real ((k \\<circ> v') j) else 0\n     in if j \\<le> n \\<and> j \\<le> n\n        then norm_lower (norm_upper (M1 j j) ub) lb\n        else M1 j j) \\<prec> Le 0 \\<or>\n    (let ub = if 0 < j then real ((k \\<circ> v') j) else 0;\n         lb = if 0 < j then - real ((k \\<circ> v') j) else 0\n     in if j \\<le> n \\<and> j \\<le> n\n        then norm_lower (norm_upper (M1 j j) ub) lb else M1 j j) =\n    Le 0", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n  \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "have *: \"real ((k \\<circ> v') j) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real ((k \\<circ> v') j)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> real ((k \\<circ> v') j)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "from j assms"], ["proof (chain)\npicking this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>", "have **: \"M1 j j \\<le> Le 0\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. M1 j j \\<le> Le 0", "unfolding neutral"], ["proof (prove)\nusing this:\n  j \\<le> n\n  \\<forall>l\\<le>n. M1 l l \\<le> Le 0\n\ngoal (1 subgoal):\n 1. M1 j j \\<le> Le 0", "by auto"], ["proof (state)\nthis:\n  M1 j j \\<le> Le 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "have \"norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j", "using * **"], ["proof (prove)\nusing this:\n  0 \\<le> real ((k \\<circ> v') j)\n  M1 j j \\<le> Le 0\n\ngoal (1 subgoal):\n 1. norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j", "apply (cases \"M1 j j\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>0 \\<le> real ((k \\<circ> v') j); M1 j j \\<le> Le 0;\n        M1 j j = Le x1\\<rbrakk>\n       \\<Longrightarrow> norm_upper (M1 j j) (real ((k \\<circ> v') j)) =\n                         M1 j j\n 2. \\<And>x2.\n       \\<lbrakk>0 \\<le> real ((k \\<circ> v') j); M1 j j \\<le> Le 0;\n        M1 j j = Lt x2\\<rbrakk>\n       \\<Longrightarrow> norm_upper (M1 j j) (real ((k \\<circ> v') j)) =\n                         M1 j j\n 3. \\<lbrakk>0 \\<le> real ((k \\<circ> v') j); M1 j j \\<le> Le 0;\n     M1 j j = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>Le x1 \\<le> Le 0; M1 j j = Le x1;\n        Le (real (k (v' j))) \\<prec> Le x1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x2.\n       \\<lbrakk>Lt x2 \\<le> Le 0; M1 j j = Lt x2;\n        Le (real (k (v' j))) \\<prec> Lt x2\\<rbrakk>\n       \\<Longrightarrow> False", "by fastforce+"], ["proof (state)\nthis:\n  norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "with assms(1) j False"], ["proof (chain)\npicking this:\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n  j \\<le> n\n  j \\<noteq> 0\n  norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j", "have\n      \"?M j j = norm_lower (M1 j j) (- real ((k \\<circ> v') j))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n  j \\<le> n\n  j \\<noteq> 0\n  norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j =\n    norm_lower (M1 j j) (- real ((k \\<circ> v') j))", "unfolding norm_def"], ["proof (prove)\nusing this:\n  \\<forall>l\\<le>n. M1 l l \\<le> \\<one>\n  j \\<le> n\n  j \\<noteq> 0\n  norm_upper (M1 j j) (real ((k \\<circ> v') j)) = M1 j j\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < j then real ((k \\<circ> v') j) else 0;\n         lb = if 0 < j then - real ((k \\<circ> v') j) else 0\n     in if j \\<le> n \\<and> j \\<le> n\n        then norm_lower (norm_upper (M1 j j) ub) lb else M1 j j) =\n    norm_lower (M1 j j) (- real ((k \\<circ> v') j))", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j =\n  norm_lower (M1 j j) (- real ((k \\<circ> v') j))\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "with **"], ["proof (chain)\npicking this:\n  M1 j j \\<le> Le 0\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j =\n  norm_lower (M1 j j) (- real ((k \\<circ> v') j))", "show ?thesis"], ["proof (prove)\nusing this:\n  M1 j j \\<le> Le 0\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j =\n  norm_lower (M1 j j) (- real ((k \\<circ> v') j))\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> \\<one>", "unfolding neutral"], ["proof (prove)\nusing this:\n  M1 j j \\<le> Le 0\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j =\n  norm_lower (M1 j j) (- real ((k \\<circ> v') j))\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n    \\<le> Le 0", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n  \\<le> \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  DBM_Normalization.norm M1 (\\<lambda>x. real ((k \\<circ> v') x)) n j j\n  \\<le> \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_FW_valid_preservation_non_empty:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\" (is \"valid_dbm ?M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "from FW_valid_preservation[OF assms(1)]"], ["proof (chain)\npicking this:\n  valid_dbm (FW M n)", "have valid: \"valid_dbm (FW M n)\""], ["proof (prove)\nusing this:\n  valid_dbm (FW M n)\n\ngoal (1 subgoal):\n 1. valid_dbm (FW M n)", "."], ["proof (state)\nthis:\n  valid_dbm (FW M n)\n\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "proof standard"], ["proof (state)\ngoal (2 subgoals):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V\n 2. dbm_int\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)\n     n", "from valid beta_interp.norm_int_preservation"], ["proof (chain)\npicking this:\n  valid_dbm (FW M n)\n  \\<lbrakk>dbm_int ?M n; ?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm ?M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm ?M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>", "show \"dbm_int ?M n\""], ["proof (prove)\nusing this:\n  valid_dbm (FW M n)\n  \\<lbrakk>dbm_int ?M n; ?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm ?M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm ?M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)\n     n", "by blast"], ["proof (state)\nthis:\n  dbm_int\n   (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "from fw_canonical[OF non_empty_cycle_free] assms"], ["proof (chain)\npicking this:\n  [?m]\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<Longrightarrow>\n  canonical (FW ?m n) n\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}", "have \"canonical (FW M n) n\""], ["proof (prove)\nusing this:\n  [?m]\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<Longrightarrow>\n  canonical (FW ?m n) n\n  valid_dbm M\n  [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. canonical (FW M n) n", "by auto"], ["proof (state)\nthis:\n  canonical (FW M n) n\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "from beta_interp.norm_V_preservation[OF _ this ] valid"], ["proof (chain)\npicking this:\n  [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  \\<subseteq> V\n  valid_dbm (FW M n)", "show \"[?M]\\<^bsub>v,n\\<^esub> \\<subseteq> V\""], ["proof (prove)\nusing this:\n  [FW M n]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  \\<subseteq> V\n  valid_dbm (FW M n)\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "by fast"], ["proof (state)\nthis:\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  \\<subseteq> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  valid_dbm\n   (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_FW_valid_preservation_empty:\n  assumes \"valid_dbm M\" \"[M]\\<^bsub>v,n\\<^esub> = {}\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\" (is \"valid_dbm ?M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "from FW_valid_preservation[OF assms(1)]"], ["proof (chain)\npicking this:\n  valid_dbm (FW M n)", "have valid: \"valid_dbm (FW M n)\""], ["proof (prove)\nusing this:\n  valid_dbm (FW M n)\n\ngoal (1 subgoal):\n 1. valid_dbm (FW M n)", "."], ["proof (state)\nthis:\n  valid_dbm (FW M n)\n\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "proof standard"], ["proof (state)\ngoal (2 subgoals):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V\n 2. dbm_int\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)\n     n", "from valid beta_interp.norm_int_preservation"], ["proof (chain)\npicking this:\n  valid_dbm (FW M n)\n  \\<lbrakk>dbm_int ?M n; ?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm ?M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm ?M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>", "show \"dbm_int ?M n\""], ["proof (prove)\nusing this:\n  valid_dbm (FW M n)\n  \\<lbrakk>dbm_int ?M n; ?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm ?M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm ?M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)\n     n", "by blast"], ["proof (state)\nthis:\n  dbm_int\n   (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "from norm_FW_empty[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}", "show \"[?M]\\<^bsub>v,n\\<^esub> \\<subseteq> V\""], ["proof (prove)\nusing this:\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n\ngoal (1 subgoal):\n 1. [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> V", "by fast"], ["proof (state)\nthis:\n  [DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  \\<subseteq> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  valid_dbm\n   (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x)) n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_FW_valid_preservation:\n  assumes \"valid_dbm M\"\n  shows \"valid_dbm (norm (FW M n) (k o v') n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "using assms norm_FW_valid_preservation_empty norm_FW_valid_preservation_non_empty"], ["proof (prove)\nusing this:\n  valid_dbm M\n  \\<lbrakk>valid_dbm ?M; [?M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n  \\<Longrightarrow> valid_dbm\n                     (DBM_Normalization.norm (FW ?M n)\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n)\n  \\<lbrakk>valid_dbm ?M; [?M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> valid_dbm\n                     (DBM_Normalization.norm (FW ?M n)\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n)\n\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW M n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "by metis"], ["", "lemma norm_beta_sound:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  shows   \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "using assms(2-)"], ["proof (prove)\nusing this:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "proof (induction A l D l' D' rule: step_z_norm_induct, intro assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n          (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n          n]\\<^bsub>v,n\\<^esub>\\<rangle>", "case (step_z_norm A l D l' D')"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n          (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n          n]\\<^bsub>v,n\\<^esub>\\<rangle>", "from step_z_dbm_sound[OF step_z_norm(1,2)]"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "have \"A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle>\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "by blast"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n          (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n          n]\\<^bsub>v,n\\<^esub>\\<rangle>", "then"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "have *: \"A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l',Approx\\<^sub>\\<beta> ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                          ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>", "by force"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                        ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n          (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n          n]\\<^bsub>v,n\\<^esub>\\<rangle>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "proof (cases \"[D']\\<^bsub>v,n\\<^esub> = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>\n 2. [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "case False"], ["proof (state)\nthis:\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>\n 2. [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "from apx_norm_eq_spec[OF step_z_valid_dbm[OF step_z_norm] False] *"], ["proof (chain)\npicking this:\n  Approx\\<^sub>\\<beta> ([D']\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                        ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  Approx\\<^sub>\\<beta> ([D']\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                        ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                         (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                         n]\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "case True"], ["proof (state)\nthis:\n  [D']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "with norm_FW_empty[OF step_z_valid_dbm[OF step_z_norm] this] beta_interp.apx_empty *"], ["proof (chain)\npicking this:\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n  Approx\\<^sub>\\<beta> {} = {}\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                        ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>\n  [D']\\<^bsub>v,n\\<^esub> = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n  Approx\\<^sub>\\<beta> {} = {}\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Approx\\<^sub>\\<beta>\n                        ([D']\\<^bsub>v,n\\<^esub>)\\<rangle>\n  [D']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                           (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                           n]\\<^bsub>v,n\\<^esub>\\<rangle>", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                         (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                         n]\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', [DBM_Normalization.norm\n                         (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n                         n]\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_z_norm_valid_dbm:\n  assumes \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"valid_dbm D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid_dbm D'", "using assms(2-)"], ["proof (prove)\nusing this:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. valid_dbm D'", "proof (induction A l D l' D' rule: step_z_norm_induct, intro assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> valid_dbm\n                          (DBM_Normalization.norm (FW D' n)\n                            (\\<lambda>x. real ((k \\<circ> v') x)) n)", "case (step_z_norm A l D l' D')"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. \\<And>A l D l' D'.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> valid_dbm\n                          (DBM_Normalization.norm (FW D' n)\n                            (\\<lambda>x. real ((k \\<circ> v') x)) n)", "with norm_FW_valid_preservation[OF step_z_valid_dbm[OF step_z_norm]]"], ["proof (chain)\npicking this:\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D", "show ?case"], ["proof (prove)\nusing this:\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. valid_dbm\n     (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n       n)", "by fast"], ["proof (state)\nthis:\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_beta_complete:\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  obtains D' where \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l',D'\\<rangle>\" \"[D']\\<^bsub>v,n\\<^esub> = Z\" \"valid_dbm D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Z\\<rangle>", "obtain Z' where Z': \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l',Z'\\<rangle>\" \"Z = Approx\\<^sub>\\<beta> Z'\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l', Z\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Z'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', Z'\\<rangle>;\n         Z = Approx\\<^sub>\\<beta> Z'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto> \\<langle>l', Z'\\<rangle>\n  Z = Approx\\<^sub>\\<beta> Z'\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(4)"], ["proof (chain)\npicking this:\n  valid_dbm D", "have \"dbm_int D n\""], ["proof (prove)\nusing this:\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. dbm_int D n", "by auto"], ["proof (state)\nthis:\n  dbm_int D n\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with step_z_dbm_DBM[OF Z'(1) assms(2)] step_z_dbm_preserves_int[OF _ assms(2,3)]"], ["proof (chain)\npicking this:\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n       Z' = [D']\\<^bsub>v,n\\<^esub>\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>A \\<turnstile> \\<langle>?l, ?D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>?l', ?D'\\<rangle>;\n   dbm_int ?D n\\<rbrakk>\n  \\<Longrightarrow> dbm_int ?D' n\n  dbm_int D n", "obtain D' where\n    D': \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l',D'\\<rangle>\" \"Z' = [D']\\<^bsub>v,n\\<^esub>\" \"dbm_int D' n\""], ["proof (prove)\nusing this:\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n       Z' = [D']\\<^bsub>v,n\\<^esub>\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>A \\<turnstile> \\<langle>?l, ?D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>?l', ?D'\\<rangle>;\n   dbm_int ?D n\\<rbrakk>\n  \\<Longrightarrow> dbm_int ?D' n\n  dbm_int D n\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n         Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note valid_D' = step_z_valid_dbm[OF D'(1) assms(2,3)]"], ["proof (state)\nthis:\n  valid_dbm D \\<Longrightarrow> valid_dbm D'\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain D'' where D'': \"D'' = norm (FW D' n) (k \\<circ> v') n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D''.\n        D'' =\n        DBM_Normalization.norm (FW D' n)\n         (\\<lambda>x. real ((k \\<circ> v') x)) n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"Z' = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Z' = {} \\<Longrightarrow> thesis\n 2. Z' \\<noteq> {} \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  Z' \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Z' = {} \\<Longrightarrow> thesis\n 2. Z' \\<noteq> {} \\<Longrightarrow> thesis", "with D'"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  Z' \\<noteq> {}", "have *: \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  Z' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. Z' = {} \\<Longrightarrow> thesis\n 2. Z' \\<noteq> {} \\<Longrightarrow> thesis", "from apx_norm_eq_spec[OF valid_D' this] D'' D'(2) Z'(2) assms(4)"], ["proof (chain)\npicking this:\n  valid_dbm D \\<Longrightarrow>\n  Approx\\<^sub>\\<beta> ([D']\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  Z = Approx\\<^sub>\\<beta> Z'\n  valid_dbm D", "have \"Z = [D'']\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\nusing this:\n  valid_dbm D \\<Longrightarrow>\n  Approx\\<^sub>\\<beta> ([D']\\<^bsub>v,n\\<^esub>) =\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub>\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  Z = Approx\\<^sub>\\<beta> Z'\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. Z = [D'']\\<^bsub>v,n\\<^esub>", "by auto"], ["proof (state)\nthis:\n  Z = [D'']\\<^bsub>v,n\\<^esub>\n\ngoal (2 subgoals):\n 1. Z' = {} \\<Longrightarrow> thesis\n 2. Z' \\<noteq> {} \\<Longrightarrow> thesis", "with norm_FW_valid_preservation[OF valid_D'] D' D'' * that[of D''] assms(4)"], ["proof (chain)\npicking this:\n  valid_dbm D \\<Longrightarrow>\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n  \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D''\\<rangle>;\n   [D'']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  valid_dbm D\n  Z = [D'']\\<^bsub>v,n\\<^esub>", "show thesis"], ["proof (prove)\nusing this:\n  valid_dbm D \\<Longrightarrow>\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n  \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D''\\<rangle>;\n   [D'']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  valid_dbm D\n  Z = [D'']\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. Z' = {} \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Z' = {} \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  Z' = {}\n\ngoal (1 subgoal):\n 1. Z' = {} \\<Longrightarrow> thesis", "with norm_FW_empty[OF valid_D'[OF assms(4)]] D'' D' Z'(2)\n         norm_FW_valid_preservation[OF valid_D'[OF assms(4)]] beta_interp.apx_empty"], ["proof (chain)\npicking this:\n  [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  Z = Approx\\<^sub>\\<beta> Z'\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  Approx\\<^sub>\\<beta> {} = {}\n  Z' = {}", "show thesis"], ["proof (prove)\nusing this:\n  [D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n  [DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n    n]\\<^bsub>v,n\\<^esub> =\n  {}\n  D'' =\n  DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x)) n\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>\n  Z' = [D']\\<^bsub>v,n\\<^esub>\n  dbm_int D' n\n  Z = Approx\\<^sub>\\<beta> Z'\n  valid_dbm\n   (DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n     n)\n  Approx\\<^sub>\\<beta> {} = {}\n  Z' = {}\n\ngoal (1 subgoal):\n 1. thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (rule that[of D''])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l', D''\\<rangle>\n 2. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> [D'']\\<^bsub>v,n\\<^esub> = Z\n 3. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> valid_dbm D''", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> [D'']\\<^bsub>v,n\\<^esub> = Z\n 2. \\<lbrakk>[D']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n             [DBM_Normalization.norm (FW D' n)\n               (\\<lambda>x. real ((k \\<circ> v') x)) n]\\<^bsub>v,n\\<^esub> =\n             {};\n     D'' =\n     DBM_Normalization.norm (FW D' n) (\\<lambda>x. real ((k \\<circ> v') x))\n      n;\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>v,n\\<^esub> \\<langle>l', D'\\<rangle>;\n     Z' = [D']\\<^bsub>v,n\\<^esub>; dbm_int D' n;\n     Z = Approx\\<^sub>\\<beta> Z';\n     valid_dbm\n      (DBM_Normalization.norm (FW D' n)\n        (\\<lambda>x. real ((k \\<circ> v') x)) n);\n     Approx\\<^sub>\\<beta> {} = {}; Z' = {}\\<rbrakk>\n    \\<Longrightarrow> valid_dbm D''", "by fastforce+"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Multi step\\<close>"], ["", "declare steps_z_norm.intros[intro]"], ["", "lemma steps_z_norm_induct[case_names _ refl step]:\n  assumes \"x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub>* \\<langle>x7,x8\\<rangle>\"\n    and \"\\<And>A l Z. P A l Z l Z\"\n    and\n    \"\\<And>A l Z l' Z' l'' Z''.\n        A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub>* \\<langle>l',Z'\\<rangle> \\<Longrightarrow>\n        P A l Z l' Z' \\<Longrightarrow>\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub> \\<langle>l'',Z''\\<rangle> \\<Longrightarrow> P A l Z l'' Z''\"\n  shows \"P x1 x2 x3 x7 x8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x1 x2 x3 x7 x8", "using assms"], ["proof (prove)\nusing this:\n  x1 \\<turnstile> \\<langle>x2, x3\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>x7, x8\\<rangle>\n  P ?A6 ?l6 ?Z6 ?l6 ?Z6\n  \\<lbrakk>?A6 \\<turnstile> \\<langle>?l6, ?Z6\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l'6, ?Z'6\\<rangle>;\n   P ?A6 ?l6 ?Z6 ?l'6 ?Z'6;\n   ?A6 \\<turnstile> \\<langle>?l'6, ?Z'6\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>?l''6, ?Z''6\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> P ?A6 ?l6 ?Z6 ?l''6 ?Z''6\n\ngoal (1 subgoal):\n 1. P x1 x2 x3 x7 x8", "by (induction rule: steps_z_norm.induct) auto"], ["", "lemma norm_beta_sound_multi:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and> valid_dbm D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n    valid_dbm D'", "using assms(2-)"], ["proof (prove)\nusing this:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n    valid_dbm D'", "proof (induction A l D l' D' rule: steps_z_norm_induct, intro assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A l Z.\n       \\<lbrakk>(\\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y)) \\<and>\n                (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                (\\<forall>k\\<le>n.\n                    0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z\n 2. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "case refl"], ["proof (state)\nthis:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A_. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A_ X (\\<lambda>x. real (k x))\n  valid_dbm Z_\n\ngoal (2 subgoals):\n 1. \\<And>A l Z.\n       \\<lbrakk>(\\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y)) \\<and>\n                (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                (\\<forall>k\\<le>n.\n                    0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z\n 2. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "then"], ["proof (chain)\npicking this:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A_. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A_ X (\\<lambda>x. real (k x))\n  valid_dbm Z_", "show ?case"], ["proof (prove)\nusing this:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A_. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A_ X (\\<lambda>x. real (k x))\n  valid_dbm Z_\n\ngoal (1 subgoal):\n 1. A_ \\<turnstile> \\<langle>l_, [Z_]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l_, [Z_]\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n    valid_dbm Z_", "by fast"], ["proof (state)\nthis:\n  A_ \\<turnstile> \\<langle>l_, [Z_]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l_, [Z_]\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n  valid_dbm Z_\n\ngoal (1 subgoal):\n 1. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "case (step A l Z l' Z' l'' Z'')"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>\n  \\<lbrakk>(\\<forall>c.\n               0 < v c \\<and>\n               (\\<forall>x y.\n                   v x \\<le> n \\<and>\n                   v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                   x = y)) \\<and>\n           (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n           (\\<forall>k\\<le>n.\n               0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n   valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n  \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                    valid_dbm Z'\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm Z\n\ngoal (1 subgoal):\n 1. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "then"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>\n  \\<lbrakk>(\\<forall>c.\n               0 < v c \\<and>\n               (\\<forall>x y.\n                   v x \\<le> n \\<and>\n                   v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                   x = y)) \\<and>\n           (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n           (\\<forall>k\\<le>n.\n               0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n   valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n  \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                    valid_dbm Z'\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm Z", "have \"A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',[Z']\\<^bsub>v,n\\<^esub>\\<rangle>\" \"valid_dbm Z'\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>\n  \\<lbrakk>(\\<forall>c.\n               0 < v c \\<and>\n               (\\<forall>x y.\n                   v x \\<le> n \\<and>\n                   v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                   x = y)) \\<and>\n           (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n           (\\<forall>k\\<le>n.\n               0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n   valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n  \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                    valid_dbm Z'\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm Z\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> &&&\n    valid_dbm Z'", "by fast+"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle>\n  valid_dbm Z'\n\ngoal (1 subgoal):\n 1. \\<And>A l Z l' Z' l'' Z''.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, Z\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', Z'\\<rangle>;\n        \\<lbrakk>(\\<forall>c.\n                     0 < v c \\<and>\n                     (\\<forall>x y.\n                         v x \\<le> n \\<and>\n                         v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                         x = y)) \\<and>\n                 (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n                 (\\<forall>k\\<le>n.\n                     0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n         valid_abstraction A X (\\<lambda>x. real (k x));\n         valid_dbm Z\\<rbrakk>\n        \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                          valid_dbm Z';\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', Z''\\<rangle>;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm Z\\<rbrakk>\n       \\<Longrightarrow> A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n                         valid_dbm Z''", "with norm_beta_sound[OF step(2,4,5)] step_z_norm_valid_dbm[OF step(2,4,5)]"], ["proof (chain)\npicking this:\n  valid_dbm Z' \\<Longrightarrow>\n  A \\<turnstile> \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle>\n  valid_dbm Z' \\<Longrightarrow> valid_dbm Z''\n  A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle>\n  valid_dbm Z'", "show ?case"], ["proof (prove)\nusing this:\n  valid_dbm Z' \\<Longrightarrow>\n  A \\<turnstile> \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle>\n  valid_dbm Z' \\<Longrightarrow> valid_dbm Z''\n  A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [Z']\\<^bsub>v,n\\<^esub>\\<rangle>\n  valid_dbm Z'\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n    valid_dbm Z''", "by force"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [Z]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l'', [Z'']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n  valid_dbm Z''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_beta_complete_multi:\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  obtains D' where \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\" \"[D']\\<^bsub>v,n\\<^esub> = Z\" \"valid_dbm D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z\\<rangle>\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induction A l \"[D]\\<^bsub>v,n\\<^esub>\" l' Z arbitrary: thesis rule: steps_z_beta.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A l thesis.\n       \\<lbrakk>\\<And>D'.\n                   \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l, D'\\<rangle>;\n                    [D']\\<^bsub>v,n\\<^esub> = [D]\\<^bsub>v,n\\<^esub>;\n                    valid_dbm D'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "case refl"], ["proof (state)\nthis:\n  \\<lbrakk>A_ \\<turnstile> \\<langle>l_, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l_, ?D'6\\<rangle>;\n   [?D'6]\\<^bsub>v,n\\<^esub> = [D]\\<^bsub>v,n\\<^esub>;\n   valid_dbm ?D'6\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A_. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A_ X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (2 subgoals):\n 1. \\<And>A l thesis.\n       \\<lbrakk>\\<And>D'.\n                   \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l, D'\\<rangle>;\n                    [D']\\<^bsub>v,n\\<^esub> = [D]\\<^bsub>v,n\\<^esub>;\n                    valid_dbm D'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "from this(1)[OF steps_z_norm.refl] this(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>[D]\\<^bsub>v,n\\<^esub> = [D]\\<^bsub>v,n\\<^esub>;\n   valid_dbm D\\<rbrakk>\n  \\<Longrightarrow> thesis\n  valid_dbm D", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>[D]\\<^bsub>v,n\\<^esub> = [D]\\<^bsub>v,n\\<^esub>;\n   valid_dbm D\\<rbrakk>\n  \\<Longrightarrow> thesis\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. thesis", "by fast"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (step A l l' Z' l'' Z'')"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>\n  \\<lbrakk>\\<And>D'.\n              \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n               [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n              \\<Longrightarrow> ?thesis6;\n   (\\<forall>c.\n       0 < v c \\<and>\n       (\\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y)) \\<and>\n   (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n   (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n   valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n  \\<Longrightarrow> ?thesis6\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>\n  \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', ?D'6\\<rangle>;\n   [?D'6]\\<^bsub>v,n\\<^esub> = Z''; valid_dbm ?D'6\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_abstraction A X (\\<lambda>x. real (k x))\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "from step(2)[OF _ step(5,6,7)]"], ["proof (chain)\npicking this:\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n       [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n      \\<Longrightarrow> ?thesis6) \\<Longrightarrow>\n  ?thesis6", "obtain D' where D':\n    \"A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\" \"[D']\\<^bsub>v,n\\<^esub> = Z'\" \"valid_dbm D'\""], ["proof (prove)\nusing this:\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n       [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n      \\<Longrightarrow> ?thesis6) \\<Longrightarrow>\n  ?thesis6\n\ngoal (1 subgoal):\n 1. (\\<And>D'.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n         [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>\n  [D']\\<^bsub>v,n\\<^esub> = Z'\n  valid_dbm D'\n\ngoal (1 subgoal):\n 1. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "with norm_beta_complete[OF _ step(5,6), of l' D' l'' Z''] step(3)"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<turnstile> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n   valid_dbm D';\n   \\<And>D'a.\n      \\<lbrakk>A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D'a\\<rangle>;\n       [D'a]\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>\n  [D']\\<^bsub>v,n\\<^esub> = Z'\n  valid_dbm D'", "obtain D'' where D'':\n    \"A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'',D''\\<rangle>\" \"[D'']\\<^bsub>v,n\\<^esub> = Z''\" \"valid_dbm D''\""], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<turnstile> \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n   valid_dbm D';\n   \\<And>D'a.\n      \\<lbrakk>A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D'a\\<rangle>;\n       [D'a]\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>\n  [D']\\<^bsub>v,n\\<^esub> = Z'\n  valid_dbm D'\n\ngoal (1 subgoal):\n 1. (\\<And>D''.\n        \\<lbrakk>A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D''\\<rangle>;\n         [D'']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D''\\<rangle>\n  [D'']\\<^bsub>v,n\\<^esub> = Z''\n  valid_dbm D''\n\ngoal (1 subgoal):\n 1. \\<And>A l l' Z' l'' Z'' thesis.\n       \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z'\\<rangle>;\n        \\<And>thesis.\n           \\<lbrakk>\\<And>D'.\n                       \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n                        [D']\\<^bsub>v,n\\<^esub> = Z'; valid_dbm D'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            (\\<forall>c.\n                0 < v c \\<and>\n                (\\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y)) \\<and>\n            (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n            (\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n            valid_abstraction A X (\\<lambda>x. real (k x));\n            valid_dbm D\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        A \\<turnstile> \\<langle>l', Z'\\<rangle> \\<leadsto>\\<^sub>\\<beta> \\<langle>l'', Z''\\<rangle>;\n        \\<And>D'.\n           \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D'\\<rangle>;\n            [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        (\\<forall>c.\n            0 < v c \\<and>\n            (\\<forall>x y.\n                v x \\<le> n \\<and>\n                v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                x = y)) \\<and>\n        (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n        (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k));\n        valid_abstraction A X (\\<lambda>x. real (k x)); valid_dbm D\\<rbrakk>\n       \\<Longrightarrow> thesis", "with D'(1) step(4)[of D'']"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>\n  \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D''\\<rangle>;\n   [D'']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D''\\<rangle>\n  [D'']\\<^bsub>v,n\\<^esub> = Z''\n  valid_dbm D''", "show thesis"], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>\n  \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l'', D''\\<rangle>;\n   [D'']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D''\\<rbrakk>\n  \\<Longrightarrow> thesis\n  A \\<turnstile> \\<langle>l', D'\\<rangle> \\<leadsto>\\<^sub>\\<N> \\<langle>l'', D''\\<rangle>\n  [D'']\\<^bsub>v,n\\<^esub> = Z''\n  valid_dbm D''\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_beta_equiv_multi:\n  assumes \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and     \"valid_dbm D\"\n  shows \"(\\<exists> D'. A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> Z = [D']\\<^bsub>v,n\\<^esub>) \\<longleftrightarrow> A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',Z\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n        Z = [D']\\<^bsub>v,n\\<^esub>) =\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z\\<rangle>", "using norm_beta_complete_multi[OF _ assms] norm_beta_sound_multi[OF _ assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<turnstile> \\<langle>?l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>?l', ?Z\\<rangle>;\n   \\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>?l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l', D'\\<rangle>;\n       [D']\\<^bsub>v,n\\<^esub> = ?Z; valid_dbm D'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  A \\<turnstile> \\<langle>?l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l', ?D'\\<rangle> \\<Longrightarrow>\n  A \\<turnstile> \\<langle>?l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>?l', [?D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n  valid_dbm ?D'\n\ngoal (1 subgoal):\n 1. (\\<exists>D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n        Z = [D']\\<^bsub>v,n\\<^esub>) =\n    A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z\\<rangle>", "by metis"], ["", "subsection \\<open>Connecting with Correctness Results for Approximating Semantics\\<close>"], ["", "lemma steps_z_norm_complete':\n  assumes \"A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle>\" \"global_clock_numbering A v n\" \"valid_abstraction A X k\"\n  and \"valid_dbm D\"\n  shows \"\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and>  Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>", "from steps_z_beta_complete[OF assms(1,3)] assms(4)"], ["proof (chain)\npicking this:\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  \\<exists>Z''.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z''\\<rangle> \\<and>\n     Z \\<subseteq> Z''\n  valid_dbm D", "obtain Z'' where Z'':\n    \"A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',Z''\\<rangle>\" \"Z \\<subseteq> Z''\""], ["proof (prove)\nusing this:\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> V \\<Longrightarrow>\n  \\<exists>Z''.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z''\\<rangle> \\<and>\n     Z \\<subseteq> Z''\n  valid_dbm D\n\ngoal (1 subgoal):\n 1. (\\<And>Z''.\n        \\<lbrakk>A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z''\\<rangle>;\n         Z \\<subseteq> Z''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', Z''\\<rangle>\n  Z \\<subseteq> Z''\n\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>", "from this(2) norm_beta_complete_multi[OF this(1) assms(2,3,4)]"], ["proof (chain)\npicking this:\n  Z \\<subseteq> Z''\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n       [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  Z \\<subseteq> Z''\n  (\\<And>D'.\n      \\<lbrakk>A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle>;\n       [D']\\<^bsub>v,n\\<^esub> = Z''; valid_dbm D'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>", "by metis"], ["proof (state)\nthis:\n  \\<exists>D'.\n     A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n     Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valid_dbm_V':\n  assumes \"valid_dbm M\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> \\<in> V'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> \\<in> V'", "using assms"], ["proof (prove)\nusing this:\n  valid_dbm M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> \\<in> V'", "unfolding V'_def"], ["proof (prove)\nusing this:\n  valid_dbm M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub>\n    \\<in> {Z. Z \\<subseteq> V \\<and>\n              (\\<exists>M. Z = [M]\\<^bsub>v,n\\<^esub> \\<and> dbm_int M n)}", "by force"], ["", "lemma steps_z_norm_sound':\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\"\n    and \"global_clock_numbering A v n\"\n    and \"valid_abstraction A X k\"\n    and \"valid_dbm D\"\n    and \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<exists>Z. A \\<turnstile> \\<langle>l,[D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle> \\<and> Z \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Z.\n       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n       Z \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Z.\n       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n       Z \\<noteq> {}", "from norm_beta_sound_multi[OF assms(1-4)]"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n  valid_dbm D'", "have \"A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l',[D']\\<^bsub>v,n\\<^esub>\\<rangle>\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle> \\<and>\n  valid_dbm D'\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>", "by fast"], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>\\<^sub>\\<beta>* \\<langle>l', [D']\\<^bsub>v,n\\<^esub>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>Z.\n       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n       Z \\<noteq> {}", "from steps_z_beta_sound[OF this _ assms(3) valid_dbm_V'] assms(2,4,5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>c\\<in>clk_set A. v c \\<le> n; valid_dbm D;\n   [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Z''.\n                       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z''\\<rangle> \\<and>\n                       Z'' \\<noteq> {}\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_dbm D\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c\\<in>clk_set A. v c \\<le> n; valid_dbm D;\n   [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Z''.\n                       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z''\\<rangle> \\<and>\n                       Z'' \\<noteq> {}\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n  valid_dbm D\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>Z.\n       A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n       Z \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  \\<exists>Z.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n     Z \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>The Final Result About Language Emptiness\\<close>"], ["", "lemma steps_z_norm_complete:\n  assumes \"A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>\" \"u \\<in> [D]\\<^bsub>v,n\\<^esub>\"\n    and   \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> u' \\<in> [D']\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       u' \\<in> [D']\\<^bsub>v,n\\<^esub>", "using steps_z_norm_complete'[OF _ assms(3-)] steps_z_complete[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>?l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>?l', ?Z\\<rangle> \\<Longrightarrow>\n  \\<exists>D'.\n     A \\<turnstile> \\<langle>?l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l', D'\\<rangle> \\<and>\n     ?Z \\<subseteq> [D']\\<^bsub>v,n\\<^esub>\n  \\<exists>Z'.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z'\\<rangle> \\<and>\n     u' \\<in> Z'\n\ngoal (1 subgoal):\n 1. \\<exists>D'.\n       A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n       u' \\<in> [D']\\<^bsub>v,n\\<^esub>", "by fast"], ["", "lemma steps_z_norm_sound:\n  assumes \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle>\"\n    and   \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n    and   \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\"\n  shows \"\\<exists> u \\<in> [D]\\<^bsub>v,n\\<^esub>. \\<exists> u'. A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>[D]\\<^bsub>v,n\\<^esub>.\n       \\<exists>u'.\n          A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>", "using steps_z_norm_sound'[OF assms] steps_z_sound"], ["proof (prove)\nusing this:\n  \\<exists>Z.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n     Z \\<noteq> {}\n  \\<lbrakk>?A \\<turnstile> \\<langle>?l, ?Z\\<rangle> \\<leadsto>* \\<langle>?l', ?Z'\\<rangle>;\n   ?u' \\<in> ?Z'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u\\<in>?Z.\n                       ?A \\<turnstile> \\<langle>?l, u\\<rangle> \\<rightarrow>* \\<langle>?l', ?u'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>[D]\\<^bsub>v,n\\<^esub>.\n       \\<exists>u'.\n          A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>", "by fast"], ["", "theorem steps_z_norm_decides_emptiness:\n  assumes \"global_clock_numbering A v n\" \"valid_abstraction A X k\" \"valid_dbm D\"\n  shows \"(\\<exists> D'. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l',D'\\<rangle> \\<and> [D']\\<^bsub>v,n\\<^esub> \\<noteq> {})\n     \\<longleftrightarrow> (\\<exists> u \\<in> [D]\\<^bsub>v,n\\<^esub>. \\<exists> u'. A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}) =\n    (\\<exists>u\\<in>[D]\\<^bsub>v,n\\<^esub>.\n        \\<exists>u'.\n           A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>)", "using steps_z_norm_sound[OF _ assms] steps_z_norm_complete[OF _ _ assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<turnstile> \\<langle>?l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l', ?D'\\<rangle>;\n   [?D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u\\<in>[D]\\<^bsub>v,n\\<^esub>.\n                       \\<exists>u'.\n                          A \\<turnstile> \\<langle>?l, u\\<rangle> \\<rightarrow>* \\<langle>?l', u'\\<rangle>\n  \\<lbrakk>A \\<turnstile> \\<langle>?l, ?u\\<rangle> \\<rightarrow>* \\<langle>?l', ?u'\\<rangle>;\n   ?u \\<in> [D]\\<^bsub>v,n\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>D'.\n                       A \\<turnstile> \\<langle>?l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>?l', D'\\<rangle> \\<and>\n                       ?u' \\<in> [D']\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<exists>D'.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^sub>\\<N>* \\<langle>l', D'\\<rangle> \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}) =\n    (\\<exists>u\\<in>[D]\\<^bsub>v,n\\<^esub>.\n        \\<exists>u'.\n           A \\<turnstile> \\<langle>l, u\\<rangle> \\<rightarrow>* \\<langle>l', u'\\<rangle>)", "by fast"], ["", "section \\<open>Finiteness of the Search Space\\<close>"], ["", "abbreviation \"dbm_default M \\<equiv> (\\<forall> i > n. \\<forall> j. M i j = \\<one>) \\<and> (\\<forall> j > n. \\<forall> i. M i j = \\<one>)\""], ["", "lemma \"a \\<in> \\<int> \\<Longrightarrow> \\<exists> b. a = real_of_int b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<int> \\<Longrightarrow> \\<exists>b. a = real_of_int b", "using Ints_cases"], ["proof (prove)\nusing this:\n  \\<lbrakk>?q \\<in> \\<int>;\n   \\<And>z. ?q = of_int z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. a \\<in> \\<int> \\<Longrightarrow> \\<exists>b. a = real_of_int b", "by auto"], ["", "lemma norm_default_preservation:\n  \"dbm_default M \\<Longrightarrow> dbm_default (norm M (k o v') n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n    (\\<forall>j>n. \\<forall>i. M i j = \\<one>) \\<Longrightarrow>\n    (\\<forall>i>n.\n        \\<forall>j.\n           DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n            i j =\n           \\<one>) \\<and>\n    (\\<forall>j>n.\n        \\<forall>i.\n           DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n            i j =\n           \\<one>)", "by (simp add: norm_def)"], ["", "lemma normalized_integral_dbms_finite:\n  \"finite {norm M (k o v') n | M. dbm_int M n \\<and> dbm_default M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "let ?u = \"Max {(k o v') i | i. i \\<le> n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "let ?l = \"- ?u\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "let ?S = \"(Le ` {d :: int. ?l \\<le> d \\<and> d \\<le> ?u}) \\<union> (Lt ` {d :: int. ?l \\<le> d \\<and> d \\<le> ?u}) \\<union> {\\<infinity>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "from finite_set_of_finite_funs2[of \"{0..n}\" \"{0..n}\" ?S]"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite {0..n}; finite {0..n};\n   finite\n    ((\\<lambda>x. Le (real_of_int x)) `\n     {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n         d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n     (\\<lambda>x. Lt (real_of_int x)) `\n     {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n         d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n     {\\<infinity>})\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {f. \\<forall>x y.\n                            (x \\<in> {0..n} \\<and>\n                             y \\<in> {0..n} \\<longrightarrow>\n                             f x y\n                             \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                                   {d. - int\n    (Max {(k \\<circ> v') i |i. i \\<le> n})\n \\<le> d \\<and>\n d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                                   (\\<lambda>x. Lt (real_of_int x)) `\n                                   {d. - int\n    (Max {(k \\<circ> v') i |i. i \\<le> n})\n \\<le> d \\<and>\n d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                                   {\\<infinity>}) \\<and>\n                            (x \\<notin> {0..n} \\<longrightarrow>\n                             f x y = ?d) \\<and>\n                            (y \\<notin> {0..n} \\<longrightarrow>\n                             f x y = ?d)}", "have fin:\n    \"finite {f. \\<forall>x y. (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow> f x y \\<in> ?S)\n                \\<and> (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and> (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\" (is \"finite ?R\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {0..n}; finite {0..n};\n   finite\n    ((\\<lambda>x. Le (real_of_int x)) `\n     {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n         d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n     (\\<lambda>x. Lt (real_of_int x)) `\n     {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n         d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n     {\\<infinity>})\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {f. \\<forall>x y.\n                            (x \\<in> {0..n} \\<and>\n                             y \\<in> {0..n} \\<longrightarrow>\n                             f x y\n                             \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                                   {d. - int\n    (Max {(k \\<circ> v') i |i. i \\<le> n})\n \\<le> d \\<and>\n d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                                   (\\<lambda>x. Lt (real_of_int x)) `\n                                   {d. - int\n    (Max {(k \\<circ> v') i |i. i \\<le> n})\n \\<le> d \\<and>\n d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                                   {\\<infinity>}) \\<and>\n                            (x \\<notin> {0..n} \\<longrightarrow>\n                             f x y = ?d) \\<and>\n                            (y \\<notin> {0..n} \\<longrightarrow>\n                             f x y = ?d)}\n\ngoal (1 subgoal):\n 1. finite\n     {f. \\<forall>x y.\n            (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n             f x y\n             \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                   {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                       \\<le> d \\<and>\n                       d \\<le> int (Max {(k \\<circ> v') i |i.\n   i \\<le> n})} \\<union>\n                   (\\<lambda>x. Lt (real_of_int x)) `\n                   {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                       \\<le> d \\<and>\n                       d \\<le> int (Max {(k \\<circ> v') i |i.\n   i \\<le> n})} \\<union>\n                   {\\<infinity>}) \\<and>\n            (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and>\n            (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f. \\<forall>x y.\n          (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n           f x y\n           \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 (\\<lambda>x. Lt (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 {\\<infinity>}) \\<and>\n          (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and>\n          (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "{"], ["proof (state)\nthis:\n  finite\n   {f. \\<forall>x y.\n          (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n           f x y\n           \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 (\\<lambda>x. Lt (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 {\\<infinity>}) \\<and>\n          (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and>\n          (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "fix M :: \"t DBM\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "assume A: \"dbm_int M n\" \"dbm_default M\""], ["proof (state)\nthis:\n  dbm_int M n\n  (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n  (\\<forall>j>n. \\<forall>i. M i j = \\<one>)\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "let ?M = \"norm M (k o v') n\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "from beta_interp.norm_int_preservation[OF A(1)] norm_default_preservation[OF A(2)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)", "have\n      A: \"dbm_int ?M n\" \"dbm_default ?M\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n;\n   DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i\n    ?j \\<noteq>\n   \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const\n                     (DBM_Normalization.norm M\n                       (\\<lambda>x. real ((k \\<circ> v') x)) n ?i ?j)\n                    \\<in> \\<int>\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n\ngoal (1 subgoal):\n 1. dbm_int\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n     n &&&\n    (\\<forall>i>n.\n        \\<forall>j.\n           DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n            i j =\n           \\<one>) \\<and>\n    (\\<forall>j>n.\n        \\<forall>i.\n           DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n            i j =\n           \\<one>)", "by blast+"], ["proof (state)\nthis:\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "{"], ["proof (state)\nthis:\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "assume \"i \\<in> {0..n}\" \"j \\<in> {0..n}\""], ["proof (state)\nthis:\n  i \\<in> {0..n}\n  j \\<in> {0..n}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..n}\n  j \\<in> {0..n}", "have B: \"i \\<le> n\" \"j \\<le> n\""], ["proof (prove)\nusing this:\n  i \\<in> {0..n}\n  j \\<in> {0..n}\n\ngoal (1 subgoal):\n 1. i \\<le> n &&& j \\<le> n", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "have \"?M i j \\<in> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "proof (cases \"?M i j = \\<infinity>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}\n 2. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "case True"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  \\<infinity>\n\ngoal (2 subgoals):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}\n 2. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "then"], ["proof (chain)\npicking this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<in> (\\<lambda>x. Le (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        (\\<lambda>x. Lt (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        {\\<infinity>}\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "case False"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "note not_inf = this"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "with B A(1)"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>", "have \"get_const (?M i j) \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "moreover"], ["proof (state)\nthis:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "have \"?l \\<le> get_const (?M i j) \\<and> get_const (?M i j) \\<le> ?u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with \\<open>i = 0\\<close> A(1) B"], ["proof (chain)\npicking this:\n  i = 0\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  j = 0", "have\n              \"?M i j = norm_lower (norm_upper (M 0 0) 0) 0\""], ["proof (prove)\nusing this:\n  i = 0\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  j = 0\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n    norm_lower (norm_upper (M 0 0) 0) 0", "unfolding norm_def"], ["proof (prove)\nusing this:\n  i = 0\n  dbm_int\n   (\\<lambda>i j.\n       let ub = if 0 < i then real ((k \\<circ> v') i) else 0;\n           lb = if 0 < j then - real ((k \\<circ> v') j) else 0\n       in if i \\<le> n \\<and> j \\<le> n\n          then norm_lower (norm_upper (M i j) ub) lb else M i j)\n   n\n  i \\<le> n\n  j \\<le> n\n  j = 0\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < i then real ((k \\<circ> v') i) else 0;\n         lb = if 0 < j then - real ((k \\<circ> v') j) else 0\n     in if i \\<le> n \\<and> j \\<le> n\n        then norm_lower (norm_upper (M i j) ub) lb else M i j) =\n    norm_lower (norm_upper (M 0 0) 0) 0", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  norm_lower (norm_upper (M 0 0) 0) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "also"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  norm_lower (norm_upper (M 0 0) 0) 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "have \"\\<dots> \\<noteq> \\<infinity> \\<longrightarrow> get_const \\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm_lower (norm_upper (M 0 0) 0) 0 \\<noteq>\n    \\<infinity> \\<longrightarrow>\n    get_const (norm_lower (norm_upper (M 0 0) 0) 0) = 0", "by (cases \"M 0 0\"; fastforce)"], ["proof (state)\nthis:\n  norm_lower (norm_upper (M 0 0) 0) 0 \\<noteq> \\<infinity> \\<longrightarrow>\n  get_const (norm_lower (norm_upper (M 0 0) 0) 0) = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "finally"], ["proof (chain)\npicking this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity> \\<longrightarrow>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity> \\<longrightarrow>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j) =\n  0\n\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "using not_inf"], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity> \\<longrightarrow>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j) =\n  0\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "by auto"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with \\<open>i = 0\\<close> B not_inf"], ["proof (chain)\npicking this:\n  i = 0\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j \\<noteq> 0", "have \"?M i j \\<le> Le 0\" \"Lt (-real (k (v' j))) \\<le> ?M i j\""], ["proof (prove)\nusing this:\n  i = 0\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<le> Le 0 &&&\n    Lt (- real (k (v' j)))\n    \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j", "by (unfold norm_def, auto simp: Let_def, unfold less[symmetric], auto)"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le 0\n  Lt (- real (k (v' j)))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with not_inf"], ["proof (chain)\npicking this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le 0\n  Lt (- real (k (v' j)))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j", "have \"get_const (?M i j) \\<le> 0\" \"-k (v' j) \\<le> get_const (?M i j)\""], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le 0\n  Lt (- real (k (v' j)))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n\ngoal (1 subgoal):\n 1. get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> 0 &&&\n    real_of_int (- int (k (v' j)))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j)", "by (cases \"?M i j\"; auto)+"], ["proof (state)\nthis:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> 0\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "moreover"], ["proof (state)\nthis:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> 0\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "from \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n", "have \"- (k o v') j \\<ge> ?l\""], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n    \\<le> - int ((k \\<circ> v') j)", "by (auto intro: Max_ge)"], ["proof (state)\nthis:\n  - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n  \\<le> - int ((k \\<circ> v') j)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "ultimately"], ["proof (chain)\npicking this:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> 0\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n  \\<le> - int ((k \\<circ> v') j)", "show ?thesis"], ["proof (prove)\nusing this:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> 0\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n  \\<le> - int ((k \\<circ> v') j)\n\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "by auto"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> 0", "have \"i > 0\""], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < i", "by simp"], ["proof (state)\nthis:\n  0 < i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with \\<open>i > 0\\<close> A(1) B not_inf"], ["proof (chain)\npicking this:\n  0 < i\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j = 0", "have \"Lt 0 \\<le> ?M i j\" \"?M i j \\<le> Le (real ((k \\<circ> v') i))\""], ["proof (prove)\nusing this:\n  0 < i\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j = 0\n\ngoal (1 subgoal):\n 1. Lt 0\n    \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j &&&\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<le> Le (real ((k \\<circ> v') i))", "by (unfold norm_def, auto simp: Let_def, unfold less[symmetric], auto)"], ["proof (state)\nthis:\n  Lt 0\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with not_inf"], ["proof (chain)\npicking this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  Lt 0\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))", "have \"0 \\<le> get_const (?M i j)\" \"get_const (?M i j) \\<le> k (v' i)\""], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  Lt 0\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))\n\ngoal (1 subgoal):\n 1. 0 \\<le> get_const\n             (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x))\n               n i j) &&&\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (k (v' i))", "by (cases \"?M i j\"; auto)+"], ["proof (state)\nthis:\n  0 \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "moreover"], ["proof (state)\nthis:\n  0 \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "from \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n", "have \"(k o v') i \\<le> ?u\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}", "by (auto intro: Max_ge)"], ["proof (state)\nthis:\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "by auto"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with \\<open>i > 0\\<close> A(1) B not_inf"], ["proof (chain)\npicking this:\n  0 < i\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j \\<noteq> 0", "have\n              \"Lt (-real ((k \\<circ> v') j)) \\<le> ?M i j\" \"?M i j \\<le> Le (real ((k \\<circ> v') i))\""], ["proof (prove)\nusing this:\n  0 < i\n  dbm_int (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n)\n   n\n  i \\<le> n\n  j \\<le> n\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Lt (- real ((k \\<circ> v') j))\n    \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j &&&\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<le> Le (real ((k \\<circ> v') i))", "by (unfold norm_def, auto simp: Let_def, unfold less[symmetric], auto)"], ["proof (state)\nthis:\n  Lt (- real ((k \\<circ> v') j))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "with not_inf"], ["proof (chain)\npicking this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  Lt (- real ((k \\<circ> v') j))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))", "have \"- k (v' j) \\<le> get_const (?M i j)\" \"get_const (?M i j) \\<le> k (v' i)\""], ["proof (prove)\nusing this:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n   j \\<noteq>\n  \\<infinity>\n  Lt (- real ((k \\<circ> v') j))\n  \\<le> DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<le> Le (real ((k \\<circ> v') i))\n\ngoal (1 subgoal):\n 1. real_of_int (- int (k (v' j)))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) &&&\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (k (v' i))", "by (cases \"?M i j\"; auto)+"], ["proof (state)\nthis:\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "moreover"], ["proof (state)\nthis:\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "from \\<open>i \\<le> n\\<close> \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n", "have \"(k o v') i \\<le> ?u\" \"(k o v') j \\<le> ?u\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n} &&&\n    (k \\<circ> v') j \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}", "by (auto intro: Max_ge)"], ["proof (state)\nthis:\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n  (k \\<circ> v') j \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "ultimately"], ["proof (chain)\npicking this:\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n  (k \\<circ> v') j \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int (- int (k (v' j)))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j)\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (k (v' i))\n  (k \\<circ> v') i \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n  (k \\<circ> v') j \\<le> Max {(k \\<circ> v') i |i. i \\<le> n}\n\ngoal (1 subgoal):\n 1. real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n    \\<le> get_const\n           (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n\n             i j) \\<and>\n    get_const\n     (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n    \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "by auto"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n     j \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "ultimately"], ["proof (chain)\npicking this:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<in> \\<int>\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})", "show ?thesis"], ["proof (prove)\nusing this:\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<in> \\<int>\n  real_of_int (- int (Max {(k \\<circ> v') i |i. i \\<le> n}))\n  \\<le> get_const\n         (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n           j) \\<and>\n  get_const\n   (DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j)\n  \\<le> real (Max {(k \\<circ> v') i |i. i \\<le> n})\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          (\\<lambda>x. Lt (real_of_int x)) `\n          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n              d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n          {\\<infinity>}", "by (cases \"?M i j\"; auto elim: Ints_cases)"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<in> (\\<lambda>x. Le (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        (\\<lambda>x. Lt (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        {\\<infinity>}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j\n  \\<in> (\\<lambda>x. Le (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        (\\<lambda>x. Lt (real_of_int x)) `\n        {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n}) \\<le> d \\<and>\n            d \\<le> int (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n        {\\<infinity>}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "assume \"i \\<notin> {0..n}\""], ["proof (state)\nthis:\n  i \\<notin> {0..n}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "with A(2)"], ["proof (chain)\npicking this:\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n  i \\<notin> {0..n}", "have \"?M i j = \\<one>\""], ["proof (prove)\nusing this:\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n  i \\<notin> {0..n}\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n    \\<one>", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "}"], ["proof (state)\nthis:\n  ?i9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "moreover"], ["proof (state)\nthis:\n  ?i9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "{"], ["proof (state)\nthis:\n  ?i9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "assume \"j \\<notin> {0..n}\""], ["proof (state)\nthis:\n  j \\<notin> {0..n}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "with A(2)"], ["proof (chain)\npicking this:\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n  j \\<notin> {0..n}", "have \"?M i j = \\<one>\""], ["proof (prove)\nusing this:\n  (\\<forall>i>n.\n      \\<forall>j.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>) \\<and>\n  (\\<forall>j>n.\n      \\<forall>i.\n         DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i\n          j =\n         \\<one>)\n  j \\<notin> {0..n}\n\ngoal (1 subgoal):\n 1. DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n    \\<one>", "by auto"], ["proof (state)\nthis:\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n i j =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "}"], ["proof (state)\nthis:\n  ?j9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "moreover"], ["proof (state)\nthis:\n  ?j9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "note the = calculation"], ["proof (state)\nthis:\n  \\<lbrakk>?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm M\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n  ?i9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n  ?j9 \\<notin> {0..n} \\<Longrightarrow>\n  DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n  \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?j9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?j9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>", "have \"{norm M (k o v') n | M. dbm_int M n \\<and> dbm_default M} \\<subseteq> ?R\""], ["proof (prove)\nusing this:\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<in> {0..n}; ?j9 \\<in> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9\n                    \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          (\\<lambda>x. Lt (real_of_int x)) `\n                          {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                              \\<le> d \\<and>\n                              d \\<le> int\n (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                          {\\<infinity>}\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?i9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>\n  \\<lbrakk>dbm_int ?M12 n;\n   (\\<forall>i>n. \\<forall>j. ?M12 i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. ?M12 i j = \\<one>);\n   ?j9 \\<notin> {0..n}\\<rbrakk>\n  \\<Longrightarrow> DBM_Normalization.norm ?M12\n                     (\\<lambda>x. real ((k \\<circ> v') x)) n ?i9 ?j9 =\n                    \\<one>\n\ngoal (1 subgoal):\n 1. {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n     dbm_int M n \\<and>\n     (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n     (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}\n    \\<subseteq> {f. \\<forall>x y.\n                       (x \\<in> {0..n} \\<and>\n                        y \\<in> {0..n} \\<longrightarrow>\n                        f x y\n                        \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                              {d. - int (Max\n    {(k \\<circ> v') i |i. i \\<le> n})\n                                  \\<le> d \\<and>\n                                  d \\<le> int\n     (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                              (\\<lambda>x. Lt (real_of_int x)) `\n                              {d. - int (Max\n    {(k \\<circ> v') i |i. i \\<le> n})\n                                  \\<le> d \\<and>\n                                  d \\<le> int\n     (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                              {\\<infinity>}) \\<and>\n                       (x \\<notin> {0..n} \\<longrightarrow>\n                        f x y = \\<one>) \\<and>\n                       (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}", "by blast"], ["proof (state)\nthis:\n  {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n   dbm_int M n \\<and>\n   (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}\n  \\<subseteq> {f. \\<forall>x y.\n                     (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n                      f x y\n                      \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            (\\<lambda>x. Lt (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            {\\<infinity>}) \\<and>\n                     (x \\<notin> {0..n} \\<longrightarrow>\n                      f x y = \\<one>) \\<and>\n                     (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "with fin"], ["proof (chain)\npicking this:\n  finite\n   {f. \\<forall>x y.\n          (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n           f x y\n           \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 (\\<lambda>x. Lt (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 {\\<infinity>}) \\<and>\n          (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and>\n          (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n  {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n   dbm_int M n \\<and>\n   (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}\n  \\<subseteq> {f. \\<forall>x y.\n                     (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n                      f x y\n                      \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            (\\<lambda>x. Lt (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            {\\<infinity>}) \\<and>\n                     (x \\<notin> {0..n} \\<longrightarrow>\n                      f x y = \\<one>) \\<and>\n                     (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {f. \\<forall>x y.\n          (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n           f x y\n           \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 (\\<lambda>x. Lt (real_of_int x)) `\n                 {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                     \\<le> d \\<and>\n                     d \\<le> int (Max {(k \\<circ> v') i |i.\n i \\<le> n})} \\<union>\n                 {\\<infinity>}) \\<and>\n          (x \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>) \\<and>\n          (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n  {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n   dbm_int M n \\<and>\n   (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n   (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}\n  \\<subseteq> {f. \\<forall>x y.\n                     (x \\<in> {0..n} \\<and> y \\<in> {0..n} \\<longrightarrow>\n                      f x y\n                      \\<in> (\\<lambda>x. Le (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            (\\<lambda>x. Lt (real_of_int x)) `\n                            {d. - int (Max {(k \\<circ> v') i |i. i \\<le> n})\n                                \\<le> d \\<and>\n                                d \\<le> int\n   (Max {(k \\<circ> v') i |i. i \\<le> n})} \\<union>\n                            {\\<infinity>}) \\<and>\n                     (x \\<notin> {0..n} \\<longrightarrow>\n                      f x y = \\<one>) \\<and>\n                     (y \\<notin> {0..n} \\<longrightarrow> f x y = \\<one>)}\n\ngoal (1 subgoal):\n 1. finite\n     {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n      dbm_int M n \\<and>\n      (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n      (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}", "by (blast intro: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {DBM_Normalization.norm M (\\<lambda>x. real ((k \\<circ> v') x)) n |M.\n    dbm_int M n \\<and>\n    (\\<forall>i>n. \\<forall>j. M i j = \\<one>) \\<and>\n    (\\<forall>j>n. \\<forall>i. M i j = \\<one>)}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "section \\<open>Appendix: Standard Clock Numberings for Concrete Models\\<close>"], ["", "locale Regions' =\n  fixes X and k :: \"'c \\<Rightarrow> nat\" and v :: \"'c \\<Rightarrow> nat\" and n :: nat and not_in_X\n  assumes finite: \"finite X\"\n  assumes clock_numbering': \"\\<forall> c \\<in> X. v c > 0\" \"\\<forall> c. c \\<notin> X \\<longrightarrow> v c > n\"\n  assumes bij: \"bij_betw v X {1..n}\"\n  assumes non_empty: \"X \\<noteq> {}\"\n  assumes not_in_X: \"not_in_X \\<notin> X\"\n\nbegin"], ["", "lemma inj: \"inj_on v X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on v X", "using bij_betw_imp_inj_on bij"], ["proof (prove)\nusing this:\n  bij_betw ?f ?A ?B \\<Longrightarrow> inj_on ?f ?A\n  bij_betw v X {1..n}\n\ngoal (1 subgoal):\n 1. inj_on v X", "by simp"], ["", "lemma cn_weak: \"\\<forall> c. v c > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c", "using clock_numbering'"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>X. 0 < v c\n  \\<forall>c. c \\<notin> X \\<longrightarrow> n < v c\n\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c", "by force"], ["", "lemma in_X: assumes \"v x \\<le> n\" shows \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> X", "using assms clock_numbering'(2)"], ["proof (prove)\nusing this:\n  v x \\<le> n\n  \\<forall>c. c \\<notin> X \\<longrightarrow> n < v c\n\ngoal (1 subgoal):\n 1. x \\<in> X", "by force"], ["", "end"], ["", "sublocale Regions' \\<subseteq> Regions"], ["proof (prove)\ngoal (1 subgoal):\n 1. Regions X v n not_in_X", "proof (unfold_locales, auto simp: finite clock_numbering' non_empty cn_weak not_in_X, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>v y \\<le> n; v x = v y\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 3. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "case (1 x y)"], ["proof (state)\nthis:\n  v y \\<le> n\n  v x = v y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>v y \\<le> n; v x = v y\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 3. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "with inj in_X"], ["proof (chain)\npicking this:\n  inj_on v X\n  v ?x \\<le> n \\<Longrightarrow> ?x \\<in> X\n  v y \\<le> n\n  v x = v y", "show ?case"], ["proof (prove)\nusing this:\n  inj_on v X\n  v ?x \\<le> n \\<Longrightarrow> ?x \\<in> X\n  v y \\<le> n\n  v x = v y\n\ngoal (1 subgoal):\n 1. x = y", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. v x = v y \\<longrightarrow> x = y\n  v ?x \\<le> n \\<Longrightarrow> ?x \\<in> X\n  v y \\<le> n\n  v x = v y\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "case (2 k)"], ["proof (state)\nthis:\n  k \\<le> n\n  0 < k\n\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "from bij"], ["proof (chain)\npicking this:\n  bij_betw v X {1..n}", "have \"v ` X = {1..n}\""], ["proof (prove)\nusing this:\n  bij_betw v X {1..n}\n\ngoal (1 subgoal):\n 1. v ` X = {1..n}", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on v X \\<and> v ` X = {1..n}\n\ngoal (1 subgoal):\n 1. v ` X = {1..n}", "by auto"], ["proof (state)\nthis:\n  v ` X = {1..n}\n\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "from 2"], ["proof (chain)\npicking this:\n  k \\<le> n\n  0 < k", "have \"k \\<in> {1..n}\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  0 < k\n\ngoal (1 subgoal):\n 1. k \\<in> {1..n}", "by simp"], ["proof (state)\nthis:\n  k \\<in> {1..n}\n\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "then"], ["proof (chain)\npicking this:\n  k \\<in> {1..n}", "obtain x where \"x \\<in> X\" \"v x = k\""], ["proof (prove)\nusing this:\n  k \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; v x = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding image_def"], ["proof (prove)\nusing this:\n  k \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; v x = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) \\<open>v ` X = {1..n}\\<close> imageE)"], ["proof (state)\nthis:\n  x \\<in> X\n  v x = k\n\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>k \\<le> n; 0 < k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<in>X. v c = k\n 2. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "then"], ["proof (chain)\npicking this:\n  x \\<in> X\n  v x = k", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> X\n  v x = k\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>X. v c = k", "by blast"], ["proof (state)\nthis:\n  \\<exists>c\\<in>X. v c = k\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "case (3 x)"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> X \\<Longrightarrow> v c \\<le> n", "with bij"], ["proof (chain)\npicking this:\n  bij_betw v X {1..n}\n  x \\<in> X", "show ?case"], ["proof (prove)\nusing this:\n  bij_betw v X {1..n}\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. v x \\<le> n", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on v X \\<and> v ` X = {1..n}\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. v x \\<le> n", "by auto"], ["proof (state)\nthis:\n  v x \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "(* This is for automata carrying real time annotations *)"], ["", "lemma standard_abstraction:\n  assumes \"finite (clkp_set A)\" \"finite (collect_clkvt (trans_of A))\" \"\\<forall>(_,m::real) \\<in> clkp_set A. m \\<in> \\<nat>\"\n  obtains k :: \"'c \\<Rightarrow> nat\" where \"valid_abstraction A (clk_set A) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  finite (clkp_set A)\n  finite (collect_clkvt (trans_of A))\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>", "have 1: \"finite (clk_set A)\""], ["proof (prove)\nusing this:\n  finite (clkp_set A)\n  finite (collect_clkvt (trans_of A))\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. finite (clk_set A)", "by auto"], ["proof (state)\nthis:\n  finite (clk_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 2: \"collect_clkvt (trans_of A) \\<subseteq> clk_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. collect_clkvt (trans_of A) \\<subseteq> clk_set A", "by auto"], ["proof (state)\nthis:\n  collect_clkvt (trans_of A) \\<subseteq> clk_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  finite (clkp_set A)\n  finite (collect_clkvt (trans_of A))\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>", "obtain L where L: \"distinct L\" \"set L = clkp_set A\""], ["proof (prove)\nusing this:\n  finite (clkp_set A)\n  finite (collect_clkvt (trans_of A))\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>distinct L; set L = clkp_set A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson finite_distinct_list)"], ["proof (state)\nthis:\n  distinct L\n  set L = clkp_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?M = \"\\<lambda> c. {m . (c, m) \\<in> clkp_set A}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?X = \"clk_set A\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?m = \"map_of L\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?k = \"\\<lambda> x. if ?M x = {} then 0 else nat (floor (Max (?M x)) + 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "fix c m"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "assume A: \"(c, m) \\<in> clkp_set A\""], ["proof (state)\nthis:\n  (c, m) \\<in> clkp_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  finite (clkp_set A)", "have \"finite (snd ` clkp_set A)\""], ["proof (prove)\nusing this:\n  finite (clkp_set A)\n\ngoal (1 subgoal):\n 1. finite (snd ` clkp_set A)", "by auto"], ["proof (state)\nthis:\n  finite (snd ` clkp_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  finite (snd ` clkp_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"?M c \\<subseteq> (snd ` clkp_set A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {m. (c, m) \\<in> clkp_set A} \\<subseteq> snd ` clkp_set A", "by force"], ["proof (state)\nthis:\n  {m. (c, m) \\<in> clkp_set A} \\<subseteq> snd ` clkp_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  finite (snd ` clkp_set A)\n  {m. (c, m) \\<in> clkp_set A} \\<subseteq> snd ` clkp_set A", "have fin: \"finite (?M c)\""], ["proof (prove)\nusing this:\n  finite (snd ` clkp_set A)\n  {m. (c, m) \\<in> clkp_set A} \\<subseteq> snd ` clkp_set A\n\ngoal (1 subgoal):\n 1. finite {m. (c, m) \\<in> clkp_set A}", "by (blast intro: finite_subset)"], ["proof (state)\nthis:\n  finite {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  finite {m. (c, m) \\<in> clkp_set A}", "have \"Max (?M c) \\<in> {m . (c, m) \\<in> clkp_set A}\""], ["proof (prove)\nusing this:\n  finite {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. Max {m. (c, m) \\<in> clkp_set A} \\<in> {m. (c, m) \\<in> clkp_set A}", "using Max_in A"], ["proof (prove)\nusing this:\n  finite {m. (c, m) \\<in> clkp_set A}\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n  (c, m) \\<in> clkp_set A\n\ngoal (1 subgoal):\n 1. Max {m. (c, m) \\<in> clkp_set A} \\<in> {m. (c, m) \\<in> clkp_set A}", "by auto"], ["proof (state)\nthis:\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> {m. (c, m) \\<in> clkp_set A}", "have \"Max (?M c) \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>", "by auto"], ["proof (state)\nthis:\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>", "have \"floor (Max (?M c)) = Max (?M c)\""], ["proof (prove)\nusing this:\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> =\n    Max {m. (c, m) \\<in> clkp_set A}", "by (metis Nats_cases floor_of_nat of_int_of_nat_eq)"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> =\n  Max {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with A"], ["proof (chain)\npicking this:\n  (c, m) \\<in> clkp_set A\n  real_of_int \\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> =\n  Max {m. (c, m) \\<in> clkp_set A}", "have *: \"?k c = Max (?M c) + 1\""], ["proof (prove)\nusing this:\n  (c, m) \\<in> clkp_set A\n  real_of_int \\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> =\n  Max {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. real\n     (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n      else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> + 1)) =\n    Max {m. (c, m) \\<in> clkp_set A} + 1", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>(c, m) \\<in> clkp_set A;\n        Max {m. (c, m) \\<in> clkp_set A} = real_of_int n;\n        (c, x) \\<in> clkp_set A\\<rbrakk>\n       \\<Longrightarrow> real (nat (n + 1)) = real_of_int n + 1", "fix n :: int and x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>(c, m) \\<in> clkp_set A;\n        Max {m. (c, m) \\<in> clkp_set A} = real_of_int n;\n        (c, x) \\<in> clkp_set A\\<rbrakk>\n       \\<Longrightarrow> real (nat (n + 1)) = real_of_int n + 1", "assume \"Max {m. (c, m) \\<in> clkp_set A} = real_of_int n\""], ["proof (state)\nthis:\n  Max {m. (c, m) \\<in> clkp_set A} = real_of_int n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>(c, m) \\<in> clkp_set A;\n        Max {m. (c, m) \\<in> clkp_set A} = real_of_int n;\n        (c, x) \\<in> clkp_set A\\<rbrakk>\n       \\<Longrightarrow> real (nat (n + 1)) = real_of_int n + 1", "then"], ["proof (chain)\npicking this:\n  Max {m. (c, m) \\<in> clkp_set A} = real_of_int n", "have \"real_of_int (n + 1) \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  Max {m. (c, m) \\<in> clkp_set A} = real_of_int n\n\ngoal (1 subgoal):\n 1. real_of_int (n + 1) \\<in> \\<nat>", "using \\<open>Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>\\<close>"], ["proof (prove)\nusing this:\n  Max {m. (c, m) \\<in> clkp_set A} = real_of_int n\n  Max {m. (c, m) \\<in> clkp_set A} \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. real_of_int (n + 1) \\<in> \\<nat>", "by auto"], ["proof (state)\nthis:\n  real_of_int (n + 1) \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>(c, m) \\<in> clkp_set A;\n        Max {m. (c, m) \\<in> clkp_set A} = real_of_int n;\n        (c, x) \\<in> clkp_set A\\<rbrakk>\n       \\<Longrightarrow> real (nat (n + 1)) = real_of_int n + 1", "then"], ["proof (chain)\npicking this:\n  real_of_int (n + 1) \\<in> \\<nat>", "show \"real (nat (n + 1)) = real_of_int n + 1\""], ["proof (prove)\nusing this:\n  real_of_int (n + 1) \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. real (nat (n + 1)) = real_of_int n + 1", "by (metis Nats_cases ceiling_of_int nat_int of_int_1 of_int_add of_int_of_nat_eq)"], ["proof (state)\nthis:\n  real (nat (n + 1)) = real_of_int n + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real\n   (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n    else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> + 1)) =\n  Max {m. (c, m) \\<in> clkp_set A} + 1\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from fin A"], ["proof (chain)\npicking this:\n  finite {m. (c, m) \\<in> clkp_set A}\n  (c, m) \\<in> clkp_set A", "have \"Max (?M c) \\<ge> m\""], ["proof (prove)\nusing this:\n  finite {m. (c, m) \\<in> clkp_set A}\n  (c, m) \\<in> clkp_set A\n\ngoal (1 subgoal):\n 1. m \\<le> Max {m. (c, m) \\<in> clkp_set A}", "by auto"], ["proof (state)\nthis:\n  m \\<le> Max {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  m \\<le> Max {m. (c, m) \\<in> clkp_set A}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from A assms(3)"], ["proof (chain)\npicking this:\n  (c, m) \\<in> clkp_set A\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>", "have \"m \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  (c, m) \\<in> clkp_set A\n  \\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. m \\<in> \\<nat>", "by auto"], ["proof (state)\nthis:\n  m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  m \\<le> Max {m. (c, m) \\<in> clkp_set A}\n  m \\<in> \\<nat>", "have \"m \\<le> ?k c\" \"m \\<in> \\<nat>\" \"c \\<in> clk_set A\""], ["proof (prove)\nusing this:\n  m \\<le> Max {m. (c, m) \\<in> clkp_set A}\n  m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. m \\<le> real\n             (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n              else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> +\n                        1)) &&&\n    m \\<in> \\<nat> &&& c \\<in> clk_set A", "using A *"], ["proof (prove)\nusing this:\n  m \\<le> Max {m. (c, m) \\<in> clkp_set A}\n  m \\<in> \\<nat>\n  (c, m) \\<in> clkp_set A\n  real\n   (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n    else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> + 1)) =\n  Max {m. (c, m) \\<in> clkp_set A} + 1\n\ngoal (1 subgoal):\n 1. m \\<le> real\n             (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n              else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> +\n                        1)) &&&\n    m \\<in> \\<nat> &&& c \\<in> clk_set A", "by force+"], ["proof (state)\nthis:\n  m \\<le> real\n           (if {m. (c, m) \\<in> clkp_set A} = {} then 0\n            else nat (\\<lfloor>Max {m. (c, m) \\<in> clkp_set A}\\<rfloor> +\n                      1))\n  m \\<in> \\<nat>\n  c \\<in> clk_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow>\n  ?m2\n  \\<le> real\n         (if {m. (?c2, m) \\<in> clkp_set A} = {} then 0\n          else nat (\\<lfloor>Max {m. (?c2, m) \\<in> clkp_set A}\\<rfloor> +\n                    1))\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?m2 \\<in> \\<nat>\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?c2 \\<in> clk_set A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow>\n  ?m2\n  \\<le> real\n         (if {m. (?c2, m) \\<in> clkp_set A} = {} then 0\n          else nat (\\<lfloor>Max {m. (?c2, m) \\<in> clkp_set A}\\<rfloor> +\n                    1))\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?m2 \\<in> \\<nat>\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?c2 \\<in> clk_set A", "have \"\\<forall>(x, m)\\<in>clkp_set A. m \\<le> ?k x \\<and> x \\<in> clk_set A \\<and> m \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow>\n  ?m2\n  \\<le> real\n         (if {m. (?c2, m) \\<in> clkp_set A} = {} then 0\n          else nat (\\<lfloor>Max {m. (?c2, m) \\<in> clkp_set A}\\<rfloor> +\n                    1))\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?m2 \\<in> \\<nat>\n  (?c2, ?m2) \\<in> clkp_set A \\<Longrightarrow> ?c2 \\<in> clk_set A\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>clkp_set A.\n       m \\<le> real\n                (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n                 else nat (\\<lfloor>Max {m.\n   (x, m) \\<in> clkp_set A}\\<rfloor> +\n                           1)) \\<and>\n       x \\<in> clk_set A \\<and> m \\<in> \\<nat>", "by blast"], ["proof (state)\nthis:\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> real\n              (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n               else nat (\\<lfloor>Max {m.\n (x, m) \\<in> clkp_set A}\\<rfloor> +\n                         1)) \\<and>\n     x \\<in> clk_set A \\<and> m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with 1 2"], ["proof (chain)\npicking this:\n  finite (clk_set A)\n  collect_clkvt (trans_of A) \\<subseteq> clk_set A\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> real\n              (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n               else nat (\\<lfloor>Max {m.\n (x, m) \\<in> clkp_set A}\\<rfloor> +\n                         1)) \\<and>\n     x \\<in> clk_set A \\<and> m \\<in> \\<nat>", "have \"valid_abstraction A ?X ?k\""], ["proof (prove)\nusing this:\n  finite (clk_set A)\n  collect_clkvt (trans_of A) \\<subseteq> clk_set A\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> real\n              (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n               else nat (\\<lfloor>Max {m.\n (x, m) \\<in> clkp_set A}\\<rfloor> +\n                         1)) \\<and>\n     x \\<in> clk_set A \\<and> m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. valid_abstraction A (clk_set A)\n     (\\<lambda>x.\n         real\n          (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n           else nat (\\<lfloor>Max {m. (x, m) \\<in> clkp_set A}\\<rfloor> +\n                     1)))", "by - (standard, assumption+)"], ["proof (state)\nthis:\n  valid_abstraction A (clk_set A)\n   (\\<lambda>x.\n       real\n        (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n         else nat (\\<lfloor>Max {m. (x, m) \\<in> clkp_set A}\\<rfloor> + 1)))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  valid_abstraction A (clk_set A)\n   (\\<lambda>x.\n       real\n        (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n         else nat (\\<lfloor>Max {m. (x, m) \\<in> clkp_set A}\\<rfloor> + 1)))", "show thesis"], ["proof (prove)\nusing this:\n  valid_abstraction A (clk_set A)\n   (\\<lambda>x.\n       real\n        (if {m. (x, m) \\<in> clkp_set A} = {} then 0\n         else nat (\\<lfloor>Max {m. (x, m) \\<in> clkp_set A}\\<rfloor> + 1)))\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  \"finite_ta A \\<equiv> finite (clkp_set A) \\<and> finite (collect_clkvt (trans_of A))\n                 \\<and> (\\<forall>(_,m::real) \\<in> clkp_set A. m \\<in> \\<nat>) \\<and> clk_set A \\<noteq> {} \\<and> -clk_set A \\<noteq> {}\""], ["", "lemma finite_ta_Regions':\n  fixes A :: \"('a, 'c, real, 's) ta\"\n  assumes \"finite_ta A\"\n  obtains v n x where \"Regions' (clk_set A) v n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  finite_ta A", "obtain x where x: \"x \\<notin> clk_set A\""], ["proof (prove)\nusing this:\n  finite_ta A\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<notin> clk_set A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_ta_def"], ["proof (prove)\nusing this:\n  finite (clkp_set A) \\<and>\n  finite (collect_clkvt (trans_of A)) \\<and>\n  (\\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>) \\<and>\n  clk_set A \\<noteq> {} \\<and> - clk_set A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<notin> clk_set A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<notin> clk_set A\n\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms(1)"], ["proof (chain)\npicking this:\n  finite_ta A", "have \"finite (clk_set A)\""], ["proof (prove)\nusing this:\n  finite_ta A\n\ngoal (1 subgoal):\n 1. finite (clk_set A)", "unfolding finite_ta_def"], ["proof (prove)\nusing this:\n  finite (clkp_set A) \\<and>\n  finite (collect_clkvt (trans_of A)) \\<and>\n  (\\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>) \\<and>\n  clk_set A \\<noteq> {} \\<and> - clk_set A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (clk_set A)", "by auto"], ["proof (state)\nthis:\n  finite (clk_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with standard_numbering[of \"clk_set A\"] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite (clk_set A);\n   \\<And>v n.\n      \\<lbrakk>bij_betw v (clk_set A) {1..n};\n       \\<forall>c\\<in>clk_set A. 0 < v c;\n       \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  finite_ta A\n  finite (clk_set A)", "obtain v and n :: nat where\n            \"bij_betw v (clk_set A) {1..n}\"\n            \"\\<forall>c\\<in>clk_set A. 0 < v c\" \"\\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (clk_set A);\n   \\<And>v n.\n      \\<lbrakk>bij_betw v (clk_set A) {1..n};\n       \\<forall>c\\<in>clk_set A. 0 < v c;\n       \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  finite_ta A\n  finite (clk_set A)\n\ngoal (1 subgoal):\n 1. (\\<And>v n.\n        \\<lbrakk>bij_betw v (clk_set A) {1..n};\n         \\<forall>c\\<in>clk_set A. 0 < v c;\n         \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bij_betw v (clk_set A) {1..n}\n  \\<forall>c\\<in>clk_set A. 0 < v c\n  \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\n\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  bij_betw v (clk_set A) {1..n}\n  \\<forall>c\\<in>clk_set A. 0 < v c\n  \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c", "have \"Regions' (clk_set A) v n x\""], ["proof (prove)\nusing this:\n  bij_betw v (clk_set A) {1..n}\n  \\<forall>c\\<in>clk_set A. 0 < v c\n  \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\n\ngoal (1 subgoal):\n 1. Regions' (clk_set A) v n x", "using x assms"], ["proof (prove)\nusing this:\n  bij_betw v (clk_set A) {1..n}\n  \\<forall>c\\<in>clk_set A. 0 < v c\n  \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\n  x \\<notin> clk_set A\n  finite_ta A\n\ngoal (1 subgoal):\n 1. Regions' (clk_set A) v n x", "unfolding finite_ta_def"], ["proof (prove)\nusing this:\n  bij_betw v (clk_set A) {1..n}\n  \\<forall>c\\<in>clk_set A. 0 < v c\n  \\<forall>c. c \\<notin> clk_set A \\<longrightarrow> n < v c\n  x \\<notin> clk_set A\n  finite (clkp_set A) \\<and>\n  finite (collect_clkvt (trans_of A)) \\<and>\n  (\\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>) \\<and>\n  clk_set A \\<noteq> {} \\<and> - clk_set A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Regions' (clk_set A) v n x", "by - (standard, auto)"], ["proof (state)\nthis:\n  Regions' (clk_set A) v n x\n\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Regions' (clk_set A) v n x", "show ?thesis"], ["proof (prove)\nusing this:\n  Regions' (clk_set A) v n x\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_ta_RegionsD:\n  assumes \"finite_ta A\"\n  obtains k :: \"'b \\<Rightarrow> nat\" and v n x where\n    \"Regions' (clk_set A) v n x\" \"valid_abstraction A (clk_set A) k\" \"global_clock_numbering A v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from standard_abstraction assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite (clkp_set ?A); finite (collect_clkvt (trans_of ?A));\n   \\<forall>(uu_, m)\\<in>clkp_set ?A. m \\<in> \\<nat>;\n   \\<And>k.\n      valid_abstraction ?A (clk_set ?A)\n       (\\<lambda>x. real (k x)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  finite_ta A", "obtain k :: \"'b \\<Rightarrow> nat\" where k:\n    \"valid_abstraction A (clk_set A) k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (clkp_set ?A); finite (collect_clkvt (trans_of ?A));\n   \\<forall>(uu_, m)\\<in>clkp_set ?A. m \\<in> \\<nat>;\n   \\<And>k.\n      valid_abstraction ?A (clk_set ?A)\n       (\\<lambda>x. real (k x)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  finite_ta A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_ta_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (clkp_set ?A); finite (collect_clkvt (trans_of ?A));\n   \\<forall>(uu_, m)\\<in>clkp_set ?A. m \\<in> \\<nat>;\n   \\<And>k.\n      valid_abstraction ?A (clk_set ?A)\n       (\\<lambda>x. real (k x)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  finite (clkp_set A) \\<and>\n  finite (collect_clkvt (trans_of A)) \\<and>\n  (\\<forall>(uu_, m)\\<in>clkp_set A. m \\<in> \\<nat>) \\<and>\n  clk_set A \\<noteq> {} \\<and> - clk_set A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        valid_abstraction A (clk_set A)\n         (\\<lambda>x. real (k x)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  valid_abstraction A (clk_set A) (\\<lambda>x. real (k x))\n\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from finite_ta_Regions'[OF assms]"], ["proof (chain)\npicking this:\n  (\\<And>v n x.\n      Regions' (clk_set A) v n x \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain v n x where *: \"Regions' (clk_set A) v n x\""], ["proof (prove)\nusing this:\n  (\\<And>v n x.\n      Regions' (clk_set A) v n x \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>v n x.\n        Regions' (clk_set A) v n x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  Regions' (clk_set A) v n x\n\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Regions' (clk_set A) v n x", "interpret interp: Regions' \"clk_set A\" k v n x"], ["proof (prove)\nusing this:\n  Regions' (clk_set A) v n x\n\ngoal (1 subgoal):\n 1. Regions' (clk_set A) v n x", "."], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from interp.clock_numbering"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>k\\<le>n.\n     0 < k \\<longrightarrow> (\\<exists>c\\<in>clk_set A. v c = k)\n  \\<forall>c\\<in>clk_set A. v c \\<le> n", "have \"global_clock_numbering A v n\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>k\\<le>n.\n     0 < k \\<longrightarrow> (\\<exists>c\\<in>clk_set A. v c = k)\n  \\<forall>c\\<in>clk_set A. v c \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y)) \\<and>\n    (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n    (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))", "by blast"], ["proof (state)\nthis:\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with * k"], ["proof (chain)\npicking this:\n  Regions' (clk_set A) v n x\n  valid_abstraction A (clk_set A) (\\<lambda>x. real (k x))\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))", "show ?thesis"], ["proof (prove)\nusing this:\n  Regions' (clk_set A) v n x\n  valid_abstraction A (clk_set A) (\\<lambda>x. real (k x))\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition valid_dbm where \"valid_dbm M n \\<equiv> dbm_int M n \\<and> (\\<forall> i \\<le> n. M 0 i \\<le> \\<one>)\""], ["", "lemma dbm_positive:\n  assumes \"M 0 (v c) \\<le> \\<one>\" \"v c \\<le> n\" \"DBM_val_bounded v u M n\"\n  shows \"u c \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "from assms"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<le> \\<one>\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"dbm_entry_val u None (Some c) (M 0 (v c))\""], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  v c \\<le> n\n  Le (0::'a) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "with assms(1)"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))", "show ?thesis"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "proof (cases \"M 0 (v c)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 2. \\<And>x2.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 3. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "case 1"], ["proof (state)\nthis:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Le x1_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 2. \\<And>x2.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 3. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "then"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Le x1_", "show ?case"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Le x1_\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "unfolding less_eq neutral"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<preceq> Le (0::'a)\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Le x1_\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "using order_trans"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<preceq> Le (0::'a)\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Le x1_\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "by (fastforce dest!: le_dbm_le)"], ["proof (state)\nthis:\n  (0::'a) \\<le> u c\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 2. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 2. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "case 2"], ["proof (state)\nthis:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Lt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n        dbm_entry_val u None (Some c) (M 0 (v c));\n        M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> u c\n 2. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "then"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Lt x2_", "show ?case"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Lt x2_\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "unfolding less_eq neutral"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<preceq> Le (0::'a)\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = Lt x2_\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "by (auto dest!: lt_dbm_le) (meson less_trans neg_0_less_iff_less not_less)"], ["proof (state)\nthis:\n  (0::'a) \\<le> u c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "case 3"], ["proof (state)\nthis:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M 0 (v c) \\<le> \\<one>;\n     dbm_entry_val u None (Some c) (M 0 (v c));\n     M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> u c", "then"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<le> \\<one>\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "unfolding neutral less_eq dbm_le_def"], ["proof (prove)\nusing this:\n  M 0 (v c) \\<prec> Le (0::'a) \\<or> M 0 (v c) = Le (0::'a)\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> u c", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> u c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0::'a) \\<le> u c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valid_dbm_pos:\n  assumes \"valid_dbm M n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> \\<subseteq> {u. \\<forall> c. v c \\<le> n \\<longrightarrow> u c \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> {u. \\<forall>c.\n                       v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c}", "using dbm_positive assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M 0 (?v ?c) \\<le> \\<one>; ?v ?c \\<le> ?n;\n   ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) \\<le> ?u ?c\n  valid_dbm M n\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> {u. \\<forall>c.\n                       v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c}", "unfolding valid_dbm_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M 0 (?v ?c) \\<le> \\<one>; ?v ?c \\<le> ?n;\n   ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) \\<le> ?u ?c\n  dbm_int M n \\<and> (\\<forall>i\\<le>n. M 0 i \\<le> \\<one>)\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub>\n    \\<subseteq> {u. \\<forall>c.\n                       v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M 0 (?v ?c) \\<le> \\<one>; ?v ?c \\<le> ?n;\n   ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> (0::?'a) \\<le> ?u ?c\n  dbm_int M n \\<and> (\\<forall>i\\<le>n. M 0 i \\<le> \\<one>)\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M}\n    \\<subseteq> {u. \\<forall>c.\n                       v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c}", "by fast"], ["", "lemma (in Regions') V_alt_def:\n  shows \"{u. \\<forall> c. v c > 0 \\<and> v c \\<le> n \\<longrightarrow> u c \\<ge> 0} = V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {u. \\<forall>c.\n           0 < v c \\<and> v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c} =\n    V", "unfolding V_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {u. \\<forall>c.\n           0 < v c \\<and> v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c} =\n    {v. \\<forall>x\\<in>X. (0::'a) \\<le> v x}", "using clock_numbering"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c\\<in>X. v c = k)\n  \\<forall>c\\<in>X. v c \\<le> n\n\ngoal (1 subgoal):\n 1. {u. \\<forall>c.\n           0 < v c \\<and> v c \\<le> n \\<longrightarrow> (0::'a) \\<le> u c} =\n    {v. \\<forall>x\\<in>X. (0::'a) \\<le> v x}", "by metis"], ["", "text \\<open>\n  An example of obtaining concrete models from our formalizations.\n\\<close>"], ["", "lemma steps_z_norm_sound_spec:\n  assumes \"finite_ta A\"\n  obtains k v n where\n  \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l',D'\\<rangle> \\<and> valid_dbm D n \\<and> [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n  \\<longrightarrow> (\\<exists>Z. A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l',Z\\<rangle> \\<and> Z \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from finite_ta_RegionsD[OF assms(1)]"], ["proof (chain)\npicking this:\n  (\\<And>k v n x.\n      \\<lbrakk>Regions' (clk_set A) v n x;\n       valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n       (\\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y)) \\<and>\n       (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n       (\\<forall>k\\<le>n.\n           0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain k :: \"'b \\<Rightarrow> nat\" and v n x where *:\n    \"Regions' (clk_set A) v n x\" \"valid_abstraction A (clk_set A) k\" \"global_clock_numbering A v n\""], ["proof (prove)\nusing this:\n  (\\<And>k v n x.\n      \\<lbrakk>Regions' (clk_set A) v n x;\n       valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n       (\\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y)) \\<and>\n       (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n       (\\<forall>k\\<le>n.\n           0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>v n x k.\n        \\<lbrakk>Regions' (clk_set A) v n x;\n         valid_abstraction A (clk_set A) (\\<lambda>x. real (k x));\n         (\\<forall>c.\n             0 < v c \\<and>\n             (\\<forall>x y.\n                 v x \\<le> n \\<and>\n                 v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                 x = y)) \\<and>\n         (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n         (\\<forall>k\\<le>n.\n             0 < k \\<longrightarrow> (\\<exists>c. v c = k))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  Regions' (clk_set A) v n x\n  valid_abstraction A (clk_set A) (\\<lambda>x. real (k x))\n  (\\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y)) \\<and>\n  (\\<forall>c\\<in>clk_set A. v c \\<le> n) \\<and>\n  (\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k))\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from this(1)"], ["proof (chain)\npicking this:\n  Regions' (clk_set A) v n x", "interpret interp: Regions' \"clk_set A\" k v n x"], ["proof (prove)\nusing this:\n  Regions' (clk_set A) v n x\n\ngoal (1 subgoal):\n 1. Regions' (clk_set A) v n x", "."], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define v' where \"v' i = (if i \\<le> n then (THE c. c \\<in> clk_set A \\<and> v c = i) else x)\" for i"], ["proof (state)\nthis:\n  v' ?i =\n  (if ?i \\<le> n then THE c. c \\<in> clk_set A \\<and> v c = ?i else x)\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  v' ?i =\n  (if ?i \\<le> n then THE c. c \\<in> clk_set A \\<and> v c = ?i else x)\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "fix l D l' D'"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "assume step: \"A \\<turnstile> \\<langle>l,D\\<rangle> \\<leadsto>\\<^bsub>(k o v'),v,n\\<^esub>* \\<langle>l',D'\\<rangle>\"\n    and valid: \"valid_dbm D n\" and non_empty: \"[D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\""], ["proof (state)\nthis:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                     v'),v,n\\<^esub>* \\<langle>l', D'\\<rangle>\n  valid_dbm D n\n  [D']\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from valid_dbm_pos[OF valid] interp.V_alt_def"], ["proof (chain)\npicking this:\n  [D]\\<^bsub>?v,n\\<^esub>\n  \\<subseteq> {u. \\<forall>c. ?v c \\<le> n \\<longrightarrow> 0 \\<le> u c}\n  {u. \\<forall>c.\n         0 < v c \\<and> v c \\<le> n \\<longrightarrow> (0::?'a) \\<le> u c} =\n  interp.V", "have \"[D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V\""], ["proof (prove)\nusing this:\n  [D]\\<^bsub>?v,n\\<^esub>\n  \\<subseteq> {u. \\<forall>c. ?v c \\<le> n \\<longrightarrow> 0 \\<le> u c}\n  {u. \\<forall>c.\n         0 < v c \\<and> v c \\<le> n \\<longrightarrow> (0::?'a) \\<le> u c} =\n  interp.V\n\ngoal (1 subgoal):\n 1. [D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V", "by blast"], ["proof (state)\nthis:\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with valid"], ["proof (chain)\npicking this:\n  valid_dbm D n\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V", "have valid: \"interp.valid_dbm D\""], ["proof (prove)\nusing this:\n  valid_dbm D n\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V\n\ngoal (1 subgoal):\n 1. interp.valid_dbm D", "unfolding valid_dbm_def"], ["proof (prove)\nusing this:\n  dbm_int D n \\<and> (\\<forall>i\\<le>n. D 0 i \\<le> \\<one>)\n  [D]\\<^bsub>v,n\\<^esub> \\<subseteq> interp.V\n\ngoal (1 subgoal):\n 1. interp.valid_dbm D", "by auto"], ["proof (state)\nthis:\n  interp.valid_dbm D\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from step"], ["proof (chain)\npicking this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                     v'),v,n\\<^esub>* \\<langle>l', D'\\<rangle>", "have \"interp.steps_z_norm' A l D l' D'\""], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                     v'),v,n\\<^esub>* \\<langle>l', D'\\<rangle>\n\ngoal (1 subgoal):\n 1. interp.steps_z_norm' A l D l' D'", "unfolding v'_def interp.beta_interp.v'_def"], ["proof (prove)\nusing this:\n  A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                     (\\<lambda>i.\n                         if i \\<le> n\n                         then THE c. c \\<in> clk_set A \\<and> v c = i\n                         else x)),v,n\\<^esub>* \\<langle>l', D'\\<rangle>\n\ngoal (1 subgoal):\n 1. A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                       (\\<lambda>i.\n                           if i \\<le> n\n                           then THE c. c \\<in> clk_set A \\<and> v c = i\n                           else x)),v,n\\<^esub>* \\<langle>l', D'\\<rangle>", "."], ["proof (state)\nthis:\n  interp.steps_z_norm' A l D l' D'\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "note this = interp.steps_z_norm_sound'[OF this *(3,2) valid non_empty]"], ["proof (state)\nthis:\n  \\<exists>Z.\n     A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n     Z \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<turnstile> \\<langle>?la3, ?Da3\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                                    v'),v,n\\<^esub>* \\<langle>?l'a3, ?D'a3\\<rangle>;\n   valid_dbm ?Da3 n; [?D'a3]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Z.\n                       A \\<turnstile> \\<langle>?la3, [?Da3]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>?l'a3, Z\\<rangle> \\<and>\n                       Z \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k v n.\n        A \\<turnstile> \\<langle>l, D\\<rangle> \\<leadsto>\\<^bsub>k,v,n\\<^esub>* \\<langle>l', D'\\<rangle> \\<and>\n        valid_dbm D n \\<and>\n        [D']\\<^bsub>v,n\\<^esub> \\<noteq> {} \\<longrightarrow>\n        (\\<exists>Z.\n            A \\<turnstile> \\<langle>l, [D]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>l', Z\\<rangle> \\<and>\n            Z \\<noteq> {}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<turnstile> \\<langle>?la3, ?Da3\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                                    v'),v,n\\<^esub>* \\<langle>?l'a3, ?D'a3\\<rangle>;\n   valid_dbm ?Da3 n; [?D'a3]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Z.\n                       A \\<turnstile> \\<langle>?la3, [?Da3]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>?l'a3, Z\\<rangle> \\<and>\n                       Z \\<noteq> {}", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<turnstile> \\<langle>?la3, ?Da3\\<rangle> \\<leadsto>\\<^bsub>(k \\<circ>\n                                    v'),v,n\\<^esub>* \\<langle>?l'a3, ?D'a3\\<rangle>;\n   valid_dbm ?Da3 n; [?D'a3]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Z.\n                       A \\<turnstile> \\<langle>?la3, [?Da3]\\<^bsub>v,n\\<^esub>\\<rangle> \\<leadsto>* \\<langle>?l'a3, Z\\<rangle> \\<and>\n                       Z \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by (blast intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}