{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/DBM.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma dbm_le_dbm_min:\n  \"a \\<preceq> b \\<Longrightarrow> a = dmin a b\"", "lemma dbm_lt_asym:\n  assumes \"e \\<prec> f\"\n  shows \"~ f \\<prec> e\"", "lemma dbm_le_dbm_min2:\n  \"a \\<preceq> b \\<Longrightarrow> a = dmin b a\"", "lemma dmb_le_dbm_entry_bound_inf:\n  \"a \\<preceq> b \\<Longrightarrow> a = \\<infinity> \\<Longrightarrow> b = \\<infinity>\"", "lemma dbm_not_lt_eq: \"\\<not> a \\<prec> b \\<Longrightarrow> \\<not> b \\<prec> a \\<Longrightarrow> a = b\"", "lemma dbm_not_lt_impl: \"\\<not> a \\<prec> b \\<Longrightarrow> b \\<prec> a \\<or> a = b\"", "lemma \"dmin a b = dmin b a\"", "lemma dbm_lt_trans: \"a \\<prec> b \\<Longrightarrow> b \\<prec> c \\<Longrightarrow> a \\<prec> c\"", "lemma aux_3: \"\\<not> a \\<prec> b \\<Longrightarrow> \\<not> b \\<prec> c \\<Longrightarrow> a \\<prec> c \\<Longrightarrow> c = a\"", "lemma dbm_lt_asymmetric[simp]: \"x \\<prec> y \\<Longrightarrow> y \\<prec> x \\<Longrightarrow> False\"", "lemma le_dbm_le: \"Le a \\<preceq> Le b \\<Longrightarrow> a \\<le> b\"", "lemma le_dbm_lt: \"Le a \\<preceq> Lt b \\<Longrightarrow> a < b\"", "lemma lt_dbm_le: \"Lt a \\<preceq> Le b \\<Longrightarrow> a \\<le> b\"", "lemma lt_dbm_lt: \"Lt a \\<preceq> Lt b \\<Longrightarrow> a \\<le> b\"", "lemma not_dbm_le_le_impl: \"\\<not> Le a \\<prec> Le b \\<Longrightarrow> a \\<ge> b\"", "lemma not_dbm_lt_le_impl: \"\\<not> Lt a \\<prec> Le b \\<Longrightarrow> a > b\"", "lemma not_dbm_lt_lt_impl: \"\\<not> Lt a \\<prec> Lt b \\<Longrightarrow> a \\<ge> b\"", "lemma not_dbm_le_lt_impl: \"\\<not> Le a \\<prec> Lt b \\<Longrightarrow> a \\<ge> b\"", "lemma aux_4: \"x \\<prec> y \\<Longrightarrow> \\<not> dbm_add x z \\<prec> dbm_add y z \\<Longrightarrow> dbm_add x z = dbm_add y z\"", "lemma aux_5: \"\\<not> x \\<prec> y \\<Longrightarrow> dbm_add x z \\<prec> dbm_add y z \\<Longrightarrow> dbm_add y z = dbm_add x z\"", "lemma aux_42: \"x \\<prec> y \\<Longrightarrow> \\<not> dbm_add z x \\<prec> dbm_add z y \\<Longrightarrow> dbm_add z x = dbm_add z y\"", "lemma aux_52: \"\\<not> x \\<prec> y \\<Longrightarrow> dbm_add z x \\<prec> dbm_add z y \\<Longrightarrow> dbm_add z y = dbm_add z x\"", "lemma dbm_add_not_inf:\n  \"a \\<noteq> \\<infinity> \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> dbm_add a b \\<noteq> \\<infinity>\"", "lemma dbm_le_not_inf:\n  \"a \\<preceq> b \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> a \\<noteq> \\<infinity>\"", "lemma Le_Le_dbm_lt_D[dest]: \"Le a \\<prec> Lt b \\<Longrightarrow> a < b\"", "lemma Le_Lt_dbm_lt_D[dest]: \"Le a \\<prec> Le b \\<Longrightarrow> a < b\"", "lemma Lt_Le_dbm_lt_D[dest]: \"Lt a \\<prec> Le b \\<Longrightarrow> a \\<le> b\"", "lemma Lt_Lt_dbm_lt_D[dest]: \"Lt a \\<prec> Lt b \\<Longrightarrow> a < b\"", "lemma Le_le_LeI[intro]: \"a \\<le> b \\<Longrightarrow> Le a \\<le> Le b\"", "lemma Lt_le_LeI[intro]: \"a \\<le> b \\<Longrightarrow> Lt a \\<le> Le b\"", "lemma Lt_le_LtI[intro]: \"a \\<le> b \\<Longrightarrow> Lt a \\<le> Lt b\"", "lemma Le_le_LtI[intro]: \"a < b \\<Longrightarrow> Le a \\<le> Lt b\"", "lemma Lt_lt_LeI: \"x \\<le> y \\<Longrightarrow> Lt x < Le y\"", "lemma Le_le_LeD[dest]: \"Le a \\<le> Le b \\<Longrightarrow> a \\<le> b\"", "lemma Le_le_LtD[dest]: \"Le a \\<le> Lt b \\<Longrightarrow> a < b\"", "lemma Lt_le_LeD[dest]: \"Lt a \\<le> Le b \\<Longrightarrow> a \\<le> b\"", "lemma Lt_le_LtD[dest]: \"Lt a \\<le> Lt b \\<Longrightarrow> a \\<le> b\"", "lemma inf_not_le_Le[simp]: \"\\<infinity> \\<le> Le x = False\"", "lemma inf_not_le_Lt[simp]: \"\\<infinity> \\<le> Lt x = False\"", "lemma inf_not_lt[simp]: \"\\<infinity> \\<prec> x = False\"", "lemma any_le_inf: \"x \\<le> \\<infinity>\"", "lemma dbm_entry_val_add_1: \"dbm_entry_val u (Some c) (Some d) a \\<Longrightarrow>  dbm_entry_val u (Some d) None b\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (dbm_add a b)\"", "lemma dbm_entry_val_add_2: \"dbm_entry_val u None (Some c) a \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) b\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (dbm_add a b)\"", "lemma dbm_entry_val_add_3:\n  \"dbm_entry_val u (Some c) (Some d) a \\<Longrightarrow>  dbm_entry_val u (Some d) (Some e) b\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (dbm_add a b)\"", "lemma dbm_entry_val_add_4:\n  \"dbm_entry_val u (Some c) None a \\<Longrightarrow> dbm_entry_val u None (Some d) b\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (dbm_add a b)\"", "lemma DBM_val_bounded_len_1'_aux:\n  assumes \"DBM_val_bounded v u m n\" \"v c \\<le> n\" \"\\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c) None (len m (v c) 0 vs)\"", "lemma DBM_val_bounded_len_3'_aux:\n  \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> v d \\<le> n \\<Longrightarrow> \\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) vs)\"", "lemma DBM_val_bounded_len_2'_aux:\n  \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\n  \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)\"", "lemma cnt_0_D:\n  \"cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs\"", "lemma cnt_at_most_1_D:\n  \"cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow> x \\<notin> set xs \\<and> x \\<notin> set ys\"", "lemma nat_list_0 [intro]:\n  \"x \\<in> set xs \\<Longrightarrow> 0 \\<notin> set (xs :: nat list) \\<Longrightarrow> x > 0\"", "lemma DBM_val_bounded_len':\n  fixes v\n  defines \"vo \\<equiv> \\<lambda> k. if k = 0 then None else Some (SOME c. v c = k)\"\n  assumes \"DBM_val_bounded v u m n\" \"cnt 0 (i # j # vs) \\<le> 1\"\n          \"\\<forall> k \\<in> set (i # j # vs). k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (vo i) (vo j) (len m i j vs)\"", "lemma DBM_val_bounded_len'1:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"0 \\<notin> set vs\" \"v c \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c) None (len m (v c) 0 vs)\"", "lemma DBM_val_bounded_len'2:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"0 \\<notin> set vs\" \"v c \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u None (Some c) (len m 0 (v c) vs)\"", "lemma DBM_val_bounded_len'3:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"cnt 0 vs \\<le> 1\" \"v c1 \\<le> n\" \"v c2 \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\"", "lemma DBM_val_bounded_len'':\n  fixes v\n  defines \"vo \\<equiv> \\<lambda> k. if k = 0 then None else Some (SOME c. v c = k)\"\n  assumes \"DBM_val_bounded v u m n\" \"i \\<noteq> 0 \\<or> j \\<noteq> 0\"\n          \"\\<forall> k \\<in> set (i # j # vs). k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (vo i) (vo j) (len m i j vs)\"", "lemma DBM_val_bounded_len_1: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u (Some c) None (len m (v c) 0 (map v cs))\"", "lemma DBM_val_bounded_len_3: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> v d \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v cs))\"", "lemma DBM_val_bounded_len_2: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))\""], "translations": [["", "lemma dbm_le_dbm_min:\n  \"a \\<preceq> b \\<Longrightarrow> a = dmin a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<preceq> b \\<Longrightarrow> a = dmin a b", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<prec> b \\<or> a = b \\<Longrightarrow> a = dmin a b", "by auto"], ["", "lemma dbm_lt_asym:\n  assumes \"e \\<prec> f\"\n  shows \"~ f \\<prec> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> f \\<prec> e", "using assms"], ["proof (prove)\nusing this:\n  e \\<prec> f\n\ngoal (1 subgoal):\n 1. \\<not> f \\<prec> e", "proof (safe, cases e f rule: dbm_lt.cases, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt uu_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>uv_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le uv_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Lt uu_\n  f = \\<infinity>\n\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt uu_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>uv_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le uv_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 1(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Lt uu_\n  f = \\<infinity>\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le uv_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le uv_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 2"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Le uv_\n  f = \\<infinity>\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le uv_;\n        f = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 2(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Le uv_\n  f = \\<infinity>\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 3"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Le a_\n  f = Le b_\n  a_ < b_\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 3(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Le a_\n  f = Le b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 4"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Le a_\n  f = Lt b_\n  a_ < b_\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Le a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 4(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Le a_\n  f = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 5"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Lt a_\n  f = Le b_\n  a_ \\<le> b_\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Le b;\n        a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 5(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Lt a_\n  f = Le b_\n  a_ \\<le> b_\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "case 6"], ["proof (state)\nthis:\n  e \\<prec> f\n  f \\<prec> e\n  e = Lt a_\n  f = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>e \\<prec> f; f \\<prec> e; e = Lt a; f = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  f \\<prec> e", "show ?case"], ["proof (prove)\nusing this:\n  f \\<prec> e\n\ngoal (1 subgoal):\n 1. False", "using 6(3-)"], ["proof (prove)\nusing this:\n  f \\<prec> e\n  e = Lt a_\n  f = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. False", "by (cases f e rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_le_dbm_min2:\n  \"a \\<preceq> b \\<Longrightarrow> a = dmin b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<preceq> b \\<Longrightarrow> a = dmin b a", "using dbm_lt_asym"], ["proof (prove)\nusing this:\n  ?e \\<prec> ?f \\<Longrightarrow> \\<not> ?f \\<prec> ?e\n\ngoal (1 subgoal):\n 1. a \\<preceq> b \\<Longrightarrow> a = dmin b a", "by (auto simp: dbm_le_def)"], ["", "lemma dmb_le_dbm_entry_bound_inf:\n  \"a \\<preceq> b \\<Longrightarrow> a = \\<infinity> \\<Longrightarrow> b = \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<preceq> b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> b = \\<infinity>", "apply (auto simp: dbm_le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> b = \\<infinity>", "apply (cases rule: dbm_lt.cases)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> ?a1.6 \\<prec> ?a2.6\n 2. \\<And>uu_.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Lt uu_;\n        ?a2.6 = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>\n 3. \\<And>uv_.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Le uv_;\n        ?a2.6 = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>\n 4. \\<And>aa ba.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Le aa;\n        ?a2.6 = Le ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>\n 5. \\<And>aa ba.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Le aa;\n        ?a2.6 = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>\n 6. \\<And>aa ba.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Lt aa;\n        ?a2.6 = Le ba; aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>\n 7. \\<And>aa ba.\n       \\<lbrakk>a = \\<infinity>; \\<infinity> \\<prec> b; ?a1.6 = Lt aa;\n        ?a2.6 = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> b = \\<infinity>", "by auto"], ["", "lemma dbm_not_lt_eq: \"\\<not> a \\<prec> b \\<Longrightarrow> \\<not> b \\<prec> a \\<Longrightarrow> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> a\\<rbrakk>\n    \\<Longrightarrow> a = b", "apply (cases a)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> a; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> a = b\n 2. \\<And>x2.\n       \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> a; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> a = b\n 3. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> a;\n     a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> a = b", "apply (cases b, fastforce+)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dbm_not_lt_impl: \"\\<not> a \\<prec> b \\<Longrightarrow> b \\<prec> a \\<or> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> a \\<prec> b \\<Longrightarrow> b \\<prec> a \\<or> a = b", "using dbm_not_lt_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?a \\<prec> ?b; \\<not> ?b \\<prec> ?a\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. \\<not> a \\<prec> b \\<Longrightarrow> b \\<prec> a \\<or> a = b", "by auto"], ["", "lemma \"dmin a b = dmin b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmin a b = dmin b a", "proof (cases \"a \\<prec> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a\n 2. \\<not> a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a", "case True"], ["proof (state)\nthis:\n  a \\<prec> b\n\ngoal (2 subgoals):\n 1. a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a\n 2. \\<not> a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<prec> b\n\ngoal (1 subgoal):\n 1. dmin a b = dmin b a", "by (simp add: dbm_lt_asym)"], ["proof (state)\nthis:\n  dmin a b = dmin b a\n\ngoal (1 subgoal):\n 1. \\<not> a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<prec> b\n\ngoal (1 subgoal):\n 1. \\<not> a \\<prec> b \\<Longrightarrow> dmin a b = dmin b a", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> a \\<prec> b\n\ngoal (1 subgoal):\n 1. dmin a b = dmin b a", "by (simp add: dbm_not_lt_eq)"], ["proof (state)\nthis:\n  dmin a b = dmin b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_lt_trans: \"a \\<prec> b \\<Longrightarrow> b \\<prec> c \\<Longrightarrow> a \\<prec> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<prec> b; b \\<prec> c\\<rbrakk> \\<Longrightarrow> a \\<prec> c", "proof (cases a b rule: dbm_lt.cases, goal_cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>a \\<prec> b; b \\<prec> c\\<rbrakk> \\<Longrightarrow> a \\<prec> b\n 2. \\<And>uu_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt uu_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 6. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 7. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 1"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n\ngoal (7 subgoals):\n 1. \\<lbrakk>a \\<prec> b; b \\<prec> c\\<rbrakk> \\<Longrightarrow> a \\<prec> b\n 2. \\<And>uu_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt uu_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 6. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 7. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<prec> b\n  b \\<prec> c\n\ngoal (1 subgoal):\n 1. a \\<prec> b", "by simp"], ["proof (state)\nthis:\n  a \\<prec> b\n\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt uu_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 6. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt uu_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 6. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 2"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Lt uu_\n  b = \\<infinity>\n\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt uu_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 6. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Lt uu_\n  b = \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Lt uu_\n  b = \\<infinity>\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) simp+"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 3"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Le uv_\n  b = \\<infinity>\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le uv_;\n        b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 5. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Le uv_\n  b = \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Le uv_\n  b = \\<infinity>\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) simp+"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal (4 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 4"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Le a_\n  b = Le b_\n  a_ < b_\n\ngoal (4 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Le ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 4. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Le a_\n  b = Le b_\n  a_ < b_", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Le a_\n  b = Le b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal (3 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 5"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Le a_\n  b = Lt b_\n  a_ < b_\n\ngoal (3 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Le aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 3. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Le a_\n  b = Lt b_\n  a_ < b_", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Le a_\n  b = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 6"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Lt a_\n  b = Le b_\n  a_ \\<le> b_\n\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Le ba;\n        aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c\n 2. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Lt a_\n  b = Le b_\n  a_ \\<le> b_", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Lt a_\n  b = Le b_\n  a_ \\<le> b_\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal (1 subgoal):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "case 7"], ["proof (state)\nthis:\n  a \\<prec> b\n  b \\<prec> c\n  a = Lt a_\n  b = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. \\<And>aa ba.\n       \\<lbrakk>a \\<prec> b; b \\<prec> c; a = Lt aa; b = Lt ba;\n        aa < ba\\<rbrakk>\n       \\<Longrightarrow> a \\<prec> c", "from this(2-)"], ["proof (chain)\npicking this:\n  b \\<prec> c\n  a = Lt a_\n  b = Lt b_\n  a_ < b_", "show ?case"], ["proof (prove)\nusing this:\n  b \\<prec> c\n  a = Lt a_\n  b = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. a \\<prec> c", "by (cases rule: dbm_lt.cases) auto"], ["proof (state)\nthis:\n  a \\<prec> c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux_3: \"\\<not> a \\<prec> b \\<Longrightarrow> \\<not> b \\<prec> c \\<Longrightarrow> a \\<prec> c \\<Longrightarrow> c = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c\\<rbrakk>\n    \\<Longrightarrow> c = a", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c\\<rbrakk>\n    \\<Longrightarrow> c = a", "case 1"], ["proof (state)\nthis:\n  \\<not> a \\<prec> b\n  \\<not> b \\<prec> c\n  a \\<prec> c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c\\<rbrakk>\n    \\<Longrightarrow> c = a", "thus ?case"], ["proof (prove)\nusing this:\n  \\<not> a \\<prec> b\n  \\<not> b \\<prec> c\n  a \\<prec> c\n\ngoal (1 subgoal):\n 1. c = a", "proof (cases \"c \\<prec> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a\n 2. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "case True"], ["proof (state)\nthis:\n  c \\<prec> b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a\n 2. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "with \\<open>a \\<prec> c\\<close>"], ["proof (chain)\npicking this:\n  a \\<prec> c\n  c \\<prec> b", "have \"a \\<prec> b\""], ["proof (prove)\nusing this:\n  a \\<prec> c\n  c \\<prec> b\n\ngoal (1 subgoal):\n 1. a \\<prec> b", "by (rule dbm_lt_trans)"], ["proof (state)\nthis:\n  a \\<prec> b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a\n 2. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<prec> b\n\ngoal (1 subgoal):\n 1. c = a", "using 1"], ["proof (prove)\nusing this:\n  a \\<prec> b\n  \\<not> a \\<prec> b\n  \\<not> b \\<prec> c\n  a \\<prec> c\n\ngoal (1 subgoal):\n 1. c = a", "by auto"], ["proof (state)\nthis:\n  c = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "case False"], ["proof (state)\nthis:\n  \\<not> c \\<prec> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<prec> b; \\<not> b \\<prec> c; a \\<prec> c;\n     \\<not> c \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c = a", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> c \\<prec> b\n\ngoal (1 subgoal):\n 1. c = a", "using dbm_not_lt_eq 1"], ["proof (prove)\nusing this:\n  \\<not> c \\<prec> b\n  \\<lbrakk>\\<not> ?a \\<prec> ?b; \\<not> ?b \\<prec> ?a\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n  \\<not> a \\<prec> b\n  \\<not> b \\<prec> c\n  a \\<prec> c\n\ngoal (1 subgoal):\n 1. c = a", "by auto"], ["proof (state)\nthis:\n  c = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c = a\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive_cases[elim!]: \"\\<infinity> \\<prec> x\""], ["", "lemma dbm_lt_asymmetric[simp]: \"x \\<prec> y \\<Longrightarrow> y \\<prec> x \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<prec> y; y \\<prec> x\\<rbrakk> \\<Longrightarrow> False", "by (cases x y rule: dbm_lt.cases) (auto elim: dbm_lt.cases)"], ["", "lemma le_dbm_le: \"Le a \\<preceq> Le b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<preceq> Le b \\<Longrightarrow> a \\<le> b", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Le b \\<or> Le a = Le b \\<Longrightarrow> a \\<le> b", "by (auto elim: dbm_lt.cases)"], ["", "lemma le_dbm_lt: \"Le a \\<preceq> Lt b \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<preceq> Lt b \\<Longrightarrow> a < b", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Lt b \\<or> Le a = Lt b \\<Longrightarrow> a < b", "by (auto elim: dbm_lt.cases)"], ["", "lemma lt_dbm_le: \"Lt a \\<preceq> Le b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<preceq> Le b \\<Longrightarrow> a \\<le> b", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Le b \\<or> Lt a = Le b \\<Longrightarrow> a \\<le> b", "by (auto elim: dbm_lt.cases)"], ["", "lemma lt_dbm_lt: \"Lt a \\<preceq> Lt b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<preceq> Lt b \\<Longrightarrow> a \\<le> b", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Lt b \\<or> Lt a = Lt b \\<Longrightarrow> a \\<le> b", "by (auto elim: dbm_lt.cases)"], ["", "lemma not_dbm_le_le_impl: \"\\<not> Le a \\<prec> Le b \\<Longrightarrow> a \\<ge> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Le a \\<prec> Le b \\<Longrightarrow> b \\<le> a", "by (metis dbm_lt.intros(3) not_less)"], ["", "lemma not_dbm_lt_le_impl: \"\\<not> Lt a \\<prec> Le b \\<Longrightarrow> a > b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Lt a \\<prec> Le b \\<Longrightarrow> b < a", "by (metis dbm_lt.intros(5) not_less)"], ["", "lemma not_dbm_lt_lt_impl: \"\\<not> Lt a \\<prec> Lt b \\<Longrightarrow> a \\<ge> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Lt a \\<prec> Lt b \\<Longrightarrow> b \\<le> a", "by (metis dbm_lt.intros(6) not_less)"], ["", "lemma not_dbm_le_lt_impl: \"\\<not> Le a \\<prec> Lt b \\<Longrightarrow> a \\<ge> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Le a \\<prec> Lt b \\<Longrightarrow> b \\<le> a", "by (metis dbm_lt.intros(4) not_less)"], ["", "(*>*)\n\n(*<*)"], ["", "fun dbm_add :: \"('t::time) DBMEntry \\<Rightarrow> 't DBMEntry \\<Rightarrow> 't DBMEntry\" (infixl \"\\<otimes>\" 70)\nwhere\n  \"dbm_add \\<infinity>     _      = \\<infinity>\" |\n  \"dbm_add _      \\<infinity>     = \\<infinity>\" |\n  \"dbm_add (Le a) (Le b) = (Le (a+b))\" |\n  \"dbm_add (Le a) (Lt b) = (Lt (a+b))\" |\n  \"dbm_add (Lt a) (Le b) = (Lt (a+b))\" |\n  \"dbm_add (Lt a) (Lt b) = (Lt (a+b))\""], ["", "thm dbm_add.simps"], ["", "lemma aux_4: \"x \\<prec> y \\<Longrightarrow> \\<not> dbm_add x z \\<prec> dbm_add y z \\<Longrightarrow> dbm_add x z = dbm_add y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<prec> y;\n     \\<not> x \\<otimes> z \\<prec> y \\<otimes> z\\<rbrakk>\n    \\<Longrightarrow> x \\<otimes> z = y \\<otimes> z", "by (cases x y rule: dbm_lt.cases) ((cases z), auto)+"], ["", "lemma aux_5: \"\\<not> x \\<prec> y \\<Longrightarrow> dbm_add x z \\<prec> dbm_add y z \\<Longrightarrow> dbm_add y z = dbm_add x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     x \\<otimes> z \\<prec> y \\<otimes> z\\<rbrakk>\n    \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     x \\<otimes> z \\<prec> y \\<otimes> z\\<rbrakk>\n    \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "assume lt: \"dbm_add x z \\<prec> dbm_add y z\" \"\\<not> x \\<prec> y\""], ["proof (state)\nthis:\n  x \\<otimes> z \\<prec> y \\<otimes> z\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     x \\<otimes> z \\<prec> y \\<otimes> z\\<rbrakk>\n    \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "hence \"x = y \\<or> y \\<prec> x\""], ["proof (prove)\nusing this:\n  x \\<otimes> z \\<prec> y \\<otimes> z\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. x = y \\<or> y \\<prec> x", "by (auto simp: dbm_not_lt_eq)"], ["proof (state)\nthis:\n  x = y \\<or> y \\<prec> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     x \\<otimes> z \\<prec> y \\<otimes> z\\<rbrakk>\n    \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y \\<or> y \\<prec> x\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. y \\<prec> x \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "assume \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. y \\<prec> x \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by simp"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "assume \"y \\<prec> x\""], ["proof (state)\nthis:\n  y \\<prec> x\n\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<prec> x\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "proof (cases y x rule: dbm_lt.cases, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>y = Lt uu_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 6. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 1"], ["proof (state)\nthis:\n  y = Lt uu_\n  x = \\<infinity>\n\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>y = Lt uu_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 6. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt uu_\n  x = \\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using lt"], ["proof (prove)\nusing this:\n  y = Lt uu_\n  x = \\<infinity>\n  x \\<otimes> z \\<prec> y \\<otimes> z\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by auto"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 2"], ["proof (state)\nthis:\n  y = Le uv_\n  x = \\<infinity>\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le uv_\n  x = \\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using lt"], ["proof (prove)\nusing this:\n  y = Le uv_\n  x = \\<infinity>\n  x \\<otimes> z \\<prec> y \\<otimes> z\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by auto"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 3"], ["proof (state)\nthis:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  x \\<otimes> z \\<prec> y \\<otimes> z\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 4"], ["proof (state)\nthis:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  x \\<otimes> z \\<prec> y \\<otimes> z\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 5"], ["proof (state)\nthis:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  x \\<otimes> z \\<prec> y \\<otimes> z\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "case 6"], ["proof (state)\nthis:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> y \\<otimes> z = x \\<otimes> z", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  x \\<otimes> z \\<prec> y \\<otimes> z\n\ngoal (1 subgoal):\n 1. y \\<otimes> z = x \\<otimes> z", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<otimes> z = x \\<otimes> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux_42: \"x \\<prec> y \\<Longrightarrow> \\<not> dbm_add z x \\<prec> dbm_add z y \\<Longrightarrow> dbm_add z x = dbm_add z y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<prec> y;\n     \\<not> z \\<otimes> x \\<prec> z \\<otimes> y\\<rbrakk>\n    \\<Longrightarrow> z \\<otimes> x = z \\<otimes> y", "by (cases x y rule: dbm_lt.cases) ((cases z), auto)+"], ["", "lemma aux_52: \"\\<not> x \\<prec> y \\<Longrightarrow> dbm_add z x \\<prec> dbm_add z y \\<Longrightarrow> dbm_add z y = dbm_add z x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     z \\<otimes> x \\<prec> z \\<otimes> y\\<rbrakk>\n    \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     z \\<otimes> x \\<prec> z \\<otimes> y\\<rbrakk>\n    \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "assume lt: \"dbm_add z x \\<prec> dbm_add z y\" \"\\<not> x \\<prec> y\""], ["proof (state)\nthis:\n  z \\<otimes> x \\<prec> z \\<otimes> y\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     z \\<otimes> x \\<prec> z \\<otimes> y\\<rbrakk>\n    \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "hence \"x = y \\<or> y \\<prec> x\""], ["proof (prove)\nusing this:\n  z \\<otimes> x \\<prec> z \\<otimes> y\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. x = y \\<or> y \\<prec> x", "by (auto simp: dbm_not_lt_eq)"], ["proof (state)\nthis:\n  x = y \\<or> y \\<prec> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<prec> y;\n     z \\<otimes> x \\<prec> z \\<otimes> y\\<rbrakk>\n    \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y \\<or> y \\<prec> x\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. y \\<prec> x \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "assume \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. y \\<prec> x \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by simp"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "assume \"y \\<prec> x\""], ["proof (state)\nthis:\n  y \\<prec> x\n\ngoal (1 subgoal):\n 1. y \\<prec> x \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<prec> x\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "proof (cases y x rule: dbm_lt.cases, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>y = Lt uu_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 6. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 1"], ["proof (state)\nthis:\n  y = Lt uu_\n  x = \\<infinity>\n\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>y = Lt uu_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 6. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt uu_\n  x = \\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using lt"], ["proof (prove)\nusing this:\n  y = Lt uu_\n  x = \\<infinity>\n  z \\<otimes> x \\<prec> z \\<otimes> y\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 2"], ["proof (state)\nthis:\n  y = Le uv_\n  x = \\<infinity>\n\ngoal (5 subgoals):\n 1. \\<And>uv_.\n       \\<lbrakk>y = Le uv_; x = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 5. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le uv_\n  x = \\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using lt"], ["proof (prove)\nusing this:\n  y = Le uv_\n  x = \\<infinity>\n  z \\<otimes> x \\<prec> z \\<otimes> y\n  \\<not> x \\<prec> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 3"], ["proof (state)\nthis:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Le b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 4. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Le b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  z \\<otimes> x \\<prec> z \\<otimes> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 4"], ["proof (state)\nthis:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Le a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 3. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Le a_\n  x = Lt b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  z \\<otimes> x \\<prec> z \\<otimes> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 5"], ["proof (state)\nthis:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Le b; a \\<le> b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x\n 2. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Le b_\n  a_ \\<le> b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  z \\<otimes> x \\<prec> z \\<otimes> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "case 6"], ["proof (state)\nthis:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>y = Lt a; x = Lt b; a < b\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes> y = z \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "using dbm_lt_asymmetric lt(1)"], ["proof (prove)\nusing this:\n  y = Lt a_\n  x = Lt b_\n  a_ < b_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n  z \\<otimes> x \\<prec> z \\<otimes> y\n\ngoal (1 subgoal):\n 1. z \\<otimes> y = z \\<otimes> x", "by (cases z) fastforce+"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<otimes> y = z \\<otimes> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_add_not_inf:\n  \"a \\<noteq> \\<infinity> \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> dbm_add a b \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> \\<infinity>; b \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> a \\<otimes> b \\<noteq> \\<infinity>", "by (cases a, auto, cases b, auto, cases b, auto)"], ["", "lemma dbm_le_not_inf:\n  \"a \\<preceq> b \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> a \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<preceq> b; b \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> a \\<noteq> \\<infinity>", "by (cases \"a = b\") (auto simp: dbm_le_def)"], ["", "section \\<open>DBM Entries Form a Linearly Ordered Abelian Monoid\\<close>"], ["", "instantiation DBMEntry :: (time) linorder\nbegin"], ["", "definition less_eq: \"(\\<le>) \\<equiv> dbm_le\""], ["", "definition less: \"(<) = dbm_lt\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a DBMEntry, linorder_class)", "proof ((standard; unfold less less_eq), goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. (x \\<prec> y) = (x \\<preceq> y \\<and> \\<not> y \\<preceq> x)\n 2. \\<And>x. x \\<preceq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x y. (x \\<prec> y) = (x \\<preceq> y \\<and> \\<not> y \\<preceq> x)\n 2. \\<And>x. x \\<preceq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x_ \\<prec> y_) = (x_ \\<preceq> y_ \\<and> \\<not> y_ \\<preceq> x_)", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x_ \\<prec> y_) =\n    ((x_ \\<prec> y_ \\<or> x_ = y_) \\<and>\n     \\<not> (y_ \\<prec> x_ \\<or> y_ = x_))", "using dbm_lt_asymmetric"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (x_ \\<prec> y_) =\n    ((x_ \\<prec> y_ \\<or> x_ = y_) \\<and>\n     \\<not> (y_ \\<prec> x_ \\<or> y_ = x_))", "by auto"], ["proof (state)\nthis:\n  (x_ \\<prec> y_) = (x_ \\<preceq> y_ \\<and> \\<not> y_ \\<preceq> x_)\n\ngoal (4 subgoals):\n 1. \\<And>x. x \\<preceq> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<preceq> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x. x \\<preceq> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<preceq> x_", "by (simp add: dbm_le_def)"], ["proof (state)\nthis:\n  x_ \\<preceq> x_\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "case 3"], ["proof (state)\nthis:\n  x_ \\<preceq> y_\n  y_ \\<preceq> z_\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "thus ?case"], ["proof (prove)\nusing this:\n  x_ \\<preceq> y_\n  y_ \\<preceq> z_\n\ngoal (1 subgoal):\n 1. x_ \\<preceq> z_", "unfolding dbm_le_def"], ["proof (prove)\nusing this:\n  x_ \\<prec> y_ \\<or> x_ = y_\n  y_ \\<prec> z_ \\<or> y_ = z_\n\ngoal (1 subgoal):\n 1. x_ \\<prec> z_ \\<or> x_ = z_", "using dbm_lt_trans"], ["proof (prove)\nusing this:\n  x_ \\<prec> y_ \\<or> x_ = y_\n  y_ \\<prec> z_ \\<or> y_ = z_\n  \\<lbrakk>?a \\<prec> ?b; ?b \\<prec> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a \\<prec> ?c\n\ngoal (1 subgoal):\n 1. x_ \\<prec> z_ \\<or> x_ = z_", "by auto"], ["proof (state)\nthis:\n  x_ \\<preceq> z_\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "case 4"], ["proof (state)\nthis:\n  x_ \\<preceq> y_\n  y_ \\<preceq> x_\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "thus ?case"], ["proof (prove)\nusing this:\n  x_ \\<preceq> y_\n  y_ \\<preceq> x_\n\ngoal (1 subgoal):\n 1. x_ = y_", "unfolding dbm_le_def"], ["proof (prove)\nusing this:\n  x_ \\<prec> y_ \\<or> x_ = y_\n  y_ \\<prec> x_ \\<or> y_ = x_\n\ngoal (1 subgoal):\n 1. x_ = y_", "using dbm_lt_asymmetric"], ["proof (prove)\nusing this:\n  x_ \\<prec> y_ \\<or> x_ = y_\n  y_ \\<prec> x_ \\<or> y_ = x_\n  \\<lbrakk>?x \\<prec> ?y; ?y \\<prec> ?x\\<rbrakk> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. x_ = y_", "by auto"], ["proof (state)\nthis:\n  x_ = y_\n\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "case 5"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<preceq> y \\<or> y \\<preceq> x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<preceq> y_ \\<or> y_ \\<preceq> x_", "unfolding dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x_ \\<prec> y_ \\<or> x_ = y_) \\<or> y_ \\<prec> x_ \\<or> y_ = x_", "using dbm_not_lt_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?a \\<prec> ?b; \\<not> ?b \\<prec> ?a\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. (x_ \\<prec> y_ \\<or> x_ = y_) \\<or> y_ \\<prec> x_ \\<or> y_ = x_", "by auto"], ["proof (state)\nthis:\n  x_ \\<preceq> y_ \\<or> y_ \\<preceq> x_\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instantiation DBMEntry :: (time) linordered_ab_monoid_add\nbegin"], ["", "definition mult: \"(+) = dbm_add\""], ["", "definition neutral: \"neutral = Le 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a DBMEntry, linordered_ab_monoid_add_class)", "proof ((standard; unfold mult neutral less less_eq), goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b c. a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)\n 2. \\<And>a b. a \\<otimes> b = b \\<otimes> a\n 3. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 4. \\<And>x. Le (0::'a) \\<otimes> x = x\n 5. \\<And>x. x \\<otimes> Le (0::'a) = x", "case (1 a b c)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>a b c. a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)\n 2. \\<And>a b. a \\<otimes> b = b \\<otimes> a\n 3. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 4. \\<And>x. Le (0::'a) \\<otimes> x = x\n 5. \\<And>x. x \\<otimes> Le (0::'a) = x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)", "by (cases a; cases b; cases c; auto)"], ["proof (state)\nthis:\n  a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)\n\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<otimes> b = b \\<otimes> a\n 2. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 3. \\<And>x. Le (0::'a) \\<otimes> x = x\n 4. \\<And>x. x \\<otimes> Le (0::'a) = x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<otimes> b = b \\<otimes> a\n 2. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 3. \\<And>x. Le (0::'a) \\<otimes> x = x\n 4. \\<And>x. x \\<otimes> Le (0::'a) = x", "case (2 a b)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>a b. a \\<otimes> b = b \\<otimes> a\n 2. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 3. \\<And>x. Le (0::'a) \\<otimes> x = x\n 4. \\<And>x. x \\<otimes> Le (0::'a) = x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> b = b \\<otimes> a", "by (cases a; cases b) auto"], ["proof (state)\nthis:\n  a \\<otimes> b = b \\<otimes> a\n\ngoal (3 subgoals):\n 1. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 2. \\<And>x. Le (0::'a) \\<otimes> x = x\n 3. \\<And>x. x \\<otimes> Le (0::'a) = x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 2. \\<And>x. Le (0::'a) \\<otimes> x = x\n 3. \\<And>x. x \\<otimes> Le (0::'a) = x", "case (3 a b c)"], ["proof (state)\nthis:\n  a \\<preceq> b\n\ngoal (3 subgoals):\n 1. \\<And>a b c.\n       a \\<preceq> b \\<Longrightarrow> c \\<otimes> a \\<preceq> c \\<otimes> b\n 2. \\<And>x. Le (0::'a) \\<otimes> x = x\n 3. \\<And>x. x \\<otimes> Le (0::'a) = x", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<preceq> b\n\ngoal (1 subgoal):\n 1. c \\<otimes> a \\<preceq> c \\<otimes> b", "unfolding dbm_le_def"], ["proof (prove)\nusing this:\n  a \\<prec> b \\<or> a = b\n\ngoal (1 subgoal):\n 1. c \\<otimes> a \\<prec> c \\<otimes> b \\<or> c \\<otimes> a = c \\<otimes> b", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b", "apply (rule dbm_lt.cases)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b\\<rbrakk>\n    \\<Longrightarrow> ?a1.7 \\<prec> ?a2.7\n 2. \\<And>uu_.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Lt uu_; ?a2.7 = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 3. \\<And>uv_.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Le uv_; ?a2.7 = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 4. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Le aa; ?a2.7 = Le ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 5. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Le aa; ?a2.7 = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 6. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Lt aa; ?a2.7 = Le ba; aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 7. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        ?a1.7 = Lt aa; ?a2.7 = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>uu_.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Lt uu_; b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 2. \\<And>uv_.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Le uv_; b = \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 3. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Le aa; b = Le ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 4. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Le aa; b = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 5. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Lt aa; b = Le ba; aa \\<le> ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b\n 6. \\<And>aa ba.\n       \\<lbrakk>c \\<otimes> a \\<noteq> c \\<otimes> b; a \\<prec> b;\n        a = Lt aa; b = Lt ba; aa < ba\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> a \\<prec> c \\<otimes> b", "by (cases c; fastforce)+"], ["proof (state)\nthis:\n  c \\<otimes> a \\<preceq> c \\<otimes> b\n\ngoal (2 subgoals):\n 1. \\<And>x. Le (0::'a) \\<otimes> x = x\n 2. \\<And>x. x \\<otimes> Le (0::'a) = x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. Le (0::'a) \\<otimes> x = x\n 2. \\<And>x. x \\<otimes> Le (0::'a) = x", "case (4 x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. Le (0::'a) \\<otimes> x = x\n 2. \\<And>x. x \\<otimes> Le (0::'a) = x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'a) \\<otimes> x = x", "by (cases x) auto"], ["proof (state)\nthis:\n  Le (0::'a) \\<otimes> x = x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<otimes> Le (0::'a) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<otimes> Le (0::'a) = x", "case (5 x)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<otimes> Le (0::'a) = x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> Le (0::'a) = x", "by (cases x) auto"], ["proof (state)\nthis:\n  x \\<otimes> Le (0::'a) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "interpretation linordered_monoid: linordered_ab_monoid_add dbm_add dbm_le dbm_lt \"Le 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linordered_ab_monoid_add (\\<otimes>) dbm_le dbm_lt (Le (0::'a))", "apply (standard, fold neutral mult less_eq less)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 4. \\<And>x. x \\<le> x\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 6. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 7. \\<And>a b c. a \\<le> b \\<Longrightarrow> c + a \\<le> c + b\n 8. \\<And>x y. x \\<le> y \\<or> y \\<le> x\n 9. \\<And>x. \\<one> + x = x\n 10. \\<And>x. x + \\<one> = x", "using add.commute add.commute add_left_mono assoc"], ["proof (prove)\nusing this:\n  ?a + ?b = ?b + ?a\n  ?a + ?b = ?b + ?a\n  ?a \\<le> ?b \\<Longrightarrow> ?c + ?a \\<le> ?c + ?b\n  ?a + ?b + ?c = ?a + (?b + ?c)\n\ngoal (10 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 4. \\<And>x. x \\<le> x\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 6. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 7. \\<And>a b c. a \\<le> b \\<Longrightarrow> c + a \\<le> c + b\n 8. \\<And>x y. x \\<le> y \\<or> y \\<le> x\n 9. \\<And>x. \\<one> + x = x\n 10. \\<And>x. x + \\<one> = x", "by auto"], ["", "lemma Le_Le_dbm_lt_D[dest]: \"Le a \\<prec> Lt b \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Lt b \\<Longrightarrow> a < b", "by (cases rule: dbm_lt.cases) auto"], ["", "lemma Le_Lt_dbm_lt_D[dest]: \"Le a \\<prec> Le b \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Le b \\<Longrightarrow> a < b", "by (cases rule: dbm_lt.cases) auto"], ["", "lemma Lt_Le_dbm_lt_D[dest]: \"Lt a \\<prec> Le b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Le b \\<Longrightarrow> a \\<le> b", "by (cases rule: dbm_lt.cases) auto"], ["", "lemma Lt_Lt_dbm_lt_D[dest]: \"Lt a \\<prec> Lt b \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Lt b \\<Longrightarrow> a < b", "by (cases rule: dbm_lt.cases) auto"], ["", "lemma Le_le_LeI[intro]: \"a \\<le> b \\<Longrightarrow> Le a \\<le> Le b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Le a \\<le> Le b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Le a \\<prec> Le b \\<or> Le a = Le b", "by auto"], ["", "lemma Lt_le_LeI[intro]: \"a \\<le> b \\<Longrightarrow> Lt a \\<le> Le b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Lt a \\<le> Le b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Lt a \\<prec> Le b \\<or> Lt a = Le b", "by auto"], ["", "lemma Lt_le_LtI[intro]: \"a \\<le> b \\<Longrightarrow> Lt a \\<le> Lt b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Lt a \\<le> Lt b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> Lt a \\<prec> Lt b \\<or> Lt a = Lt b", "by auto"], ["", "lemma Le_le_LtI[intro]: \"a < b \\<Longrightarrow> Le a \\<le> Lt b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow> Le a \\<le> Lt b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow> Le a \\<prec> Lt b \\<or> Le a = Lt b", "by auto"], ["", "lemma Lt_lt_LeI: \"x \\<le> y \\<Longrightarrow> Lt x < Le y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> Lt x < Le y", "unfolding less"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> Lt x \\<prec> Le y", "by auto"], ["", "lemma Le_le_LeD[dest]: \"Le a \\<le> Le b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<le> Le b \\<Longrightarrow> a \\<le> b", "unfolding dbm_le_def less_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Le b \\<or> Le a = Le b \\<Longrightarrow> a \\<le> b", "by auto"], ["", "lemma Le_le_LtD[dest]: \"Le a \\<le> Lt b \\<Longrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<le> Lt b \\<Longrightarrow> a < b", "unfolding dbm_le_def less_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le a \\<prec> Lt b \\<or> Le a = Lt b \\<Longrightarrow> a < b", "by auto"], ["", "lemma Lt_le_LeD[dest]: \"Lt a \\<le> Le b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<le> Le b \\<Longrightarrow> a \\<le> b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Le b \\<or> Lt a = Le b \\<Longrightarrow> a \\<le> b", "by auto"], ["", "lemma Lt_le_LtD[dest]: \"Lt a \\<le> Lt b \\<Longrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<le> Lt b \\<Longrightarrow> a \\<le> b", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Lt a \\<prec> Lt b \\<or> Lt a = Lt b \\<Longrightarrow> a \\<le> b", "by auto"], ["", "lemma inf_not_le_Le[simp]: \"\\<infinity> \\<le> Le x = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity> \\<le> Le x) = False", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity> \\<prec> Le x \\<or> \\<infinity> = Le x) = False", "by auto"], ["", "lemma inf_not_le_Lt[simp]: \"\\<infinity> \\<le> Lt x = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity> \\<le> Lt x) = False", "unfolding less_eq dbm_le_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity> \\<prec> Lt x \\<or> \\<infinity> = Lt x) = False", "by auto"], ["", "lemma inf_not_lt[simp]: \"\\<infinity> \\<prec> x = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<infinity> \\<prec> x) = False", "by auto"], ["", "lemma any_le_inf: \"x \\<le> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> \\<infinity>", "by (metis less_eq dmb_le_dbm_entry_bound_inf le_cases)"], ["", "section \\<open>Basic Properties of DBMs\\<close>"], ["", "subsection \\<open>DBMs and Length of Paths\\<close>"], ["", "lemma dbm_entry_val_add_1: \"dbm_entry_val u (Some c) (Some d) a \\<Longrightarrow>  dbm_entry_val u (Some d) None b\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (dbm_add a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "proof (cases a, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "case 1"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = Le x1_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = Le x1_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Le x1_; b = Le x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Le x1_; b = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = Le x1_; b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1_;\n        u d \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d \\<le> x1_;\n        u d < x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x1_ + x2))", "using add_mono_thms_linordered_semiring(1)"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k \\<le> ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1_;\n        u d \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d \\<le> x1_;\n        u d < x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x1_ + x2))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d \\<le> x1_;\n        u d < x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x1_ + x2))", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d \\<le> x1_;\n        u d < x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x1_ + x2))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (a \\<otimes> b)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "case 2"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = Lt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = Lt x2_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2_; b = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 2. \\<And>x2a.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) None b; a = Lt x2_; b = Lt x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = Lt x2_; b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c - u d < x2_;\n        u d \\<le> x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_; u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x2_ + x2a))", "apply (simp add: dbm_entry_val.intros(3) diff_less_eq less_le_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_; u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (Lt (x2_ + x2a))", "by (metis add_le_less_mono dbm_entry_val.intros(3) diff_add_cancel less_imp_le)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (a \\<otimes> b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "case 3"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) None b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) None b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (a \\<otimes> b)", "by (cases b) auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (a \\<otimes> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_entry_val_add_2: \"dbm_entry_val u None (Some c) a \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) b\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (dbm_add a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "proof (cases a, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "case 1"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = Le x1_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = Le x1_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some d) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Le x1_; b = Le x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Le x1_; b = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = Le x1_;\n     b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1a;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d < x2;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x1_ + x2))", "using add_mono_thms_linordered_semiring(1)"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k \\<le> ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1a;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d < x2;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x1_ + x2))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d < x2;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x1_ + x2))", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u c - u d < x2;\n        - u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x1_ + x2))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some d) (a \\<otimes> b)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "case 2"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = Lt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = Lt x2_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some d) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2_; b = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 2. \\<And>x2a.\n       \\<lbrakk>dbm_entry_val u None (Some c) a;\n        dbm_entry_val u (Some c) (Some d) b; a = Lt x2_; b = Lt x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = Lt x2_;\n     b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c - u d \\<le> x1;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2a;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x2a))", "using add_mono_thms_linordered_field(3)"], ["proof (prove)\nusing this:\n  ?i < ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k < ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c - u d \\<le> x1;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2a;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x2a))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2a;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x2a))", "using add_strict_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a < ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2a;\n        - u c < x2_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some d) (Lt (x2_ + x2a))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some d) (a \\<otimes> b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "case 3"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u None (Some c) a;\n     dbm_entry_val u (Some c) (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) a\n  dbm_entry_val u (Some c) (Some d) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some d) (a \\<otimes> b)", "by (cases b) auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some d) (a \\<otimes> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_entry_val_add_3:\n  \"dbm_entry_val u (Some c) (Some d) a \\<Longrightarrow>  dbm_entry_val u (Some d) (Some e) b\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (dbm_add a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "proof (cases a, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "case 1"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = Le x1_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = Le x1_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Le x1_; b = Le x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Le x1_; b = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = Le x1_;\n     b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1_;\n        u d - u e \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u d - u e < x2;\n        u c - u d \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x1_ + x2))", "using add_mono_thms_linordered_semiring(1)"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k \\<le> ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c - u d \\<le> x1_;\n        u d - u e \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u d - u e < x2;\n        u c - u d \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x1_ + x2))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u d - u e < x2;\n        u c - u d \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x1_ + x2))", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; u d - u e < x2;\n        u c - u d \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x1_ + x2))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "case 2"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = Lt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = Lt x2_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2_; b = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 2. \\<And>x2a.\n       \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n        dbm_entry_val u (Some d) (Some e) b; a = Lt x2_; b = Lt x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = Lt x2_;\n     b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c - u d < x2_;\n        u d - u e \\<le> x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_;\n        u d - u e < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x2a))", "using add_mono_thms_linordered_field(3)"], ["proof (prove)\nusing this:\n  ?i < ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k < ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c - u d < x2_;\n        u d - u e \\<le> x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_;\n        u d - u e < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x2a))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_;\n        u d - u e < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x2a))", "using add_strict_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a < ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c - u d < x2_;\n        u d - u e < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (Lt (x2_ + x2a))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "case 3"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) (Some d) a;\n     dbm_entry_val u (Some d) (Some e) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d) a\n  dbm_entry_val u (Some d) (Some e) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)", "by (cases b) auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some e) (a \\<otimes> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_entry_val_add_4:\n  \"dbm_entry_val u (Some c) None a \\<Longrightarrow> dbm_entry_val u None (Some d) b\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (dbm_add a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "proof (cases a, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "case 1"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = Le x1_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = Le x1_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Le x1_; b = Le x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Le x1_; b = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = Le x1_; b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c \\<le> x1_;\n        - u d \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; - u d < x2; u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x1_ + x2))", "using add_mono_thms_linordered_semiring(1)"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k \\<le> ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1a.\n       \\<lbrakk>a = Le x1_; b = Le x1a; u c \\<le> x1_;\n        - u d \\<le> x1a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Le (x1_ + x1a))\n 2. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; - u d < x2; u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x1_ + x2))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; - u d < x2; u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x1_ + x2))", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Le x1_; b = Lt x2; - u d < x2; u c \\<le> x1_\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x1_ + x2))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "case 2"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = Lt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = Lt x2_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "apply (cases b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2_; b = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 2. \\<And>x2a.\n       \\<lbrakk>dbm_entry_val u (Some c) None a;\n        dbm_entry_val u None (Some d) b; a = Lt x2_; b = Lt x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n 3. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = Lt x2_; b = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c < x2_; - u d \\<le> x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c < x2_; - u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x2a))", "using add_mono_thms_linordered_field(3)"], ["proof (prove)\nusing this:\n  ?i < ?j \\<and> ?k \\<le> ?l \\<Longrightarrow> ?i + ?k < ?j + ?l\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>a = Lt x2_; b = Le x1; u c < x2_; - u d \\<le> x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x1))\n 2. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c < x2_; - u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x2a))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c < x2_; - u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x2a))", "using add_strict_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a < ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. \\<And>x2a.\n       \\<lbrakk>a = Lt x2_; b = Lt x2a; u c < x2_; - u d < x2a\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (Lt (x2_ + x2a))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "case 3"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c) None a;\n     dbm_entry_val u None (Some d) b; a = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None a\n  dbm_entry_val u None (Some d) b\n  a = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)", "by (cases b) auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (a \\<otimes> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "no_notation dbm_add (infixl \"\\<otimes>\" 70)"], ["", "lemma DBM_val_bounded_len_1'_aux:\n  assumes \"DBM_val_bounded v u m n\" \"v c \\<le> n\" \"\\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c) None (len m (v c) 0 vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 vs)", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 vs)", "proof (induction vs arbitrary: c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set [].\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (len m (v c) 0 [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set [].\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (len m (v c) 0 [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "show ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 [])", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 [])", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (len m (v c) 0 [])\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "case (Cons k vs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "obtain c' where c': \"k > 0\" \"k \\<le> n\" \"v c' = k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>0 < k; k \\<le> n; v c' = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k", "have \"dbm_entry_val u (Some c') None (len m (v c') 0 vs)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (len m (v c') 0 vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "have \"dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "using Cons.prems c'"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "by (auto simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "have \"dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)", "using dbm_entry_val_add_1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) None ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) None (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) None ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) None (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (dbm_add (m (v c) (v c')) (len m (v c') 0 vs))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (a # vs))", "with c'"], ["proof (chain)\npicking this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)", "show ?case"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (k # vs))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (k # vs))", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (len m (v c) 0 (k # vs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len_3'_aux:\n  \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> v d \\<le> n \\<Longrightarrow> \\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\n   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n     \\<forall>k\\<in>set vs.\n        0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                       (len m (v c) (v d) vs)", "proof (induction vs arbitrary: c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        v d \\<le> n;\n        \\<forall>k\\<in>set [].\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        v d \\<le> n;\n        \\<forall>k\\<in>set [].\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) [])", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set []. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) [])", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) [])\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "case (Cons k vs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "obtain c' where c': \"k > 0\" \"k \\<le> n\" \"v c' = k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>0 < k; k \\<le> n; v c' = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k", "have \"dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>k\\<in>set vs.\n      0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) vs)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "have \"dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "using Cons.prems c'"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>k\\<in>set (k # vs).\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "by (auto simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "have \"dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) vs)\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (m (v c) (v c') + len m (v c') (v d) vs)", "using dbm_entry_val_add_3"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) (Some ?e) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?e) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (m (v c) (v c') + len m (v c') (v d) vs)", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) vs)\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) (Some ?e) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?e) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (dbm_add (m (v c) (v c')) (len m (v c') (v d) vs))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>k\\<in>set vs.\n                       0 < k \\<and>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) vs);\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>k\\<in>set (a # vs).\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (a # vs))", "with c'"], ["proof (chain)\npicking this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) vs)", "show ?case"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (k # vs))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (k # vs))", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (k # vs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len_2'_aux:\n  \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\n  \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>k\\<in>set vs.\n        0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "proof (cases vs, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>k\\<in>set vs.\n        0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n     vs = []\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)\n 2. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "case 1"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>k\\<in>set vs.\n        0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n     vs = []\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)\n 2. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = []\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = []\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (len m 0 (v c) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "case (2 k vs)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs", "obtain c' where c': \"k > 0\" \"k \\<le> n\" \"v c' = k\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        \\<lbrakk>0 < k; k \\<le> n; v c' = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "with 2"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k", "have \"dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)", "using DBM_val_bounded_len_3'_aux"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?m; ?v ?c \\<le> ?n;\n   ?v ?d \\<le> ?n;\n   \\<forall>k\\<in>set ?vs.\n      0 < k \\<and> k \\<le> ?n \\<and> (\\<exists>c. ?v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?d)\n                     (len ?m (?v ?c) (?v ?d) ?vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "have \"dbm_entry_val u None (Some c') (m 0 (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (m 0 (v c'))", "using 2 c'"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (m 0 (v c'))", "by (auto simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n  dbm_entry_val u None (Some c') (m 0 (v c'))", "have \"dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)", "using dbm_entry_val_add_2"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n  \\<lbrakk>dbm_entry_val ?u None (Some ?c) ?a;\n   dbm_entry_val ?u (Some ?c) (Some ?d) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u None (Some ?d) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) vs)\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n  \\<lbrakk>dbm_entry_val ?u None (Some ?c) ?a;\n   dbm_entry_val ?u (Some ?c) (Some ?d) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u None (Some ?d) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (dbm_add (m 0 (v c')) (len m (v c') (v c) vs))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>k\\<in>set vs.\n           0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k);\n        vs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "with 2(4) c'"], ["proof (chain)\npicking this:\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)", "show ?case"], ["proof (prove)\nusing this:\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  vs = k # vs\n  0 < k\n  k \\<le> n\n  v c' = k\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) vs)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (len m 0 (v c) vs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnt_0_D:\n  \"cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs", "apply (induction xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. cnt x [] = 0 \\<Longrightarrow> x \\<notin> set []\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs;\n        cnt x (a # xs) = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs;\n        cnt x (a # xs) = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "apply (rename_tac a xs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs;\n        cnt x (a # xs) = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "apply (case_tac \"x = a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs;\n        cnt x (a # xs) = 0; x = a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x xs = 0 \\<Longrightarrow> x \\<notin> set xs;\n        cnt x (a # xs) = 0; x \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "by simp+"], ["", "lemma cnt_at_most_1_D:\n  \"cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow> x \\<notin> set xs \\<and> x \\<notin> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set xs \\<and> x \\<notin> set ys", "apply (induction xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. cnt x ([] @ x # ys) \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set [] \\<and> x \\<notin> set ys\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply auto[]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>filter ((=) x) ys = []; x \\<in> set ys\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "using cnt_0_D"], ["proof (prove)\nusing this:\n  cnt ?x ?xs = 0 \\<Longrightarrow> ?x \\<notin> set ?xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filter ((=) x) ys = []; x \\<in> set ys\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply (rename_tac a xs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply (case_tac \"a = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1; a = x\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys\n 2. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>cnt x (xs @ x # ys) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs \\<and> x \\<notin> set ys;\n        cnt x ((a # xs) @ x # ys) \\<le> 1; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs) \\<and> x \\<notin> set ys", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nat_list_0 [intro]:\n  \"x \\<in> set xs \\<Longrightarrow> 0 \\<notin> set (xs :: nat list) \\<Longrightarrow> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set xs; 0 \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> 0 < x", "by (induction xs) auto"], ["", "lemma DBM_val_bounded_len':\n  fixes v\n  defines \"vo \\<equiv> \\<lambda> k. if k = 0 then None else Some (SOME c. v c = k)\"\n  assumes \"DBM_val_bounded v u m n\" \"cnt 0 (i # j # vs) \\<le> 1\"\n          \"\\<forall> k \\<in> set (i # j # vs). k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (vo i) (vo j) (len m i j vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"\\<forall> k \\<in> set vs. k > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms"], ["proof (chain)\npicking this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k", "have *: \"\\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\""], ["proof (prove)\nusing this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>set vs.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  i = 0", "have i: \"vo i = None\""], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. vo i = None", "by (simp add: vo_def)"], ["proof (state)\nthis:\n  vo i = None\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms \\<open>i = 0\\<close>"], ["proof (chain)\npicking this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i = 0\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i = 0\n  j = 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms"], ["proof (chain)\npicking this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0", "obtain c2 where c2: \"j \\<le> n\" \"v c2 = j\" \"vo j = Some c2\""], ["proof (prove)\nusing this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j; vo j = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k) \\<equiv>\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j;\n         (if j = 0 then None else Some (SOME c. v c = j)) = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with \\<open>i = 0\\<close> i DBM_val_bounded_len_2'_aux[OF assms(2) _ *]"], ["proof (chain)\npicking this:\n  i = 0\n  vo i = None\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (len m 0 (v ?c) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n  vo i = None\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (len m 0 (v ?c) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms(4)"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0", "obtain c1 where c1: \"i \\<le> n\" \"v c1 = i\" \"vo i = Some c1\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>i \\<le> n; v c1 = i; vo i = Some c1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>i \\<le> n; v c1 = i;\n         (if i = 0 then None else Some (SOME c. v c = i)) = Some c1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with DBM_val_bounded_len_1'_aux[OF assms(2) _ *] c1"], ["proof (chain)\npicking this:\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j = 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by (auto simp: vo_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms"], ["proof (chain)\npicking this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0", "obtain c2 where c2: \"j \\<le> n\" \"v c2 = j\" \"vo j = Some c2\""], ["proof (prove)\nusing this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j; vo j = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k) \\<equiv>\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j;\n         (if j = 0 then None else Some (SOME c. v c = j)) = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with c1 DBM_val_bounded_len_3'_aux[OF assms(2) _ _ *]"], ["proof (chain)\npicking this:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (len m (v ?c) (v ?d) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (len m (v ?c) (v ?d) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)", "have \"\\<exists> k \\<in> set vs. k = 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>set vs. k = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>k\\<in>set vs. k = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>k\\<in>set vs. k = 0", "obtain us ws where vs: \"vs = us @ 0 # ws\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<in>set vs. k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>us ws.\n        vs = us @ 0 # ws \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list_last)"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with cnt_at_most_1_D[of 0 \"i # j # us\"] assms(3)"], ["proof (chain)\npicking this:\n  cnt 0 ((i # j # us) @ 0 # ?ys) \\<le> 1 \\<Longrightarrow>\n  0 \\<notin> set (i # j # us) \\<and> 0 \\<notin> set ?ys\n  cnt 0 (i # j # vs) \\<le> 1\n  vs = us @ 0 # ws", "have\n      \"0 \\<notin> set us\" \"0 \\<notin> set ws\" \"i \\<noteq> 0\" \"j \\<noteq> 0\""], ["proof (prove)\nusing this:\n  cnt 0 ((i # j # us) @ 0 # ?ys) \\<le> 1 \\<Longrightarrow>\n  0 \\<notin> set (i # j # us) \\<and> 0 \\<notin> set ?ys\n  cnt 0 (i # j # vs) \\<le> 1\n  vs = us @ 0 # ws\n\ngoal (1 subgoal):\n 1. (0 \\<notin> set us &&& 0 \\<notin> set ws) &&&\n    i \\<noteq> 0 &&& j \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  0 \\<notin> set us\n  0 \\<notin> set ws\n  i \\<noteq> 0\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with vs"], ["proof (chain)\npicking this:\n  vs = us @ 0 # ws\n  0 \\<notin> set us\n  0 \\<notin> set ws\n  i \\<noteq> 0\n  j \\<noteq> 0", "have vs: \"vs = us @ 0 # ws\" \"\\<forall> k \\<in> set us. k > 0\" \"\\<forall> k \\<in> set ws. k > 0\""], ["proof (prove)\nusing this:\n  vs = us @ 0 # ws\n  0 \\<notin> set us\n  0 \\<notin> set ws\n  i \\<noteq> 0\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vs = us @ 0 # ws &&&\n    \\<forall>k\\<in>set us. 0 < k &&& \\<forall>k\\<in>set ws. 0 < k", "by auto"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with assms(4)"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k", "have v:\n      \"\\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\" \"\\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>set us.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) &&&\n    \\<forall>k\\<in>set ws.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "from \\<open>i \\<noteq> 0\\<close> \\<open>j \\<noteq> 0\\<close> assms"], ["proof (chain)\npicking this:\n  i \\<noteq> 0\n  j \\<noteq> 0\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)", "obtain c1 c2 where\n      c1: \"i \\<le> n\" \"v c1 = i\" \"vo i = Some c1\" and c2: \"j \\<le> n\" \"v c2 = j\" \"vo j = Some c2\""], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n  j \\<noteq> 0\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>i \\<le> n; v c1 = i; vo i = Some c1; j \\<le> n; v c2 = j;\n         vo j = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n  j \\<noteq> 0\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k) \\<equiv>\n  \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 (i # j # vs) \\<le> 1\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>i \\<le> n; v c1 = i;\n         (if i = 0 then None else Some (SOME c. v c = i)) = Some c1;\n         j \\<le> n; v c2 = j;\n         (if j = 0 then None else Some (SOME c. v c = j)) = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with dbm_entry_val_add_4 [OF DBM_val_bounded_len_1'_aux[OF assms(2) _ v(1)] DBM_val_bounded_len_2'_aux[OF assms(2) _ v(2)]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (dbm_add (len m (v ?c) 0 us) (len m 0 (v ?d) ws))\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2", "have \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (dbm_add (len m (v ?c) 0 us) (len m 0 (v ?d) ws))\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "from vs"], ["proof (chain)\npicking this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k", "have \"len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\""], ["proof (prove)\nusing this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)", "by (simp add: len_comp mult)"], ["proof (state)\nthis:\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "using c1 c2"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len'1:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"0 \\<notin> set vs\" \"v c \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c) None (len m (v c) 0 vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 vs)", "using DBM_val_bounded_len_1'_aux[OF assms(1,3)] assms(2,4)"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set ?vs.\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) \\<Longrightarrow>\n  dbm_entry_val u (Some c) None (len m (v c) 0 ?vs)\n  0 \\<notin> set vs\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 vs)", "by fastforce"], ["", "lemma DBM_val_bounded_len'2:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"0 \\<notin> set vs\" \"v c \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u None (Some c) (len m 0 (v c) vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "using DBM_val_bounded_len_2'_aux[OF assms(1,3)] assms(2,4)"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set ?vs.\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) \\<Longrightarrow>\n  dbm_entry_val u None (Some c) (len m 0 (v c) ?vs)\n  0 \\<notin> set vs\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) vs)", "by fastforce"], ["", "lemma DBM_val_bounded_len'3:\n  fixes v\n  assumes \"DBM_val_bounded v u m n\" \"cnt 0 vs \\<le> 1\" \"v c1 \\<le> n\" \"v c2 \\<le> n\"\n          \"\\<forall> k \\<in> set vs. k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "proof (cases \"\\<forall> k \\<in> set vs. k > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "case True"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with assms"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 vs \\<le> 1\n  v c1 \\<le> n\n  v c2 \\<le> n\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k", "have \"\\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  cnt 0 vs \\<le> 1\n  v c1 \\<le> n\n  v c2 \\<le> n\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>set vs.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with DBM_val_bounded_len_3'_aux[OF assms(1,3,4)]"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>set ?vs.\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) ?vs)\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set ?vs.\n     0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) ?vs)\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)", "have \"\\<exists> k \\<in> set vs. k = 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>set vs. k = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>k\\<in>set vs. k = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>k\\<in>set vs. k = 0", "obtain us ws where vs: \"vs = us @ 0 # ws\""], ["proof (prove)\nusing this:\n  \\<exists>k\\<in>set vs. k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>us ws.\n        vs = us @ 0 # ws \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list_last)"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with cnt_at_most_1_D[of 0 \"us\"] assms(2)"], ["proof (chain)\npicking this:\n  cnt 0 (us @ 0 # ?ys) \\<le> 1 \\<Longrightarrow>\n  0 \\<notin> set us \\<and> 0 \\<notin> set ?ys\n  cnt 0 vs \\<le> 1\n  vs = us @ 0 # ws", "have\n      \"0 \\<notin> set us\" \"0 \\<notin> set ws\""], ["proof (prove)\nusing this:\n  cnt 0 (us @ 0 # ?ys) \\<le> 1 \\<Longrightarrow>\n  0 \\<notin> set us \\<and> 0 \\<notin> set ?ys\n  cnt 0 vs \\<le> 1\n  vs = us @ 0 # ws\n\ngoal (1 subgoal):\n 1. 0 \\<notin> set us &&& 0 \\<notin> set ws", "by auto"], ["proof (state)\nthis:\n  0 \\<notin> set us\n  0 \\<notin> set ws\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with vs"], ["proof (chain)\npicking this:\n  vs = us @ 0 # ws\n  0 \\<notin> set us\n  0 \\<notin> set ws", "have vs: \"vs = us @ 0 # ws\" \"\\<forall> k \\<in> set us. k > 0\" \"\\<forall> k \\<in> set ws. k > 0\""], ["proof (prove)\nusing this:\n  vs = us @ 0 # ws\n  0 \\<notin> set us\n  0 \\<notin> set ws\n\ngoal (1 subgoal):\n 1. vs = us @ 0 # ws &&&\n    \\<forall>k\\<in>set us. 0 < k &&& \\<forall>k\\<in>set ws. 0 < k", "by auto"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with assms(5)"], ["proof (chain)\npicking this:\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k", "have v:\n      \"\\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\" \"\\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<in>set vs.\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>set us.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k) &&&\n    \\<forall>k\\<in>set ws.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "with dbm_entry_val_add_4 [OF DBM_val_bounded_len_1'_aux[OF assms(1,3) v(1)] DBM_val_bounded_len_2'_aux[OF assms(1,4) v(2)]]"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  \\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "have \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  \\<forall>k\\<in>set us. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set ws. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "from vs"], ["proof (chain)\npicking this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k", "have \"len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\""], ["proof (prove)\nusing this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n  \\<forall>k\\<in>set ws. 0 < k\n\ngoal (1 subgoal):\n 1. len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)", "by (simp add: len_comp mult)"], ["proof (state)\nthis:\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws))\n  len m (v c1) (v c2) vs = dbm_add (len m (v c1) 0 us) (len m 0 (v c2) ws)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (len m (v c1) (v c2) vs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len'':\n  fixes v\n  defines \"vo \\<equiv> \\<lambda> k. if k = 0 then None else Some (SOME c. v c = k)\"\n  assumes \"DBM_val_bounded v u m n\" \"i \\<noteq> 0 \\<or> j \\<noteq> 0\"\n          \"\\<forall> k \\<in> set (i # j # vs). k > 0 \\<longrightarrow> k \\<le> n \\<and> (\\<exists> c. v c = k)\"\n  shows \"dbm_entry_val u (vo i) (vo j) (len m i j vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "using assms"], ["proof (prove)\nusing this:\n  vo \\<equiv> \\<lambda>k. if k = 0 then None else Some (SOME c. v c = k)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (induction \"length vs\" arbitrary: i vs rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>vs i.\n       \\<lbrakk>\\<And>vsa i.\n                   \\<lbrakk>length vsa < length vs;\n                    vo =\n                    (\\<lambda>k.\n                        if k = 0 then None else Some (SOME c. v c = k));\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    i \\<noteq> 0 \\<or> j \\<noteq> 0;\n                    \\<forall>k\\<in>set (i # j # vsa).\n                       0 < k \\<longrightarrow>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (vo i) (vo j)\n(len m i j vsa);\n        vo = (\\<lambda>k. if k = 0 then None else Some (SOME c. v c = k));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n        i \\<noteq> 0 \\<or> j \\<noteq> 0;\n        \\<forall>k\\<in>set (i # j # vs).\n           0 < k \\<longrightarrow>\n           k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>length ?vs < length vs;\n   vo = (\\<lambda>k. if k = 0 then None else Some (SOME c. v c = k));\n   u \\<turnstile>\\<^bsub>v,n\\<^esub> m; ?i \\<noteq> 0 \\<or> j \\<noteq> 0;\n   \\<forall>k\\<in>set (?i # j # ?vs).\n      0 < k \\<longrightarrow>\n      k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (vo ?i) (vo j) (len m ?i j ?vs)\n  vo = (\\<lambda>k. if k = 0 then None else Some (SOME c. v c = k))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (1 subgoal):\n 1. \\<And>vs i.\n       \\<lbrakk>\\<And>vsa i.\n                   \\<lbrakk>length vsa < length vs;\n                    vo =\n                    (\\<lambda>k.\n                        if k = 0 then None else Some (SOME c. v c = k));\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    i \\<noteq> 0 \\<or> j \\<noteq> 0;\n                    \\<forall>k\\<in>set (i # j # vsa).\n                       0 < k \\<longrightarrow>\n                       k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (vo i) (vo j)\n(len m i j vsa);\n        vo = (\\<lambda>k. if k = 0 then None else Some (SOME c. v c = k));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n        i \\<noteq> 0 \\<or> j \\<noteq> 0;\n        \\<forall>k\\<in>set (i # j # vs).\n           0 < k \\<longrightarrow>\n           k \\<le> n \\<and> (\\<exists>c. v c = k)\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"\\<forall> k \\<in> set vs. k > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with less.prems"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k", "have *: \"\\<forall> k \\<in> set vs. k > 0 \\<and> k \\<le> n \\<and> (\\<exists> c. v c = k)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  \\<forall>k\\<in>set vs. 0 < k\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>set vs.\n       0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<in>set vs. 0 < k \\<and> k \\<le> n \\<and> (\\<exists>c. v c = k)\n\ngoal (2 subgoals):\n 1. \\<forall>k\\<in>set vs. 0 < k \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  i = 0", "have i: \"vo i = None\""], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. vo i = None", "by (simp add: vo_def)"], ["proof (state)\nthis:\n  vo i = None\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with less.prems \\<open>i = 0\\<close>"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i = 0\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i = 0\n  j = 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with less.prems"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0", "obtain c2 where c2: \"j \\<le> n\" \"v c2 = j\" \"vo j = Some c2\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j; vo j = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j;\n         (if j = 0 then None else Some (SOME c. v c = j)) = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with \\<open>i = 0\\<close> i DBM_val_bounded_len_2'_aux[OF less.prems(1) _ *]"], ["proof (chain)\npicking this:\n  i = 0\n  vo i = None\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (len m 0 (v ?c) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n  vo i = None\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (len m 0 (v ?c) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with less.prems"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0", "obtain c1 where c1: \"i \\<le> n\" \"v c1 = i\" \"vo i = Some c1\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>i \\<le> n; v c1 = i; vo i = Some c1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c1.\n        \\<lbrakk>i \\<le> n; v c1 = i;\n         (if i = 0 then None else Some (SOME c. v c = i)) = Some c1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "proof (cases \"j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow> dbm_entry_val u (vo i) (vo j) (len m i j vs)\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with DBM_val_bounded_len_1'_aux[OF less.prems(1) _ *] c1"], ["proof (chain)\npicking this:\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  v ?c \\<le> n \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (len m (v ?c) 0 vs)\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  j = 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by (auto simp: vo_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with less.prems"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0", "obtain c2 where c2: \"j \\<le> n\" \"v c2 = j\" \"vo j = Some c2\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j; vo j = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vo_def"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  i \\<noteq> 0 \\<or> j \\<noteq> 0\n  \\<forall>k\\<in>set (i # j # vs).\n     0 < k \\<longrightarrow> k \\<le> n \\<and> (\\<exists>c. v c = k)\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c2.\n        \\<lbrakk>j \\<le> n; v c2 = j;\n         (if j = 0 then None else Some (SOME c. v c = j)) = Some c2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce intro: someI)"], ["proof (state)\nthis:\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "with c1 DBM_val_bounded_len_3'_aux[OF less.prems(1) _ _ *]"], ["proof (chain)\npicking this:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (len m (v ?c) (v ?d) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  v c1 = i\n  vo i = Some c1\n  \\<lbrakk>v ?c \\<le> n; v ?d \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some ?d)\n                     (len m (v ?c) (v ?d) vs)\n  j \\<le> n\n  v c2 = j\n  vo j = Some c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (vo i) (vo j) (len m i j vs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)", "have \"\\<exists> us ws. vs = us @ 0 # ws \\<and> (\\<forall> k \\<in> set us. k > 0)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k\\<in>set vs. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>k\\<in>set us. 0 < k)", "proof (induction vs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> Ball (set []) ((<) 0) \\<Longrightarrow>\n    \\<exists>us ws. [] = us @ 0 # ws \\<and> Ball (set us) ((<) 0)\n 2. \\<And>a vs.\n       \\<lbrakk>\\<not> Ball (set vs) ((<) 0) \\<Longrightarrow>\n                \\<exists>us ws.\n                   vs = us @ 0 # ws \\<and> Ball (set us) ((<) 0);\n        \\<not> Ball (set (a # vs)) ((<) 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us ws.\n                            a # vs = us @ 0 # ws \\<and>\n                            Ball (set us) ((<) 0)", "case Nil"], ["proof (state)\nthis:\n  \\<not> (\\<forall>a\\<in>set []. 0 < a)\n\ngoal (2 subgoals):\n 1. \\<not> Ball (set []) ((<) 0) \\<Longrightarrow>\n    \\<exists>us ws. [] = us @ 0 # ws \\<and> Ball (set us) ((<) 0)\n 2. \\<And>a vs.\n       \\<lbrakk>\\<not> Ball (set vs) ((<) 0) \\<Longrightarrow>\n                \\<exists>us ws.\n                   vs = us @ 0 # ws \\<and> Ball (set us) ((<) 0);\n        \\<not> Ball (set (a # vs)) ((<) 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us ws.\n                            a # vs = us @ 0 # ws \\<and>\n                            Ball (set us) ((<) 0)", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>a\\<in>set []. 0 < a)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>a\\<in>set []. 0 < a)\n\ngoal (1 subgoal):\n 1. \\<exists>us ws. [] = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>us ws. [] = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n\ngoal (1 subgoal):\n 1. \\<And>a vs.\n       \\<lbrakk>\\<not> Ball (set vs) ((<) 0) \\<Longrightarrow>\n                \\<exists>us ws.\n                   vs = us @ 0 # ws \\<and> Ball (set us) ((<) 0);\n        \\<not> Ball (set (a # vs)) ((<) 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us ws.\n                            a # vs = us @ 0 # ws \\<and>\n                            Ball (set us) ((<) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a vs.\n       \\<lbrakk>\\<not> Ball (set vs) ((<) 0) \\<Longrightarrow>\n                \\<exists>us ws.\n                   vs = us @ 0 # ws \\<and> Ball (set us) ((<) 0);\n        \\<not> Ball (set (a # vs)) ((<) 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us ws.\n                            a # vs = us @ 0 # ws \\<and>\n                            Ball (set us) ((<) 0)", "case (Cons x vs)"], ["proof (state)\nthis:\n  \\<not> (\\<forall>a\\<in>set vs. 0 < a) \\<Longrightarrow>\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n  \\<not> (\\<forall>a\\<in>set (x # vs). 0 < a)\n\ngoal (1 subgoal):\n 1. \\<And>a vs.\n       \\<lbrakk>\\<not> Ball (set vs) ((<) 0) \\<Longrightarrow>\n                \\<exists>us ws.\n                   vs = us @ 0 # ws \\<and> Ball (set us) ((<) 0);\n        \\<not> Ball (set (a # vs)) ((<) 0)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>us ws.\n                            a # vs = us @ 0 # ws \\<and>\n                            Ball (set us) ((<) 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "proof (cases \"x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n 2. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "case True"], ["proof (state)\nthis:\n  x = 0\n\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n 2. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "then"], ["proof (chain)\npicking this:\n  x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>us ws. x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "with Cons.prems"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>a\\<in>set (x # vs). 0 < a)\n  x \\<noteq> 0", "have \"\\<not> (\\<forall>a\\<in>set vs. 0 < a)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>a\\<in>set (x # vs). 0 < a)\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>a\\<in>set vs. 0 < a)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>a\\<in>set vs. 0 < a)\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "from Cons.IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "obtain us ws where \"vs = us @ 0 # ws\" \"\\<forall>a\\<in>set us. 0 < a\""], ["proof (prove)\nusing this:\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n\ngoal (1 subgoal):\n 1. (\\<And>us ws.\n        \\<lbrakk>vs = us @ 0 # ws; \\<forall>a\\<in>set us. 0 < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n  \\<forall>a\\<in>set us. 0 < a\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "with False"], ["proof (chain)\npicking this:\n  x \\<noteq> 0\n  vs = us @ 0 # ws\n  \\<forall>a\\<in>set us. 0 < a", "have \"x # vs = (x # us) @ 0 # ws\" \"\\<forall>a\\<in>set (x # us). 0 < a\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  vs = us @ 0 # ws\n  \\<forall>a\\<in>set us. 0 < a\n\ngoal (1 subgoal):\n 1. x # vs = (x # us) @ 0 # ws &&& \\<forall>a\\<in>set (x # us). 0 < a", "by auto"], ["proof (state)\nthis:\n  x # vs = (x # us) @ 0 # ws\n  \\<forall>a\\<in>set (x # us). 0 < a\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "then"], ["proof (chain)\npicking this:\n  x # vs = (x # us) @ 0 # ws\n  \\<forall>a\\<in>set (x # us). 0 < a", "show ?thesis"], ["proof (prove)\nusing this:\n  x # vs = (x # us) @ 0 # ws\n  \\<forall>a\\<in>set (x # us). 0 < a\n\ngoal (1 subgoal):\n 1. \\<exists>us ws.\n       x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>us ws. x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>us ws. x # vs = us @ 0 # ws \\<and> (\\<forall>a\\<in>set us. 0 < a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>k\\<in>set us. 0 < k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>k\\<in>set us. 0 < k)", "obtain us ws where vs: \"vs = us @ 0 # ws\" \"\\<forall> k \\<in> set us. k > 0\""], ["proof (prove)\nusing this:\n  \\<exists>us ws. vs = us @ 0 # ws \\<and> (\\<forall>k\\<in>set us. 0 < k)\n\ngoal (1 subgoal):\n 1. (\\<And>us ws.\n        \\<lbrakk>vs = us @ 0 # ws; \\<forall>k\\<in>set us. 0 < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k\\<in>set vs. 0 < k) \\<Longrightarrow>\n    dbm_entry_val u (vo i) (vo j) (len m i j vs)", "then"], ["proof (chain)\npicking this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k", "show ?thesis"], ["proof (prove)\nusing this:\n  vs = us @ 0 # ws\n  \\<forall>k\\<in>set us. 0 < k\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (vo i) (vo j) (len m i j vs)", "oops"], ["", "lemma DBM_val_bounded_len_1: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u (Some c) None (len m (v c) 0 (map v cs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) None\n                       (len m (v c) 0 (map v cs))", "proof (induction cs arbitrary: c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v []))\n 2. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v []))\n 2. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (map v []))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (map v []))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (len m (v c) 0 (map v []))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "case (Cons c' cs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None\n                     (len m (v ?c) 0 (map v cs))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "hence \"dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) None\n                     (len m (v ?c) 0 (map v cs))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "have \"dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "using Cons.prems"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "by (simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "have \"dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 (map v cs))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (m (v c) (v c') + len m (v c') 0 (map v cs))", "using dbm_entry_val_add_1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) None ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) None (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (m (v c) (v c') + len m (v c') 0 (map v cs))", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (len m (v c') 0 (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) None ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) None (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (dbm_add (m (v c) (v c')) (len m (v c') 0 (map v cs)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) None\n(len m (v c) 0 (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (len m (v c) 0 (map v (a # cs)))", "thus ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 (map v cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (map v (c' # cs)))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None (m (v c) (v c') + len m (v c') 0 (map v cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (len m (v c) 0 (map v (c' # cs)))", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (len m (v c) 0 (map v (c' # cs)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len_3: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> v d \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v cs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n     \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                       (len m (v c) (v d) (map v cs))", "proof (induction cs arbitrary: c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        v d \\<le> n; \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v []))\n 2. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        v d \\<le> n; \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v []))\n 2. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v []))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v []))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v []))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "case (Cons c' cs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) (map v cs))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "hence \"dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v ?c \\<le> n; v d \\<le> n;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some ?c) (Some d)\n                     (len m (v ?c) (v d) (map v cs))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "have \"dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "using Cons.prems"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  v d \\<le> n\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "by (simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))", "have \"dbm_entry_val u (Some c) (Some d) (m (v c) (v c') + len m (v c') (v d) (map v cs))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (m (v c) (v c') + len m (v c') (v d) (map v cs))", "using dbm_entry_val_add_3"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) (Some ?e) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?e) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (m (v c) (v c') + len m (v c') (v d) (map v cs))", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some d) (len m (v c') (v d) (map v cs))\n  dbm_entry_val u (Some c) (Some c') (m (v c) (v c'))\n  \\<lbrakk>dbm_entry_val ?u (Some ?c) (Some ?d) ?a;\n   dbm_entry_val ?u (Some ?d) (Some ?e) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?e) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d)\n     (dbm_add (m (v c) (v c')) (len m (v c') (v d) (map v cs)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d)\n   (m (v c) (v c') + len m (v c') (v d) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a cs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m;\n                    v c \\<le> n; v d \\<le> n;\n                    \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n(len m (v c) (v d) (map v cs));\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n; v d \\<le> n;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) (Some d)\n                          (len m (v c) (v d) (map v (a # cs)))", "thus ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d)\n   (m (v c) (v c') + len m (v c') (v d) (map v cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v (c' # cs)))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some d)\n   (m (v c) (v c') + len m (v c') (v d) (map v cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v (c' # cs)))", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some d) (len m (v c) (v d) (map v (c' # cs)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_val_bounded_len_2: \"DBM_val_bounded v u m n \\<Longrightarrow> v c \\<le> n \\<Longrightarrow> \\<forall> c \\<in> set cs. v c \\<le> n\n      \\<Longrightarrow> dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c)\n                       (len m 0 (v c) (map v cs))", "proof (cases cs, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>c\\<in>set cs. v c \\<le> n; cs = []\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c)\n                       (len m 0 (v c) (map v cs))\n 2. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "case 1"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n     \\<forall>c\\<in>set cs. v c \\<le> n; cs = []\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u None (Some c)\n                       (len m 0 (v c) (map v cs))\n 2. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = []\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> m 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (m 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (m (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (m (v c1) (v c2)))\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = []\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "case (2 c' cs)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = c' # cs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "hence \"dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = c' # cs\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))", "using DBM_val_bounded_len_3"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = c' # cs\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?m; ?v ?c \\<le> ?n;\n   ?v ?d \\<le> ?n; \\<forall>c\\<in>set ?cs. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c) (Some ?d)\n                     (len ?m (?v ?c) (?v ?d) (map ?v ?cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "have \"dbm_entry_val u None (Some c') (m 0 (v c'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (m 0 (v c'))", "using 2"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> m\n  v c \\<le> n\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  cs = c' # cs\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (m 0 (v c'))", "by (simp add: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n  dbm_entry_val u None (Some c') (m 0 (v c'))", "have \"dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) (map v cs))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (m 0 (v c') + len m (v c') (v c) (map v cs))", "using dbm_entry_val_add_2"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n  \\<lbrakk>dbm_entry_val ?u None (Some ?c) ?a;\n   dbm_entry_val ?u (Some ?c) (Some ?d) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u None (Some ?d) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (m 0 (v c') + len m (v c') (v c) (map v cs))", "unfolding mult"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (len m (v c') (v c) (map v cs))\n  dbm_entry_val u None (Some c') (m 0 (v c'))\n  \\<lbrakk>dbm_entry_val ?u None (Some ?c) ?a;\n   dbm_entry_val ?u (Some ?c) (Some ?d) ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u None (Some ?d) (dbm_add ?a ?b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (dbm_add (m 0 (v c')) (len m (v c') (v c) (map v cs)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) (map v cs))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> m; v c \\<le> n;\n        \\<forall>c\\<in>set cs. v c \\<le> n; cs = a # list\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (len m 0 (v c) (map v cs))", "thus ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) (map v cs))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))", "using 2(4)"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) (map v cs))\n  cs = c' # cs\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (m 0 (v c') + len m (v c') (v c) (map v cs))\n  cs = c' # cs\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))", "by simp"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (len m 0 (v c) (map v cs))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}