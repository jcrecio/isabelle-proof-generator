{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/DBM_Operations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma gt_swap:\n  fixes a b c :: \"'t :: time\"\n  assumes \"c < a + b\"\n  shows \"c < b + a\"", "lemma le_swap:\n  fixes a b c :: \"'t :: time\"\n  assumes \"c \\<le> a + b\"\n  shows \"c \\<le> b + a\"", "lemma dbm_entry_dbm_lt:\n  assumes \"dbm_entry_val u (Some c1) (Some c2) a\" \"a \\<prec> b\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) b\"", "lemma dbm_entry_dbm_min2:\n  assumes \"dbm_entry_val u None (Some c) (min a b)\"\n  shows \"dbm_entry_val u None (Some c) b\"", "lemma dbm_entry_dbm_min3:\n  assumes \"dbm_entry_val u (Some c) None (min a b)\"\n  shows \"dbm_entry_val u (Some c) None b\"", "lemma dbm_entry_dbm_min:\n  assumes \"dbm_entry_val u (Some c1) (Some c2) (min a b)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) b\"", "lemma dbm_entry_dbm_min3':\n  assumes \"dbm_entry_val u (Some c) None (min a b)\"\n  shows \"dbm_entry_val u (Some c) None a\"", "lemma dbm_entry_dbm_min2':\n  assumes \"dbm_entry_val u None (Some c) (min a b)\"\n  shows \"dbm_entry_val u None (Some c) a\"", "lemma dbm_entry_dbm_min':\n  assumes \"dbm_entry_val u (Some c1) (Some c2) (min a b)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) a\"", "lemma DBM_up_complete': \"clock_numbering v \\<Longrightarrow> u \\<in> ([M]\\<^bsub>v,n\\<^esub>)\\<^sup>\\<up> \\<Longrightarrow> u \\<in> [up M]\\<^bsub>v,n\\<^esub>\"", "lemma DBM_up_sound':\n  assumes \"clock_numbering' v n\" \"u \\<in> [up M]\\<^bsub>v,n\\<^esub>\"\n  shows \"u \\<in> ([M]\\<^bsub>v,n\\<^esub>)\\<^sup>\\<up>\"", "lemma abstr_id1:\n  \"c \\<notin> collect_clks cc \\<Longrightarrow> clock_numbering' v n \\<Longrightarrow> \\<forall> c \\<in> collect_clks cc. v c \\<le> n\n    \\<Longrightarrow> abstr cc M v 0 (v c) = M 0 (v c)\"", "lemma abstr_id2:\n  \"c \\<notin> collect_clks cc \\<Longrightarrow> clock_numbering' v n \\<Longrightarrow> \\<forall> c \\<in> collect_clks cc. v c \\<le> n\n    \\<Longrightarrow> abstr cc M v (v c) 0 = M (v c) 0\"", "lemma abstr_id3:\n  \"clock_numbering v \\<Longrightarrow> abstr cc M v (v c1) (v c2) = M (v c1) (v c2)\"", "lemma dbm_abstr_soundness :\n  \"\\<lbrakk>u \\<turnstile> cc; clock_numbering' v n; \\<forall> c \\<in> collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> DBM_val_bounded v u (abstr cc (\\<lambda> i j. \\<infinity>) v) n\"", "lemma dbm_abstr_completeness:\n  \"\\<lbrakk>DBM_val_bounded v u (abstr cc (\\<lambda> i j. \\<infinity>) v) n; \\<forall>c. v c > 0; \\<forall> c \\<in> collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> u \\<turnstile> cc\"", "lemma dbm_abstr_zone_eq:\n  assumes \"clock_numbering' v n\" \"\\<forall>c\\<in>collect_clks cc. v c \\<le> n\"\n  shows \"[abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> = {u. u \\<turnstile> cc}\"", "lemma DBM_and_complete:\n  assumes \"DBM_val_bounded v u M1 n\" \"DBM_val_bounded v u M2 n\"\n  shows \"DBM_val_bounded v u (And M1 M2) n\"", "lemma DBM_and_sound1:\n  assumes \"DBM_val_bounded v u (And M1 M2) n\"\n  shows \"DBM_val_bounded v u M1 n\"", "lemma DBM_and_sound2:\n  assumes \"DBM_val_bounded v u (And M1 M2) n\"\n  shows \"DBM_val_bounded v u M2 n\"", "lemma DBM_reset_mono:\n  assumes \"DBM_reset M n k d M'\" \"i \\<le> n\" \"j \\<le> n\" \"i \\<noteq> k\" \"j \\<noteq> k\"\n  shows \"M' i j \\<le> M i j\"", "lemma DBM_reset_len_mono:\n  assumes \"DBM_reset M n k d M'\" \"k \\<notin> set xs\" \"i \\<noteq> k\" \"j \\<noteq> k\" \"set (i # j # xs) \\<subseteq> {0..n}\"\n  shows \"len M' i j xs \\<le> len M i j xs\"", "lemma DBM_reset_neg_cycle_preservation:\n  assumes \"DBM_reset M n k d M'\" \"len M i i xs < Le 0\" \"set (k # i # xs) \\<subseteq> {0..n}\"\n  shows \"\\<exists> j. \\<exists> ys. set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le 0\"", "lemma DBM_reset_reset:\n  \"0 < k \\<Longrightarrow> k \\<le> n \\<Longrightarrow> DBM_reset M n k d (reset M n k d)\"", "lemma DBM_reset_complete:\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M n\"\n  shows \"DBM_val_bounded v (u(c := d)) M' n\"", "lemma DBM_reset_sound_empty:\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\"\n          \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\"\n  shows \"\\<not> DBM_val_bounded v u M n\"", "lemma DBM_reset_diag_preservation:\n  \"\\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> DBM_reset M n i d M' \\<Longrightarrow> \\<forall>k\\<le>n. M' k k \\<le> \\<one>\"", "lemma FW_diag_preservation:\n  \"\\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> \\<forall>k\\<le>n. (FW M n) k k \\<le> \\<one>\"", "lemma DBM_reset_not_cyc_free_preservation:\n  assumes \"\\<not> cyc_free M n\" \"DBM_reset M n k d M'\" \"k \\<le> n\"\n  shows \"\\<not> cyc_free M' n\"", "lemma DBM_reset_complete_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\" \"k \\<le> n\"\n          \"DBM_reset M n k d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\"", "lemma DBM_reset_complete_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\"\n          \"DBM_reset (FW M n) n (v c) d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u (FW M n) n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\"", "lemma DBM_reset_complete_empty1:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\"\n          \"DBM_reset (FW M n) n (v c) d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\"", "lemma DBM_reset_empty'':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset M n (v c) d M'\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\"", "lemma DBM_reset_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset (FW M n) n (v c) d M'\"\n  shows \"[FW M n]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\"", "lemma DBM_reset_empty':\n  assumes \"canonical M n\" \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset (FW M n) n (v c) d M'\"\n  shows   \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\"", "lemma DBM_reset_sound':\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M' n\"\n          \"DBM_val_bounded v u'' M n\"\n  obtains d' where  \"DBM_val_bounded v (u(c := d')) M n\"", "lemma DBM_reset_sound2:\n  assumes \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M' n\"\n  shows \"u c = d\"", "lemma DBM_reset_sound'':\n  fixes M v c n d\n  defines \"M' \\<equiv> reset M n (v c) d\"\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_val_bounded v u M' n\"\n          \"DBM_val_bounded v u'' M n\"\n  obtains d' where  \"DBM_val_bounded v (u(c := d')) M n\"", "lemma DBM_reset_sound:\n  fixes M v c n d\n  defines \"M' \\<equiv> reset M n (v c) d\"\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"u \\<in> [M']\\<^bsub>v,n\\<^esub>\"\n  obtains d' where  \"u(c := d') \\<in>[M]\\<^bsub>v,n\\<^esub>\"", "lemma DBM_reset'_complete':\n  assumes \"DBM_val_bounded v u M n\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"\\<exists> u'. DBM_val_bounded v u' (reset' M n cs v d) n\"", "lemma DBM_reset'_complete:\n  assumes \"DBM_val_bounded v u M n\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"DBM_val_bounded v ([cs \\<rightarrow> d]u) (reset' M n cs v d) n\"", "lemma DBM_reset'_sound_empty:\n  assumes \"clock_numbering' v n\" \"\\<forall>c \\<in> set cs. v c \\<le> n\"\n          \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' M n cs v d) n\"\n  shows \"\\<not> DBM_val_bounded v u M n\"", "lemma DBM_reset'_sound':\n  fixes M v c n d cs\n  assumes \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n          \"DBM_val_bounded v u (reset' M n cs v d) n\" \"DBM_val_bounded v u'' M n\"\n  shows \"\\<exists>ts. DBM_val_bounded v (set_clocks cs ts u) M n\"", "lemma DBM_reset'_resets:\n  fixes M v c n d cs\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n          \"DBM_val_bounded v u (reset' M n cs v d) n\"\n  shows \"\\<forall>c \\<in> set cs. u c = d\"", "lemma DBM_reset'_resets':\n  fixes M v c n d cs\n  assumes \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"DBM_val_bounded v u (reset' M n cs v d) n\"\n          \"DBM_val_bounded v u'' M n\"\n  shows \"\\<forall>c \\<in> set cs. u c = d\"", "lemma DBM_reset'_neg_diag_preservation':\n  assumes \"k\\<le>n\" \"M k k < \\<one>\" \"clock_numbering v\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"reset' M n cs v d k k < \\<one>\"", "lemma DBM_reset'_complete_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n          \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' M n cs v d) n\"", "lemma DBM_reset'_complete_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n          \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' (FW M n) n cs v d) n\"", "lemma DBM_reset'_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\"", "lemma DBM_reset'_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\"", "lemma DBM_reset'_sound:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n    and \"\\<forall>c\\<in>set cs. v c \\<le> n\"\n    and \"u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>\"\n  shows \"\\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>\"", "lemma get_const_sum[simp]:\n  \"a \\<noteq> \\<infinity> \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> get_const a \\<in> \\<int> \\<Longrightarrow> get_const b \\<in> \\<int> \\<Longrightarrow> get_const (a + b) \\<in> \\<int>\"", "lemma sum_not_inf_dest:\n  assumes \"a + b \\<noteq> \\<infinity>\"\n  shows \"a \\<noteq> \\<infinity> \\<and> b \\<noteq> \\<infinity>\"", "lemma sum_not_inf_int:\n  assumes \"a + b \\<noteq> \\<infinity>\" \"get_const a \\<in> \\<int>\" \"get_const b \\<in> \\<int>\"\n  shows \"get_const (a + b) \\<in> \\<int>\"", "lemma int_fw_upd:\n  \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. m i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (m i j) \\<in> \\<int> \\<Longrightarrow> k \\<le> n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n\n  \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> (fw_upd m k i j i' j') \\<noteq> \\<infinity>\n  \\<Longrightarrow> get_const (fw_upd m k i j i' j') \\<in> \\<int>\"", "lemma fw_int_aux_c:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) 0 0 c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) 0 0 c) i j) \\<in> \\<int>\"", "lemma fw_int_aux_Suc_b:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. (fw M n) a b n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const ((fw M n) a b n i j) \\<in> \\<int>\"\n          \"a \\<le> n\" \"Suc b \\<le> n\" \"c \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) a (Suc b) c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) a (Suc b) c) i j) \\<in> \\<int>\"", "lemma fw_int_aux_b:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) 0 b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) 0 b c) i j) \\<in> \\<int>\"", "lemma fw_int_aux_Suc_a:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. (fw M n) a n n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const ((fw M n) a n n i j) \\<in> \\<int>\"\n          \"Suc a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) (Suc a) b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) (Suc a) b c) i j) \\<in> \\<int>\"", "lemma fw_int_preservation:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) a b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) a b c) i j) \\<in> \\<int>\"", "lemma FW_int_preservation:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\"\n  shows \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. FW M n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (FW M n i j) \\<in> \\<int>\"", "lemma And_int_preservation:\n  assumes \"dbm_int M1 n\" \"dbm_int M2 n\"\n  shows \"dbm_int (And M1 M2) n\"", "lemma up_int_preservation:\n  \"dbm_int M n \\<Longrightarrow> dbm_int (up M) n\"", "lemma DBM_reset_int_preservation':\n  assumes \"dbm_int M n\" \"DBM_reset M n k d M'\" \"d \\<in> \\<int>\" \"k \\<le> n\"\n  shows \"dbm_int M' n\"", "lemma DBM_reset_int_preservation:\n  assumes \"dbm_int M n\" \"d \\<in> \\<int>\" \"0 < k\" \"k \\<le> n\"\n  shows \"dbm_int (reset M n k d) n\"", "lemma DBM_reset'_int_preservation:\n  assumes \"dbm_int M n\" \"d \\<in> \\<int>\" \"\\<forall>c. v c > 0\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"dbm_int (reset' M n cs v d) n\"", "lemma int_zone_dbm:\n  assumes \"clock_numbering' v n\"\n    \"\\<forall> (_,d) \\<in> collect_clock_pairs cc. d \\<in> \\<int>\" \"\\<forall> c \\<in> collect_clks cc. v c \\<le> n\"\n  obtains M where \"{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>\"\n            and   \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\"", "lemma reset_set1:\n  \"\\<forall>c \\<in> set cs. ([cs\\<rightarrow>d]u) c = d\"", "lemma reset_set11:\n  \"\\<forall>c. c \\<notin> set cs \\<longrightarrow> ([cs\\<rightarrow>d]u) c = u c\"", "lemma reset_set2:\n  \"\\<forall>c. c \\<notin> set cs \\<longrightarrow> (set_clocks cs ts u)c = u c\"", "lemma reset_set:\n  assumes \"\\<forall> c \\<in> set cs. u c = d\"\n  shows \"[cs\\<rightarrow>d](set_clocks cs ts u) = u\"", "lemma dbm_int_abstr:\n  assumes \"\\<forall> (x, m) \\<in> collect_clock_pairs g. m \\<in> \\<int>\"\n  shows \"dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n\"", "lemma dbm_int_inv_abstr:\n  assumes \"\\<forall>(x,m) \\<in> clkp_set A. m \\<in> \\<nat>\"\n  shows \"dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n\"", "lemma dbm_int_guard_abstr:\n  assumes \"valid_abstraction A X k\" \"A \\<turnstile> l \\<longrightarrow>\\<^bsup>g,a,r\\<^esup> l'\"\n  shows \"dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n\"", "lemma collect_clks_id: \"collect_clks cc = fst ` collect_clock_pairs cc\"", "lemma canonical_cyc_free:\n  \"canonical M n \\<Longrightarrow> \\<forall>i \\<le> n. M i i \\<ge> \\<one> \\<Longrightarrow> cyc_free M n\"", "lemma canonical_cyc_free2:\n  \"canonical M n \\<Longrightarrow> cyc_free M n \\<longleftrightarrow> (\\<forall>i \\<le> n. M i i \\<ge> \\<one>)\"", "lemma DBM_reset'_diag_preservation:\n  assumes \"\\<forall>k\\<le>n. M k k \\<le> \\<one>\" \"clock_numbering v\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"\\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\""], "translations": [["", "lemma gt_swap:\n  fixes a b c :: \"'t :: time\"\n  assumes \"c < a + b\"\n  shows \"c < b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < b + a", "by (simp add: add.commute assms)"], ["", "lemma le_swap:\n  fixes a b c :: \"'t :: time\"\n  assumes \"c \\<le> a + b\"\n  shows \"c \\<le> b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<le> b + a", "by (simp add: add.commute assms)"], ["", "abbreviation clock_numbering :: \"('c \\<Rightarrow> nat) \\<Rightarrow> bool\"\nwhere\n  \"clock_numbering v \\<equiv> \\<forall> c. v c > 0\""], ["", "section \\<open>Time Lapse\\<close>"], ["", "definition up :: \"('t::time) DBM \\<Rightarrow> ('t::time) DBM\"\nwhere\n  \"up M \\<equiv>\n    \\<lambda> i j. if i > 0 then if j = 0 then \\<infinity> else min (dbm_add (M i 0) (M 0 j)) (M i j) else M i j\""], ["", "lemma dbm_entry_dbm_lt:\n  assumes \"dbm_entry_val u (Some c1) (Some c2) a\" \"a \\<prec> b\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "using assms"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) a\n  a \\<prec> b\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "proof (cases, auto, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<lbrakk>Le d \\<prec> b; a = Le d; u c1 - u c2 \\<le> d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b\n 2. \\<And>d.\n       \\<lbrakk>Lt d \\<prec> b; a = Lt d; u c1 - u c2 < d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b", "case 1"], ["proof (state)\nthis:\n  Le d_ \\<prec> b\n  a = Le d_\n  u c1 - u c2 \\<le> d_\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<lbrakk>Le d \\<prec> b; a = Le d; u c1 - u c2 \\<le> d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b\n 2. \\<And>d.\n       \\<lbrakk>Lt d \\<prec> b; a = Lt d; u c1 - u c2 < d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b", "thus ?case"], ["proof (prove)\nusing this:\n  Le d_ \\<prec> b\n  a = Le d_\n  u c1 - u c2 \\<le> d_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "by (cases, auto)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) b\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>Lt d \\<prec> b; a = Lt d; u c1 - u c2 < d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>Lt d \\<prec> b; a = Lt d; u c1 - u c2 < d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b", "case 2"], ["proof (state)\nthis:\n  Lt d_ \\<prec> b\n  a = Lt d_\n  u c1 - u c2 < d_\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>Lt d \\<prec> b; a = Lt d; u c1 - u c2 < d\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2) b", "thus ?case"], ["proof (prove)\nusing this:\n  Lt d_ \\<prec> b\n  a = Lt d_\n  u c1 - u c2 < d_\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "by (cases, auto)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_entry_dbm_min2:\n  assumes \"dbm_entry_val u None (Some c) (min a b)\"\n  shows \"dbm_entry_val u None (Some c) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) b", "using dbm_entry_val_mono_2[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow> dbm_entry_val u None (Some c) ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) b", "by auto"], ["", "lemma dbm_entry_dbm_min3:\n  assumes \"dbm_entry_val u (Some c) None (min a b)\"\n  shows \"dbm_entry_val u (Some c) None b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None b", "using dbm_entry_val_mono_3[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow> dbm_entry_val u (Some c) None ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None b", "by auto"], ["", "lemma dbm_entry_dbm_min:\n  assumes \"dbm_entry_val u (Some c1) (Some c2) (min a b)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "using dbm_entry_val_mono_1[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) b", "by auto"], ["", "lemma dbm_entry_dbm_min3':\n  assumes \"dbm_entry_val u (Some c) None (min a b)\"\n  shows \"dbm_entry_val u (Some c) None a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None a", "using dbm_entry_val_mono_3[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow> dbm_entry_val u (Some c) None ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None a", "by auto"], ["", "lemma dbm_entry_dbm_min2':\n  assumes \"dbm_entry_val u None (Some c) (min a b)\"\n  shows \"dbm_entry_val u None (Some c) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) a", "using dbm_entry_val_mono_2[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow> dbm_entry_val u None (Some c) ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) a", "by auto"], ["", "lemma dbm_entry_dbm_min':\n  assumes \"dbm_entry_val u (Some c1) (Some c2) (min a b)\"\n  shows \"dbm_entry_val u (Some c1) (Some c2) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) a", "using dbm_entry_val_mono_1[folded less_eq, OF assms]"], ["proof (prove)\nusing this:\n  min a b \\<le> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) a", "by auto"], ["", "lemma DBM_up_complete': \"clock_numbering v \\<Longrightarrow> u \\<in> ([M]\\<^bsub>v,n\\<^esub>)\\<^sup>\\<up> \\<Longrightarrow> u \\<in> [up M]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     u \\<in> [M]\\<^bsub>v,n\\<^esub>\\<^sup>\\<up>\\<rbrakk>\n    \\<Longrightarrow> u \\<in> [up M]\\<^bsub>v,n\\<^esub>", "unfolding up_def DBM_zone_repr_def DBM_val_bounded_def zone_delay_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     u \\<in> {u \\<oplus> d |u d.\n              u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n                          (\\<forall>c.\n                              v c \\<le> n \\<longrightarrow>\n                              dbm_entry_val u None (Some c)\n                               (M 0 (v c)) \\<and>\n                              dbm_entry_val u (Some c) None\n                               (M (v c) 0)) \\<and>\n                          (\\<forall>c1 c2.\n                              v c1 \\<le> n \\<and>\n                              v c2 \\<le> n \\<longrightarrow>\n                              dbm_entry_val u (Some c1) (Some c2)\n                               (M (v c1) (v c2)))} \\<and>\n              (0::'b) \\<le> d}\\<rbrakk>\n    \\<Longrightarrow> u \\<in> {u. Le (0::'b) \\<preceq> (if 0 < 0\n                  then if 0 = 0 then \\<infinity>\n                       else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n                  else M 0 0) \\<and>\n                                  (\\<forall>c.\nv c \\<le> n \\<longrightarrow>\ndbm_entry_val u None (Some c)\n (if 0 < 0\n  then if v c = 0 then \\<infinity>\n       else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n  else M 0 (v c)) \\<and>\ndbm_entry_val u (Some c) None\n (if 0 < v c\n  then if 0 = 0 then \\<infinity>\n       else min (dbm_add (M (v c) 0) (M 0 0)) (M (v c) 0)\n  else M (v c) 0)) \\<and>\n                                  (\\<forall>c1 c2.\nv c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\ndbm_entry_val u (Some c1) (Some c2)\n (if 0 < v c1\n  then if v c2 = 0 then \\<infinity>\n       else min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n  else M (v c1) (v c2)))}", "proof (safe, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 4. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "case prems: (2 u d c)"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c \\<le> n\n\ngoal (4 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 4. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "hence *: \"dbm_entry_val u None (Some c) (M 0 (v c))\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n\ngoal (4 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 4. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da; - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "case (1 d')"], ["proof (state)\nthis:\n  M 0 (v c) = Le d'\n  - u c \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da; - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "have \"- (u c + d) \\<le> - u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (u c + d) \\<le> - u c", "using \\<open>d \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  (0::'b) \\<le> d\n\ngoal (1 subgoal):\n 1. - (u c + d) \\<le> - u c", "by simp"], ["proof (state)\nthis:\n  - (u c + d) \\<le> - u c\n\ngoal (3 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da; - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "with 1(2)"], ["proof (chain)\npicking this:\n  - u c \\<le> d'\n  - (u c + d) \\<le> - u c", "have \"- (u c + d)\\<le> d'\""], ["proof (prove)\nusing this:\n  - u c \\<le> d'\n  - (u c + d) \\<le> - u c\n\ngoal (1 subgoal):\n 1. - (u c + d) \\<le> d'", "by (blast intro: order.trans)"], ["proof (state)\nthis:\n  - (u c + d) \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da; - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - (u c + d) \\<le> d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  - (u c + d) \\<le> d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (\\<lambda>x. u x + d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "using 1"], ["proof (prove)\nusing this:\n  - (u c + d) \\<le> d'\n  M 0 (v c) = Le d'\n  - u c \\<le> d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (\\<lambda>x. u x + d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u \\<oplus> d) None (Some c)\n   (if 0 < 0\n    then if v c = 0 then \\<infinity>\n         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n    else M 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "case (2 d')"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d'\n  - u c < d'\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "have \"- (u c + d) \\<le> - u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (u c + d) \\<le> - u c", "using \\<open>d \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  (0::'b) \\<le> d\n\ngoal (1 subgoal):\n 1. - (u c + d) \\<le> - u c", "by simp"], ["proof (state)\nthis:\n  - (u c + d) \\<le> - u c\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "with 2(2)"], ["proof (chain)\npicking this:\n  - u c < d'\n  - (u c + d) \\<le> - u c", "have \"- (u c + d) < d'\""], ["proof (prove)\nusing this:\n  - u c < d'\n  - (u c + d) \\<le> - u c\n\ngoal (1 subgoal):\n 1. - (u c + d) < d'", "by (blast intro: order_le_less_trans)"], ["proof (state)\nthis:\n  - (u c + d) < d'\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da; - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u \\<oplus> d) None (Some c)\n                          (if 0 < 0\n                           then if v c = 0 then \\<infinity>\n                                else min (dbm_add (M 0 0) (M 0 (v c)))\n(M 0 (v c))\n                           else M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - (u c + d) < d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  - (u c + d) < d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (\\<lambda>x. u x + d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "using 2"], ["proof (prove)\nusing this:\n  - (u c + d) < d'\n  M 0 (v c) = Lt d'\n  - u c < d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (\\<lambda>x. u x + d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u \\<oplus> d) None (Some c)\n   (if 0 < 0\n    then if v c = 0 then \\<infinity>\n         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n    else M 0 (v c))\n\ngoal (1 subgoal):\n 1. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u \\<oplus> d) None (Some c)\n     (if 0 < 0\n      then if v c = 0 then \\<infinity>\n           else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n      else M 0 (v c))", "qed auto"], ["proof (state)\nthis:\n  dbm_entry_val (u \\<oplus> d) None (Some c)\n   (if 0 < 0\n    then if v c = 0 then \\<infinity>\n         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n    else M 0 (v c))\n\ngoal (3 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 3. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 3. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "case prems: (4 u d c1 c2)"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 3. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c1 \\<le> n\n  v c2 \\<le> n", "have\n    \"dbm_entry_val u (Some c1) None (M (v c1) 0)\" \"dbm_entry_val u None (Some c2) (M 0 (v c2))\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) None (M (v c1) 0) &&&\n    dbm_entry_val u None (Some c2) (M 0 (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) None (M (v c1) 0)\n  dbm_entry_val u None (Some c2) (M 0 (v c2))\n\ngoal (3 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 3. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "from dbm_entry_val_add_4[OF this] prems"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c1 \\<le> n\n  v c2 \\<le> n", "have\n    \"dbm_entry_val u (Some c1) (Some c2) (min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\n  \\<forall>c. 0 < v c\n  u = u \\<oplus> d\n  (0::'b) \\<le> d\n  Le (0::'b) \\<preceq> M 0 0\n  \\<forall>c.\n     v c \\<le> n \\<longrightarrow>\n     dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n     dbm_entry_val u (Some c) None (M (v c) 0)\n  \\<forall>c1 c2.\n     v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n     dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2)))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2)))\n\ngoal (3 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)\n 3. \\<And>ua d c1 c2.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c1) (Some c2)\n                          (if 0 < v c1\n                           then if v c2 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n(M (v c1) (v c2))\n                           else M (v c1) (v c2))", "with prems(1)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  dbm_entry_val u (Some c1) (Some c2)\n   (min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2)))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  dbm_entry_val u (Some c1) (Some c2)\n   (min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u \\<oplus> d) (Some c1) (Some c2)\n     (if 0 < v c1\n      then if v c2 = 0 then \\<infinity>\n           else min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n      else M (v c1) (v c2))", "by (cases \"min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\", auto simp: cval_add_def)"], ["proof (state)\nthis:\n  dbm_entry_val (u \\<oplus> d) (Some c1) (Some c2)\n   (if 0 < v c1\n    then if v c2 = 0 then \\<infinity>\n         else min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n    else M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. \\<And>ua d.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2))\\<rbrakk>\n       \\<Longrightarrow> Le (0::'b) \\<preceq> (if 0 < 0\n         then if 0 = 0 then \\<infinity>\n              else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n         else M 0 0)\n 2. \\<And>ua d c.\n       \\<lbrakk>\\<forall>c. 0 < v c; u = ua \\<oplus> d; (0::'b) \\<le> d;\n        Le (0::'b) \\<preceq> M 0 0;\n        \\<forall>c.\n           v c \\<le> n \\<longrightarrow>\n           dbm_entry_val ua None (Some c) (M 0 (v c)) \\<and>\n           dbm_entry_val ua (Some c) None (M (v c) 0);\n        \\<forall>c1 c2.\n           v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n           dbm_entry_val ua (Some c1) (Some c2) (M (v c1) (v c2));\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (ua \\<oplus> d) (Some c) None\n                          (if 0 < v c\n                           then if 0 = 0 then \\<infinity>\n                                else min (dbm_add (M (v c) 0) (M 0 0))\n(M (v c) 0)\n                           else M (v c) 0)", "qed auto"], ["", "fun theLe :: \"('t::time) DBMEntry \\<Rightarrow> 't\" where\n  \"theLe (Le d) = d\" |\n  \"theLe (Lt d) = d\" |\n  \"theLe \\<infinity> = 0\""], ["", "lemma DBM_up_sound':\n  assumes \"clock_numbering' v n\" \"u \\<in> [up M]\\<^bsub>v,n\\<^esub>\"\n  shows \"u \\<in> ([M]\\<^bsub>v,n\\<^esub>)\\<^sup>\\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> [M]\\<^bsub>v,n\\<^esub>\\<^sup>\\<up>", "unfolding DBM_zone_repr_def zone_delay_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {u \\<oplus> d |u d.\n             u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} \\<and>\n             (0::'b) \\<le> d}", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. u \\<in> {u \\<oplus> d |u d.\n             u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} \\<and>\n             (0::'b) \\<le> d}", "proof (clarsimp, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "case A: 1"], ["proof (state)\nthis:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain S_Max_Le where S_Max_Le:\n    \"S_Max_Le = {d - u c | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Max_Le.\n        S_Max_Le =\n        {d - u c |c d.\n         0 < v c \\<and>\n         v c \\<le> n \\<and> M (v c) 0 = Le d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain S_Max_Lt where S_Max_Lt:\n    \"S_Max_Lt = {d - u c | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Max_Lt.\n        S_Max_Lt =\n        {d - u c |c d.\n         0 < v c \\<and>\n         v c \\<le> n \\<and> M (v c) 0 = Lt d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain S_Min_Le where S_Min_Le:\n    \"S_Min_Le = {- d - u c| c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Min_Le.\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and>\n         v c \\<le> n \\<and> M 0 (v c) = Le d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain S_Min_Lt where S_Min_Lt:\n    \"S_Min_Lt = {- d - u c | c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Min_Lt.\n        S_Min_Lt =\n        {- d - u c |c d.\n         0 < v c \\<and>\n         v c \\<le> n \\<and> M 0 (v c) = Lt d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have \"finite {c. 0 < v c \\<and> v c \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "using A(2,3)"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "case 0"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y", "have \"{c. 0 < v c \\<and> v c \\<le> 0} = {}\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. {c. 0 < v c \\<and> v c \\<le> 0} = {}", "by auto"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}", "show ?case"], ["proof (prove)\nusing this:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> 0}", "by (metis finite.emptyI)"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> 0}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y", "have \"finite {c. 0 < v c \\<and> v c \\<le> n}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "by auto"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "moreover"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "have \"{c. 0 < v c \\<and> v c \\<le> Suc n} = {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {c. 0 < v c \\<and> v c \\<le> Suc n} =\n    {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}", "by auto"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "moreover"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "have \"finite {c. v c = Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c. v c = Suc n}", "proof (cases \"{c. v c = Suc n} = {}\", auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "assume \"v c = Suc n\""], ["proof (state)\nthis:\n  v c = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "then"], ["proof (chain)\npicking this:\n  v c = Suc n", "have \"{c. v c = Suc n} = {c}\""], ["proof (prove)\nusing this:\n  v c = Suc n\n\ngoal (1 subgoal):\n 1. {c. v c = Suc n} = {c}", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  v c = Suc n\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. {c. v c = Suc n} = {c}", "by auto"], ["proof (state)\nthis:\n  {c. v c = Suc n} = {c}\n\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "then"], ["proof (chain)\npicking this:\n  {c. v c = Suc n} = {c}", "show ?thesis"], ["proof (prove)\nusing this:\n  {c. v c = Suc n} = {c}\n\ngoal (1 subgoal):\n 1. finite {c. v c = Suc n}", "by auto"], ["proof (state)\nthis:\n  finite {c. v c = Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "ultimately"], ["proof (chain)\npicking this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n  finite {c. v c = Suc n}", "show ?case"], ["proof (prove)\nusing this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n  finite {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "by auto"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "then"], ["proof (chain)\npicking this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}", "have \"\\<forall> f. finite {(c,b) | c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\""], ["proof (prove)\nusing this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "moreover"], ["proof (state)\nthis:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"\\<forall> f K. {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n    \\<subseteq> {(c,b) | c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n       \\<subseteq> {(c, b) |c b.\n                    0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "have 1:\n    \"\\<forall> f K. finite {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       finite\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "using finite_subset"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       finite\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by fast"], ["proof (state)\nthis:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have \"\\<forall> f K. theLe o K = id \\<longrightarrow> finite {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       theLe \\<circ> K = id \\<longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "case prems: (1 f K)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have\n      \"{(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n      = (\\<lambda> (c,b). (c, theLe b)) ` {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n    (\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "proof (auto simp add: pointfree_idE, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "case (1 a b)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b", "have \"(a, K b) \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b\n\ngoal (1 subgoal):\n 1. (a, K b)\n    \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "moreover"], ["proof (state)\nthis:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "from 1(1)"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have \"theLe (K b) = b\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. theLe (K b) = b", "by (simp add: pointfree_idE)"], ["proof (state)\nthis:\n  theLe (K b) = b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "ultimately"], ["proof (chain)\npicking this:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  theLe (K b) = b", "show ?case"], ["proof (prove)\nusing this:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  theLe (K b) = b\n\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> (\\<lambda>x. case x of (c, b) \\<Rightarrow> (c, theLe b)) `\n          {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by force"], ["proof (state)\nthis:\n  (a, b)\n  \\<in> (\\<lambda>x. case x of (c, b) \\<Rightarrow> (c, theLe b)) `\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "moreover"], ["proof (state)\nthis:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "from 1"], ["proof (chain)\npicking this:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "have\n      \"finite ((\\<lambda> (c,b). (c, theLe b)) ` {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\""], ["proof (prove)\nusing this:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, b). (c, theLe b)) `\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})", "by auto"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "ultimately"], ["proof (chain)\npicking this:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})", "show ?case"], ["proof (prove)\nusing this:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\n\ngoal (1 subgoal):\n 1. finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "then"], ["proof (chain)\npicking this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "have finI:\n    \"\\<And> f g K. theLe o K = id \\<Longrightarrow> finite (g ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\""], ["proof (prove)\nusing this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})", "by auto"], ["proof (state)\nthis:\n  theLe \\<circ> ?K4 = id \\<Longrightarrow>\n  finite\n   (?g4 `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> ?f4 M (v c) = ?K4 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"finite ((\\<lambda>(c,d). - d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). - d - u c) `\n      {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})", "by (rule finI, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"S_Min_Le = ((\\<lambda>(c,d). - d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_Min_Le =\n    (\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}", "using S_Min_Le"], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. S_Min_Le =\n    (\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}", "by auto"], ["proof (state)\nthis:\n  S_Min_Le =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\n  S_Min_Le =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}", "have fin_min_le: \"finite S_Min_Le\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d})\n  S_Min_Le =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. finite S_Min_Le", "by auto"], ["proof (state)\nthis:\n  finite S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"finite ((\\<lambda>(c,d). - d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). - d - u c) `\n      {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})", "by (rule finI, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"S_Min_Lt = ((\\<lambda>(c,d). - d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_Min_Lt =\n    (\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}", "using S_Min_Lt"], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. S_Min_Lt =\n    (\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\n  S_Min_Lt =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}", "have fin_min_lt: \"finite S_Min_Lt\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). - d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d})\n  S_Min_Lt =\n  (\\<lambda>(c, d). - d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. finite S_Min_Lt", "by auto"], ["proof (state)\nthis:\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have \"finite ((\\<lambda>(c,d). d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). d - u c) `\n      {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})", "by (rule finI, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"S_Max_Le = ((\\<lambda>(c,d). d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_Max_Le =\n    (\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}", "using S_Max_Le"], ["proof (prove)\nusing this:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n\ngoal (1 subgoal):\n 1. S_Max_Le =\n    (\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}", "by auto"], ["proof (state)\nthis:\n  S_Max_Le =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\n  S_Max_Le =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}", "have fin_max_le: \"finite S_Max_Le\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d})\n  S_Max_Le =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n\ngoal (1 subgoal):\n 1. finite S_Max_Le", "by auto"], ["proof (state)\nthis:\n  finite S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"finite ((\\<lambda>(c,d). d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). d - u c) `\n      {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})", "by (rule finI, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have\n    \"S_Max_Lt = ((\\<lambda>(c,d). d - u c) ` {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_Max_Lt =\n    (\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}", "using S_Max_Lt"], ["proof (prove)\nusing this:\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n\ngoal (1 subgoal):\n 1. S_Max_Lt =\n    (\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}", "by auto"], ["proof (state)\nthis:\n  S_Max_Lt =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\n  S_Max_Lt =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}", "have fin_max_lt: \"finite S_Max_Lt\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). d - u c) `\n    {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d})\n  S_Max_Lt =\n  (\\<lambda>(c, d). d - u c) `\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n\ngoal (1 subgoal):\n 1. finite S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"x \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "hence \"x \\<le> 0\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'b)", "unfolding S_Min_Le"], ["proof (prove)\nusing this:\n  x \\<in> {- d - u c |c d.\n           0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'b)", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Le d\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> (0::'b)", "case (1 c d)"], ["proof (state)\nthis:\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Le d\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Le d\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> (0::'b)", "with A(1)"], ["proof (chain)\npicking this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Le d", "have \"- u c \\<le> d\""], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Le d\n\ngoal (1 subgoal):\n 1. - u c \\<le> d", "unfolding DBM_zone_repr_def DBM_val_bounded_def up_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> (if 0 < 0\n                                    then if 0 = 0 then \\<infinity>\n   else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n                                    else M 0 0) \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c)\n                   (if 0 < 0\n                    then if v c = 0 then \\<infinity>\n                         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n                    else M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None\n                   (if 0 < v c\n                    then if 0 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c) 0) (M 0 0)) (M (v c) 0)\n                    else M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2)\n                   (if 0 < v c1\n                    then if v c2 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n                               (M (v c1) (v c2))\n                    else M (v c1) (v c2)))}\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Le d\n\ngoal (1 subgoal):\n 1. - u c \\<le> d", "by auto"], ["proof (state)\nthis:\n  - u c \\<le> d\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Le d\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> (0::'b)", "thus ?case"], ["proof (prove)\nusing this:\n  - u c \\<le> d\n\ngoal (1 subgoal):\n 1. - d - u c \\<le> (0::'b)", "by (simp add: minus_le_iff)"], ["proof (state)\nthis:\n  - d - u c \\<le> (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Min_Le \\<Longrightarrow> ?x7 \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note Min_Le_le_0 = this"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Min_Le \\<Longrightarrow> ?x7 \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have Min_Lt_le_0: \"x < 0\" if \"x \\<in> S_Min_Lt\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < (0::'b)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. x < (0::'b)", "unfolding S_Min_Lt"], ["proof (prove)\nusing this:\n  x \\<in> {- d - u c |c d.\n           0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. x < (0::'b)", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Lt d\\<rbrakk>\n       \\<Longrightarrow> - d - u c < (0::'b)", "case (1 c d)"], ["proof (state)\nthis:\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Lt d\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Lt d\\<rbrakk>\n       \\<Longrightarrow> - d - u c < (0::'b)", "with A(1)"], ["proof (chain)\npicking this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Lt d", "have \"- u c < d\""], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Lt d\n\ngoal (1 subgoal):\n 1. - u c < d", "unfolding DBM_zone_repr_def DBM_val_bounded_def up_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> (if 0 < 0\n                                    then if 0 = 0 then \\<infinity>\n   else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n                                    else M 0 0) \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c)\n                   (if 0 < 0\n                    then if v c = 0 then \\<infinity>\n                         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n                    else M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None\n                   (if 0 < v c\n                    then if 0 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c) 0) (M 0 0)) (M (v c) 0)\n                    else M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2)\n                   (if 0 < v c1\n                    then if v c2 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n                               (M (v c1) (v c2))\n                    else M (v c1) (v c2)))}\n  x = - d - u c\n  0 < v c\n  v c \\<le> n\n  M 0 (v c) = Lt d\n\ngoal (1 subgoal):\n 1. - u c < d", "by auto"], ["proof (state)\nthis:\n  - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>c d.\n       \\<lbrakk>x = - d - u c; 0 < v c; v c \\<le> n;\n        M 0 (v c) = Lt d\\<rbrakk>\n       \\<Longrightarrow> - d - u c < (0::'b)", "thus ?case"], ["proof (prove)\nusing this:\n  - u c < d\n\ngoal (1 subgoal):\n 1. - d - u c < (0::'b)", "by (simp add: minus_less_iff)"], ["proof (state)\nthis:\n  - d - u c < (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "text \\<open>\n    The following basically all use the same proof.\n    Only the first is not completely identical but nearly identical.\n\\<close>"], ["proof (state)\nthis:\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"l \\<in> S_Min_Le\" \"r \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with S_Min_Le S_Max_Le"], ["proof (chain)\npicking this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le", "have \"l \\<le> r\""], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. l \\<le> r", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "case (1 c c' d d')"], ["proof (state)\nthis:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "note G1 = this"], ["proof (state)\nthis:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence *:\"(up M) (v c') (v c) = min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\""], ["proof (prove)\nusing this:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "using A"], ["proof (prove)\nusing this:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "unfolding up_def"], ["proof (prove)\nusing this:\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [(\\<lambda>i j.\n               if 0 < i\n               then if j = 0 then \\<infinity>\n                    else min (dbm_add (M i 0) (M 0 j)) (M i j)\n               else M i j)]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (if 0 < v c'\n     then if v c = 0 then \\<infinity>\n          else min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n     else M (v c') (v c)) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "have \"dbm_entry_val u (Some c') (Some c) ((up M) (v c') (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "using A G1"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "unfolding DBM_zone_repr_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "using dbm_entry_dbm_min' *"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"u c' - u c \\<le> d' + d\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. u c' - u c \\<le> d' + d", "using G1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. u c' - u c \\<le> d' + d", "by auto"], ["proof (state)\nthis:\n  u c' - u c \\<le> d' + d\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"u c' + (- u c - d) \\<le> d'\""], ["proof (prove)\nusing this:\n  u c' - u c \\<le> d' + d\n\ngoal (1 subgoal):\n 1. u c' + (- u c - d) \\<le> d'", "by (simp add: add_diff_eq diff_le_eq)"], ["proof (state)\nthis:\n  u c' + (- u c - d) \\<le> d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"- u c - d \\<le> d' - u c'\""], ["proof (prove)\nusing this:\n  u c' + (- u c - d) \\<le> d'\n\ngoal (1 subgoal):\n 1. - u c - d \\<le> d' - u c'", "by (simp add: add.commute le_diff_eq)"], ["proof (state)\nthis:\n  - u c - d \\<le> d' - u c'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Max_Le =\n                {d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        S_Min_Le =\n        {- d - u c |c d.\n         0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - d \\<le> d' - u c'\n\ngoal (1 subgoal):\n 1. - d - u c \\<le> d' - u c'", "by (metis add_uminus_conv_diff uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d - u c \\<le> d' - u c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<le> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note EE = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"l \\<in> S_Min_Le\" \"r \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with S_Min_Le S_Max_Le"], ["proof (chain)\npicking this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le", "have \"l \\<le> r\""], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. l \\<le> r", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "case (1 c c' d d')"], ["proof (state)\nthis:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "note G1 = this"], ["proof (state)\nthis:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence *:\"(up M) (v c') (v c) = min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\""], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "using A"], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "unfolding up_def"], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [(\\<lambda>i j.\n               if 0 < i\n               then if j = 0 then \\<infinity>\n                    else min (dbm_add (M i 0) (M 0 j)) (M i j)\n               else M i j)]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (if 0 < v c'\n     then if v c = 0 then \\<infinity>\n          else min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n     else M (v c') (v c)) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "have \"dbm_entry_val u (Some c') (Some c) ((up M) (v c') (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "using A G1"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "unfolding DBM_zone_repr_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "using dbm_entry_dbm_min' *"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"u c' - u c \\<le> d' + d\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. u c' - u c \\<le> d' + d", "using G1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. u c' - u c \\<le> d' + d", "by auto"], ["proof (state)\nthis:\n  u c' - u c \\<le> d' + d\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"u c' + (- u c - d) \\<le> d'\""], ["proof (prove)\nusing this:\n  u c' - u c \\<le> d' + d\n\ngoal (1 subgoal):\n 1. u c' + (- u c - d) \\<le> d'", "by (simp add: add_diff_eq diff_le_eq)"], ["proof (state)\nthis:\n  u c' + (- u c - d) \\<le> d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "hence \"- u c - d \\<le> d' - u c'\""], ["proof (prove)\nusing this:\n  u c' + (- u c - d) \\<le> d'\n\ngoal (1 subgoal):\n 1. - u c - d \\<le> d' - u c'", "by (simp add: add.commute le_diff_eq)"], ["proof (state)\nthis:\n  - u c - d \\<le> d' - u c'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c \\<le> da - u ca", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - d \\<le> d' - u c'\n\ngoal (1 subgoal):\n 1. - d - u c \\<le> d' - u c'", "by (metis add_uminus_conv_diff uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d - u c \\<le> d' - u c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<le> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note EE = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 \\<le> ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"l \\<in> S_Min_Lt\" \"r \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with S_Min_Lt S_Max_Le"], ["proof (chain)\npicking this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le", "have \"l < r\""], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "case (1 c c' d d')"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "note G1 = this"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence *:\"(up M) (v c') (v c) = min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\""], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "using A"], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "unfolding up_def"], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n  u \\<in> [(\\<lambda>i j.\n               if 0 < i\n               then if j = 0 then \\<infinity>\n                    else min (dbm_add (M i 0) (M 0 j)) (M i j)\n               else M i j)]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (if 0 < v c'\n     then if v c = 0 then \\<infinity>\n          else min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n     else M (v c') (v c)) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "have \"dbm_entry_val u (Some c') (Some c) ((up M) (v c') (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "using A G1"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "unfolding DBM_zone_repr_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "using dbm_entry_dbm_min' *"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' - u c < d' + d\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "using G1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Le d'\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "by auto"], ["proof (state)\nthis:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' + (- u c - d) < d'\""], ["proof (prove)\nusing this:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. u c' + (- u c - d) < d'", "by (simp add: add_diff_eq diff_less_eq)"], ["proof (state)\nthis:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"- u c - d < d' - u c'\""], ["proof (prove)\nusing this:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. - u c - d < d' - u c'", "by (simp add: add.commute less_diff_eq)"], ["proof (state)\nthis:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Le =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Le da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. - d - u c < d' - u c'", "by (metis add_uminus_conv_diff uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d - u c < d' - u c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Lt; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note LE = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Lt; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Lt; ?r7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"l \\<in> S_Min_Le\" \"r \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with S_Min_Le S_Max_Lt"], ["proof (chain)\npicking this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt", "have \"l < r\""], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "case (1 c c' d d')"], ["proof (state)\nthis:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "note G1 = this"], ["proof (state)\nthis:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence *:\"(up M) (v c') (v c) = min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\""], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "using A"], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "unfolding up_def"], ["proof (prove)\nusing this:\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n  u \\<in> [(\\<lambda>i j.\n               if 0 < i\n               then if j = 0 then \\<infinity>\n                    else min (dbm_add (M i 0) (M 0 j)) (M i j)\n               else M i j)]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (if 0 < v c'\n     then if v c = 0 then \\<infinity>\n          else min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n     else M (v c') (v c)) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "have \"dbm_entry_val u (Some c') (Some c) ((up M) (v c') (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "using A G1"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "unfolding DBM_zone_repr_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "using dbm_entry_dbm_min' *"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' - u c < d' + d\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "using G1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Le d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "by auto"], ["proof (state)\nthis:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' + (- u c - d) < d'\""], ["proof (prove)\nusing this:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. u c' + (- u c - d) < d'", "by (simp add: add_diff_eq diff_less_eq)"], ["proof (state)\nthis:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"- u c - d < d' - u c'\""], ["proof (prove)\nusing this:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. - u c - d < d' - u c'", "by (simp add: add.commute less_diff_eq)"], ["proof (state)\nthis:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Le =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Le d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. - d - u c < d' - u c'", "by (metis add_uminus_conv_diff uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d - u c < d' - u c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note EL = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Le; ?r7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "assume \"l \\<in> S_Min_Lt\" \"r \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with S_Min_Lt S_Max_Lt"], ["proof (chain)\npicking this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt", "have \"l < r\""], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "case (1 c c' d d')"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "note G1 = this"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence *:\"(up M) (v c') (v c) = min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\""], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "using A"], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. up M (v c') (v c) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "unfolding up_def"], ["proof (prove)\nusing this:\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n  u \\<in> [(\\<lambda>i j.\n               if 0 < i\n               then if j = 0 then \\<infinity>\n                    else min (dbm_add (M i 0) (M 0 j)) (M i j)\n               else M i j)]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. (if 0 < v c'\n     then if v c = 0 then \\<infinity>\n          else min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n     else M (v c') (v c)) =\n    min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "have \"dbm_entry_val u (Some c') (Some c) ((up M) (v c') (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "using A G1"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "unfolding DBM_zone_repr_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "using dbm_entry_dbm_min' *"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (up M (v c') (v c))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n  up M (v c') (v c) =\n  min (dbm_add (M (v c') 0) (M 0 (v c))) (M (v c') (v c))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' - u c < d' + d\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "using G1"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (dbm_add (M (v c') 0) (M 0 (v c)))\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  l = - d - u c\n  r = d' - u c'\n  0 < v c\n  0 < v c'\n  v c \\<le> n\n  M 0 (v c) = Lt d\n  v c' \\<le> n\n  M (v c') 0 = Lt d'\n\ngoal (1 subgoal):\n 1. u c' - u c < d' + d", "by auto"], ["proof (state)\nthis:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"u c' + (- u c - d) < d'\""], ["proof (prove)\nusing this:\n  u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. u c' + (- u c - d) < d'", "by (simp add: add_diff_eq diff_less_eq)"], ["proof (state)\nthis:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "hence \"- u c - d < d' - u c'\""], ["proof (prove)\nusing this:\n  u c' + (- u c - d) < d'\n\ngoal (1 subgoal):\n 1. - u c - d < d' - u c'", "by (simp add: add.commute less_diff_eq)"], ["proof (state)\nthis:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. \\<And>c ca d da.\n       \\<lbrakk>S_Min_Lt =\n                {- d - u c |c d.\n                 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d};\n        S_Max_Lt =\n        {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d};\n        l = - d - u c; r = da - u ca; 0 < v c; 0 < v ca; v c \\<le> n;\n        M 0 (v c) = Lt d; v ca \\<le> n; M (v ca) 0 = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d - u c < da - u ca", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - d < d' - u c'\n\ngoal (1 subgoal):\n 1. - d - u c < d' - u c'", "by (metis add_uminus_conv_diff uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d - u c < d' - u c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Lt; ?r7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "note LL = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l7 \\<in> S_Min_Lt; ?r7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l7 < ?r7\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain m where m: \"\\<forall> t \\<in> S_Min_Le. m \\<ge> t\" \"\\<forall> t \\<in> S_Min_Lt. m > t\"\n                    \"\\<forall> t \\<in> S_Max_Le. m \\<le> t\" \"\\<forall> t \\<in> S_Max_Lt. m < t\" \"m \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume m:\"(\\<And>m. \\<forall>t\\<in>S_Min_Le. t \\<le> m \\<Longrightarrow>\n          \\<forall>t\\<in>S_Min_Lt. t < m \\<Longrightarrow> \\<forall>t\\<in>S_Max_Le. m \\<le> t \\<Longrightarrow> \\<forall>t\\<in>S_Max_Lt. m < t \\<Longrightarrow> m \\<le> 0 \\<Longrightarrow> thesis)\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> ?m5;\n   \\<forall>t\\<in>S_Min_Lt. t < ?m5; \\<forall>t\\<in>S_Max_Le. ?m5 \\<le> t;\n   \\<forall>t\\<in>S_Max_Lt. ?m5 < t; ?m5 \\<le> (0::'b)\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?min_le = \"Max S_Min_Le\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?min_lt = \"Max S_Min_Lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?max_le = \"Min S_Max_Le\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?max_lt = \"Min S_Max_Lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> m;\n         \\<forall>t\\<in>S_Min_Lt. t < m; \\<forall>t\\<in>S_Max_Le. m \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. m < t; m \\<le> (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Min_Le = {} \\<and> S_Min_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "note T = this"], ["proof (state)\nthis:\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Max_Le = {} \\<and> S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"0 :: 't :: time\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using True T"], ["proof (prove)\nusing this:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (1 subgoal):\n 1. thesis", "by (intro m[of ?d']) auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d =\n          \"if S_Max_Le \\<noteq> {}\n           then if S_Max_Lt \\<noteq> {} then min ?max_lt ?max_le else ?max_le\n           else ?max_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "obtain a :: \"'b\" where a: \"a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using non_trivial_neg"], ["proof (prove)\nusing this:\n  \\<exists>x. x < (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a < (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"min 0 (?d + a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume \"x \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "with fin_max_le a"], ["proof (chain)\npicking this:\n  finite S_Max_Le\n  a < (0::'b)\n  x \\<in> S_Max_Le", "have \"min 0 (Min S_Max_Le + a) \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Le\n  a < (0::'b)\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. min (0::'b) (Min S_Max_Le + a) \\<le> x", "by (metis Min_le add_le_same_cancel1 le_less_trans less_imp_le min.cobounded2 not_less)"], ["proof (state)\nthis:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x", "have \"min 0 (Min S_Max_Le + a) \\<le> x\""], ["proof (prove)\nusing this:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. min (0::'b) (Min S_Max_Le + a) \\<le> x", "by auto"], ["proof (state)\nthis:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 1 = this"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?max_lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt", "by (meson a add_less_same_cancel1 min.cobounded1 min.strict_coboundedI2 order.strict_trans2)"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from fin_max_lt x"], ["proof (chain)\npicking this:\n  finite S_Max_Lt\n  x \\<in> S_Max_Lt", "have \"\\<dots> \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Lt\n  x \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Min S_Max_Lt \\<le> x", "by auto"], ["proof (state)\nthis:\n  Min S_Max_Lt \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\""], ["proof (prove)\nusing this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\n\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x", "."], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 2 = this"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?max_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le", "by (metis le_add_same_cancel1 linear not_le a min_le_iff_disj)"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from fin_max_le x"], ["proof (chain)\npicking this:\n  finite S_Max_Le\n  x \\<in> S_Max_Le", "have \"\\<dots> \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Le\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. Min S_Max_Le \\<le> x", "by auto"], ["proof (state)\nthis:\n  Min S_Max_Le \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\""], ["proof (prove)\nusing this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\n\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x", "."], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 3 = this"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using False T a 1 2 3"], ["proof (prove)\nusing this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n  a < (0::'b)\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x7\n  ?x7 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x7\n  ?x7 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x7\n\ngoal (1 subgoal):\n 1. thesis", "proof ((intro m[of ?d']), auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>a < (0::'b);\n        \\<And>x.\n           x \\<in> S_Max_Lt \\<Longrightarrow>\n           min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < x;\n        S_Min_Le = {}; S_Min_Lt = {}; S_Max_Le = {}; x \\<in> S_Max_Lt;\n        \\<not> min (0::'b) (Min S_Max_Lt + a) < x; xa \\<in> S_Max_Lt;\n        xb \\<in> S_Max_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  a < (0::'b)\n  ?x5 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x5\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>a < (0::'b);\n        \\<And>x.\n           x \\<in> S_Max_Lt \\<Longrightarrow>\n           min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < x;\n        S_Min_Le = {}; S_Min_Lt = {}; S_Max_Le = {}; x \\<in> S_Max_Lt;\n        \\<not> min (0::'b) (Min S_Max_Lt + a) < x; xa \\<in> S_Max_Lt;\n        xb \\<in> S_Max_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a < (0::'b)\n  ?x5 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x5\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt", "show ?case"], ["proof (prove)\nusing this:\n  a < (0::'b)\n  ?x5 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x5\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by (metis Min.coboundedI add_less_same_cancel1 dual_order.strict_trans2 fin_max_lt\n                    min.boundedE not_le)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "note F = this"], ["proof (state)\nthis:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Max_Le = {} \\<and> S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"0 :: 't :: time\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using True Min_Le_le_0 Min_Lt_le_0"], ["proof (prove)\nusing this:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n  ?x7 \\<in> S_Min_Le \\<Longrightarrow> ?x7 \\<le> (0::'b)\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n\ngoal (1 subgoal):\n 1. thesis", "by (intro m[of ?d']) auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?r =\n          \"if S_Max_Le \\<noteq> {}\n           then if S_Max_Lt \\<noteq> {} then min ?max_lt ?max_le else ?max_le\n           else ?max_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?l =\n          \"if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {} then max ?min_lt ?min_le else ?min_le\n           else ?min_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have 1: \"x \\<le> max ?min_lt ?min_le\" \"x \\<le> ?min_le\" if \"x \\<in> S_Min_Le\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Le", "using that fin_min_le"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Le\n  finite S_Min_Le\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Le", "by (simp add: max.coboundedI2)+"], ["proof (state)\nthis:\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x5 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow> ?x5 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x5 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow> ?x5 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Le\" \"y \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt", "have \"S_Min_Lt \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. S_Min_Lt \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from LE[OF Max_in[OF fin_min_lt], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Lt < x", "have \"?min_lt \\<le> x\""], ["proof (prove)\nusing this:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt \\<le> x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Le; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 3 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Le; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have 4: \"?min_le \\<le> x\" if \"x \\<in> S_Max_Le\" \"y \\<in> S_Min_Le\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max S_Min_Le \\<le> x", "using EE[OF Max_in[OF fin_min_le], OF _ that(1)] that"], ["proof (prove)\nusing this:\n  S_Min_Le \\<noteq> {} \\<Longrightarrow> Max S_Min_Le \\<le> x\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Le \\<le> x", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?x5 \\<in> S_Max_Le; ?y5 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x5\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x5 \\<in> S_Max_Le; ?y5 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x5\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\" \"y \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt", "have \"S_Min_Lt \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. S_Min_Lt \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from LL[OF Max_in[OF fin_min_lt], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Lt < x", "have \"?min_lt < x\""], ["proof (prove)\nusing this:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 5 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\" \"y \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le", "have \"S_Min_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. S_Min_Le \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from EL[OF Max_in[OF fin_min_le], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Le < x", "have \"?min_le < x\""], ["proof (prove)\nusing this:\n  Max S_Min_Le < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Le < x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 6 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x7\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"y \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  y \\<in> S_Min_Le", "have \"S_Min_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. S_Min_Le \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from Min_Le_le_0[OF Max_in[OF fin_min_le], OF this]"], ["proof (chain)\npicking this:\n  Max S_Min_Le \\<le> (0::'b)", "have \"?min_le \\<le> 0\""], ["proof (prove)\nusing this:\n  Max S_Min_Le \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. Max S_Min_Le \\<le> (0::'b)", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?y7 \\<in> S_Min_Le \\<Longrightarrow> Max S_Min_Le \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 7 = this"], ["proof (state)\nthis:\n  ?y7 \\<in> S_Min_Le \\<Longrightarrow> Max S_Min_Le \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?y7 \\<in> S_Min_Le \\<Longrightarrow> Max S_Min_Le \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"y \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  y \\<in> S_Min_Lt", "have \"S_Min_Lt \\<noteq> {}\""], ["proof (prove)\nusing this:\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. S_Min_Lt \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from Min_Lt_le_0[OF Max_in[OF fin_min_lt], OF this]"], ["proof (chain)\npicking this:\n  Max S_Min_Lt < (0::'b)", "have \"?min_lt < 0\" \"?min_lt \\<le> 0\""], ["proof (prove)\nusing this:\n  Max S_Min_Lt < (0::'b)\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < (0::'b) &&& Max S_Min_Lt \\<le> (0::'b)", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < (0::'b)\n  Max S_Min_Lt \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt < (0::'b)\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 8 = this"], ["proof (state)\nthis:\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt < (0::'b)\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"?l < ?r\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)", "have *: \"S_Max_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Max_Le \\<noteq> {}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with \\<open>\\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}", "obtain y where y:\"y \\<in> S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> S_Max_Lt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note 1 = 1 this"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "assume A: \"x \\<in> S_Min_Le\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with EL[OF Max_in[OF fin_min_le] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Le \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Le < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Le \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Le < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note ** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with LL[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Lt < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note *** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Min_Le \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "note T = this"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Min_Lt \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Min_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using 1 T True ** ***"], ["proof (prove)\nusing this:\n  S_Min_Lt \\<noteq> {}\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  S_Min_Lt \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 T **"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<not> S_Min_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Le; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<not> S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "with 1 False *** \\<open>\\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  \\<not> S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> S_Min_Le \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  \\<not> S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?ya7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with LL[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Lt < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note *** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with LE[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_le]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Le \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le", "have \"Max S_Min_Lt < Min S_Max_Le\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Le \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note **** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "from F False"], ["proof (chain)\npicking this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)", "have **: \"S_Min_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Min_Le \\<noteq> {}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> Max S_Min_Lt\n                       < (if S_Max_Le \\<noteq> {}\n                          then if S_Max_Lt \\<noteq> {}\n                               then min (Min S_Max_Lt) (Min S_Max_Le)\n                               else Min S_Max_Le\n                          else Min S_Max_Lt);\n        S_Min_Le = {}; x \\<in> S_Min_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> Max S_Min_Lt\n                       < (if S_Max_Le \\<noteq> {}\n                          then if S_Max_Lt \\<noteq> {}\n                               then min (Min S_Max_Lt) (Min S_Max_Le)\n                               else Min S_Max_Le\n                          else Min S_Max_Lt);\n        S_Min_Le = {}; x \\<in> S_Min_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Le \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "note T = this"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Lt \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Max_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using 1 T True **** ***"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  S_Max_Lt \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 T ****"], ["proof (chain)\npicking this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<not> S_Max_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<not> S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Max_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "with 1 False *** \\<open>\\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  \\<not> S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> S_Max_Le \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  \\<not> S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x7 \\<in> S_Min_Lt; ?y7 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> S_Max_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume x: \"x \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Lt", "have \"x \\<le> ?min_lt\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> Max S_Min_Lt", "using fin_min_lt"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> Max S_Min_Lt", "by (simp add: max.coboundedI2)"], ["proof (state)\nthis:\n  x \\<le> Max S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  x \\<le> Max S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "have \"?min_lt < ?min_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Max S_Min_Le", "proof (rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> Max S_Min_Lt < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "with x **"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Lt\n  S_Min_Le \\<noteq> {}\n  \\<not> Max S_Min_Lt < Max S_Min_Le", "have 1: \"?l = ?min_lt\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n  S_Min_Le \\<noteq> {}\n  \\<not> Max S_Min_Lt < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt) =\n    Max S_Min_Lt", "by (auto simp: max.absorb1)"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "have 2: \"?min_lt < ?max_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "using * ****[OF x]"], ["proof (prove)\nusing this:\n  S_Max_Le \\<noteq> {}\n  ?y7 \\<in> S_Max_Le \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  S_Max_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Max_Lt \\<noteq> {}", "have \"?min_lt < ?max_lt\""], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "using * ***[OF x]"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n  S_Max_Le \\<noteq> {}\n  ?y7 \\<in> S_Max_Lt \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 2"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  Max S_Min_Lt < Min S_Max_Lt", "have \"?l < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with \\<open>\\<not> ?l < ?r\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Lt = {}\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "with 1 2"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  S_Max_Lt = {}", "have \"?l < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  S_Max_Lt = {}\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "with \\<open>\\<not> ?l < ?r\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max S_Min_Lt < Max S_Min_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  x < Max S_Min_Le", "have \"x < max ?min_lt ?min_le\""], ["proof (prove)\nusing this:\n  x < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. x < max (Max S_Min_Lt) (Max S_Min_Le)", "by (simp add: max.strict_coboundedI2)"], ["proof (state)\nthis:\n  x < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x7 < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note 2 = this"], ["proof (state)\nthis:\n  ?x7 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x7 < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using F False 1 2 3 4 5 6 7 8 * **"], ["proof (prove)\nusing this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x5 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow> ?x5 \\<le> Max S_Min_Le\n  ?x7 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x7 < max (Max S_Min_Lt) (Max S_Min_Le)\n  \\<lbrakk>?x7 \\<in> S_Max_Le; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x7\n  \\<lbrakk>?x5 \\<in> S_Max_Le; ?y5 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x5\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x7\n  \\<lbrakk>?x7 \\<in> S_Max_Lt; ?y7 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x7\n  ?y7 \\<in> S_Min_Le \\<Longrightarrow> Max S_Min_Le \\<le> (0::'b)\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt < (0::'b)\n  ?y7 \\<in> S_Min_Lt \\<Longrightarrow> Max S_Min_Lt \\<le> (0::'b)\n  S_Max_Le \\<noteq> {}\n  S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by ((intro m[of ?l]), auto)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "case True"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "obtain d where d: \"?l < d\" \"d < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>(if S_Min_Le \\<noteq> {}\n                  then if S_Min_Lt \\<noteq> {}\n                       then max (Max S_Min_Lt) (Max S_Min_Le)\n                       else Max S_Min_Le\n                  else Max S_Min_Lt)\n                 < d;\n         d < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using dense"], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n  ?x < ?y \\<Longrightarrow> \\<exists>z>?x. z < ?y\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>(if S_Min_Le \\<noteq> {}\n                  then if S_Min_Lt \\<noteq> {}\n                       then max (Max S_Min_Lt) (Max S_Min_Le)\n                       else Max S_Min_Le\n                  else Max S_Min_Lt)\n                 < d;\n         d < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "let ?d' = \"min 0 d\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume \"t \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Le", "have \"t \\<le> ?l\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Le\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x5 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x5 \\<in> S_Min_Le \\<Longrightarrow> ?x5 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "by auto"], ["proof (state)\nthis:\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)", "have \"t \\<le> d\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. t \\<le> d", "by auto"], ["proof (state)\nthis:\n  t \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Lt", "have \"t \\<le> max ?min_lt ?min_le\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "using fin_min_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "by (simp add: max.coboundedI1)"], ["proof (state)\nthis:\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with t Min_Lt_le_0"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Lt\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "have \"t \\<le> ?l\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "using fin_min_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "by auto"], ["proof (state)\nthis:\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)", "have \"t < d\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. t < d", "by auto"], ["proof (state)\nthis:\n  t < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Max_Le", "have \"min ?max_lt ?max_le \\<le> t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "using fin_max_le"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n  finite S_Max_Le\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "by (simp add: min.coboundedI2)"], ["proof (state)\nthis:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "have \"?r \\<le> t\""], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "using fin_max_le t"], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n  finite S_Max_Le\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "by auto"], ["proof (state)\nthis:\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t", "have \"d \\<le> t\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. d \\<le> t", "by auto"], ["proof (state)\nthis:\n  d \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d \\<le> t", "have \"min 0 d \\<le> t\""], ["proof (prove)\nusing this:\n  d \\<le> t\n\ngoal (1 subgoal):\n 1. min (0::'b) d \\<le> t", "by (simp add: min.coboundedI2)"], ["proof (state)\nthis:\n  min (0::'b) d \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Max_Lt", "have \"min ?max_lt ?max_le \\<le> t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "using fin_max_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "by (simp add: min.coboundedI1)"], ["proof (state)\nthis:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "have \"?r \\<le> t\""], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "using fin_max_lt t"], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n  finite S_Max_Lt\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "by auto"], ["proof (state)\nthis:\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t", "have \"d < t\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. d < t", "by auto"], ["proof (state)\nthis:\n  d < t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d < t", "have \"min 0 d < t\""], ["proof (prove)\nusing this:\n  d < t\n\ngoal (1 subgoal):\n 1. min (0::'b) d < t", "by (simp add: min.strict_coboundedI2)"], ["proof (state)\nthis:\n  min (0::'b) d < t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t7 \\<in> S_Max_Lt \\<Longrightarrow> min (0::'b) d < ?t7\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n  ?t7 \\<in> S_Max_Lt \\<Longrightarrow> min (0::'b) d < ?t7", "show thesis"], ["proof (prove)\nusing this:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n  ?t7 \\<in> S_Max_Lt \\<Longrightarrow> min (0::'b) d < ?t7\n\ngoal (1 subgoal):\n 1. thesis", "using Min_Le_le_0 Min_Lt_le_0"], ["proof (prove)\nusing this:\n  ?t7 \\<in> S_Min_Le \\<Longrightarrow> ?t7 \\<le> d\n  ?t7 \\<in> S_Min_Lt \\<Longrightarrow> ?t7 < d\n  ?t7 \\<in> S_Max_Le \\<Longrightarrow> min (0::'b) d \\<le> ?t7\n  ?t7 \\<in> S_Max_Lt \\<Longrightarrow> min (0::'b) d < ?t7\n  ?x7 \\<in> S_Min_Le \\<Longrightarrow> ?x7 \\<le> (0::'b)\n  ?x5 \\<in> S_Min_Lt \\<Longrightarrow> ?x5 < (0::'b)\n\ngoal (1 subgoal):\n 1. thesis", "by ((intro m[of ?d']), auto)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>S_Min_Le. t \\<le> m\n  \\<forall>t\\<in>S_Min_Lt. t < m\n  \\<forall>t\\<in>S_Max_Le. m \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. m < t\n  m \\<le> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "obtain u' where \"u' = (u \\<oplus> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u'. u' = u \\<oplus> m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u' = u \\<oplus> m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "hence u': \"u = (u' \\<oplus> (-m))\""], ["proof (prove)\nusing this:\n  u' = u \\<oplus> m\n\ngoal (1 subgoal):\n 1. u = u' \\<oplus> - m", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  u' = (\\<lambda>x. u x + m)\n\ngoal (1 subgoal):\n 1. u = (\\<lambda>x. u' x + - m)", "by force"], ["proof (state)\nthis:\n  u = u' \\<oplus> - m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "have \"DBM_val_bounded v u' M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "unfolding DBM_val_bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u' None (Some c) (M 0 (v c)) \\<and>\n        dbm_entry_val u' (Some c) None (M (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2)))", "proof (auto, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. Le (0::'b) \\<preceq> M 0 0\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' (Some c) None (M (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. Le (0::'b) \\<preceq> M 0 0\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' (Some c) None (M (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "with A(1,2)"], ["proof (chain)\npicking this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c", "show ?case"], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0", "unfolding DBM_zone_repr_def DBM_val_bounded_def up_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> (if 0 < 0\n                                    then if 0 = 0 then \\<infinity>\n   else min (dbm_add (M 0 0) (M 0 0)) (M 0 0)\n                                    else M 0 0) \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c)\n                   (if 0 < 0\n                    then if v c = 0 then \\<infinity>\n                         else min (dbm_add (M 0 0) (M 0 (v c))) (M 0 (v c))\n                    else M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None\n                   (if 0 < v c\n                    then if 0 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c) 0) (M 0 0)) (M (v c) 0)\n                    else M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2)\n                   (if 0 < v c1\n                    then if v c2 = 0 then \\<infinity>\n                         else min (dbm_add (M (v c1) 0) (M 0 (v c2)))\n                               (M (v c1) (v c2))\n                    else M (v c1) (v c2)))}\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M 0 0\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (3 c)"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "proof (cases \"M (v c) 0\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "case (1 x1)"], ["proof (state)\nthis:\n  v c \\<le> n\n  M (v c) 0 = Le x1\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "hence \"m \\<le> x1 - u c\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M (v c) 0 = Le x1\n\ngoal (1 subgoal):\n 1. m \\<le> x1 - u c", "using m(3) S_Max_Le A(2)"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M (v c) 0 = Le x1\n  \\<forall>t\\<in>S_Max_Le. m \\<le> t\n  S_Max_Le =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Le d}\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. m \\<le> x1 - u c", "by blast"], ["proof (state)\nthis:\n  m \\<le> x1 - u c\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "hence \"u c + m \\<le> x1\""], ["proof (prove)\nusing this:\n  m \\<le> x1 - u c\n\ngoal (1 subgoal):\n 1. u c + m \\<le> x1", "by (simp add: add.commute le_diff_eq)"], ["proof (state)\nthis:\n  u c + m \\<le> x1\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 3. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  u c + m \\<le> x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "using u' 1(2)"], ["proof (prove)\nusing this:\n  u c + m \\<le> x1\n  u = u' \\<oplus> - m\n  M (v c) 0 = Le x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  u c + m \\<le> x1\n  u = (\\<lambda>x. u' x + - m)\n  M (v c) 0 = Le x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c) None (M (v c) 0)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "case (2 x2)"], ["proof (state)\nthis:\n  v c \\<le> n\n  M (v c) 0 = Lt x2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "hence \"m < x2 - u c\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M (v c) 0 = Lt x2\n\ngoal (1 subgoal):\n 1. m < x2 - u c", "using m(4) S_Max_Lt A(2)"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M (v c) 0 = Lt x2\n  \\<forall>t\\<in>S_Max_Lt. m < t\n  S_Max_Lt =\n  {d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M (v c) 0 = Lt d}\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. m < x2 - u c", "by blast"], ["proof (state)\nthis:\n  m < x2 - u c\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "hence \"u c + m < x2\""], ["proof (prove)\nusing this:\n  m < x2 - u c\n\ngoal (1 subgoal):\n 1. u c + m < x2", "by (metis add_less_cancel_left diff_add_cancel gt_swap)"], ["proof (state)\nthis:\n  u c + m < x2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M (v c) 0 = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)\n 2. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  u c + m < x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "using u' 2(2)"], ["proof (prove)\nusing this:\n  u c + m < x2\n  u = u' \\<oplus> - m\n  M (v c) 0 = Lt x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  u c + m < x2\n  u = (\\<lambda>x. u' x + - m)\n  M (v c) 0 = Lt x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "case 3"], ["proof (state)\nthis:\n  v c \\<le> n\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M (v c) 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c) None (M (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c) None (M (v c) 0)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (2 c)"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "proof (cases \"M 0 (v c)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "case (1 x1)"], ["proof (state)\nthis:\n  v c \\<le> n\n  M 0 (v c) = Le x1\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "hence \"- x1 - u c \\<le> m\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M 0 (v c) = Le x1\n\ngoal (1 subgoal):\n 1. - x1 - u c \\<le> m", "using m(1) S_Min_Le A(2)"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M 0 (v c) = Le x1\n  \\<forall>t\\<in>S_Min_Le. t \\<le> m\n  S_Min_Le =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Le d}\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. - x1 - u c \\<le> m", "by blast"], ["proof (state)\nthis:\n  - x1 - u c \\<le> m\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "hence \"- u c - m \\<le> x1\""], ["proof (prove)\nusing this:\n  - x1 - u c \\<le> m\n\ngoal (1 subgoal):\n 1. - u c - m \\<le> x1", "using diff_le_eq neg_le_iff_le"], ["proof (prove)\nusing this:\n  - x1 - u c \\<le> m\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (- ?b \\<le> - ?a) = (?a \\<le> ?b)\n\ngoal (1 subgoal):\n 1. - u c - m \\<le> x1", "by fastforce"], ["proof (state)\nthis:\n  - u c - m \\<le> x1\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 3. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - m \\<le> x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "using u' 1(2)"], ["proof (prove)\nusing this:\n  - u c - m \\<le> x1\n  u = u' \\<oplus> - m\n  M 0 (v c) = Le x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  - u c - m \\<le> x1\n  u = (\\<lambda>x. u' x + - m)\n  M 0 (v c) = Le x1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' None (Some c) (M 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "case (2 x2)"], ["proof (state)\nthis:\n  v c \\<le> n\n  M 0 (v c) = Lt x2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "hence \"- x2  - u c < m\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M 0 (v c) = Lt x2\n\ngoal (1 subgoal):\n 1. - x2 - u c < m", "using m(2) S_Min_Lt A(2)"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M 0 (v c) = Lt x2\n  \\<forall>t\\<in>S_Min_Lt. t < m\n  S_Min_Lt =\n  {- d - u c |c d. 0 < v c \\<and> v c \\<le> n \\<and> M 0 (v c) = Lt d}\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. - x2 - u c < m", "by blast"], ["proof (state)\nthis:\n  - x2 - u c < m\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "hence \"- u c - m < x2\""], ["proof (prove)\nusing this:\n  - x2 - u c < m\n\ngoal (1 subgoal):\n 1. - u c - m < x2", "using diff_less_eq neg_less_iff_less"], ["proof (prove)\nusing this:\n  - x2 - u c < m\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (- ?b < - ?a) = (?a < ?b)\n\ngoal (1 subgoal):\n 1. - u c - m < x2", "by fastforce"], ["proof (state)\nthis:\n  - u c - m < x2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>v c \\<le> n; M 0 (v c) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))\n 2. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c - m < x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "using u' 2(2)"], ["proof (prove)\nusing this:\n  - u c - m < x2\n  u = u' \\<oplus> - m\n  M 0 (v c) = Lt x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "unfolding cval_add_def"], ["proof (prove)\nusing this:\n  - u c - m < x2\n  u = (\\<lambda>x. u' x + - m)\n  M 0 (v c) = Lt x2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "case 3"], ["proof (state)\nthis:\n  v c \\<le> n\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v c \\<le> n; M 0 (v c) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u' None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u' None (Some c) (M 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u' None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "from A(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c1 > 0\" \"v c2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c1 &&& v c2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  0 < v c1\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  0 < v c1\n  v c2 \\<noteq> 0", "have B: \"(up M) (v c1) (v c2) = min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  0 < v c1\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. up M (v c1) (v c2) =\n    min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))", "unfolding up_def"], ["proof (prove)\nusing this:\n  0 < v c1\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if 0 < v c1\n     then if v c2 = 0 then \\<infinity>\n          else min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n     else M (v c1) (v c2)) =\n    min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))", "by simp"], ["proof (state)\nthis:\n  up M (v c1) (v c2) =\n  min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u' (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "proof (cases \"(dbm_add (M (v c1) 0) (M 0 (v c2))) < (M (v c1) (v c2))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) 0) (M 0 (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  \\<not> dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) 0) (M 0 (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "with B"], ["proof (chain)\npicking this:\n  up M (v c1) (v c2) =\n  min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n  \\<not> dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)", "have \"(up M) (v c1) (v c2) = M (v c1) (v c2)\""], ["proof (prove)\nusing this:\n  up M (v c1) (v c2) =\n  min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n  \\<not> dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. up M (v c1) (v c2) = M (v c1) (v c2)", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) 0) (M 0 (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "with A(1) 4"], ["proof (chain)\npicking this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = M (v c1) (v c2)", "have\n        \"dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> up M}\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) 0) (M 0 (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "using u'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  u = u' \\<oplus> - m\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "by cases (auto simp add: cval_add_def)"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "with B"], ["proof (chain)\npicking this:\n  up M (v c1) (v c2) =\n  min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n  dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)", "have \"(up M) (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))\""], ["proof (prove)\nusing this:\n  up M (v c1) (v c2) =\n  min (dbm_add (M (v c1) 0) (M 0 (v c2))) (M (v c1) (v c2))\n  dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "with A(1) 4"], ["proof (chain)\npicking this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))", "have\n        \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\""], ["proof (prove)\nusing this:\n  u \\<in> [up M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> up M}\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> up M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (up M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (up M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (up M (v c1) (v c2)))}\n  v c1 \\<le> n\n  v c2 \\<le> n\n  up M (v c1) (v c2) = dbm_add (M (v c1) 0) (M 0 (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "with True dbm_entry_dbm_lt"], ["proof (chain)\npicking this:\n  dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n  \\<lbrakk>dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a;\n   ?a \\<prec> ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?b\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))", "have\n        \"dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2)\n  \\<lbrakk>dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a;\n   ?a \\<prec> ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?b\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "unfolding less"], ["proof (prove)\nusing this:\n  dbm_add (M (v c1) 0) (M 0 (v c2)) \\<prec> M (v c1) (v c2)\n  \\<lbrakk>dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a;\n   ?a \\<prec> ?b\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?b\n  dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) 0) (M 0 (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "by fast"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) 0) (M 0 (v c2)) < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "using u'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  u = u' \\<oplus> - m\n\ngoal (1 subgoal):\n 1. dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))", "by cases (auto simp add: cval_add_def)"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u' (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> [up M]\\<^bsub>v,n\\<^esub>; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ua d.\n                         u = ua \\<oplus> d \\<and>\n                         ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and>\n                         (0::'b) \\<le> d", "with m(5) u'"], ["proof (chain)\npicking this:\n  m \\<le> (0::'b)\n  u = u' \\<oplus> - m\n  u' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show ?case"], ["proof (prove)\nusing this:\n  m \\<le> (0::'b)\n  u = u' \\<oplus> - m\n  u' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<exists>ua d.\n       u = ua \\<oplus> d \\<and>\n       ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and> (0::'b) \\<le> d", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ua d.\n     u = ua \\<oplus> d \\<and>\n     ua \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<and> (0::'b) \\<le> d\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>From Clock Constraints to DBMs\\<close>"], ["", "fun And :: \"('t :: time) DBM \\<Rightarrow> 't DBM \\<Rightarrow> 't DBM\" where\n  \"And M1 M2 = (\\<lambda> i j. min (M1 i j) (M2 i j))\""], ["", "fun abstr :: \"('c, 't::time) cconstraint \\<Rightarrow> 't DBM \\<Rightarrow> ('c \\<Rightarrow> nat) \\<Rightarrow> 't DBM\"\nwhere\n  \"abstr (AND cc1 cc2) M v = And (abstr cc1 M v) (abstr cc2 M v)\" |\n  \"abstr (EQ c d) M v =\n    (\\<lambda> i j . if i = 0 \\<and> j = v c then Le (-d) else if i = v c \\<and> j = 0 then Le d else M i j)\" |\n  \"abstr (LT c d) M v =\n    (\\<lambda> i j . if i = 0 \\<and> j = v c then \\<infinity> else if i = v c \\<and> j = 0 then Lt d else M i j)\" |\n  \"abstr (LE c d) M v =\n    (\\<lambda> i j . if i = 0 \\<and> j = v c then \\<infinity> else if i = v c \\<and> j = 0 then Le d else M i j)\" |\n  \"abstr (GT c d) M v =\n    (\\<lambda> i j. if i = 0 \\<and> j = v c then Lt (- d) else if i = v c \\<and> j = 0 then \\<infinity> else M i j)\" |\n  \"abstr (GE c d) M v =\n    (\\<lambda> i j. if i = 0 \\<and> j = v c then Le (- d) else if i = v c \\<and> j = 0 then \\<infinity> else M i j)\""], ["", "lemma abstr_id1:\n  \"c \\<notin> collect_clks cc \\<Longrightarrow> clock_numbering' v n \\<Longrightarrow> \\<forall> c \\<in> collect_clks cc. v c \\<le> n\n    \\<Longrightarrow> abstr cc M v 0 (v c) = M 0 (v c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<notin> collect_clks cc;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> abstr cc M v 0 (v c) = M 0 (v c)", "by (induction cc) auto"], ["", "lemma abstr_id2:\n  \"c \\<notin> collect_clks cc \\<Longrightarrow> clock_numbering' v n \\<Longrightarrow> \\<forall> c \\<in> collect_clks cc. v c \\<le> n\n    \\<Longrightarrow> abstr cc M v (v c) 0 = M (v c) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<notin> collect_clks cc;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> abstr cc M v (v c) 0 = M (v c) 0", "by (induction cc) auto"], ["", "text \\<open>\n  This lemma is trivial because we constrained our theory to difference constraints.\n\\<close>"], ["", "lemma abstr_id3:\n  \"clock_numbering v \\<Longrightarrow> abstr cc M v (v c1) (v c2) = M (v c1) (v c2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c \\<Longrightarrow>\n    abstr cc M v (v c1) (v c2) = M (v c1) (v c2)", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c \\<Longrightarrow>\n    abstr cc M v (v c1) (v c2) = M (v c1) (v c2)", "case 1"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c \\<Longrightarrow>\n    abstr cc M v (v c1) (v c2) = M (v c1) (v c2)", "have \"\\<And>c. v c = 0 \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "assume \"v c = 0\""], ["proof (state)\nthis:\n  v c = 0\n\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  v c = 0\n\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "from 1"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (1 subgoal):\n 1. \\<And>c. v c = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  v c = 0\n  0 < v c", "show False"], ["proof (prove)\nusing this:\n  v c = 0\n  0 < v c\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v ?c = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < v c \\<Longrightarrow>\n    abstr cc M v (v c1) (v c2) = M (v c1) (v c2)", "then"], ["proof (chain)\npicking this:\n  v ?c = 0 \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  v ?c = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. abstr cc M v (v c1) (v c2) = M (v c1) (v c2)", "by ((induction cc), auto, fastforce)"], ["proof (state)\nthis:\n  abstr cc M v (v c1) (v c2) = M (v c1) (v c2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_abstr_soundness :\n  \"\\<lbrakk>u \\<turnstile> cc; clock_numbering' v n; \\<forall> c \\<in> collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> DBM_val_bounded v u (abstr cc (\\<lambda> i j. \\<infinity>) v) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile> cc;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc\n                   (\\<lambda>i j. \\<infinity>) v", "proof (unfold DBM_val_bounded_def, auto, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>u \\<turnstile> cc; \\<forall>c\\<in>collect_clks cc. v c \\<le> n;\n     \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> abstr cc\n      (\\<lambda>i j. \\<infinity>) v 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "case 1"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (4 subgoals):\n 1. \\<lbrakk>u \\<turnstile> cc; \\<forall>c\\<in>collect_clks cc. v c \\<le> n;\n     \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> abstr cc\n      (\\<lambda>i j. \\<infinity>) v 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "from this(3)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>", "by (induction cc) auto"], ["proof (state)\nthis:\n  abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>u \\<turnstile> cc; \\<forall>c\\<in>collect_clks cc. v c \\<le> n;\n     \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> abstr cc\n      (\\<lambda>i j. \\<infinity>) v 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "then"], ["proof (chain)\npicking this:\n  abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> abstr cc (\\<lambda>i j. \\<infinity>) v 0 0", "unfolding dbm_le_def"], ["proof (prove)\nusing this:\n  abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<prec> abstr cc (\\<lambda>i j. \\<infinity>) v 0 0 \\<or>\n    Le (0::'b) = abstr cc (\\<lambda>i j. \\<infinity>) v 0 0", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> abstr cc (\\<lambda>i j. \\<infinity>) v 0 0\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "case (2 c)"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n", "have \"clock_numbering' v n\""], ["proof (prove)\nusing this:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       0 < v c \\<and>\n       (\\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y)", "by auto"], ["proof (state)\nthis:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "note A = 2(1) this 2(5,2)"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "proof (cases \"c \\<in> collect_clks cc\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "then"], ["proof (chain)\npicking this:\n  c \\<in> collect_clks cc", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "using A(1,4)"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "proof (induction rule: collect_clks.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "case (1 cc1 cc2)"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "{"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "assume cc: \"c \\<in> collect_clks cc1\" \"c \\<in> collect_clks cc2\""], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2", "have ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto linarith"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0\n                       (v c))\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "note both = this"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0\n                       (v c))\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u None (Some c)\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     0 (v c));\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u None (Some c)\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0\n                             (v c));\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            0 (v c))\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "proof (cases \"c \\<in> collect_clks cc1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "note cc1 = this"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1", "have *: \"dbm_entry_val u None (Some c) (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "proof (cases \"c \\<in> collect_clks cc2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc2\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with cc1 both"], ["proof (chain)\npicking this:\n  c \\<in> collect_clks cc1\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0\n                       (v c))\n  c \\<in> collect_clks cc2", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc1\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0\n                       (v c))\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "from abstr_id1[OF False A(2)] 1(5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>collect_clks cc2. v c \\<le> n \\<Longrightarrow>\n  abstr cc2 ?M v 0 (v c) = ?M 0 (v c)\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have\n            \"min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)) (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n            = abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>collect_clks cc2. v c \\<le> n \\<Longrightarrow>\n  abstr cc2 ?M v 0 (v c) = ?M 0 (v c)\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n    abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)", "by (simp add: any_le_inf min.absorb1)"], ["proof (state)\nthis:\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some c)\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c)\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc1\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "note cc1 = this"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc1\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "proof (cases \"c \\<in> collect_clks cc2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc2\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc2", "have *: \"dbm_entry_val u None (Some c) (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "from abstr_id1[OF cc1 A(2)] 1(5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>collect_clks cc1. v c \\<le> n \\<Longrightarrow>\n  abstr cc1 ?M v 0 (v c) = ?M 0 (v c)\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have\n            \"min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c)) (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n            = abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>collect_clks cc1. v c \\<le> n \\<Longrightarrow>\n  abstr cc1 ?M v 0 (v c) = ?M 0 (v c)\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n    abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)", "by (simp add: any_le_inf min.absorb2)"], ["proof (state)\nthis:\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some c)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "with 1 cc1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<notin> collect_clks cc1\n  c \\<notin> collect_clks cc2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u None (Some c)\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<notin> collect_clks cc1\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (5 subgoals):\n 1. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 2. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 3. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 4. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))\n 5. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c)\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v 0\n                            (v c))", "qed auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "from abstr_id1[OF this A(2,4)]"], ["proof (chain)\npicking this:\n  abstr cc ?M v 0 (v c) = ?M 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  abstr cc ?M v 0 (v c) = ?M 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr cc (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "case (3 c)"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n", "have \"clock_numbering' v n\""], ["proof (prove)\nusing this:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       0 < v c \\<and>\n       (\\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y)", "by auto"], ["proof (state)\nthis:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "note A = 3(1) this 3(5,2)"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "from A(2)"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)", "have gt0: \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "proof (cases \"c \\<in> collect_clks cc\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "then"], ["proof (chain)\npicking this:\n  c \\<in> collect_clks cc", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "using A(1,4)"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "proof (induction rule: collect_clks.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "case (1 cc1 cc2)"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "assume cc: \"c \\<in> collect_clks cc1\" \"c \\<in> collect_clks cc2\""], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2", "have ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto linarith"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                       (v c) 0)\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "note both = this"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                       (v c) 0)\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_entry_val u (Some c) None\n                                   (abstr cc1 (\\<lambda>i j. \\<infinity>) v\n                                     (v c) 0);\n        \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> dbm_entry_val u (Some c) None\n                           (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c)\n                             0);\n        c \\<in> collect_clks (AND cc1 cc2); u \\<turnstile> AND cc1 cc2;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 6. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "proof (cases \"c \\<in> collect_clks cc1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "note cc1 = this"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc1\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1", "have *: \"dbm_entry_val u (Some c) None (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "proof (cases \"c \\<in> collect_clks cc2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc2\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with cc1 both"], ["proof (chain)\npicking this:\n  c \\<in> collect_clks cc1\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                       (v c) 0)\n  c \\<in> collect_clks cc2", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> collect_clks cc1\n  \\<lbrakk>c \\<in> collect_clks cc1; c \\<in> collect_clks cc2\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v\n                       (v c) 0)\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "from abstr_id2[OF False A(2)] 1(5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>collect_clks cc2. v c \\<le> n \\<Longrightarrow>\n  abstr cc2 ?M v (v c) 0 = ?M (v c) 0\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have\n            \"min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0) (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n            = abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>collect_clks cc2. v c \\<le> n \\<Longrightarrow>\n  abstr cc2 ?M v (v c) 0 = ?M (v c) 0\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n    abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0", "by (simp add: any_le_inf min.absorb1)"], ["proof (state)\nthis:\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None\n   (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc1\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "note cc1 = this"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc1\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc1 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "proof (cases \"c \\<in> collect_clks cc2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case True"], ["proof (state)\nthis:\n  c \\<in> collect_clks cc2\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc2", "have *: \"dbm_entry_val u (Some c) None (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<in> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "from abstr_id2[OF cc1 A(2)] 1(5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>collect_clks cc1. v c \\<le> n \\<Longrightarrow>\n  abstr cc1 ?M v (v c) 0 = ?M (v c) 0\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have\n            \"min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0) (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n            = abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>collect_clks cc1. v c \\<le> n \\<Longrightarrow>\n  abstr cc1 ?M v (v c) 0 = ?M (v c) 0\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n    abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0", "by (simp add: any_le_inf min.absorb2)"], ["proof (state)\nthis:\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0\n\ngoal (2 subgoals):\n 1. c \\<in> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n 2. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  min (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n   (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0) =\n  abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc2 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "with 1 cc1"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<notin> collect_clks cc1\n  c \\<notin> collect_clks cc2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<in> collect_clks cc1; u \\<turnstile> cc1;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc1 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  \\<lbrakk>c \\<in> collect_clks cc2; u \\<turnstile> cc2;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_entry_val u (Some c) None\n                     (abstr cc2 (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  c \\<in> collect_clks (AND cc1 cc2)\n  u \\<turnstile> AND cc1 cc2\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n  c \\<notin> collect_clks cc1\n  c \\<notin> collect_clks cc2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (5 subgoals):\n 1. \\<And>ca uu_.\n       \\<lbrakk>c \\<in> collect_clks (LT ca uu_); u \\<turnstile> LT ca uu_;\n        \\<forall>c\\<in>collect_clks (LT ca uu_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LT ca uu_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 2. \\<And>ca uv_.\n       \\<lbrakk>c \\<in> collect_clks (LE ca uv_); u \\<turnstile> LE ca uv_;\n        \\<forall>c\\<in>collect_clks (LE ca uv_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (LE ca uv_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 3. \\<And>ca uw_.\n       \\<lbrakk>c \\<in> collect_clks (EQ ca uw_); u \\<turnstile> EQ ca uw_;\n        \\<forall>c\\<in>collect_clks (EQ ca uw_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (EQ ca uw_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 4. \\<And>ca ux_.\n       \\<lbrakk>c \\<in> collect_clks (GE ca ux_); u \\<turnstile> GE ca ux_;\n        \\<forall>c\\<in>collect_clks (GE ca ux_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GE ca ux_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)\n 5. \\<And>ca uy_.\n       \\<lbrakk>c \\<in> collect_clks (GT ca uy_); u \\<turnstile> GT ca uy_;\n        \\<forall>c\\<in>collect_clks (GT ca uy_). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None\n                          (abstr (GT ca uy_) (\\<lambda>i j. \\<infinity>) v\n                            (v c) 0)", "qed (insert gt0, auto)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "case False"], ["proof (state)\nthis:\n  c \\<notin> collect_clks cc\n\ngoal (1 subgoal):\n 1. c \\<notin> collect_clks cc \\<Longrightarrow>\n    dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "from abstr_id2[OF this A(2,4)]"], ["proof (chain)\npicking this:\n  abstr cc ?M v (v c) 0 = ?M (v c) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  abstr cc ?M v (v c) 0 = ?M (v c) 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr cc (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "text \\<open>Trivial because of missing difference constraints\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  u \\<turnstile> cc\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "from abstr_id3[OF this(3)]"], ["proof (chain)\npicking this:\n  abstr ?cc ?M v (v ?c1.0) (v ?c2.0) = ?M (v ?c1.0) (v ?c2.0)", "have \"abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2) = \\<infinity>\""], ["proof (prove)\nusing this:\n  abstr ?cc ?M v (v ?c1.0) (v ?c2.0) = ?M (v ?c1.0) (v ?c2.0)\n\ngoal (1 subgoal):\n 1. abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2) = \\<infinity>", "by auto"], ["proof (state)\nthis:\n  abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile> cc;\n        \\<forall>c\\<in>collect_clks cc. v c \\<le> n; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1)\n                            (v c2))", "then"], ["proof (chain)\npicking this:\n  abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2) = \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (abstr cc (\\<lambda>i j. \\<infinity>) v (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_abstr_completeness:\n  \"\\<lbrakk>DBM_val_bounded v u (abstr cc (\\<lambda> i j. \\<infinity>) v) n; \\<forall>c. v c > 0; \\<forall> c \\<in> collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> u \\<turnstile> cc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc\n          (\\<lambda>i j. \\<infinity>) v;\n     \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>collect_clks cc. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> u \\<turnstile> cc", "proof (induction cc, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (1 cc1 cc2)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have AND: \"u \\<in> [abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<in> [abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>)\n              v]\\<^bsub>v,n\\<^esub>", "by (simp add: DBM_zone_repr_def)"], ["proof (state)\nthis:\n  u \\<in> [abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>)\n            v]\\<^bsub>v,n\\<^esub>\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have \"\\<forall>i j. i \\<le> n \\<longrightarrow> j \\<le> n\n    \\<longrightarrow> (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v) i j \\<preceq> (abstr cc1 (\\<lambda>i j. \\<infinity>) v) i j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i \\<le> n \\<longrightarrow>\n       j \\<le> n \\<longrightarrow>\n       abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v i\n        j \\<preceq> abstr cc1 (\\<lambda>i j. \\<infinity>) v i j", "by (simp add: less_eq[symmetric])"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<le> n \\<longrightarrow>\n     j \\<le> n \\<longrightarrow>\n     abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v i\n      j \\<preceq> abstr cc1 (\\<lambda>i j. \\<infinity>) v i j\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from DBM_le_subset[OF this AND] 1"], ["proof (chain)\npicking this:\n  u \\<in> [abstr cc1 (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub>\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have \"u \\<turnstile> cc1\""], ["proof (prove)\nusing this:\n  u \\<in> [abstr cc1 (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub>\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<turnstile> cc1", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n           (\\<lambda>i j. \\<infinity>) v}\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<turnstile> cc1", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> cc1\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 1"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have \"\\<forall>i j. i \\<le> n \\<longrightarrow> j \\<le> n\n    \\<longrightarrow> (abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v) i j \\<preceq> (abstr cc2 (\\<lambda>i j. \\<infinity>) v) i j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i \\<le> n \\<longrightarrow>\n       j \\<le> n \\<longrightarrow>\n       abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v i\n        j \\<preceq> abstr cc2 (\\<lambda>i j. \\<infinity>) v i j", "by (simp add: less_eq[symmetric])"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<le> n \\<longrightarrow>\n     j \\<le> n \\<longrightarrow>\n     abstr (AND cc1 cc2) (\\<lambda>i j. \\<infinity>) v i\n      j \\<preceq> abstr cc2 (\\<lambda>i j. \\<infinity>) v i j\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from DBM_le_subset[OF this AND] 1"], ["proof (chain)\npicking this:\n  u \\<in> [abstr cc2 (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub>\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n", "have \"u \\<turnstile> cc2\""], ["proof (prove)\nusing this:\n  u \\<in> [abstr cc2 (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub>\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<turnstile> cc2", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n           (\\<lambda>i j. \\<infinity>) v}\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc1\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n        (\\<lambda>i j. \\<infinity>) v;\n   \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> u \\<turnstile> cc2\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<turnstile> cc2", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> cc2\n\ngoal (6 subgoals):\n 1. \\<And>cc1 cc2.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc1\n                      (\\<lambda>i j. \\<infinity>) v;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>collect_clks cc1. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> u \\<turnstile> cc1;\n        \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc2\n              (\\<lambda>i j. \\<infinity>) v;\n         \\<forall>c. 0 < v c;\n         \\<forall>c\\<in>collect_clks cc2. v c \\<le> n\\<rbrakk>\n        \\<Longrightarrow> u \\<turnstile> cc2;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (AND cc1 cc2)\n     (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (AND cc1 cc2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> AND cc1 cc2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from \\<open>u \\<turnstile> cc1\\<close> \\<open>u \\<turnstile> cc2\\<close>"], ["proof (chain)\npicking this:\n  u \\<turnstile> cc1\n  u \\<turnstile> cc2", "show ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile> cc1\n  u \\<turnstile> cc2\n\ngoal (1 subgoal):\n 1. u \\<turnstile> AND cc1 cc2", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> AND cc1 cc2\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (2 c d)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LT c d). v c \\<le> n\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from this"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LT c d). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LT c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "with 2(1)"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n", "have \"dbm_entry_val u (Some c) None ((abstr (LT c d) (\\<lambda>i j. \\<infinity>) v) (v c) 0)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (LT c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by (auto simp: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (LT c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (LT c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 2(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 5. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None\n   (abstr (LT c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  0 < v c", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None\n   (abstr (LT c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  0 < v c\n\ngoal (1 subgoal):\n 1. u \\<turnstile> LT c d", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> LT c d\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (3 c d)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LE c d). v c \\<le> n\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from this"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LE c d). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (LE c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "with 3(1)"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n", "have \"dbm_entry_val u (Some c) None ((abstr (LE c d) (\\<lambda>i j. \\<infinity>) v) (v c) 0)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (LE c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)", "by (auto simp: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (LE c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (LE c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 3(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (LE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (LE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> LE x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 4. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None\n   (abstr (LE c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  0 < v c", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None\n   (abstr (LE c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  0 < v c\n\ngoal (1 subgoal):\n 1. u \\<turnstile> LE c d", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> LE c d\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (4 c d)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (EQ c d). v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from this"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (EQ c d). v c \\<le> n", "have c: \"v c > 0\" \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (EQ c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < v c &&& v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  0 < v c\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "with 4(1)"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  0 < v c\n  v c \\<le> n", "have B:\n    \"dbm_entry_val u (Some c) None ((abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v) (v c) 0)\"\n    \"dbm_entry_val u None (Some c) ((abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v) 0 (v c))\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  0 < v c\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None\n     (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v (v c) 0) &&&\n    dbm_entry_val u None (Some c)\n     (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by (auto simp: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  dbm_entry_val u None (Some c)\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from c B"], ["proof (chain)\npicking this:\n  0 < v c\n  v c \\<le> n\n  dbm_entry_val u (Some c) None\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  dbm_entry_val u None (Some c)\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "have \"u c \\<le> d\" \"- u c \\<le> -d\""], ["proof (prove)\nusing this:\n  0 < v c\n  v c \\<le> n\n  dbm_entry_val u (Some c) None\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v (v c) 0)\n  dbm_entry_val u None (Some c)\n   (abstr (EQ c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. u c \\<le> d &&& - u c \\<le> - d", "by auto"], ["proof (state)\nthis:\n  u c \\<le> d\n  - u c \\<le> - d\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (EQ x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (EQ x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> EQ x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 3. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "then"], ["proof (chain)\npicking this:\n  u c \\<le> d\n  - u c \\<le> - d", "show ?case"], ["proof (prove)\nusing this:\n  u c \\<le> d\n  - u c \\<le> - d\n\ngoal (1 subgoal):\n 1. u \\<turnstile> EQ c d", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> EQ c d\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (5 c d)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GT c d). v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from this"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GT c d). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GT c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "with 5(1)"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n", "have \"dbm_entry_val u None (Some c) ((abstr (GT c d) (\\<lambda>i j. \\<infinity>) v) 0 (v c))\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (GT c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by (auto simp: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (GT c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (GT c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 5(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GT x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GT x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GT x1 x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some c)\n   (abstr (GT c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  0 < v c", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c)\n   (abstr (GT c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  0 < v c\n\ngoal (1 subgoal):\n 1. u \\<turnstile> GT c d", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> GT c d\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "case (6 c d)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GE c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from this"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GE c d). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>collect_clks (GE c d). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "with 6(1)"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n", "have \"dbm_entry_val u None (Some c) ((abstr (GE c d) (\\<lambda>i j. \\<infinity>) v) 0 (v c))\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE c d)\n                                     (\\<lambda>i j. \\<infinity>) v\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c)\n     (abstr (GE c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))", "by (auto simp: DBM_val_bounded_def)"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (GE c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c)\n   (abstr (GE c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "from 6(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c", "have \"v c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. 0 < v c", "by auto"], ["proof (state)\nthis:\n  0 < v c\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr (GE x1 x2)\n             (\\<lambda>i j. \\<infinity>) v;\n        \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>collect_clks (GE x1 x2). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> u \\<turnstile> GE x1 x2", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some c)\n   (abstr (GE c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  0 < v c", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c)\n   (abstr (GE c d) (\\<lambda>i j. \\<infinity>) v 0 (v c))\n  0 < v c\n\ngoal (1 subgoal):\n 1. u \\<turnstile> GE c d", "by auto"], ["proof (state)\nthis:\n  u \\<turnstile> GE c d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_abstr_zone_eq:\n  assumes \"clock_numbering' v n\" \"\\<forall>c\\<in>collect_clks cc. v c \\<le> n\"\n  shows \"[abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> = {u. u \\<turnstile> cc}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> =\n    {u. u \\<turnstile> cc}", "using dbm_abstr_soundness dbm_abstr_completeness assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile> ?cc;\n   \\<forall>c.\n      0 < ?v c \\<and>\n      (\\<forall>x y.\n          ?v x \\<le> ?n \\<and>\n          ?v y \\<le> ?n \\<and> ?v x = ?v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>collect_clks ?cc. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> abstr ?cc\n                    (\\<lambda>i j. \\<infinity>) ?v\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> abstr ?cc\n           (\\<lambda>i j. \\<infinity>) ?v;\n   \\<forall>c. 0 < ?v c;\n   \\<forall>c\\<in>collect_clks ?cc. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?u \\<turnstile> ?cc\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (1 subgoal):\n 1. [abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> =\n    {u. u \\<turnstile> cc}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile> ?cc;\n   \\<forall>c.\n      0 < ?v c \\<and>\n      (\\<forall>x y.\n          ?v x \\<le> ?n \\<and>\n          ?v y \\<le> ?n \\<and> ?v x = ?v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>collect_clks ?cc. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> abstr ?cc\n                    (\\<lambda>i j. \\<infinity>) ?v\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> abstr ?cc\n           (\\<lambda>i j. \\<infinity>) ?v;\n   \\<forall>c. 0 < ?v c;\n   \\<forall>c\\<in>collect_clks ?cc. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?u \\<turnstile> ?cc\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>collect_clks cc. v c \\<le> n\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> abstr cc\n     (\\<lambda>i j. \\<infinity>) v} =\n    {u. u \\<turnstile> cc}", "by metis"], ["", "section \\<open>Zone Intersection\\<close>"], ["", "lemma DBM_and_complete:\n  assumes \"DBM_val_bounded v u M1 n\" \"DBM_val_bounded v u M2 n\"\n  shows \"DBM_val_bounded v u (And M1 M2) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M1\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M2\n\ngoal (1 subgoal):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M1 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M1 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M1 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n        dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))", "by (auto simp: min_def)"], ["", "lemma DBM_and_sound1:\n  assumes \"DBM_val_bounded v u (And M1 M2) n\"\n  shows \"DBM_val_bounded v u M1 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> M1", "unfolding DBM_val_bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M1 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u None (Some c) (M1 0 (v c)) \\<and>\n        dbm_entry_val u (Some c) None (M1 (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2)))", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M1 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u None (Some c) (M1 0 (v c)) \\<and>\n        dbm_entry_val u (Some c) None (M1 (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2)))", "proof (safe, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M1 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "case 1"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (4 subgoals):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M1 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2", "show ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M1 0 0", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M1 0 0", "by (auto simp: less_eq[symmetric])"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M1 0 0\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "case (2 c)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "have \"(And M1 M2) 0 (v c) \\<le> M1 0 (v c)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 0 (v c) \\<le> M1 0 (v c)", "by simp"], ["proof (state)\nthis:\n  And M1 M2 0 (v c) \\<le> M1 0 (v c)\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M1 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "from dbm_entry_val_mono_2[folded less_eq, OF _ this, of u] 2"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M1 0 (v c))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M1 0 (v c))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M1 0 (v c))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M1 0 (v c))\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M1 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M1 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "case (3 c)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "have \"(And M1 M2) (v c) 0 \\<le> M1 (v c) 0\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 (v c) 0 \\<le> M1 (v c) 0", "by simp"], ["proof (state)\nthis:\n  And M1 M2 (v c) 0 \\<le> M1 (v c) 0\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M1 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "from dbm_entry_val_mono_3[folded less_eq, OF _ this, of u] 3"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M1 (v c) 0)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M1 (v c) 0)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (M1 (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M1 (v c) 0)\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (M1 (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (M1 (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n", "have \"(And M1 M2) (v c1) (v c2) \\<le> M1 (v c1) (v c2)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 (v c1) (v c2) \\<le> M1 (v c1) (v c2)", "by simp"], ["proof (state)\nthis:\n  And M1 M2 (v c1) (v c2) \\<le> M1 (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M1 (v c1) (v c2))", "from dbm_entry_val_mono_1[folded less_eq, OF _ this, of u] 4"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M1 (v c1) (v c2))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M1 (v c1) (v c2))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M1 (v c1) (v c2))\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M1 (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_and_sound2:\n  assumes \"DBM_val_bounded v u (And M1 M2) n\"\n  shows \"DBM_val_bounded v u M2 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> M2", "unfolding DBM_val_bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M2 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u None (Some c) (M2 0 (v c)) \\<and>\n        dbm_entry_val u (Some c) None (M2 (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2)))", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M2 0 0 \\<and>\n    (\\<forall>c.\n        v c \\<le> n \\<longrightarrow>\n        dbm_entry_val u None (Some c) (M2 0 (v c)) \\<and>\n        dbm_entry_val u (Some c) None (M2 (v c) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2)))", "proof (safe, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M2 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "case 1"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (4 subgoals):\n 1. u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M2 0 0\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 3. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2", "show ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M2 0 0", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M2 0 0", "by (auto simp: less_eq[symmetric])"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M2 0 0\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "case (2 c)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "have \"(And M1 M2) 0 (v c) \\<le> M2 0 (v c)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 0 (v c) \\<le> M2 0 (v c)", "by simp"], ["proof (state)\nthis:\n  And M1 M2 0 (v c) \\<le> M2 0 (v c)\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u None (Some c) (M2 0 (v c))\n 2. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "from dbm_entry_val_mono_2[folded less_eq, OF _ this, of u] 2"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M2 0 (v c))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M2 0 (v c))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M2 0 (v c))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some ?c) (And M1 M2 0 (v c)) \\<Longrightarrow>\n  dbm_entry_val u None (Some ?c) (M2 0 (v c))\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M2 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M2 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "case (3 c)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "have \"(And M1 M2) (v c) 0 \\<le> M2 (v c) 0\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 (v c) 0 \\<le> M2 (v c) 0", "by simp"], ["proof (state)\nthis:\n  And M1 M2 (v c) 0 \\<le> M2 (v c) 0\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2;\n        v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c) None (M2 (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "from dbm_entry_val_mono_3[folded less_eq, OF _ this, of u] 3"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M2 (v c) 0)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M2 (v c) 0)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (M2 (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) None (And M1 M2 (v c) 0) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) None (M2 (v c) 0)\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (M2 (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (M2 (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n", "have \"(And M1 M2) (v c1) (v c2) \\<le> M2 (v c1) (v c2)\""], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. And M1 M2 (v c1) (v c2) \\<le> M2 (v c1) (v c2)", "by simp"], ["proof (state)\nthis:\n  And M1 M2 (v c1) (v c2) \\<le> M2 (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2; v c1 \\<le> n;\n        v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (M2 (v c1) (v c2))", "from dbm_entry_val_mono_1[folded less_eq, OF _ this, of u] 4"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M2 (v c1) (v c2))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M2 (v c1) (v c2))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> And M1 M2\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some ?c) (Some ?c')\n   (And M1 M2 (v c1) (v c2)) \\<Longrightarrow>\n  dbm_entry_val u (Some ?c) (Some ?c') (M2 (v c1) (v c2))\n  Le (0::'b) \\<preceq> And M1 M2 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (And M1 M2 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (And M1 M2 (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (And M1 M2 (v c1) (v c2)))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M2 (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Clock Reset\\<close>"], ["", "definition\n  DBM_reset :: \"('t :: time) DBM \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 't \\<Rightarrow> 't DBM \\<Rightarrow> bool\"\nwhere\n  \"DBM_reset M n k d M' \\<equiv>\n    (\\<forall> j \\<le> n. 0 < j \\<and> k \\<noteq> j\\<longrightarrow> M' k j =  \\<infinity> \\<and> M' j k =  \\<infinity>) \\<and> M' k 0 = Le d \\<and> M' 0 k = Le (- d)\n    \\<and> M' k k = M k k\n    \\<and> (\\<forall>i \\<le> n. \\<forall>j \\<le> n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow> M' i j = min (dbm_add (M i k) (M k j)) (M i j))\""], ["", "lemma DBM_reset_mono:\n  assumes \"DBM_reset M n k d M'\" \"i \\<le> n\" \"j \\<le> n\" \"i \\<noteq> k\" \"j \\<noteq> k\"\n  shows \"M' i j \\<le> M i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' i j \\<le> M i j", "using assms"], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  i \\<le> n\n  j \\<le> n\n  i \\<noteq> k\n  j \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' i j \\<le> M i j", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j = min (dbm_add (M i k) (M k j)) (M i j))\n  i \\<le> n\n  j \\<le> n\n  i \\<noteq> k\n  j \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' i j \\<le> M i j", "by auto"], ["", "lemma DBM_reset_len_mono:\n  assumes \"DBM_reset M n k d M'\" \"k \\<notin> set xs\" \"i \\<noteq> k\" \"j \\<noteq> k\" \"set (i # j # xs) \\<subseteq> {0..n}\"\n  shows \"len M' i j xs \\<le> len M i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M' i j xs \\<le> len M i j xs", "using assms"], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  k \\<notin> set xs\n  i \\<noteq> k\n  j \\<noteq> k\n  set (i # j # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. len M' i j xs \\<le> len M i j xs", "by (induction xs arbitrary: i) (auto intro: add_mono DBM_reset_mono)"], ["", "lemma DBM_reset_neg_cycle_preservation:\n  assumes \"DBM_reset M n k d M'\" \"len M i i xs < Le 0\" \"set (k # i # xs) \\<subseteq> {0..n}\"\n  shows \"\\<exists> j. \\<exists> ys. set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case Nil: True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "proof (cases \"k = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case True"], ["proof (state)\nthis:\n  k = i\n\ngoal (2 subgoals):\n 1. k = i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with Nil assms"], ["proof (chain)\npicking this:\n  xs = []\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  k = i", "have \"len M' i i [] < Le 0\""], ["proof (prove)\nusing this:\n  xs = []\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  k = i\n\ngoal (1 subgoal):\n 1. len M' i i [] < Le (0::'a)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  xs = []\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j = min (dbm_add (M i k) (M k j)) (M i j))\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  k = i\n\ngoal (1 subgoal):\n 1. len M' i i [] < Le (0::'a)", "by auto"], ["proof (state)\nthis:\n  len M' i i [] < Le (0::'a)\n\ngoal (2 subgoals):\n 1. k = i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "moreover"], ["proof (state)\nthis:\n  len M' i i [] < Le (0::'a)\n\ngoal (2 subgoals):\n 1. k = i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from assms"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}", "have \"set (i # []) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set [i] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set [i] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. k = i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  len M' i i [] < Le (0::'a)\n  set [i] \\<subseteq> {0..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  len M' i i [] < Le (0::'a)\n  set [i] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> i\n\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with Nil assms DBM_reset_mono"], ["proof (chain)\npicking this:\n  xs = []\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  \\<lbrakk>DBM_reset ?M ?n ?k ?d ?M'; ?i \\<le> ?n; ?j \\<le> ?n;\n   ?i \\<noteq> ?k; ?j \\<noteq> ?k\\<rbrakk>\n  \\<Longrightarrow> ?M' ?i ?j \\<le> ?M ?i ?j\n  k \\<noteq> i", "have \"len M' i i [] < Le 0\""], ["proof (prove)\nusing this:\n  xs = []\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  \\<lbrakk>DBM_reset ?M ?n ?k ?d ?M'; ?i \\<le> ?n; ?j \\<le> ?n;\n   ?i \\<noteq> ?k; ?j \\<noteq> ?k\\<rbrakk>\n  \\<Longrightarrow> ?M' ?i ?j \\<le> ?M ?i ?j\n  k \\<noteq> i\n\ngoal (1 subgoal):\n 1. len M' i i [] < Le (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  len M' i i [] < Le (0::'a)\n\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "moreover"], ["proof (state)\nthis:\n  len M' i i [] < Le (0::'a)\n\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from assms"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}", "have \"set (i # []) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set [i] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set [i] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. k \\<noteq> i \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  len M' i i [] < Le (0::'a)\n  set [i] \\<subseteq> {0..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  len M' i i [] < Le (0::'a)\n  set [i] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with assms"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  xs \\<noteq> []", "obtain j ys where cycle:\n    \"len M j j ys < Le 0\" \"distinct (j # ys)\" \"j \\<in> set (i # xs)\" \"set ys \\<subseteq> set xs\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>j ys.\n        \\<lbrakk>len M j j ys < Le (0::'a); distinct (j # ys);\n         j \\<in> set (i # xs); set ys \\<subseteq> set xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis negative_len_shortest neutral)"], ["proof (state)\nthis:\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "proof (cases \"k \\<in> set (j # ys)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<notin> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case False"], ["proof (state)\nthis:\n  k \\<notin> set (j # ys)\n\ngoal (2 subgoals):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<notin> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with cycle assms"], ["proof (chain)\npicking this:\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  k \\<notin> set (j # ys)", "have \"len M' j j ys \\<le> len M j j ys\""], ["proof (prove)\nusing this:\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  k \\<notin> set (j # ys)\n\ngoal (1 subgoal):\n 1. len M' j j ys \\<le> len M j j ys", "by - (rule DBM_reset_len_mono, auto)"], ["proof (state)\nthis:\n  len M' j j ys \\<le> len M j j ys\n\ngoal (2 subgoals):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<notin> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "moreover"], ["proof (state)\nthis:\n  len M' j j ys \\<le> len M j j ys\n\ngoal (2 subgoals):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<notin> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from cycle assms"], ["proof (chain)\npicking this:\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}", "have \"set (j # ys) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set (j # ys) \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set (j # ys) \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. k \\<notin> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  len M' j j ys \\<le> len M j j ys\n  set (j # ys) \\<subseteq> {0..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  len M' j j ys \\<le> len M j j ys\n  set (j # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "using cycle(1)"], ["proof (prove)\nusing this:\n  len M' j j ys \\<le> len M j j ys\n  set (j # ys) \\<subseteq> {0..n}\n  len M j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case True"], ["proof (state)\nthis:\n  k \\<in> set (j # ys)\n\ngoal (1 subgoal):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "then"], ["proof (chain)\npicking this:\n  k \\<in> set (j # ys)", "obtain l where l: \"(l, k) \\<in> set (arcs j j ys)\""], ["proof (prove)\nusing this:\n  k \\<in> set (j # ys)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"j = k\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j = k\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  j = k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j = k\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow> thesis\n 2. ys \\<noteq> [] \\<Longrightarrow> thesis", "case T: True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow> thesis\n 2. ys \\<noteq> [] \\<Longrightarrow> thesis", "with True"], ["proof (chain)\npicking this:\n  j = k\n  ys = []", "show ?thesis"], ["proof (prove)\nusing this:\n  j = k\n  ys = []\n\ngoal (1 subgoal):\n 1. thesis", "by (auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain z zs where \"ys = zs @ [z]\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>zs z. ys = zs @ [z] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_butlast_last_id)"], ["proof (state)\nthis:\n  ys = zs @ [z]\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow> thesis", "from arcs_decomp[OF this] True"], ["proof (chain)\npicking this:\n  arcs ?x ?z ys = arcs ?x z zs @ arcs z ?z []\n  j = k", "show ?thesis"], ["proof (prove)\nusing this:\n  arcs ?x ?z ys = arcs ?x z zs @ arcs z ?z []\n  j = k\n\ngoal (1 subgoal):\n 1. thesis", "by (auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  j \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>l.\n                (l, k) \\<in> set (arcs j j ys) \\<Longrightarrow> thesis;\n     k \\<in> set (j # ys); j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> thesis", "from arcs_set_elem2[OF False True]"], ["proof (chain)\npicking this:\n  \\<exists>l. (l, k) \\<in> set (arcs j j ys)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>l. (l, k) \\<in> set (arcs j j ys)\n\ngoal (1 subgoal):\n 1. thesis", "by (blast intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (l, k) \\<in> set (arcs j j ys)\n\ngoal (1 subgoal):\n 1. k \\<in> set (j # ys) \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from cycle_rotate_2'[OF False l, of M] cycle(1)"], ["proof (chain)\npicking this:\n  \\<exists>ysa.\n     len M j j ys = len M l l (k # ysa) \\<and>\n     set (l # k # ysa) = set (j # ys) \\<and>\n     1 + length ysa = length ys \\<and>\n     set (arcs j j ys) = set (arcs l l (k # ysa))\n  len M j j ys < Le (0::'a)", "obtain zs where rotated:\n        \"len M l l (k # zs) < Le 0\" \"set (l # k # zs) = set (j # ys)\" \"1 + length zs = length ys\""], ["proof (prove)\nusing this:\n  \\<exists>ysa.\n     len M j j ys = len M l l (k # ysa) \\<and>\n     set (l # k # ysa) = set (j # ys) \\<and>\n     1 + length ysa = length ys \\<and>\n     set (arcs j j ys) = set (arcs l l (k # ysa))\n  len M j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>len M l l (k # zs) < Le (0::'a);\n         set (l # k # zs) = set (j # ys); 1 + length zs = length ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  1 + length zs = length ys\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with length_eq_distinct[OF this(2)[symmetric] cycle(2)]"], ["proof (chain)\npicking this:\n  length (j # ys) = length (l # k # zs) \\<Longrightarrow>\n  distinct (l # k # zs)\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  1 + length zs = length ys", "have \"distinct (l # k # zs)\""], ["proof (prove)\nusing this:\n  length (j # ys) = length (l # k # zs) \\<Longrightarrow>\n  distinct (l # k # zs)\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  1 + length zs = length ys\n\ngoal (1 subgoal):\n 1. distinct (l # k # zs)", "by auto"], ["proof (state)\nthis:\n  distinct (l # k # zs)\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "note rotated = rotated(1,2) this"], ["proof (state)\nthis:\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  distinct (l # k # zs)\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from this(2) cycle(3,4) assms(3)"], ["proof (chain)\npicking this:\n  set (l # k # zs) = set (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  set (k # i # xs) \\<subseteq> {0..n}", "have n_bound: \"set (l # k # zs) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  set (l # k # zs) = set (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  set (k # i # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set (l # k # zs) \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set (l # k # zs) \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "then"], ["proof (chain)\npicking this:\n  set (l # k # zs) \\<subseteq> {0..n}", "have \"l \\<le> n\""], ["proof (prove)\nusing this:\n  set (l # k # zs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. l \\<le> n", "by auto"], ["proof (state)\nthis:\n  l \\<le> n\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "proof (cases zs)"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case Nil"], ["proof (state)\nthis:\n  zs = []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with rotated"], ["proof (chain)\npicking this:\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  distinct (l # k # zs)\n  zs = []", "have \"M l k + M k l < Le 0\" \"l \\<noteq> k\""], ["proof (prove)\nusing this:\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  distinct (l # k # zs)\n  zs = []\n\ngoal (1 subgoal):\n 1. M l k + M k l < Le (0::'a) &&& l \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  M l k + M k l < Le (0::'a)\n  l \\<noteq> k\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with assms(1) \\<open>l \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  l \\<le> n\n  M l k + M k l < Le (0::'a)\n  l \\<noteq> k", "have \"M' l l < Le 0\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  l \\<le> n\n  M l k + M k l < Le (0::'a)\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' l l < Le (0::'a)", "unfolding DBM_reset_def mult min_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j =\n         (if dbm_add (M i k) (M k j) \\<le> M i j\n          then dbm_add (M i k) (M k j) else M i j))\n  l \\<le> n\n  dbm_add (M l k) (M k l) < Le (0::'a)\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' l l < Le (0::'a)", "by auto"], ["proof (state)\nthis:\n  M' l l < Le (0::'a)\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with \\<open>l \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  l \\<le> n\n  M' l l < Le (0::'a)", "have \"len M' l l [] < Le 0\" \"set [l] \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  l \\<le> n\n  M' l l < Le (0::'a)\n\ngoal (1 subgoal):\n 1. len M' l l [] < Le (0::'a) &&& set [l] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  len M' l l [] < Le (0::'a)\n  set [l] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n 2. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "then"], ["proof (chain)\npicking this:\n  len M' l l [] < Le (0::'a)\n  set [l] \\<subseteq> {0..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  len M' l l [] < Le (0::'a)\n  set [l] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case (Cons w ws)"], ["proof (state)\nthis:\n  zs = w # ws\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with n_bound"], ["proof (chain)\npicking this:\n  set (l # k # zs) \\<subseteq> {0..n}\n  zs = w # ws", "have *: \"set (w # l # ws) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  set (l # k # zs) \\<subseteq> {0..n}\n  zs = w # ws\n\ngoal (1 subgoal):\n 1. set (w # l # ws) \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set (w # l # ws) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from Cons n_bound rotated(3)"], ["proof (chain)\npicking this:\n  zs = w # ws\n  set (l # k # zs) \\<subseteq> {0..n}\n  distinct (l # k # zs)", "have \"w \\<le> n\" \"w \\<noteq> k\" \"l \\<noteq> k\""], ["proof (prove)\nusing this:\n  zs = w # ws\n  set (l # k # zs) \\<subseteq> {0..n}\n  distinct (l # k # zs)\n\ngoal (1 subgoal):\n 1. w \\<le> n &&& w \\<noteq> k &&& l \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  w \\<le> n\n  w \\<noteq> k\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with assms(1) \\<open>l \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  l \\<le> n\n  w \\<le> n\n  w \\<noteq> k\n  l \\<noteq> k", "have\n          \"M' l w \\<le> M l k + M k w\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  l \\<le> n\n  w \\<le> n\n  w \\<noteq> k\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' l w \\<le> M l k + M k w", "unfolding DBM_reset_def mult min_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j =\n         (if dbm_add (M i k) (M k j) \\<le> M i j\n          then dbm_add (M i k) (M k j) else M i j))\n  l \\<le> n\n  w \\<le> n\n  w \\<noteq> k\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. M' l w \\<le> dbm_add (M l k) (M k w)", "by auto"], ["proof (state)\nthis:\n  M' l w \\<le> M l k + M k w\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "moreover"], ["proof (state)\nthis:\n  M' l w \\<le> M l k + M k w\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from Cons rotated assms *"], ["proof (chain)\npicking this:\n  zs = w # ws\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  distinct (l # k # zs)\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  set (w # l # ws) \\<subseteq> {0..n}", "have\n          \"len M' w l ws \\<le> len M w l ws\""], ["proof (prove)\nusing this:\n  zs = w # ws\n  len M l l (k # zs) < Le (0::'a)\n  set (l # k # zs) = set (j # ys)\n  distinct (l # k # zs)\n  DBM_reset M n k d M'\n  len M i i xs < Le (0::'a)\n  set (k # i # xs) \\<subseteq> {0..n}\n  set (w # l # ws) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. len M' w l ws \\<le> len M w l ws", "by - (rule DBM_reset_len_mono, auto)"], ["proof (state)\nthis:\n  len M' w l ws \\<le> len M w l ws\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  M' l w \\<le> M l k + M k w\n  len M' w l ws \\<le> len M w l ws", "have\n          \"len M' l l zs \\<le> len M l l (k # zs)\""], ["proof (prove)\nusing this:\n  M' l w \\<le> M l k + M k w\n  len M' w l ws \\<le> len M w l ws\n\ngoal (1 subgoal):\n 1. len M' l l zs \\<le> len M l l (k # zs)", "using Cons"], ["proof (prove)\nusing this:\n  M' l w \\<le> M l k + M k w\n  len M' w l ws \\<le> len M w l ws\n  zs = w # ws\n\ngoal (1 subgoal):\n 1. len M' l l zs \\<le> len M l l (k # zs)", "by (auto intro: add_mono simp add: assoc[symmetric])"], ["proof (state)\nthis:\n  len M' l l zs \\<le> len M l l (k # zs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       zs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with n_bound rotated(1)"], ["proof (chain)\npicking this:\n  set (l # k # zs) \\<subseteq> {0..n}\n  len M l l (k # zs) < Le (0::'a)\n  len M' l l zs \\<le> len M l l (k # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  set (l # k # zs) \\<subseteq> {0..n}\n  len M l l (k # zs) < Le (0::'a)\n  len M' l l zs \\<le> len M l l (k # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "case T: True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with True cycle"], ["proof (chain)\npicking this:\n  k \\<in> set (j # ys)\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  ys = []", "have \"M j j < Le 0\" \"j = k\""], ["proof (prove)\nusing this:\n  k \\<in> set (j # ys)\n  len M j j ys < Le (0::'a)\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  ys = []\n\ngoal (1 subgoal):\n 1. M j j < Le (0::'a) &&& j = k", "by auto"], ["proof (state)\nthis:\n  M j j < Le (0::'a)\n  j = k\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "with assms(1)"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'\n  M j j < Le (0::'a)\n  j = k", "have \"len M' k k [] < Le 0\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n  M j j < Le (0::'a)\n  j = k\n\ngoal (1 subgoal):\n 1. len M' k k [] < Le (0::'a)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j = min (dbm_add (M i k) (M k j)) (M i j))\n  M j j < Le (0::'a)\n  j = k\n\ngoal (1 subgoal):\n 1. len M' k k [] < Le (0::'a)", "by simp"], ["proof (state)\nthis:\n  len M' k k [] < Le (0::'a)\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "moreover"], ["proof (state)\nthis:\n  len M' k k [] < Le (0::'a)\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "from assms(3)"], ["proof (chain)\npicking this:\n  set (k # i # xs) \\<subseteq> {0..n}", "have \"set (k # []) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  set (k # i # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. set [k] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  set [k] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  len M' k k [] < Le (0::'a)\n  set [k] \\<subseteq> {0..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  len M' k k [] < Le (0::'a)\n  set [k] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Implementation of DBM reset\\<close>"], ["", "definition reset :: \"('t::time) DBM \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 't \\<Rightarrow> 't DBM\"\nwhere\n  \"reset M n k d =\n    (\\<lambda> i j.\n        if i = k \\<and> j = 0 then Le d\n        else if i = 0 \\<and> j = k then Le (-d)\n        else if i = k \\<and> j \\<noteq> k then \\<infinity>\n        else if i \\<noteq> k \\<and> j = k then \\<infinity>\n        else if i = k \\<and> j = k then M k k\n        else min (dbm_add (M i k) (M k j)) (M i j)\n       )\""], ["", "fun reset' :: \"('t::time) DBM \\<Rightarrow> nat \\<Rightarrow> 'c list \\<Rightarrow> ('c \\<Rightarrow> nat) \\<Rightarrow> 't \\<Rightarrow> 't DBM\"\nwhere\n  \"reset' M n [] v d = M\" |\n  \"reset' M n (c # cs) v d = reset (reset' M n cs v d) n (v c) d\""], ["", "lemma DBM_reset_reset:\n  \"0 < k \\<Longrightarrow> k \\<le> n \\<Longrightarrow> DBM_reset M n k d (reset M n k d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> DBM_reset M n k d (reset M n k d)", "unfolding DBM_reset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>j\\<le>n.\n                          0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                          reset M n k d k j = \\<infinity> \\<and>\n                          reset M n k d j k = \\<infinity>) \\<and>\n                      reset M n k d k 0 = Le d \\<and>\n                      reset M n k d 0 k = Le (- d) \\<and>\n                      reset M n k d k k = M k k \\<and>\n                      (\\<forall>i\\<le>n.\n                          \\<forall>j\\<le>n.\n                             i \\<noteq> k \\<and>\n                             j \\<noteq> k \\<longrightarrow>\n                             reset M n k d i j =\n                             min (dbm_add (M i k) (M k j)) (M i j))", "by (auto simp: reset_def)"], ["", "lemma DBM_reset_complete:\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M n\"\n  shows \"DBM_val_bounded v (u(c := d)) M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "unfolding DBM_val_bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0 \\<and>\n    (\\<forall>ca.\n        v ca \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d)) None (Some ca) (M' 0 (v ca)) \\<and>\n        dbm_entry_val (u(c := d)) (Some ca) None (M' (v ca) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2)))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0 \\<and>\n    (\\<forall>ca.\n        v ca \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d)) None (Some ca) (M' 0 (v ca)) \\<and>\n        dbm_entry_val (u(c := d)) (Some ca) None (M' (v ca) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2)))", "proof (auto, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> M' 0 0\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 3. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "case 1"], ["proof (state)\nthis:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (4 subgoals):\n 1. \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> M' 0 0\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 3. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y", "have *: \"M 0 0 \\<ge> Le 0\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<le> M 0 0", "unfolding DBM_val_bounded_def less_eq"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<le> M 0 0\n\ngoal (4 subgoals):\n 1. \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> M' 0 0\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 3. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "from 1"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y", "have **: \"M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)", "unfolding DBM_reset_def mult"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. M' 0 0 = min (dbm_add (M 0 (v c)) (M (v c) 0)) (M 0 0)", "by auto"], ["proof (state)\nthis:\n  M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> Le (0::'b) \\<preceq> M' 0 0\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 3. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0", "proof (cases \"M 0 (v c) + M (v c) 0 \\<le> M 0 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0\n 2. \\<not> M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "case False"], ["proof (state)\nthis:\n  \\<not> M 0 (v c) + M (v c) 0 \\<le> M 0 0\n\ngoal (2 subgoals):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0\n 2. \\<not> M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "with * **"], ["proof (chain)\npicking this:\n  Le (0::'b) \\<le> M 0 0\n  M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\n  \\<not> M 0 (v c) + M (v c) 0 \\<le> M 0 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<le> M 0 0\n  M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\n  \\<not> M 0 (v c) + M (v c) 0 \\<le> M 0 0\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0", "unfolding min_def less_eq"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0\n  M' 0 0 =\n  (if M 0 (v c) + M (v c) 0 \\<preceq> M 0 0 then M 0 (v c) + M (v c) 0\n   else M 0 0)\n  \\<not> M 0 (v c) + M (v c) 0 \\<preceq> M 0 0\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M' 0 0\n\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "case True"], ["proof (state)\nthis:\n  M 0 (v c) + M (v c) 0 \\<le> M 0 0\n\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "have \"dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))", "by (metis DBM_val_bounded_def assms(2,4) dbm_entry_val_add_4 mult)"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))\n\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "then"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))", "have \"M (v c) 0 + M 0 (v c) \\<ge> Le 0\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<le> M (v c) 0 + M 0 (v c)", "unfolding less_eq dbm_le_def"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c) (M (v c) 0 + M 0 (v c))\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<prec> M (v c) 0 + M 0 (v c) \\<or>\n    Le (0::'b) = M (v c) 0 + M 0 (v c)", "by (cases \"M (v c) 0 + M 0 (v c)\") auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<le> M (v c) 0 + M 0 (v c)\n\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "with True **"], ["proof (chain)\npicking this:\n  M 0 (v c) + M (v c) 0 \\<le> M 0 0\n  M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\n  Le (0::'b) \\<le> M (v c) 0 + M 0 (v c)", "have \"M' 0 0 \\<ge> Le 0\""], ["proof (prove)\nusing this:\n  M 0 (v c) + M (v c) 0 \\<le> M 0 0\n  M' 0 0 = min (M 0 (v c) + M (v c) 0) (M 0 0)\n  Le (0::'b) \\<le> M (v c) 0 + M 0 (v c)\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<le> M' 0 0", "by (simp add: comm)"], ["proof (state)\nthis:\n  Le (0::'b) \\<le> M' 0 0\n\ngoal (1 subgoal):\n 1. M 0 (v c) + M (v c) 0 \\<le> M 0 0 \\<Longrightarrow>\n    Le (0::'b) \\<preceq> M' 0 0", "then"], ["proof (chain)\npicking this:\n  Le (0::'b) \\<le> M' 0 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<le> M' 0 0\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0", "unfolding less_eq"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M' 0 0\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M' 0 0", "."], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M' 0 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M' 0 0\n\ngoal (3 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "case (2 c')"], ["proof (state)\nthis:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some ca)\n                          (M' 0 (v ca))\n 2. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "proof (cases \"c = c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "hence F:\"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. v c' \\<noteq> v c", "using 2"], ["proof (prove)\nusing this:\n  c \\<noteq> c'\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. v c' \\<noteq> v c", "by metis"], ["proof (state)\nthis:\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "hence *:\"M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\""], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using F 2(1,2,4,6)"], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n  v c' \\<noteq> v c\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n  v c' \\<noteq> v c\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by simp"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "proof (cases \"dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. \\<not> dbm_add (M 0 (v c)) (M (v c) (v c'))\n           < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "case False"], ["proof (state)\nthis:\n  \\<not> dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')\n\ngoal (2 subgoals):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. \\<not> dbm_add (M 0 (v c)) (M (v c) (v c'))\n           < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "with *"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  \\<not> dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')", "have \"M' 0 (v c') = M 0 (v c')\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  \\<not> dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = M 0 (v c')", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' 0 (v c') = M 0 (v c')\n\ngoal (2 subgoals):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. \\<not> dbm_add (M 0 (v c)) (M (v c) (v c'))\n           < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "hence \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = M 0 (v c')\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "using 2(3,6)"], ["proof (prove)\nusing this:\n  M' 0 (v c') = M 0 (v c')\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  M' 0 (v c') = M 0 (v c')\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n 2. \\<not> dbm_add (M 0 (v c)) (M (v c) (v c'))\n           < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "using F"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "by cases fastforce+"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "case True"], ["proof (state)\nthis:\n  dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')\n\ngoal (1 subgoal):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "with *"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')", "have **:\"M' 0 (v c') = dbm_add (M 0 (v c)) (M (v c) (v c'))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c')\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = dbm_add (M 0 (v c)) (M (v c) (v c'))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' 0 (v c') = dbm_add (M 0 (v c)) (M (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "from 2"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n", "have \"dbm_entry_val u None (Some c) (M 0 (v c))\"\n      \"dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_add (M 0 (v c)) (M (v c) (v c')) < M 0 (v c') \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "proof (cases, auto simp add: **, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le da) (M (v c) (v c')))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "case (1 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n  - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le da) (M (v c) (v c')))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "note G1 = this"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n  - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le da) (M (v c) (v c')))\n 2. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) (v c') = Le d'\n  u c - u c' \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "from this(2) G1(3)"], ["proof (chain)\npicking this:\n  u c - u c' \\<le> d'\n  - u c \\<le> d", "have \"- u c' \\<le> d + d'\""], ["proof (prove)\nusing this:\n  u c - u c' \\<le> d'\n  - u c \\<le> d\n\ngoal (1 subgoal):\n 1. - u c' \\<le> d + d'", "by (metis diff_minus_eq_add less_diff_eq less_le_trans minus_diff_eq minus_le_iff not_le)"], ["proof (state)\nthis:\n  - u c' \\<le> d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' \\<le> d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "using 1 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  - u c' \\<le> d + d'\n  M (v c) (v c') = Le d'\n  u c - u c' \\<le> d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Le d) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) (v c') = Lt d'\n  u c - u c' < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "from this(2) G1(3)"], ["proof (chain)\npicking this:\n  u c - u c' < d'\n  - u c \\<le> d", "have \"u c - u c' - u c < d + d'\""], ["proof (prove)\nusing this:\n  u c - u c' < d'\n  - u c \\<le> d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d + d'", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  u c - u c' < d'\n  - u c \\<le> d\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d + d'", "by fastforce"], ["proof (state)\nthis:\n  u c - u c' - u c < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "hence \"- u c' < d + d'\""], ["proof (prove)\nusing this:\n  u c - u c' - u c < d + d'\n\ngoal (1 subgoal):\n 1. - u c' < d + d'", "by simp"], ["proof (state)\nthis:\n  - u c' < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Le d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "using 2 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n  M (v c) (v c') = Lt d'\n  u c - u c' < d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Le d) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "case (3)"], ["proof (state)\nthis:\n  M (v c) (v c') = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) (v c') = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Le d) (M (v c) (v c')))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Le d) (M (v c) (v c')))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Le d) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "case (2 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n  - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "note G2 = this"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n  - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M 0 (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c') (M (v c) (v c'));\n        - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt da) (M (v c) (v c')))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c') (M (v c) (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) (v c') = Le d'\n  u c - u c' \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "from this(2) G2(3)"], ["proof (chain)\npicking this:\n  u c - u c' \\<le> d'\n  - u c < d", "have \"u c - u c' - u c < d' + d\""], ["proof (prove)\nusing this:\n  u c - u c' \\<le> d'\n  - u c < d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d' + d", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  u c - u c' \\<le> d'\n  - u c < d\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d' + d", "by fastforce"], ["proof (state)\nthis:\n  u c - u c' - u c < d' + d\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "hence \"- u c' < d' + d\""], ["proof (prove)\nusing this:\n  u c - u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. - u c' < d' + d", "by simp"], ["proof (state)\nthis:\n  - u c' < d' + d\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "hence \"- u c' < d + d'\""], ["proof (prove)\nusing this:\n  - u c' < d' + d\n\ngoal (1 subgoal):\n 1. - u c' < d + d'", "by (metis (hide_lams, no_types) diff_0_right diff_minus_eq_add minus_add_distrib minus_diff_eq)"], ["proof (state)\nthis:\n  - u c' < d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Le db; u c - u c' \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 3. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "using 1 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n  M (v c) (v c') = Le d'\n  u c - u c' \\<le> d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Lt d) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) (v c') = Lt d'\n  u c - u c' < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "from this(2) G2(3)"], ["proof (chain)\npicking this:\n  u c - u c' < d'\n  - u c < d", "have \"u c - u c' - u c < d + d'\""], ["proof (prove)\nusing this:\n  u c - u c' < d'\n  - u c < d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d + d'", "using add_strict_mono"], ["proof (prove)\nusing this:\n  u c - u c' < d'\n  - u c < d\n  \\<lbrakk>?a < ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c - u c' - u c < d + d'", "by fastforce"], ["proof (state)\nthis:\n  u c - u c' - u c < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "hence \"- u c' < d + d'\""], ["proof (prove)\nusing this:\n  u c - u c' - u c < d + d'\n\ngoal (1 subgoal):\n 1. - u c' < d + d'", "by simp"], ["proof (state)\nthis:\n  - u c' < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c') = Lt db; u c - u c' < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) None (Some c')\n                          (dbm_add (Lt d) (M (v c) (v c')))\n 2. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "using 2 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  - u c' < d + d'\n  M (v c) (v c') = Lt d'\n  u c - u c' < d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Lt d) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "case (3)"], ["proof (state)\nthis:\n  M (v c) (v c') = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) (v c') = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) (v c') = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c')\n     (dbm_add (Lt d) (M (v c) (v c')))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Lt d) (M (v c) (v c')))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (dbm_add (Lt d) (M (v c) (v c')))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "case True"], ["proof (state)\nthis:\n  c = c'\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "with 2"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'", "show ?thesis"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "case (3 c')"], ["proof (state)\nthis:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>ca.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v ca \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some ca) None\n                          (M' (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "proof (cases \"c = c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "hence F:\"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. v c' \\<noteq> v c", "using 3"], ["proof (prove)\nusing this:\n  c \\<noteq> c'\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. v c' \\<noteq> v c", "by metis"], ["proof (state)\nthis:\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "hence *:\"M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\""], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using F 3(1,2,4,6)"], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n  v c' \\<noteq> v c\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c' \\<noteq> v c\n  v c' \\<noteq> v c\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by simp"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "proof (cases \"dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. \\<not> dbm_add (M (v c') (v c)) (M (v c) 0)\n           < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "case False"], ["proof (state)\nthis:\n  \\<not> dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. \\<not> dbm_add (M (v c') (v c)) (M (v c) 0)\n           < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "with *"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  \\<not> dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0", "have \"M' (v c') 0 = M (v c') 0\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  \\<not> dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = M (v c') 0", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' (v c') 0 = M (v c') 0\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. \\<not> dbm_add (M (v c') (v c)) (M (v c) 0)\n           < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "hence \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = M (v c') 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "using 3(3,6)"], ["proof (prove)\nusing this:\n  M' (v c') 0 = M (v c') 0\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  M' (v c') 0 = M (v c') 0\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n 2. \\<not> dbm_add (M (v c') (v c)) (M (v c) 0)\n           < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "using F"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "by cases fastforce+"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "case True"], ["proof (state)\nthis:\n  dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "with *"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0", "have **:\"M' (v c') 0 = dbm_add (M (v c') (v c)) (M (v c) 0)\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = dbm_add (M (v c') (v c)) (M (v c) 0)", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' (v c') 0 = dbm_add (M (v c') (v c)) (M (v c) 0)\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "from 3"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n", "have \"dbm_entry_val u (Some c') (Some c) (M (v c') (v c))\"\n      \"dbm_entry_val u (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (M (v c') (v c)) &&&\n    dbm_entry_val u (Some c) None (M (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') (Some c) (M (v c') (v c)) &&&\n    dbm_entry_val u (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') (Some c) (M (v c') (v c))\n  dbm_entry_val u (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c') (v c)) (M (v c) 0) < M (v c') 0 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') (Some c) (M (v c') (v c))\n  dbm_entry_val u (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "proof (cases, auto simp add: **, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Le da;\n        dbm_entry_val u (Some c) None (M (v c) 0);\n        u c' - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le da) (M (v c) 0))\n 2. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "case (1 d)"], ["proof (state)\nthis:\n  M (v c') (v c) = Le d\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  u c' - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Le da;\n        dbm_entry_val u (Some c) None (M (v c) 0);\n        u c' - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le da) (M (v c) 0))\n 2. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "note G1 = this"], ["proof (state)\nthis:\n  M (v c') (v c) = Le d\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  u c' - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Le da;\n        dbm_entry_val u (Some c) None (M (v c) 0);\n        u c' - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le da) (M (v c) 0))\n 2. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None (M (v c) 0)", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) 0 = Le d'\n  u c \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "from this(2) G1(3)"], ["proof (chain)\npicking this:\n  u c \\<le> d'\n  u c' - u c \\<le> d", "have \"u c' \\<le> d + d'\""], ["proof (prove)\nusing this:\n  u c \\<le> d'\n  u c' - u c \\<le> d\n\ngoal (1 subgoal):\n 1. u c' \\<le> d + d'", "using ordered_ab_semigroup_add_class.add_mono"], ["proof (prove)\nusing this:\n  u c \\<le> d'\n  u c' - u c \\<le> d\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. u c' \\<le> d + d'", "by fastforce"], ["proof (state)\nthis:\n  u c' \\<le> d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  u c' \\<le> d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "using 1 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  u c' \\<le> d + d'\n  M (v c) 0 = Le d'\n  u c \\<le> d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) 0 = Lt d'\n  u c < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "from this(2) G1(3)"], ["proof (chain)\npicking this:\n  u c < d'\n  u c' - u c \\<le> d", "have \"u c + u c' - u c < d + d'\""], ["proof (prove)\nusing this:\n  u c < d'\n  u c' - u c \\<le> d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d + d'", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  u c < d'\n  u c' - u c \\<le> d\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d + d'", "by fastforce"], ["proof (state)\nthis:\n  u c + u c' - u c < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "hence \"u c' < d + d'\""], ["proof (prove)\nusing this:\n  u c + u c' - u c < d + d'\n\ngoal (1 subgoal):\n 1. u c' < d + d'", "by simp"], ["proof (state)\nthis:\n  u c' < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Le d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "using 2 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  u c' < d + d'\n  M (v c) 0 = Lt d'\n  u c < d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "case (3)"], ["proof (state)\nthis:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Le d) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "case (2 d)"], ["proof (state)\nthis:\n  M (v c') (v c) = Lt d\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  u c' - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "note G2 = this"], ["proof (state)\nthis:\n  M (v c') (v c) = Lt d\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  u c' - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c') (v c) = Lt da;\n        dbm_entry_val u (Some c) None (M (v c) 0); u c' - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt da) (M (v c) 0))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None (M (v c) 0)", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) 0 = Le d'\n  u c \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "from this(2) G2(3)"], ["proof (chain)\npicking this:\n  u c \\<le> d'\n  u c' - u c < d", "have \"u c + u c' - u c < d' + d\""], ["proof (prove)\nusing this:\n  u c \\<le> d'\n  u c' - u c < d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d' + d", "using add_le_less_mono"], ["proof (prove)\nusing this:\n  u c \\<le> d'\n  u c' - u c < d\n  \\<lbrakk>?a \\<le> ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d' + d", "by fastforce"], ["proof (state)\nthis:\n  u c + u c' - u c < d' + d\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "hence \"u c' < d' + d\""], ["proof (prove)\nusing this:\n  u c + u c' - u c < d' + d\n\ngoal (1 subgoal):\n 1. u c' < d' + d", "by simp"], ["proof (state)\nthis:\n  u c' < d' + d\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "hence \"u c' < d + d'\""], ["proof (prove)\nusing this:\n  u c' < d' + d\n\ngoal (1 subgoal):\n 1. u c' < d + d'", "by (metis (hide_lams, no_types) diff_0_right diff_minus_eq_add minus_add_distrib minus_diff_eq)"], ["proof (state)\nthis:\n  u c' < d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Le db; u c \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "using 1 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  u c' < d + d'\n  M (v c) 0 = Le d'\n  u c \\<le> d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) 0 = Lt d'\n  u c < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "from this(2) G2(3)"], ["proof (chain)\npicking this:\n  u c < d'\n  u c' - u c < d", "have \"u c + u c' - u c < d + d'\""], ["proof (prove)\nusing this:\n  u c < d'\n  u c' - u c < d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d + d'", "using add_strict_mono"], ["proof (prove)\nusing this:\n  u c < d'\n  u c' - u c < d\n  \\<lbrakk>?a < ?b; ?c < ?d\\<rbrakk> \\<Longrightarrow> ?a + ?c < ?b + ?d\n\ngoal (1 subgoal):\n 1. u c + u c' - u c < d + d'", "by fastforce"], ["proof (state)\nthis:\n  u c + u c' - u c < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "hence \"u c' < d + d'\""], ["proof (prove)\nusing this:\n  u c + u c' - u c < d + d'\n\ngoal (1 subgoal):\n 1. u c' < d + d'", "by simp"], ["proof (state)\nthis:\n  u c' < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) 0 = Lt db; u c < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c') None\n                          (dbm_add (Lt d) (M (v c) 0))\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "using 2 \\<open>c \\<noteq> c'\\<close>"], ["proof (prove)\nusing this:\n  u c' < d + d'\n  M (v c) 0 = Lt d'\n  u c < d'\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "case 3"], ["proof (state)\nthis:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (dbm_add (Lt d) (M (v c) 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "case True"], ["proof (state)\nthis:\n  c = c'\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "with 3"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'", "show ?thesis"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n  c = c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c \\<le> n; DBM_reset M n (v c) d M';\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n           x = y;\n        v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (M' (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "proof (cases \"c = c1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c1\n\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "note F1 = this"], ["proof (state)\nthis:\n  c \\<noteq> c1\n\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "proof (cases \"c = c2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c2\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "with F1 4"], ["proof (chain)\npicking this:\n  c \\<noteq> c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2", "have F: \"v c \\<noteq> v c1\" \"v c \\<noteq> v c2\" \"v c1 \\<noteq> 0\" \"v c2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c \\<noteq> c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. (v c \\<noteq> v c1 &&& v c \\<noteq> v c2) &&&\n    v c1 \\<noteq> 0 &&& v c2 \\<noteq> 0", "by force+"], ["proof (state)\nthis:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "hence *:\"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using 4(1,2,6,7)"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by simp"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "proof (cases \"dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "with *"], ["proof (chain)\npicking this:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)", "have \"M' (v c1) (v c2) = M (v c1) (v c2)\""], ["proof (prove)\nusing this:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) = M (v c1) (v c2)", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "hence \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  M' (v c1) (v c2) = M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "using 4(3,6,7)"], ["proof (prove)\nusing this:\n  M' (v c1) (v c2) = M (v c1) (v c2)\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  M' (v c1) (v c2) = M (v c1) (v c2)\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. \\<not> dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n           < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "using F"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "by cases fastforce+"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "with *"], ["proof (chain)\npicking this:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)", "have **:\"M' (v c1) (v c2) = dbm_add (M (v c1) (v c)) (M (v c) (v c2))\""], ["proof (prove)\nusing this:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_add (M (v c1) (v c)) (M (v c) (v c2)) < M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) = dbm_add (M (v c1) (v c)) (M (v c) (v c2))", "by (auto split: split_min)"], ["proof (state)\nthis:\n  M' (v c1) (v c2) = dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "from 4"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n", "have \"dbm_entry_val u (Some c1) (Some c) (M (v c1) (v c))\"\n        \"dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c) (M (v c1) (v c)) &&&\n    dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c) (M (v c1) (v c)) &&&\n    dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c) (M (v c1) (v c))\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_add (M (v c1) (v c)) (M (v c) (v c2))\n    < M (v c1) (v c2) \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c) (M (v c1) (v c))\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "proof (cases, auto simp add: **, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le da) (M (v c) (v c2)))\n 2. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "case (1 d)"], ["proof (state)\nthis:\n  M (v c1) (v c) = Le d\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n  u c1 - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le da) (M (v c) (v c2)))\n 2. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "note G1 = this"], ["proof (state)\nthis:\n  M (v c1) (v c) = Le d\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n  u c1 - u c \\<le> d\n\ngoal (2 subgoals):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Le da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c \\<le> da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le da) (M (v c) (v c2)))\n 2. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) (v c2) = Le d'\n  u c - u c2 \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "from this(2) G1(3)"], ["proof (chain)\npicking this:\n  u c - u c2 \\<le> d'\n  u c1 - u c \\<le> d", "have \"u c1 - u c2 \\<le> d + d'\""], ["proof (prove)\nusing this:\n  u c - u c2 \\<le> d'\n  u c1 - u c \\<le> d\n\ngoal (1 subgoal):\n 1. u c1 - u c2 \\<le> d + d'", "by (metis (hide_lams, no_types) ab_semigroup_add_class.add_ac(1) add_le_cancel_right\n                                  add_left_mono diff_add_cancel dual_order.refl dual_order.trans)"], ["proof (state)\nthis:\n  u c1 - u c2 \\<le> d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 \\<le> d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "using 1 \\<open>c \\<noteq> c1\\<close> \\<open>c \\<noteq> c2\\<close>"], ["proof (prove)\nusing this:\n  u c1 - u c2 \\<le> d + d'\n  M (v c) (v c2) = Le d'\n  u c - u c2 \\<le> d'\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Le d) (M (v c) (v c2)))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) (v c2) = Lt d'\n  u c - u c2 < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "from add_less_le_mono[OF this(2) G1(3)]"], ["proof (chain)\npicking this:\n  u c - u c2 + (u c1 - u c) < d' + d", "have \"- u c2 + u c1 < d' + d\""], ["proof (prove)\nusing this:\n  u c - u c2 + (u c1 - u c) < d' + d\n\ngoal (1 subgoal):\n 1. - u c2 + u c1 < d' + d", "by simp"], ["proof (state)\nthis:\n  - u c2 + u c1 < d' + d\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "hence \"u c1 - u c2 < d + d'\""], ["proof (prove)\nusing this:\n  - u c2 + u c1 < d' + d\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d + d'", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  u c1 - u c2 < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Le d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "using 2 \\<open>c \\<noteq> c1\\<close> \\<open>c \\<noteq> c2\\<close>"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n  M (v c) (v c2) = Lt d'\n  u c - u c2 < d'\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Le d) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "case (3)"], ["proof (state)\nthis:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Le d) (M (v c) (v c2)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Le d) (M (v c) (v c2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Le d) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "case (2 d)"], ["proof (state)\nthis:\n  M (v c1) (v c) = Lt d\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n  u c1 - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "note G2 = this"], ["proof (state)\nthis:\n  M (v c1) (v c) = Lt d\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n  u c1 - u c < d\n\ngoal (1 subgoal):\n 1. \\<And>da.\n       \\<lbrakk>M (v c1) (v c) = Lt da;\n        dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2));\n        u c1 - u c < da\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt da) (M (v c) (v c2)))", "from this(2)"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))", "show ?case"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) (Some c2) (M (v c) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "proof (cases, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "case (1 d')"], ["proof (state)\nthis:\n  M (v c) (v c2) = Le d'\n  u c - u c2 \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "from add_less_le_mono[OF G2(3) this(2)]"], ["proof (chain)\npicking this:\n  u c1 - u c + (u c - u c2) < d + d'", "have \"u c1 - u c2 < d + d'\""], ["proof (prove)\nusing this:\n  u c1 - u c + (u c - u c2) < d + d'\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d + d'", "by (metis (hide_lams, no_types) ab_semigroup_add_class.add_ac(1) add_le_cancel_right\n              diff_add_cancel dual_order.order_iff_strict dual_order.strict_trans2)"], ["proof (state)\nthis:\n  u c1 - u c2 < d + d'\n\ngoal (3 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Le db; u c - u c2 \\<le> db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "using 1 \\<open>c \\<noteq> c1\\<close> \\<open>c \\<noteq> c2\\<close>"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n  M (v c) (v c2) = Le d'\n  u c - u c2 \\<le> d'\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Lt d) (M (v c) (v c2)))\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "case (2 d')"], ["proof (state)\nthis:\n  M (v c) (v c2) = Lt d'\n  u c - u c2 < d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "from add_strict_mono[OF this(2) G2(3)]"], ["proof (chain)\npicking this:\n  u c - u c2 + (u c1 - u c) < d' + d", "have \"- u c2 + u c1 < d' + d\""], ["proof (prove)\nusing this:\n  u c - u c2 + (u c1 - u c) < d' + d\n\ngoal (1 subgoal):\n 1. - u c2 + u c1 < d' + d", "by simp"], ["proof (state)\nthis:\n  - u c2 + u c1 < d' + d\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "hence \"- u c2 + u c1 < d + d'\""], ["proof (prove)\nusing this:\n  - u c2 + u c1 < d' + d\n\ngoal (1 subgoal):\n 1. - u c2 + u c1 < d + d'", "by (metis (full_types) diff_0 diff_minus_eq_add minus_add_distrib minus_diff_eq)"], ["proof (state)\nthis:\n  - u c2 + u c1 < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "hence \"u c1 - u c2 < d + d'\""], ["proof (prove)\nusing this:\n  - u c2 + u c1 < d + d'\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d + d'", "by (metis add_diff_cancel_left diff_0 diff_0_right diff_add_cancel)"], ["proof (state)\nthis:\n  u c1 - u c2 < d + d'\n\ngoal (2 subgoals):\n 1. \\<And>db.\n       \\<lbrakk>M (v c) (v c2) = Lt db; u c - u c2 < db\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n                          (dbm_add (Lt d) (M (v c) (v c2)))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "using 2 \\<open>c \\<noteq> c1\\<close> \\<open>c \\<noteq> c2\\<close>"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d + d'\n  M (v c) (v c2) = Lt d'\n  u c - u c2 < d'\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Lt d) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "case (3)"], ["proof (state)\nthis:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n     (dbm_add (Lt d) (M (v c) (v c2)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Lt d) (M (v c) (v c2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2)\n   (dbm_add (Lt d) (M (v c) (v c2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c2\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "with F1 4"], ["proof (chain)\npicking this:\n  c \\<noteq> c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c = c2", "have F: \"v c \\<noteq> v c1\" \"v c1 \\<noteq> 0\" \"v c2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c \\<noteq> c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c = c2\n\ngoal (1 subgoal):\n 1. v c \\<noteq> v c1 &&& v c1 \\<noteq> 0 &&& v c2 \\<noteq> 0", "by force+"], ["proof (state)\nthis:\n  v c \\<noteq> v c1\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "using 4(1,2,4,6,7) True"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c = c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c = c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c1\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "note T1 = this"], ["proof (state)\nthis:\n  c = c1\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "proof (cases \"c = c2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c2\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "with T1 4"], ["proof (chain)\npicking this:\n  c = c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2", "have F: \"v c \\<noteq> v c2\" \"v c1 \\<noteq> 0\" \"v c2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c = c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. v c \\<noteq> v c2 &&& v c1 \\<noteq> 0 &&& v c2 \\<noteq> 0", "by force+"], ["proof (state)\nthis:\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "using 4(1,2,7) True"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  v c2 \\<le> n\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c2\n  v c1 \\<noteq> 0\n  v c2 \\<noteq> 0\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  v c2 \\<le> n\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c2\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  c = c2", "have *: \"M' (v c1) (v c1) = M (v c1) (v c1)\""], ["proof (prove)\nusing this:\n  c = c2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c1) = M (v c1) (v c1)", "using T1 4"], ["proof (prove)\nusing this:\n  c = c2\n  c = c1\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c1) = M (v c1) (v c1)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  c = c2\n  c = c1\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c1) = M (v c1) (v c1)", "by auto"], ["proof (state)\nthis:\n  M' (v c1) (v c1) = M (v c1) (v c1)\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "from 4(1,3) True T1"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  c = c2\n  c = c1", "have \"dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  c = c2\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))\n  c = c2\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))", "by (cases rule: dbm_entry_val.cases, auto simp: * True[symmetric] T1)"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d)) (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_sound_empty:\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\"\n          \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\"\n  shows \"\\<not> DBM_val_bounded v u M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "using assms DBM_reset_complete"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  \\<lbrakk>\\<forall>c.\n              0 < ?v c \\<and>\n              (\\<forall>x y.\n                  ?v x \\<le> ?n \\<and>\n                  ?v y \\<le> ?n \\<and> ?v x = ?v y \\<longrightarrow>\n                  x = y);\n   ?v ?c \\<le> ?n; DBM_reset ?M ?n (?v ?c) ?d ?M';\n   ?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> ?u(?c := ?d) \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M'\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by metis"], ["", "lemma DBM_reset_diag_preservation:\n  \"\\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> DBM_reset M n i d M' \\<Longrightarrow> \\<forall>k\\<le>n. M' k k \\<le> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n     DBM_reset M n i d M'\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k\\<le>n. M' k k \\<le> \\<one>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>", "apply (case_tac \"k = i\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n; k = i\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>\n 2. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n; k \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>", "apply (simp add: DBM_reset_def less[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n; k \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>", "apply (case_tac \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n; k \\<noteq> i; k = 0\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>\n 2. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; DBM_reset M n i d M';\n        k \\<le> n; k \\<noteq> i; k \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> M' k k \\<le> \\<one>", "by (auto simp add: DBM_reset_def less[symmetric] neutral split: split_min)"], ["", "lemma FW_diag_preservation:\n  \"\\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> \\<forall>k\\<le>n. (FW M n) k k \\<le> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow>\n    \\<forall>k\\<le>n. FW M n k k \\<le> \\<one>", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n k k \\<le> \\<one>", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n k k \\<le> \\<one>", "assume A: \"\\<forall>k\\<le>n. M k k \\<le> \\<one>\" \"k \\<le> n\""], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n k k \\<le> \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  k \\<le> n", "have \"M k k \\<le> \\<one>\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. M k k \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  M k k \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n k k \\<le> \\<one>", "with fw_mono[of n n n k k M n] A"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; k \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW M n k k \\<le> M k k\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  k \\<le> n\n  M k k \\<le> \\<one>", "show \"FW M n k k \\<le> \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; k \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW M n k k \\<le> M k k\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  k \\<le> n\n  M k k \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. FW M n k k \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  FW M n k k \\<le> \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_not_cyc_free_preservation:\n  assumes \"\\<not> cyc_free M n\" \"DBM_reset M n k d M'\" \"k \\<le> n\"\n  shows \"\\<not> cyc_free M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)", "obtain i xs where \"i \\<le> n\" \"set xs \\<subseteq> {0..n}\" \"len M i i xs < Le 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i xs.\n        \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n         len M i i xs < Le (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding neutral"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             Le (0::'a) \\<le> len M i i xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i xs.\n        \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n         len M i i xs < Le (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  len M i i xs < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "with DBM_reset_neg_cycle_preservation[OF assms(2) this(3)] assms(3)"], ["proof (chain)\npicking this:\n  set (k # i # xs) \\<subseteq> {0..n} \\<Longrightarrow>\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n  k \\<le> n\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  len M i i xs < Le (0::'a)", "obtain j ys where\n    \"set (j # ys) \\<subseteq> {0..n}\" \"len M' j j ys < Le 0\""], ["proof (prove)\nusing this:\n  set (k # i # xs) \\<subseteq> {0..n} \\<Longrightarrow>\n  \\<exists>j ys.\n     set (j # ys) \\<subseteq> {0..n} \\<and> len M' j j ys < Le (0::'a)\n  k \\<le> n\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  len M i i xs < Le (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>j ys.\n        \\<lbrakk>set (j # ys) \\<subseteq> {0..n};\n         len M' j j ys < Le (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set (j # ys) \\<subseteq> {0..n}\n  len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "then"], ["proof (chain)\npicking this:\n  set (j # ys) \\<subseteq> {0..n}\n  len M' j j ys < Le (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  set (j # ys) \\<subseteq> {0..n}\n  len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "unfolding neutral"], ["proof (prove)\nusing this:\n  set (j # ys) \\<subseteq> {0..n}\n  len M' j j ys < Le (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               Le (0::'a) \\<le> len M' i i xs)", "by force"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_complete_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\" \"k \\<le> n\"\n          \"DBM_reset M n k d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from assms(5)"], ["proof (chain)\npicking this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from empty_not_cyc_free[OF _ this]"], ["proof (chain)\npicking this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)", "have \"\\<not> cyc_free M n\""], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M i i xs)", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)\n  \\<forall>c. 0 < v c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M i i xs)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from DBM_reset_not_cyc_free_preservation[OF this assms(4,3)]"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)", "have \"\\<not> cyc_free M' n\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               \\<one> \\<le> len M' i i xs)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)", "obtain i xs where \"i \\<le> n\" \"set xs \\<subseteq> {0..n}\" \"len M' i i xs < \\<one>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             \\<one> \\<le> len M' i i xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i xs.\n        \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n         len M' i i xs < \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  len M' i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from DBM_val_bounded_neg_cycle[OF _ this assms(1)]"], ["proof (chain)\npicking this:\n  ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M' \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by fast"], ["proof (state)\nthis:\n  \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_complete_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\"\n          \"DBM_reset (FW M n) n (v c) d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u (FW M n) n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "note A = assms"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c. 0 < v c\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from A(4)"], ["proof (chain)\npicking this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "have \"[FW M n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n} = {}", "by auto"], ["proof (state)\nthis:\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with FW_detects_empty_zone[OF A(1), of M] A(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW M n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW M n i i < Le (0::'b))\n  \\<forall>c. 0 < v c\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}", "obtain i where i: \"i \\<le> n\" \"FW M n i i < Le 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW M n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW M n i i < Le (0::'b))\n  \\<forall>c. 0 < v c\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<le> n; FW M n i i < Le (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with A(3,4)"], ["proof (chain)\npicking this:\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n  i \\<le> n\n  FW M n i i < Le (0::'b)", "have \"M' i i < Le 0\""], ["proof (prove)\nusing this:\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. M' i i < Le (0::'b)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = FW M n (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j =\n         min (dbm_add (FW M n i (v c)) (FW M n (v c) j)) (FW M n i j))\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. M' i i < Le (0::'b)", "by (cases \"i = v c\", auto split: split_min)"], ["proof (state)\nthis:\n  M' i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with fw_mono[of n n n i i M' n] i"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; i \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW M' n i i \\<le> M' i i\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  M' i i < Le (0::'b)", "have \"FW M' n i i < Le 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; i \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW M' n i i \\<le> M' i i\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  M' i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. FW M' n i i < Le (0::'b)", "by auto"], ["proof (state)\nthis:\n  FW M' n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with FW_detects_empty_zone[OF A(1), of M'] A(2) i"], ["proof (chain)\npicking this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW M' n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW M' n i i < Le (0::'b))\n  \\<forall>c. 0 < v c\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  FW M' n i i < Le (0::'b)", "have \"[FW M' n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW M' n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW M' n i i < Le (0::'b))\n  \\<forall>c. 0 < v c\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  FW M' n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. [FW M' n]\\<^bsub>v,n\\<^esub> = {}", "by auto"], ["proof (state)\nthis:\n  [FW M' n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with FW_zone_equiv[OF A(1)]"], ["proof (chain)\npicking this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [FW M' n]\\<^bsub>v,n\\<^esub> = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [FW M' n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by (auto simp: DBM_zone_repr_def)"], ["proof (state)\nthis:\n  \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_complete_empty1:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering v\"\n          \"DBM_reset (FW M n) n (v c) d M'\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from assms"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c. 0 < v c\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c. 0 < v c\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c. 0 < v c\n  DBM_reset (FW M n) n (v c) d M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "with FW_zone_equiv[OF assms(1)]"], ["proof (chain)\npicking this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}", "have\n    \"\\<forall> u . \\<not> DBM_val_bounded v u (FW M n) n\""], ["proof (prove)\nusing this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M} =\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW ?M n}\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "from DBM_reset_complete_empty[OF assms(1-3) this]"], ["proof (chain)\npicking this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by auto"], ["proof (state)\nthis:\n  \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Lemma \\<open>FW_canonical_id\\<close> allows us to prove correspondences between reset and canonical,\n  like for the two below.\n  Can be left out for the rest because of the triviality of the correspondence.\n\\<close>"], ["", "lemma DBM_reset_empty'':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset M n (v c) d M'\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([M]\\<^bsub>v,n\\<^esub> = {}) = ([M']\\<^bsub>v,n\\<^esub> = {})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M n\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "using DBM_reset_complete_empty'[OF assms(1) _ assms(3,4)] assms(2)"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "thus \"[M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'} = {}", "by auto"], ["proof (state)\nthis:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume \"[M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\nusing this:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M n\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "using DBM_reset_sound_empty[OF assms(2-4)]"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M' \\<Longrightarrow>\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "thus \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset (FW M n) n (v c) d M'\"\n  shows \"[FW M n]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([FW M n]\\<^bsub>v,n\\<^esub> = {}) = ([M']\\<^bsub>v,n\\<^esub> = {})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[FW M n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (2 subgoals):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u (FW M n) n\""], ["proof (prove)\nusing this:\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (2 subgoals):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "using DBM_reset_complete_empty[of n v M, OF assms(1) _ assms(4)] assms(2,3)"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (2 subgoals):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M']\\<^bsub>v,n\\<^esub> = {}\n 2. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "thus \"[M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'} = {}", "by auto"], ["proof (state)\nthis:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "assume \"[M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M' n\""], ["proof (prove)\nusing this:\n  [M']\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u (FW M n) n\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "using DBM_reset_sound_empty[OF assms(2-)]"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M' \\<Longrightarrow>\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. [M']\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [FW M n]\\<^bsub>v,n\\<^esub> = {}", "thus \"[FW M n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n} = {}", "by auto"], ["proof (state)\nthis:\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_empty':\n  assumes \"canonical M n\" \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"DBM_reset (FW M n) n (v c) d M'\"\n  shows   \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([M]\\<^bsub>v,n\\<^esub> = {}) = ([M']\\<^bsub>v,n\\<^esub> = {})", "using FW_canonical_id[OF assms(1)] DBM_reset_empty[OF assms(2-)]"], ["proof (prove)\nusing this:\n  FW M n = M\n  ([FW M n]\\<^bsub>v,n\\<^esub> = {}) = ([M']\\<^bsub>v,n\\<^esub> = {})\n\ngoal (1 subgoal):\n 1. ([M]\\<^bsub>v,n\\<^esub> = {}) = ([M']\\<^bsub>v,n\\<^esub> = {})", "by simp"], ["", "lemma DBM_reset_sound':\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M' n\"\n          \"DBM_val_bounded v u'' M n\"\n  obtains d' where  \"DBM_val_bounded v (u(c := d')) M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "case 1"], ["proof (state)\nthis:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note A = this"], ["proof (state)\nthis:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain S_Min_Le where S_Min_Le:\n  \"S_Min_Le = {u c' - d | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = Le d}\n               \\<union> {-d | d. M 0 (v c) = Le d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Min_Le.\n        S_Min_Le =\n        {u c' - d |c' d.\n         0 < v c' \\<and>\n         v c' \\<le> n \\<and>\n         c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n        {- d |d. M 0 (v c) = Le d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Min_Le =\n  {u c' - d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n  {- d |d. M 0 (v c) = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain S_Min_Lt where S_Min_Lt:\n  \"S_Min_Lt = {u c' - d | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = Lt d}\n              \\<union> {-d | d. M 0 (v c) = Lt d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Min_Lt.\n        S_Min_Lt =\n        {u c' - d |c' d.\n         0 < v c' \\<and>\n         v c' \\<le> n \\<and>\n         c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n        {- d |d. M 0 (v c) = Lt d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt =\n  {u c' - d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n  {- d |d. M 0 (v c) = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain S_Max_Le where S_Max_Le:\n  \"S_Max_Le = {u c' + d | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = Le d}\n              \\<union> {d | d. M (v c) 0 = Le d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Max_Le.\n        S_Max_Le =\n        {u c' + d |c' d.\n         0 < v c' \\<and>\n         v c' \\<le> n \\<and>\n         c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n        {d |d. M (v c) 0 = Le d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Max_Le =\n  {u c' + d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n  {d |d. M (v c) 0 = Le d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain S_Max_Lt where S_Max_Lt:\n  \"S_Max_Lt = {u c' + d | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = Lt d}\n              \\<union> {d | d. M (v c) 0 = Lt d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S_Max_Lt.\n        S_Max_Lt =\n        {u c' + d |c' d.\n         0 < v c' \\<and>\n         v c' \\<le> n \\<and>\n         c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n        {d |d. M (v c) 0 = Lt d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S_Max_Lt =\n  {u c' + d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n  {d |d. M (v c) 0 = Lt d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"finite {c. 0 < v c \\<and> v c \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "using A(6,7)"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "case 0"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y", "have \"{c. 0 < v c \\<and> v c \\<le> 0} = {}\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. {c. 0 < v c \\<and> v c \\<le> 0} = {}", "by auto"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> 0 \\<and> v y \\<le> 0 \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> 0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}", "show ?case"], ["proof (prove)\nusing this:\n  {c. 0 < v c \\<and> v c \\<le> 0} = {}\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> 0}", "by (metis finite.emptyI)"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> 0}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y", "have \"finite {c. 0 < v c \\<and> v c \\<le> n}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c. 0 < v c;\n   \\<forall>x y.\n      v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n      x = y\\<rbrakk>\n  \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n}\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> n}", "by auto"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "moreover"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "have \"{c. 0 < v c \\<and> v c \\<le> Suc n} = {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {c. 0 < v c \\<and> v c \\<le> Suc n} =\n    {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}", "by auto"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "moreover"], ["proof (state)\nthis:\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "have \"finite {c. v c = Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c. v c = Suc n}", "proof (cases \"{c. v c = Suc n} = {}\", auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "assume \"v c = Suc n\""], ["proof (state)\nthis:\n  v c = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "then"], ["proof (chain)\npicking this:\n  v c = Suc n", "have \"{c. v c = Suc n} = {c}\""], ["proof (prove)\nusing this:\n  v c = Suc n\n\ngoal (1 subgoal):\n 1. {c. v c = Suc n} = {c}", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  v c = Suc n\n  \\<forall>x y.\n     v x \\<le> Suc n \\<and>\n     v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n     x = y\n\ngoal (1 subgoal):\n 1. {c. v c = Suc n} = {c}", "by auto"], ["proof (state)\nthis:\n  {c. v c = Suc n} = {c}\n\ngoal (1 subgoal):\n 1. \\<And>x. v x = Suc n \\<Longrightarrow> finite {c. v c = Suc n}", "then"], ["proof (chain)\npicking this:\n  {c. v c = Suc n} = {c}", "show ?thesis"], ["proof (prove)\nusing this:\n  {c. v c = Suc n} = {c}\n\ngoal (1 subgoal):\n 1. finite {c. v c = Suc n}", "by auto"], ["proof (state)\nthis:\n  finite {c. v c = Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>\\<forall>c. 0 < v c;\n                 \\<forall>x y.\n                    v x \\<le> n \\<and>\n                    v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                    x = y\\<rbrakk>\n                \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> n};\n        \\<forall>c. 0 < v c;\n        \\<forall>x y.\n           v x \\<le> Suc n \\<and>\n           v y \\<le> Suc n \\<and> v x = v y \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "ultimately"], ["proof (chain)\npicking this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n  finite {c. v c = Suc n}", "show ?case"], ["proof (prove)\nusing this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n  {c. 0 < v c \\<and> v c \\<le> Suc n} =\n  {c. 0 < v c \\<and> v c \\<le> n} \\<union> {c. v c = Suc n}\n  finite {c. v c = Suc n}\n\ngoal (1 subgoal):\n 1. finite {c. 0 < v c \\<and> v c \\<le> Suc n}", "by auto"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}", "have \"\\<forall> f. finite {(c,b) | c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\""], ["proof (prove)\nusing this:\n  finite {c. 0 < v c \\<and> v c \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have\n    \"\\<forall> f K. {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n    \\<subseteq> {(c,b) | c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n       \\<subseteq> {(c, b) |c b.\n                    0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}", "have B:\n    \"\\<forall> f K. finite {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       finite\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "using finite_subset"], ["proof (prove)\nusing this:\n  \\<forall>f.\n     finite {(c, b) |c b. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<forall>f K.\n     {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n     \\<subseteq> {(c, b) |c b.\n                  0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = b}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       finite\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by fast"], ["proof (state)\nthis:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<forall> f K. theLe o K = id \\<longrightarrow> finite {(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       theLe \\<circ> K = id \\<longrightarrow>\n       finite\n        {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "case (1 f K)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have\n      \"{(c,d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n      = (\\<lambda> (c,b). (c, theLe b)) ` {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n    (\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "proof (auto simp add: pointfree_idE, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "case (1 a b)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b", "have \"(a, K b) \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n  0 < v a\n  v a \\<le> n\n  f M (v a) = K b\n\ngoal (1 subgoal):\n 1. (a, K b)\n    \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "moreover"], ["proof (state)\nthis:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "from 1(1)"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have \"theLe (K b) = b\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. theLe (K b) = b", "by (simp add: pointfree_idE)"], ["proof (state)\nthis:\n  theLe (K b) = b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>theLe \\<circ> K = id; 0 < v a; v a \\<le> n;\n        f M (v a) = K b\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> (\\<lambda>x.\n                                   case x of\n                                   (c, b) \\<Rightarrow> (c, theLe b)) `\n                               {(c, K d) |c d.\n                                0 < v c \\<and>\n                                v c \\<le> n \\<and> f M (v c) = K d}", "ultimately"], ["proof (chain)\npicking this:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  theLe (K b) = b", "show ?case"], ["proof (prove)\nusing this:\n  (a, K b)\n  \\<in> {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  theLe (K b) = b\n\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> (\\<lambda>x. case x of (c, b) \\<Rightarrow> (c, theLe b)) `\n          {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by force"], ["proof (state)\nthis:\n  (a, b)\n  \\<in> (\\<lambda>x. case x of (c, b) \\<Rightarrow> (c, theLe b)) `\n        {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "moreover"], ["proof (state)\nthis:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "from B"], ["proof (chain)\npicking this:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "have\n      \"finite ((\\<lambda> (c,b). (c, theLe b)) ` {(c,K d) | c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\""], ["proof (prove)\nusing this:\n  \\<forall>f K.\n     finite\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, b). (c, theLe b)) `\n      {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})", "by auto"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "ultimately"], ["proof (chain)\npicking this:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})", "show ?case"], ["proof (prove)\nusing this:\n  {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d} =\n  (\\<lambda>(c, b). (c, theLe b)) `\n  {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n  finite\n   ((\\<lambda>(c, b). (c, theLe b)) `\n    {(c, K d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d})\n\ngoal (1 subgoal):\n 1. finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  finite {(c, d). 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}", "have finI:\n    \"\\<And> f g K. theLe o K = id \\<Longrightarrow> finite (g ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> f M (v c') = K d})\""], ["proof (prove)\nusing this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite {(c, d) |c d. 0 < v c \\<and> v c \\<le> n \\<and> f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c', d) |c' d.\n          0 < v c' \\<and> v c' \\<le> n \\<and> f M (v c') = K d})", "by auto"], ["proof (state)\nthis:\n  theLe \\<circ> ?K4 = id \\<Longrightarrow>\n  finite\n   (?g4 `\n    {(c', d) |c' d.\n     0 < v c' \\<and> v c' \\<le> n \\<and> ?f4 M (v c') = ?K4 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have finI1:\n    \"\\<And> f g K. theLe o K = id \\<Longrightarrow> finite (g ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c', d) |c' d.\n          0 < v c' \\<and>\n          v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c', d) |c' d.\n          0 < v c' \\<and>\n          v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "case (1 f g K)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c', d) |c' d.\n          0 < v c' \\<and>\n          v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "have\n      \"g ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d}\n      \\<subseteq> g ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> f M (v c') = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d}\n    \\<subseteq> g `\n                {(c', d) |c' d.\n                 0 < v c' \\<and> v c' \\<le> n \\<and> f M (v c') = K d}", "by auto"], ["proof (state)\nthis:\n  g `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d}\n  \\<subseteq> g `\n              {(c', d) |c' d.\n               0 < v c' \\<and> v c' \\<le> n \\<and> f M (v c') = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite\n        (g `\n         {(c', d) |c' d.\n          0 < v c' \\<and>\n          v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "from finite_subset[OF this finI[OF 1, of g f]]"], ["proof (chain)\npicking this:\n  finite\n   (g `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "show ?case"], ["proof (prove)\nusing this:\n  finite\n   (g `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})\n\ngoal (1 subgoal):\n 1. finite\n     (g `\n      {(c', d) |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})", "."], ["proof (state)\nthis:\n  finite\n   (g `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> f M (v c') = K d})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  theLe \\<circ> ?K5 = id \\<Longrightarrow>\n  finite\n   (?g5 `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> ?f5 M (v c') = ?K5 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<forall> f. finite {b. f M (v c) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f. finite {b. f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f. finite {b. f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  \\<forall>f. finite {b. f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<forall> f K. {K d | d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K. {K d |d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}", "by auto"], ["proof (state)\nthis:\n  \\<forall>f K. {K d |d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>f. finite {b. f M (v c) = b}\n  \\<forall>f K. {K d |d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}", "have B: \"\\<forall> f K. finite {K d | d. f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  \\<forall>f. finite {b. f M (v c) = b}\n  \\<forall>f K. {K d |d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}\n\ngoal (1 subgoal):\n 1. \\<forall>f K. finite {K d |d. f M (v c) = K d}", "using finite_subset"], ["proof (prove)\nusing this:\n  \\<forall>f. finite {b. f M (v c) = b}\n  \\<forall>f K. {K d |d. f M (v c) = K d} \\<subseteq> {b. f M (v c) = b}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<forall>f K. finite {K d |d. f M (v c) = K d}", "by fast"], ["proof (state)\nthis:\n  \\<forall>f K. finite {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<forall> f K. theLe o K = id \\<longrightarrow> finite {d | d. f M (v c) = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f K.\n       theLe \\<circ> K = id \\<longrightarrow> finite {d |d. f M (v c) = K d}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {uu_. f M (v c) = K uu_}", "case (1 f K)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {uu_. f M (v c) = K uu_}", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have \"{d | d. f M (v c) = K d} = theLe ` {K d | d. f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. {d |d. f M (v c) = K d} = theLe ` {K d |d. f M (v c) = K d}", "proof (auto simp add: pointfree_idE, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>theLe \\<circ> K = id; f M (v c) = K x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> theLe ` {K d |d. K x = K d}", "case (1 x)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n  f M (v c) = K x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>theLe \\<circ> K = id; f M (v c) = K x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> theLe ` {K d |d. K x = K d}", "have \"K x \\<in> {K d |d. K x = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K x \\<in> {K d |d. K x = K d}", "by auto"], ["proof (state)\nthis:\n  K x \\<in> {K d |d. K x = K d}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>theLe \\<circ> K = id; f M (v c) = K x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> theLe ` {K d |d. K x = K d}", "moreover"], ["proof (state)\nthis:\n  K x \\<in> {K d |d. K x = K d}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>theLe \\<circ> K = id; f M (v c) = K x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> theLe ` {K d |d. K x = K d}", "from 1"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id\n  f M (v c) = K x", "have \"theLe (K x) = x\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n  f M (v c) = K x\n\ngoal (1 subgoal):\n 1. theLe (K x) = x", "by (simp add: pointfree_idE)"], ["proof (state)\nthis:\n  theLe (K x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>theLe \\<circ> K = id; f M (v c) = K x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> theLe ` {K d |d. K x = K d}", "ultimately"], ["proof (chain)\npicking this:\n  K x \\<in> {K d |d. K x = K d}\n  theLe (K x) = x", "show ?case"], ["proof (prove)\nusing this:\n  K x \\<in> {K d |d. K x = K d}\n  theLe (K x) = x\n\ngoal (1 subgoal):\n 1. x \\<in> theLe ` {K d |d. K x = K d}", "by auto"], ["proof (state)\nthis:\n  x \\<in> theLe ` {K d |d. K x = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {d |d. f M (v c) = K d} = theLe ` {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {uu_. f M (v c) = K uu_}", "moreover"], ["proof (state)\nthis:\n  {d |d. f M (v c) = K d} = theLe ` {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {uu_. f M (v c) = K uu_}", "from B"], ["proof (chain)\npicking this:\n  \\<forall>f K. finite {K d |d. f M (v c) = K d}", "have \"finite {K d |d. f M (v c) = K d}\""], ["proof (prove)\nusing this:\n  \\<forall>f K. finite {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite {K d |d. f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  finite {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {uu_. f M (v c) = K uu_}", "ultimately"], ["proof (chain)\npicking this:\n  {d |d. f M (v c) = K d} = theLe ` {K d |d. f M (v c) = K d}\n  finite {K d |d. f M (v c) = K d}", "show ?case"], ["proof (prove)\nusing this:\n  {d |d. f M (v c) = K d} = theLe ` {K d |d. f M (v c) = K d}\n  finite {K d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite {uu_. f M (v c) = K uu_}", "by auto"], ["proof (state)\nthis:\n  finite {uu_. f M (v c) = K uu_}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow> finite {d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow> finite {d |d. f M (v c) = K d}", "have C: \"\\<forall> f g K. theLe o K = id \\<longrightarrow> finite (g ` {d | d. f M (v c) = K d})\""], ["proof (prove)\nusing this:\n  \\<forall>f K.\n     theLe \\<circ> K = id \\<longrightarrow> finite {d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<forall>f g K.\n       theLe \\<circ> K = id \\<longrightarrow>\n       finite (g ` {d |d. f M (v c) = K d})", "by auto"], ["proof (state)\nthis:\n  \\<forall>f g K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite (g ` {d |d. f M (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have finI2: \"\\<And> f g K. theLe o K = id \\<Longrightarrow> finite ({g d | d. f M (v c) = K d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {g d |d. f M (v c) = K d}", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {g d |d. f M (v c) = K d}", "case (1 f g K)"], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {g d |d. f M (v c) = K d}", "have \"{g d |d. f M (v c) = K d} = g ` {d | d. f M (v c) = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g d |d. f M (v c) = K d} = g ` {d |d. f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  {g d |d. f M (v c) = K d} = g ` {d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<And>f g K.\n       theLe \\<circ> K = id \\<Longrightarrow>\n       finite {g d |d. f M (v c) = K d}", "with C 1"], ["proof (chain)\npicking this:\n  \\<forall>f g K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite (g ` {d |d. f M (v c) = K d})\n  theLe \\<circ> K = id\n  {g d |d. f M (v c) = K d} = g ` {d |d. f M (v c) = K d}", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>f g K.\n     theLe \\<circ> K = id \\<longrightarrow>\n     finite (g ` {d |d. f M (v c) = K d})\n  theLe \\<circ> K = id\n  {g d |d. f M (v c) = K d} = g ` {d |d. f M (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite {g d |d. f M (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  finite {g d |d. f M (v c) = K d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  theLe \\<circ> ?K11 = id \\<Longrightarrow>\n  finite {?g11 d |d. ?f11 M (v c) = ?K11 d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  theLe \\<circ> ?K11 = id \\<Longrightarrow>\n  finite {?g11 d |d. ?f11 M (v c) = ?K11 d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix K :: \"'b \\<Rightarrow> 'b DBMEntry\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume A: \"theLe o K = id\""], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have\n      \"finite ((\\<lambda>(c,d). u c - d) ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). u c - d) `\n      {(c', d) |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})", "by (intro finI1, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). u c - d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). u c - d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have\n      \"{u c' - d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n      = ((\\<lambda>(c,d). u c - d) ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {u c' - d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d} =\n    (\\<lambda>(c, d). u c - d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  {u c' - d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d} =\n  (\\<lambda>(c, d). u c - d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). u c - d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\n  {u c' - d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d} =\n  (\\<lambda>(c, d). u c - d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}", "have \"finite {u c' - d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). u c - d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d})\n  {u c' - d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d} =\n  (\\<lambda>(c, d). u c - d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite\n     {u c' - d |c' d.\n      0 < v c' \\<and>\n      v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}", "by auto"], ["proof (state)\nthis:\n  finite\n   {u c' - d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  finite\n   {u c' - d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"finite {- d |d. M 0 (v c) = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {- d |d. M 0 (v c) = K d}", "using A"], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. finite {- d |d. M 0 (v c) = K d}", "by (intro finI2, auto)"], ["proof (state)\nthis:\n  finite {- d |d. M 0 (v c) = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   {u c' - d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n  finite {- d |d. M 0 (v c) = K d}", "have\n      \"finite ({u c' - d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n                \\<union> {- d |d. M 0 (v c) = K d})\""], ["proof (prove)\nusing this:\n  finite\n   {u c' - d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d}\n  finite {- d |d. M 0 (v c) = K d}\n\ngoal (1 subgoal):\n 1. finite\n     ({u c' - d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c') (v c) = K d} \\<union>\n      {- d |d. M 0 (v c) = K d})", "by (auto simp: S_Min_Le)"], ["proof (state)\nthis:\n  finite\n   ({u c' - d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c') (v c) = K d} \\<union>\n    {- d |d. M 0 (v c) = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  theLe \\<circ> ?K14 = id \\<Longrightarrow>\n  finite\n   ({u c' - d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and>\n     c \\<noteq> c' \\<and> M (v c') (v c) = ?K14 d} \\<union>\n    {- d |d. M 0 (v c) = ?K14 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note fin1 = this"], ["proof (state)\nthis:\n  theLe \\<circ> ?K14 = id \\<Longrightarrow>\n  finite\n   ({u c' - d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and>\n     c \\<noteq> c' \\<and> M (v c') (v c) = ?K14 d} \\<union>\n    {- d |d. M 0 (v c) = ?K14 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have fin_min_le: \"finite S_Min_Le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S_Min_Le", "unfolding S_Min_Le"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({u c' - d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n      {- d |d. M 0 (v c) = Le d})", "by (rule fin1, auto)"], ["proof (state)\nthis:\n  finite S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have fin_min_lt: \"finite S_Min_Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S_Min_Lt", "unfolding S_Min_Lt"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({u c' - d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n      {- d |d. M 0 (v c) = Lt d})", "by (rule fin1, auto)"], ["proof (state)\nthis:\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix K :: \"'b \\<Rightarrow> 'b DBMEntry\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume A: \"theLe o K = id\""], ["proof (state)\nthis:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  theLe \\<circ> K = id", "have \"finite ((\\<lambda>(c,d). u c + d) ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\""], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>(c, d). u c + d) `\n      {(c', d) |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})", "by (intro finI1, auto)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). u c + d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>(c, d). u c + d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have\n      \"{u c' + d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n      = ((\\<lambda>(c,d). u c + d) ` {(c',d) | c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {u c' + d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d} =\n    (\\<lambda>(c, d). u c + d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}", "by auto"], ["proof (state)\nthis:\n  {u c' + d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d} =\n  (\\<lambda>(c, d). u c + d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>(c, d). u c + d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\n  {u c' + d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d} =\n  (\\<lambda>(c, d). u c + d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}", "have \"finite {u c' + d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>(c, d). u c + d) `\n    {(c', d) |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d})\n  {u c' + d |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d} =\n  (\\<lambda>(c, d). u c + d) `\n  {(c', d) |c' d.\n   0 < v c' \\<and>\n   v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n\ngoal (1 subgoal):\n 1. finite\n     {u c' + d |c' d.\n      0 < v c' \\<and>\n      v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}", "by auto"], ["proof (state)\nthis:\n  finite\n   {u c' + d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  finite\n   {u c' + d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"finite {d |d. M (v c) 0 = K d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {d |d. M (v c) 0 = K d}", "using A"], ["proof (prove)\nusing this:\n  theLe \\<circ> K = id\n\ngoal (1 subgoal):\n 1. finite {d |d. M (v c) 0 = K d}", "by (intro finI2, auto)"], ["proof (state)\nthis:\n  finite {d |d. M (v c) 0 = K d}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  finite\n   {u c' + d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n  finite {d |d. M (v c) 0 = K d}", "have\n      \"finite ({u c' + d |c' d. 0 < v c' \\<and> v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n               \\<union> {d |d. M (v c) 0 = K d})\""], ["proof (prove)\nusing this:\n  finite\n   {u c' + d |c' d.\n    0 < v c' \\<and>\n    v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d}\n  finite {d |d. M (v c) 0 = K d}\n\ngoal (1 subgoal):\n 1. finite\n     ({u c' + d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c) (v c') = K d} \\<union>\n      {d |d. M (v c) 0 = K d})", "by (auto simp: S_Min_Le)"], ["proof (state)\nthis:\n  finite\n   ({u c' + d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and> c \\<noteq> c' \\<and> M (v c) (v c') = K d} \\<union>\n    {d |d. M (v c) 0 = K d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  theLe \\<circ> ?K14 = id \\<Longrightarrow>\n  finite\n   ({u c' + d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and>\n     c \\<noteq> c' \\<and> M (v c) (v c') = ?K14 d} \\<union>\n    {d |d. M (v c) 0 = ?K14 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note fin2 = this"], ["proof (state)\nthis:\n  theLe \\<circ> ?K14 = id \\<Longrightarrow>\n  finite\n   ({u c' + d |c' d.\n     0 < v c' \\<and>\n     v c' \\<le> n \\<and>\n     c \\<noteq> c' \\<and> M (v c) (v c') = ?K14 d} \\<union>\n    {d |d. M (v c) 0 = ?K14 d})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have fin_max_le: \"finite S_Max_Le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S_Max_Le", "unfolding S_Max_Le"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({u c' + d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n      {d |d. M (v c) 0 = Le d})", "by (rule fin2, auto)"], ["proof (state)\nthis:\n  finite S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have fin_max_lt: \"finite S_Max_Lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S_Max_Lt", "unfolding S_Max_Lt"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({u c' + d |c' d.\n       0 < v c' \\<and>\n       v c' \\<le> n \\<and>\n       c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n      {d |d. M (v c) 0 = Lt d})", "by (rule fin2, auto)"], ["proof (state)\nthis:\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"l \\<in> S_Min_Le\" \"r \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le", "have \"l \\<le> r\""], ["proof (prove)\nusing this:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. l \\<le> r", "proof (auto simp: S_Min_Le S_Max_Le, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "case (1 c1 d1 c2 d2)"], ["proof (state)\nthis:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2", "have\n        \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "have\n        \"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using A(3,7) 1"], ["proof (prove)\nusing this:\n  DBM_reset M n (v c) d M'\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by metis"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "have\n        \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "using dbm_entry_dbm_min'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with 1"], ["proof (chain)\npicking this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "have \"u c1 - u c2 \\<le> d1 + d2\""], ["proof (prove)\nusing this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. u c1 - u c2 \\<le> d1 + d2", "by auto"], ["proof (state)\nthis:\n  u c1 - u c2 \\<le> d1 + d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 \\<le> d1 + d2\n\ngoal (1 subgoal):\n 1. u c1 - d1 \\<le> u c2 + d2", "by (metis (hide_lams, no_types) add_diff_cancel_left diff_0_right diff_add_cancel diff_eq_diff_less_eq)"], ["proof (state)\nthis:\n  u c1 - d1 \\<le> u c2 + d2\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "case (2 c' d)"], ["proof (state)\nthis:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "hence \"(M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by blast"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "moreover"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "from A 2"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r", "have \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "ultimately"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)", "have \"dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "using dbm_entry_dbm_min3'"], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with 2"], ["proof (chain)\npicking this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "have \"u c' \\<le> d + r\""], ["proof (prove)\nusing this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Le r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. u c' \\<le> d + r", "by auto"], ["proof (state)\nthis:\n  u c' \\<le> d + r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d \\<le> r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "thus ?case"], ["proof (prove)\nusing this:\n  u c' \\<le> d + r\n\ngoal (1 subgoal):\n 1. u c' - d \\<le> r", "by (metis add_diff_cancel_left add_le_cancel_right diff_0_right diff_add_cancel)"], ["proof (state)\nthis:\n  u c' - d \\<le> r\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "case (3 d c' d')"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "hence \"(M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c')))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using 3"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by blast"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "moreover"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "from A 3"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'", "have \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "ultimately"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))", "have \"dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "using dbm_entry_dbm_min2'"], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with 3"], ["proof (chain)\npicking this:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "have \"-u c' \\<le> d + d'\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + d'\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le d'\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. - u c' \\<le> d + d'", "by auto"], ["proof (state)\nthis:\n  - u c' \\<le> d + d'\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' \\<le> d + d'\n\ngoal (1 subgoal):\n 1. - d \\<le> u c' + d'", "by (metis add_uminus_conv_diff diff_le_eq minus_add_distrib minus_le_iff)"], ["proof (state)\nthis:\n  - d \\<le> u c' + d'\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "case (4 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "text \\<open>\n        Here is the reason we need the assumption that the zone was not empty before the reset.\n        We cannot deduce anything from the current value of \\<open>c\\<close> itself because we reset it.\n        We can only ensure that we can reset the value of \\<open>c\\<close> by using the value from the\n        alternative assignment.\n        This case is only relevant if the tightest bounds for \\<open>d\\<close> were given by its original\n        lower and upper bounds. If they would overlap, the original zone would be empty.\n      \\<close>"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "from A(2,5)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have\n        \"dbm_entry_val u'' None (Some c) (M 0 (v c))\"\n        \"dbm_entry_val u'' (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "with 4"], ["proof (chain)\npicking this:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Le r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)", "have \"- u'' c \\<le> d\" \"u'' c \\<le> r\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Le r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. - u'' c \\<le> d &&& u'' c \\<le> r", "by auto"], ["proof (state)\nthis:\n  - u'' c \\<le> d\n  u'' c \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d \\<le> r", "thus ?case"], ["proof (prove)\nusing this:\n  - u'' c \\<le> d\n  u'' c \\<le> r\n\ngoal (1 subgoal):\n 1. - d \\<le> r", "by (metis minus_le_iff order.trans)"], ["proof (state)\nthis:\n  - d \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l \\<le> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 \\<le> ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note EE = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 \\<le> ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 \\<le> ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"l \\<in> S_Min_Le\" \"r \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt", "have \"l < r\""], ["proof (prove)\nusing this:\n  l \\<in> S_Min_Le\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto simp: S_Min_Le S_Max_Lt, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (1 c1 d1 c2 d2)"], ["proof (state)\nthis:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2", "have \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "have \"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using A(3,7) 1"], ["proof (prove)\nusing this:\n  DBM_reset M n (v c) d M'\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by metis"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "have \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "using dbm_entry_dbm_min'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 1"], ["proof (chain)\npicking this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "have \"u c1 - u c2 < d1 + d2\""], ["proof (prove)\nusing this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Le d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d1 + d2", "by auto"], ["proof (state)\nthis:\n  u c1 - u c2 < d1 + d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "then"], ["proof (chain)\npicking this:\n  u c1 - u c2 < d1 + d2", "show ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d1 + d2\n\ngoal (1 subgoal):\n 1. u c1 - d1 < u c2 + d2", "by (metis add.assoc add.commute diff_less_eq)"], ["proof (state)\nthis:\n  u c1 - d1 < u c2 + d2\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (2 c' d)"], ["proof (state)\nthis:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by blast"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 2"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r", "have \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)", "have \"dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "using dbm_entry_dbm_min3'"], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 2"], ["proof (chain)\npicking this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "have \"u c' < d + r\""], ["proof (prove)\nusing this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Le d\n  M (v c) 0 = Lt r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. u c' < d + r", "by auto"], ["proof (state)\nthis:\n  u c' < d + r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Le d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + r\n\ngoal (1 subgoal):\n 1. u c' - d < r", "by (metis add_less_imp_less_right diff_add_cancel gt_swap)"], ["proof (state)\nthis:\n  u c' - d < r\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (3 d c' da)"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c')))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using 3"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by blast"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 3"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da", "have \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))", "have \"dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "using dbm_entry_dbm_min2'"], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 3"], ["proof (chain)\npicking this:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "have \"-u c' < d + da\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Le d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. - u c' < d + da", "by auto"], ["proof (state)\nthis:\n  - u c' < d + da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + da\n\ngoal (1 subgoal):\n 1. - d < u c' + da", "by (metis add.commute diff_less_eq uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d < u c' + da\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (4 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A(2,5)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have\n        \"dbm_entry_val u'' None (Some c) (M 0 (v c))\"\n        \"dbm_entry_val u'' (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 4"], ["proof (chain)\npicking this:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Lt r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)", "have \"- u'' c \\<le> d\" \"u'' c < r\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Le d\n  l = - d\n  M (v c) 0 = Lt r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. - u'' c \\<le> d &&& u'' c < r", "by auto"], ["proof (state)\nthis:\n  - u'' c \\<le> d\n  u'' c < r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Le d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u'' c \\<le> d\n  u'' c < r\n\ngoal (1 subgoal):\n 1. - d < r", "by (metis minus_le_iff neq_iff not_le order.strict_trans)"], ["proof (state)\nthis:\n  - d < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note EL = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Le; ?r14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"l \\<in> S_Min_Lt\" \"r \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le", "have \"l < r\""], ["proof (prove)\nusing this:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto simp: S_Min_Lt S_Max_Le, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (1 c1 d1 c2 d2)"], ["proof (state)\nthis:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2", "have \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "have \"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using A(3,7) 1"], ["proof (prove)\nusing this:\n  DBM_reset M n (v c) d M'\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by metis"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "have \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "using dbm_entry_dbm_min'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 1"], ["proof (chain)\npicking this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "have \"u c1 - u c2 < d1 + d2\""], ["proof (prove)\nusing this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Le d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d1 + d2", "by auto"], ["proof (state)\nthis:\n  u c1 - u c2 < d1 + d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Le da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d1 + d2\n\ngoal (1 subgoal):\n 1. u c1 - d1 < u c2 + d2", "by (metis add.assoc add.commute diff_less_eq)"], ["proof (state)\nthis:\n  u c1 - d1 < u c2 + d2\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (2 c' d)"], ["proof (state)\nthis:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by blast"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 2"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r", "have \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)", "have \"dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "using dbm_entry_dbm_min3'"], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 2"], ["proof (chain)\npicking this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "have \"u c' < d + r\""], ["proof (prove)\nusing this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Le r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. u c' < d + r", "by auto"], ["proof (state)\nthis:\n  u c' < d + r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + r\n\ngoal (1 subgoal):\n 1. u c' - d < r", "by (metis add_less_imp_less_right diff_add_cancel gt_swap)"], ["proof (state)\nthis:\n  u c' - d < r\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (3 d c' da)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c')))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using 3"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by blast"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 3"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da", "have \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))", "have \"dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "using dbm_entry_dbm_min2'"], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 3"], ["proof (chain)\npicking this:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "have \"-u c' < d + da\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Le da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. - u c' < d + da", "by auto"], ["proof (state)\nthis:\n  - u c' < d + da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Le da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + da\n\ngoal (1 subgoal):\n 1. - d < u c' + da", "by (metis add.commute diff_less_eq uminus_add_conv_diff)"], ["proof (state)\nthis:\n  - d < u c' + da\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (4 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Le r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A(2,5)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have\n        \"dbm_entry_val u'' None (Some c) (M 0 (v c))\"\n        \"dbm_entry_val u'' (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 4"], ["proof (chain)\npicking this:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Le r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)", "have \"- u'' c < d\" \"u'' c \\<le> r\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Le r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. - u'' c < d &&& u'' c \\<le> r", "by auto"], ["proof (state)\nthis:\n  - u'' c < d\n  u'' c \\<le> r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Le r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u'' c < d\n  u'' c \\<le> r\n\ngoal (1 subgoal):\n 1. - d < r", "by (meson less_le_trans minus_less_iff)"], ["proof (state)\nthis:\n  - d < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Lt; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note LE = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Lt; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Lt; ?r14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix l r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"l \\<in> S_Min_Lt\" \"r \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt", "have \"l < r\""], ["proof (prove)\nusing this:\n  l \\<in> S_Min_Lt\n  r \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. l < r", "proof (auto simp: S_Min_Lt S_Max_Lt, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (1 c1 d1 c2 d2)"], ["proof (state)\nthis:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2", "have \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "have \"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using A(3,7) 1"], ["proof (prove)\nusing this:\n  DBM_reset M n (v c) d M'\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by metis"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "have \"dbm_entry_val u (Some c1) (Some c2) (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "using dbm_entry_dbm_min'"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2)\n     (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 1"], ["proof (chain)\npicking this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))", "have \"u c1 - u c2 < d1 + d2\""], ["proof (prove)\nusing this:\n  l = u c1 - d1\n  0 < v c1\n  v c1 \\<le> n\n  c \\<noteq> c1\n  M (v c1) (v c) = Lt d1\n  r = u c2 + d2\n  0 < v c2\n  v c2 \\<le> n\n  c \\<noteq> c2\n  M (v c) (v c2) = Lt d2\n  dbm_entry_val u (Some c1) (Some c2)\n   (dbm_add (M (v c1) (v c)) (M (v c) (v c2)))\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < d1 + d2", "by auto"], ["proof (state)\nthis:\n  u c1 - u c2 < d1 + d2\n\ngoal (4 subgoals):\n 1. \\<And>c' d c'a da.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; r = u c'a + da; 0 < v c'a; v c'a \\<le> n;\n        c \\<noteq> c'a; M (v c) (v c'a) = Lt da\\<rbrakk>\n       \\<Longrightarrow> u c' - d < u c'a + da\n 2. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 3. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 4. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "then"], ["proof (chain)\npicking this:\n  u c1 - u c2 < d1 + d2", "show ?case"], ["proof (prove)\nusing this:\n  u c1 - u c2 < d1 + d2\n\ngoal (1 subgoal):\n 1. u c1 - d1 < u c2 + d2", "by (metis add.assoc add.commute diff_less_eq)"], ["proof (state)\nthis:\n  u c1 - d1 < u c2 + d2\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (2 c' d)"], ["proof (state)\nthis:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0\\<longrightarrow> M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' i 0 = min (dbm_add (M i (v c)) (M (v c) 0)) (M i 0)\n  v c' \\<noteq> v c\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by blast"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 2"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r", "have \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)", "have \"dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\""], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "using dbm_entry_dbm_min3'"], ["proof (prove)\nusing this:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 2"], ["proof (chain)\npicking this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))", "have \"u c' < d + r\""], ["proof (prove)\nusing this:\n  l = u c' - d\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c') (v c) = Lt d\n  M (v c) 0 = Lt r\n  dbm_entry_val u (Some c') None (dbm_add (M (v c') (v c)) (M (v c) 0))\n\ngoal (1 subgoal):\n 1. u c' < d + r", "by auto"], ["proof (state)\nthis:\n  u c' < d + r\n\ngoal (3 subgoals):\n 1. \\<And>c' d.\n       \\<lbrakk>l = u c' - d; 0 < v c'; v c' \\<le> n; c \\<noteq> c';\n        M (v c') (v c) = Lt d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> u c' - d < r\n 2. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 3. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  u c' < d + r\n\ngoal (1 subgoal):\n 1. u c' - d < r", "by (metis add_less_imp_less_right diff_add_cancel gt_swap)"], ["proof (state)\nthis:\n  u c' - d < r\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (3 d c' da)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da", "have\n        \"(\\<forall>i\\<le>n. i \\<noteq> v c \\<and> i > 0 \\<longrightarrow> M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i))\"\n        \"v c' \\<noteq> v c\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n       M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i) &&&\n    v c' \\<noteq> v c", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "hence \"(M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c')))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using 3"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     i \\<noteq> v c \\<and> 0 < i \\<longrightarrow>\n     M' 0 i = min (dbm_add (M 0 (v c)) (M (v c) i)) (M 0 i)\n  v c' \\<noteq> v c\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by blast"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "moreover"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A 3"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da", "have \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by presburger"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "ultimately"], ["proof (chain)\npicking this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))", "have \"dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\""], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "using dbm_entry_dbm_min2'"], ["proof (prove)\nusing this:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?a\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "by fastforce"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 3"], ["proof (chain)\npicking this:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))", "have \"-u c' < d + da\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt d\n  l = - d\n  r = u c' + da\n  0 < v c'\n  v c' \\<le> n\n  c \\<noteq> c'\n  M (v c) (v c') = Lt da\n  dbm_entry_val u None (Some c') (dbm_add (M 0 (v c)) (M (v c) (v c')))\n\ngoal (1 subgoal):\n 1. - u c' < d + da", "by auto"], ["proof (state)\nthis:\n  - u c' < d + da\n\ngoal (2 subgoals):\n 1. \\<And>d c' da.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; r = u c' + da; 0 < v c';\n        v c' \\<le> n; c \\<noteq> c'; M (v c) (v c') = Lt da\\<rbrakk>\n       \\<Longrightarrow> - d < u c' + da\n 2. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u c' < d + da\n\ngoal (1 subgoal):\n 1. - d < u c' + da", "by (metis ab_group_add_class.ab_diff_conv_add_uminus add.commute diff_less_eq)"], ["proof (state)\nthis:\n  - d < u c' + da\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "case (4 d)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Lt r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "from A(2,5)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have\n        \"dbm_entry_val u'' None (Some c) (M 0 (v c))\"\n        \"dbm_entry_val u'' (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' None (Some c) (M 0 (v c)) &&&\n    dbm_entry_val u'' (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "with 4"], ["proof (chain)\npicking this:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Lt r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)", "have \"- u'' c \\<le> d\" \"u'' c < r\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt d\n  l = - d\n  M (v c) 0 = Lt r\n  dbm_entry_val u'' None (Some c) (M 0 (v c))\n  dbm_entry_val u'' (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. - u'' c \\<le> d &&& u'' c < r", "by auto"], ["proof (state)\nthis:\n  - u'' c \\<le> d\n  u'' c < r\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>M 0 (v c) = Lt d; l = - d; M (v c) 0 = Lt r\\<rbrakk>\n       \\<Longrightarrow> - d < r", "thus ?case"], ["proof (prove)\nusing this:\n  - u'' c \\<le> d\n  u'' c < r\n\ngoal (1 subgoal):\n 1. - d < r", "by (metis minus_le_iff neq_iff not_le order.strict_trans)"], ["proof (state)\nthis:\n  - d < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  l < r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Lt; ?r14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "note LL = this"], ["proof (state)\nthis:\n  \\<lbrakk>?l14 \\<in> S_Min_Lt; ?r14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> ?l14 < ?r14\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain d' where d':\n    \"\\<forall> t \\<in> S_Min_Le. d' \\<ge> t\" \"\\<forall> t \\<in> S_Min_Lt. d' > t\"\n    \"\\<forall> t \\<in> S_Max_Le. d' \\<le> t\" \"\\<forall> t \\<in> S_Max_Lt. d' < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume m:\n      \"\\<And>d'. \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d'; \\<forall>t\\<in>S_Min_Lt. t < d'; \\<forall>t\\<in>S_Max_Le. d' \\<le> t; \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> ?d'12;\n   \\<forall>t\\<in>S_Min_Lt. t < ?d'12;\n   \\<forall>t\\<in>S_Max_Le. ?d'12 \\<le> t;\n   \\<forall>t\\<in>S_Max_Lt. ?d'12 < t\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?min_le = \"Max S_Min_Le\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?min_lt = \"Max S_Min_Lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?max_le = \"Min S_Max_Le\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?max_lt = \"Min S_Max_Lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        \\<lbrakk>\\<forall>t\\<in>S_Min_Le. t \\<le> d';\n         \\<forall>t\\<in>S_Min_Lt. t < d';\n         \\<forall>t\\<in>S_Max_Le. d' \\<le> t;\n         \\<forall>t\\<in>S_Max_Lt. d' < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Min_Le = {} \\<and> S_Min_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "note T = this"], ["proof (state)\nthis:\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Min_Le = {} \\<and> S_Min_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Max_Le = {} \\<and> S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"0 :: 't :: time\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using True T"], ["proof (prove)\nusing this:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n\ngoal (1 subgoal):\n 1. thesis", "by (intro m[of ?d']) auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d =\n          \"if S_Max_Le \\<noteq> {}\n           then if S_Max_Lt \\<noteq> {} then min ?max_lt ?max_le else ?max_le\n           else ?max_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "obtain a :: \"'b\" where a: \"a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using non_trivial_neg"], ["proof (prove)\nusing this:\n  \\<exists>x. x < (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a < (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"min 0 (?d + a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume \"x \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "with fin_max_le a"], ["proof (chain)\npicking this:\n  finite S_Max_Le\n  a < (0::'b)\n  x \\<in> S_Max_Le", "have \"min 0 (Min S_Max_Le + a) \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Le\n  a < (0::'b)\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. min (0::'b) (Min S_Max_Le + a) \\<le> x", "by (metis Min.boundedE add_le_same_cancel1 empty_iff less_imp_le min.coboundedI2)"], ["proof (state)\nthis:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x", "have \"min 0 (Min S_Max_Le + a) \\<le> x\""], ["proof (prove)\nusing this:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. min (0::'b) (Min S_Max_Le + a) \\<le> x", "by auto"], ["proof (state)\nthis:\n  min (0::'b) (Min S_Max_Le + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 1 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?max_lt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt", "by (meson a add_less_same_cancel1 min.cobounded1 min.strict_coboundedI2 order.strict_trans2)"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from fin_max_lt x"], ["proof (chain)\npicking this:\n  finite S_Max_Lt\n  x \\<in> S_Max_Lt", "have \"\\<dots> \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Lt\n  x \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Min S_Max_Lt \\<le> x", "by auto"], ["proof (state)\nthis:\n  Min S_Max_Lt \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\""], ["proof (prove)\nusing this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\n\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x", "."], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 2 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?max_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le", "by (metis le_add_same_cancel1 linear not_le a min_le_iff_disj)"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from fin_max_le x"], ["proof (chain)\npicking this:\n  finite S_Max_Le\n  x \\<in> S_Max_Le", "have \"\\<dots> \\<le> x\""], ["proof (prove)\nusing this:\n  finite S_Max_Le\n  x \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. Min S_Max_Le \\<le> x", "by auto"], ["proof (state)\nthis:\n  Min S_Max_Le \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x", "have \"min 0 (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\""], ["proof (prove)\nusing this:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\n\ngoal (1 subgoal):\n 1. min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x", "."], ["proof (state)\nthis:\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 3 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using False T a 1 2 3"], ["proof (prove)\nusing this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  S_Min_Le = {} \\<and> S_Min_Lt = {}\n  a < (0::'b)\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (Min S_Max_Le + a) \\<le> ?x14\n  ?x14 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) < ?x14\n  ?x14 \\<in> S_Max_Le \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min S_Max_Le) + a) \\<le> ?x14\n\ngoal (1 subgoal):\n 1. thesis", "proof ((intro m[of ?d']), auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>a < (0::'b);\n        \\<And>x.\n           x \\<in> S_Max_Lt \\<Longrightarrow>\n           min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < x;\n        S_Min_Le = {}; S_Min_Lt = {}; S_Max_Le = {}; x \\<in> S_Max_Lt;\n        \\<not> min (0::'b) (Min S_Max_Lt + a) < x; xa \\<in> S_Max_Lt;\n        xb \\<in> S_Max_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  a < (0::'b)\n  ?x12 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x12\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>a < (0::'b);\n        \\<And>x.\n           x \\<in> S_Max_Lt \\<Longrightarrow>\n           min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < x;\n        S_Min_Le = {}; S_Min_Lt = {}; S_Max_Le = {}; x \\<in> S_Max_Lt;\n        \\<not> min (0::'b) (Min S_Max_Lt + a) < x; xa \\<in> S_Max_Lt;\n        xb \\<in> S_Max_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a < (0::'b)\n  ?x12 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x12\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt", "show ?case"], ["proof (prove)\nusing this:\n  a < (0::'b)\n  ?x12 \\<in> S_Max_Lt \\<Longrightarrow>\n  min (0::'b) (min (Min S_Max_Lt) (Min {}) + a) < ?x12\n  S_Min_Le = {}\n  S_Min_Lt = {}\n  S_Max_Le = {}\n  x_ \\<in> S_Max_Lt\n  \\<not> min (0::'b) (Min S_Max_Lt + a) < x_\n  xa_ \\<in> S_Max_Lt\n  xb_ \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by (metis Min.in_idem add.commute fin_max_lt leD le_add_same_cancel2 min.orderI\n                    min_less_iff_disj not_less_iff_gr_or_eq)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "note F = this"], ["proof (state)\nthis:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"S_Max_Le = {} \\<and> S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?l =\n          \"if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {} then max ?min_lt ?min_le else ?min_le\n           else ?min_lt\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "obtain a :: \"'b\" where \"a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using non_trivial_neg"], ["proof (prove)\nusing this:\n  \\<exists>x. x < (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a. a < (0::'b) \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  a < (0::'b)\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  a < (0::'b)", "have a: \"-a > 0\""], ["proof (prove)\nusing this:\n  a < (0::'b)\n\ngoal (1 subgoal):\n 1. (0::'b) < - a", "using non_trivial_neg"], ["proof (prove)\nusing this:\n  a < (0::'b)\n  \\<exists>x. x < (0::?'a)\n\ngoal (1 subgoal):\n 1. (0::'b) < - a", "by simp"], ["proof (state)\nthis:\n  (0::'b) < - a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  (0::'b) < - a", "obtain a :: \"'b\" where a: \"a > 0\""], ["proof (prove)\nusing this:\n  (0::'b) < - a\n\ngoal (1 subgoal):\n 1. (\\<And>a. (0::'b) < a \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  (0::'b) < a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?d' = \"?l + a\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Le\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Le", "have \"x \\<le> max ?min_lt ?min_le\" \"x \\<le> ?min_le\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Le", "using fin_min_le"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Le\n  finite S_Min_Le\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Le", "by (simp add: max.coboundedI2)+"], ["proof (state)\nthis:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Le\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Le", "have \"x \\<le> max ?min_lt ?min_le + a\" \"x \\<le> ?min_le + a\""], ["proof (prove)\nusing this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a &&&\n    x \\<le> Max S_Min_Le + a", "using a"], ["proof (prove)\nusing this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Le\n  (0::'b) < a\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a &&&\n    x \\<le> Max S_Min_Le + a", "by (simp add: add_increasing2)+"], ["proof (state)\nthis:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a\n  x \\<le> Max S_Min_Le + a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x14 \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow> ?x14 \\<le> Max S_Min_Le + a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 1 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x14 \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow> ?x14 \\<le> Max S_Min_Le + a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x14 \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow> ?x14 \\<le> Max S_Min_Le + a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Lt", "have \"x \\<le> max ?min_lt ?min_le\" \"x \\<le> ?min_lt\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Lt", "using fin_min_lt"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Lt", "by (simp add: max.coboundedI1)+"], ["proof (state)\nthis:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Lt\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Lt", "have \"x < ?d'\""], ["proof (prove)\nusing this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Lt\n\ngoal (1 subgoal):\n 1. x < (if S_Min_Le \\<noteq> {}\n         then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n              else Max S_Min_Le\n         else Max S_Min_Lt) +\n        a", "using a x"], ["proof (prove)\nusing this:\n  x \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  x \\<le> Max S_Min_Lt\n  (0::'b) < a\n  x \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. x < (if S_Min_Le \\<noteq> {}\n         then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n              else Max S_Min_Le\n         else Max S_Min_Lt) +\n        a", "by (auto simp add: add.commute add_strict_increasing)"], ["proof (state)\nthis:\n  x < (if S_Min_Le \\<noteq> {}\n       then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n            else Max S_Min_Le\n       else Max S_Min_Lt) +\n      a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14\n  < (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt) +\n    a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 2 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14\n  < (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt) +\n    a\n\ngoal (2 subgoals):\n 1. S_Max_Le = {} \\<and> S_Max_Lt = {} \\<Longrightarrow> thesis\n 2. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using True F a 1 2"], ["proof (prove)\nusing this:\n  S_Max_Le = {} \\<and> S_Max_Lt = {}\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  (0::'b) < a\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x14 \\<le> max (Max S_Min_Lt) (Max S_Min_Le) + a\n  ?x14 \\<in> S_Min_Le \\<Longrightarrow> ?x14 \\<le> Max S_Min_Le + a\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14\n  < (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt) +\n    a\n\ngoal (1 subgoal):\n 1. thesis", "by ((intro m[of ?d']), auto)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?r =\n          \"if S_Max_Le \\<noteq> {}\n           then if S_Max_Lt \\<noteq> {} then min ?max_lt ?max_le else ?max_le\n           else ?max_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "let ?l =\n          \"if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {} then max ?min_lt ?min_le else ?min_le\n           else ?min_lt\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "have 1: \"x \\<le> max ?min_lt ?min_le\" \"x \\<le> ?min_le\" if \"x \\<in> S_Min_Le\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> max (Max S_Min_Lt) (Max S_Min_Le) &&& x \\<le> Max S_Min_Le", "by (simp add: max.coboundedI2 that fin_min_le)+"], ["proof (state)\nthis:\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x12 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow> ?x12 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x12 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow> ?x12 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Le\" \"y \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt", "have \"S_Min_Lt \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. S_Min_Lt \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from LE[OF Max_in[OF fin_min_lt], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Lt < x", "have \"?min_lt \\<le> x\""], ["proof (prove)\nusing this:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt \\<le> x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 3 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Le\" \"y \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "with EE[OF Max_in[OF fin_min_le], OF _ x(1)]"], ["proof (chain)\npicking this:\n  S_Min_Le \\<noteq> {} \\<Longrightarrow> Max S_Min_Le \\<le> x\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Le", "have \"?min_le \\<le> x\""], ["proof (prove)\nusing this:\n  S_Min_Le \\<noteq> {} \\<Longrightarrow> Max S_Min_Le \\<le> x\n  x \\<in> S_Max_Le\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Le \\<le> x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 4 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\" \"y \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt", "have \"S_Min_Lt \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. S_Min_Lt \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from LL[OF Max_in[OF fin_min_lt], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Lt < x", "have \"?min_lt < x\""], ["proof (prove)\nusing this:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 5 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "assume x: \"x \\<in> S_Max_Lt\" \"y \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le", "have \"S_Min_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> S_Max_Lt\n  y \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. S_Min_Le \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "from EL[OF Max_in[OF fin_min_le], OF this, OF x(1)]"], ["proof (chain)\npicking this:\n  Max S_Min_Le < x", "have \"?min_le < x\""], ["proof (prove)\nusing this:\n  Max S_Min_Le < x\n\ngoal (1 subgoal):\n 1. Max S_Min_Le < x", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le < x\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "note 6 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x14\n\ngoal (1 subgoal):\n 1. \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {}) \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"?l < ?r\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "case False"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)", "have *: \"S_Max_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Max_Le \\<noteq> {}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with \\<open>\\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}", "obtain y where y:\"y \\<in> S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> S_Max_Lt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note 1 = 1 this"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "assume A: \"x \\<in> S_Min_Le\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with EL[OF Max_in[OF fin_min_le] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Le \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Le < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Le \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  x \\<in> S_Min_Le\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Le < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note ** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "with LL[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Lt < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "note *** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (if S_Min_Le \\<noteq> {}\n                     then if S_Min_Lt \\<noteq> {}\n                          then max (Max S_Min_Lt) (Max S_Min_Le)\n                          else Max S_Min_Le\n                     else Max S_Min_Lt)\n                    < Min S_Max_Lt;\n     S_Max_Le = {}\\<rbrakk>\n    \\<Longrightarrow> False", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Min_Le \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "note T = this"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Min_Lt \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Min_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Min_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Min_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Min_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using 1 T True ** ***"], ["proof (prove)\nusing this:\n  S_Min_Lt \\<noteq> {}\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  S_Min_Lt \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 T **"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<not> S_Min_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Le; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < Min S_Max_Lt\n  \\<not> S_Min_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Min_Le \\<noteq> {} \\<Longrightarrow> False", "with 1 False *** \\<open>\\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  \\<not> S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> S_Min_Le \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < Min S_Max_Lt\n  S_Max_Le = {}\n  y \\<in> S_Max_Lt\n  \\<not> S_Min_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?ya14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with LL[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_lt]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt", "have \"Max S_Min_Lt < Min S_Max_Lt\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Lt \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note *** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume A: \"x \\<in> S_Min_Lt\" \"y \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with LE[OF Max_in[OF fin_min_lt] Min_in[OF fin_max_le]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Le \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le", "have \"Max S_Min_Lt < Min S_Max_Le\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S_Min_Lt \\<noteq> {}; S_Max_Le \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  x \\<in> S_Min_Lt\n  y \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note **** = this"], ["proof (state)\nthis:\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "from F False"], ["proof (chain)\npicking this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)", "have **: \"S_Min_Le \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Min_Le \\<noteq> {}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> Max S_Min_Lt\n                       < (if S_Max_Le \\<noteq> {}\n                          then if S_Max_Lt \\<noteq> {}\n                               then min (Min S_Max_Lt) (Min S_Max_Le)\n                               else Min S_Max_Le\n                          else Min S_Max_Lt);\n        S_Min_Le = {}; x \\<in> S_Min_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> Max S_Min_Lt\n                       < (if S_Max_Le \\<noteq> {}\n                          then if S_Max_Lt \\<noteq> {}\n                               then min (Min S_Max_Lt) (Min S_Max_Le)\n                               else Min S_Max_Le\n                          else Min S_Max_Lt);\n        S_Min_Le = {}; x \\<in> S_Min_Lt\\<rbrakk>\n       \\<Longrightarrow> False", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Le \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "note T = this"], ["proof (state)\nthis:\n  S_Max_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Le \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Lt \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False\n 2. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Max_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "using 1 T True **** ***"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  S_Max_Lt \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 T ****"], ["proof (chain)\npicking this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<not> S_Max_Lt \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n  \\<not> S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> S_Max_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> S_Max_Le \\<noteq> {} \\<Longrightarrow> False", "with 1 False *** \\<open>\\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\\<close>"], ["proof (chain)\npicking this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  \\<not> S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> S_Max_Le \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Max S_Min_Lt\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  S_Min_Le = {}\n  x_ \\<in> S_Min_Lt\n  \\<not> S_Max_Le \\<noteq> {}\n  \\<lbrakk>?x14 \\<in> S_Min_Lt; ?y14 \\<in> S_Max_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n  \\<not> (S_Max_Le = {} \\<and> S_Max_Lt = {})\n  \\<not> S_Max_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  S_Min_Le \\<noteq> {}\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume x: \"x \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  x \\<in> S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Lt", "have \"x \\<le> ?min_lt\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> Max S_Min_Lt", "using fin_min_lt"], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. x \\<le> Max S_Min_Lt", "by (simp add: max.coboundedI2)"], ["proof (state)\nthis:\n  x \\<le> Max S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  x \\<le> Max S_Min_Lt\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "have \"?min_lt < ?min_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Max S_Min_Le", "proof (rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<not> Max S_Min_Lt < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "with x **"], ["proof (chain)\npicking this:\n  x \\<in> S_Min_Lt\n  S_Min_Le \\<noteq> {}\n  \\<not> Max S_Min_Lt < Max S_Min_Le", "have 1: \"?l = ?min_lt\""], ["proof (prove)\nusing this:\n  x \\<in> S_Min_Lt\n  S_Min_Le \\<noteq> {}\n  \\<not> Max S_Min_Lt < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt) =\n    Max S_Min_Lt", "by (auto simp: max.absorb1)"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "have 2: \"?min_lt < ?max_le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "using * ****[OF x]"], ["proof (prove)\nusing this:\n  S_Max_Le \\<noteq> {}\n  ?y14 \\<in> S_Max_Le \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Le\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Le", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Le\n\ngoal (1 subgoal):\n 1. \\<not> Max S_Min_Lt < Max S_Min_Le \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"S_Max_Lt = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  S_Max_Lt \\<noteq> {}\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  S_Max_Lt \\<noteq> {}", "have \"?min_lt < ?max_lt\""], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "using * ***[OF x]"], ["proof (prove)\nusing this:\n  S_Max_Lt \\<noteq> {}\n  S_Max_Le \\<noteq> {}\n  ?y14 \\<in> S_Max_Lt \\<Longrightarrow> Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. Max S_Min_Lt < Min S_Max_Lt", "by auto"], ["proof (state)\nthis:\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with 1 2"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  Max S_Min_Lt < Min S_Max_Lt", "have \"?l < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  Max S_Min_Lt < Min S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (2 subgoals):\n 1. S_Max_Lt = {} \\<Longrightarrow> False\n 2. S_Max_Lt \\<noteq> {} \\<Longrightarrow> False", "with \\<open>\\<not> ?l < ?r\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  S_Max_Lt = {}\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "with 1 2"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  S_Max_Lt = {}", "have \"?l < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt) =\n  Max S_Min_Lt\n  Max S_Min_Lt < Min S_Max_Le\n  S_Max_Lt = {}\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. S_Max_Lt = {} \\<Longrightarrow> False", "with \\<open>\\<not> ?l < ?r\\<close>"], ["proof (chain)\npicking this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "show False"], ["proof (prove)\nusing this:\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max S_Min_Lt < Max S_Min_Le\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  x < Max S_Min_Le", "have \"x < max ?min_lt ?min_le\""], ["proof (prove)\nusing this:\n  x < Max S_Min_Le\n\ngoal (1 subgoal):\n 1. x < max (Max S_Min_Lt) (Max S_Min_Le)", "by (simp add: max.strict_coboundedI2)"], ["proof (state)\nthis:\n  x < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14 < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "note 2 = this"], ["proof (state)\nthis:\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14 < max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (2 subgoals):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis\n 2. \\<not> (if S_Min_Le \\<noteq> {}\n            then if S_Min_Lt \\<noteq> {}\n                 then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n            else Max S_Min_Lt)\n           < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using F False 1 2 3 4 5 6 * **"], ["proof (prove)\nusing this:\n  \\<not> (S_Min_Le = {} \\<and> S_Min_Lt = {})\n  \\<not> (if S_Min_Le \\<noteq> {}\n          then if S_Min_Lt \\<noteq> {}\n               then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n          else Max S_Min_Lt)\n         < (if S_Max_Le \\<noteq> {}\n            then if S_Max_Lt \\<noteq> {}\n                 then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n            else Min S_Max_Lt)\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x12 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow> ?x12 \\<le> Max S_Min_Le\n  ?x14 \\<in> S_Min_Lt \\<Longrightarrow>\n  ?x14 < max (Max S_Min_Lt) (Max S_Min_Le)\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt \\<le> ?x14\n  \\<lbrakk>?x14 \\<in> S_Max_Le; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le \\<le> ?x14\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Lt\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Lt < ?x14\n  \\<lbrakk>?x14 \\<in> S_Max_Lt; ?y14 \\<in> S_Min_Le\\<rbrakk>\n  \\<Longrightarrow> Max S_Min_Le < ?x14\n  S_Max_Le \\<noteq> {}\n  S_Min_Le \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by ((intro m[of ?l]), auto)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "case True"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)", "obtain d where d: \"?l < d\" \"d < ?r\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>(if S_Min_Le \\<noteq> {}\n                  then if S_Min_Lt \\<noteq> {}\n                       then max (Max S_Min_Lt) (Max S_Min_Le)\n                       else Max S_Min_Le\n                  else Max S_Min_Lt)\n                 < d;\n         d < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using dense"], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n  ?x < ?y \\<Longrightarrow> \\<exists>z>?x. z < ?y\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>(if S_Min_Le \\<noteq> {}\n                  then if S_Min_Lt \\<noteq> {}\n                       then max (Max S_Min_Lt) (Max S_Min_Le)\n                       else Max S_Min_Le\n                  else Max S_Min_Lt)\n                 < d;\n         d < (if S_Max_Le \\<noteq> {}\n              then if S_Max_Lt \\<noteq> {}\n                   then min (Min S_Max_Lt) (Min S_Max_Le) else Min S_Max_Le\n              else Min S_Max_Lt)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "let ?d' = \"d\""], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume \"t \\<in> S_Min_Le\""], ["proof (state)\nthis:\n  t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Le", "have \"t \\<le> ?l\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Le\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow>\n  ?x12 \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  ?x12 \\<in> S_Min_Le \\<Longrightarrow> ?x12 \\<le> Max S_Min_Le\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "by auto"], ["proof (state)\nthis:\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)", "have \"t \\<le> d\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. t \\<le> d", "by auto"], ["proof (state)\nthis:\n  t \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Le \\<Longrightarrow> ?t14 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Le \\<Longrightarrow> ?t14 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Le \\<Longrightarrow> ?t14 \\<le> d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Min_Lt\""], ["proof (state)\nthis:\n  t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Lt", "have \"t \\<le> max ?min_lt ?min_le\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "using fin_min_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "by (simp add: max.coboundedI1)"], ["proof (state)\nthis:\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with t"], ["proof (chain)\npicking this:\n  t \\<in> S_Min_Lt\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)", "have \"t \\<le> ?l\""], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "using fin_min_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Min_Lt\n  t \\<le> max (Max S_Min_Lt) (Max S_Min_Le)\n  finite S_Min_Lt\n\ngoal (1 subgoal):\n 1. t \\<le> (if S_Min_Le \\<noteq> {}\n             then if S_Min_Lt \\<noteq> {}\n                  then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n             else Max S_Min_Lt)", "by auto"], ["proof (state)\nthis:\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)", "have \"t < d\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  t \\<le> (if S_Min_Le \\<noteq> {}\n           then if S_Min_Lt \\<noteq> {}\n                then max (Max S_Min_Lt) (Max S_Min_Le) else Max S_Min_Le\n           else Max S_Min_Lt)\n\ngoal (1 subgoal):\n 1. t < d", "by auto"], ["proof (state)\nthis:\n  t < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Lt \\<Longrightarrow> ?t14 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Lt \\<Longrightarrow> ?t14 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Min_Lt \\<Longrightarrow> ?t14 < d\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Max_Le\""], ["proof (state)\nthis:\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Max_Le", "have \"min ?max_lt ?max_le \\<le> t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "using fin_max_le"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n  finite S_Max_Le\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "by (simp add: min.coboundedI2)"], ["proof (state)\nthis:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "have \"?r \\<le> t\""], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "using fin_max_le t"], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n  finite S_Max_Le\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "by auto"], ["proof (state)\nthis:\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t", "have \"d \\<le> t\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. d \\<le> t", "by auto"], ["proof (state)\nthis:\n  d \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d \\<le> t", "have \"d \\<le> t\""], ["proof (prove)\nusing this:\n  d \\<le> t\n\ngoal (1 subgoal):\n 1. d \\<le> t", "by (simp add: min.coboundedI2)"], ["proof (state)\nthis:\n  d \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Max_Le \\<Longrightarrow> d \\<le> ?t14\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Max_Le \\<Longrightarrow> d \\<le> ?t14\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Max_Le \\<Longrightarrow> d \\<le> ?t14\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "assume t: \"t \\<in> S_Max_Lt\""], ["proof (state)\nthis:\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  t \\<in> S_Max_Lt", "have \"min ?max_lt ?max_le \\<le> t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "using fin_max_lt"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n  finite S_Max_Lt\n\ngoal (1 subgoal):\n 1. min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "by (simp add: min.coboundedI1)"], ["proof (state)\nthis:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t", "have \"?r \\<le> t\""], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "using fin_max_lt t"], ["proof (prove)\nusing this:\n  min (Min S_Max_Lt) (Min S_Max_Le) \\<le> t\n  finite S_Max_Lt\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. (if S_Max_Le \\<noteq> {}\n     then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n          else Min S_Max_Le\n     else Min S_Max_Lt)\n    \\<le> t", "by auto"], ["proof (state)\nthis:\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "with d"], ["proof (chain)\npicking this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t", "have \"d < t\""], ["proof (prove)\nusing this:\n  (if S_Min_Le \\<noteq> {}\n   then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n        else Max S_Min_Le\n   else Max S_Min_Lt)\n  < d\n  d < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt)\n  (if S_Max_Le \\<noteq> {}\n   then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n        else Min S_Max_Le\n   else Min S_Max_Lt)\n  \\<le> t\n\ngoal (1 subgoal):\n 1. d < t", "by auto"], ["proof (state)\nthis:\n  d < t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d < t", "have \"d < t\""], ["proof (prove)\nusing this:\n  d < t\n\ngoal (1 subgoal):\n 1. d < t", "by (simp add: min.strict_coboundedI2)"], ["proof (state)\nthis:\n  d < t\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?t14 \\<in> S_Max_Lt \\<Longrightarrow> d < ?t14\n\ngoal (1 subgoal):\n 1. (if S_Min_Le \\<noteq> {}\n     then if S_Min_Lt \\<noteq> {} then max (Max S_Min_Lt) (Max S_Min_Le)\n          else Max S_Min_Le\n     else Max S_Min_Lt)\n    < (if S_Max_Le \\<noteq> {}\n       then if S_Max_Lt \\<noteq> {} then min (Min S_Max_Lt) (Min S_Max_Le)\n            else Min S_Max_Le\n       else Min S_Max_Lt) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ?t14 \\<in> S_Min_Le \\<Longrightarrow> ?t14 \\<le> d\n  ?t14 \\<in> S_Min_Lt \\<Longrightarrow> ?t14 < d\n  ?t14 \\<in> S_Max_Le \\<Longrightarrow> d \\<le> ?t14\n  ?t14 \\<in> S_Max_Lt \\<Longrightarrow> d < ?t14", "show thesis"], ["proof (prove)\nusing this:\n  ?t14 \\<in> S_Min_Le \\<Longrightarrow> ?t14 \\<le> d\n  ?t14 \\<in> S_Min_Lt \\<Longrightarrow> ?t14 < d\n  ?t14 \\<in> S_Max_Le \\<Longrightarrow> d \\<le> ?t14\n  ?t14 \\<in> S_Max_Lt \\<Longrightarrow> d < ?t14\n\ngoal (1 subgoal):\n 1. thesis", "by ((intro m[of ?d']), auto)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"DBM_val_bounded v (u(c := d')) M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M", "unfolding DBM_val_bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0 \\<and>\n    (\\<forall>ca.\n        v ca \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca)) \\<and>\n        dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)) \\<and>\n    (\\<forall>c1 c2.\n        v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n        dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2)))", "proof (auto, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. Le (0::'b) \\<preceq> M 0 0\n 2. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca))\n 3. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. Le (0::'b) \\<preceq> M 0 0\n 2. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca))\n 3. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y", "show ?case"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0", "unfolding DBM_reset_def DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> M 0 0", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> M 0 0\n\ngoal (3 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca))\n 2. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca))\n 2. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (2 c')"], ["proof (state)\nthis:\n  v c' \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some ca) (M 0 (v ca))\n 2. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "proof (cases \"c = c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "with A(2,7)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c'", "have \"v c \\<noteq> v c'\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. v c \\<noteq> v c'", "by auto"], ["proof (state)\nthis:\n  v c \\<noteq> v c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "hence *:\"M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\""], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "using A(2,3,6,7) 2"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))", "by auto"], ["proof (state)\nthis:\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "from 2 A(2,4)"], ["proof (chain)\npicking this:\n  v c' \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "have \"dbm_entry_val u None (Some c') (M' 0 (v c'))\""], ["proof (prove)\nusing this:\n  v c' \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c' \\<le> n\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M' 0 (v c'))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "with dbm_entry_dbm_min2 *"], ["proof (chain)\npicking this:\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?b\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))", "have \"dbm_entry_val u None (Some c') (M 0 (v c'))\""], ["proof (prove)\nusing this:\n  dbm_entry_val ?u None (Some ?c) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u None (Some ?c) ?b\n  M' 0 (v c') = min (dbm_add (M 0 (v c)) (M (v c) (v c'))) (M 0 (v c'))\n  dbm_entry_val u None (Some c') (M' 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c') (M 0 (v c'))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c') (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c') (M 0 (v c'))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "using False"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c') (M 0 (v c'))\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "by cases auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "case True"], ["proof (state)\nthis:\n  c = c'\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))", "proof (simp add: True[symmetric], cases \"M 0 (v c)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M 0 (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "case (1 t)"], ["proof (state)\nthis:\n  M 0 (v c) = Le t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M 0 (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "hence \"-t \\<in> S_Min_Le\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Le t\n\ngoal (1 subgoal):\n 1. - t \\<in> S_Min_Le", "unfolding S_Min_Le"], ["proof (prove)\nusing this:\n  M 0 (v c) = Le t\n\ngoal (1 subgoal):\n 1. - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n          {- d |d. M 0 (v c) = Le d}", "by force"], ["proof (state)\nthis:\n  - t \\<in> S_Min_Le\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M 0 (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "hence \"d' \\<ge> -t\""], ["proof (prove)\nusing this:\n  - t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. - t \\<le> d'", "using d'"], ["proof (prove)\nusing this:\n  - t \\<in> S_Min_Le\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. - t \\<le> d'", "by auto"], ["proof (state)\nthis:\n  - t \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M 0 (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 3. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - t \\<le> d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "using 1"], ["proof (prove)\nusing this:\n  - t \\<le> d'\n  M 0 (v c) = Le t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "by (auto simp: minus_le_iff)"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "case (2 t)"], ["proof (state)\nthis:\n  M 0 (v c) = Lt t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "hence \"-t \\<in> S_Min_Lt\""], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt t\n\ngoal (1 subgoal):\n 1. - t \\<in> S_Min_Lt", "unfolding S_Min_Lt"], ["proof (prove)\nusing this:\n  M 0 (v c) = Lt t\n\ngoal (1 subgoal):\n 1. - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n          {- d |d. M 0 (v c) = Lt d}", "by force"], ["proof (state)\nthis:\n  - t \\<in> S_Min_Lt\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "hence \"d' > -t\""], ["proof (prove)\nusing this:\n  - t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. - t < d'", "using d'"], ["proof (prove)\nusing this:\n  - t \\<in> S_Min_Lt\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. - t < d'", "by auto"], ["proof (state)\nthis:\n  - t < d'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M 0 (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n 2. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  - t < d'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "using 2"], ["proof (prove)\nusing this:\n  - t < d'\n  M 0 (v c) = Lt t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "by (auto simp: minus_less_iff)"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n\ngoal (1 subgoal):\n 1. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "case 3"], ["proof (state)\nthis:\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. M 0 (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  M 0 (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c) (M 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) None (Some c') (M 0 (v c'))\n\ngoal (2 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (3 c')"], ["proof (state)\nthis:\n  v c' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>ca.\n       v ca \\<le> n \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some ca) None (M (v ca) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "proof (cases \"c = c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "with A(2,7)"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c'", "have \"v c \\<noteq> v c'\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. v c \\<noteq> v c'", "by auto"], ["proof (state)\nthis:\n  v c \\<noteq> v c'\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "hence *:\"M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\""], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "using A(2,3,6,7) 3"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c'\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c' \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)", "by auto"], ["proof (state)\nthis:\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "from 3 A(2,4)"], ["proof (chain)\npicking this:\n  v c' \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "have \"dbm_entry_val u (Some c') None (M' (v c') 0)\""], ["proof (prove)\nusing this:\n  v c' \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c' \\<le> n\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M' (v c') 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "with dbm_entry_dbm_min3 *"], ["proof (chain)\npicking this:\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?b\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)", "have \"dbm_entry_val u (Some c') None (M (v c') 0)\""], ["proof (prove)\nusing this:\n  dbm_entry_val ?u (Some ?c) None (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c) None ?b\n  M' (v c') 0 = min (dbm_add (M (v c') (v c)) (M (v c) 0)) (M (v c') 0)\n  dbm_entry_val u (Some c') None (M' (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c') None (M (v c') 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c') None (M (v c') 0)\n\ngoal (2 subgoals):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n 2. c \\<noteq> c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (M (v c') 0)\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "using False"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c') None (M (v c') 0)\n  c \\<noteq> c'\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "by cases auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "case True"], ["proof (state)\nthis:\n  c = c'\n\ngoal (1 subgoal):\n 1. c = c' \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)", "proof (simp add: True[symmetric], cases \"M (v c) 0\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) 0 = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "case (1 t)"], ["proof (state)\nthis:\n  M (v c) 0 = Le t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) 0 = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "hence \"t \\<in> S_Max_Le\""], ["proof (prove)\nusing this:\n  M (v c) 0 = Le t\n\ngoal (1 subgoal):\n 1. t \\<in> S_Max_Le", "unfolding S_Max_Le"], ["proof (prove)\nusing this:\n  M (v c) 0 = Le t\n\ngoal (1 subgoal):\n 1. t \\<in> {u c' + d |c' d.\n             0 < v c' \\<and>\n             v c' \\<le> n \\<and>\n             c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n            {d |d. M (v c) 0 = Le d}", "by force"], ["proof (state)\nthis:\n  t \\<in> S_Max_Le\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) 0 = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "hence \"d' \\<le> t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. d' \\<le> t", "using d'"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Le\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. d' \\<le> t", "by auto"], ["proof (state)\nthis:\n  d' \\<le> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) 0 = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 3. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  d' \\<le> t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "using 1"], ["proof (prove)\nusing this:\n  d' \\<le> t\n  M (v c) 0 = Le t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "by (auto simp: minus_le_iff)"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "case (2 t)"], ["proof (state)\nthis:\n  M (v c) 0 = Lt t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "hence \"t \\<in> S_Max_Lt\""], ["proof (prove)\nusing this:\n  M (v c) 0 = Lt t\n\ngoal (1 subgoal):\n 1. t \\<in> S_Max_Lt", "unfolding S_Max_Lt"], ["proof (prove)\nusing this:\n  M (v c) 0 = Lt t\n\ngoal (1 subgoal):\n 1. t \\<in> {u c' + d |c' d.\n             0 < v c' \\<and>\n             v c' \\<le> n \\<and>\n             c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n            {d |d. M (v c) 0 = Lt d}", "by force"], ["proof (state)\nthis:\n  t \\<in> S_Max_Lt\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "hence \"d' < t\""], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. d' < t", "using d'"], ["proof (prove)\nusing this:\n  t \\<in> S_Max_Lt\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. d' < t", "by auto"], ["proof (state)\nthis:\n  d' < t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) 0 = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n 2. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  d' < t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "using 2"], ["proof (prove)\nusing this:\n  d' < t\n  M (v c) 0 = Lt t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "by (auto simp: minus_less_iff)"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "case 3"], ["proof (state)\nthis:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) 0 = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c) None (M (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c') None (M (v c') 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "case (4 c1 c2)"], ["proof (state)\nthis:\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c := d')) (Some c1) (Some c2)\n                          (M (v c1) (v c2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (cases \"c = c1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c1\n\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "note F1 = this"], ["proof (state)\nthis:\n  c \\<noteq> c1\n\ngoal (2 subgoals):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (cases \"c = c2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c2\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "with A(2,6,7) F1"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c1\n  c \\<noteq> c2", "have \"v c \\<noteq> v c1\" \"v c \\<noteq> v c2\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. v c \\<noteq> v c1 &&& v c \\<noteq> v c2", "by auto"], ["proof (state)\nthis:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence *:\"M' (v c1) (v c2) = min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "using A(2,3,6,7) 4"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<noteq> v c1\n  v c \\<noteq> v c2\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. M' (v c1) (v c2) =\n    min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "from 4 A(2,4)"], ["proof (chain)\npicking this:\n  v c1 \\<le> n\n  v c2 \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'", "have \"dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  v c1 \\<le> n\n  v c2 \\<le> n\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  v c1 \\<le> n\n  v c2 \\<le> n\n  v c \\<le> n\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "with dbm_entry_dbm_min *"], ["proof (chain)\npicking this:\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?b\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))", "have \"dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) (min ?a ?b) \\<Longrightarrow>\n  dbm_entry_val ?u (Some ?c1.0) (Some ?c2.0) ?b\n  M' (v c1) (v c2) =\n  min (dbm_add (M (v c1) (v c)) (M (v c) (v c2))) (M (v c1) (v c2))\n  dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "using F1 False"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  c \\<noteq> c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "by cases auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c2\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (simp add: True[symmetric], cases \"M (v c1) (v c)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "case (1 t)"], ["proof (state)\nthis:\n  M (v c1) (v c) = Le t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"u c1 - t \\<in> S_Min_Le\""], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Le t\n\ngoal (1 subgoal):\n 1. u c1 - t \\<in> S_Min_Le", "unfolding S_Min_Le"], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Le t\n\ngoal (1 subgoal):\n 1. u c1 - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n          {- d |d. M 0 (v c) = Le d}", "using A F1 4"], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Le t\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  c \\<noteq> c1\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. u c1 - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Le d} \\<union>\n          {- d |d. M 0 (v c) = Le d}", "by blast"], ["proof (state)\nthis:\n  u c1 - t \\<in> S_Min_Le\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"d' \\<ge> u c1 - t\""], ["proof (prove)\nusing this:\n  u c1 - t \\<in> S_Min_Le\n\ngoal (1 subgoal):\n 1. u c1 - t \\<le> d'", "using d'"], ["proof (prove)\nusing this:\n  u c1 - t \\<in> S_Min_Le\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. u c1 - t \\<le> d'", "by auto"], ["proof (state)\nthis:\n  u c1 - t \\<le> d'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"t + d' \\<ge> u c1\""], ["proof (prove)\nusing this:\n  u c1 - t \\<le> d'\n\ngoal (1 subgoal):\n 1. u c1 \\<le> t + d'", "by (metis le_swap add_le_cancel_right diff_add_cancel)"], ["proof (state)\nthis:\n  u c1 \\<le> t + d'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"u c1 - d' \\<le> t\""], ["proof (prove)\nusing this:\n  u c1 \\<le> t + d'\n\ngoal (1 subgoal):\n 1. u c1 - d' \\<le> t", "by (metis add_le_imp_le_right diff_add_cancel)"], ["proof (state)\nthis:\n  u c1 - d' \\<le> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c1) (v c) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 3. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - d' \\<le> t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "using 1 F1"], ["proof (prove)\nusing this:\n  u c1 - d' \\<le> t\n  M (v c1) (v c) = Le t\n  c \\<noteq> c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "case (2 t)"], ["proof (state)\nthis:\n  M (v c1) (v c) = Lt t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"u c1 - t \\<in> S_Min_Lt\""], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Lt t\n\ngoal (1 subgoal):\n 1. u c1 - t \\<in> S_Min_Lt", "unfolding S_Min_Lt"], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Lt t\n\ngoal (1 subgoal):\n 1. u c1 - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n          {- d |d. M 0 (v c) = Lt d}", "using A 4 F1"], ["proof (prove)\nusing this:\n  M (v c1) (v c) = Lt t\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c1\n\ngoal (1 subgoal):\n 1. u c1 - t\n    \\<in> {u c' - d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c') (v c) = Lt d} \\<union>\n          {- d |d. M 0 (v c) = Lt d}", "by blast"], ["proof (state)\nthis:\n  u c1 - t \\<in> S_Min_Lt\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"d' > u c1 - t\""], ["proof (prove)\nusing this:\n  u c1 - t \\<in> S_Min_Lt\n\ngoal (1 subgoal):\n 1. u c1 - t < d'", "using d'"], ["proof (prove)\nusing this:\n  u c1 - t \\<in> S_Min_Lt\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. u c1 - t < d'", "by auto"], ["proof (state)\nthis:\n  u c1 - t < d'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"d' + t > u c1\""], ["proof (prove)\nusing this:\n  u c1 - t < d'\n\ngoal (1 subgoal):\n 1. u c1 < d' + t", "by (metis add_strict_right_mono diff_add_cancel)"], ["proof (state)\nthis:\n  u c1 < d' + t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "hence \"u c1 - d' < t\""], ["proof (prove)\nusing this:\n  u c1 < d' + t\n\ngoal (1 subgoal):\n 1. u c1 - d' < t", "by (metis gt_swap add_less_cancel_right diff_add_cancel)"], ["proof (state)\nthis:\n  u c1 - d' < t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c1) (v c) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n 2. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  u c1 - d' < t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "using 2 F1"], ["proof (prove)\nusing this:\n  u c1 - d' < t\n  M (v c1) (v c) = Lt t\n  c \\<noteq> c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n\ngoal (1 subgoal):\n 1. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "case 3"], ["proof (state)\nthis:\n  M (v c1) (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c1) (v c) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c1) (v c) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c) (M (v c1) (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c1\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "note T = this"], ["proof (state)\nthis:\n  c = c1\n\ngoal (1 subgoal):\n 1. c = c1 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (cases \"c = c2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  c \\<noteq> c2\n\ngoal (2 subgoals):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. c \\<noteq> c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (cases \"M (v c) (v c2)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) (v c2) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case (1 t)"], ["proof (state)\nthis:\n  M (v c) (v c2) = Le t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) (v c2) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"u c2 + t \\<in> S_Max_Le\""], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Le t\n\ngoal (1 subgoal):\n 1. u c2 + t \\<in> S_Max_Le", "unfolding S_Max_Le"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Le t\n\ngoal (1 subgoal):\n 1. u c2 + t\n    \\<in> {u c' + d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n          {d |d. M (v c) 0 = Le d}", "using A 4 False"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Le t\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. u c2 + t\n    \\<in> {u c' + d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c) (v c') = Le d} \\<union>\n          {d |d. M (v c) 0 = Le d}", "by blast"], ["proof (state)\nthis:\n  u c2 + t \\<in> S_Max_Le\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) (v c2) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"d' \\<le> u c2 + t\""], ["proof (prove)\nusing this:\n  u c2 + t \\<in> S_Max_Le\n\ngoal (1 subgoal):\n 1. d' \\<le> u c2 + t", "using d'"], ["proof (prove)\nusing this:\n  u c2 + t \\<in> S_Max_Le\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. d' \\<le> u c2 + t", "by auto"], ["proof (state)\nthis:\n  d' \\<le> u c2 + t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) (v c2) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"d' - u c2 \\<le> t\""], ["proof (prove)\nusing this:\n  d' \\<le> u c2 + t\n\ngoal (1 subgoal):\n 1. d' - u c2 \\<le> t", "by (metis (hide_lams, no_types) add_diff_cancel_left add_ac(1) add_le_cancel_right\n              add_right_cancel diff_add_cancel)"], ["proof (state)\nthis:\n  d' - u c2 \\<le> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       M (v c) (v c2) = Le x1 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 3. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  d' - u c2 \\<le> t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "using 1 T False"], ["proof (prove)\nusing this:\n  d' - u c2 \\<le> t\n  M (v c) (v c2) = Le t\n  c = c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case (2 t)"], ["proof (state)\nthis:\n  M (v c) (v c2) = Lt t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"u c2 + t \\<in> S_Max_Lt\""], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Lt t\n\ngoal (1 subgoal):\n 1. u c2 + t \\<in> S_Max_Lt", "unfolding S_Max_Lt"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Lt t\n\ngoal (1 subgoal):\n 1. u c2 + t\n    \\<in> {u c' + d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n          {d |d. M (v c) 0 = Lt d}", "using A 4 False"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = Lt t\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. u c2 + t\n    \\<in> {u c' + d |c' d.\n           0 < v c' \\<and>\n           v c' \\<le> n \\<and>\n           c \\<noteq> c' \\<and> M (v c) (v c') = Lt d} \\<union>\n          {d |d. M (v c) 0 = Lt d}", "by blast"], ["proof (state)\nthis:\n  u c2 + t \\<in> S_Max_Lt\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"d' < u c2 + t\""], ["proof (prove)\nusing this:\n  u c2 + t \\<in> S_Max_Lt\n\ngoal (1 subgoal):\n 1. d' < u c2 + t", "using d'"], ["proof (prove)\nusing this:\n  u c2 + t \\<in> S_Max_Lt\n  \\<forall>t\\<in>S_Min_Le. t \\<le> d'\n  \\<forall>t\\<in>S_Min_Lt. t < d'\n  \\<forall>t\\<in>S_Max_Le. d' \\<le> t\n  \\<forall>t\\<in>S_Max_Lt. d' < t\n\ngoal (1 subgoal):\n 1. d' < u c2 + t", "by auto"], ["proof (state)\nthis:\n  d' < u c2 + t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "hence \"d' - u c2 < t\""], ["proof (prove)\nusing this:\n  d' < u c2 + t\n\ngoal (1 subgoal):\n 1. d' - u c2 < t", "by (metis gt_swap add_less_cancel_right diff_add_cancel)"], ["proof (state)\nthis:\n  d' - u c2 < t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       M (v c) (v c2) = Lt x2 \\<Longrightarrow>\n       dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n 2. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  d' - u c2 < t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "using 2 T False"], ["proof (prove)\nusing this:\n  d' - u c2 < t\n  M (v c) (v c2) = Lt t\n  c = c1\n  c \\<noteq> c2\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "by force"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case 3"], ["proof (state)\nthis:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. M (v c) (v c2) = \\<infinity> \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "thus ?case"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "using T"], ["proof (prove)\nusing this:\n  M (v c) (v c2) = \\<infinity>\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  c = c2\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "from A 4"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n", "have *:\"dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\""], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))", "unfolding DBM_val_bounded_def"], ["proof (prove)\nusing this:\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>ca.\n      v ca \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) None (Some ca) (M 0 (v ca)) \\<and>\n      dbm_entry_val (u(c := ?d')) (Some ca) None (M (v ca) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val (u(c := ?d')) (Some c1) (Some c2)\n       (M (v c1) (v c2))) \\<Longrightarrow>\n  thesis\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n  Le (0::'b) \\<preceq> M 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' None (Some c) (M 0 (v c)) \\<and>\n      dbm_entry_val u'' (Some c) None (M (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u'' (Some c1) (Some c2) (M (v c1) (v c2)))\n  \\<forall>c. 0 < v c\n  \\<forall>x y.\n     v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow> x = y\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\n\ngoal (1 subgoal):\n 1. c = c2 \\<Longrightarrow>\n    dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "using True T"], ["proof (prove)\nusing this:\n  c = c2\n  c = c1\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))", "proof (simp add: True T, cases \"M (v c1) (v c1)\", goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 3. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "case (1 t)"], ["proof (state)\nthis:\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Le t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 3. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Le t", "have \"0 \\<le> t\""], ["proof (prove)\nusing this:\n  dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Le t\n\ngoal (1 subgoal):\n 1. (0::'b) \\<le> t", "by auto"], ["proof (state)\nthis:\n  (0::'b) \\<le> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Le x1\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 3. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "thus ?case"], ["proof (prove)\nusing this:\n  (0::'b) \\<le> t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))", "using 1"], ["proof (prove)\nusing this:\n  (0::'b) \\<le> t\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Le t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "case (2 t)"], ["proof (state)\nthis:\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Lt t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "with *"], ["proof (chain)\npicking this:\n  dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Lt t", "have \"0 < t\""], ["proof (prove)\nusing this:\n  dbm_entry_val u'' (Some c1) (Some c1) (M (v c1) (v c1))\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Lt t\n\ngoal (1 subgoal):\n 1. (0::'b) < t", "by auto"], ["proof (state)\nthis:\n  (0::'b) < t\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = Lt x2\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                          (M (v c1) (v c1))\n 2. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "thus ?case"], ["proof (prove)\nusing this:\n  (0::'b) < t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))", "using 2"], ["proof (prove)\nusing this:\n  (0::'b) < t\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = Lt t\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "case 3"], ["proof (state)\nthis:\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 = c1; c = c2; c = c1; M (v c1) (v c1) = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val (u(c1 := d')) (Some c1) (Some c1)\n                       (M (v c1) (v c1))", "thus ?case"], ["proof (prove)\nusing this:\n  c2 = c1\n  c = c2\n  c = c1\n  M (v c1) (v c1) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val (u(c1 := d')) (Some c1) (Some c1) (M (v c1) (v c1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val (u(c := d')) (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n                thesis;\n     v c \\<le> n; DBM_reset M n (v c) d M';\n     u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n     u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M; \\<forall>c. 0 < v c;\n     \\<forall>x y.\n        v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n        x = y\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. thesis", "using A(1)"], ["proof (prove)\nusing this:\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_sound2:\n  assumes \"v c \\<le> n\" \"DBM_reset M n (v c) d M'\" \"DBM_val_bounded v u M' n\"\n  shows \"u c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u c = d", "using assms"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  DBM_reset M n (v c) d M'\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n\ngoal (1 subgoal):\n 1. u c = d", "unfolding DBM_val_bounded_def DBM_reset_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      M' (v c) j = \\<infinity> \\<and> M' j (v c) = \\<infinity>) \\<and>\n  M' (v c) 0 = Le d \\<and>\n  M' 0 (v c) = Le (- d) \\<and>\n  M' (v c) (v c) = M (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         M' i j = min (dbm_add (M i (v c)) (M (v c) j)) (M i j))\n  Le (0::'b) \\<preceq> M' 0 0 \\<and>\n  (\\<forall>c.\n      v c \\<le> n \\<longrightarrow>\n      dbm_entry_val u None (Some c) (M' 0 (v c)) \\<and>\n      dbm_entry_val u (Some c) None (M' (v c) 0)) \\<and>\n  (\\<forall>c1 c2.\n      v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n      dbm_entry_val u (Some c1) (Some c2) (M' (v c1) (v c2)))\n\ngoal (1 subgoal):\n 1. u c = d", "by fastforce"], ["", "lemma DBM_reset_sound'':\n  fixes M v c n d\n  defines \"M' \\<equiv> reset M n (v c) d\"\n  assumes \"clock_numbering' v n\" \"v c \\<le> n\" \"DBM_val_bounded v u M' n\"\n          \"DBM_val_bounded v u'' M n\"\n  obtains d' where  \"DBM_val_bounded v (u(c := d')) M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "assume A:\"\\<And>d'. DBM_val_bounded v (u(c := d')) M n \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms DBM_reset_reset[of \"v c\" n M d]"], ["proof (chain)\npicking this:\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<lbrakk>0 < v c; v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> DBM_reset M n (v c) d (reset M n (v c) d)", "have *:\"DBM_reset M n (v c) d M'\""], ["proof (prove)\nusing this:\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<lbrakk>0 < v c; v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> DBM_reset M n (v c) d (reset M n (v c) d)\n\ngoal (1 subgoal):\n 1. DBM_reset M n (v c) d M'", "by (auto simp add: M'_def)"], ["proof (state)\nthis:\n  DBM_reset M n (v c) d M'\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with DBM_reset_sound'[of v n c M d M', OF _ _ this] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>c.\n              0 < v c \\<and>\n              (\\<forall>x y.\n                  v x \\<le> n \\<and>\n                  v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                  x = y);\n   v c \\<le> n; ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n   ?u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<And>d'.\n      ?u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  DBM_reset M n (v c) d M'", "obtain d' where\n  \"DBM_val_bounded v (u(c := d')) M n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c.\n              0 < v c \\<and>\n              (\\<forall>x y.\n                  v x \\<le> n \\<and>\n                  v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                  x = y);\n   v c \\<le> n; ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M';\n   ?u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<And>d'.\n      ?u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M'\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  DBM_reset M n (v c) d M'\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with A"], ["proof (chain)\npicking this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show thesis"], ["proof (prove)\nusing this:\n  u(c := ?d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow> thesis\n  u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_sound:\n  fixes M v c n d\n  defines \"M' \\<equiv> reset M n (v c) d\"\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"v c \\<le> n\"\n          \"u \\<in> [M']\\<^bsub>v,n\\<^esub>\"\n  obtains d' where  \"u(c := d') \\<in>[M]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"[M]\\<^bsub>v,n\\<^esub> = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}", "obtain u' where \"DBM_val_bounded v u' M n\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        u' \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        u' \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "from DBM_reset_sound''[OF assms(3-4) _ this] assms(1,5) that"], ["proof (chain)\npicking this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c) ?d;\n   \\<And>d'.\n      ?u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  M' \\<equiv> reset M n (v c) d\n  u \\<in> [M']\\<^bsub>v,n\\<^esub>\n  u(c := ?d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c) ?d;\n   \\<And>d'.\n      ?u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  M' \\<equiv> reset M n (v c) d\n  u \\<in> [M']\\<^bsub>v,n\\<^esub>\n  u(c := ?d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c) ?d;\n   \\<And>d'.\n      ?u(c := d') \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  M' \\<equiv> reset M n (v c) d\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'}\n  u(c := ?d')\n  \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>d'.\n                u(c := d') \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n                thesis;\n     [M]\\<^bsub>v,n\\<^esub> = {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "with DBM_reset_complete_empty'[OF assms(2) _ _ DBM_reset_reset, of \"v c\" M u d] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>c. 0 < v c; v c \\<le> n; 0 < v c; v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c)\n                        d\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<in> [M']\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c. 0 < v c; v c \\<le> n; 0 < v c; v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c)\n                        d\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<in> [M']\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. thesis", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>c. 0 < v c; v c \\<le> n; 0 < v c; v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset M n (v c)\n                        d\n  M' \\<equiv> reset M n (v c) d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  v c \\<le> n\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M'}\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_complete':\n  assumes \"DBM_val_bounded v u M n\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"\\<exists> u'. DBM_val_bounded v u' (reset' M n cs v d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u'.\n                         u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v\n                       d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u'.\n                         u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v\n                       d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d", "by auto"], ["proof (state)\nthis:\n  \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u'.\n                       u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "let ?M' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "let ?M'' = \"reset ?M' n (v c) d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "from Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u'.\n                       u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "obtain u' where u': \"DBM_val_bounded v u' ?M' n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u'.\n                       u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n      d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "from Cons(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"0 < v c\" \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < v c &&& v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  0 < v c\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "from DBM_reset_reset[OF this]"], ["proof (chain)\npicking this:\n  DBM_reset ?M n (v c) ?d (reset ?M n (v c) ?d)", "have **: \"DBM_reset ?M' n (v c) d ?M''\""], ["proof (prove)\nusing this:\n  DBM_reset ?M n (v c) ?d (reset ?M n (v c) ?d)\n\ngoal (1 subgoal):\n 1. DBM_reset (reset' M n cs v d) n (v c) d\n     (reset (reset' M n cs v d) n (v c) d)", "by fast"], ["proof (state)\nthis:\n  DBM_reset (reset' M n cs v d) n (v c) d\n   (reset (reset' M n cs v d) n (v c) d)\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "from Cons(4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "from DBM_reset_complete[of v n c ?M' d ?M'', OF Cons(3) this ** u']"], ["proof (chain)\npicking this:\n  u'(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n\n        (v c) d", "have \"DBM_val_bounded v (u'(c := d)) (reset (reset' M n cs v d) n (v c) d) n\""], ["proof (prove)\nusing this:\n  u'(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n\n        (v c) d\n\ngoal (1 subgoal):\n 1. u'(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n\n          (v c) d", "by fast"], ["proof (state)\nthis:\n  u'(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n\n        (v c) d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u'.\n                                     u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u'.\n                            u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                          (a # cs) v d", "thus ?case"], ["proof (prove)\nusing this:\n  u'(c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n\n        (v c) d\n\ngoal (1 subgoal):\n 1. \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs) v d", "by auto"], ["proof (state)\nthis:\n  \\<exists>u'. u' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs) v d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_complete:\n  assumes \"DBM_val_bounded v u M n\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"DBM_val_bounded v ([cs \\<rightarrow> d]u) (reset' M n cs v d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "using assms"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> [[]\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                     M n [] v d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "case Nil"], ["proof (state)\nthis:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> [[]\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                     M n [] v d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. [[]\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d", "by auto"], ["proof (state)\nthis:\n  [[]\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "let ?M' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "let ?M'' = \"reset ?M' n (v c) d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "from Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have *: \"DBM_val_bounded v ([cs\\<rightarrow>d]u) (reset' M n cs v d) n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                   M n cs v d\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "by fastforce"], ["proof (state)\nthis:\n  [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "from Cons(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"0 < v c\" \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < v c &&& v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  0 < v c\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "from DBM_reset_reset[OF this]"], ["proof (chain)\npicking this:\n  DBM_reset ?M n (v c) ?d (reset ?M n (v c) ?d)", "have **: \"DBM_reset ?M' n (v c) d ?M''\""], ["proof (prove)\nusing this:\n  DBM_reset ?M n (v c) ?d (reset ?M n (v c) ?d)\n\ngoal (1 subgoal):\n 1. DBM_reset (reset' M n cs v d) n (v c) d\n     (reset (reset' M n cs v d) n (v c) d)", "by fast"], ["proof (state)\nthis:\n  DBM_reset (reset' M n cs v d) n (v c) d\n   (reset (reset' M n cs v d) n (v c) d)\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "from Cons(4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "from DBM_reset_complete[of v n c ?M' d ?M'', OF Cons(3) this ** *]"], ["proof (chain)\npicking this:\n  ([cs\\<rightarrow>d]u)\n  (c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c)\n      d", "have ***:\"DBM_val_bounded v ([c#cs\\<rightarrow>d]u) (reset (reset' M n cs v d) n (v c) d) n\""], ["proof (prove)\nusing this:\n  ([cs\\<rightarrow>d]u)\n  (c := d) \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c)\n      d\n\ngoal (1 subgoal):\n 1. [c #\n     cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                   (reset' M n cs v d) n (v c) d", "by simp"], ["proof (state)\nthis:\n  [c #\n   cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                 (reset' M n cs v d) n (v c) d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "have \"reset' M n (c#cs) v d = reset (reset' M n cs v d) n (v c) d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reset' M n (c # cs) v d = reset (reset' M n cs v d) n (v c) d", "by auto"], ["proof (state)\nthis:\n  reset' M n (c # cs) v d = reset (reset' M n cs v d) n (v c) d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> [cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n           M n cs v d;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> [a #\n                          cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n  M n (a # cs) v d", "with ***"], ["proof (chain)\npicking this:\n  [c #\n   cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                 (reset' M n cs v d) n (v c) d\n  reset' M n (c # cs) v d = reset (reset' M n cs v d) n (v c) d", "show ?case"], ["proof (prove)\nusing this:\n  [c #\n   cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                 (reset' M n cs v d) n (v c) d\n  reset' M n (c # cs) v d = reset (reset' M n cs v d) n (v c) d\n\ngoal (1 subgoal):\n 1. [c #\n     cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs)\n                   v d", "by presburger"], ["proof (state)\nthis:\n  [c #\n   cs\\<rightarrow>d]u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs) v\n                 d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_sound_empty:\n  assumes \"clock_numbering' v n\" \"\\<forall>c \\<in> set cs. v c \\<le> n\"\n          \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' M n cs v d) n\"\n  shows \"\\<not> DBM_val_bounded v u M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "using assms DBM_reset'_complete"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> ?M;\n   \\<forall>c.\n      0 < ?v c \\<and>\n      (\\<forall>x y.\n          ?v x \\<le> ?n \\<and>\n          ?v y \\<le> ?n \\<and> ?v x = ?v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set ?cs. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> [?cs\\<rightarrow>?d]?u \\<turnstile>\\<^bsub>?v,?n\\<^esub> reset'\n  ?M ?n ?cs ?v ?d\n\ngoal (1 subgoal):\n 1. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by metis"], ["", "fun set_clocks :: \"'c list \\<Rightarrow> 't::time list\\<Rightarrow> ('c,'t) cval \\<Rightarrow> ('c,'t) cval\"\nwhere\n  \"set_clocks [] _ u = u\" |\n  \"set_clocks _ [] u = u\" |\n  \"set_clocks (c#cs) (t#ts) u = (set_clocks cs ts (u(c:=t)))\""], ["", "lemma DBM_reset'_sound':\n  fixes M v c n d cs\n  assumes \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n          \"DBM_val_bounded v u (reset' M n cs v d) n\" \"DBM_val_bounded v u'' M n\"\n  shows \"\\<exists>ts. DBM_val_bounded v (set_clocks cs ts u) M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "proof (induction cs arbitrary: M u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>c.\n                   0 < v c \\<and>\n                   (\\<forall>x y.\n                       v x \\<le> n \\<and>\n                       v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                       x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks [] ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "case Nil"], ["proof (state)\nthis:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>c.\n                   0 < v c \\<and>\n                   (\\<forall>x y.\n                       v x \\<le> n \\<and>\n                       v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                       x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks [] ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "hence \"DBM_val_bounded v (set_clocks [] [] u) M n\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. set_clocks [] [] u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  set_clocks [] [] u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>c.\n                   0 < v c \\<and>\n                   (\\<forall>x y.\n                       v x \\<le> n \\<and>\n                       v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                       x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks [] ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "thus ?case"], ["proof (prove)\nusing this:\n  set_clocks [] [] u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks [] ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by blast"], ["proof (state)\nthis:\n  \\<exists>ts. set_clocks [] ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "case (Cons c' cs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>c.\n              0 < v c \\<and>\n              (\\<forall>x y.\n                  v x \\<le> n \\<and>\n                  v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                  x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   ?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v d;\n   u'' \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ts.\n                       set_clocks cs ts\n                        ?u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "let ?M' = \"reset' M n (c' # cs) v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "let ?M'' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "from DBM_reset'_complete[OF Cons(5) Cons(2)] Cons(3)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set ?cs. v c \\<le> n \\<Longrightarrow>\n  [?cs\\<rightarrow>?d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n ?cs v\n                     ?d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n", "have u'': \"DBM_val_bounded v ([cs\\<rightarrow>d]u'') ?M'' n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set ?cs. v c \\<le> n \\<Longrightarrow>\n  [?cs\\<rightarrow>?d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n ?cs v\n                     ?d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "by fastforce"], ["proof (state)\nthis:\n  [cs\\<rightarrow>d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "from Cons(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d", "have \"v c' \\<le> n\" \"DBM_val_bounded v u (reset ?M'' n (v c') d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. v c' \\<le> n &&&\n    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "by auto"], ["proof (state)\nthis:\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "from DBM_reset_sound''[OF Cons(2) this u'']"], ["proof (chain)\npicking this:\n  (\\<And>d'.\n      u(c' :=\n          d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n         d \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain d' where **:\"DBM_val_bounded v (u(c' := d')) ?M'' n\""], ["proof (prove)\nusing this:\n  (\\<And>d'.\n      u(c' :=\n          d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n         d \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c' :=\n            d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n           d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u(c' := d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "from Cons.IH[OF Cons.prems(1) _ ** Cons.prems(4)] Cons.prems(2)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<exists>ts.\n     set_clocks cs ts (u(c' := d')) \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n", "obtain ts where ts:\"DBM_val_bounded v (set_clocks cs ts (u(c' := d'))) M n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<exists>ts.\n     set_clocks cs ts (u(c' := d')) \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>ts.\n        set_clocks cs ts\n         (u(c' := d')) \\<turnstile>\\<^bsub>v,n\\<^esub> M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  set_clocks cs ts (u(c' := d')) \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "hence \"DBM_val_bounded v (set_clocks (c' # cs) (d'#ts) u) M n\""], ["proof (prove)\nusing this:\n  set_clocks cs ts (u(c' := d')) \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. set_clocks (c' # cs) (d' # ts) u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  set_clocks (c' # cs) (d' # ts) u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ts.\n  set_clocks cs ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ts.\n                            set_clocks (a # cs) ts\n                             u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "thus ?case"], ["proof (prove)\nusing this:\n  set_clocks (c' # cs) (d' # ts) u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks (c' # cs) ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by fast"], ["proof (state)\nthis:\n  \\<exists>ts. set_clocks (c' # cs) ts u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_resets:\n  fixes M v c n d cs\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n          \"DBM_val_bounded v u (reset' M n cs v d) n\"\n  shows \"\\<forall>c \\<in> set cs. u c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. u c = d", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. u c = d", "proof (induction cs arbitrary: M u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>k\\<le>n.\n                   0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set []. u c = d\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "case Nil"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>k\\<le>n.\n                   0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set []. u c = d\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set []. u c = d", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set []. u c = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "case (Cons c' cs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   ?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v d\\<rbrakk>\n  \\<Longrightarrow> \\<forall>c\\<in>set cs. ?u c = d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "let ?M' = \"reset' M n (c' # cs) v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "let ?M'' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons(4,5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d", "have \"v c' \\<le> n\" \"DBM_val_bounded v u (reset ?M'' n (v c') d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. v c' \\<le> n &&&\n    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "by auto"], ["proof (state)\nthis:\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from DBM_reset_sound2[OF this(1) _ Cons(5), of ?M'' d] DBM_reset_reset[OF _ this(1), of ?M'' d] Cons(3)"], ["proof (chain)\npicking this:\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset' M n (c' # cs) v d) \\<Longrightarrow>\n  u c' = d\n  0 < v c' \\<Longrightarrow>\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset (reset' M n cs v d) n (v c') d)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)", "have c':\"u c' = d\""], ["proof (prove)\nusing this:\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset' M n (c' # cs) v d) \\<Longrightarrow>\n  u c' = d\n  0 < v c' \\<Longrightarrow>\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset (reset' M n cs v d) n (v c') d)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (1 subgoal):\n 1. u c' = d", "by auto"], ["proof (state)\nthis:\n  u c' = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons(4,5)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d", "have \"v c' \\<le> n\" \"DBM_val_bounded v u (reset ?M'' n (v c') d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. v c' \\<le> n &&&\n    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "by auto"], ["proof (state)\nthis:\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "with DBM_reset_sound[OF Cons.prems(1,2) this(1)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?u \\<in> [reset ?M n (v c') ?d]\\<^bsub>v,n\\<^esub>;\n   \\<And>d'.\n      ?u(c' := d') \\<in> [?M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "obtain d' where **:\"DBM_val_bounded v (u(c' := d')) ?M'' n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<in> [reset ?M n (v c') ?d]\\<^bsub>v,n\\<^esub>;\n   \\<And>d'.\n      ?u(c' := d') \\<in> [?M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c' :=\n            d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n           d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset ?M n (v c')\n                     ?d};\n   \\<And>d'.\n      ?u(c' := d')\n      \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M} \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c' :=\n            d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n           d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u(c' := d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons.IH[OF Cons.prems(1,2) _ **] Cons.prems(3)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n", "have \"\\<forall>c\\<in>set cs. (u(c' := d')) c = d\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. (u(c' := d')) c = d", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>k\\<le>n.\n                               0 < k \\<longrightarrow>\n                               (\\<exists>c. v c = k);\n                    \\<forall>c.\n                       0 < v c \\<and>\n                       (\\<forall>x y.\n                           v x \\<le> n \\<and>\n                           v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                           x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n                 d\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (c' # cs). u c = d", "using c'"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  u c' = d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (c' # cs). u c = d", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs)\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "apply (rename_tac c)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs)\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "apply (case_tac \"c = c'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs); c = c'\\<rbrakk>\n       \\<Longrightarrow> u c = u c'\n 2. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs); c \\<noteq> c'\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set (c' # cs). u c = d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_resets':\n  fixes M v c n d cs\n  assumes \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"DBM_val_bounded v u (reset' M n cs v d) n\"\n          \"DBM_val_bounded v u'' M n\"\n  shows \"\\<forall>c \\<in> set cs. u c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. u c = d", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. u c = d", "proof (induction cs arbitrary: M u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>c.\n                   0 < v c \\<and>\n                   (\\<forall>x y.\n                       v x \\<le> n \\<and>\n                       v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                       x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set []. u c = d\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "case Nil"], ["proof (state)\nthis:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. \\<And>M u.\n       \\<lbrakk>\\<forall>c.\n                   0 < v c \\<and>\n                   (\\<forall>x y.\n                       v x \\<le> n \\<and>\n                       v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                       x = y);\n        \\<forall>c\\<in>set []. v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set []. u c = d\n 2. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set []. u c = d", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set []. u c = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "case (Cons c' cs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>c.\n              0 < v c \\<and>\n              (\\<forall>x y.\n                  v x \\<le> n \\<and>\n                  v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                  x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   ?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v d;\n   u'' \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> \\<forall>c\\<in>set cs. ?u c = d\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n  u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "let ?M' = \"reset' M n (c' # cs) v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "let ?M'' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from DBM_reset'_complete[OF Cons(5) Cons(2)] Cons(3)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set ?cs. v c \\<le> n \\<Longrightarrow>\n  [?cs\\<rightarrow>?d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n ?cs v\n                     ?d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n", "have u'': \"DBM_val_bounded v ([cs\\<rightarrow>d]u'') ?M'' n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set ?cs. v c \\<le> n \\<Longrightarrow>\n  [?cs\\<rightarrow>?d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n ?cs v\n                     ?d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "by fastforce"], ["proof (state)\nthis:\n  [cs\\<rightarrow>d]u'' \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d", "have \"v c' \\<le> n\" \"DBM_val_bounded v u (reset ?M'' n (v c') d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. v c' \\<le> n &&&\n    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "by auto"], ["proof (state)\nthis:\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from DBM_reset_sound2[OF this(1) _ Cons(4), of ?M'' d] DBM_reset_reset[OF _ this(1), of ?M'' d] Cons(2)"], ["proof (chain)\npicking this:\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset' M n (c' # cs) v d) \\<Longrightarrow>\n  u c' = d\n  0 < v c' \\<Longrightarrow>\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset (reset' M n cs v d) n (v c') d)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)", "have c':\"u c' = d\""], ["proof (prove)\nusing this:\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset' M n (c' # cs) v d) \\<Longrightarrow>\n  u c' = d\n  0 < v c' \\<Longrightarrow>\n  DBM_reset (reset' M n cs v d) n (v c') d\n   (reset (reset' M n cs v d) n (v c') d)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n\ngoal (1 subgoal):\n 1. u c' = d", "by auto"], ["proof (state)\nthis:\n  u c' = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d", "have \"v c' \\<le> n\" \"DBM_val_bounded v u (reset ?M'' n (v c') d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c' # cs) v d\n\ngoal (1 subgoal):\n 1. v c' \\<le> n &&&\n    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d", "by auto"], ["proof (state)\nthis:\n  v c' \\<le> n\n  u \\<turnstile>\\<^bsub>v,n\\<^esub> reset (reset' M n cs v d) n (v c') d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from DBM_reset_sound''[OF Cons(2) this u'']"], ["proof (chain)\npicking this:\n  (\\<And>d'.\n      u(c' :=\n          d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n         d \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain d' where **:\"DBM_val_bounded v (u(c' := d')) ?M'' n\""], ["proof (prove)\nusing this:\n  (\\<And>d'.\n      u(c' :=\n          d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n         d \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'.\n        u(c' :=\n            d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v\n           d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u(c' := d') \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "from Cons.IH[OF Cons.prems(1) _ ** Cons.prems(4)] Cons.prems(2)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n", "have \"\\<forall>c\\<in>set cs. (u(c' := d')) c = d\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  \\<forall>c\\<in>set (c' # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. (u(c' := d')) c = d", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n\ngoal (1 subgoal):\n 1. \\<And>a cs M u.\n       \\<lbrakk>\\<And>M u.\n                   \\<lbrakk>\\<forall>c.\n                               0 < v c \\<and>\n                               (\\<forall>x y.\n                                   v x \\<le> n \\<and>\n                                   v y \\<le> n \\<and>\n                                   v x = v y \\<longrightarrow>\n                                   x = y);\n                    \\<forall>c\\<in>set cs. v c \\<le> n;\n                    u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d;\n                    u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>c\\<in>set cs. u c = d;\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (a # cs) v d;\n        u'' \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c\\<in>set (a # cs). u c = d", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (c' # cs). u c = d", "using c'"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. (u(c' := d')) c = d\n  u c' = d\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (c' # cs). u c = d", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs)\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "apply (rename_tac c)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs)\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "apply (case_tac \"c = c'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs); c = c'\\<rbrakk>\n       \\<Longrightarrow> u c = u c'\n 2. \\<And>c.\n       \\<lbrakk>\\<forall>c\\<in>set cs. (u(c' := d')) c = u c'; d = u c';\n        c \\<in> set (c' # cs); c \\<noteq> c'\\<rbrakk>\n       \\<Longrightarrow> u c = u c'", "by auto"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set (c' # cs). u c = d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_neg_diag_preservation':\n  assumes \"k\\<le>n\" \"M k k < \\<one>\" \"clock_numbering v\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"reset' M n cs v d k k < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reset' M n cs v d k k < \\<one>", "using assms"], ["proof (prove)\nusing this:\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set cs. v c \\<le> n\n\ngoal (1 subgoal):\n 1. reset' M n cs v d k k < \\<one>", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> reset' M n [] v d k k < \\<one>\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "case Nil"], ["proof (state)\nthis:\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> reset' M n [] v d k k < \\<one>\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "thus ?case"], ["proof (prove)\nusing this:\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. reset' M n [] v d k k < \\<one>", "by auto"], ["proof (state)\nthis:\n  reset' M n [] v d k k < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> reset' M n cs v d k k < \\<one>\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> reset' M n cs v d k k < \\<one>\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have IH: \"reset' M n cs v d k k < \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> reset' M n cs v d k k < \\<one>\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. reset' M n cs v d k k < \\<one>", "by auto"], ["proof (state)\nthis:\n  reset' M n cs v d k k < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "from Cons.prems"], ["proof (chain)\npicking this:\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"v c > 0\" \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  M k k < \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < v c &&& v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  0 < v c\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "from DBM_reset_reset[OF this, of \"reset' M n cs v d\" d] \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  DBM_reset (reset' M n cs v d) n (v c) d\n   (reset (reset' M n cs v d) n (v c) d)\n  k \\<le> n", "have \"reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k\""], ["proof (prove)\nusing this:\n  DBM_reset (reset' M n cs v d) n (v c) d\n   (reset (reset' M n cs v d) n (v c) d)\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> v c \\<noteq> j \\<longrightarrow>\n      reset (reset' M n cs v d) n (v c) d (v c) j = \\<infinity> \\<and>\n      reset (reset' M n cs v d) n (v c) d j (v c) = \\<infinity>) \\<and>\n  reset (reset' M n cs v d) n (v c) d (v c) 0 = Le d \\<and>\n  reset (reset' M n cs v d) n (v c) d 0 (v c) = Le (- d) \\<and>\n  reset (reset' M n cs v d) n (v c) d (v c) (v c) =\n  reset' M n cs v d (v c) (v c) \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> v c \\<and> j \\<noteq> v c \\<longrightarrow>\n         reset (reset' M n cs v d) n (v c) d i j =\n         min (dbm_add (reset' M n cs v d i (v c))\n               (reset' M n cs v d (v c) j))\n          (reset' M n cs v d i j))\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k", "by (cases \"v c = k\", simp add: less[symmetric], case_tac \"k = 0\", auto simp: less[symmetric])"], ["proof (state)\nthis:\n  reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> reset' M n cs v d k k < \\<one>;\n        k \\<le> n; M k k < \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> reset' M n (a # cs) v d k k < \\<one>", "with IH"], ["proof (chain)\npicking this:\n  reset' M n cs v d k k < \\<one>\n  reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k", "show ?case"], ["proof (prove)\nusing this:\n  reset' M n cs v d k k < \\<one>\n  reset (reset' M n cs v d) n (v c) d k k \\<le> reset' M n cs v d k k\n\ngoal (1 subgoal):\n 1. reset' M n (c # cs) v d k k < \\<one>", "by auto"], ["proof (state)\nthis:\n  reset' M n (c # cs) v d k k < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_complete_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n          \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' M n cs v d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                             [] v d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "case Nil"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set []. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                             [] v d\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "then"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set []. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d", "by simp"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n [] v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<forall>u.\n                       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                           cs v d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<forall>u.\n                       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                           cs v d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"\\<forall>u. \\<not> DBM_val_bounded v u (reset' M n cs v d) n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n   \\<forall>c.\n      0 < v c \\<and>\n      (\\<forall>x y.\n          v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n          x = y);\n   \\<forall>c\\<in>set cs. v c \\<le> n;\n   \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n  \\<Longrightarrow> \\<forall>u.\n                       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n\n                           cs v d\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n.\n                            0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n                 \\<forall>c.\n                    0 < v c \\<and>\n                    (\\<forall>x y.\n                        v x \\<le> n \\<and>\n                        v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n                        x = y);\n                 \\<forall>c\\<in>set cs. v c \\<le> n;\n                 \\<forall>u.\n                    \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n                \\<Longrightarrow> \\<forall>u.\n                                     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n   M n cs v d;\n        \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n        \\<forall>c.\n           0 < v c \\<and>\n           (\\<forall>x y.\n               v x \\<le> n \\<and>\n               v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n               x = y);\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n;\n        \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                                M n (a # cs) v d", "from Cons.prems(2,3) DBM_reset_complete_empty'[OF Cons.prems(1) _ _ DBM_reset_reset this]"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n  \\<lbrakk>\\<forall>c. 0 < v c; ?k \\<le> n; 0 < ?k; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                         (reset' M n cs v d) n ?k ?d", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n  \\<lbrakk>\\<forall>c. 0 < v c; ?k \\<le> n; 0 < ?k; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset\n                         (reset' M n cs v d) n ?k ?d\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs) v d", "by auto"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n (c # cs) v d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_complete_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n          \"\\<forall> c \\<in> set cs. v c \\<le> n\" \"\\<forall> u . \\<not> DBM_val_bounded v u M n\"\n  shows \"\\<forall> u . \\<not> DBM_val_bounded v u (reset' (FW M n) n cs v d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "note A = assms"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. 0 < k \\<longrightarrow> (\\<exists>c. v c = k)\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "from A(4)"], ["proof (chain)\npicking this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with FW_zone_equiv[OF A(1)]"], ["proof (chain)\npicking this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}", "have \"[FW M n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [FW M n]\\<^bsub>v,n\\<^esub> = {}", "by auto"], ["proof (state)\nthis:\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with FW_detects_empty_zone[OF A(1)] A(2)"], ["proof (chain)\npicking this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW ?M n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW ?M n i i < Le (0::?'b))\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}", "obtain i where i: \"i \\<le> n\" \"FW M n i i < Le 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW ?M n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW ?M n i i < Le (0::?'b))\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  [FW M n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<le> n; FW M n i i < Le (0::'b)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with DBM_reset'_neg_diag_preservation' A(2,3)"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k \\<le> ?n; ?M ?k ?k < \\<one>; \\<forall>c. 0 < ?v c;\n   \\<forall>c\\<in>set ?cs. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> reset' ?M ?n ?cs ?v ?d ?k ?k < \\<one>\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  i \\<le> n\n  FW M n i i < Le (0::'b)", "have\n    \"reset' (FW M n) n cs v d i i < Le 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<le> ?n; ?M ?k ?k < \\<one>; \\<forall>c. 0 < ?v c;\n   \\<forall>c\\<in>set ?cs. ?v c \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> reset' ?M ?n ?cs ?v ?d ?k ?k < \\<one>\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. reset' (FW M n) n cs v d i i < Le (0::'b)", "by (auto simp: neutral)"], ["proof (state)\nthis:\n  reset' (FW M n) n cs v d i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with fw_mono[of n n n i i \"reset' (FW M n) n cs v d\" n] i"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; i \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW (reset' (FW M n) n cs v d) n i i\n                    \\<le> reset' (FW M n) n cs v d i i\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  reset' (FW M n) n cs v d i i < Le (0::'b)", "have \"FW (reset' (FW M n) n cs v d) n i i < Le 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<le> n; n \\<le> n; i \\<le> n; i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> FW (reset' (FW M n) n cs v d) n i i\n                    \\<le> reset' (FW M n) n cs v d i i\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  reset' (FW M n) n cs v d i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. FW (reset' (FW M n) n cs v d) n i i < Le (0::'b)", "by auto"], ["proof (state)\nthis:\n  FW (reset' (FW M n) n cs v d) n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with FW_detects_empty_zone[OF A(1), of \"reset' (FW M n) n cs v d\"] A(2,3) i"], ["proof (chain)\npicking this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW (reset' (FW M n) n cs v d) n i i < Le (0::'b))\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  FW (reset' (FW M n) n cs v d) n i i < Le (0::'b)", "have \"[FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>c. v c \\<le> n \\<longrightarrow> 0 < v c \\<Longrightarrow>\n  ([FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}) =\n  (\\<exists>i\\<le>n. FW (reset' (FW M n) n cs v d) n i i < Le (0::'b))\n  \\<forall>c.\n     0 < v c \\<and>\n     (\\<forall>x y.\n         v x \\<le> n \\<and> v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n         x = y)\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  i \\<le> n\n  FW M n i i < Le (0::'b)\n  FW (reset' (FW M n) n cs v d) n i i < Le (0::'b)\n\ngoal (1 subgoal):\n 1. [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}", "by auto"], ["proof (state)\nthis:\n  [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k\\<le>n.\n                0 < k \\<longrightarrow> (\\<exists>c. v c = k);\n     \\<forall>c.\n        0 < v c \\<and>\n        (\\<forall>x y.\n            v x \\<le> n \\<and>\n            v y \\<le> n \\<and> v x = v y \\<longrightarrow>\n            x = y);\n     \\<forall>c\\<in>set cs. v c \\<le> n;\n     \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u.\n                         \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset'\n                             (FW M n) n cs v d", "with FW_zone_equiv[OF A(1), of \"reset' (FW M n) n cs v d\"] A(3,4)"], ["proof (chain)\npicking this:\n  [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> =\n  [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub>\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> =\n  [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub>\n  \\<forall>c\\<in>set cs. v c \\<le> n\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n  [FW (reset' (FW M n) n cs v d) n]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d", "by (auto simp: DBM_zone_repr_def)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_empty':\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([M]\\<^bsub>v,n\\<^esub> = {}) =\n    ([reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "let ?M' = \"reset' (FW M n) n cs v d\""], ["proof (state)\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M n\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "with DBM_reset'_complete_empty[OF assms]"], ["proof (chain)\npicking this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW ?M n) n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show \"[?M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW ?M n) n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW ?M n) n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d} = {}", "by auto"], ["proof (state)\nthis:\n  [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "let ?M' = \"reset' (FW M n) n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[?M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u ?M' n\""], ["proof (prove)\nusing this:\n  [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d", "by auto"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' (FW M n) n cs v d\n\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "from DBM_reset'_sound_empty[OF assms(2,3) this]"], ["proof (chain)\npicking this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "have \"\\<forall> u. \\<not> DBM_val_bounded v u (FW M n) n\""], ["proof (prove)\nusing this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. [reset' (FW M n) n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "with FW_zone_equiv[OF assms(1)]"], ["proof (chain)\npicking this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n", "show \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M} =\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW ?M n}\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> FW M n\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_empty:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"[M]\\<^bsub>v,n\\<^esub> = {} \\<longleftrightarrow> [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([M]\\<^bsub>v,n\\<^esub> = {}) =\n    ([reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "let ?M' = \"reset' M n cs v d\""], ["proof (state)\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u M n\""], ["proof (prove)\nusing this:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (2 subgoals):\n 1. [M]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n 2. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "with DBM_reset'_complete_empty'[OF assms]"], ["proof (chain)\npicking this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show \"[?M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M \\<Longrightarrow>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d} = {}", "by auto"], ["proof (state)\nthis:\n  [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "let ?M' = \"reset' M n cs v d\""], ["proof (state)\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "assume A: \"[?M']\\<^bsub>v,n\\<^esub> = {}\""], ["proof (state)\nthis:\n  [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "hence \"\\<forall> u . \\<not> DBM_val_bounded v u ?M' n\""], ["proof (prove)\nusing this:\n  [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d} = {}\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d\n\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "from DBM_reset'_sound_empty[OF assms(2,3) this]"], ["proof (chain)\npicking this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "have \"\\<forall> u. \\<not> DBM_val_bounded v u M n\""], ["proof (prove)\nusing this:\n  \\<not> ?u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [reset' M n cs v d]\\<^bsub>v,n\\<^esub> = {} \\<Longrightarrow>\n    [M]\\<^bsub>v,n\\<^esub> = {}", "with FW_zone_equiv[OF assms(1)]"], ["proof (chain)\npicking this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M", "show \"[M]\\<^bsub>v,n\\<^esub> = {}\""], ["proof (prove)\nusing this:\n  [?M]\\<^bsub>v,n\\<^esub> = [FW ?M n]\\<^bsub>v,n\\<^esub>\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. [M]\\<^bsub>v,n\\<^esub> = {}", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M} =\n  {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> FW ?M n}\n  \\<forall>u. \\<not> u \\<turnstile>\\<^bsub>v,n\\<^esub> M\n\ngoal (1 subgoal):\n 1. {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M} = {}", "by auto"], ["proof (state)\nthis:\n  [M]\\<^bsub>v,n\\<^esub> = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset'_sound:\n  assumes \"\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k)\" \"clock_numbering' v n\"\n    and \"\\<forall>c\\<in>set cs. v c \\<le> n\"\n    and \"u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>\"\n  shows \"\\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>", "from DBM_reset'_empty[OF assms(1-3)] assms(4)"], ["proof (chain)\npicking this:\n  ([?M]\\<^bsub>v,n\\<^esub> = {}) =\n  ([reset' ?M n cs v ?d]\\<^bsub>v,n\\<^esub> = {})\n  u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>", "obtain u' where \"u' \\<in> [M]\\<^bsub>v,n\\<^esub>\""], ["proof (prove)\nusing this:\n  ([?M]\\<^bsub>v,n\\<^esub> = {}) =\n  ([reset' ?M n cs v ?d]\\<^bsub>v,n\\<^esub> = {})\n  u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        u' \\<in> [M]\\<^bsub>v,n\\<^esub> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u' \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>", "with DBM_reset'_sound'[OF assms(2,3)] assms(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d;\n   ?u'' \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ts.\n                       set_clocks cs ts\n                        ?u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\n  u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>\n  u' \\<in> [M]\\<^bsub>v,n\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d;\n   ?u'' \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ts.\n                       set_clocks cs ts\n                        ?u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\n  u \\<in> [reset' M n cs v d]\\<^bsub>v,n\\<^esub>\n  u' \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>", "unfolding DBM_zone_repr_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' ?M n cs v ?d;\n   ?u'' \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ts.\n                       set_clocks cs ts\n                        ?u \\<turnstile>\\<^bsub>v,n\\<^esub> ?M\n  u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> reset' M n cs v d}\n  u' \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M}\n\ngoal (1 subgoal):\n 1. \\<exists>ts.\n       set_clocks cs ts u \\<in> {u. u \\<turnstile>\\<^bsub>v,n\\<^esub> M}", "by blast"], ["proof (state)\nthis:\n  \\<exists>ts. set_clocks cs ts u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Misc Preservation Lemmas\\<close>"], ["", "lemma get_const_sum[simp]:\n  \"a \\<noteq> \\<infinity> \\<Longrightarrow> b \\<noteq> \\<infinity> \\<Longrightarrow> get_const a \\<in> \\<int> \\<Longrightarrow> get_const b \\<in> \\<int> \\<Longrightarrow> get_const (a + b) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> \\<infinity>; b \\<noteq> \\<infinity>;\n     get_const a \\<in> \\<int>; get_const b \\<in> \\<int>\\<rbrakk>\n    \\<Longrightarrow> get_const (a + b) \\<in> \\<int>", "by (cases a) (cases b, auto simp: mult)+"], ["", "lemma sum_not_inf_dest:\n  assumes \"a + b \\<noteq> \\<infinity>\"\n  shows \"a \\<noteq> \\<infinity> \\<and> b \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity> \\<and> b \\<noteq> \\<infinity>", "using assms"], ["proof (prove)\nusing this:\n  a + b \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<infinity> \\<and> b \\<noteq> \\<infinity>", "by (cases a; cases b; simp add: mult)"], ["", "lemma sum_not_inf_int:\n  assumes \"a + b \\<noteq> \\<infinity>\" \"get_const a \\<in> \\<int>\" \"get_const b \\<in> \\<int>\"\n  shows \"get_const (a + b) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (a + b) \\<in> \\<int>", "using assms sum_not_inf_dest"], ["proof (prove)\nusing this:\n  a + b \\<noteq> \\<infinity>\n  get_const a \\<in> \\<int>\n  get_const b \\<in> \\<int>\n  ?a + ?b \\<noteq> \\<infinity> \\<Longrightarrow>\n  ?a \\<noteq> \\<infinity> \\<and> ?b \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (a + b) \\<in> \\<int>", "by fastforce"], ["", "lemma int_fw_upd:\n  \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. m i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (m i j) \\<in> \\<int> \\<Longrightarrow> k \\<le> n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n\n  \\<Longrightarrow> i' \\<le> n \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> (fw_upd m k i j i' j') \\<noteq> \\<infinity>\n  \\<Longrightarrow> get_const (fw_upd m k i j i' j') \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   m i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (m i j) \\<in> \\<int>;\n     k \\<le> n; i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     fw_upd m k i j i' j' \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (fw_upd m k i j i' j') \\<in> \\<int>", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   m i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (m i j) \\<in> \\<int>;\n     k \\<le> n; i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     fw_upd m k i j i' j' \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (fw_upd m k i j i' j') \\<in> \\<int>", "case 1"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        m i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (m i j) \\<in> \\<int>\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  fw_upd m k i j i' j' \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   m i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (m i j) \\<in> \\<int>;\n     k \\<le> n; i \\<le> n; j \\<le> n; i' \\<le> n; j' \\<le> n;\n     fw_upd m k i j i' j' \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (fw_upd m k i j i' j') \\<in> \\<int>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw_upd m k i j i' j') \\<in> \\<int>", "proof (cases \"i = i' \\<and> j = j'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = i' \\<and> j = j' \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>\n 2. \\<not> (i = i' \\<and> j = j') \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>", "case True"], ["proof (state)\nthis:\n  i = i' \\<and> j = j'\n\ngoal (2 subgoals):\n 1. i = i' \\<and> j = j' \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>\n 2. \\<not> (i = i' \\<and> j = j') \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        m i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (m i j) \\<in> \\<int>\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  fw_upd m k i j i' j' \\<noteq> \\<infinity>\n  i = i' \\<and> j = j'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        m i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (m i j) \\<in> \\<int>\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  fw_upd m k i j i' j' \\<noteq> \\<infinity>\n  i = i' \\<and> j = j'\n\ngoal (1 subgoal):\n 1. get_const (fw_upd m k i j i' j') \\<in> \\<int>", "by (fastforce simp: fw_upd_def upd_def min_def dest: sum_not_inf_dest)"], ["proof (state)\nthis:\n  get_const (fw_upd m k i j i' j') \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. \\<not> (i = i' \\<and> j = j') \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (i = i' \\<and> j = j') \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>", "case False"], ["proof (state)\nthis:\n  \\<not> (i = i' \\<and> j = j')\n\ngoal (1 subgoal):\n 1. \\<not> (i = i' \\<and> j = j') \\<Longrightarrow>\n    get_const (fw_upd m k i j i' j') \\<in> \\<int>", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        m i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (m i j) \\<in> \\<int>\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  fw_upd m k i j i' j' \\<noteq> \\<infinity>\n  \\<not> (i = i' \\<and> j = j')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        m i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (m i j) \\<in> \\<int>\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  i' \\<le> n\n  j' \\<le> n\n  fw_upd m k i j i' j' \\<noteq> \\<infinity>\n  \\<not> (i = i' \\<and> j = j')\n\ngoal (1 subgoal):\n 1. get_const (fw_upd m k i j i' j') \\<in> \\<int>", "by (auto simp : fw_upd_def upd_def)"], ["proof (state)\nthis:\n  get_const (fw_upd m k i j i' j') \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  get_const (fw_upd m k i j i' j') \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_int_aux_c:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) 0 0 c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) 0 0 c) i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw M n 0 0 c i j) \\<in> \\<int>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        M i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (M i j) \\<in> \\<int>\n  a \\<le> n\n  b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n 0 0 c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n 0 0 c i j) \\<in> \\<int>", "apply (induction c arbitrary: i j)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i\\<le>n.\n                   \\<forall>j\\<le>n.\n                      M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                      get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; 0 \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 0 i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 0 i j) \\<in> \\<int>\n 2. \\<And>c i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 0 c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; Suc c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 (Suc c) i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 (Suc c) i j) \\<in> \\<int>", "apply (auto simp: fw_upd_def upd_def min_def)[]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (M i j) \\<in> \\<int>;\n     a \\<le> n; b \\<le> n; M 0 0 + M 0 0 \\<noteq> \\<infinity>;\n     \\<not> M 0 0 \\<le> M 0 0 + M 0 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M 0 0 + M 0 0) \\<in> \\<int>\n 2. \\<And>c i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 0 c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; Suc c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 (Suc c) i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 (Suc c) i j) \\<in> \\<int>", "apply (case_tac \"M 0 0 = \\<infinity>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (M i j) \\<in> \\<int>;\n     a \\<le> n; b \\<le> n; M 0 0 + M 0 0 \\<noteq> \\<infinity>;\n     \\<not> M 0 0 \\<le> M 0 0 + M 0 0; M 0 0 = \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (M 0 0 + M 0 0) \\<in> \\<int>\n 2. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (M i j) \\<in> \\<int>;\n     a \\<le> n; b \\<le> n; M 0 0 + M 0 0 \\<noteq> \\<infinity>;\n     \\<not> M 0 0 \\<le> M 0 0 + M 0 0; M 0 0 \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (M 0 0 + M 0 0) \\<in> \\<int>\n 3. \\<And>c i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 0 c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; Suc c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 (Suc c) i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 (Suc c) i j) \\<in> \\<int>", "apply (simp add: mult)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<le>n.\n                \\<forall>j\\<le>n.\n                   M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                   get_const (M i j) \\<in> \\<int>;\n     a \\<le> n; b \\<le> n; M 0 0 + M 0 0 \\<noteq> \\<infinity>;\n     \\<not> M 0 0 \\<le> M 0 0 + M 0 0; M 0 0 \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (M 0 0 + M 0 0) \\<in> \\<int>\n 2. \\<And>c i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 0 c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; Suc c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 (Suc c) i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 (Suc c) i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 0 c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; b \\<le> n; Suc c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 (Suc c) i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 (Suc c) i j) \\<in> \\<int>", "apply (fastforce simp: min_def fw_upd_def upd_def dest: sum_not_inf_dest)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fw_int_aux_Suc_b:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. (fw M n) a b n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const ((fw M n) a b n i j) \\<in> \\<int>\"\n          \"a \\<le> n\" \"Suc b \\<le> n\" \"c \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) a (Suc b) c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) a (Suc b) c) i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw M n a (Suc b) c i j) \\<in> \\<int>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a b n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a b n i j) \\<in> \\<int>\n  a \\<le> n\n  Suc b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n a (Suc b) c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n a (Suc b) c i j) \\<in> \\<int>", "by (induction c arbitrary: i j) (auto intro: int_fw_upd[of n])"], ["", "lemma fw_int_aux_b:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) 0 b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) 0 b c) i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw M n 0 b c i j) \\<in> \\<int>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        M i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (M i j) \\<in> \\<int>\n  a \\<le> n\n  b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n 0 b c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n 0 b c i j) \\<in> \\<int>", "apply (induction b arbitrary: i j c)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j c.\n       \\<lbrakk>\\<forall>i\\<le>n.\n                   \\<forall>j\\<le>n.\n                      M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                      get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; 0 \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 0 c i j) \\<in> \\<int>\n 2. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 (Suc b) c i j) \\<in> \\<int>", "apply (blast intro: fw_int_aux_c)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 (Suc b) c i j) \\<in> \\<int>", "apply (rule fw_int_aux_Suc_b[of n])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<le>n.\n                            \\<forall>j\\<le>n.\n                               fw M n 0 b n i j \\<noteq>\n                               \\<infinity> \\<longrightarrow>\n                               get_const (fw M n 0 b n i j) \\<in> \\<int>\n 2. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> n\n 3. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> Suc b \\<le> n\n 4. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<le> n\n 5. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 6. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 7. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n 0 b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc b) c i j \\<noteq> \\<infinity>", "by auto"], ["", "lemma fw_int_aux_Suc_a:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. (fw M n) a n n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const ((fw M n) a n n i j) \\<in> \\<int>\"\n          \"Suc a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) (Suc a) b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) (Suc a) b c) i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw M n (Suc a) b c i j) \\<in> \\<int>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) b c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n (Suc a) b c i j) \\<in> \\<int>", "proof (induction b arbitrary: i j c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j c.\n       \\<lbrakk>\\<forall>i\\<le>n.\n                   \\<forall>j\\<le>n.\n                      fw M n a n n i j \\<noteq>\n                      \\<infinity> \\<longrightarrow>\n                      get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; 0 \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) 0 c i j) \\<in> \\<int>\n 2. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  fw M n a n n i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (fw M n a n n i j) \\<in> \\<int>;\n                    Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n;\n                    j \\<le> n;\n                    fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n (Suc a) b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) (Suc b) c i j)\n                         \\<in> \\<int>", "case 0"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  0 \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) 0 c i j \\<noteq> \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>i j c.\n       \\<lbrakk>\\<forall>i\\<le>n.\n                   \\<forall>j\\<le>n.\n                      fw M n a n n i j \\<noteq>\n                      \\<infinity> \\<longrightarrow>\n                      get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; 0 \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) 0 c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) 0 c i j) \\<in> \\<int>\n 2. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  fw M n a n n i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (fw M n a n n i j) \\<in> \\<int>;\n                    Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n;\n                    j \\<le> n;\n                    fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n (Suc a) b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) (Suc b) c i j)\n                         \\<in> \\<int>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  0 \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) 0 c i j \\<noteq> \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  0 \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) 0 c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n (Suc a) 0 c i j) \\<in> \\<int>", "by (induction c arbitrary: i j) (auto intro: int_fw_upd[of n])"], ["proof (state)\nthis:\n  get_const (fw M n (Suc a) 0 c i j) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  fw M n a n n i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (fw M n a n n i j) \\<in> \\<int>;\n                    Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n;\n                    j \\<le> n;\n                    fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n (Suc a) b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) (Suc b) c i j)\n                         \\<in> \\<int>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  fw M n a n n i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (fw M n a n n i j) \\<in> \\<int>;\n                    Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n;\n                    j \\<le> n;\n                    fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n (Suc a) b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) (Suc b) c i j)\n                         \\<in> \\<int>", "case (Suc b)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>i\\<le>n.\n              \\<forall>j\\<le>n.\n                 fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n                 get_const (fw M n a n n i j) \\<in> \\<int>;\n   Suc a \\<le> n; b \\<le> n; ?c \\<le> n; ?i \\<le> n; ?j \\<le> n;\n   fw M n (Suc a) b ?c ?i ?j \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const (fw M n (Suc a) b ?c ?i ?j) \\<in> \\<int>\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  Suc b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>b i j c.\n       \\<lbrakk>\\<And>i j c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  fw M n a n n i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (fw M n a n n i j) \\<in> \\<int>;\n                    Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n;\n                    j \\<le> n;\n                    fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n (Suc a) b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (fw M n a n n i j) \\<in> \\<int>;\n        Suc a \\<le> n; Suc b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) (Suc b) c i j)\n                         \\<in> \\<int>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>i\\<le>n.\n              \\<forall>j\\<le>n.\n                 fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n                 get_const (fw M n a n n i j) \\<in> \\<int>;\n   Suc a \\<le> n; b \\<le> n; ?c \\<le> n; ?i \\<le> n; ?j \\<le> n;\n   fw M n (Suc a) b ?c ?i ?j \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const (fw M n (Suc a) b ?c ?i ?j) \\<in> \\<int>\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  Suc b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i\\<le>n.\n              \\<forall>j\\<le>n.\n                 fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n                 get_const (fw M n a n n i j) \\<in> \\<int>;\n   Suc a \\<le> n; b \\<le> n; ?c \\<le> n; ?i \\<le> n; ?j \\<le> n;\n   fw M n (Suc a) b ?c ?i ?j \\<noteq> \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> get_const (fw M n (Suc a) b ?c ?i ?j) \\<in> \\<int>\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        fw M n a n n i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (fw M n a n n i j) \\<in> \\<int>\n  Suc a \\<le> n\n  Suc b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n (Suc a) (Suc b) c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n (Suc a) (Suc b) c i j) \\<in> \\<int>", "by (intro fw_int_aux_Suc_b) auto"], ["proof (state)\nthis:\n  get_const (fw M n (Suc a) (Suc b) c i j) \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_int_preservation:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\" \"a \\<le> n\" \"b \\<le> n\" \"c \\<le> n\"\n          \"i \\<le> n\" \"j \\<le> n\" \"((fw M n) a b c) i j \\<noteq> \\<infinity>\"\n  shows \"get_const (((fw M n) a b c) i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. get_const (fw M n a b c i j) \\<in> \\<int>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        M i j \\<noteq> \\<infinity> \\<longrightarrow>\n        get_const (M i j) \\<in> \\<int>\n  a \\<le> n\n  b \\<le> n\n  c \\<le> n\n  i \\<le> n\n  j \\<le> n\n  fw M n a b c i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (fw M n a b c i j) \\<in> \\<int>", "apply (induction a arbitrary: i j b c)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j b c.\n       \\<lbrakk>\\<forall>i\\<le>n.\n                   \\<forall>j\\<le>n.\n                      M i j \\<noteq> \\<infinity> \\<longrightarrow>\n                      get_const (M i j) \\<in> \\<int>;\n        0 \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n 0 b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n 0 b c i j) \\<in> \\<int>\n 2. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) b c i j) \\<in> \\<int>", "apply (blast intro: fw_int_aux_b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (fw M n (Suc a) b c i j) \\<in> \\<int>", "apply (rule fw_int_aux_Suc_a[of n])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i\\<le>n.\n                            \\<forall>j\\<le>n.\n                               fw M n a n n i j \\<noteq>\n                               \\<infinity> \\<longrightarrow>\n                               get_const (fw M n a n n i j) \\<in> \\<int>\n 2. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> Suc a \\<le> n\n 3. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> b \\<le> n\n 4. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c \\<le> n\n 5. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 6. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 7. \\<And>a i j b c.\n       \\<lbrakk>\\<And>i j b c.\n                   \\<lbrakk>\\<forall>i\\<le>n.\n                               \\<forall>j\\<le>n.\n                                  M i j \\<noteq>\n                                  \\<infinity> \\<longrightarrow>\n                                  get_const (M i j) \\<in> \\<int>;\n                    a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n                    fw M n a b c i j \\<noteq> \\<infinity>\\<rbrakk>\n                   \\<Longrightarrow> get_const (fw M n a b c i j)\n                                     \\<in> \\<int>;\n        \\<forall>i\\<le>n.\n           \\<forall>j\\<le>n.\n              M i j \\<noteq> \\<infinity> \\<longrightarrow>\n              get_const (M i j) \\<in> \\<int>;\n        Suc a \\<le> n; b \\<le> n; c \\<le> n; i \\<le> n; j \\<le> n;\n        fw M n (Suc a) b c i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc a) b c i j \\<noteq> \\<infinity>", "by auto"], ["", "lemma FW_int_preservation:\n  assumes \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\"\n  shows \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. FW M n i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (FW M n i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n.\n       \\<forall>j\\<le>n.\n          FW M n i j \\<noteq> \\<infinity> \\<longrightarrow>\n          get_const (FW M n i j) \\<in> \\<int>", "by (blast intro: fw_int_preservation[OF assms(1)])"], ["", "abbreviation \"dbm_int M n \\<equiv> \\<forall> i\\<le>n. \\<forall> j\\<le>n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\""], ["", "lemma And_int_preservation:\n  assumes \"dbm_int M1 n\" \"dbm_int M2 n\"\n  shows \"dbm_int (And M1 M2) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (And M1 M2) n", "using assms"], ["proof (prove)\nusing this:\n  dbm_int M1 n\n  dbm_int M2 n\n\ngoal (1 subgoal):\n 1. dbm_int (And M1 M2) n", "by (auto simp: min_def)"], ["", "lemma up_int_preservation:\n  \"dbm_int M n \\<Longrightarrow> dbm_int (up M) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int M n \\<Longrightarrow> dbm_int (up M) n", "unfolding up_def min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int M n \\<Longrightarrow>\n    dbm_int\n     (\\<lambda>i j.\n         if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j)\n     n", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>", "apply (case_tac \"i = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i = 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>\n 2. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>", "apply (case_tac \"j = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i \\<noteq> 0; j = 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>\n 2. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i \\<noteq> 0; j \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        (if 0 < i\n         then if j = 0 then \\<infinity>\n              else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                   then dbm_add (M i 0) (M 0 j) else M i j\n         else M i j) \\<noteq>\n        \\<infinity>;\n        i \\<noteq> 0; j \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if 0 < i\n                           then if j = 0 then \\<infinity>\n                                else if dbm_add (M i 0) (M 0 j) \\<le> M i j\n                                     then dbm_add (M i 0) (M 0 j) else M i j\n                           else M i j)\n                         \\<in> \\<int>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        dbm_add (M i 0) (M 0 j) \\<noteq> \\<infinity>; 0 < i; 0 < j;\n        dbm_add (M i 0) (M 0 j) \\<le> M i j\\<rbrakk>\n       \\<Longrightarrow> get_const (dbm_add (M i 0) (M 0 j)) \\<in> \\<int>", "unfolding mult[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>dbm_int M n; i \\<le> n; j \\<le> n;\n        M i 0 + M 0 j \\<noteq> \\<infinity>; 0 < i; 0 < j;\n        M i 0 + M 0 j \\<le> M i j\\<rbrakk>\n       \\<Longrightarrow> get_const (M i 0 + M 0 j) \\<in> \\<int>", "by (auto dest: sum_not_inf_dest)"], ["", "(* Definitely a candidate for cleaning *)"], ["", "lemma DBM_reset_int_preservation':\n  assumes \"dbm_int M n\" \"DBM_reset M n k d M'\" \"d \\<in> \\<int>\" \"k \\<le> n\"\n  shows \"dbm_int M' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int M' n", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<le> n; j \\<le> n; M' i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<le> n; j \\<le> n; M' i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "assume A: \"i \\<le> n\" \"j \\<le> n\" \"M' i j \\<noteq> \\<infinity>\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  M' i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<le> n; j \\<le> n; M' i j \\<noteq> \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "from assms(2)"], ["proof (chain)\npicking this:\n  DBM_reset M n k d M'", "show \"get_const (M' i j) \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  DBM_reset M n k d M'\n\ngoal (1 subgoal):\n 1. get_const (M' i j) \\<in> \\<int>", "unfolding DBM_reset_def"], ["proof (prove)\nusing this:\n  (\\<forall>j\\<le>n.\n      0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n      M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n  M' k 0 = Le d \\<and>\n  M' 0 k = Le (- d) \\<and>\n  M' k k = M k k \\<and>\n  (\\<forall>i\\<le>n.\n      \\<forall>j\\<le>n.\n         i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n         M' i j = min (dbm_add (M i k) (M k j)) (M i j))\n\ngoal (1 subgoal):\n 1. get_const (M' i j) \\<in> \\<int>", "apply (cases \"i = k\"; cases \"j = k\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 4. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M k k) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 4. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using A assms(1,4)"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  M' i j \\<noteq> \\<infinity>\n  dbm_int M n\n  k \\<le> n\n\ngoal (4 subgoals):\n 1. \\<lbrakk>i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M k k) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 4. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply presburger"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply (cases \"j = 0\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j = 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 4. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using assms(3)"], ["proof (prove)\nusing this:\n  d \\<in> \\<int>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j = 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 4. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using A"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  M' i j \\<noteq> \\<infinity>\n\ngoal (3 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i = k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; j \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply (cases \"i = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i = 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 2. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using assms(3)"], ["proof (prove)\nusing this:\n  d \\<in> \\<int>\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i = 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 2. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 3. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using A"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  M' i j \\<noteq> \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j = k; i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i k) \\<in> \\<int>\n 2. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "using A"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  M' i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>j\\<le>n.\n                 0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n                 M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n             M' k 0 = Le d \\<and>\n             M' 0 k = Le (- d) \\<and>\n             M' k k = M k k \\<and>\n             (\\<forall>i\\<le>n.\n                 \\<forall>j\\<le>n.\n                    i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n                    M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k\\<rbrakk>\n    \\<Longrightarrow> get_const (M' i j) \\<in> \\<int>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k;\n     (\\<forall>j\\<le>n.\n         0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n         M' k j = \\<infinity> \\<and> M' j k = \\<infinity>) \\<and>\n     M' k 0 = Le d \\<and>\n     M' 0 k = Le (- d) \\<and>\n     M' k k = M k k \\<and>\n     (\\<forall>i\\<le>n.\n         \\<forall>j\\<le>n.\n            i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n            M' i j = min (dbm_add (M i k) (M k j)) (M i j));\n     j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\\<rbrakk>\n    \\<Longrightarrow> get_const (min (dbm_add (M i k) (M k j)) (M i j))\n                      \\<in> \\<int>", "apply (simp split: split_min, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>\n 2. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "case 1"], ["proof (state)\nthis:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  dbm_add (M i k) (M k j) \\<le> M i j", "have *: \"M i k + M k j \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. M i k + M k j \\<noteq> \\<infinity>", "unfolding mult min_def"], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  (if dbm_add (M i k) (M k j) \\<le> M i j then dbm_add (M i k) (M k j)\n   else M i j) \\<noteq>\n  \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j =\n        (if dbm_add (M i k) (M k j) \\<le> M i j then dbm_add (M i k) (M k j)\n         else M i j)\n  dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. dbm_add (M i k) (M k j) \\<noteq> \\<infinity>", "by meson"], ["proof (state)\nthis:\n  M i k + M k j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "with sum_not_inf_dest"], ["proof (chain)\npicking this:\n  ?a + ?b \\<noteq> \\<infinity> \\<Longrightarrow>\n  ?a \\<noteq> \\<infinity> \\<and> ?b \\<noteq> \\<infinity>\n  M i k + M k j \\<noteq> \\<infinity>", "have \"M i k \\<noteq> \\<infinity>\" \"M k j \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  ?a + ?b \\<noteq> \\<infinity> \\<Longrightarrow>\n  ?a \\<noteq> \\<infinity> \\<and> ?b \\<noteq> \\<infinity>\n  M i k + M k j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. M i k \\<noteq> \\<infinity> &&& M k j \\<noteq> \\<infinity>", "by auto"], ["proof (state)\nthis:\n  M i k \\<noteq> \\<infinity>\n  M k j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "with 1(3,4) assms(1,4)"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int M n\n  k \\<le> n\n  M i k \\<noteq> \\<infinity>\n  M k j \\<noteq> \\<infinity>", "have \"get_const (M i k) \\<in> \\<int>\" \"get_const (M k j) \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int M n\n  k \\<le> n\n  M i k \\<noteq> \\<infinity>\n  M k j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (M i k) \\<in> \\<int> &&& get_const (M k j) \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  get_const (M i k) \\<in> \\<int>\n  get_const (M k j) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "with sum_not_inf_int[folded mult, OF *]"], ["proof (chain)\npicking this:\n  \\<lbrakk>get_const (M i k) \\<in> \\<int>;\n   get_const (M k j) \\<in> \\<int>\\<rbrakk>\n  \\<Longrightarrow> get_const (M i k + M k j) \\<in> \\<int>\n  get_const (M i k) \\<in> \\<int>\n  get_const (M k j) \\<in> \\<int>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>get_const (M i k) \\<in> \\<int>;\n   get_const (M k j) \\<in> \\<int>\\<rbrakk>\n  \\<Longrightarrow> get_const (M i k + M k j) \\<in> \\<int>\n  get_const (M i k) \\<in> \\<int>\n  get_const (M k j) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "unfolding mult"], ["proof (prove)\nusing this:\n  \\<lbrakk>get_const (M i k) \\<in> \\<int>;\n   get_const (M k j) \\<in> \\<int>\\<rbrakk>\n  \\<Longrightarrow> get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>\n  get_const (M i k) \\<in> \\<int>\n  get_const (M k j) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  get_const (dbm_add (M i k) (M k j)) \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "case 1"], ["proof (state)\nthis:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  \\<not> dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  \\<not> dbm_add (M i k) (M k j) \\<le> M i j", "have *: \"M i j \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j = min (dbm_add (M i k) (M k j)) (M i j)\n  \\<not> dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. M i j \\<noteq> \\<infinity>", "unfolding mult min_def"], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  j \\<noteq> k\n  i \\<le> n\n  j \\<le> n\n  (if dbm_add (M i k) (M k j) \\<le> M i j then dbm_add (M i k) (M k j)\n   else M i j) \\<noteq>\n  \\<infinity>\n  \\<forall>j\\<le>n.\n     0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n     M' k j = \\<infinity> \\<and> M' j k = \\<infinity>\n  M' k 0 = Le d\n  M' 0 k = Le (- d)\n  M' k k = M k k\n  \\<forall>i\\<le>n.\n     \\<forall>j\\<le>n.\n        i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n        M' i j =\n        (if dbm_add (M i k) (M k j) \\<le> M i j then dbm_add (M i k) (M k j)\n         else M i j)\n  \\<not> dbm_add (M i k) (M k j) \\<le> M i j\n\ngoal (1 subgoal):\n 1. M i j \\<noteq> \\<infinity>", "by meson"], ["proof (state)\nthis:\n  M i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> k; j \\<noteq> k; i \\<le> n; j \\<le> n;\n     min (dbm_add (M i k) (M k j)) (M i j) \\<noteq> \\<infinity>;\n     \\<forall>j\\<le>n.\n        0 < j \\<and> k \\<noteq> j \\<longrightarrow>\n        M' k j = \\<infinity> \\<and> M' j k = \\<infinity>;\n     M' k 0 = Le d; M' 0 k = Le (- d); M' k k = M k k;\n     \\<forall>i\\<le>n.\n        \\<forall>j\\<le>n.\n           i \\<noteq> k \\<and> j \\<noteq> k \\<longrightarrow>\n           M' i j = min (dbm_add (M i k) (M k j)) (M i j);\n     \\<not> dbm_add (M i k) (M k j) \\<le> M i j\\<rbrakk>\n    \\<Longrightarrow> get_const (M i j) \\<in> \\<int>", "with 1(3,4) assms(1,4)"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int M n\n  k \\<le> n\n  M i j \\<noteq> \\<infinity>", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  dbm_int M n\n  k \\<le> n\n  M i j \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. get_const (M i j) \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  get_const (M i j) \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  get_const (M' i j) \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DBM_reset_int_preservation:\n  assumes \"dbm_int M n\" \"d \\<in> \\<int>\" \"0 < k\" \"k \\<le> n\"\n  shows \"dbm_int (reset M n k d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (reset M n k d) n", "using assms(3-) DBM_reset_int_preservation'[OF assms(1) DBM_reset_reset assms(2)]"], ["proof (prove)\nusing this:\n  0 < k\n  k \\<le> n\n  \\<lbrakk>0 < ?k; ?k \\<le> n; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_int (reset M n ?k d) n\n\ngoal (1 subgoal):\n 1. dbm_int (reset M n k d) n", "by blast"], ["", "lemma DBM_reset'_int_preservation:\n  assumes \"dbm_int M n\" \"d \\<in> \\<int>\" \"\\<forall>c. v c > 0\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"dbm_int (reset' M n cs v d) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (reset' M n cs v d) n", "using assms"], ["proof (prove)\nusing this:\n  dbm_int M n\n  d \\<in> \\<int>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set cs. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_int (reset' M n cs v d) n", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> dbm_int (reset' M n [] v d) n\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "case Nil"], ["proof (state)\nthis:\n  dbm_int M n\n  d \\<in> \\<int>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> dbm_int (reset' M n [] v d) n\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "then"], ["proof (chain)\npicking this:\n  dbm_int M n\n  d \\<in> \\<int>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  dbm_int M n\n  d \\<in> \\<int>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_int (reset' M n [] v d) n", "by simp"], ["proof (state)\nthis:\n  dbm_int (reset' M n [] v d) n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_int (reset' M n cs v d) n\n  dbm_int M n\n  d \\<in> \\<int>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "from Cons.IH[OF Cons.prems(1,2,3)] Cons.prems(4)"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  dbm_int (reset' M n cs v d) n\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"dbm_int (reset' M n cs v d) n\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. v c \\<le> n \\<Longrightarrow>\n  dbm_int (reset' M n cs v d) n\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_int (reset' M n cs v d) n", "by fastforce"], ["proof (state)\nthis:\n  dbm_int (reset' M n cs v d) n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> dbm_int (reset' M n cs v d) n;\n        dbm_int M n; d \\<in> \\<int>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_int (reset' M n (a # cs) v d) n", "from DBM_reset_int_preservation[OF this Cons.prems(2), of \"v c\"] Cons.prems(3,4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < v c; v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_int (reset (reset' M n cs v d) n (v c) d) n\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < v c; v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> dbm_int (reset (reset' M n cs v d) n (v c) d) n\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_int (reset' M n (c # cs) v d) n", "by auto"], ["proof (state)\nthis:\n  dbm_int (reset' M n (c # cs) v d) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma int_zone_dbm:\n  assumes \"clock_numbering' v n\"\n    \"\\<forall> (_,d) \\<in> collect_clock_pairs cc. d \\<in> \\<int>\" \"\\<forall> c \\<in> collect_clks cc. v c \\<le> n\"\n  obtains M where \"{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>\"\n            and   \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (M i j) \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>;\n         dbm_int M n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>;\n         dbm_int M n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?M = \"abstr cc (\\<lambda>i j. \\<infinity>) v\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>;\n         dbm_int M n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>(uu_, d)\\<in>collect_clock_pairs cc. d \\<in> \\<int>", "have \"\\<forall> i \\<le> n. \\<forall> j \\<le> n. ?M i j \\<noteq> \\<infinity> \\<longrightarrow> get_const (?M i j) \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  \\<forall>(uu_, d)\\<in>collect_clock_pairs cc. d \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int (abstr cc (\\<lambda>i j. \\<infinity>) v) n", "by (induction cc) (auto simp: min_def)"], ["proof (state)\nthis:\n  dbm_int (abstr cc (\\<lambda>i j. \\<infinity>) v) n\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>{u. u \\<turnstile> cc} = [M]\\<^bsub>v,n\\<^esub>;\n         dbm_int M n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with dbm_abstr_zone_eq[OF assms(1) assms(3)]"], ["proof (chain)\npicking this:\n  [abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> =\n  {u. u \\<turnstile> cc}\n  dbm_int (abstr cc (\\<lambda>i j. \\<infinity>) v) n", "show ?thesis"], ["proof (prove)\nusing this:\n  [abstr cc (\\<lambda>i j. \\<infinity>) v]\\<^bsub>v,n\\<^esub> =\n  {u. u \\<turnstile> cc}\n  dbm_int (abstr cc (\\<lambda>i j. \\<infinity>) v) n\n\ngoal (1 subgoal):\n 1. thesis", "by (auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reset_set1:\n  \"\\<forall>c \\<in> set cs. ([cs\\<rightarrow>d]u) c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set cs. ([cs\\<rightarrow>d]u) c = d", "by (induction cs) auto"], ["", "lemma reset_set11:\n  \"\\<forall>c. c \\<notin> set cs \\<longrightarrow> ([cs\\<rightarrow>d]u) c = u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set cs \\<longrightarrow> ([cs\\<rightarrow>d]u) c = u c", "by (induction cs) auto"], ["", "lemma reset_set2:\n  \"\\<forall>c. c \\<notin> set cs \\<longrightarrow> (set_clocks cs ts u)c = u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set cs \\<longrightarrow> set_clocks cs ts u c = u c", "proof (induction cs arbitrary: ts u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ts u.\n       \\<forall>c.\n          c \\<notin> set [] \\<longrightarrow> set_clocks [] ts u c = u c\n 2. \\<And>a cs ts u.\n       (\\<And>ts u.\n           \\<forall>c.\n              c \\<notin> set cs \\<longrightarrow>\n              set_clocks cs ts u c = u c) \\<Longrightarrow>\n       \\<forall>c.\n          c \\<notin> set (a # cs) \\<longrightarrow>\n          set_clocks (a # cs) ts u c = u c", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ts u.\n       \\<forall>c.\n          c \\<notin> set [] \\<longrightarrow> set_clocks [] ts u c = u c\n 2. \\<And>a cs ts u.\n       (\\<And>ts u.\n           \\<forall>c.\n              c \\<notin> set cs \\<longrightarrow>\n              set_clocks cs ts u c = u c) \\<Longrightarrow>\n       \\<forall>c.\n          c \\<notin> set (a # cs) \\<longrightarrow>\n          set_clocks (a # cs) ts u c = u c", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set [] \\<longrightarrow> set_clocks [] ts u c = u c", "by auto"], ["proof (state)\nthis:\n  \\<forall>c. c \\<notin> set [] \\<longrightarrow> set_clocks [] ts u c = u c\n\ngoal (1 subgoal):\n 1. \\<And>a cs ts u.\n       (\\<And>ts u.\n           \\<forall>c.\n              c \\<notin> set cs \\<longrightarrow>\n              set_clocks cs ts u c = u c) \\<Longrightarrow>\n       \\<forall>c.\n          c \\<notin> set (a # cs) \\<longrightarrow>\n          set_clocks (a # cs) ts u c = u c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs ts u.\n       (\\<And>ts u.\n           \\<forall>c.\n              c \\<notin> set cs \\<longrightarrow>\n              set_clocks cs ts u c = u c) \\<Longrightarrow>\n       \\<forall>c.\n          c \\<notin> set (a # cs) \\<longrightarrow>\n          set_clocks (a # cs) ts u c = u c", "case Cons"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c\n\ngoal (1 subgoal):\n 1. \\<And>a cs ts u.\n       (\\<And>ts u.\n           \\<forall>c.\n              c \\<notin> set cs \\<longrightarrow>\n              set_clocks cs ts u c = u c) \\<Longrightarrow>\n       \\<forall>c.\n          c \\<notin> set (a # cs) \\<longrightarrow>\n          set_clocks (a # cs) ts u c = u c", "then"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set (a_ # cs_) \\<longrightarrow>\n       set_clocks (a_ # cs_) ts u c = u c", "proof (cases ts, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ts u.\n                \\<forall>c.\n                   c \\<notin> set cs_ \\<longrightarrow>\n                   set_clocks cs_ ts u c = u c;\n     ts = []\\<rbrakk>\n    \\<Longrightarrow> \\<forall>c.\n                         c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                         set_clocks (a_ # cs_) ts u c = u c\n 2. \\<And>aa list.\n       \\<lbrakk>\\<And>ts u.\n                   \\<forall>c.\n                      c \\<notin> set cs_ \\<longrightarrow>\n                      set_clocks cs_ ts u c = u c;\n        ts = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                            set_clocks (a_ # cs_) ts u c = u c", "case Nil"], ["proof (state)\nthis:\n  ts = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ts u.\n                \\<forall>c.\n                   c \\<notin> set cs_ \\<longrightarrow>\n                   set_clocks cs_ ts u c = u c;\n     ts = []\\<rbrakk>\n    \\<Longrightarrow> \\<forall>c.\n                         c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                         set_clocks (a_ # cs_) ts u c = u c\n 2. \\<And>aa list.\n       \\<lbrakk>\\<And>ts u.\n                   \\<forall>c.\n                      c \\<notin> set cs_ \\<longrightarrow>\n                      set_clocks cs_ ts u c = u c;\n        ts = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                            set_clocks (a_ # cs_) ts u c = u c", "then"], ["proof (chain)\npicking this:\n  ts = []", "show ?thesis"], ["proof (prove)\nusing this:\n  ts = []\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set (a_ # cs_) \\<longrightarrow>\n       set_clocks (a_ # cs_) ts u c = u c", "by simp"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<notin> set (a_ # cs_) \\<longrightarrow>\n     set_clocks (a_ # cs_) ts u c = u c\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<And>ts u.\n                   \\<forall>c.\n                      c \\<notin> set cs_ \\<longrightarrow>\n                      set_clocks cs_ ts u c = u c;\n        ts = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                            set_clocks (a_ # cs_) ts u c = u c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<And>ts u.\n                   \\<forall>c.\n                      c \\<notin> set cs_ \\<longrightarrow>\n                      set_clocks cs_ ts u c = u c;\n        ts = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                            set_clocks (a_ # cs_) ts u c = u c", "case (2 a')"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c\n  ts = a' # list_\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<And>ts u.\n                   \\<forall>c.\n                      c \\<notin> set cs_ \\<longrightarrow>\n                      set_clocks cs_ ts u c = u c;\n        ts = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<notin> set (a_ # cs_) \\<longrightarrow>\n                            set_clocks (a_ # cs_) ts u c = u c", "then"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c\n  ts = a' # list_", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     c \\<notin> set cs_ \\<longrightarrow> set_clocks cs_ ?ts ?u c = ?u c\n  ts = a' # list_\n\ngoal (1 subgoal):\n 1. \\<forall>c.\n       c \\<notin> set (a_ # cs_) \\<longrightarrow>\n       set_clocks (a_ # cs_) ts u c = u c", "by auto"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<notin> set (a_ # cs_) \\<longrightarrow>\n     set_clocks (a_ # cs_) ts u c = u c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<notin> set (a_ # cs_) \\<longrightarrow>\n     set_clocks (a_ # cs_) ts u c = u c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reset_set:\n  assumes \"\\<forall> c \\<in> set cs. u c = d\"\n  shows \"[cs\\<rightarrow>d](set_clocks cs ts u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [cs\\<rightarrow>d]set_clocks cs ts u = u", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ([cs\\<rightarrow>d]set_clocks cs ts u) x = u x", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. ([cs\\<rightarrow>d]set_clocks cs ts u) x = u x", "show \"([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "proof (cases \"c \\<in> set cs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n 2. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "case True"], ["proof (state)\nthis:\n  c \\<in> set cs\n\ngoal (2 subgoals):\n 1. c \\<in> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n 2. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "hence \"([cs\\<rightarrow>d]set_clocks cs ts u) c = d\""], ["proof (prove)\nusing this:\n  c \\<in> set cs\n\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = d", "using reset_set1"], ["proof (prove)\nusing this:\n  c \\<in> set cs\n  \\<forall>c\\<in>set ?cs. ([?cs\\<rightarrow>?d]?u) c = ?d\n\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = d", "by fast"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = d\n\ngoal (2 subgoals):\n 1. c \\<in> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n 2. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "also"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = d\n\ngoal (2 subgoals):\n 1. c \\<in> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n 2. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "have \"d = u c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d = u c", "using assms True"], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set cs. u c = d\n  c \\<in> set cs\n\ngoal (1 subgoal):\n 1. d = u c", "by auto"], ["proof (state)\nthis:\n  d = u c\n\ngoal (2 subgoals):\n 1. c \\<in> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n 2. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "finally"], ["proof (chain)\npicking this:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "show ?thesis"], ["proof (prove)\nusing this:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "by auto"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "case False"], ["proof (state)\nthis:\n  c \\<notin> set cs\n\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "hence \"([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c\""], ["proof (prove)\nusing this:\n  c \\<notin> set cs\n\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c", "by (simp add: reset_set11)"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c\n\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "also"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c\n\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "with False"], ["proof (chain)\npicking this:\n  c \\<notin> set cs\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c", "have \"\\<dots> = u c\""], ["proof (prove)\nusing this:\n  c \\<notin> set cs\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = set_clocks cs ts u c\n\ngoal (1 subgoal):\n 1. set_clocks cs ts u c = u c", "by (simp add: reset_set2)"], ["proof (state)\nthis:\n  set_clocks cs ts u c = u c\n\ngoal (1 subgoal):\n 1. c \\<notin> set cs \\<Longrightarrow>\n    ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "finally"], ["proof (chain)\npicking this:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "show ?thesis"], ["proof (prove)\nusing this:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n\ngoal (1 subgoal):\n 1. ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c", "by auto"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([cs\\<rightarrow>d]set_clocks cs ts u) c = u c\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation global_clock_numbering ::\n  \"('a, 'c, 't :: time, 's) ta \\<Rightarrow> ('c \\<Rightarrow> nat) \\<Rightarrow> nat \\<Rightarrow> bool\"\nwhere\n  \"global_clock_numbering A v n \\<equiv>\n    clock_numbering' v n \\<and> (\\<forall> c \\<in> clk_set A. v c \\<le> n) \\<and> (\\<forall>k\\<le>n. k > 0 \\<longrightarrow> (\\<exists>c. v c = k))\""], ["", "lemma dbm_int_abstr:\n  assumes \"\\<forall> (x, m) \\<in> collect_clock_pairs g. m \\<in> \\<int>\"\n  shows \"dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\\<in>collect_clock_pairs g. m \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "apply (induction g)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>g1 g2.\n       \\<lbrakk>\\<forall>(x, m)\\<in>collect_clock_pairs g1.\n                   m \\<in> \\<int> \\<Longrightarrow>\n                dbm_int (abstr g1 (\\<lambda>i j. \\<infinity>) v) n;\n        \\<forall>(x, m)\\<in>collect_clock_pairs g2.\n           m \\<in> \\<int> \\<Longrightarrow>\n        dbm_int (abstr g2 (\\<lambda>i j. \\<infinity>) v) n;\n        \\<forall>(x, m)\\<in>collect_clock_pairs (AND g1 g2).\n           m \\<in> \\<int>\\<rbrakk>\n       \\<Longrightarrow> dbm_int\n                          (abstr (AND g1 g2) (\\<lambda>i j. \\<infinity>) v)\n                          n\n 2. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 3. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LE x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 4. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (EQ x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (EQ x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 5. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 6. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GE x1 x2) (\\<lambda>i j. \\<infinity>) v) n", "apply auto[]"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>g1 g2 i j.\n       \\<lbrakk>dbm_int (abstr g1 (\\<lambda>i j. \\<infinity>) v) n;\n        dbm_int (abstr g2 (\\<lambda>i j. \\<infinity>) v) n;\n        \\<forall>x\\<in>collect_clock_pairs g1 \\<union>\n                       collect_clock_pairs g2.\n           case x of (x, m) \\<Rightarrow> m \\<in> \\<int>;\n        i \\<le> n; j \\<le> n;\n        min (abstr g1 (\\<lambda>i j. \\<infinity>) v i j)\n         (abstr g2 (\\<lambda>i j. \\<infinity>) v i j) \\<noteq>\n        \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (min (abstr g1 (\\<lambda>i j. \\<infinity>) v i j)\n                            (abstr g2 (\\<lambda>i j. \\<infinity>) v i j))\n                         \\<in> \\<int>\n 2. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 3. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LE x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 4. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (EQ x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (EQ x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 5. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 6. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GE x1 x2) (\\<lambda>i j. \\<infinity>) v) n", "unfolding min_def"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>g1 g2 i j.\n       \\<lbrakk>dbm_int (abstr g1 (\\<lambda>i j. \\<infinity>) v) n;\n        dbm_int (abstr g2 (\\<lambda>i j. \\<infinity>) v) n;\n        \\<forall>x\\<in>collect_clock_pairs g1 \\<union>\n                       collect_clock_pairs g2.\n           case x of (x, m) \\<Rightarrow> m \\<in> \\<int>;\n        i \\<le> n; j \\<le> n;\n        (if abstr g1 (\\<lambda>i j. \\<infinity>) v i j\n            \\<le> abstr g2 (\\<lambda>i j. \\<infinity>) v i j\n         then abstr g1 (\\<lambda>i j. \\<infinity>) v i j\n         else abstr g2 (\\<lambda>i j. \\<infinity>) v i j) \\<noteq>\n        \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> get_const\n                          (if abstr g1 (\\<lambda>i j. \\<infinity>) v i j\n                              \\<le> abstr g2 (\\<lambda>i j. \\<infinity>) v i\n                                     j\n                           then abstr g1 (\\<lambda>i j. \\<infinity>) v i j\n                           else abstr g2 (\\<lambda>i j. \\<infinity>) v i j)\n                         \\<in> \\<int>\n 2. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 3. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (LE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (LE x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 4. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (EQ x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (EQ x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 5. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GT x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GT x1 x2) (\\<lambda>i j. \\<infinity>) v) n\n 6. \\<And>x1 x2.\n       \\<forall>(x, m)\\<in>collect_clock_pairs (GE x1 x2).\n          m \\<in> \\<int> \\<Longrightarrow>\n       dbm_int (abstr (GE x1 x2) (\\<lambda>i j. \\<infinity>) v) n", "by auto"], ["", "lemma dbm_int_inv_abstr:\n  assumes \"\\<forall>(x,m) \\<in> clkp_set A. m \\<in> \\<nat>\"\n  shows \"dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n", "from assms"], ["proof (chain)\npicking this:\n  \\<forall>(x, m)\\<in>clkp_set A. m \\<in> \\<nat>", "have \"\\<forall> (x, m) \\<in> collect_clock_pairs (inv_of A l). m \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\\<in>clkp_set A. m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs (inv_of A l). m \\<in> \\<int>", "unfolding clkp_set_def collect_clki_def inv_of_def"], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\n           \\<in>\\<Union> {collect_clock_pairs (snd A x) |x. True} \\<union>\n                collect_clkt (trans_of A).\n     m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs (snd A l). m \\<in> \\<int>", "using Nats_subset_Ints"], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\n           \\<in>\\<Union> {collect_clock_pairs (snd A x) |x. True} \\<union>\n                collect_clkt (trans_of A).\n     m \\<in> \\<nat>\n  \\<nat> \\<subseteq> \\<int>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs (snd A l). m \\<in> \\<int>", "by auto"], ["proof (state)\nthis:\n  \\<forall>(x, m)\\<in>collect_clock_pairs (inv_of A l). m \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n", "from dbm_int_abstr[OF this]"], ["proof (chain)\npicking this:\n  dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) ?v) ?n", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) ?v) ?n\n\ngoal (1 subgoal):\n 1. dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n", "."], ["proof (state)\nthis:\n  dbm_int (abstr (inv_of A l) (\\<lambda>i j. \\<infinity>) v) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbm_int_guard_abstr:\n  assumes \"valid_abstraction A X k\" \"A \\<turnstile> l \\<longrightarrow>\\<^bsup>g,a,r\\<^esup> l'\"\n  shows \"dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "from assms"], ["proof (chain)\npicking this:\n  valid_abstraction A X k\n  A \\<turnstile> l \\<longrightarrow>\\<^bsup>g,a,r\\<^esup> l'", "have \"\\<forall>(x,m) \\<in> clkp_set A. m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>\""], ["proof (prove)\nusing this:\n  valid_abstraction A X k\n  A \\<turnstile> l \\<longrightarrow>\\<^bsup>g,a,r\\<^esup> l'\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>clkp_set A.\n       m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>", "by (auto elim: valid_abstraction.cases)"], ["proof (state)\nthis:\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "then"], ["proof (chain)\npicking this:\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>", "have \"\\<forall> (x, m) \\<in> collect_clock_pairs g. m \\<in> \\<int>\""], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\\<in>clkp_set A.\n     m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs g. m \\<in> \\<int>", "unfolding clkp_set_def collect_clkt_def"], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\n           \\<in>collect_clki (inv_of A) \\<union>\n                \\<Union>\n                 {collect_clock_pairs (fst (snd t)) |t. t \\<in> trans_of A}.\n     m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs g. m \\<in> \\<int>", "using assms(2) Nats_subset_Ints"], ["proof (prove)\nusing this:\n  \\<forall>(x, m)\n           \\<in>collect_clki (inv_of A) \\<union>\n                \\<Union>\n                 {collect_clock_pairs (fst (snd t)) |t. t \\<in> trans_of A}.\n     m \\<le> k x \\<and> x \\<in> X \\<and> m \\<in> \\<nat>\n  A \\<turnstile> l \\<longrightarrow>\\<^bsup>g,a,r\\<^esup> l'\n  \\<nat> \\<subseteq> \\<int>\n\ngoal (1 subgoal):\n 1. \\<forall>(x, m)\\<in>collect_clock_pairs g. m \\<in> \\<int>", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>(x, m)\\<in>collect_clock_pairs g. m \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "from dbm_int_abstr[OF this]"], ["proof (chain)\npicking this:\n  dbm_int (abstr g (\\<lambda>i j. \\<infinity>) ?v) ?n", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_int (abstr g (\\<lambda>i j. \\<infinity>) ?v) ?n\n\ngoal (1 subgoal):\n 1. dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n", "."], ["proof (state)\nthis:\n  dbm_int (abstr g (\\<lambda>i j. \\<infinity>) v) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma collect_clks_id: \"collect_clks cc = fst ` collect_clock_pairs cc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. collect_clks cc = fst ` collect_clock_pairs cc", "by (induction cc) auto"], ["", "subsection \\<open>Unused theorems\\<close>"], ["", "lemma canonical_cyc_free:\n  \"canonical M n \\<Longrightarrow> \\<forall>i \\<le> n. M i i \\<ge> \\<one> \\<Longrightarrow> cyc_free M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..n} \\<longrightarrow>\n                         \\<one> \\<le> len M i i xs", "proof (rule ccontr, auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i;\n        i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  canonical M n\n  \\<forall>i\\<le>n. \\<one> \\<le> M i i\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i;\n        i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> False", "with canonical_len[OF this(1,3,3,4)]"], ["proof (chain)\npicking this:\n  M i_ i_ \\<le> len M i_ i_ xs_\n  canonical M n\n  \\<forall>i\\<le>n. \\<one> \\<le> M i i\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_", "show False"], ["proof (prove)\nusing this:\n  M i_ i_ \\<le> len M i_ i_ xs_\n  canonical M n\n  \\<forall>i\\<le>n. \\<one> \\<le> M i i\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma canonical_cyc_free2:\n  \"canonical M n \\<Longrightarrow> cyc_free M n \\<longleftrightarrow> (\\<forall>i \\<le> n. M i i \\<ge> \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical M n \\<Longrightarrow>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len M i i xs) =\n    (\\<forall>i\\<le>n. \\<one> \\<le> M i i)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical M n;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           \\<one> \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> M i i\n 2. \\<And>i xs.\n       \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i;\n        i \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len M i i xs", "apply (simp add: cyc_free_diag_dest')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i;\n        i \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len M i i xs", "using canonical_cyc_free"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical ?M ?n; \\<forall>i\\<le>?n. \\<one> \\<le> ?M i i\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i xs.\n                       i \\<le> ?n \\<and>\n                       set xs \\<subseteq> {0..?n} \\<longrightarrow>\n                       \\<one> \\<le> len ?M i i xs\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>canonical M n; \\<forall>i\\<le>n. \\<one> \\<le> M i i;\n        i \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len M i i xs", "by blast"], ["", "lemma DBM_reset'_diag_preservation:\n  assumes \"\\<forall>k\\<le>n. M k k \\<le> \\<one>\" \"clock_numbering v\" \"\\<forall> c \\<in> set cs. v c \\<le> n\"\n  shows \"\\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set cs. v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>", "proof (induction cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k\\<le>n. reset' M n [] v d k k \\<le> \\<one>\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "case Nil"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n     \\<forall>c\\<in>set []. v c \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>k\\<le>n. reset' M n [] v d k k \\<le> \\<one>\n 2. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set []. v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. reset' M n [] v d k k \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. reset' M n [] v d k k \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "case (Cons c cs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have IH: \"\\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n   \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. reset' M n cs v d k k \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n", "have \"v c > 0\" \"v c \\<le> n\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  \\<forall>c. 0 < v c\n  \\<forall>c\\<in>set (c # cs). v c \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < v c &&& v c \\<le> n", "by auto"], ["proof (state)\nthis:\n  0 < v c\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a cs.\n       \\<lbrakk>\\<lbrakk>\\<forall>k\\<le>n. M k k \\<le> \\<one>;\n                 \\<forall>c. 0 < v c;\n                 \\<forall>c\\<in>set cs. v c \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<forall>k\\<le>n.\n                                     reset' M n cs v d k k \\<le> \\<one>;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; \\<forall>c. 0 < v c;\n        \\<forall>c\\<in>set (a # cs). v c \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k\\<le>n.\n                            reset' M n (a # cs) v d k k \\<le> \\<one>", "from DBM_reset_diag_preservation[of n \"reset' M n cs v d\", OF IH DBM_reset_reset, of \"v c\", OF this]"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. reset (reset' M n cs v d) n (v c) ?d k k \\<le> \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. reset (reset' M n cs v d) n (v c) ?d k k \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>n. reset' M n (c # cs) v d k k \\<le> \\<one>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<le>n. reset' M n (c # cs) v d k k \\<le> \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}