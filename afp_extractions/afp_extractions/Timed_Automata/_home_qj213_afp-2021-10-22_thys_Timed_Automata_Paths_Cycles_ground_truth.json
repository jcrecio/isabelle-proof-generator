{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/Paths_Cycles.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma length_eq_distinct:\n  assumes \"set xs = set ys\" \"distinct xs\" \"length xs = length ys\"\n  shows \"distinct ys\"", "lemma arcs'_decomp:\n  \"length xs > 1 \\<Longrightarrow> (i, j) \\<in> arcs' xs \\<Longrightarrow> \\<exists> zs ys. xs = zs @ i # j # ys\"", "lemma arcs_decomp_tail:\n  \"arcs j l (ys @ [i]) = arcs j i ys @ [(i, l)]\"", "lemma arcs_decomp: \"xs = ys @ y # zs \\<Longrightarrow> arcs x z xs = arcs x y ys @ arcs y z zs\"", "lemma distinct_arcs_ex:\n  \"distinct xs \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> xs \\<noteq> [] \\<Longrightarrow> \\<exists> a b. a \\<noteq> x \\<and> (a,b) \\<in> set (arcs i j xs)\"", "lemma cycle_rotate_2_aux:\n  \"(i, j) \\<in> set (arcs a b (xs @ [c])) \\<Longrightarrow> (i,j) \\<noteq> (c,b) \\<Longrightarrow> (i, j) \\<in> set (arcs a c xs)\"", "lemma arcs_set_elem1:\n  assumes \"j \\<noteq> k\" \"k \\<in> set (i # xs)\"\n  shows \"\\<exists> l. (k, l) \\<in> set (arcs i j xs)\"", "lemma arcs_set_elem2:\n  assumes \"i \\<noteq> k\" \"k \\<in> set (j # xs)\"\n  shows \"\\<exists> l. (l, k) \\<in> set (arcs i j xs)\"", "lemmas (in linordered_ab_monoid_add) comm = add.commute", "lemma len_add:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  shows \"len M i j xs + len M i j xs = len (\\<lambda>i j. M i j + M i j) i j xs\"", "lemma fw_canonical:\n \"cycle_free m n \\<Longrightarrow> canonical (fw m n n n n) n\"", "lemma canonical_len:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> M i j \\<le> len M i j xs\"", "lemma cycle_rotate:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs) \\<and> xs = zs @ i # j # ys\"", "lemma cycle_rotate_2:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\"", "lemma cycle_rotate_len_arcs:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\"", "lemma cycle_rotate_2':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs)\n             \\<and> 1 + length ys = length xs \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\"", "lemma negative_cycle_dest_diag:\n  \"\\<not> cycle_free M n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>\"", "lemma cycle_free_diag_intro:\n  \"cyc_free M n \\<Longrightarrow> cycle_free M n\"", "lemma cycle_free_diag_equiv:\n  \"cyc_free M n \\<longleftrightarrow> cycle_free M n\"", "lemma cycle_free_diag_dest:\n  \"cycle_free M n \\<Longrightarrow> cyc_free M n\"", "lemma cyc_free_diag_dest:\n  assumes \"cyc_free M n\" \"i \\<le> n\" \"set xs \\<subseteq> {0..n}\"\n  shows \"len M i i xs \\<ge> \\<one>\"", "lemma cycle_free_0_0:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes \"cycle_free M n\"\n  shows \"M 0 0 \\<ge> \\<one>\"", "lemma D_cycle_free_len_dest:\n  \"cycle_free m n\n    \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys\"", "lemma D_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> cyc_free m' n\"", "lemma FW_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> cyc_free (FW m n) n\"", "lemma cyc_free_diag_dest':\n  \"cyc_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> m i i \\<ge> \\<one>\"", "lemma FW_diag_neutral_preservation:\n  \"\\<forall> i \\<le> n. M i i = \\<one> \\<Longrightarrow> cyc_free M n \\<Longrightarrow> \\<forall> i\\<le>n. (FW M n) i i = \\<one>\"", "lemma FW_fixed_preservation:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes A: \"i \\<le> n\" \"M 0 i + M i 0 = \\<one>\" \"canonical (FW M n) n\" \"cyc_free (FW M n) n\"\n  shows \"FW M n 0 i + FW M n i 0 = \\<one>\"", "lemma diag_cyc_free_neutral:\n  \"cyc_free M n \\<Longrightarrow> \\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> \\<forall>i\\<le>n. M i i = \\<one>\"", "lemma fw_upd_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw_upd M k i j = M\"", "lemma fw_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw M n k i j = M\"", "lemmas FW_canonical_id = fw_canonical_id[OF _ order.refl order.refl order.refl]", "lemma aux1: \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<le> n \\<and> b \\<le> n\"", "lemma arcs_distinct1:\n  \"i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs \\<Longrightarrow> xs \\<noteq> [] \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<noteq> b\"", "lemma arcs_distinct2:\n  \"i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<noteq> b\"", "lemma arcs_distinct3: \"distinct (a # b # c # xs) \\<Longrightarrow> (i,j) \\<in> set (arcs a b xs) \\<Longrightarrow> i \\<noteq> c \\<and> j \\<noteq> c\"", "lemma arcs_elem:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" shows \"a \\<in> set (i # xs)\" \"b \\<in> set (j # xs)\"", "lemma arcs_distinct_dest1:\n  \"distinct (i # a # zs) \\<Longrightarrow> (b,c) \\<in> set (arcs a j zs) \\<Longrightarrow> b \\<noteq> i\"", "lemma arcs_distinct_fix:\n  \"distinct (a # x # xs @ [b]) \\<Longrightarrow> (a,c) \\<in> set (arcs a b (x # xs)) \\<Longrightarrow> c = x\"", "lemma disjE3: \"A \\<or> B \\<or> C \\<Longrightarrow> (A \\<Longrightarrow> G) \\<Longrightarrow> (B \\<Longrightarrow> G) \\<Longrightarrow> (C \\<Longrightarrow> G) \\<Longrightarrow> G\"", "lemma arcs_predecessor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\"\n  shows \"\\<exists> c. (c, a) \\<in> set (arcs i j xs)\"", "lemma arcs_successor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\"\n  shows \"\\<exists> c. (b,c) \\<in> set (arcs i j xs)\"", "lemma arcs_predecessor':\n  assumes \"(a, b) \\<in> set (arcs i j (x # xs))\" \"(a,b) \\<noteq> (i, x)\"\n  shows \"\\<exists> c. (c, a) \\<in> set (arcs i j (x # xs))\"", "lemma arcs_cases:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"xs \\<noteq> []\"\n  shows \"(\\<exists> ys. xs = b # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a] \\<and> b = j)\n       \\<or> (\\<exists> c d ys. (a,b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\"", "lemma arcs_cases':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"xs \\<noteq> []\"\n  shows \"(\\<exists> ys. xs = b # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a] \\<and> b = j) \\<or> (\\<exists> ys zs. xs = ys @ a # b # zs)\"", "lemma arcs_successor':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\"\n  shows \"\\<exists> c. xs = [b] \\<and> a = i \\<or> (\\<exists> ys. xs = b # c # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a,b] \\<and> c = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ a # b # c # zs)\"", "lemma list_last:\n  \"xs = [] \\<or> (\\<exists> y ys. xs = ys @ [y])\"", "lemma arcs_predecessor'':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\"\n shows \"\\<exists> c. xs = [a] \\<or> (\\<exists> ys. xs = a # b # ys) \\<or> (\\<exists> ys. xs = ys @ [c,a] \\<and> b = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ c # a # b # zs)\"", "lemma arcs_ex_middle:\n  \"\\<exists> b. (a, b) \\<in> set (arcs i j (ys @ a # xs))\"", "lemma arcs_ex_head:\n  \"\\<exists> b. (i, b) \\<in> set (arcs i j xs)\"", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, Suc 0]\"", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0]\"", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0]\"", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0, Suc 0]\"", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, 0, Suc 0, Suc 0]\"", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0, 0, Suc 0]\"", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, Suc 0, 0, Suc 0]\"", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [0, 0, Suc 0, 0]\"", "lemma successive_step: \"successive P (x # xs) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P xs\"", "lemma successive_step_2: \"successive P (x # y # xs) \\<Longrightarrow> \\<not> P y \\<Longrightarrow> successive P xs\"", "lemma successive_stepI:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (x # xs)\"", "theorem list_two_induct[case_names Nil Single Cons]:\n  fixes P :: \"'a list \\<Rightarrow> bool\" \n    and list :: \"'a list\" \n  assumes Nil: \"P []\"\n  assumes Single: \"\\<And> x. P [x]\"\n    and Cons: \"\\<And>x1 x2 xs. P xs \\<Longrightarrow> P (x2 # xs) \\<Longrightarrow> P (x1 # x2 # xs)\"\n  shows \"P xs\"", "lemma successive_end_1:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x])\"", "lemma successive_ends_1:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P ys \\<Longrightarrow> successive P (xs @ x # ys)\"", "lemma successive_ends_1':\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P z \\<Longrightarrow> successive P ys \\<Longrightarrow> successive P (xs @ x # y # z # ys)\"", "lemma successive_end_2:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x,y])\"", "lemma successive_end_2':\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x,y])\"", "lemma successive_end_3:\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P z \\<Longrightarrow> successive P (xs @ [x,y,z])\"", "lemma successive_step_rev:\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P xs\"", "lemma successive_glue:\n  \"successive P (zs @ [z]) \\<Longrightarrow> successive P (x # xs) \\<Longrightarrow> \\<not> P z \\<or> \\<not> P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)\"", "lemma successive_glue':\n  \"successive P (zs @ [y]) \\<and> \\<not> P z \\<or> successive P zs \\<and> \\<not> P y \n  \\<Longrightarrow> successive P (x # xs) \\<and> \\<not> P w \\<or> successive P xs \\<and> \\<not> P x\n  \\<Longrightarrow> \\<not> P z \\<or> \\<not> P w \\<Longrightarrow> successive P (zs @ y # z # w # x # xs)\"", "lemma successive_dest_head:\n  \"xs = w # x # ys \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P (x # xs) \\<and> \\<not> P w \\<or> successive P xs \\<and> \\<not> P x\"", "lemma successive_dest_tail:\n  \"xs = zs @ [y,z] \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or> successive P zs \\<and> \\<not> P y\"", "lemma successive_split:\n  \"xs = ys @ zs \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P ys \\<and> successive P zs\"", "lemma successive_decomp:\n  \"xs = x # ys @ zs @ [z] \\<Longrightarrow> successive P xs \\<Longrightarrow> \\<not> P x \\<or> \\<not> P z \\<Longrightarrow> successive P (zs @ [z] @ (x # ys))\"", "lemma successive_predecessor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\" \"successive P (arcs i j xs)\" \"P (a,b)\" \"xs \\<noteq> []\"\n shows \"\\<exists> c. (xs = [a] \\<and> c = i \\<or> (\\<exists> ys. xs = a # b # ys \\<and> c = i) \\<or> (\\<exists> ys. xs = ys @ [c,a] \\<and> b = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ c # a # b # zs)) \\<and> \\<not> P (c,a)\"", "lemma successive_successor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\" \"successive P (arcs i j xs)\" \"P (a,b)\" \"xs \\<noteq> []\"\n shows \"\\<exists> c. (xs = [b] \\<and> c = j \\<or> (\\<exists> ys. xs = b # c # ys) \\<or> (\\<exists> ys. xs = ys @ [a,b] \\<and> c = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ a # b # c # zs)) \\<and> \\<not> P (b,c)\"", "lemmas add_mono_right = add_mono[OF order_refl]", "lemmas add_mono_left  = add_mono[OF _ order_refl]", "lemma canonical_successive:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\" \"j \\<le> n\"\n  shows \"\\<exists> ys. len M i j ys \\<le> len M i j xs \\<and> set ys \\<subseteq> {0..n}\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs i j ys)\"", "lemma canonical_successive_distinct:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\" \"j \\<le> n\"\n  assumes \"distinct xs\" \"i \\<notin> set xs\" \"j \\<notin> set xs\"\n  shows \"\\<exists> ys. len M i j ys \\<le> len M i j xs \\<and> set ys \\<subseteq> set xs\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs i j ys)\n               \\<and> distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\"", "lemma successive_snd_last: \"successive P (xs @ [x, y]) \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P x\"", "lemma canonical_shorten_rotate_neg_cycle:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\"\n  assumes \"len M i i xs < \\<one>\"\n  shows \"\\<exists> j ys. len M j j ys < \\<one> \\<and> set (j # ys) \\<subseteq> set (i # xs)\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs j j ys)\n               \\<and> distinct ys \\<and> j \\<notin> set ys \\<and>\n               (ys \\<noteq> [] \\<longrightarrow> M j (hd ys) \\<noteq> A j (hd ys) \\<or> M (last ys) j \\<noteq> A (last ys) j)\"", "lemma successive_arcs_extend_last:\n  \"successive P (arcs i j xs) \\<Longrightarrow> \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j) \\<Longrightarrow> xs \\<noteq> []\n  \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\"", "lemma cycle_rotate_arcs:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\"", "lemma cycle_rotate_len_arcs_successive:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\n                \\<and> successive P (arcs i i (j # ys @ a # zs))\"", "lemma successive_successors:\n  \"xs = ys @ a # b # c # zs \\<Longrightarrow> successive P (arcs i j xs) \\<Longrightarrow> \\<not> P (a,b) \\<or> \\<not> P (b, c)\"", "lemma successive_successors':\n  \"xs = ys @ a # b # zs \\<Longrightarrow> successive P xs \\<Longrightarrow> \\<not> P a \\<or> \\<not> P b\"", "lemma cycle_rotate_len_arcs_successive':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\" \"successive P (arcs a a xs)\"\n          \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\n                \\<and> successive P (arcs i i (j # ys @ a # zs) @ [(i,j)])\"", "lemma cycle_rotate_3:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs) \\<and> 1 + length ys = length xs\n             \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\n             \\<and> successive P (arcs i i (j # ys))\"", "lemma cycle_rotate_3':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs) \\<and> 1 + length ys = length xs\n             \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\n             \\<and> successive P (arcs i i (j # ys) @ [(i, j)])\""], "translations": [["", "lemma length_eq_distinct:\n  assumes \"set xs = set ys\" \"distinct xs\" \"length xs = length ys\"\n  shows \"distinct ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct ys", "using assms card_distinct distinct_card"], ["proof (prove)\nusing this:\n  set xs = set ys\n  distinct xs\n  length xs = length ys\n  card (set ?xs) = length ?xs \\<Longrightarrow> distinct ?xs\n  distinct ?xs \\<Longrightarrow> card (set ?xs) = length ?xs\n\ngoal (1 subgoal):\n 1. distinct ys", "by fastforce"], ["", "section \\<open>Arcs\\<close>"], ["", "fun arcs :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat list \\<Rightarrow> (nat * nat) list\" where\n  \"arcs a b [] = [(a,b)]\" |\n  \"arcs a b (x # xs) = (a, x) # arcs x b xs\""], ["", "definition arcs' :: \"nat list \\<Rightarrow> (nat * nat) set\" where\n  \"arcs' xs = set (arcs (hd xs) (last xs) (butlast (tl xs)))\""], ["", "lemma arcs'_decomp:\n  \"length xs > 1 \\<Longrightarrow> (i, j) \\<in> arcs' xs \\<Longrightarrow> \\<exists> zs ys. xs = zs @ i # j # ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys", "proof (induction xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 < length []; (i, j) \\<in> arcs' []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. [] = zs @ i # j # ys\n 2. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "case Nil"], ["proof (state)\nthis:\n  1 < length []\n  (i, j) \\<in> arcs' []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 < length []; (i, j) \\<in> arcs' []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. [] = zs @ i # j # ys\n 2. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "thus ?case"], ["proof (prove)\nusing this:\n  1 < length []\n  (i, j) \\<in> arcs' []\n\ngoal (1 subgoal):\n 1. \\<exists>zs ys. [] = zs @ i # j # ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs ys. [] = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys\n  1 < length (x # xs)\n  (i, j) \\<in> arcs' (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys\n  1 < length (x # xs)\n  (i, j) \\<in> arcs' (x # xs)", "have \"length xs > 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys\n  1 < length (x # xs)\n  (i, j) \\<in> arcs' (x # xs)\n\ngoal (1 subgoal):\n 1. 0 < length xs", "by auto"], ["proof (state)\nthis:\n  0 < length xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  0 < length xs", "obtain y ys where xs: \"xs = y # ys\""], ["proof (prove)\nusing this:\n  0 < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>y ys. xs = y # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Suc_length_conv less_imp_Suc_add)"], ["proof (state)\nthis:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys;\n        1 < length (a # xs); (i, j) \\<in> arcs' (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs ys. a # xs = zs @ i # j # ys", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>zs ys. x # xs = zs @ i # j # ys", "proof (cases \"(i, j) = (x, y)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (i, j) = (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "case True"], ["proof (state)\nthis:\n  (i, j) = (x, y)\n\ngoal (2 subgoals):\n 1. (i, j) = (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "with xs"], ["proof (chain)\npicking this:\n  xs = y # ys\n  (i, j) = (x, y)", "have \"x # xs = [] @ i # j # ys\""], ["proof (prove)\nusing this:\n  xs = y # ys\n  (i, j) = (x, y)\n\ngoal (1 subgoal):\n 1. x # xs = [] @ i # j # ys", "by simp"], ["proof (state)\nthis:\n  x # xs = [] @ i # j # ys\n\ngoal (2 subgoals):\n 1. (i, j) = (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  x # xs = [] @ i # j # ys", "show ?thesis"], ["proof (prove)\nusing this:\n  x # xs = [] @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>zs ys. x # xs = zs @ i # j # ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs ys. x # xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "case False"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (x, y)\n\ngoal (1 subgoal):\n 1. (i, j) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (x, y)\n\ngoal (1 subgoal):\n 1. \\<exists>zs ys. x # xs = zs @ i # j # ys", "proof (cases \"length ys > 0\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. \\<lbrakk>(i, j) \\<noteq> (x, y); \\<not> 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "case 2"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (x, y)\n  \\<not> 0 < length ys\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. \\<lbrakk>(i, j) \\<noteq> (x, y); \\<not> 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (x, y)\n  \\<not> 0 < length ys", "have \"ys = []\""], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (x, y)\n  \\<not> 0 < length ys\n\ngoal (1 subgoal):\n 1. ys = []", "by auto"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. \\<lbrakk>(i, j) \\<noteq> (x, y); \\<not> 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  ys = []", "have \"arcs' (x#xs) = {(x,y)}\""], ["proof (prove)\nusing this:\n  ys = []\n\ngoal (1 subgoal):\n 1. arcs' (x # xs) = {(x, y)}", "using xs"], ["proof (prove)\nusing this:\n  ys = []\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. arcs' (x # xs) = {(x, y)}", "by (auto simp add: arcs'_def)"], ["proof (state)\nthis:\n  arcs' (x # xs) = {(x, y)}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys\n 2. \\<lbrakk>(i, j) \\<noteq> (x, y); \\<not> 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "with Cons.prems(2) 2(1)"], ["proof (chain)\npicking this:\n  (i, j) \\<in> arcs' (x # xs)\n  (i, j) \\<noteq> (x, y)\n  arcs' (x # xs) = {(x, y)}", "show ?case"], ["proof (prove)\nusing this:\n  (i, j) \\<in> arcs' (x # xs)\n  (i, j) \\<noteq> (x, y)\n  arcs' (x # xs) = {(x, y)}\n\ngoal (1 subgoal):\n 1. \\<exists>zs ys. x # xs = zs @ i # j # ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs ys. x # xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "case True"], ["proof (state)\nthis:\n  0 < length ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "with xs Cons.prems(2) False"], ["proof (chain)\npicking this:\n  xs = y # ys\n  (i, j) \\<in> arcs' (x # xs)\n  (i, j) \\<noteq> (x, y)\n  0 < length ys", "have \"(i, j) \\<in> arcs' xs\""], ["proof (prove)\nusing this:\n  xs = y # ys\n  (i, j) \\<in> arcs' (x # xs)\n  (i, j) \\<noteq> (x, y)\n  0 < length ys\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "by (auto simp add: arcs'_def)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "with Cons.IH[OF _ this] True xs"], ["proof (chain)\npicking this:\n  1 < length xs \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys\n  0 < length ys\n  xs = y # ys\n  (i, j) \\<in> arcs' xs", "obtain zs ys where \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  1 < length xs \\<Longrightarrow> \\<exists>zs ys. xs = zs @ i # j # ys\n  0 < length ys\n  xs = y # ys\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys__\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  xs = zs @ i # j # ys", "have \"x # xs = (x # zs) @ i # j # ys\""], ["proof (prove)\nusing this:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. x # xs = (x # zs) @ i # j # ys", "by simp"], ["proof (state)\nthis:\n  x # xs = (x # zs) @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (x, y); 0 < length ys__\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs ys. x # xs = zs @ i # j # ys", "then"], ["proof (chain)\npicking this:\n  x # xs = (x # zs) @ i # j # ys", "show ?thesis"], ["proof (prove)\nusing this:\n  x # xs = (x # zs) @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>zs ys. x # xs = zs @ i # j # ys", "by blast"], ["proof (state)\nthis:\n  \\<exists>zs ys. x # xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs ys. x # xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs ys. x # xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcs_decomp_tail:\n  \"arcs j l (ys @ [i]) = arcs j i ys @ [(i, l)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcs j l (ys @ [i]) = arcs j i ys @ [(i, l)]", "by (induction ys arbitrary: j) auto"], ["", "lemma arcs_decomp: \"xs = ys @ y # zs \\<Longrightarrow> arcs x z xs = arcs x y ys @ arcs y z zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = ys @ y # zs \\<Longrightarrow>\n    arcs x z xs = arcs x y ys @ arcs y z zs", "by (induction ys arbitrary: x xs) simp+"], ["", "lemma distinct_arcs_ex:\n  \"distinct xs \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> xs \\<noteq> [] \\<Longrightarrow> \\<exists> a b. a \\<noteq> x \\<and> (a,b) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; i \\<notin> set xs; xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs)", "apply (induction xs arbitrary: i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>distinct []; i \\<notin> set []; [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            a \\<noteq> x \\<and>\n                            (a, b) \\<in> set (arcs i j [])\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs);\n        a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs);\n        a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "apply (rename_tac a xs i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs);\n        a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs); a # xs \\<noteq> [];\n        xs = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))\n 2. \\<And>a xs i aa list.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs); a # xs \\<noteq> [];\n        xs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs i.\n       \\<lbrakk>i \\<noteq> a; xs = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            aa \\<noteq> x \\<and>\n                            (\\<exists>b.\n                                aa = i \\<and> b = a \\<or>\n                                aa = a \\<and> b = j)\n 2. \\<And>a xs i aa list.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs); a # xs \\<noteq> [];\n        xs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "apply metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs i aa list.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>distinct xs; i \\<notin> set xs;\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  a \\<noteq> x \\<and> (a, b) \\<in> set (arcs i j xs);\n        distinct (a # xs); i \\<notin> set (a # xs); a # xs \\<noteq> [];\n        xs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            aa \\<noteq> x \\<and>\n                            (aa, b) \\<in> set (arcs i j (a # xs))", "by auto"], ["", "lemma cycle_rotate_2_aux:\n  \"(i, j) \\<in> set (arcs a b (xs @ [c])) \\<Longrightarrow> (i,j) \\<noteq> (c,b) \\<Longrightarrow> (i, j) \\<in> set (arcs a c xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<in> set (arcs a b (xs @ [c]));\n     (i, j) \\<noteq> (c, b)\\<rbrakk>\n    \\<Longrightarrow> (i, j) \\<in> set (arcs a c xs)", "by (induction xs arbitrary: a) auto"], ["", "lemma arcs_set_elem1:\n  assumes \"j \\<noteq> k\" \"k \\<in> set (i # xs)\"\n  shows \"\\<exists> l. (k, l) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. (k, l) \\<in> set (arcs i j xs)", "using assms"], ["proof (prove)\nusing this:\n  j \\<noteq> k\n  k \\<in> set (i # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (k, l) \\<in> set (arcs i j xs)", "by (induction xs arbitrary: i) auto"], ["", "lemma arcs_set_elem2:\n  assumes \"i \\<noteq> k\" \"k \\<in> set (j # xs)\"\n  shows \"\\<exists> l. (l, k) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. (l, k) \\<in> set (arcs i j xs)", "using assms"], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  k \\<in> set (j # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (l, k) \\<in> set (arcs i j xs)", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<noteq> k; k \\<in> set [j]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j [])\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>l.\n  (l, k) \\<in> set (arcs i j xs);\n        i \\<noteq> k; k \\<in> set (j # a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j (a # xs))", "case Nil"], ["proof (state)\nthis:\n  i \\<noteq> k\n  k \\<in> set [j]\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<noteq> k; k \\<in> set [j]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j [])\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>l.\n  (l, k) \\<in> set (arcs i j xs);\n        i \\<noteq> k; k \\<in> set (j # a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j (a # xs))", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> k\n  k \\<in> set [j]", "show ?case"], ["proof (prove)\nusing this:\n  i \\<noteq> k\n  k \\<in> set [j]\n\ngoal (1 subgoal):\n 1. \\<exists>l. (l, k) \\<in> set (arcs i j [])", "by simp"], ["proof (state)\nthis:\n  \\<exists>l. (l, k) \\<in> set (arcs i j [])\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>l.\n  (l, k) \\<in> set (arcs i j xs);\n        i \\<noteq> k; k \\<in> set (j # a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j (a # xs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>l.\n  (l, k) \\<in> set (arcs i j xs);\n        i \\<noteq> k; k \\<in> set (j # a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j (a # xs))", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>?i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs ?i j xs)\n  i \\<noteq> k\n  k \\<in> set (j # x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>l.\n  (l, k) \\<in> set (arcs i j xs);\n        i \\<noteq> k; k \\<in> set (j # a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs i j (a # xs))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs ?i j xs)\n  i \\<noteq> k\n  k \\<in> set (j # x # xs)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<noteq> k; k \\<in> set (j # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l. (l, k) \\<in> set (arcs ?i j xs)\n  i \\<noteq> k\n  k \\<in> set (j # x # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>l. (l, k) \\<in> set (arcs i j (x # xs))", "by (cases \"k = x\") auto"], ["proof (state)\nthis:\n  \\<exists>l. (l, k) \\<in> set (arcs i j (x # xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Length of Paths\\<close>"], ["", "lemmas (in linordered_ab_monoid_add) comm = add.commute"], ["", "lemma len_add:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  shows \"len M i j xs + len M i j xs = len (\\<lambda>i j. M i j + M i j) i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M i j xs + len M i j xs = len (\\<lambda>i j. M i j + M i j) i j xs", "proof (induction xs arbitrary: i j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       len M i j [] + len M i j [] =\n       len (\\<lambda>i j. M i j + M i j) i j []\n 2. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       len M i j [] + len M i j [] =\n       len (\\<lambda>i j. M i j + M i j) i j []\n 2. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. len M i j [] + len M i j [] = len (\\<lambda>i j. M i j + M i j) i j []", "by auto"], ["proof (state)\nthis:\n  len M i j [] + len M i j [] = len (\\<lambda>i j. M i j + M i j) i j []\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  len M ?i ?j xs + len M ?i ?j xs =\n  len (\\<lambda>i j. M i j + M i j) ?i ?j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "have \"M i x + len M x j xs + (M i x + len M x j xs) = M i x + (len M x j xs + M i x) + len M x j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M i x + len M x j xs + (M i x + len M x j xs) =\n    M i x + (len M x j xs + M i x) + len M x j xs", "by (simp add: assoc)"], ["proof (state)\nthis:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + (len M x j xs + M i x) + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "also"], ["proof (state)\nthis:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + (len M x j xs + M i x) + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "have \"\\<dots> = M i x + (M i x + len M x j xs) + len M x j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M i x + (len M x j xs + M i x) + len M x j xs =\n    M i x + (M i x + len M x j xs) + len M x j xs", "by (simp add: comm)"], ["proof (state)\nthis:\n  M i x + (len M x j xs + M i x) + len M x j xs =\n  M i x + (M i x + len M x j xs) + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "also"], ["proof (state)\nthis:\n  M i x + (len M x j xs + M i x) + len M x j xs =\n  M i x + (M i x + len M x j xs) + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "have \"\\<dots> = (M i x + M i x) + (len M x j xs + len M x j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M i x + (M i x + len M x j xs) + len M x j xs =\n    M i x + M i x + (len M x j xs + len M x j xs)", "by (simp add: assoc)"], ["proof (state)\nthis:\n  M i x + (M i x + len M x j xs) + len M x j xs =\n  M i x + M i x + (len M x j xs + len M x j xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "finally"], ["proof (chain)\npicking this:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + M i x + (len M x j xs + len M x j xs)", "have \"M i x + len M x j xs + (M i x + len M x j xs)\n                = (M i x + M i x) + len (\\<lambda>i j. M i j + M i j) x j xs\""], ["proof (prove)\nusing this:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + M i x + (len M x j xs + len M x j xs)\n\ngoal (1 subgoal):\n 1. M i x + len M x j xs + (M i x + len M x j xs) =\n    M i x + M i x + len (\\<lambda>i j. M i j + M i j) x j xs", "using Cons"], ["proof (prove)\nusing this:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + M i x + (len M x j xs + len M x j xs)\n  len M ?i ?j xs + len M ?i ?j xs =\n  len (\\<lambda>i j. M i j + M i j) ?i ?j xs\n\ngoal (1 subgoal):\n 1. M i x + len M x j xs + (M i x + len M x j xs) =\n    M i x + M i x + len (\\<lambda>i j. M i j + M i j) x j xs", "by simp"], ["proof (state)\nthis:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + M i x + len (\\<lambda>i j. M i j + M i j) x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i j.\n       (\\<And>i j.\n           len M i j xs + len M i j xs =\n           len (\\<lambda>i j. M i j + M i j) i j xs) \\<Longrightarrow>\n       len M i j (a # xs) + len M i j (a # xs) =\n       len (\\<lambda>i j. M i j + M i j) i j (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  M i x + len M x j xs + (M i x + len M x j xs) =\n  M i x + M i x + len (\\<lambda>i j. M i j + M i j) x j xs\n\ngoal (1 subgoal):\n 1. len M i j (x # xs) + len M i j (x # xs) =\n    len (\\<lambda>i j. M i j + M i j) i j (x # xs)", "by simp"], ["proof (state)\nthis:\n  len M i j (x # xs) + len M i j (x # xs) =\n  len (\\<lambda>i j. M i j + M i j) i j (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Canonical Matrices\\<close>"], ["", "abbreviation\n  \"canonical M n \\<equiv> \\<forall> i j k. i \\<le> n \\<and> j \\<le> n \\<and> k \\<le> n \\<longrightarrow> M i k \\<le> M i j + M j k\""], ["", "lemma fw_canonical:\n \"cycle_free m n \\<Longrightarrow> canonical (fw m n n n n) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free m n \\<Longrightarrow> canonical (fw m n n n n) n", "proof (clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j k.\n       \\<lbrakk>cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n n n n i k\n                         \\<le> fw m n n n n i j + fw m n n n n j k", "case 1"], ["proof (state)\nthis:\n  cycle_free m n\n  i_ \\<le> n\n  j_ \\<le> n\n  k_ \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j k.\n       \\<lbrakk>cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n n n n i k\n                         \\<le> fw m n n n n i j + fw m n n n n j k", "with fw_shortest[OF \\<open>cycle_free m n\\<close>]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n ?i ?j\n                    \\<le> fw m n n n n ?i ?k + fw m n n n n ?k ?j\n  cycle_free m n\n  i_ \\<le> n\n  j_ \\<le> n\n  k_ \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n n n ?i ?j\n                    \\<le> fw m n n n n ?i ?k + fw m n n n n ?k ?j\n  cycle_free m n\n  i_ \\<le> n\n  j_ \\<le> n\n  k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n n n n i_ k_ \\<le> fw m n n n n i_ j_ + fw m n n n n j_ k_", "by auto"], ["proof (state)\nthis:\n  fw m n n n n i_ k_ \\<le> fw m n n n n i_ j_ + fw m n n n n j_ k_\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma canonical_len:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> M i j \\<le> len M i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n     set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> M i j \\<le> len M i j xs", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case Nil"], ["proof (state)\nthis:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j []", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> len M i j []\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}", "have \"M x j \\<le> len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M x j \\<le> len M x j xs", "by auto"], ["proof (state)\nthis:\n  M x j \\<le> len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "from Cons.prems \\<open>canonical M n\\<close>"], ["proof (chain)\npicking this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  canonical M n", "have \"M i j \\<le> M i x + M x j\""], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  canonical M n\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "by simp"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "also"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j", "have \"\\<dots> \\<le> M i x + len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. M i x + M x j \\<le> M i x + len M x j xs", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  M i x + M x j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "finally"], ["proof (chain)\npicking this:\n  M i j \\<le> M i x + len M x j xs", "show ?case"], ["proof (prove)\nusing this:\n  M i j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j (x # xs)", "by simp"], ["proof (state)\nthis:\n  M i j \\<le> len M i j (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Cycle Rotation\\<close>"], ["", "lemma cycle_rotate:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs) \\<and> xs = zs @ i # j # ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       xs = zs @ i # j # ys", "using assms"], ["proof (prove)\nusing this:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       xs = zs @ i # j # ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "assume A: \"length xs > 1\" \"(i, j) \\<in> arcs' xs\""], ["proof (state)\nthis:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "from arcs'_decomp[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>zs ys. xs = zs @ i # j # ys", "obtain ys zs where xs: \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  \\<exists>zs ys. xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "from len_decomp[OF this, of M a a]"], ["proof (chain)\npicking this:\n  len M a a xs = len M a i zs + len M i a (j # ys)", "have \"len M a a xs = len M a i zs + len M i a (j # ys)\""], ["proof (prove)\nusing this:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. len M a a xs = len M a i zs + len M i a (j # ys)", "."], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "also"], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "have \"\\<dots> = len M i a (j # ys) + len M a i zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs", "by (simp add: comm)"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "also"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "from len_comp[of M i i \"j # ys\" a zs]"], ["proof (chain)\npicking this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs", "have \"\\<dots> = len M i i (j # ys @ a # zs)\""], ["proof (prove)\nusing this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)", "by auto"], ["proof (state)\nthis:\n  len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         xs = zs @ i # j # ys", "finally"], ["proof (chain)\npicking this:\n  len M a a xs = len M i i (j # ys @ a # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       xs = zs @ i # j # ys", "using xs"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       xs = zs @ i # j # ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and> xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_2:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "using assms"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "assume A:\"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\""], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "{"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "fix ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "assume A:\"a = i\" \"xs = j # ys\""], ["proof (state)\nthis:\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  a = i\n  xs = j # ys", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "fix b ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "assume A:\"a = j\" \"xs = ys @ [i]\""], ["proof (state)\nthis:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  a = j\n  xs = ys @ [i]", "have ?thesis"], ["proof (prove)\nusing this:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         set ysa\n                         \\<subseteq> insert j (insert i (set ys)) \\<and>\n                         length ysa < Suc (length ys)", "case 1"], ["proof (state)\nthis:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         set ysa\n                         \\<subseteq> insert j (insert i (set ys)) \\<and>\n                         length ysa < Suc (length ys)", "have \"len M j j (ys @ [i]) = M i j + len M j i ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "using len_decomp[of \"ys @ [i]\" ys i \"[]\" M j j]"], ["proof (prove)\nusing this:\n  ys @ [i] = ys @ [i] \\<Longrightarrow>\n  len M j j (ys @ [i]) = len M j i ys + len M i j []\n\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "by (auto simp: comm)"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         set ysa\n                         \\<subseteq> insert j (insert i (set ys)) \\<and>\n                         length ysa < Suc (length ys)", "thus ?case"], ["proof (prove)\nusing this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n       set ysa \\<subseteq> insert j (insert i (set ys)) \\<and>\n       length ysa < Suc (length ys)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n     set ysa \\<subseteq> insert j (insert i (set ys)) \\<and>\n     length ysa < Suc (length ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "note ** = this"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "assume \"length xs = 1\""], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  length xs = 1", "obtain b where xs: \"xs = [b]\""], ["proof (prove)\nusing this:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b. xs = [b] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis One_nat_def length_0_conv length_Suc_conv)"], ["proof (state)\nthis:\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "with A(2)"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]", "have \"a = i \\<and> b = j \\<or> a = j \\<and> b = i\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]\n\ngoal (1 subgoal):\n 1. a = i \\<and> b = j \\<or> a = j \\<and> b = i", "by auto"], ["proof (state)\nthis:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "using * ** xs"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "}"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "note *** = this"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<noteq> []; (i, j) \\<in> set (arcs a a xs)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof (cases \"length xs = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "case True"], ["proof (state)\nthis:\n  length xs = 0\n\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "with A"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  length xs = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  length xs = 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "case False"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof (cases \"length xs = 1\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case True"], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "with ***"], ["proof (chain)\npicking this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n  length xs = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case 2"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "hence \"length xs > 1\""], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < length xs", "by linarith"], ["proof (state)\nthis:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  1 < length xs", "obtain b c ys where ys:\"xs = b # ys @ [c]\""], ["proof (prove)\nusing this:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>b ys c.\n        xs = b # ys @ [c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis One_nat_def assms(1) 2(2) length_0_conv length_Cons list.exhaust rev_exhaust)"], ["proof (state)\nthis:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof (cases \"(i,j) = (a,b)\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case True"], ["proof (state)\nthis:\n  (i, j) = (a, b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "with ys *"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  (i, j) = (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  (i, j) = (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case False"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "proof (cases \"(i,j) = (c,a)\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case True"], ["proof (state)\nthis:\n  (i, j) = (c, a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "with ys **"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  (i, j) = (c, a)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set ys \\<subseteq> set (a # xs) \\<and>\n                       length ys < length xs\n  (i, j) = (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "case 2"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "with A(2) ys"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)", "have \"(i, j) \\<in> arcs' xs\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "using cycle_rotate_2_aux"], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n  \\<lbrakk>(?i, ?j) \\<in> set (arcs ?a ?b (?xs @ [?c]));\n   (?i, ?j) \\<noteq> (?c, ?b)\\<rbrakk>\n  \\<Longrightarrow> (?i, ?j) \\<in> set (arcs ?a ?c ?xs)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "by (auto simp: arcs'_def)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "(* slow *)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set ys \\<subseteq> set (a # xs) \\<and>\n                         length ys < length xs", "from cycle_rotate[OF \\<open>length xs > 1\\<close> this, of M a]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and> xs = zs @ i # j # ys", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and> xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set ys \\<subseteq> set (a # xs) \\<and> length ys < length xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_len_arcs:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "using assms"], ["proof (prove)\nusing this:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "assume A: \"length xs > 1\" \"(i, j) \\<in> arcs' xs\""], ["proof (state)\nthis:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "from arcs'_decomp[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>zs ys. xs = zs @ i # j # ys", "obtain ys zs where xs: \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  \\<exists>zs ys. xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "from len_decomp[OF this, of M a a]"], ["proof (chain)\npicking this:\n  len M a a xs = len M a i zs + len M i a (j # ys)", "have \"len M a a xs = len M a i zs + len M i a (j # ys)\""], ["proof (prove)\nusing this:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. len M a a xs = len M a i zs + len M i a (j # ys)", "."], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "also"], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "have \"\\<dots> = len M i a (j # ys) + len M a i zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs", "by (simp add: comm)"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "also"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "from len_comp[of M i i \"j # ys\" a zs]"], ["proof (chain)\npicking this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs", "have \"\\<dots> = len M i i (j # ys @ a # zs)\""], ["proof (prove)\nusing this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)", "by auto"], ["proof (state)\nthis:\n  len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "finally"], ["proof (chain)\npicking this:\n  len M a a xs = len M i i (j # ys @ a # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "using xs arcs_decomp[OF xs, of a a] arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n  xs = zs @ i # j # ys\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "by force"], ["proof (state)\nthis:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_2':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs)\n             \\<and> 1 + length ys = length xs \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "note A = assms"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "{"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "fix ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "assume A:\"a = i\" \"xs = j # ys\""], ["proof (state)\nthis:\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  a = i\n  xs = j # ys", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "fix b ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "assume A:\"a = j\" \"xs = ys @ [i]\""], ["proof (state)\nthis:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  a = j\n  xs = ys @ [i]", "have ?thesis"], ["proof (prove)\nusing this:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa))", "case 1"], ["proof (state)\nthis:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa))", "have \"len M j j (ys @ [i]) = M i j + len M j i ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "using len_decomp[of \"ys @ [i]\" ys i \"[]\" M j j]"], ["proof (prove)\nusing this:\n  ys @ [i] = ys @ [i] \\<Longrightarrow>\n  len M j j (ys @ [i]) = len M j i ys + len M i j []\n\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "by (auto simp: comm)"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa))", "moreover"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa))", "have \"arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "using arcs_decomp_tail"], ["proof (prove)\nusing this:\n  arcs ?j ?l (?ys @ [?i]) = arcs ?j ?i ?ys @ [(?i, ?l)]\n\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "by auto"], ["proof (state)\nthis:\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa))", "ultimately"], ["proof (chain)\npicking this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "show ?case"], ["proof (prove)\nusing this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n       insert i (insert j (set ysa)) = insert j (insert i (set ys)) \\<and>\n       length ysa = length ys \\<and>\n       set (arcs j j (ys @ [i])) = insert (i, j) (set (arcs j i ysa))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n     insert i (insert j (set ysa)) = insert j (insert i (set ys)) \\<and>\n     length ysa = length ys \\<and>\n     set (arcs j j (ys @ [i])) = insert (i, j) (set (arcs j i ysa))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "note ** = this"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "assume \"length xs = 1\""], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  length xs = 1", "obtain b where xs: \"xs = [b]\""], ["proof (prove)\nusing this:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b. xs = [b] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis One_nat_def length_0_conv length_Suc_conv)"], ["proof (state)\nthis:\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "with A(2)"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]", "have \"a = i \\<and> b = j \\<or> a = j \\<and> b = i\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]\n\ngoal (1 subgoal):\n 1. a = i \\<and> b = j \\<or> a = j \\<and> b = i", "by auto"], ["proof (state)\nthis:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "using * ** xs"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "}"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "note *** = this"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof (cases \"length xs = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  length xs = 0\n\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "with A"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  length xs = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  length xs = 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "case False"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "thus ?thesis"], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof (cases \"length xs = 1\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "with ***"], ["proof (chain)\npicking this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n  length xs = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case 2"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "hence \"length xs > 1\""], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < length xs", "by linarith"], ["proof (state)\nthis:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  1 < length xs", "obtain b c ys where ys:\"xs = b # ys @ [c]\""], ["proof (prove)\nusing this:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>b ys c.\n        xs = b # ys @ [c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis One_nat_def assms(1) 2(2) length_0_conv length_Cons list.exhaust rev_exhaust)"], ["proof (state)\nthis:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof (cases \"(i,j) = (a,b)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  (i, j) = (a, b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "with ys *"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  (i, j) = (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  (i, j) = (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case False"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "proof (cases \"(i,j) = (c,a)\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  (i, j) = (c, a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "with ys **"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  (i, j) = (c, a)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys2 @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys))\n  (i, j) = (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by force"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "case 2"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "with A(2) ys"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)", "have \"(i, j) \\<in> arcs' xs\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "using cycle_rotate_2_aux"], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n  \\<lbrakk>(?i, ?j) \\<in> set (arcs ?a ?b (?xs @ [?c]));\n   (?i, ?j) \\<noteq> (?c, ?b)\\<rbrakk>\n  \\<Longrightarrow> (?i, ?j) \\<in> set (arcs ?a ?c ?xs)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "by (auto simp add: arcs'_def)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "(* slow *)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys))", "from cycle_rotate_len_arcs[OF \\<open>length xs > 1\\<close> this, of M a]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Equivalent Characterizations of Cycle-Freeness\\<close>"], ["", "lemma negative_cycle_dest_diag:\n  \"\\<not> cycle_free M n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle_free M n \\<Longrightarrow>\n    \\<exists>i xs.\n       i \\<le> n \\<and>\n       set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>", "proof (auto simp: cycle_free_def, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; j \\<le> n;\n        \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>\n 2. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "case (1 i xs j)"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  j \\<le> n\n  \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; j \\<le> n;\n        \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>\n 2. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "from this(4)"], ["proof (chain)\npicking this:\n  \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs", "have \"len M i j xs < len M i j (rem_cycles i j xs)\""], ["proof (prove)\nusing this:\n  \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\n\ngoal (1 subgoal):\n 1. len M i j xs < len M i j (rem_cycles i j xs)", "by auto"], ["proof (state)\nthis:\n  len M i j xs < len M i j (rem_cycles i j xs)\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; j \\<le> n;\n        \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>\n 2. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "from negative_cycle_dest[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>i' ys.\n     len M i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "obtain i' ys\n  where *:\"len M i' i' ys < \\<one>\" \"set (i' # ys) \\<subseteq> set (i # j # xs)\""], ["proof (prove)\nusing this:\n  \\<exists>i' ys.\n     len M i' i' ys < \\<one> \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i' ys.\n        \\<lbrakk>len M i' i' ys < \\<one>;\n         set (i' # ys) \\<subseteq> set (i # j # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  len M i' i' ys < \\<one>\n  set (i' # ys) \\<subseteq> set (i # j # xs)\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; j \\<le> n;\n        \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>\n 2. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "from this(2) 1(1-3)"], ["proof (chain)\npicking this:\n  set (i' # ys) \\<subseteq> set (i # j # xs)\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  j \\<le> n", "have \"set ys \\<subseteq> {0..n}\" \"i' \\<le> n\""], ["proof (prove)\nusing this:\n  set (i' # ys) \\<subseteq> set (i # j # xs)\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..n} &&& i' \\<le> n", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..n}\n  i' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; j \\<le> n;\n        \\<not> len M i j (rem_cycles i j xs) \\<le> len M i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>\n 2. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "with *"], ["proof (chain)\npicking this:\n  len M i' i' ys < \\<one>\n  set (i' # ys) \\<subseteq> set (i # j # xs)\n  set ys \\<subseteq> {0..n}\n  i' \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  len M i' i' ys < \\<one>\n  set (i' # ys) \\<subseteq> set (i # j # xs)\n  set ys \\<subseteq> {0..n}\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "case 2"], ["proof (state)\nthis:\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n        \\<not> \\<one> \\<le> len M i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..n} \\<and>\n                               len M i i xs < \\<one>", "then"], ["proof (chain)\npicking this:\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_", "show ?case"], ["proof (prove)\nusing this:\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..n}\n  \\<not> \\<one> \\<le> len M i_ i_ xs_\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..n} \\<and> len M i i xs < \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation cyc_free :: \"('a::linordered_ab_monoid_add) mat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cyc_free m n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow> len m i i xs \\<ge> \\<one>\""], ["", "lemma cycle_free_diag_intro:\n  \"cyc_free M n \\<Longrightarrow> cycle_free M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len M i i xs \\<Longrightarrow>\n    cycle_free M n", "using negative_cycle_dest_diag"], ["proof (prove)\nusing this:\n  \\<not> cycle_free ?M ?n \\<Longrightarrow>\n  \\<exists>i xs.\n     i \\<le> ?n \\<and>\n     set xs \\<subseteq> {0..?n} \\<and> len ?M i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len M i i xs \\<Longrightarrow>\n    cycle_free M n", "by force"], ["", "lemma cycle_free_diag_equiv:\n  \"cyc_free M n \\<longleftrightarrow> cycle_free M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len M i i xs) =\n    cycle_free M n", "using negative_cycle_dest_diag"], ["proof (prove)\nusing this:\n  \\<not> cycle_free ?M ?n \\<Longrightarrow>\n  \\<exists>i xs.\n     i \\<le> ?n \\<and>\n     set xs \\<subseteq> {0..?n} \\<and> len ?M i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len M i i xs) =\n    cycle_free M n", "by (force simp: cycle_free_def)"], ["", "lemma cycle_free_diag_dest:\n  \"cycle_free M n \\<Longrightarrow> cyc_free M n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free M n \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len M i i xs", "using cycle_free_diag_equiv"], ["proof (prove)\nusing this:\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n\n\ngoal (1 subgoal):\n 1. cycle_free M n \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len M i i xs", "by blast"], ["", "lemma cyc_free_diag_dest:\n  assumes \"cyc_free M n\" \"i \\<le> n\" \"set xs \\<subseteq> {0..n}\"\n  shows \"len M i i xs \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<le> len M i i xs", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> len M i i xs", "by auto"], ["", "lemma cycle_free_0_0:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes \"cycle_free M n\"\n  shows \"M 0 0 \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<le> M 0 0", "using cyc_free_diag_dest[OF cycle_free_diag_dest[OF assms], of 0 \"[]\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<one> \\<le> len M 0 0 []\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> M 0 0", "by auto"], ["", "section \\<open>More Theorems Related to Floyd-Warshall\\<close>"], ["", "lemma D_cycle_free_len_dest:\n  \"cycle_free m n\n    \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n;\n     \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n     j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {0..n} \\<and>\n                         len m' i j xs = len m i j ys", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "case Nil"], ["proof (state)\nthis:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with Nil"], ["proof (chain)\npicking this:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}", "have \"m' i j = D m i j n\""], ["proof (prove)\nusing this:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. m' i j = D m i j n", "by simp"], ["proof (state)\nthis:\n  m' i j = D m i j n\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from D_dest''[OF this]"], ["proof (chain)\npicking this:\n  m' i j \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..n}}", "obtain ys where \"set ys \\<subseteq> {0..n}\" \"len m' i j [] = len m i j ys\""], ["proof (prove)\nusing this:\n  m' i j \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>set ys \\<subseteq> {0..n};\n         len m' i j [] = len m i j ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> {0..n} \\<and> len m' i j [] = len m i j ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "case (Cons y ys)"], ["proof (state)\nthis:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from Cons.IH[OF Cons.prems(1,2) _ \\<open>j \\<le> n\\<close>, of y] Cons.prems(5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>y \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' y j ys = len m y j ysa\n  set (y # ys) \\<subseteq> {0..n}", "obtain zs where zs:\"set zs \\<subseteq> {0..n}\" \"len m' y j ys = len m y j zs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' y j ys = len m y j ysa\n  set (y # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>set zs \\<subseteq> {0..n};\n         len m' y j ys = len m y j zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs", "have \"m' i y = D m i y n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n\ngoal (1 subgoal):\n 1. m' i y = D m i y n", "by simp"], ["proof (state)\nthis:\n  m' i y = D m i y n\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from D_dest''[OF this]"], ["proof (chain)\npicking this:\n  m' i y \\<in> {len m i y xs |xs. set xs \\<subseteq> {0..n}}", "obtain ws where ws:\"set ws \\<subseteq> {0..n}\" \"m' i y = len m i y ws\""], ["proof (prove)\nusing this:\n  m' i y \\<in> {len m i y xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>set ws \\<subseteq> {0..n}; m' i y = len m i y ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with len_comp[of m i j ws y zs] zs Cons.prems(5)"], ["proof (chain)\npicking this:\n  len m i j (ws @ y # zs) = len m i y ws + len m y j zs\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n  set (y # ys) \\<subseteq> {0..n}\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws", "have \"len m' i j (y # ys) = len m i j (ws @ y # zs)\" \"set (ws @ y # zs) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  len m i j (ws @ y # zs) = len m i y ws + len m y j zs\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n  set (y # ys) \\<subseteq> {0..n}\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws\n\ngoal (1 subgoal):\n 1. len m' i j (y # ys) = len m i j (ws @ y # zs) &&&\n    set (ws @ y # zs) \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}", "show ?case"], ["proof (prove)\nusing this:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       set ysa \\<subseteq> {0..n} \\<and> len m' i j (y # ys) = len m i j ysa", "by blast"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     set ysa \\<subseteq> {0..n} \\<and> len m' i j (y # ys) = len m i j ysa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> cyc_free m' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..n} \\<longrightarrow>\n                         \\<one> \\<le> len m' i i xs", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len m' i i xs", "case (1 i xs)"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len m' i i xs", "from D_cycle_free_len_dest[OF _ 1(2,3,3,4)] 1(1) cycle_free_diag_equiv"], ["proof (chain)\npicking this:\n  cycle_free m n \\<Longrightarrow>\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n", "obtain ys where \"set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\""], ["proof (prove)\nusing this:\n  cycle_free m n \\<Longrightarrow>\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        set ys \\<subseteq> {0..n} \\<and>\n        len m' i i xs = len m i i ys \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<one> \\<le> len m' i i xs", "with 1(1,3)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> len m' i i xs", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<le> len m' i i xs\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"FW m n \\<equiv> fw m n n n n\""], ["", "lemma FW_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> cyc_free (FW m n) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len (FW m n) i i xs", "apply (rule D_cyc_free_preservation)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len ?m i i xs\n 2. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D ?m i j n = FW m n i j", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       \\<one> \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = FW m n i j", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i j n = FW m n i j", "apply (rule fw_shortest_path)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> cycle_free m n\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 3. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 4. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 5. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 6. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n", "using cycle_free_diag_equiv"], ["proof (prove)\nusing this:\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      \\<one> \\<le> len ?M i i xs) =\n  cycle_free ?M ?n\n\ngoal (6 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> cycle_free m n\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 3. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 4. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 5. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 6. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n", "by auto"], ["", "lemma cyc_free_diag_dest':\n  \"cyc_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> m i i \\<ge> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "case 1"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n", "have \"i \\<le> n \\<and> set [] \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "with 1(1)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "have \"\\<one> \\<le> len m i i []\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len m i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> len m i i []", "by blast"], ["proof (state)\nthis:\n  \\<one> \\<le> len m i i []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<one> \\<le> m i i", "then"], ["proof (chain)\npicking this:\n  \\<one> \\<le> len m i i []", "show ?case"], ["proof (prove)\nusing this:\n  \\<one> \\<le> len m i i []\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> m i i", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<le> m i i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FW_diag_neutral_preservation:\n  \"\\<forall> i \\<le> n. M i i = \\<one> \\<Longrightarrow> cyc_free M n \\<Longrightarrow> \\<forall> i\\<le>n. (FW M n) i i = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i\\<le>n. M i i = \\<one>;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len M i i xs\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n. FW M n i i = \\<one>", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = \\<one>;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           \\<one> \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = \\<one>", "case (1 i)"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. M i i = \\<one>\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = \\<one>;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           \\<one> \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = \\<one>", "from this(3)"], ["proof (chain)\npicking this:\n  i \\<le> n", "have \"(FW M n) i i \\<le> M i i\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n i i \\<le> M i i", "by (auto intro: fw_mono)"], ["proof (state)\nthis:\n  FW M n i i \\<le> M i i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = \\<one>;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           \\<one> \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = \\<one>", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>i\\<le>n. M i i = \\<one>\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n\n  FW M n i i \\<le> M i i", "have \"(FW M n) i i \\<le> \\<one>\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. M i i = \\<one>\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n\n  FW M n i i \\<le> M i i\n\ngoal (1 subgoal):\n 1. FW M n i i \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  FW M n i i \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = \\<one>;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           \\<one> \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = \\<one>", "with cyc_free_diag_dest'[OF FW_cyc_free_preservation[OF 1(2)] \\<open>i \\<le> n\\<close>]"], ["proof (chain)\npicking this:\n  \\<one> \\<le> FW M n i i\n  FW M n i i \\<le> \\<one>", "show \"FW M n i i = \\<one>\""], ["proof (prove)\nusing this:\n  \\<one> \\<le> FW M n i i\n  FW M n i i \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. FW M n i i = \\<one>", "by auto"], ["proof (state)\nthis:\n  FW M n i i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FW_fixed_preservation:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes A: \"i \\<le> n\" \"M 0 i + M i 0 = \\<one>\" \"canonical (FW M n) n\" \"cyc_free (FW M n) n\"\n  shows \"FW M n 0 i + FW M n i 0 = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = \\<one>", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> n\n  M 0 i + M i 0 = \\<one>\n  canonical (FW M n) n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len (FW M n) i i xs\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = \\<one>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "let ?M' = \"FW M n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "assume A: \"i \\<le> n\" \"M 0 i + M i 0 = \\<one>\" \"canonical ?M' n\" \"cyc_free ?M' n\""], ["proof (state)\nthis:\n  i \\<le> n\n  M 0 i + M i 0 = \\<one>\n  canonical (FW M n) n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len (FW M n) i i xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "from \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n", "have \"?M' 0 i + ?M' i 0 \\<le> M 0 i + M i 0\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0", "by (auto intro: fw_mono add_mono)"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "with A(2)"], ["proof (chain)\npicking this:\n  M 0 i + M i 0 = \\<one>\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0", "have \"?M' 0 i + ?M' i 0 \\<le> \\<one>\""], ["proof (prove)\nusing this:\n  M 0 i + M i 0 = \\<one>\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 \\<le> \\<one>", "by auto"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "moreover"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "from \\<open>canonical ?M' n\\<close> \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  canonical (FW M n) n\n  i \\<le> n", "have \"?M' 0 0 \\<le> ?M' 0 i + ?M' i 0\""], ["proof (prove)\nusing this:\n  canonical (FW M n) n\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0", "by auto"], ["proof (state)\nthis:\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "moreover"], ["proof (state)\nthis:\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "from cyc_free_diag_dest'[OF  \\<open>cyc_free ?M' n\\<close>]"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> FW M n ?i ?i", "have \"\\<one> \\<le> ?M' 0 0\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> \\<one> \\<le> FW M n ?i ?i\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> FW M n 0 0", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<le> FW M n 0 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = \\<one>; canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        \\<one> \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  FW M n 0 i + FW M n i 0 \\<le> \\<one>\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n  \\<one> \\<le> FW M n 0 0", "show \"?M' 0 i + ?M' i 0 = \\<one>\""], ["proof (prove)\nusing this:\n  FW M n 0 i + FW M n i 0 \\<le> \\<one>\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n  \\<one> \\<le> FW M n 0 0\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = \\<one>", "by (auto simp: add_mono)"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_cyc_free_neutral:\n  \"cyc_free M n \\<Longrightarrow> \\<forall>k\\<le>n. M k k \\<le> \\<one> \\<Longrightarrow> \\<forall>i\\<le>n. M i i = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                \\<one> \\<le> len M i i xs;\n     \\<forall>k\\<le>n. M k k \\<le> \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n. M i i = \\<one>", "proof (clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = \\<one>", "case (1 i)"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = \\<one>", "note A = this"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = \\<one>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n", "have \"i \\<le> n \\<and> set [] \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = \\<one>", "with A(1)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "have \"\\<one> \\<le> M i i\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     \\<one> \\<le> len M i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<one> \\<le> M i i", "by fastforce"], ["proof (state)\nthis:\n  \\<one> \\<le> M i i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   \\<one> \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> \\<one>; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = \\<one>", "with A(2) \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n\n  \\<one> \\<le> M i i", "show \"M i i = \\<one>\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> \\<one>\n  i \\<le> n\n  \\<one> \\<le> M i i\n\ngoal (1 subgoal):\n 1. M i i = \\<one>", "by auto"], ["proof (state)\nthis:\n  M i i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_upd_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw_upd M k i j = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw_upd M k i j = M", "proof (auto simp: fw_upd_def upd_def less_eq[symmetric] min.coboundedI2, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "case 1"], ["proof (state)\nthis:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "then"], ["proof (chain)\npicking this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n", "have \"M i j \\<le> M i k + M k j\""], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i k + M k j", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> M i k + M k j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "then"], ["proof (chain)\npicking this:\n  M i j \\<le> M i k + M k j", "have \"min (M i j) (M i k + M k j) = M i j\""], ["proof (prove)\nusing this:\n  M i j \\<le> M i k + M k j\n\ngoal (1 subgoal):\n 1. min (M i j) (M i k + M k j) = M i j", "by (simp split: split_min)"], ["proof (state)\nthis:\n  min (M i j) (M i k + M k j) = M i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "thus ?case"], ["proof (prove)\nusing this:\n  min (M i j) (M i k + M k j) = M i j\n\ngoal (1 subgoal):\n 1. M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "by force"], ["proof (state)\nthis:\n  M(i := (M i)(j := min (M i j) (M i k + M k j))) = M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw M n k i j = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n k i j = M", "proof (induction k arbitrary: i j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 i j = M\n 2. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k i j = M;\n        canonical M n; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k) i j = M", "case 0"], ["proof (state)\nthis:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 i j = M\n 2. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k i j = M;\n        canonical M n; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k) i j = M", "then"], ["proof (chain)\npicking this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 i j = M", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    0 \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n 0 i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i) j = M", "case 0"], ["proof (state)\nthis:\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    0 \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n 0 i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  0 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 0 j = M", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>canonical M n; 0 \\<le> n; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n 0 0 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 0 j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 (Suc j) = M", "case 0"], ["proof (state)\nthis:\n  canonical M n\n  0 \\<le> n\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>canonical M n; 0 \\<le> n; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n 0 0 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 0 j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  canonical M n\n  0 \\<le> n\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 0 0 = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n 0 0 0 = M\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 0 j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 (Suc j) = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 0 j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 (Suc j) = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; 0 \\<le> n; j_ \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 0 j_ = M\n  canonical M n\n  0 \\<le> n\n  Suc j_ \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>canonical M n; 0 \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 0 j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 0 (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; 0 \\<le> n; j_ \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 0 j_ = M\n  canonical M n\n  0 \\<le> n\n  Suc j_ \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 0 (Suc j_) = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n 0 0 (Suc j_) = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n 0 0 j = M\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    0 \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n 0 i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i) j = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    0 \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n 0 i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i) j = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    0 \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n 0 i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  0 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 (Suc i_) j = M", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 i_ j = M;\n     canonical M n; Suc i_ \\<le> n; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n 0 (Suc i_) 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                             0 \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n 0 i_ j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n 0 i_ j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i_) (Suc j) = M", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 i_ j = M;\n     canonical M n; Suc i_ \\<le> n; 0 \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n 0 (Suc i_) 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                             0 \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n 0 i_ j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n 0 i_ j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i_) (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  0 \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 (Suc i_) 0 = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n 0 (Suc i_) 0 = M\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                             0 \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n 0 i_ j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n 0 i_ j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i_) (Suc j) = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                             0 \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n 0 i_ j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n 0 i_ j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i_) (Suc j) = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n               0 \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n 0 i_ j = M;\n   canonical M n; Suc i_ \\<le> n; j_ \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 (Suc i_) j_ = M\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  Suc j_ \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n                             0 \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n 0 i_ j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 0 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n 0 (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n 0 i_ j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n 0 (Suc i_) (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>canonical M n; i_ \\<le> n; j \\<le> n;\n               0 \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n 0 i_ j = M;\n   canonical M n; Suc i_ \\<le> n; j_ \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 (Suc i_) j_ = M\n  \\<lbrakk>canonical M n; i_ \\<le> n; ?j \\<le> n; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n 0 i_ ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  Suc j_ \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n 0 (Suc i_) (Suc j_) = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n 0 (Suc i_) (Suc j_) = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n 0 (Suc i_) j = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n 0 i j = M\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k i j = M;\n        canonical M n; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k) i j = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k i j = M;\n        canonical M n; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k) i j = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k i j = M;\n        canonical M n; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k) i j = M", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) i j = M", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>\\<And>i j.\n                               \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                                k_ \\<le> n\\<rbrakk>\n                               \\<Longrightarrow> fw M n k_ i j = M;\n                    canonical M n; i \\<le> n; j \\<le> n;\n                    Suc k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n (Suc k_) i j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i) j = M", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>\\<And>i j.\n                               \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                                k_ \\<le> n\\<rbrakk>\n                               \\<Longrightarrow> fw M n k_ i j = M;\n                    canonical M n; i \\<le> n; j \\<le> n;\n                    Suc k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n (Suc k_) i j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) 0 j = M", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>i j.\n                \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                 k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n k_ i j = M;\n     canonical M n; 0 \\<le> n; 0 \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n (Suc k_) 0 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; 0 \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) 0 j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 (Suc j) = M", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  0 \\<le> n\n  Suc k_ \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>i j.\n                \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                 k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n k_ i j = M;\n     canonical M n; 0 \\<le> n; 0 \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n (Suc k_) 0 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; 0 \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) 0 j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  0 \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) 0 0 = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n (Suc k_) 0 0 = M\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; 0 \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) 0 j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 (Suc j) = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; 0 \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) 0 j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 (Suc j) = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; 0 \\<le> n; j_ \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) 0 j_ = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  Suc j_ \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; 0 \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) 0 j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; 0 \\<le> n; Suc j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) 0 (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; 0 \\<le> n; j_ \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) 0 j_ = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  0 \\<le> n\n  Suc j_ \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) 0 (Suc j_) = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n (Suc k_) 0 (Suc j_) = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n (Suc k_) 0 j = M\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>\\<And>i j.\n                               \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                                k_ \\<le> n\\<rbrakk>\n                               \\<Longrightarrow> fw M n k_ i j = M;\n                    canonical M n; i \\<le> n; j \\<le> n;\n                    Suc k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n (Suc k_) i j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i) j = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>\\<And>i j.\n                               \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                                k_ \\<le> n\\<rbrakk>\n                               \\<Longrightarrow> fw M n k_ i j = M;\n                    canonical M n; i \\<le> n; j \\<le> n;\n                    Suc k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n (Suc k_) i j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i) j = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>\\<And>i j.\n                               \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                                k_ \\<le> n\\<rbrakk>\n                               \\<Longrightarrow> fw M n k_ i j = M;\n                    canonical M n; i \\<le> n; j \\<le> n;\n                    Suc k_ \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fw M n (Suc k_) i j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  j \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) (Suc i_) j = M", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n     \\<And>i j.\n        \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw M n k_ i j = M;\n     canonical M n; Suc i_ \\<le> n; 0 \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n (Suc k_) (Suc i_) 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>\\<And>i j.\n  \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ i j = M;\n                             canonical M n; i_ \\<le> n; j \\<le> n;\n                             Suc k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n                 \\<And>i j.\n                    \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                     k_ \\<le> n\\<rbrakk>\n                    \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>\\<And>i j.\n                       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                        k_ \\<le> n\\<rbrakk>\n                       \\<Longrightarrow> fw M n k_ i j = M;\n            canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n;\n        Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i_) (Suc j) = M", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  0 \\<le> n\n  Suc k_ \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>\\<And>i j.\n                            \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                             k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n     \\<And>i j.\n        \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fw M n k_ i j = M;\n     canonical M n; Suc i_ \\<le> n; 0 \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw M n (Suc k_) (Suc i_) 0 = M\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>\\<And>i j.\n  \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ i j = M;\n                             canonical M n; i_ \\<le> n; j \\<le> n;\n                             Suc k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n                 \\<And>i j.\n                    \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                     k_ \\<le> n\\<rbrakk>\n                    \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>\\<And>i j.\n                       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                        k_ \\<le> n\\<rbrakk>\n                       \\<Longrightarrow> fw M n k_ i j = M;\n            canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n;\n        Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i_) (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  0 \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) (Suc i_) 0 = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n (Suc k_) (Suc i_) 0 = M\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>\\<And>i j.\n  \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ i j = M;\n                             canonical M n; i_ \\<le> n; j \\<le> n;\n                             Suc k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n                 \\<And>i j.\n                    \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                     k_ \\<le> n\\<rbrakk>\n                    \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>\\<And>i j.\n                       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                        k_ \\<le> n\\<rbrakk>\n                       \\<Longrightarrow> fw M n k_ i j = M;\n            canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n;\n        Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i_) (Suc j) = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>\\<And>i j.\n  \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ i j = M;\n                             canonical M n; i_ \\<le> n; j \\<le> n;\n                             Suc k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n                 \\<And>i j.\n                    \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                     k_ \\<le> n\\<rbrakk>\n                    \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>\\<And>i j.\n                       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                        k_ \\<le> n\\<rbrakk>\n                       \\<Longrightarrow> fw M n k_ i j = M;\n            canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n;\n        Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i_) (Suc j) = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>\\<And>i j.\n                          \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                           k_ \\<le> n\\<rbrakk>\n                          \\<Longrightarrow> fw M n k_ i j = M;\n               canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n   \\<And>i j.\n      \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n      \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; Suc i_ \\<le> n; j_ \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j_ = M\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  Suc j_ \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>\\<And>i j.\n  \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ i j = M;\n                             canonical M n; i_ \\<le> n; j \\<le> n;\n                             Suc k_ \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n                 \\<And>i j.\n                    \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                     k_ \\<le> n\\<rbrakk>\n                    \\<Longrightarrow> fw M n k_ i j = M;\n                 canonical M n; Suc i_ \\<le> n; j \\<le> n;\n                 Suc k_ \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j = M;\n        \\<And>j.\n           \\<lbrakk>\\<And>i j.\n                       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                        k_ \\<le> n\\<rbrakk>\n                       \\<Longrightarrow> fw M n k_ i j = M;\n            canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n        \\<And>i j.\n           \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fw M n k_ i j = M;\n        canonical M n; Suc i_ \\<le> n; Suc j \\<le> n;\n        Suc k_ \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw M n (Suc k_) (Suc i_) (Suc j) = M", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>\\<And>i j.\n                          \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                           k_ \\<le> n\\<rbrakk>\n                          \\<Longrightarrow> fw M n k_ i j = M;\n               canonical M n; i_ \\<le> n; j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n (Suc k_) i_ j = M;\n   \\<And>i j.\n      \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k_ \\<le> n\\<rbrakk>\n      \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; Suc i_ \\<le> n; j_ \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) (Suc i_) j_ = M\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n               k_ \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fw M n k_ i j = M;\n   canonical M n; i_ \\<le> n; ?j \\<le> n; Suc k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n (Suc k_) i_ ?j = M\n  \\<lbrakk>canonical M n; ?i \\<le> n; ?j \\<le> n; k_ \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw M n k_ ?i ?j = M\n  canonical M n\n  Suc i_ \\<le> n\n  Suc j_ \\<le> n\n  Suc k_ \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n (Suc k_) (Suc i_) (Suc j_) = M", "by (auto intro: fw_upd_canonical_id)"], ["proof (state)\nthis:\n  fw M n (Suc k_) (Suc i_) (Suc j_) = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n (Suc k_) (Suc i_) j = M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw M n (Suc k_) i j = M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas FW_canonical_id = fw_canonical_id[OF _ order.refl order.refl order.refl]"], ["", "section \\<open>Helper Lemmas for Bouyer's Theorem on Approximation\\<close>"], ["", "lemma aux1: \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<le> n \\<and> b \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n};\n     (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n    \\<Longrightarrow> a \\<le> n \\<and> b \\<le> n", "by (induction xs arbitrary: i) auto"], ["", "lemma arcs_distinct1:\n  \"i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs \\<Longrightarrow> xs \\<noteq> [] \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs; distinct xs;\n     xs \\<noteq> []; (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n    \\<Longrightarrow> a \\<noteq> b", "apply (induction xs arbitrary: i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<notin> set []; j \\<notin> set []; distinct [];\n        [] \\<noteq> []; (a, b) \\<in> set (arcs i j [])\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs;\n                    distinct xs; xs \\<noteq> [];\n                    (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> a \\<noteq> b;\n        i \\<notin> set (aa # xs); j \\<notin> set (aa # xs);\n        distinct (aa # xs); aa # xs \\<noteq> [];\n        (a, b) \\<in> set (arcs i j (aa # xs))\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs;\n                    distinct xs; xs \\<noteq> [];\n                    (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> a \\<noteq> b;\n        i \\<notin> set (aa # xs); j \\<notin> set (aa # xs);\n        distinct (aa # xs); aa # xs \\<noteq> [];\n        (a, b) \\<in> set (arcs i j (aa # xs))\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b", "apply (rename_tac a' xs i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a' xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs;\n                    distinct xs; xs \\<noteq> [];\n                    (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> a \\<noteq> b;\n        i \\<notin> set (a' # xs); j \\<notin> set (a' # xs);\n        distinct (a' # xs); a' # xs \\<noteq> [];\n        (a, b) \\<in> set (arcs i j (a' # xs))\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a' xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs;\n                    distinct xs; xs \\<noteq> [];\n                    (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> a \\<noteq> b;\n        i \\<notin> set (a' # xs); j \\<notin> set (a' # xs);\n        distinct (a' # xs); a' # xs \\<noteq> [];\n        (a, b) \\<in> set (arcs i j (a' # xs)); xs = []\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b\n 2. \\<And>a' xs i aa list.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs;\n                    distinct xs; xs \\<noteq> [];\n                    (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> a \\<noteq> b;\n        i \\<notin> set (a' # xs); j \\<notin> set (a' # xs);\n        distinct (a' # xs); a' # xs \\<noteq> [];\n        (a, b) \\<in> set (arcs i j (a' # xs)); xs = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> b", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma arcs_distinct2:\n  \"i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> (a,b) \\<in> set (arcs i j xs) \\<Longrightarrow> a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<notin> set xs; j \\<notin> set xs; distinct xs;\n     i \\<noteq> j; (a, b) \\<in> set (arcs i j xs)\\<rbrakk>\n    \\<Longrightarrow> a \\<noteq> b", "by (induction xs arbitrary: i) auto"], ["", "lemma arcs_distinct3: \"distinct (a # b # c # xs) \\<Longrightarrow> (i,j) \\<in> set (arcs a b xs) \\<Longrightarrow> i \\<noteq> c \\<and> j \\<noteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (a # b # c # xs);\n     (i, j) \\<in> set (arcs a b xs)\\<rbrakk>\n    \\<Longrightarrow> i \\<noteq> c \\<and> j \\<noteq> c", "by (induction xs arbitrary: a) force+"], ["", "lemma arcs_elem:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" shows \"a \\<in> set (i # xs)\" \"b \\<in> set (j # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> set (i # xs) &&& b \\<in> set (j # xs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n\ngoal (1 subgoal):\n 1. a \\<in> set (i # xs) &&& b \\<in> set (j # xs)", "by (induction xs arbitrary: i) auto"], ["", "lemma arcs_distinct_dest1:\n  \"distinct (i # a # zs) \\<Longrightarrow> (b,c) \\<in> set (arcs a j zs) \\<Longrightarrow> b \\<noteq> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (i # a # zs); (b, c) \\<in> set (arcs a j zs)\\<rbrakk>\n    \\<Longrightarrow> b \\<noteq> i", "using arcs_elem"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> set (arcs ?i ?j ?xs) \\<Longrightarrow>\n  ?a \\<in> set (?i # ?xs)\n  (?a, ?b) \\<in> set (arcs ?i ?j ?xs) \\<Longrightarrow>\n  ?b \\<in> set (?j # ?xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (i # a # zs); (b, c) \\<in> set (arcs a j zs)\\<rbrakk>\n    \\<Longrightarrow> b \\<noteq> i", "by fastforce"], ["", "lemma arcs_distinct_fix:\n  \"distinct (a # x # xs @ [b]) \\<Longrightarrow> (a,c) \\<in> set (arcs a b (x # xs)) \\<Longrightarrow> c = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (a # x # xs @ [b]);\n     (a, c) \\<in> set (arcs a b (x # xs))\\<rbrakk>\n    \\<Longrightarrow> c = x", "using arcs_elem(1)"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> set (arcs ?i ?j ?xs) \\<Longrightarrow>\n  ?a \\<in> set (?i # ?xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (a # x # xs @ [b]);\n     (a, c) \\<in> set (arcs a b (x # xs))\\<rbrakk>\n    \\<Longrightarrow> c = x", "by fastforce"], ["", "lemma disjE3: \"A \\<or> B \\<or> C \\<Longrightarrow> (A \\<Longrightarrow> G) \\<Longrightarrow> (B \\<Longrightarrow> G) \\<Longrightarrow> (C \\<Longrightarrow> G) \\<Longrightarrow> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<or> B \\<or> C; A \\<Longrightarrow> G;\n     B \\<Longrightarrow> G; C \\<Longrightarrow> G\\<rbrakk>\n    \\<Longrightarrow> G", "by auto"], ["", "lemma arcs_predecessor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\"\n  shows \"\\<exists> c. (c, a) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. (c, a) \\<in> set (arcs i j xs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<exists>c. (c, a) \\<in> set (arcs i j xs)", "by (induction xs arbitrary: i) auto"], ["", "lemma arcs_successor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\"\n  shows \"\\<exists> c. (b,c) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. (b, c) \\<in> set (arcs i j xs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<exists>c. (b, c) \\<in> set (arcs i j xs)", "apply (induction xs arbitrary: i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j [])\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  (b, c) \\<in> set (arcs i j xs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j (aa # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  (b, c) \\<in> set (arcs i j xs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j (aa # xs))", "apply (rename_tac aa xs i)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  (b, c) \\<in> set (arcs i j xs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j (aa # xs))", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  (b, c) \\<in> set (arcs i j xs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j;\n        xs = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j (aa # xs))\n 2. \\<And>aa xs i ab list.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  (b, c) \\<in> set (arcs i j xs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j;\n        xs = ab # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c. (b, c) \\<in> set (arcs i j (aa # xs))", "by auto"], ["", "lemma arcs_predecessor':\n  assumes \"(a, b) \\<in> set (arcs i j (x # xs))\" \"(a,b) \\<noteq> (i, x)\"\n  shows \"\\<exists> c. (c, a) \\<in> set (arcs i j (x # xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. (c, a) \\<in> set (arcs i j (x # xs))", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. \\<exists>c. (c, a) \\<in> set (arcs i j (x # xs))", "by (induction xs arbitrary: i x) auto"], ["", "lemma arcs_cases:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"xs \\<noteq> []\"\n  shows \"(\\<exists> ys. xs = b # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a] \\<and> b = j)\n       \\<or> (\\<exists> c d ys. (a,b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             [] = c # ys @ [d])\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>c d ys.\n   (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             aa # xs = c # ys @ [d])", "case Nil"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             [] = c # ys @ [d])\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>c d ys.\n   (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             aa # xs = c # ys @ [d])", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []", "show ?case"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> [] = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> [] = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>c d ys.\n   (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             aa # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>c d ys.\n   (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             aa # xs = c # ys @ [d])", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>(a, b) \\<in> set (arcs ?i j xs); xs \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>ys. xs = b # ys \\<and> a = ?i) \\<or>\n                    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n                    (\\<exists>c d ys.\n                        (a, b) \\<in> set (arcs c d ys) \\<and>\n                        xs = c # ys @ [d])\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>c d ys.\n   (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>c d ys.\n                             (a, b) \\<in> set (arcs c d ys) \\<and>\n                             aa # xs = c # ys @ [d])", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "proof (cases \"(a, b) = (i, x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case True"], ["proof (state)\nthis:\n  (a, b) = (i, x)\n\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "with Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  (a, b) = (i, x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  (a, b) = (i, x)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case False"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "note F = this"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "with F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  xs = []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "from F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []", "have \"(a, b) \\<in> set (arcs x j xs)\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (arcs x j xs)", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs x j xs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "from Cons.IH[OF this False]"], ["proof (chain)\npicking this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])", "have\n        \"(\\<exists>ys. xs = b # ys \\<and> a = x) \\<or> (\\<exists>ys. xs = ys @ [a] \\<and> b = j)\n         \\<or> (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\""], ["proof (prove)\nusing this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])", "."], ["proof (state)\nthis:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "then"], ["proof (chain)\npicking this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "proof (rule disjE3, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 3. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case 1"], ["proof (state)\nthis:\n  \\<exists>ys. xs = b # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 3. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = b # ys \\<and> a = x", "obtain ys where *: \"xs = b # ys \\<and> a = x\""], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = b # ys \\<and> a = x\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        xs = b # ys \\<and> a = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = b # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 3. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = []", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain z zs where zs: \"ys = zs @ [z]\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>zs z. ys = zs @ [z] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_butlast_last_id)"], ["proof (state)\nthis:\n  ys = zs @ [z]\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = zs @ [z]", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = zs @ [z]\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case 2"], ["proof (state)\nthis:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n 2. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal (1 subgoal):\n 1. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "case 3"], ["proof (state)\nthis:\n  \\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]\n\ngoal (1 subgoal):\n 1. \\<exists>c d ys.\n       (a, b) \\<in> set (arcs c d ys) \\<and>\n       xs = c # ys @ [d] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "with False"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  \\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]", "show ?case"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  \\<exists>c d ys. (a, b) \\<in> set (arcs c d ys) \\<and> xs = c # ys @ [d]\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>c d ys.\n        (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>c d ys.\n      (a, b) \\<in> set (arcs c d ys) \\<and> x # xs = c # ys @ [d])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcs_cases':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"xs \\<noteq> []\"\n  shows \"(\\<exists> ys. xs = b # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a] \\<and> b = j) \\<or> (\\<exists> ys zs. xs = ys @ a # b # zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # zs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # zs)", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. [] = ys @ a # b # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>ys zs. xs = ys @ a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. aa # xs = ys @ a # b # zs)", "case Nil"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. [] = ys @ a # b # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>ys zs. xs = ys @ a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. aa # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []", "show ?case"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j [])\n  [] \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. [] = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. [] = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. [] = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. [] = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>ys zs. xs = ys @ a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. aa # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>ys zs. xs = ys @ a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. aa # xs = ys @ a # b # zs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>(a, b) \\<in> set (arcs ?i j xs); xs \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>ys. xs = b # ys \\<and> a = ?i) \\<or>\n                    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n                    (\\<exists>ys zs. xs = ys @ a # b # zs)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> (\\<exists>ys.\n   xs = b # ys \\<and> a = i) \\<or>\n                                     (\\<exists>ys.\n   xs = ys @ [a] \\<and> b = j) \\<or>\n                                     (\\<exists>ys zs. xs = ys @ a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); aa # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>ys. aa # xs = b # ys \\<and> a = i) \\<or>\n                         (\\<exists>ys.\n                             aa # xs = ys @ [a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. aa # xs = ys @ a # b # zs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "proof (cases \"(a, b) = (i, x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case True"], ["proof (state)\nthis:\n  (a, b) = (i, x)\n\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "with Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  (a, b) = (i, x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  (a, b) = (i, x)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case False"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "note F = this"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "with F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n  xs = []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "from F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []", "have \"(a, b) \\<in> set (arcs x j xs)\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (arcs x j xs)", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs x j xs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "from Cons.IH[OF this False]"], ["proof (chain)\npicking this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # zs)", "have\n        \"(\\<exists>ys. xs = b # ys \\<and> a = x) \\<or> (\\<exists>ys. xs = ys @ [a] \\<and> b = j)\n         \\<or> (\\<exists>ys zs. xs = ys @ a # b # zs)\""], ["proof (prove)\nusing this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # zs)", "."], ["proof (state)\nthis:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>ys. xs = b # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "proof (rule disjE3, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case 1"], ["proof (state)\nthis:\n  \\<exists>ys. xs = b # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = b # ys \\<and> a = x", "obtain ys where *: \"xs = b # ys \\<and> a = x\""], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = b # ys \\<and> a = x\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        xs = b # ys \\<and> a = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = b # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # ys \\<and> a = x \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = []", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = []\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain z zs where zs: \"ys = zs @ [z]\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>zs z. ys = zs @ [z] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_butlast_last_id)"], ["proof (state)\nthis:\n  ys = zs @ [z]\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = zs @ [z]", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = zs @ [z]\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case 2"], ["proof (state)\nthis:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a] \\<and> b = j \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = ys @ [a] \\<and> b = j\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "case 3"], ["proof (state)\nthis:\n  \\<exists>ys zs. xs = ys @ a # b # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. xs = ys @ a # b # zs", "obtain ys zs where \"xs = ys @ a # b # zs\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. xs = ys @ a # b # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        xs = ys @ a # b # zs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = ys @ a # b # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  xs = ys @ a # b # zs", "have \"x # xs = (x # ys) @ a # b # zs\""], ["proof (prove)\nusing this:\n  xs = ys @ a # b # zs\n\ngoal (1 subgoal):\n 1. x # xs = (x # ys) @ a # b # zs", "by auto"], ["proof (state)\nthis:\n  x # xs = (x # ys) @ a # b # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # zs \\<Longrightarrow>\n    (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "then"], ["proof (chain)\npicking this:\n  x # xs = (x # ys) @ a # b # zs", "show ?thesis"], ["proof (prove)\nusing this:\n  x # xs = (x # ys) @ a # b # zs\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n    (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n    (\\<exists>ys zs. x # xs = ys @ a # b # zs)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>ys. x # xs = b # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. x # xs = ys @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. x # xs = ys @ a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcs_successor':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\"\n  shows \"\\<exists> c. xs = [b] \\<and> a = i \\<or> (\\<exists> ys. xs = b # c # ys \\<and> a = i) \\<or> (\\<exists> ys. xs = ys @ [a,b] \\<and> c = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ a # b # c # zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            [] = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                [] = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                [] = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. [] = ys @ a # b # c # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                aa # xs = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ a # b # c # zs)", "case Nil"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs i j [])\n  b \\<noteq> j\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            [] = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                [] = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                [] = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. [] = ys @ a # b # c # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                aa # xs = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j [])\n  b \\<noteq> j", "show ?case"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j [])\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       [] = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. [] = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. [] = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. [] = ys @ a # b # c # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     [] = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. [] = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. [] = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. [] = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                aa # xs = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                aa # xs = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ a # b # c # zs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>(a, b) \\<in> set (arcs ?i j xs); b \\<noteq> j\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       xs = [b] \\<and> a = ?i \\<or>\n                       (\\<exists>ys. xs = b # c # ys \\<and> a = ?i) \\<or>\n                       (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n                       (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    b \\<noteq> j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); b \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [b] \\<and> a = i \\<or>\n                            (\\<exists>ys.\n                                aa # xs = b # c # ys \\<and> a = i) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [a, b] \\<and> c = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ a # b # c # zs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "proof (cases \"(a, b) = (i, x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case True"], ["proof (state)\nthis:\n  (a, b) = (i, x)\n\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "with Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  (a, b) = (i, x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  (a, b) = (i, x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by (cases xs) auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case False"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "note F = this"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "with F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "from F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j", "have \"(a, b) \\<in> set (arcs x j xs)\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (arcs x j xs)", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs x j xs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "from Cons.IH[OF this \\<open>b \\<noteq> j\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     xs = [b] \\<and> a = x \\<or>\n     (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n     (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "obtain c where c:\n        \"xs = [b] \\<and> a = x \\<or> (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or> (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j)\n         \\<or> (\\<exists>ys zs. xs = ys @ a # b # c # zs)\""], ["proof (prove)\nusing this:\n  \\<exists>c.\n     xs = [b] \\<and> a = x \\<or>\n     (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n     (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        xs = [b] \\<and> a = x \\<or>\n        (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  xs = [b] \\<and> a = x \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  xs = [b] \\<and> a = x \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = [b] \\<and> a = x \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [b] \\<and> a = x \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case 1"], ["proof (state)\nthis:\n  xs = [b] \\<and> a = x\n\ngoal (2 subgoals):\n 1. xs = [b] \\<and> a = x \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "with Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  xs = [b] \\<and> a = x", "show ?case"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  b \\<noteq> j\n  xs = [b] \\<and> a = x\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case 2"], ["proof (state)\nthis:\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n    (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n    (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>ys. xs = b # c # ys \\<and> a = x) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "proof (rule disjE3, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # c # ys \\<and> a = x \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case 1"], ["proof (state)\nthis:\n  \\<exists>ys. xs = b # c # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # c # ys \\<and> a = x \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = b # c # ys \\<and> a = x", "obtain ys where *: \"xs = b # ys \\<and> a = x\""], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = b # c # ys \\<and> a = x\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        xs = b # ys \\<and> a = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = b # ys \\<and> a = x\n\ngoal (3 subgoals):\n 1. \\<exists>ys. xs = b # c # ys \\<and> a = x \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 3. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = []", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = []\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain z zs where zs: \"ys = z # zs\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>z zs. ys = z # zs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases ys) auto"], ["proof (state)\nthis:\n  ys = z # zs\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "with *"], ["proof (chain)\npicking this:\n  xs = b # ys \\<and> a = x\n  ys = z # zs", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys \\<and> a = x\n  ys = z # zs\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case 2"], ["proof (state)\nthis:\n  \\<exists>ys. xs = ys @ [a, b] \\<and> c = j\n\ngoal (2 subgoals):\n 1. \\<exists>ys. xs = ys @ [a, b] \\<and> c = j \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n 2. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = ys @ [a, b] \\<and> c = j", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = ys @ [a, b] \\<and> c = j\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "case 3"], ["proof (state)\nthis:\n  \\<exists>ys zs. xs = ys @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. xs = ys @ a # b # c # zs", "obtain ys zs where \"xs = ys @ a # b # c # zs\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. xs = ys @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        xs = ys @ a # b # c # zs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = ys @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  xs = ys @ a # b # c # zs", "have \"x # xs = (x # ys) @ a # b # c # zs\""], ["proof (prove)\nusing this:\n  xs = ys @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. x # xs = (x # ys) @ a # b # c # zs", "by auto"], ["proof (state)\nthis:\n  x # xs = (x # ys) @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs. xs = ys @ a # b # c # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "then"], ["proof (chain)\npicking this:\n  x # xs = (x # ys) @ a # b # c # zs", "show ?thesis"], ["proof (prove)\nusing this:\n  x # xs = (x # ys) @ a # b # c # zs\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [b] \\<and> a = i \\<or>\n       (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n       (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)", "by blast"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. x # xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. x # xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ a # b # c # zs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma list_last:\n  \"xs = [] \\<or> (\\<exists> y ys. xs = ys @ [y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = [] \\<or> (\\<exists>y ys. xs = ys @ [y])", "by (induction xs) auto"], ["", "lemma arcs_predecessor'':\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\"\n shows \"\\<exists> c. xs = [a] \\<or> (\\<exists> ys. xs = a # b # ys) \\<or> (\\<exists> ys. xs = ys @ [c,a] \\<and> b = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ c # a # b # zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       xs = [a] \\<or>\n       (\\<exists>ys. xs = a # b # ys) \\<or>\n       (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. xs = ys @ c # a # b # zs)", "using assms"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       xs = [a] \\<or>\n       (\\<exists>ys. xs = a # b # ys) \\<or>\n       (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. xs = ys @ c # a # b # zs)", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            [] = [a] \\<or>\n                            (\\<exists>ys. [] = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                [] = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. [] = ys @ c # a # b # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    a \\<noteq> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [a] \\<or>\n                            (\\<exists>ys. aa # xs = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ c # a # b # zs)", "case Nil"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs i j [])\n  a \\<noteq> i\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(a, b) \\<in> set (arcs i j []); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            [] = [a] \\<or>\n                            (\\<exists>ys. [] = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                [] = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. [] = ys @ c # a # b # zs)\n 2. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    a \\<noteq> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [a] \\<or>\n                            (\\<exists>ys. aa # xs = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ c # a # b # zs)", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j [])\n  a \\<noteq> i", "show ?case"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j [])\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       [] = [a] \\<or>\n       (\\<exists>ys. [] = a # b # ys) \\<or>\n       (\\<exists>ys. [] = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. [] = ys @ c # a # b # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     [] = [a] \\<or>\n     (\\<exists>ys. [] = a # b # ys) \\<or>\n     (\\<exists>ys. [] = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. [] = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    a \\<noteq> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [a] \\<or>\n                            (\\<exists>ys. aa # xs = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ c # a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    a \\<noteq> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [a] \\<or>\n                            (\\<exists>ys. aa # xs = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ c # a # b # zs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>(a, b) \\<in> set (arcs ?i j xs); a \\<noteq> ?i\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       xs = [a] \\<or>\n                       (\\<exists>ys. xs = a # b # ys) \\<or>\n                       (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n                       (\\<exists>ys zs. xs = ys @ c # a # b # zs)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. \\<And>aa xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>(a, b) \\<in> set (arcs i j xs);\n                    a \\<noteq> i\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>c.\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs);\n        (a, b) \\<in> set (arcs i j (aa # xs)); a \\<noteq> i\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            aa # xs = [a] \\<or>\n                            (\\<exists>ys. aa # xs = a # b # ys) \\<or>\n                            (\\<exists>ys.\n                                aa # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                            (\\<exists>ys zs. aa # xs = ys @ c # a # b # zs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "proof (cases \"(a, b) = (i, x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case True"], ["proof (state)\nthis:\n  (a, b) = (i, x)\n\ngoal (2 subgoals):\n 1. (a, b) = (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n  (a, b) = (i, x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n  (a, b) = (i, x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "by (cases xs) auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case False"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "note F = this"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (i, x)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (i, x) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "from F Cons.prems"], ["proof (chain)\npicking this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i", "have *: \"(a, b) \\<in> set (arcs x j xs)\""], ["proof (prove)\nusing this:\n  (a, b) \\<noteq> (i, x)\n  (a, b) \\<in> set (arcs i j (x # xs))\n  a \\<noteq> i\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (arcs x j xs)", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs x j xs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "from False"], ["proof (chain)\npicking this:\n  xs \\<noteq> []", "obtain y ys where xs: \"xs = y # ys\""], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>y ys. xs = y # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases xs) auto"], ["proof (state)\nthis:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "proof (cases \"(a,b) = (x,y)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) = (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case True"], ["proof (state)\nthis:\n  (a, b) = (x, y)\n\ngoal (2 subgoals):\n 1. (a, b) = (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with * xs"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs x j xs)\n  xs = y # ys\n  (a, b) = (x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs x j xs)\n  xs = y # ys\n  (a, b) = (x, y)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case False"], ["proof (state)\nthis:\n  (a, b) \\<noteq> (x, y)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with * xs"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs x j xs)\n  xs = y # ys\n  (a, b) \\<noteq> (x, y)", "have **: \"(a, b) \\<in> set (arcs y j ys)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs x j xs)\n  xs = y # ys\n  (a, b) \\<noteq> (x, y)\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> set (arcs y j ys)", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> set (arcs y j ys)\n\ngoal (1 subgoal):\n 1. (a, b) \\<noteq> (x, y) \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with ** xs"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs y j ys)\n  xs = y # ys\n  ys = []", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs y j ys)\n  xs = y # ys\n  ys = []\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "by force"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "from arcs_cases'[OF ** this]"], ["proof (chain)\npicking this:\n  (\\<exists>ysa. ys = b # ysa \\<and> a = y) \\<or>\n  (\\<exists>ysa. ys = ysa @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ysa zs. ys = ysa @ a # b # zs)", "obtain ws zs where ***:\n            \"ys = b # ws \\<and> a = y \\<or> ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs\""], ["proof (prove)\nusing this:\n  (\\<exists>ysa. ys = b # ysa \\<and> a = y) \\<or>\n  (\\<exists>ysa. ys = ysa @ [a] \\<and> b = j) \\<or>\n  (\\<exists>ysa zs. ys = ysa @ a # b # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>ws zs.\n        ys = b # ws \\<and> a = y \\<or>\n        ys = ws @ [a] \\<and> b = j \\<or>\n        ys = ws @ a # b # zs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ys = b # ws \\<and> a = y \\<or>\n  ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "then"], ["proof (chain)\npicking this:\n  ys = b # ws \\<and> a = y \\<or>\n  ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs", "show ?thesis"], ["proof (prove)\nusing this:\n  ys = b # ws \\<and> a = y \\<or>\n  ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. ys = b # ws \\<and> a = y \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "using xs"], ["proof (prove)\nusing this:\n  xs = y # ys\n\ngoal (2 subgoals):\n 1. ys = b # ws \\<and> a = y \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. ys = ws @ [a] \\<and> b = j \\<or> ys = ws @ a # b # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = ws @ [a]; b = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. ys = ws @ a # b # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "using xs list_last[of ws]"], ["proof (prove)\nusing this:\n  xs = y # ys\n  ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = ws @ [a]; b = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. ys = ws @ a # b # zs \\<Longrightarrow>\n    \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply -"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = ws @ [a]; b = j; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (rotate_tac 3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (case_tac \"ws = []\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 3. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply auto[]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (subgoal_tac \"\\<exists>y ys. ws = ys @ [y]\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws \\<noteq> [];\n     \\<exists>y ys. ws = ys @ [y]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # j # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> j = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # j # zs)\n 2. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y ys. ws = ys @ [y]\n 3. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ys = ws @ [a];\n     b = j; xs = y # ys; ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y ys. ws = ys @ [y]\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (case_tac \"ws = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (subgoal_tac \"x # xs = [x] @ y # a # b # zs\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = [];\n     x # xs = [x] @ y # a # b # zs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = []\\<rbrakk>\n    \\<Longrightarrow> x # xs = [x] @ y # a # b # zs\n 3. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply (rule exI[where x = y])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = [];\n     x # xs = [x] @ y # a # b # zs\\<rbrakk>\n    \\<Longrightarrow> x # xs = [a] \\<or>\n                      (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                      (\\<exists>ys. x # xs = ys @ [y, a] \\<and> b = j) \\<or>\n                      (\\<exists>ys zs. x # xs = ys @ y # a # b # zs)\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = []\\<rbrakk>\n    \\<Longrightarrow> x # xs = [x] @ y # a # b # zs\n 3. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws = []\\<rbrakk>\n    \\<Longrightarrow> x # xs = [x] @ y # a # b # zs\n 2. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "case 1"], ["proof (state)\nthis:\n  ys = ws @ a # b # zs\n  xs = y # ys\n  ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\n  ws \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "then"], ["proof (chain)\npicking this:\n  ys = ws @ a # b # zs\n  xs = y # ys\n  ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\n  ws \\<noteq> []", "obtain u us where \"ws = us @ [u]\""], ["proof (prove)\nusing this:\n  ys = ws @ a # b # zs\n  xs = y # ys\n  ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y])\n  ws \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>us u. ws = us @ [u] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ws = us @ [u]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "with 1(1,2)"], ["proof (chain)\npicking this:\n  ys = ws @ a # b # zs\n  xs = y # ys\n  ws = us @ [u]", "have \"x # xs = (x # y # us) @ u # a # b # zs\""], ["proof (prove)\nusing this:\n  ys = ws @ a # b # zs\n  xs = y # ys\n  ws = us @ [u]\n\ngoal (1 subgoal):\n 1. x # xs = (x # y # us) @ u # a # b # zs", "by auto"], ["proof (state)\nthis:\n  x # xs = (x # y # us) @ u # a # b # zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = ws @ a # b # zs; xs = y # ys;\n     ws = [] \\<or> (\\<exists>y ys. ws = ys @ [y]); ws \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         x # xs = [a] \\<or>\n                         (\\<exists>ys. x # xs = a # b # ys) \\<or>\n                         (\\<exists>ys.\n                             x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n                         (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "then"], ["proof (chain)\npicking this:\n  x # xs = (x # y # us) @ u # a # b # zs", "show ?case"], ["proof (prove)\nusing this:\n  x # xs = (x # y # us) @ u # a # b # zs\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       x # xs = [a] \\<or>\n       (\\<exists>ys. x # xs = a # b # ys) \\<or>\n       (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n       (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)", "by blast"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     x # xs = [a] \\<or>\n     (\\<exists>ys. x # xs = a # b # ys) \\<or>\n     (\\<exists>ys. x # xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. x # xs = ys @ c # a # b # zs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcs_ex_middle:\n  \"\\<exists> b. (a, b) \\<in> set (arcs i j (ys @ a # xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b. (a, b) \\<in> set (arcs i j (ys @ a # xs))", "by (induction xs arbitrary: i ys) (auto simp: arcs_decomp)"], ["", "lemma arcs_ex_head:\n  \"\\<exists> b. (i, b) \\<in> set (arcs i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b. (i, b) \\<in> set (arcs i j xs)", "by (cases xs) auto"], ["", "subsection \\<open>Successive\\<close>"], ["", "fun successive where\n  \"successive _ [] = True\" |\n  \"successive P [_] = True\" |\n  \"successive P (x # y # xs) \\<longleftrightarrow> \\<not> P y \\<and> successive P xs \\<or> \\<not> P x \\<and> successive P (y # xs)\""], ["", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> successive ((<) 0) [Suc 0, Suc 0]", "by simp"], ["", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive ((<) 0) [Suc 0]", "by simp"], ["", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive ((<) 0) [Suc 0, 0, Suc 0]", "by simp"], ["", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> successive ((<) 0) [Suc 0, 0, Suc 0, Suc 0]", "by simp"], ["", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, 0, Suc 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> successive ((<) 0) [Suc 0, 0, 0, Suc 0, Suc 0]", "by simp"], ["", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, 0, Suc 0, 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive ((<) 0) [Suc 0, 0, Suc 0, 0, Suc 0]", "by simp"], ["", "lemma \"\\<not> successive (\\<lambda> x. x > (0 :: nat)) [Suc 0, Suc 0, 0, Suc 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> successive ((<) 0) [Suc 0, Suc 0, 0, Suc 0]", "by simp"], ["", "lemma \"successive (\\<lambda> x. x > (0 :: nat)) [0, 0, Suc 0, 0]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive ((<) 0) [0, 0, Suc 0, 0]", "by simp"], ["", "lemma successive_step: \"successive P (x # xs) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (x # xs); \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P xs", "apply (cases xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>successive P (x # xs); \\<not> P x; xs = []\\<rbrakk>\n    \\<Longrightarrow> successive P xs\n 2. \\<And>a list.\n       \\<lbrakk>successive P (x # xs); \\<not> P x; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>successive P (x # xs); \\<not> P x; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply (rename_tac y ys)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ys.\n       \\<lbrakk>successive P (x # xs); \\<not> P x; xs = y # ys\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y ys.\n       \\<lbrakk>successive P (x # xs); \\<not> P x; xs = y # ys;\n        ys = []\\<rbrakk>\n       \\<Longrightarrow> successive P xs\n 2. \\<And>y ys a list.\n       \\<lbrakk>successive P (x # xs); \\<not> P x; xs = y # ys;\n        ys = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma successive_step_2: \"successive P (x # y # xs) \\<Longrightarrow> \\<not> P y \\<Longrightarrow> successive P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (x # y # xs); \\<not> P y\\<rbrakk>\n    \\<Longrightarrow> successive P xs", "apply (cases xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>successive P (x # y # xs); \\<not> P y; xs = []\\<rbrakk>\n    \\<Longrightarrow> successive P xs\n 2. \\<And>a list.\n       \\<lbrakk>successive P (x # y # xs); \\<not> P y;\n        xs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>successive P (x # y # xs); \\<not> P y;\n        xs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply (rename_tac z zs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z zs.\n       \\<lbrakk>successive P (x # y # xs); \\<not> P y; xs = z # zs\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply (case_tac zs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z zs.\n       \\<lbrakk>successive P (x # y # xs); \\<not> P y; xs = z # zs;\n        zs = []\\<rbrakk>\n       \\<Longrightarrow> successive P xs\n 2. \\<And>z zs a list.\n       \\<lbrakk>successive P (x # y # xs); \\<not> P y; xs = z # zs;\n        zs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P xs", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma successive_stepI:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P xs; \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (x # xs)", "by (cases xs) auto"], ["", "theorem list_two_induct[case_names Nil Single Cons]:\n  fixes P :: \"'a list \\<Rightarrow> bool\" \n    and list :: \"'a list\" \n  assumes Nil: \"P []\"\n  assumes Single: \"\\<And> x. P [x]\"\n    and Cons: \"\\<And>x1 x2 xs. P xs \\<Longrightarrow> P (x2 # xs) \\<Longrightarrow> P (x1 # x2 # xs)\"\n  shows \"P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P xs", "using assms"], ["proof (prove)\nusing this:\n  P []\n  P [?x]\n  \\<lbrakk>P ?xs; P (?x2.0 # ?xs)\\<rbrakk>\n  \\<Longrightarrow> P (?x1.0 # ?x2.0 # ?xs)\n\ngoal (1 subgoal):\n 1. P xs", "apply (induction \"length xs\" arbitrary: xs rule: less_induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (rename_tac xs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = []\\<rbrakk>\n       \\<Longrightarrow> P xs\n 2. \\<And>xs a list.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # list\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs a list.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # list\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (rename_tac ys)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs a ys.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs a ys.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = []\\<rbrakk>\n       \\<Longrightarrow> P xs\n 2. \\<And>xs a ys aa list.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs a ys aa list.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (rename_tac zs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs a ys aa zs.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = aa # zs\\<rbrakk>\n       \\<Longrightarrow> P xs", "apply (case_tac zs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs a ys aa zs.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = aa # zs; zs = []\\<rbrakk>\n       \\<Longrightarrow> P xs\n 2. \\<And>xs a ys aa zs ab list.\n       \\<lbrakk>\\<And>xsa.\n                   \\<lbrakk>length xsa < length xs; P []; \\<And>x. P [x];\n                    \\<And>xs x2 x1.\n                       \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n                       \\<Longrightarrow> P (x1 # x2 # xs)\\<rbrakk>\n                   \\<Longrightarrow> P xsa;\n        P []; \\<And>x. P [x];\n        \\<And>xs x2 x1.\n           \\<lbrakk>P xs; P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> P (x1 # x2 # xs);\n        xs = a # ys; ys = aa # zs; zs = ab # list\\<rbrakk>\n       \\<Longrightarrow> P xs", "by auto"], ["", "lemma successive_end_1:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P xs; \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ [x])", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma successive_ends_1:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P ys \\<Longrightarrow> successive P (xs @ x # ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P xs; \\<not> P x; successive P ys\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ x # ys)", "by (induction _ xs rule: list_two_induct) (fastforce intro: successive_stepI)+"], ["", "lemma successive_ends_1':\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P z \\<Longrightarrow> successive P ys \\<Longrightarrow> successive P (xs @ x # y # z # ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P xs; \\<not> P x; P y; \\<not> P z;\n     successive P ys\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ x # y # z # ys)", "by (induction _ xs rule: list_two_induct) (fastforce intro: successive_stepI)+"], ["", "lemma successive_end_2:\n  \"successive P xs \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x,y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P xs; \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ [x, y])", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma successive_end_2':\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P (xs @ [x,y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (xs @ [x]); \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ [x, y])", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma successive_end_3:\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P z \\<Longrightarrow> successive P (xs @ [x,y,z])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (xs @ [x]); \\<not> P x; P y; \\<not> P z\\<rbrakk>\n    \\<Longrightarrow> successive P (xs @ [x, y, z])", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma successive_step_rev:\n  \"successive P (xs @ [x]) \\<Longrightarrow> \\<not> P x \\<Longrightarrow> successive P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (xs @ [x]); \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P xs", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma successive_glue:\n  \"successive P (zs @ [z]) \\<Longrightarrow> successive P (x # xs) \\<Longrightarrow> \\<not> P z \\<or> \\<not> P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (zs @ [z]); successive P (x # xs);\n     \\<not> P z \\<or> \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (zs @ [z]); successive P (x # xs);\n     \\<not> P z \\<or> \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "case A: 1"], ["proof (state)\nthis:\n  successive P (zs @ [z])\n  successive P (x # xs)\n  \\<not> P z \\<or> \\<not> P x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (zs @ [z]); successive P (x # xs);\n     \\<not> P z \\<or> \\<not> P x\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (zs @ [z] @ x # xs)", "proof (cases \"P x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)\n 2. \\<not> P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "case False"], ["proof (state)\nthis:\n  \\<not> P x\n\ngoal (2 subgoals):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)\n 2. \\<not> P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "with A(1,2) successive_ends_1 successive_step"], ["proof (chain)\npicking this:\n  successive P (zs @ [z])\n  successive P (x # xs)\n  \\<lbrakk>successive ?P ?xs; \\<not> ?P ?x; successive ?P ?ys\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?xs @ ?x # ?ys)\n  \\<lbrakk>successive ?P (?x # ?xs); \\<not> ?P ?x\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?xs\n  \\<not> P x", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (zs @ [z])\n  successive P (x # xs)\n  \\<lbrakk>successive ?P ?xs; \\<not> ?P ?x; successive ?P ?ys\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?xs @ ?x # ?ys)\n  \\<lbrakk>successive ?P (?x # ?xs); \\<not> ?P ?x\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?xs\n  \\<not> P x\n\ngoal (1 subgoal):\n 1. successive P (zs @ [z] @ x # xs)", "by fastforce"], ["proof (state)\nthis:\n  successive P (zs @ [z] @ x # xs)\n\ngoal (1 subgoal):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "case True"], ["proof (state)\nthis:\n  P x\n\ngoal (1 subgoal):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "with A(1,3) successive_step_rev"], ["proof (chain)\npicking this:\n  successive P (zs @ [z])\n  \\<not> P z \\<or> \\<not> P x\n  \\<lbrakk>successive ?P (?xs @ [?x]); \\<not> ?P ?x\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?xs\n  P x", "have \"\\<not> P z\" \"successive P zs\""], ["proof (prove)\nusing this:\n  successive P (zs @ [z])\n  \\<not> P z \\<or> \\<not> P x\n  \\<lbrakk>successive ?P (?xs @ [?x]); \\<not> ?P ?x\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?xs\n  P x\n\ngoal (1 subgoal):\n 1. \\<not> P z &&& successive P zs", "by fastforce+"], ["proof (state)\nthis:\n  \\<not> P z\n  successive P zs\n\ngoal (1 subgoal):\n 1. P x \\<Longrightarrow> successive P (zs @ [z] @ x # xs)", "with A(2) successive_ends_1"], ["proof (chain)\npicking this:\n  successive P (x # xs)\n  \\<lbrakk>successive ?P ?xs; \\<not> ?P ?x; successive ?P ?ys\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?xs @ ?x # ?ys)\n  \\<not> P z\n  successive P zs", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (x # xs)\n  \\<lbrakk>successive ?P ?xs; \\<not> ?P ?x; successive ?P ?ys\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?xs @ ?x # ?ys)\n  \\<not> P z\n  successive P zs\n\ngoal (1 subgoal):\n 1. successive P (zs @ [z] @ x # xs)", "by fastforce"], ["proof (state)\nthis:\n  successive P (zs @ [z] @ x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (zs @ [z] @ x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma successive_glue':\n  \"successive P (zs @ [y]) \\<and> \\<not> P z \\<or> successive P zs \\<and> \\<not> P y \n  \\<Longrightarrow> successive P (x # xs) \\<and> \\<not> P w \\<or> successive P xs \\<and> \\<not> P x\n  \\<Longrightarrow> \\<not> P z \\<or> \\<not> P w \\<Longrightarrow> successive P (zs @ y # z # w # x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n             successive P zs \\<and> \\<not> P y;\n     successive P (x # xs) \\<and> \\<not> P w \\<or>\n     successive P xs \\<and> \\<not> P x;\n     \\<not> P z \\<or> \\<not> P w\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ y # z # w # x # xs)", "by (metis append_Cons append_Nil successive.simps(3) successive_ends_1 successive_glue successive_stepI)"], ["", "lemma successive_dest_head:\n  \"xs = w # x # ys \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P (x # xs) \\<and> \\<not> P w \\<or> successive P xs \\<and> \\<not> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = w # x # ys; successive P xs\\<rbrakk>\n    \\<Longrightarrow> successive P (x # xs) \\<and> \\<not> P w \\<or>\n                      successive P xs \\<and> \\<not> P x", "by auto"], ["", "lemma successive_dest_tail:\n  \"xs = zs @ [y,z] \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or> successive P zs \\<and> \\<not> P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = zs @ [y, z]; successive P xs\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                      successive P zs \\<and> \\<not> P y", "apply (induction _ xs arbitrary: zs rule: list_two_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] = zs @ [y, z]; successive P []\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y\n 2. \\<And>x zs.\n       \\<lbrakk>[x] = zs @ [y, z]; successive P [x]\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y\n 3. \\<And>x1 x2 xs zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z]; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z]; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z])\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply (rename_tac zs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z])\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply (case_tac zs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]);\n        zs = []\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y\n 2. \\<And>x1 x2 xs zs a list.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]);\n        zs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs zs a list.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]);\n        zs = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply (rename_tac ws)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs zs a ws.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]);\n        zs = a # ws\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply (case_tac ws)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs zs a ws.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]); zs = a # ws;\n        ws = []\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y\n 2. \\<And>x1 x2 xs zs a ws aa list.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs = zs @ [y, z];\n                    successive P (zs @ [y, z])\\<rbrakk>\n                   \\<Longrightarrow> successive P (zs @ [y]) \\<and>\n                                     \\<not> P z \\<or>\n                                     successive P zs \\<and> \\<not> P y;\n        \\<And>zs.\n           \\<lbrakk>x2 # xs = zs @ [y, z];\n            successive P (zs @ [y, z])\\<rbrakk>\n           \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                             successive P zs \\<and> \\<not> P y;\n        x1 # x2 # xs = zs @ [y, z]; successive P (zs @ [y, z]); zs = a # ws;\n        ws = aa # list\\<rbrakk>\n       \\<Longrightarrow> successive P (zs @ [y]) \\<and> \\<not> P z \\<or>\n                         successive P zs \\<and> \\<not> P y", "apply force+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma successive_split:\n  \"xs = ys @ zs \\<Longrightarrow> successive P xs \\<Longrightarrow> successive P ys \\<and> successive P zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n    \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply (induction _ xs arbitrary: ys rule: list_two_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>[] = ys @ zs; successive P []\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x ys.\n       \\<lbrakk>[x] = ys @ zs; successive P [x]\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 3. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x ys.\n       \\<lbrakk>[x] = ys @ zs; successive P [x]\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply (rename_tac ys, case_tac ys)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x ys.\n       \\<lbrakk>[x] = ys @ zs; successive P [x]; ys = []\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x ys a list.\n       \\<lbrakk>[x] = ys @ zs; successive P [x]; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 3. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x ys a list.\n       \\<lbrakk>[x] = ys @ zs; successive P [x]; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply (rename_tac ys, case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs);\n        ys = []\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x1 x2 xs ys a list.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs);\n        ys = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs ys a list.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs);\n        ys = a # list\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply (rename_tac list, case_tac list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs ys a list.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs); ys = a # list;\n        list = []\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs\n 2. \\<And>x1 x2 xs ys a list aa lista.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>xs = ys @ zs; successive P xs\\<rbrakk>\n                   \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        \\<And>ys.\n           \\<lbrakk>x2 # xs = ys @ zs; successive P (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> successive P ys \\<and> successive P zs;\n        x1 # x2 # xs = ys @ zs; successive P (x1 # x2 # xs); ys = a # list;\n        list = aa # lista\\<rbrakk>\n       \\<Longrightarrow> successive P ys \\<and> successive P zs", "apply (auto intro: successive_stepI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma successive_decomp:\n  \"xs = x # ys @ zs @ [z] \\<Longrightarrow> successive P xs \\<Longrightarrow> \\<not> P x \\<or> \\<not> P z \\<Longrightarrow> successive P (zs @ [z] @ (x # ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = x # ys @ zs @ [z]; successive P xs;\n     \\<not> P x \\<or> \\<not> P z\\<rbrakk>\n    \\<Longrightarrow> successive P (zs @ [z] @ x # ys)", "by (metis Cons_eq_appendI successive_glue successive_split)"], ["", "lemma successive_predecessor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"a \\<noteq> i\" \"successive P (arcs i j xs)\" \"P (a,b)\" \"xs \\<noteq> []\"\n shows \"\\<exists> c. (xs = [a] \\<and> c = i \\<or> (\\<exists> ys. xs = a # b # ys \\<and> c = i) \\<or> (\\<exists> ys. xs = ys @ [c,a] \\<and> b = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ c # a # b # zs)) \\<and> \\<not> P (c,a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. xs = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. xs = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "from arcs_predecessor''[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     xs = [a] \\<or>\n     (\\<exists>ys. xs = a # b # ys) \\<or>\n     (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ c # a # b # zs)", "obtain c where c:\n    \"xs = [a] \\<or> (\\<exists>ys. xs = a # b # ys) \\<or> (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j)\n    \\<or> (\\<exists>ys zs. xs = ys @ c # a # b # zs)\""], ["proof (prove)\nusing this:\n  \\<exists>c.\n     xs = [a] \\<or>\n     (\\<exists>ys. xs = a # b # ys) \\<or>\n     (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        xs = [a] \\<or>\n        (\\<exists>ys. xs = a # b # ys) \\<or>\n        (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ c # a # b # zs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. xs = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "then"], ["proof (chain)\npicking this:\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = [a] \\<or>\n  (\\<exists>ys. xs = a # b # ys) \\<or>\n  (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ c # a # b # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. xs = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "proof (safe, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. xs = [a] \\<Longrightarrow>\n    \\<exists>c.\n       ([a] = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)\n 2. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 3. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 4. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "case 1"], ["proof (state)\nthis:\n  xs = [a]\n\ngoal (4 subgoals):\n 1. xs = [a] \\<Longrightarrow>\n    \\<exists>c.\n       ([a] = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)\n 2. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 3. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 4. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  xs = [a]", "have \"arcs i j xs = [(i, a), (a, j)]\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  xs = [a]\n\ngoal (1 subgoal):\n 1. arcs i j xs = [(i, a), (a, j)]", "by auto"], ["proof (state)\nthis:\n  arcs i j xs = [(i, a), (a, j)]\n\ngoal (4 subgoals):\n 1. xs = [a] \\<Longrightarrow>\n    \\<exists>c.\n       ([a] = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)\n 2. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 3. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 4. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  arcs i j xs = [(i, a), (a, j)]", "have \"\\<not> P (i, a)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  arcs i j xs = [(i, a), (a, j)]\n\ngoal (1 subgoal):\n 1. \\<not> P (i, a)", "by auto"], ["proof (state)\nthis:\n  \\<not> P (i, a)\n\ngoal (4 subgoals):\n 1. xs = [a] \\<Longrightarrow>\n    \\<exists>c.\n       ([a] = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)\n 2. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 3. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 4. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with 1"], ["proof (chain)\npicking this:\n  xs = [a]\n  \\<not> P (i, a)", "show ?case"], ["proof (prove)\nusing this:\n  xs = [a]\n  \\<not> P (i, a)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       ([a] = [a] \\<and> c = i \\<or>\n        (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n        (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "by simp"], ["proof (state)\nthis:\n  \\<exists>c.\n     ([a] = [a] \\<and> c = i \\<or>\n      (\\<exists>ys. [a] = a # b # ys \\<and> c = i) \\<or>\n      (\\<exists>ys. [a] = ys @ [c, a] \\<and> b = j) \\<or>\n      (\\<exists>ys zs. [a] = ys @ c # a # b # zs)) \\<and>\n     \\<not> P (c, a)\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 2. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 3. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 2. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 3. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "case 2"], ["proof (state)\nthis:\n  xs = a # b # ys_\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 2. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 3. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  xs = a # b # ys_", "have \"\\<not> P (i, a)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  xs = a # b # ys_\n\ngoal (1 subgoal):\n 1. \\<not> P (i, a)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (i, a)\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       xs = a # b # ys \\<Longrightarrow>\n       \\<exists>c.\n          (a # b # ys = [a] \\<and> c = i \\<or>\n           (\\<exists>ysa. a # b # ys = a # b # ysa \\<and> c = i) \\<or>\n           (\\<exists>ysa. a # b # ys = ysa @ [c, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zs. a # b # ys = ysa @ c # a # b # zs)) \\<and>\n          \\<not> P (c, a)\n 2. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 3. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with 2"], ["proof (chain)\npicking this:\n  xs = a # b # ys_\n  \\<not> P (i, a)", "show ?case"], ["proof (prove)\nusing this:\n  xs = a # b # ys_\n  \\<not> P (i, a)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (a # b # ys_ = [a] \\<and> c = i \\<or>\n        (\\<exists>ysa. a # b # ys_ = a # b # ysa \\<and> c = i) \\<or>\n        (\\<exists>ysa. a # b # ys_ = ysa @ [c, a] \\<and> b = j) \\<or>\n        (\\<exists>ysa zs. a # b # ys_ = ysa @ c # a # b # zs)) \\<and>\n       \\<not> P (c, a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     (a # b # ys_ = [a] \\<and> c = i \\<or>\n      (\\<exists>ysa. a # b # ys_ = a # b # ysa \\<and> c = i) \\<or>\n      (\\<exists>ysa. a # b # ys_ = ysa @ [c, a] \\<and> b = j) \\<or>\n      (\\<exists>ysa zs. a # b # ys_ = ysa @ c # a # b # zs)) \\<and>\n     \\<not> P (c, a)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 2. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 2. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "case 3"], ["proof (state)\nthis:\n  b = j\n  xs = ys_ @ [c, a]\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 2. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  b = j\n  xs = ys_ @ [c, a]", "have \"\\<not> P (c, a)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  b = j\n  xs = ys_ @ [c, a]\n\ngoal (1 subgoal):\n 1. \\<not> P (c, a)", "using arcs_decomp successive_dest_tail"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  a \\<noteq> i\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  b = j\n  xs = ys_ @ [c, a]\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n  \\<lbrakk>?xs = ?zs @ [?y, ?z]; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?zs @ [?y]) \\<and> \\<not> ?P ?z \\<or>\n                    successive ?P ?zs \\<and> \\<not> ?P ?y\n\ngoal (1 subgoal):\n 1. \\<not> P (c, a)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (c, a)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>b = j; xs = ys @ [c, a]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (ys @ [c, a] = [a] \\<and> ca = i \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = a # j # ysa \\<and>\n                                 ca = i) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [c, a] = ysa @ [ca, a] \\<and>\n                                 j = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [c, a] =\n                                 ysa @ ca # a # j # zs)) \\<and>\n                            \\<not> P (ca, a)\n 2. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with 3"], ["proof (chain)\npicking this:\n  b = j\n  xs = ys_ @ [c, a]\n  \\<not> P (c, a)", "show ?case"], ["proof (prove)\nusing this:\n  b = j\n  xs = ys_ @ [c, a]\n  \\<not> P (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ca.\n       (ys_ @ [c, a] = [a] \\<and> ca = i \\<or>\n        (\\<exists>ysa. ys_ @ [c, a] = a # j # ysa \\<and> ca = i) \\<or>\n        (\\<exists>ysa. ys_ @ [c, a] = ysa @ [ca, a] \\<and> j = j) \\<or>\n        (\\<exists>ysa zs. ys_ @ [c, a] = ysa @ ca # a # j # zs)) \\<and>\n       \\<not> P (ca, a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ca.\n     (ys_ @ [c, a] = [a] \\<and> ca = i \\<or>\n      (\\<exists>ysa. ys_ @ [c, a] = a # j # ysa \\<and> ca = i) \\<or>\n      (\\<exists>ysa. ys_ @ [c, a] = ysa @ [ca, a] \\<and> j = j) \\<or>\n      (\\<exists>ysa zs. ys_ @ [c, a] = ysa @ ca # a # j # zs)) \\<and>\n     \\<not> P (ca, a)\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "case 4"], ["proof (state)\nthis:\n  xs = ys_ @ c # a # b # zs_\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with assms(3,4)"], ["proof (chain)\npicking this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ c # a # b # zs_", "have \"\\<not> P (c, a)\""], ["proof (prove)\nusing this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ c # a # b # zs_\n\ngoal (1 subgoal):\n 1. \\<not> P (c, a)", "using arcs_decomp successive_split"], ["proof (prove)\nusing this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ c # a # b # zs_\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n  \\<lbrakk>?xs = ?ys @ ?zs; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?ys \\<and> successive ?P ?zs\n\ngoal (1 subgoal):\n 1. \\<not> P (c, a)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (c, a)\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ c # a # b # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ c # a # b # zs = [a] \\<and> ca = i \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = a # b # ysa \\<and> ca = i) \\<or>\n           (\\<exists>ysa.\n               ys @ c # a # b # zs = ysa @ [ca, a] \\<and> b = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ c # a # b # zs = ysa @ ca # a # b # zsa)) \\<and>\n          \\<not> P (ca, a)", "with 4"], ["proof (chain)\npicking this:\n  xs = ys_ @ c # a # b # zs_\n  \\<not> P (c, a)", "show ?case"], ["proof (prove)\nusing this:\n  xs = ys_ @ c # a # b # zs_\n  \\<not> P (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ca.\n       (ys_ @ c # a # b # zs_ = [a] \\<and> ca = i \\<or>\n        (\\<exists>ysa.\n            ys_ @ c # a # b # zs_ = a # b # ysa \\<and> ca = i) \\<or>\n        (\\<exists>ysa.\n            ys_ @ c # a # b # zs_ = ysa @ [ca, a] \\<and> b = j) \\<or>\n        (\\<exists>ysa zsa.\n            ys_ @ c # a # b # zs_ = ysa @ ca # a # b # zsa)) \\<and>\n       \\<not> P (ca, a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ca.\n     (ys_ @ c # a # b # zs_ = [a] \\<and> ca = i \\<or>\n      (\\<exists>ysa.\n          ys_ @ c # a # b # zs_ = a # b # ysa \\<and> ca = i) \\<or>\n      (\\<exists>ysa.\n          ys_ @ c # a # b # zs_ = ysa @ [ca, a] \\<and> b = j) \\<or>\n      (\\<exists>ysa zsa.\n          ys_ @ c # a # b # zs_ = ysa @ ca # a # b # zsa)) \\<and>\n     \\<not> P (ca, a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     (xs = [a] \\<and> c = i \\<or>\n      (\\<exists>ys. xs = a # b # ys \\<and> c = i) \\<or>\n      (\\<exists>ys. xs = ys @ [c, a] \\<and> b = j) \\<or>\n      (\\<exists>ys zs. xs = ys @ c # a # b # zs)) \\<and>\n     \\<not> P (c, a)\n\ngoal:\nNo subgoals!", "qed"], ["", "thm arcs_successor'"], ["", "lemma successive_successor:\n  assumes \"(a, b) \\<in> set (arcs i j xs)\" \"b \\<noteq> j\" \"successive P (arcs i j xs)\" \"P (a,b)\" \"xs \\<noteq> []\"\n shows \"\\<exists> c. (xs = [b] \\<and> c = j \\<or> (\\<exists> ys. xs = b # c # ys) \\<or> (\\<exists> ys. xs = ys @ [a,b] \\<and> c = j)\n       \\<or> (\\<exists> ys zs. xs = ys @ a # b # c # zs)) \\<and> \\<not> P (b,c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [b] \\<and> c = j \\<or>\n        (\\<exists>ys. xs = b # c # ys) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [b] \\<and> c = j \\<or>\n        (\\<exists>ys. xs = b # c # ys) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "from arcs_successor'[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  \\<exists>c.\n     xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "obtain c where c:\n    \"xs = [b] \\<and> a = i \\<or> (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or> (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j)\n     \\<or> (\\<exists>ys zs. xs = ys @ a # b # c # zs)\""], ["proof (prove)\nusing this:\n  \\<exists>c.\n     xs = [b] \\<and> a = i \\<or>\n     (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n     (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n     (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        xs = [b] \\<and> a = i \\<or>\n        (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [b] \\<and> c = j \\<or>\n        (\\<exists>ys. xs = b # c # ys) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "then"], ["proof (chain)\npicking this:\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = [b] \\<and> a = i \\<or>\n  (\\<exists>ys. xs = b # c # ys \\<and> a = i) \\<or>\n  (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n  (\\<exists>ys zs. xs = ys @ a # b # c # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (xs = [b] \\<and> c = j \\<or>\n        (\\<exists>ys. xs = b # c # ys) \\<or>\n        (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. xs = ys @ a # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "proof (safe, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>a = i; xs = [b]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         ([b] = [b] \\<and> c = j \\<or>\n                          (\\<exists>ys. [b] = b # c # ys) \\<or>\n                          (\\<exists>ys.\n                              [b] = ys @ [i, b] \\<and> c = j) \\<or>\n                          (\\<exists>ys zs.\n                              [b] = ys @ i # b # c # zs)) \\<and>\n                         \\<not> P (b, c)\n 2. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 3. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 4. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "case 1"], ["proof (state)\nthis:\n  a = i\n  xs = [b]\n\ngoal (4 subgoals):\n 1. \\<lbrakk>a = i; xs = [b]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         ([b] = [b] \\<and> c = j \\<or>\n                          (\\<exists>ys. [b] = b # c # ys) \\<or>\n                          (\\<exists>ys.\n                              [b] = ys @ [i, b] \\<and> c = j) \\<or>\n                          (\\<exists>ys zs.\n                              [b] = ys @ i # b # c # zs)) \\<and>\n                         \\<not> P (b, c)\n 2. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 3. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 4. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with assms(1,2)"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  a = i\n  xs = [b]", "have \"arcs i j xs = [(a,b), (b,j)]\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  a = i\n  xs = [b]\n\ngoal (1 subgoal):\n 1. arcs i j xs = [(a, b), (b, j)]", "by auto"], ["proof (state)\nthis:\n  arcs i j xs = [(a, b), (b, j)]\n\ngoal (4 subgoals):\n 1. \\<lbrakk>a = i; xs = [b]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         ([b] = [b] \\<and> c = j \\<or>\n                          (\\<exists>ys. [b] = b # c # ys) \\<or>\n                          (\\<exists>ys.\n                              [b] = ys @ [i, b] \\<and> c = j) \\<or>\n                          (\\<exists>ys zs.\n                              [b] = ys @ i # b # c # zs)) \\<and>\n                         \\<not> P (b, c)\n 2. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 3. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 4. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  arcs i j xs = [(a, b), (b, j)]", "have \"\\<not> P (b,j)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  arcs i j xs = [(a, b), (b, j)]\n\ngoal (1 subgoal):\n 1. \\<not> P (b, j)", "by auto"], ["proof (state)\nthis:\n  \\<not> P (b, j)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>a = i; xs = [b]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         ([b] = [b] \\<and> c = j \\<or>\n                          (\\<exists>ys. [b] = b # c # ys) \\<or>\n                          (\\<exists>ys.\n                              [b] = ys @ [i, b] \\<and> c = j) \\<or>\n                          (\\<exists>ys zs.\n                              [b] = ys @ i # b # c # zs)) \\<and>\n                         \\<not> P (b, c)\n 2. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 3. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 4. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with 1"], ["proof (chain)\npicking this:\n  a = i\n  xs = [b]\n  \\<not> P (b, j)", "show ?case"], ["proof (prove)\nusing this:\n  a = i\n  xs = [b]\n  \\<not> P (b, j)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       ([b] = [b] \\<and> c = j \\<or>\n        (\\<exists>ys. [b] = b # c # ys) \\<or>\n        (\\<exists>ys. [b] = ys @ [i, b] \\<and> c = j) \\<or>\n        (\\<exists>ys zs. [b] = ys @ i # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "by simp"], ["proof (state)\nthis:\n  \\<exists>c.\n     ([b] = [b] \\<and> c = j \\<or>\n      (\\<exists>ys. [b] = b # c # ys) \\<or>\n      (\\<exists>ys. [b] = ys @ [i, b] \\<and> c = j) \\<or>\n      (\\<exists>ys zs. [b] = ys @ i # b # c # zs)) \\<and>\n     \\<not> P (b, c)\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 2. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 3. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 2. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 3. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "case 2"], ["proof (state)\nthis:\n  a = i\n  xs = b # c # ys_\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 2. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 3. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  a = i\n  xs = b # c # ys_", "have \"\\<not> P (b, c)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  a = i\n  xs = b # c # ys_\n\ngoal (1 subgoal):\n 1. \\<not> P (b, c)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (b, c)\n\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>a = i; xs = b # c # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ca.\n                            (b # c # ys = [b] \\<and> ca = j \\<or>\n                             (\\<exists>ysa. b # c # ys = b # ca # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 b # c # ys = ysa @ [i, b] \\<and>\n                                 ca = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 b # c # ys = ysa @ i # b # ca # zs)) \\<and>\n                            \\<not> P (b, ca)\n 2. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 3. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with 2"], ["proof (chain)\npicking this:\n  a = i\n  xs = b # c # ys_\n  \\<not> P (b, c)", "show ?case"], ["proof (prove)\nusing this:\n  a = i\n  xs = b # c # ys_\n  \\<not> P (b, c)\n\ngoal (1 subgoal):\n 1. \\<exists>ca.\n       (b # c # ys_ = [b] \\<and> ca = j \\<or>\n        (\\<exists>ysa. b # c # ys_ = b # ca # ysa) \\<or>\n        (\\<exists>ysa. b # c # ys_ = ysa @ [i, b] \\<and> ca = j) \\<or>\n        (\\<exists>ysa zs. b # c # ys_ = ysa @ i # b # ca # zs)) \\<and>\n       \\<not> P (b, ca)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ca.\n     (b # c # ys_ = [b] \\<and> ca = j \\<or>\n      (\\<exists>ysa. b # c # ys_ = b # ca # ysa) \\<or>\n      (\\<exists>ysa. b # c # ys_ = ysa @ [i, b] \\<and> ca = j) \\<or>\n      (\\<exists>ysa zs. b # c # ys_ = ysa @ i # b # ca # zs)) \\<and>\n     \\<not> P (b, ca)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 2. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 2. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "case 3"], ["proof (state)\nthis:\n  c = j\n  xs = ys_ @ [a, b]\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 2. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with assms"], ["proof (chain)\npicking this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  c = j\n  xs = ys_ @ [a, b]", "have \"\\<not> P (b, c)\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  c = j\n  xs = ys_ @ [a, b]\n\ngoal (1 subgoal):\n 1. \\<not> P (b, c)", "using arcs_decomp successive_dest_tail"], ["proof (prove)\nusing this:\n  (a, b) \\<in> set (arcs i j xs)\n  b \\<noteq> j\n  successive P (arcs i j xs)\n  P (a, b)\n  xs \\<noteq> []\n  c = j\n  xs = ys_ @ [a, b]\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n  \\<lbrakk>?xs = ?zs @ [?y, ?z]; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?zs @ [?y]) \\<and> \\<not> ?P ?z \\<or>\n                    successive ?P ?zs \\<and> \\<not> ?P ?y\n\ngoal (1 subgoal):\n 1. \\<not> P (b, c)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (b, c)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>c = j; xs = ys @ [a, b]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c.\n                            (ys @ [a, b] = [b] \\<and> c = j \\<or>\n                             (\\<exists>ysa. ys @ [a, b] = b # c # ysa) \\<or>\n                             (\\<exists>ysa.\n                                 ys @ [a, b] = ysa @ [a, b] \\<and>\n                                 c = j) \\<or>\n                             (\\<exists>ysa zs.\n                                 ys @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n                            \\<not> P (b, c)\n 2. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with 3"], ["proof (chain)\npicking this:\n  c = j\n  xs = ys_ @ [a, b]\n  \\<not> P (b, c)", "show ?case"], ["proof (prove)\nusing this:\n  c = j\n  xs = ys_ @ [a, b]\n  \\<not> P (b, c)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       (ys_ @ [a, b] = [b] \\<and> c = j \\<or>\n        (\\<exists>ysa. ys_ @ [a, b] = b # c # ysa) \\<or>\n        (\\<exists>ysa. ys_ @ [a, b] = ysa @ [a, b] \\<and> c = j) \\<or>\n        (\\<exists>ysa zs. ys_ @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n       \\<not> P (b, c)", "by auto"], ["proof (state)\nthis:\n  \\<exists>c.\n     (ys_ @ [a, b] = [b] \\<and> c = j \\<or>\n      (\\<exists>ysa. ys_ @ [a, b] = b # c # ysa) \\<or>\n      (\\<exists>ysa. ys_ @ [a, b] = ysa @ [a, b] \\<and> c = j) \\<or>\n      (\\<exists>ysa zs. ys_ @ [a, b] = ysa @ a # b # c # zs)) \\<and>\n     \\<not> P (b, c)\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "case 4"], ["proof (state)\nthis:\n  xs = ys_ @ a # b # c # zs_\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with assms(3,4)"], ["proof (chain)\npicking this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ a # b # c # zs_", "have \"\\<not> P (b, c)\""], ["proof (prove)\nusing this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ a # b # c # zs_\n\ngoal (1 subgoal):\n 1. \\<not> P (b, c)", "using arcs_decomp successive_split"], ["proof (prove)\nusing this:\n  successive P (arcs i j xs)\n  P (a, b)\n  xs = ys_ @ a # b # c # zs_\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n  \\<lbrakk>?xs = ?ys @ ?zs; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?ys \\<and> successive ?P ?zs\n\ngoal (1 subgoal):\n 1. \\<not> P (b, c)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> P (b, c)\n\ngoal (1 subgoal):\n 1. \\<And>ys zs.\n       xs = ys @ a # b # c # zs \\<Longrightarrow>\n       \\<exists>ca.\n          (ys @ a # b # c # zs = [b] \\<and> ca = j \\<or>\n           (\\<exists>ysa. ys @ a # b # c # zs = b # ca # ysa) \\<or>\n           (\\<exists>ysa.\n               ys @ a # b # c # zs = ysa @ [a, b] \\<and> ca = j) \\<or>\n           (\\<exists>ysa zsa.\n               ys @ a # b # c # zs = ysa @ a # b # ca # zsa)) \\<and>\n          \\<not> P (b, ca)", "with 4"], ["proof (chain)\npicking this:\n  xs = ys_ @ a # b # c # zs_\n  \\<not> P (b, c)", "show ?case"], ["proof (prove)\nusing this:\n  xs = ys_ @ a # b # c # zs_\n  \\<not> P (b, c)\n\ngoal (1 subgoal):\n 1. \\<exists>ca.\n       (ys_ @ a # b # c # zs_ = [b] \\<and> ca = j \\<or>\n        (\\<exists>ysa. ys_ @ a # b # c # zs_ = b # ca # ysa) \\<or>\n        (\\<exists>ysa.\n            ys_ @ a # b # c # zs_ = ysa @ [a, b] \\<and> ca = j) \\<or>\n        (\\<exists>ysa zsa.\n            ys_ @ a # b # c # zs_ = ysa @ a # b # ca # zsa)) \\<and>\n       \\<not> P (b, ca)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ca.\n     (ys_ @ a # b # c # zs_ = [b] \\<and> ca = j \\<or>\n      (\\<exists>ysa. ys_ @ a # b # c # zs_ = b # ca # ysa) \\<or>\n      (\\<exists>ysa.\n          ys_ @ a # b # c # zs_ = ysa @ [a, b] \\<and> ca = j) \\<or>\n      (\\<exists>ysa zsa.\n          ys_ @ a # b # c # zs_ = ysa @ a # b # ca # zsa)) \\<and>\n     \\<not> P (b, ca)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c.\n     (xs = [b] \\<and> c = j \\<or>\n      (\\<exists>ys. xs = b # c # ys) \\<or>\n      (\\<exists>ys. xs = ys @ [a, b] \\<and> c = j) \\<or>\n      (\\<exists>ys zs. xs = ys @ a # b # c # zs)) \\<and>\n     \\<not> P (b, c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas add_mono_right = add_mono[OF order_refl]"], ["", "lemmas add_mono_left  = add_mono[OF _ order_refl]"], ["", "subsubsection \\<open>Obtaining successive and distinct paths\\<close>"], ["", "lemma canonical_successive:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\" \"j \\<le> n\"\n  shows \"\\<exists> ys. len M i j ys \\<le> len M i j xs \\<and> set ys \\<subseteq> {0..n}\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs i j ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j xs \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys)", "using assms"], ["proof (prove)\nusing this:\n  M \\<equiv> \\<lambda>i j. min (A i j) (B i j)\n  canonical A n\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j xs \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys)", "proof (induction xs arbitrary: i rule: list_two_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 2. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 3. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "case Nil"], ["proof (state)\nthis:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 2. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 3. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [] \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "case 2: (Single x i)"], ["proof (state)\nthis:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "proof (cases \"M i x = A i x \\<and> M x j = A x j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case False"], ["proof (state)\nthis:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)\n\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "then"], ["proof (chain)\npicking this:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)", "have \"successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\""], ["proof (prove)\nusing this:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])", "by auto"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\n\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "with 2"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])", "show ?thesis"], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case True"], ["proof (state)\nthis:\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "with 2"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i x = A i x \\<and> M x j = A x j", "have \"M i j \\<le> M i x + M x j\""], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "unfolding min_def"], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. if A i j \\<le> B i j then A i j else B i j)\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "by fastforce"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "with 2(3-)"], ["proof (chain)\npicking this:\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i j \\<le> M i x + M x j", "show ?thesis"], ["proof (prove)\nusing this:\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> n; i \\<le> n; j \\<le> n;\n     M i j \\<le> M i x + M x j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M i j ys \\<le> M i x + M x j \\<and>\n                         set ys \\<subseteq> {0..n} \\<and>\n                         successive\n                          (\\<lambda>a.\n                              case a of (a, b) \\<Rightarrow> M a b = A a b)\n                          (arcs i j ys)", "apply (rule exI[where x = \"[]\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> n; i \\<le> n; j \\<le> n;\n     M i j \\<le> M i x + M x j\\<rbrakk>\n    \\<Longrightarrow> len M i j [] \\<le> M i x + M x j \\<and>\n                      set [] \\<subseteq> {0..n} \\<and>\n                      successive\n                       (\\<lambda>a.\n                           case a of (a, b) \\<Rightarrow> M a b = A a b)\n                       (arcs i j [])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "case 3: (Cons x y xs i)"], ["proof (state)\nthis:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys);\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> {0..n} \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys);\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> {0..n} \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "proof (cases \"M i y \\<le> M i x + M x y\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case 1"], ["proof (state)\nthis:\n  M i y \\<le> M i x + M x y\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from 3"], ["proof (chain)\npicking this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n", "obtain ys where\n      \"len M i j ys \\<le> len M i j (y # xs) \\<and> set ys \\<subseteq> {0..n}\n       \\<and> successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j ys)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        len M i j ys \\<le> len M i j (y # xs) \\<and>\n        set ys \\<subseteq> {0..n} \\<and>\n        successive\n         (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n         (arcs i j ys) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  len M i j ys \\<le> len M i j (y # xs) \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "moreover"], ["proof (state)\nthis:\n  len M i j ys \\<le> len M i j (y # xs) \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from 1"], ["proof (chain)\npicking this:\n  M i y \\<le> M i x + M x y", "have \"len M i j (y # xs) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\nusing this:\n  M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. len M i j (y # xs) \\<le> len M i j (x # y # xs)", "using add_mono"], ["proof (prove)\nusing this:\n  M i y \\<le> M i x + M x y\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len M i j (y # xs) \\<le> len M i j (x # y # xs)", "by (auto simp: assoc[symmetric])"], ["proof (state)\nthis:\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "ultimately"], ["proof (chain)\npicking this:\n  len M i j ys \\<le> len M i j (y # xs) \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)", "show ?case"], ["proof (prove)\nusing this:\n  len M i j ys \\<le> len M i j (y # xs) \\<and>\n  set ys \\<subseteq> {0..n} \\<and>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "by force"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case False"], ["proof (state)\nthis:\n  \\<not> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "{"], ["proof (state)\nthis:\n  \\<not> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "assume \"M i x = A i x\" \"M x y = A x y\""], ["proof (state)\nthis:\n  M i x = A i x\n  M x y = A x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "with 3(3-)"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i x = A i x\n  M x y = A x y", "have \"A i y \\<le> M i x + M x y\""], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  M i x = A i x\n  M x y = A x y\n\ngoal (1 subgoal):\n 1. A i y \\<le> M i x + M x y", "by auto"], ["proof (state)\nthis:\n  A i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "then"], ["proof (chain)\npicking this:\n  A i y \\<le> M i x + M x y", "have \"M i y \\<le> M i x + M x y\""], ["proof (prove)\nusing this:\n  A i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. M i y \\<le> M i x + M x y", "unfolding M_def min_def"], ["proof (prove)\nusing this:\n  A i y\n  \\<le> (if A i x \\<le> B i x then A i x else B i x) +\n        (if A x y \\<le> B x y then A x y else B x y)\n\ngoal (1 subgoal):\n 1. (if A i y \\<le> B i y then A i y else B i y)\n    \\<le> (if A i x \\<le> B i x then A i x else B i x) +\n          (if A x y \\<le> B x y then A x y else B x y)", "by auto"], ["proof (state)\nthis:\n  M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "with False"], ["proof (chain)\npicking this:\n  \\<not> M i y \\<le> M i x + M x y\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y", "have \"M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\""], ["proof (prove)\nusing this:\n  \\<not> M i y \\<le> M i x + M x y\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y", "by auto"], ["proof (state)\nthis:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "then"], ["proof (chain)\npicking this:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y", "show ?thesis"], ["proof (prove)\nusing this:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case 1"], ["proof (state)\nthis:\n  M i x \\<noteq> A i x\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from 3"], ["proof (chain)\npicking this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n", "obtain ys where ys:\n        \"len M x j ys \\<le> len M x j (y # xs)\" \"set ys \\<subseteq> {0..n}\"\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs x j ys)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>len M x j ys \\<le> len M x j (y # xs);\n         set ys \\<subseteq> {0..n};\n         successive\n          (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n          (arcs x j ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force+"], ["proof (state)\nthis:\n  len M x j ys \\<le> len M x j (y # xs)\n  set ys \\<subseteq> {0..n}\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs x j ys)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from 1 successive_stepI[OF ys(3), of \"(i, x)\"]"], ["proof (chain)\npicking this:\n  M i x \\<noteq> A i x\n  \\<not> (case (i, x) of\n          (a, b) \\<Rightarrow> M a b = A a b) \\<Longrightarrow>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   ((i, x) # arcs x j ys)", "have\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j (x # ys))\""], ["proof (prove)\nusing this:\n  M i x \\<noteq> A i x\n  \\<not> (case (i, x) of\n          (a, b) \\<Rightarrow> M a b = A a b) \\<Longrightarrow>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   ((i, x) # arcs x j ys)\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n     (arcs i j (x # ys))", "by auto"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "moreover"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "have \"len M i j (x # ys) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M i j (x # ys) \\<le> len M i j (x # y # xs)", "using add_mono_right[OF ys(1)]"], ["proof (prove)\nusing this:\n  ?a + len M x j ys \\<le> ?a + len M x j (y # xs)\n\ngoal (1 subgoal):\n 1. len M i j (x # ys) \\<le> len M i j (x # y # xs)", "by auto"], ["proof (state)\nthis:\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "ultimately"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)", "show ?case"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "using 3(5) ys(2)"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n  set (x # y # xs) \\<subseteq> {0..n}\n  set ys \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "case 2"], ["proof (state)\nthis:\n  M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from 3"], ["proof (chain)\npicking this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n", "obtain ys where ys:\n        \"len M y j ys \\<le> len M y j xs\" \"set ys \\<subseteq> {0..n}\"\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs y j ys)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> {0..n} \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys)\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>len M y j ys \\<le> len M y j xs; set ys \\<subseteq> {0..n};\n         successive\n          (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n          (arcs y j ys)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force+"], ["proof (state)\nthis:\n  len M y j ys \\<le> len M y j xs\n  set ys \\<subseteq> {0..n}\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from this(3) 2"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n  M x y \\<noteq> A x y", "have\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j (x # y # ys))\""], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n  M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n     (arcs i j (x # y # ys))", "by simp"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "moreover"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "from add_mono_right[OF ys(1)]"], ["proof (chain)\npicking this:\n  ?a + len M y j ys \\<le> ?a + len M y j xs", "have\n        \"len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\nusing this:\n  ?a + len M y j ys \\<le> ?a + len M y j xs\n\ngoal (1 subgoal):\n 1. len M i j (x # y # ys) \\<le> len M i j (x # y # xs)", "by (auto simp: assoc[symmetric])"], ["proof (state)\nthis:\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "ultimately"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "using ys(2) 3(5)"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n  set ys \\<subseteq> {0..n}\n  set (x # y # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> {0..n} \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> {0..n} \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma canonical_successive_distinct:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\" \"j \\<le> n\"\n  assumes \"distinct xs\" \"i \\<notin> set xs\" \"j \\<notin> set xs\"\n  shows \"\\<exists> ys. len M i j ys \\<le> len M i j xs \\<and> set ys \\<subseteq> set xs\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs i j ys)\n               \\<and> distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j xs \\<and>\n       set ys \\<subseteq> set xs \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "using assms"], ["proof (prove)\nusing this:\n  M \\<equiv> \\<lambda>i j. min (A i j) (B i j)\n  canonical A n\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct xs\n  i \\<notin> set xs\n  j \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j xs \\<and>\n       set ys \\<subseteq> set xs \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "proof (induction xs arbitrary: i rule: list_two_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [];\n        i \\<notin> set []; j \\<notin> set []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [] \\<and>\n                            set ys \\<subseteq> set [] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [x];\n        i \\<notin> set [x]; j \\<notin> set [x]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> set [x] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 3. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "case Nil"], ["proof (state)\nthis:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct []\n  i \\<notin> set []\n  j \\<notin> set []\n\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [];\n        i \\<notin> set []; j \\<notin> set []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [] \\<and>\n                            set ys \\<subseteq> set [] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [x];\n        i \\<notin> set [x]; j \\<notin> set [x]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> set [x] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 3. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [] \\<and>\n       set ys \\<subseteq> set [] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [] \\<and>\n     set ys \\<subseteq> set [] \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [x];\n        i \\<notin> set [x]; j \\<notin> set [x]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> set [x] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [x];\n        i \\<notin> set [x]; j \\<notin> set [x]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> set [x] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "case 2: (Single x i)"], ["proof (state)\nthis:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n\ngoal (2 subgoals):\n 1. \\<And>x i.\n       \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set [x] \\<subseteq> {0..n}; i \\<le> n; j \\<le> n; distinct [x];\n        i \\<notin> set [x]; j \\<notin> set [x]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys \\<le> len M i j [x] \\<and>\n                            set ys \\<subseteq> set [x] \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "proof (cases \"M i x = A i x \\<and> M x j = A x j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case False"], ["proof (state)\nthis:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)\n\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "then"], ["proof (chain)\npicking this:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)", "have \"successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\""], ["proof (prove)\nusing this:\n  \\<not> (M i x = A i x \\<and> M x j = A x j)\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])", "by auto"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\n\ngoal (2 subgoals):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> (M i x = A i x \\<and> M x j = A x j) \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "with 2"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])", "show ?thesis"], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j [x])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> set [x] \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case True"], ["proof (state)\nthis:\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "with 2"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  M i x = A i x \\<and> M x j = A x j", "have \"M i j \\<le> M i x + M x j\""], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "unfolding min_def"], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. if A i j \\<le> B i j then A i j else B i j)\n  canonical A n\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  M i x = A i x \\<and> M x j = A x j\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "by fastforce"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. M i x = A i x \\<and> M x j = A x j \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "with 2(3-)"], ["proof (chain)\npicking this:\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  M i j \\<le> M i x + M x j", "show ?thesis"], ["proof (prove)\nusing this:\n  set [x] \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct [x]\n  i \\<notin> set [x]\n  j \\<notin> set [x]\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j [x] \\<and>\n       set ys \\<subseteq> set [x] \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> n; i \\<le> n; j \\<le> n; i \\<noteq> x; j \\<noteq> x;\n     M i j \\<le> M i x + M x j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M i j ys \\<le> M i x + M x j \\<and>\n                         set ys \\<subseteq> {x} \\<and>\n                         successive (\\<lambda>(a, b). M a b = A a b)\n                          (arcs i j ys) \\<and>\n                         distinct ys \\<and>\n                         i \\<notin> set ys \\<and> j \\<notin> set ys", "apply (rule exI[where x = \"[]\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> n; i \\<le> n; j \\<le> n; i \\<noteq> x; j \\<noteq> x;\n     M i j \\<le> M i x + M x j\\<rbrakk>\n    \\<Longrightarrow> len M i j [] \\<le> M i x + M x j \\<and>\n                      set [] \\<subseteq> {x} \\<and>\n                      successive (\\<lambda>(a, b). M a b = A a b)\n                       (arcs i j []) \\<and>\n                      distinct [] \\<and>\n                      i \\<notin> set [] \\<and> j \\<notin> set []", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> set [x] \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j [x] \\<and>\n     set ys \\<subseteq> set [x] \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "case 3: (Cons x y xs i)"], ["proof (state)\nthis:\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n; distinct xs;\n   ?i \\<notin> set xs; j \\<notin> set xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> set xs \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n   set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n;\n   distinct (y # xs); ?i \\<notin> set (y # xs);\n   j \\<notin> set (y # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> set (y # xs) \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j));\n                    canonical A n; set xs \\<subseteq> {0..n}; i \\<le> n;\n                    j \\<le> n; distinct xs; i \\<notin> set xs;\n                    j \\<notin> set xs\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  len M i j ys \\<le> len M i j xs \\<and>\n  set ys \\<subseteq> set xs \\<and>\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs i j ys) \\<and>\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys;\n        \\<And>i.\n           \\<lbrakk>M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n            set (x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n            distinct (x2 # xs); i \\<notin> set (x2 # xs);\n            j \\<notin> set (x2 # xs)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>ys.\n                                len M i j ys\n                                \\<le> len M i j (x2 # xs) \\<and>\n                                set ys \\<subseteq> set (x2 # xs) \\<and>\n                                successive (\\<lambda>(a, b). M a b = A a b)\n                                 (arcs i j ys) \\<and>\n                                distinct ys \\<and>\n                                i \\<notin> set ys \\<and> j \\<notin> set ys;\n        M = (\\<lambda>i j. min (A i j) (B i j)); canonical A n;\n        set (x1 # x2 # xs) \\<subseteq> {0..n}; i \\<le> n; j \\<le> n;\n        distinct (x1 # x2 # xs); i \\<notin> set (x1 # x2 # xs);\n        j \\<notin> set (x1 # x2 # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            len M i j ys\n                            \\<le> len M i j (x1 # x2 # xs) \\<and>\n                            set ys \\<subseteq> set (x1 # x2 # xs) \\<and>\n                            successive (\\<lambda>(a, b). M a b = A a b)\n                             (arcs i j ys) \\<and>\n                            distinct ys \\<and>\n                            i \\<notin> set ys \\<and> j \\<notin> set ys", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "proof (cases \"M i y \\<le> M i x + M x y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case 1: True"], ["proof (state)\nthis:\n  M i y \\<le> M i x + M x y\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from 3(2)[OF 3(3,4)] 3(5-10)"], ["proof (chain)\npicking this:\n  \\<lbrakk>set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n;\n   distinct (y # xs); ?i \\<notin> set (y # xs);\n   j \\<notin> set (y # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> set (y # xs) \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)", "obtain ys where ys:\n      \"len M i j ys \\<le> len M i j (y # xs)\" \"set ys \\<subseteq> set (x # y # xs)\"\n       \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j ys)\"\n       \"distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\""], ["proof (prove)\nusing this:\n  \\<lbrakk>set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n;\n   distinct (y # xs); ?i \\<notin> set (y # xs);\n   j \\<notin> set (y # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> set (y # xs) \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>len M i j ys \\<le> len M i j (y # xs);\n         set ys \\<subseteq> set (x # y # xs);\n         successive\n          (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n          (arcs i j ys);\n         distinct ys \\<and>\n         i \\<notin> set ys \\<and> j \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  len M i j ys \\<le> len M i j (y # xs)\n  set ys \\<subseteq> set (x # y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  len M i j ys \\<le> len M i j (y # xs)\n  set ys \\<subseteq> set (x # y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from 1"], ["proof (chain)\npicking this:\n  M i y \\<le> M i x + M x y", "have \"len M i j (y # xs) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\nusing this:\n  M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. len M i j (y # xs) \\<le> len M i j (x # y # xs)", "using add_mono"], ["proof (prove)\nusing this:\n  M i y \\<le> M i x + M x y\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len M i j (y # xs) \\<le> len M i j (x # y # xs)", "by (auto simp: assoc[symmetric])"], ["proof (state)\nthis:\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "ultimately"], ["proof (chain)\npicking this:\n  len M i j ys \\<le> len M i j (y # xs)\n  set ys \\<subseteq> set (x # y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)", "have \"len M i j ys \\<le> len M i j (x # y # xs)\""], ["proof (prove)\nusing this:\n  len M i j ys \\<le> len M i j (y # xs)\n  set ys \\<subseteq> set (x # y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n  len M i j (y # xs) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. len M i j ys \\<le> len M i j (x # y # xs)", "by auto"], ["proof (state)\nthis:\n  len M i j ys \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "then"], ["proof (chain)\npicking this:\n  len M i j ys \\<le> len M i j (x # y # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M i j ys \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "using ys(2-)"], ["proof (prove)\nusing this:\n  len M i j ys \\<le> len M i j (x # y # xs)\n  set ys \\<subseteq> set (x # y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j ys)\n  distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> set (x # y # xs) \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case False"], ["proof (state)\nthis:\n  \\<not> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "{"], ["proof (state)\nthis:\n  \\<not> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "assume \"M i x = A i x\" \"M x y = A x y\""], ["proof (state)\nthis:\n  M i x = A i x\n  M x y = A x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "with 3(3-)"], ["proof (chain)\npicking this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n  M i x = A i x\n  M x y = A x y", "have \"A i y \\<le> M i x + M x y\""], ["proof (prove)\nusing this:\n  M = (\\<lambda>i j. min (A i j) (B i j))\n  canonical A n\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n  M i x = A i x\n  M x y = A x y\n\ngoal (1 subgoal):\n 1. A i y \\<le> M i x + M x y", "by auto"], ["proof (state)\nthis:\n  A i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "then"], ["proof (chain)\npicking this:\n  A i y \\<le> M i x + M x y", "have \"M i y \\<le> M i x + M x y\""], ["proof (prove)\nusing this:\n  A i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. M i y \\<le> M i x + M x y", "unfolding M_def min_def"], ["proof (prove)\nusing this:\n  A i y\n  \\<le> (if A i x \\<le> B i x then A i x else B i x) +\n        (if A x y \\<le> B x y then A x y else B x y)\n\ngoal (1 subgoal):\n 1. (if A i y \\<le> B i y then A i y else B i y)\n    \\<le> (if A i x \\<le> B i x then A i x else B i x) +\n          (if A x y \\<le> B x y then A x y else B x y)", "by auto"], ["proof (state)\nthis:\n  M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "}"], ["proof (state)\nthis:\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "with False"], ["proof (chain)\npicking this:\n  \\<not> M i y \\<le> M i x + M x y\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y", "have \"M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\""], ["proof (prove)\nusing this:\n  \\<not> M i y \\<le> M i x + M x y\n  \\<lbrakk>M i x = A i x; M x y = A x y\\<rbrakk>\n  \\<Longrightarrow> M i y \\<le> M i x + M x y\n\ngoal (1 subgoal):\n 1. M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y", "by auto"], ["proof (state)\nthis:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. \\<not> M i y \\<le> M i x + M x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "then"], ["proof (chain)\npicking this:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y", "show ?thesis"], ["proof (prove)\nusing this:\n  M i x \\<noteq> A i x \\<or> M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case 1"], ["proof (state)\nthis:\n  M i x \\<noteq> A i x\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from 3(2)[OF 3(3,4)] 3(5-10)"], ["proof (chain)\npicking this:\n  \\<lbrakk>set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n;\n   distinct (y # xs); ?i \\<notin> set (y # xs);\n   j \\<notin> set (y # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> set (y # xs) \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)", "obtain ys where ys:\n        \"len M x j ys \\<le> len M x j (y # xs)\" \"set ys \\<subseteq> set (y # xs)\"\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs x j ys)\"\n        \"distinct ys\" \"i \\<notin> set ys\" \"x \\<notin> set ys\" \"j \\<notin> set ys\""], ["proof (prove)\nusing this:\n  \\<lbrakk>set (y # xs) \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n;\n   distinct (y # xs); ?i \\<notin> set (y # xs);\n   j \\<notin> set (y # xs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j (y # xs) \\<and>\n                       set ys \\<subseteq> set (y # xs) \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>len M x j ys \\<le> len M x j (y # xs);\n         set ys \\<subseteq> set (y # xs);\n         successive\n          (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n          (arcs x j ys);\n         distinct ys; i \\<notin> set ys; x \\<notin> set ys;\n         j \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  len M x j ys \\<le> len M x j (y # xs)\n  set ys \\<subseteq> set (y # xs)\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs x j ys)\n  distinct ys\n  i \\<notin> set ys\n  x \\<notin> set ys\n  j \\<notin> set ys\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from 1 successive_stepI[OF ys(3), of \"(i, x)\"]"], ["proof (chain)\npicking this:\n  M i x \\<noteq> A i x\n  \\<not> (case (i, x) of\n          (a, b) \\<Rightarrow> M a b = A a b) \\<Longrightarrow>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   ((i, x) # arcs x j ys)", "have\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j (x # ys))\""], ["proof (prove)\nusing this:\n  M i x \\<noteq> A i x\n  \\<not> (case (i, x) of\n          (a, b) \\<Rightarrow> M a b = A a b) \\<Longrightarrow>\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   ((i, x) # arcs x j ys)\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n     (arcs i j (x # ys))", "by auto"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "have \"len M i j (x # ys) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M i j (x # ys) \\<le> len M i j (x # y # xs)", "using add_mono_right[OF ys(1)]"], ["proof (prove)\nusing this:\n  ?a + len M x j ys \\<le> ?a + len M x j (y # xs)\n\ngoal (1 subgoal):\n 1. len M i j (x # ys) \\<le> len M i j (x # y # xs)", "by auto"], ["proof (state)\nthis:\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "have \"distinct (x # ys)\" \"i \\<notin> set (x # ys)\" \"j \\<notin> set (x # ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (x # ys) &&&\n    i \\<notin> set (x # ys) &&& j \\<notin> set (x # ys)", "using ys(4-) 3(8-)"], ["proof (prove)\nusing this:\n  distinct ys\n  i \\<notin> set ys\n  x \\<notin> set ys\n  j \\<notin> set ys\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. distinct (x # ys) &&&\n    i \\<notin> set (x # ys) &&& j \\<notin> set (x # ys)", "by auto"], ["proof (state)\nthis:\n  distinct (x # ys)\n  i \\<notin> set (x # ys)\n  j \\<notin> set (x # ys)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  distinct (x # ys)\n  i \\<notin> set (x # ys)\n  j \\<notin> set (x # ys)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from ys(2)"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> set (y # xs)", "have \"set (x # ys) \\<subseteq> set (x # y # xs)\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set (y # xs)\n\ngoal (1 subgoal):\n 1. set (x # ys) \\<subseteq> set (x # y # xs)", "by auto"], ["proof (state)\nthis:\n  set (x # ys) \\<subseteq> set (x # y # xs)\n\ngoal (2 subgoals):\n 1. M i x \\<noteq> A i x \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n 2. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "ultimately"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n  distinct (x # ys)\n  i \\<notin> set (x # ys)\n  j \\<notin> set (x # ys)\n  set (x # ys) \\<subseteq> set (x # y # xs)", "show ?case"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # ys))\n  len M i j (x # ys) \\<le> len M i j (x # y # xs)\n  distinct (x # ys)\n  i \\<notin> set (x # ys)\n  j \\<notin> set (x # ys)\n  set (x # ys) \\<subseteq> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> set (x # y # xs) \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "case 2"], ["proof (state)\nthis:\n  M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from 3(1)[OF 3(3,4)] 3(5-)"], ["proof (chain)\npicking this:\n  \\<lbrakk>set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n; distinct xs;\n   ?i \\<notin> set xs; j \\<notin> set xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> set xs \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)", "obtain ys where ys:\n        \"len M y j ys \\<le> len M y j xs\" \"set ys \\<subseteq> set xs\"\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs y j ys)\"\n        \"distinct ys\" \"j \\<notin> set ys\" \"y \\<notin> set ys\" \"i \\<notin> set ys\" \"x \\<notin> set ys\""], ["proof (prove)\nusing this:\n  \\<lbrakk>set xs \\<subseteq> {0..n}; ?i \\<le> n; j \\<le> n; distinct xs;\n   ?i \\<notin> set xs; j \\<notin> set xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M ?i j ys \\<le> len M ?i j xs \\<and>\n                       set ys \\<subseteq> set xs \\<and>\n                       successive\n                        (\\<lambda>a.\n                            case a of (a, b) \\<Rightarrow> M a b = A a b)\n                        (arcs ?i j ys) \\<and>\n                       distinct ys \\<and>\n                       ?i \\<notin> set ys \\<and> j \\<notin> set ys\n  set (x # y # xs) \\<subseteq> {0..n}\n  i \\<le> n\n  j \\<le> n\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>len M y j ys \\<le> len M y j xs; set ys \\<subseteq> set xs;\n         successive\n          (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n          (arcs y j ys);\n         distinct ys; j \\<notin> set ys; y \\<notin> set ys;\n         i \\<notin> set ys; x \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  len M y j ys \\<le> len M y j xs\n  set ys \\<subseteq> set xs\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n  distinct ys\n  j \\<notin> set ys\n  y \\<notin> set ys\n  i \\<notin> set ys\n  x \\<notin> set ys\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from this(3) 2"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n  M x y \\<noteq> A x y", "have\n        \"successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b) (arcs i j (x # y # ys))\""], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs y j ys)\n  M x y \\<noteq> A x y\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n     (arcs i j (x # y # ys))", "by simp"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "from add_mono_right[OF ys(1)]"], ["proof (chain)\npicking this:\n  ?a + len M y j ys \\<le> ?a + len M y j xs", "have\n        \"len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\""], ["proof (prove)\nusing this:\n  ?a + len M y j ys \\<le> ?a + len M y j xs\n\ngoal (1 subgoal):\n 1. len M i j (x # y # ys) \\<le> len M i j (x # y # xs)", "by (auto simp: assoc[symmetric])"], ["proof (state)\nthis:\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "moreover"], ["proof (state)\nthis:\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "have \"distinct (x # y # ys)\" \"i \\<notin> set (x # y # ys)\" \"j \\<notin> set (x # y # ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (x # y # ys) &&&\n    i \\<notin> set (x # y # ys) &&& j \\<notin> set (x # y # ys)", "using ys(4-) 3(8-)"], ["proof (prove)\nusing this:\n  distinct ys\n  j \\<notin> set ys\n  y \\<notin> set ys\n  i \\<notin> set ys\n  x \\<notin> set ys\n  distinct (x # y # xs)\n  i \\<notin> set (x # y # xs)\n  j \\<notin> set (x # y # xs)\n\ngoal (1 subgoal):\n 1. distinct (x # y # ys) &&&\n    i \\<notin> set (x # y # ys) &&& j \\<notin> set (x # y # ys)", "by auto"], ["proof (state)\nthis:\n  distinct (x # y # ys)\n  i \\<notin> set (x # y # ys)\n  j \\<notin> set (x # y # ys)\n\ngoal (1 subgoal):\n 1. M x y \\<noteq> A x y \\<Longrightarrow>\n    \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "ultimately"], ["proof (chain)\npicking this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n  distinct (x # y # ys)\n  i \\<notin> set (x # y # ys)\n  j \\<notin> set (x # y # ys)", "show ?thesis"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n  distinct (x # y # ys)\n  i \\<notin> set (x # y # ys)\n  j \\<notin> set (x # y # ys)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "using ys(2)"], ["proof (prove)\nusing this:\n  successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n   (arcs i j (x # y # ys))\n  len M i j (x # y # ys) \\<le> len M i j (x # y # xs)\n  distinct (x # y # ys)\n  i \\<notin> set (x # y # ys)\n  j \\<notin> set (x # y # ys)\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n       set ys \\<subseteq> set (x # y # xs) \\<and>\n       successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n        (arcs i j ys) \\<and>\n       distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> set (x # y # xs) \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> set (x # y # xs) \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M i j ys \\<le> len M i j (x # y # xs) \\<and>\n     set ys \\<subseteq> set (x # y # xs) \\<and>\n     successive (\\<lambda>a. case a of (a, b) \\<Rightarrow> M a b = A a b)\n      (arcs i j ys) \\<and>\n     distinct ys \\<and> i \\<notin> set ys \\<and> j \\<notin> set ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma successive_snd_last: \"successive P (xs @ [x, y]) \\<Longrightarrow> P y \\<Longrightarrow> \\<not> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (xs @ [x, y]); P y\\<rbrakk>\n    \\<Longrightarrow> \\<not> P x", "by (induction _ xs rule: list_two_induct) auto"], ["", "lemma canonical_shorten_rotate_neg_cycle:\n  fixes A B\n  defines \"M \\<equiv> \\<lambda> i j. min (A i j) (B i j)\"\n  assumes \"canonical A n\"\n  assumes \"set xs \\<subseteq> {0..n}\"\n  assumes \"i \\<le> n\"\n  assumes \"len M i i xs < \\<one>\"\n  shows \"\\<exists> j ys. len M j j ys < \\<one> \\<and> set (j # ys) \\<subseteq> set (i # xs)\n               \\<and> successive (\\<lambda> (a, b). M a b = A a b) (arcs j j ys)\n               \\<and> distinct ys \\<and> j \\<notin> set ys \\<and>\n               (ys \\<noteq> [] \\<longrightarrow> M j (hd ys) \\<noteq> A j (hd ys) \\<or> M (last ys) j \\<noteq> A (last ys) j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "using assms"], ["proof (prove)\nusing this:\n  M \\<equiv> \\<lambda>i j. min (A i j) (B i j)\n  canonical A n\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n  len M i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<equiv> \\<lambda>i j. min (A i j) (B i j); canonical A n;\n     set xs \\<subseteq> {0..n}; i \\<le> n; len M i i xs < \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         len M j j ys < \\<one> \\<and>\n                         set (j # ys) \\<subseteq> set (i # xs) \\<and>\n                         successive (\\<lambda>(a, b). M a b = A a b)\n                          (arcs j j ys) \\<and>\n                         distinct ys \\<and>\n                         j \\<notin> set ys \\<and>\n                         (ys \\<noteq> [] \\<longrightarrow>\n                          M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n                          M (last ys) j \\<noteq> A (last ys) j)", "note A = assms"], ["proof (state)\nthis:\n  M \\<equiv> \\<lambda>i j. min (A i j) (B i j)\n  canonical A n\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n  len M i i xs < \\<one>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<equiv> \\<lambda>i j. min (A i j) (B i j); canonical A n;\n     set xs \\<subseteq> {0..n}; i \\<le> n; len M i i xs < \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         len M j j ys < \\<one> \\<and>\n                         set (j # ys) \\<subseteq> set (i # xs) \\<and>\n                         successive (\\<lambda>(a, b). M a b = A a b)\n                          (arcs j j ys) \\<and>\n                         distinct ys \\<and>\n                         j \\<notin> set ys \\<and>\n                         (ys \\<noteq> [] \\<longrightarrow>\n                          M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n                          M (last ys) j \\<noteq> A (last ys) j)", "from negative_len_shortest[OF _ A(5)]"], ["proof (chain)\npicking this:\n  length xs = ?n \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len M j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "obtain j ys where ys:\n    \"distinct (j # ys)\" \"len M j j ys < \\<one>\" \"j \\<in> set (i # xs)\" \"set ys \\<subseteq> set xs\""], ["proof (prove)\nusing this:\n  length xs = ?n \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len M j j ys < \\<one> \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>j ys.\n        \\<lbrakk>distinct (j # ys); len M j j ys < \\<one>;\n         j \\<in> set (i # xs); set ys \\<subseteq> set xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<equiv> \\<lambda>i j. min (A i j) (B i j); canonical A n;\n     set xs \\<subseteq> {0..n}; i \\<le> n; len M i i xs < \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         len M j j ys < \\<one> \\<and>\n                         set (j # ys) \\<subseteq> set (i # xs) \\<and>\n                         successive (\\<lambda>(a, b). M a b = A a b)\n                          (arcs j j ys) \\<and>\n                         distinct ys \\<and>\n                         j \\<notin> set ys \\<and>\n                         (ys \\<noteq> [] \\<longrightarrow>\n                          M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n                          M (last ys) j \\<noteq> A (last ys) j)", "from this(1,3) canonical_successive_distinct[OF A(2) subset_trans[OF this(4) A(3)], of j j B] A(3,4)"], ["proof (chain)\npicking this:\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  \\<lbrakk>j \\<le> n; j \\<le> n; distinct ys; j \\<notin> set ys;\n   j \\<notin> set ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       len (\\<lambda>i j. min (A i j) (B i j)) j j ysa\n                       \\<le> len (\\<lambda>i j. min (A i j) (B i j)) j j\n                              ys \\<and>\n                       set ysa \\<subseteq> set ys \\<and>\n                       successive\n                        (\\<lambda>(a, b). min (A a b) (B a b) = A a b)\n                        (arcs j j ysa) \\<and>\n                       distinct ysa \\<and>\n                       j \\<notin> set ysa \\<and> j \\<notin> set ysa\n  set xs \\<subseteq> {0..n}\n  i \\<le> n", "obtain zs where zs:\n    \"len M j j zs \\<le> len M j j ys\"\n    \"set zs \\<subseteq> set ys\" \"successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\"\n    \"distinct zs\" \"j \\<notin> set zs\""], ["proof (prove)\nusing this:\n  distinct (j # ys)\n  j \\<in> set (i # xs)\n  \\<lbrakk>j \\<le> n; j \\<le> n; distinct ys; j \\<notin> set ys;\n   j \\<notin> set ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       len (\\<lambda>i j. min (A i j) (B i j)) j j ysa\n                       \\<le> len (\\<lambda>i j. min (A i j) (B i j)) j j\n                              ys \\<and>\n                       set ysa \\<subseteq> set ys \\<and>\n                       successive\n                        (\\<lambda>(a, b). min (A a b) (B a b) = A a b)\n                        (arcs j j ysa) \\<and>\n                       distinct ysa \\<and>\n                       j \\<notin> set ysa \\<and> j \\<notin> set ysa\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>len M j j zs \\<le> len M j j ys; set zs \\<subseteq> set ys;\n         successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs);\n         distinct zs; j \\<notin> set zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: M_def)"], ["proof (state)\nthis:\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<equiv> \\<lambda>i j. min (A i j) (B i j); canonical A n;\n     set xs \\<subseteq> {0..n}; i \\<le> n; len M i i xs < \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         len M j j ys < \\<one> \\<and>\n                         set (j # ys) \\<subseteq> set (i # xs) \\<and>\n                         successive (\\<lambda>(a, b). M a b = A a b)\n                          (arcs j j ys) \\<and>\n                         distinct ys \\<and>\n                         j \\<notin> set ys \\<and>\n                         (ys \\<noteq> [] \\<longrightarrow>\n                          M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n                          M (last ys) j \\<noteq> A (last ys) j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "proof (cases \"zs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. zs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "assume \"zs \\<noteq> []\""], ["proof (state)\nthis:\n  zs \\<noteq> []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. zs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "then"], ["proof (chain)\npicking this:\n  zs \\<noteq> []", "obtain w ws where ws: \"zs = w # ws\""], ["proof (prove)\nusing this:\n  zs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>w ws. zs = w # ws \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases zs) auto"], ["proof (state)\nthis:\n  zs = w # ws\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. zs \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "proof (cases \"ws = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. ws \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "case False"], ["proof (state)\nthis:\n  ws \\<noteq> []\n\ngoal (2 subgoals):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. ws \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "then"], ["proof (chain)\npicking this:\n  ws \\<noteq> []", "obtain u us where us: \"ws = us @ [u]\""], ["proof (prove)\nusing this:\n  ws \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>us u. ws = us @ [u] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induction ws) auto"], ["proof (state)\nthis:\n  ws = us @ [u]\n\ngoal (2 subgoals):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. ws \\<noteq> [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "proof (cases \"M j w = A j w \\<and> M u j = A u j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "case True"], ["proof (state)\nthis:\n  M j w = A j w \\<and> M u j = A u j\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "have \"u \\<le> n\" \"j \\<le> n\" \"w \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> n &&& j \\<le> n &&& w \\<le> n", "using us ws zs(2) ys(3,4) A(3,4)"], ["proof (prove)\nusing this:\n  ws = us @ [u]\n  zs = w # ws\n  set zs \\<subseteq> set ys\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  set xs \\<subseteq> {0..n}\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. u \\<le> n &&& j \\<le> n &&& w \\<le> n", "by auto"], ["proof (state)\nthis:\n  u \\<le> n\n  j \\<le> n\n  w \\<le> n\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "with A(2) True"], ["proof (chain)\npicking this:\n  canonical A n\n  M j w = A j w \\<and> M u j = A u j\n  u \\<le> n\n  j \\<le> n\n  w \\<le> n", "have \"M u w \\<le> M u j + M j w\""], ["proof (prove)\nusing this:\n  canonical A n\n  M j w = A j w \\<and> M u j = A u j\n  u \\<le> n\n  j \\<le> n\n  w \\<le> n\n\ngoal (1 subgoal):\n 1. M u w \\<le> M u j + M j w", "unfolding M_def min_def"], ["proof (prove)\nusing this:\n  canonical A n\n  (if A j w \\<le> B j w then A j w else B j w) = A j w \\<and>\n  (if A u j \\<le> B u j then A u j else B u j) = A u j\n  u \\<le> n\n  j \\<le> n\n  w \\<le> n\n\ngoal (1 subgoal):\n 1. (if A u w \\<le> B u w then A u w else B u w)\n    \\<le> (if A u j \\<le> B u j then A u j else B u j) +\n          (if A j w \\<le> B j w then A j w else B j w)", "by fastforce"], ["proof (state)\nthis:\n  M u w \\<le> M u j + M j w\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "then"], ["proof (chain)\npicking this:\n  M u w \\<le> M u j + M j w", "have\n          \"len M u u (w # us) \\<le> len M j j zs\""], ["proof (prove)\nusing this:\n  M u w \\<le> M u j + M j w\n\ngoal (1 subgoal):\n 1. len M u u (w # us) \\<le> len M j j zs", "using ws us"], ["proof (prove)\nusing this:\n  M u w \\<le> M u j + M j w\n  zs = w # ws\n  ws = us @ [u]\n\ngoal (1 subgoal):\n 1. len M u u (w # us) \\<le> len M j j zs", "by (simp add: len_comp comm) (auto intro: add_mono simp: assoc[symmetric])"], ["proof (state)\nthis:\n  len M u u (w # us) \\<le> len M j j zs\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "moreover"], ["proof (state)\nthis:\n  len M u u (w # us) \\<le> len M j j zs\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "have \"set (u # w # us) \\<subseteq> set (i # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (u # w # us) \\<subseteq> set (i # xs)", "using ws us zs(2) ys(3,4)"], ["proof (prove)\nusing this:\n  zs = w # ws\n  ws = us @ [u]\n  set zs \\<subseteq> set ys\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. set (u # w # us) \\<subseteq> set (i # xs)", "by auto"], ["proof (state)\nthis:\n  set (u # w # us) \\<subseteq> set (i # xs)\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "moreover"], ["proof (state)\nthis:\n  set (u # w # us) \\<subseteq> set (i # xs)\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "have \"distinct (w # us)\" \"u \\<notin> set (w # us)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (w # us) &&& u \\<notin> set (w # us)", "using ws us zs(4)"], ["proof (prove)\nusing this:\n  zs = w # ws\n  ws = us @ [u]\n  distinct zs\n\ngoal (1 subgoal):\n 1. distinct (w # us) &&& u \\<notin> set (w # us)", "by auto"], ["proof (state)\nthis:\n  distinct (w # us)\n  u \\<notin> set (w # us)\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "moreover"], ["proof (state)\nthis:\n  distinct (w # us)\n  u \\<notin> set (w # us)\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "have \"successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "proof (cases us)"], ["proof (state)\ngoal (2 subgoals):\n 1. us = [] \\<Longrightarrow>\n    successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n 2. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "case Nil"], ["proof (state)\nthis:\n  us = []\n\ngoal (2 subgoals):\n 1. us = [] \\<Longrightarrow>\n    successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n 2. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "with zs(3) ws us True"], ["proof (chain)\npicking this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = []", "show ?thesis"], ["proof (prove)\nusing this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = []\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "by auto"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "case (Cons v vs)"], ["proof (state)\nthis:\n  us = v # vs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "with zs(3) ws us True"], ["proof (chain)\npicking this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = v # vs", "have \"M w v \\<noteq> A w v\""], ["proof (prove)\nusing this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = v # vs\n\ngoal (1 subgoal):\n 1. M w v \\<noteq> A w v", "by auto"], ["proof (state)\nthis:\n  M w v \\<noteq> A w v\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       us = a # list \\<Longrightarrow>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "with ws us Cons zs(3) True arcs_decomp_tail successive_split"], ["proof (chain)\npicking this:\n  zs = w # ws\n  ws = us @ [u]\n  us = v # vs\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  M j w = A j w \\<and> M u j = A u j\n  arcs ?j ?l (?ys @ [?i]) = arcs ?j ?i ?ys @ [(?i, ?l)]\n  \\<lbrakk>?xs = ?ys @ ?zs; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?ys \\<and> successive ?P ?zs\n  M w v \\<noteq> A w v", "show ?thesis"], ["proof (prove)\nusing this:\n  zs = w # ws\n  ws = us @ [u]\n  us = v # vs\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  M j w = A j w \\<and> M u j = A u j\n  arcs ?j ?l (?ys @ [?i]) = arcs ?j ?i ?ys @ [(?i, ?l)]\n  \\<lbrakk>?xs = ?ys @ ?zs; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?ys \\<and> successive ?P ?zs\n  M w v \\<noteq> A w v\n\ngoal (1 subgoal):\n 1. successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))", "by (simp, blast)"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "moreover"], ["proof (state)\nthis:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "have \"M (last (w # us)) u \\<noteq> A (last (w # us)) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M (last (w # us)) u \\<noteq> A (last (w # us)) u", "proof (cases \"us = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. us = [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u\n 2. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "case T: True"], ["proof (state)\nthis:\n  us = []\n\ngoal (2 subgoals):\n 1. us = [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u\n 2. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "with zs(3) ws us True"], ["proof (chain)\npicking this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = []", "show ?thesis"], ["proof (prove)\nusing this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  zs = w # ws\n  ws = us @ [u]\n  M j w = A j w \\<and> M u j = A u j\n  us = []\n\ngoal (1 subgoal):\n 1. M (last (w # us)) u \\<noteq> A (last (w # us)) u", "by auto"], ["proof (state)\nthis:\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u\n\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "case False"], ["proof (state)\nthis:\n  us \\<noteq> []\n\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "then"], ["proof (chain)\npicking this:\n  us \\<noteq> []", "obtain v vs where vs: \"us = vs @ [v]\""], ["proof (prove)\nusing this:\n  us \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>vs v. us = vs @ [v] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induction us) auto"], ["proof (state)\nthis:\n  us = vs @ [v]\n\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "with ws us"], ["proof (chain)\npicking this:\n  zs = w # ws\n  ws = us @ [u]\n  us = vs @ [v]", "have \"arcs j j zs = arcs j v (w # vs) @ [(v, u), (u,j)]\""], ["proof (prove)\nusing this:\n  zs = w # ws\n  ws = us @ [u]\n  us = vs @ [v]\n\ngoal (1 subgoal):\n 1. arcs j j zs = arcs j v (w # vs) @ [(v, u), (u, j)]", "by (simp add: arcs_decomp)"], ["proof (state)\nthis:\n  arcs j j zs = arcs j v (w # vs) @ [(v, u), (u, j)]\n\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "with zs(3) True"], ["proof (chain)\npicking this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  M j w = A j w \\<and> M u j = A u j\n  arcs j j zs = arcs j v (w # vs) @ [(v, u), (u, j)]", "have \"M v u \\<noteq> A v u\""], ["proof (prove)\nusing this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  M j w = A j w \\<and> M u j = A u j\n  arcs j j zs = arcs j v (w # vs) @ [(v, u), (u, j)]\n\ngoal (1 subgoal):\n 1. M v u \\<noteq> A v u", "using successive_snd_last[of \"\\<lambda>(a, b). M a b = A a b\" \"arcs j v (w # vs)\"]"], ["proof (prove)\nusing this:\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  M j w = A j w \\<and> M u j = A u j\n  arcs j j zs = arcs j v (w # vs) @ [(v, u), (u, j)]\n  \\<lbrakk>successive (\\<lambda>(a, b). M a b = A a b)\n            (arcs j v (w # vs) @ [?x, ?y]);\n   case ?y of (a, b) \\<Rightarrow> M a b = A a b\\<rbrakk>\n  \\<Longrightarrow> \\<not> (case ?x of (a, b) \\<Rightarrow> M a b = A a b)\n\ngoal (1 subgoal):\n 1. M v u \\<noteq> A v u", "by auto"], ["proof (state)\nthis:\n  M v u \\<noteq> A v u\n\ngoal (1 subgoal):\n 1. us \\<noteq> [] \\<Longrightarrow>\n    M (last (w # us)) u \\<noteq> A (last (w # us)) u", "with vs"], ["proof (chain)\npicking this:\n  us = vs @ [v]\n  M v u \\<noteq> A v u", "show ?thesis"], ["proof (prove)\nusing this:\n  us = vs @ [v]\n  M v u \\<noteq> A v u\n\ngoal (1 subgoal):\n 1. M (last (w # us)) u \\<noteq> A (last (w # us)) u", "by simp"], ["proof (state)\nthis:\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u\n\ngoal (2 subgoals):\n 1. M j w = A j w \\<and> M u j = A u j \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)\n 2. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "ultimately"], ["proof (chain)\npicking this:\n  len M u u (w # us) \\<le> len M j j zs\n  set (u # w # us) \\<subseteq> set (i # xs)\n  distinct (w # us)\n  u \\<notin> set (w # us)\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u", "show ?thesis"], ["proof (prove)\nusing this:\n  len M u u (w # us) \\<le> len M j j zs\n  set (u # w # us) \\<subseteq> set (i # xs)\n  distinct (w # us)\n  u \\<notin> set (w # us)\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "using zs(1) ys(2)"], ["proof (prove)\nusing this:\n  len M u u (w # us) \\<le> len M j j zs\n  set (u # w # us) \\<subseteq> set (i # xs)\n  distinct (w # us)\n  u \\<notin> set (w # us)\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs u u (w # us))\n  M (last (w # us)) u \\<noteq> A (last (w # us)) u\n  len M j j zs \\<le> len M j j ys\n  len M j j ys < \\<one>\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "by (intro exI[where x = u], intro exI[where x = \"w # us\"]) fastforce"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal (1 subgoal):\n 1. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "case False"], ["proof (state)\nthis:\n  \\<not> (M j w = A j w \\<and> M u j = A u j)\n\ngoal (1 subgoal):\n 1. \\<not> (M j w = A j w \\<and> M u j = A u j) \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "with zs ws us ys"], ["proof (chain)\npicking this:\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  zs = w # ws\n  ws = us @ [u]\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  \\<not> (M j w = A j w \\<and> M u j = A u j)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  zs = w # ws\n  ws = us @ [u]\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  \\<not> (M j w = A j w \\<and> M u j = A u j)\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "by (intro exI[where x = j], intro exI[where x = \"zs\"]) auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal (1 subgoal):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "case True"], ["proof (state)\nthis:\n  ws = []\n\ngoal (1 subgoal):\n 1. ws = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "with True ws zs ys"], ["proof (chain)\npicking this:\n  ws = []\n  zs = w # ws\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  ws = []", "show ?thesis"], ["proof (prove)\nusing this:\n  ws = []\n  zs = w # ws\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  ws = []\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "by (intro exI[where x = j], intro exI[where x = \"zs\"]) fastforce"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal (1 subgoal):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "case True"], ["proof (state)\nthis:\n  zs = []\n\ngoal (1 subgoal):\n 1. zs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "with ys zs"], ["proof (chain)\npicking this:\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  zs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct (j # ys)\n  len M j j ys < \\<one>\n  j \\<in> set (i # xs)\n  set ys \\<subseteq> set xs\n  len M j j zs \\<le> len M j j ys\n  set zs \\<subseteq> set ys\n  successive (\\<lambda>(a, b). M a b = A a b) (arcs j j zs)\n  distinct zs\n  j \\<notin> set zs\n  zs = []\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       len M j j ys < \\<one> \\<and>\n       set (j # ys) \\<subseteq> set (i # xs) \\<and>\n       successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n       distinct ys \\<and>\n       j \\<notin> set ys \\<and>\n       (ys \\<noteq> [] \\<longrightarrow>\n        M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n        M (last ys) j \\<noteq> A (last ys) j)", "by (intro exI[where x = j], intro exI[where x = \"zs\"]) fastforce"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     len M j j ys < \\<one> \\<and>\n     set (j # ys) \\<subseteq> set (i # xs) \\<and>\n     successive (\\<lambda>(a, b). M a b = A a b) (arcs j j ys) \\<and>\n     distinct ys \\<and>\n     j \\<notin> set ys \\<and>\n     (ys \\<noteq> [] \\<longrightarrow>\n      M j (hd ys) \\<noteq> A j (hd ys) \\<or>\n      M (last ys) j \\<noteq> A (last ys) j)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Generated by sledgehammer/z3 *)"], ["", "lemma successive_arcs_extend_last:\n  \"successive P (arcs i j xs) \\<Longrightarrow> \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j) \\<Longrightarrow> xs \\<noteq> []\n  \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "assume a1: \"\\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j)\""], ["proof (state)\nthis:\n  \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "assume a2: \"successive P (arcs i j xs)\""], ["proof (state)\nthis:\n  successive P (arcs i j xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "assume a3: \"xs \\<noteq> []\""], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "then"], ["proof (chain)\npicking this:\n  xs \\<noteq> []", "have f4: \"\\<not> P (last xs, j) \\<longrightarrow> successive P (arcs i (last xs) (butlast xs))\""], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<not> P (last xs, j) \\<longrightarrow>\n    successive P (arcs i (last xs) (butlast xs))", "using a2"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  successive P (arcs i j xs)\n\ngoal (1 subgoal):\n 1. \\<not> P (last xs, j) \\<longrightarrow>\n    successive P (arcs i (last xs) (butlast xs))", "by (metis (no_types) append_butlast_last_id arcs_decomp_tail successive_step_rev)"], ["proof (state)\nthis:\n  \\<not> P (last xs, j) \\<longrightarrow>\n  successive P (arcs i (last xs) (butlast xs))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "have f5: \"arcs i j xs = arcs i (last xs) (butlast xs) @ [(last xs, j)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcs i j xs = arcs i (last xs) (butlast xs) @ [(last xs, j)]", "using a3"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. arcs i j xs = arcs i (last xs) (butlast xs) @ [(last xs, j)]", "by (metis (no_types) append_butlast_last_id arcs_decomp_tail)"], ["proof (state)\nthis:\n  arcs i j xs = arcs i (last xs) (butlast xs) @ [(last xs, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "have \"([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] = arcs i j xs @ [(i, hd xs), (i, hd xs)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] =\n    arcs i j xs @ [(i, hd xs), (i, hd xs)]", "by simp"], ["proof (state)\nthis:\n  ([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] =\n  arcs i j xs @ [(i, hd xs), (i, hd xs)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "then"], ["proof (chain)\npicking this:\n  ([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] =\n  arcs i j xs @ [(i, hd xs), (i, hd xs)]", "have \"P (last xs, j) \\<longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\""], ["proof (prove)\nusing this:\n  ([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] =\n  arcs i j xs @ [(i, hd xs), (i, hd xs)]\n\ngoal (1 subgoal):\n 1. P (last xs, j) \\<longrightarrow>\n    successive P (arcs i j xs @ [(i, hd xs)])", "using a2 a1"], ["proof (prove)\nusing this:\n  ([] @ arcs i j xs @ [(i, hd xs)]) @ [(i, hd xs)] =\n  arcs i j xs @ [(i, hd xs), (i, hd xs)]\n  successive P (arcs i j xs)\n  \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j)\n\ngoal (1 subgoal):\n 1. P (last xs, j) \\<longrightarrow>\n    successive P (arcs i j xs @ [(i, hd xs)])", "by (metis (no_types) self_append_conv2 successive_end_2 successive_step_rev)"], ["proof (state)\nthis:\n  P (last xs, j) \\<longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs i j xs);\n     \\<not> P (i, hd xs) \\<or> \\<not> P (last xs, j);\n     xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "then"], ["proof (chain)\npicking this:\n  P (last xs, j) \\<longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])", "show ?thesis"], ["proof (prove)\nusing this:\n  P (last xs, j) \\<longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\n\ngoal (1 subgoal):\n 1. successive P (arcs i j xs @ [(i, hd xs)])", "using f5 f4 successive_end_2"], ["proof (prove)\nusing this:\n  P (last xs, j) \\<longrightarrow> successive P (arcs i j xs @ [(i, hd xs)])\n  arcs i j xs = arcs i (last xs) (butlast xs) @ [(last xs, j)]\n  \\<not> P (last xs, j) \\<longrightarrow>\n  successive P (arcs i (last xs) (butlast xs))\n  \\<lbrakk>successive ?P ?xs; \\<not> ?P ?x\\<rbrakk>\n  \\<Longrightarrow> successive ?P (?xs @ [?x, ?y])\n\ngoal (1 subgoal):\n 1. successive P (arcs i j xs @ [(i, hd xs)])", "by fastforce"], ["proof (state)\nthis:\n  successive P (arcs i j xs @ [(i, hd xs)])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_arcs:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\"\n  shows \"\\<exists> ys zs. set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "using assms"], ["proof (prove)\nusing this:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "assume A: \"length xs > 1\" \"(i, j) \\<in> arcs' xs\""], ["proof (state)\nthis:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "from arcs'_decomp[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>zs ys. xs = zs @ i # j # ys", "obtain ys zs where xs: \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  \\<exists>zs ys. xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys", "with arcs_decomp[OF this, of a a] arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (chain)\npicking this:\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  xs = zs @ i # j # ys", "show ?thesis"], ["proof (prove)\nusing this:\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys", "by force"], ["proof (state)\nthis:\n  \\<exists>ys zs.\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_len_arcs_successive:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\n                \\<and> successive P (arcs i i (j # ys @ a # zs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))", "using assms"], ["proof (prove)\nusing this:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "note A = assms"], ["proof (state)\nthis:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "from arcs'_decomp[OF A(1,2)]"], ["proof (chain)\npicking this:\n  \\<exists>zs ys. xs = zs @ i # j # ys", "obtain ys zs where xs: \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  \\<exists>zs ys. xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "note arcs1 = arcs_decomp[OF xs, of a a]"], ["proof (state)\nthis:\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "note arcs2 = arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (state)\nthis:\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "have *:\"successive P (arcs i i (j # ys @ a # zs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "proof (cases zs)"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "case Nil"], ["proof (state)\nthis:\n  zs = []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "with A(3,4) xs True"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = []\n  zs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = []\n  zs = []\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "by auto"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "case (Cons z zs')"], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "with True arcs2 A(3,4) xs"], ["proof (chain)\npicking this:\n  ys = []\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  zs = z # zs'", "show ?thesis"], ["proof (prove)\nusing this:\n  ys = []\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs') \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs') \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs'))", "by (metis arcs.simps(1,2) arcs1 successive.simps(3) successive_split successive_step)"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain y ys' where ys: \"ys = ys' @ [y]\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>ys' y. ys = ys' @ [y] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_butlast_last_id)"], ["proof (state)\nthis:\n  ys = ys' @ [y]\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "proof (cases zs)"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "case Nil"], ["proof (state)\nthis:\n  zs = []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "with A(3,4) xs ys"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = []", "have\n        \"\\<not> P (a, i) \\<or> \\<not> P (y, a)\" \"successive P (arcs a a (i # j # ys' @ [y]))\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = []\n\ngoal (1 subgoal):\n 1. \\<not> P (a, i) \\<or> \\<not> P (y, a) &&&\n    successive P (arcs a a (i # j # ys' @ [y]))", "by simp+"], ["proof (state)\nthis:\n  \\<not> P (a, i) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (i # j # ys' @ [y]))\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow> successive P (arcs i i (j # ys @ a # zs))\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "from successive_decomp[OF _ this(2,1)]"], ["proof (chain)\npicking this:\n  arcs a a (i # j # ys' @ [y]) =\n  (a, i) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, i) # ?ys)", "show ?thesis"], ["proof (prove)\nusing this:\n  arcs a a (i # j # ys' @ [y]) =\n  (a, i) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, i) # ?ys)\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "using ys Nil arcs_decomp"], ["proof (prove)\nusing this:\n  arcs a a (i # j # ys' @ [y]) =\n  (a, i) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, i) # ?ys)\n  ys = ys' @ [y]\n  zs = []\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "by fastforce"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "case (Cons z zs')"], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "with A(3,4) xs ys"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = z # zs'", "have\n        \"\\<not> P (a, z) \\<or> \\<not> P (y, a)\" \"successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<not> P (a, z) \\<or> \\<not> P (y, a) &&&\n    successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))", "by simp+"], ["proof (state)\nthis:\n  \\<not> P (a, z) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs))", "from successive_decomp[OF _ this(2,1)]"], ["proof (chain)\npicking this:\n  arcs a a (z # zs' @ i # j # ys' @ [y]) =\n  (a, z) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, z) # ?ys)", "show ?thesis"], ["proof (prove)\nusing this:\n  arcs a a (z # zs' @ i # j # ys' @ [y]) =\n  (a, z) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, z) # ?ys)\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "using ys Cons arcs_decomp"], ["proof (prove)\nusing this:\n  arcs a a (z # zs' @ i # j # ys' @ [y]) =\n  (a, z) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, z) # ?ys)\n  ys = ys' @ [y]\n  zs = z # zs'\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "by fastforce"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "from len_decomp[OF xs, of M a a]"], ["proof (chain)\npicking this:\n  len M a a xs = len M a i zs + len M i a (j # ys)", "have \"len M a a xs = len M a i zs + len M i a (j # ys)\""], ["proof (prove)\nusing this:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. len M a a xs = len M a i zs + len M i a (j # ys)", "."], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "also"], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "have \"\\<dots> = len M i a (j # ys) + len M a i zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs", "by (simp add: comm)"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "also"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "from len_comp[of M i i \"j # ys\" a zs]"], ["proof (chain)\npicking this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs", "have \"\\<dots> = len M i i (j # ys @ a # zs)\""], ["proof (prove)\nusing this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)", "by auto"], ["proof (state)\nthis:\n  len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P (arcs i i (j # ys @ a # zs))", "finally"], ["proof (chain)\npicking this:\n  len M a a xs = len M i i (j # ys @ a # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))", "using * xs arcs_decomp[OF xs, of a a] arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n  successive P (arcs i i (j # ys @ a # zs))\n  xs = zs @ i # j # ys\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))", "by force"], ["proof (state)\nthis:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma successive_successors:\n  \"xs = ys @ a # b # c # zs \\<Longrightarrow> successive P (arcs i j xs) \\<Longrightarrow> \\<not> P (a,b) \\<or> \\<not> P (b, c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ a # b # c # zs; successive P (arcs i j xs)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply (induction _ xs arbitrary: i ys rule: list_two_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i ys.\n       \\<lbrakk>[] = ys @ a # b # c # zs;\n        successive P (arcs i j [])\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)\n 2. \\<And>x i ys.\n       \\<lbrakk>[x] = ys @ a # b # c # zs;\n        successive P (arcs i j [x])\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)\n 3. \\<And>x1 x2 xs i ys.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs))\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x i ys.\n       \\<lbrakk>[x] = ys @ a # b # c # zs;\n        successive P (arcs i j [x])\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)\n 2. \\<And>x1 x2 xs i ys.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs))\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i ys.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs))\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply (rename_tac ys, case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs i ys.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs)); ys = []\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)\n 2. \\<And>x1 x2 xs i ys aa list.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs)); ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 xs i ys aa list.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs)); ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply (rename_tac list, case_tac list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 xs i ys aa list.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs)); ys = aa # list;\n        list = []\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)\n 2. \\<And>x1 x2 xs i ys aa list aaa lista.\n       \\<lbrakk>\\<And>i ys.\n                   \\<lbrakk>xs = ys @ a # b # c # zs;\n                    successive P (arcs i j xs)\\<rbrakk>\n                   \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        \\<And>i ys.\n           \\<lbrakk>x2 # xs = ys @ a # b # c # zs;\n            successive P (arcs i j (x2 # xs))\\<rbrakk>\n           \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c);\n        x1 # x2 # xs = ys @ a # b # c # zs;\n        successive P (arcs i j (x1 # x2 # xs)); ys = aa # list;\n        list = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (a, b) \\<or> \\<not> P (b, c)", "apply fastforce+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma successive_successors':\n  \"xs = ys @ a # b # zs \\<Longrightarrow> successive P xs \\<Longrightarrow> \\<not> P a \\<or> \\<not> P b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ a # b # zs; successive P xs\\<rbrakk>\n    \\<Longrightarrow> \\<not> P a \\<or> \\<not> P b", "using successive_split"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xs = ?ys @ ?zs; successive ?P ?xs\\<rbrakk>\n  \\<Longrightarrow> successive ?P ?ys \\<and> successive ?P ?zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ a # b # zs; successive P xs\\<rbrakk>\n    \\<Longrightarrow> \\<not> P a \\<or> \\<not> P b", "by fastforce"], ["", "lemma cycle_rotate_len_arcs_successive':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"length xs > 1\" \"(i, j) \\<in> arcs' xs\" \"successive P (arcs a a xs)\"\n          \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys zs. len M a a xs = len M i i (j # ys @ a # zs)\n                \\<and> set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and> xs = zs @ i # j # ys\n                \\<and> successive P (arcs i i (j # ys @ a # zs) @ [(i,j)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "using assms"], ["proof (prove)\nusing this:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "note A = assms"], ["proof (state)\nthis:\n  1 < length xs\n  (i, j) \\<in> arcs' xs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from arcs'_decomp[OF A(1,2)]"], ["proof (chain)\npicking this:\n  \\<exists>zs ys. xs = zs @ i # j # ys", "obtain ys zs where xs: \"xs = zs @ i # j # ys\""], ["proof (prove)\nusing this:\n  \\<exists>zs ys. xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. (\\<And>zs ys.\n        xs = zs @ i # j # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = zs @ i # j # ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "note arcs1 = arcs_decomp[OF xs, of a a]"], ["proof (state)\nthis:\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "note arcs2 = arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (state)\nthis:\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "have *:\"successive P (arcs i i (j # ys @ a # zs) @ [(i,j)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "proof (cases \"ys = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case True"], ["proof (state)\nthis:\n  ys = []\n\ngoal (2 subgoals):\n 1. ys = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "proof (cases zs)"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case Nil"], ["proof (state)\nthis:\n  zs = []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with A(3,4) xs True"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = []\n  zs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = []\n  zs = []\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case (Cons z zs')"], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with True arcs2 A(3,4) xs"], ["proof (chain)\npicking this:\n  ys = []\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  zs = z # zs'", "show ?thesis"], ["proof (prove)\nusing this:\n  ys = []\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "apply (cases \"P (a, z)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))\n 2. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "apply (simp add: arcs_decomp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = [];\n     successive P ((a, z) # arcs z i zs' @ [(i, j), (j, a)]);\n     \\<not> P (j, a); xs = z # zs' @ [i, j]; zs = z # zs'; P (a, z)\\<rbrakk>\n    \\<Longrightarrow> successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)])\n 2. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "apply (simp only: append_Cons[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = [];\n     successive P (((a, z) # arcs z i zs') @ [(i, j), (j, a)]);\n     \\<not> P (j, a); xs = (z # zs') @ [i, j]; zs = z # zs';\n     P (a, z)\\<rbrakk>\n    \\<Longrightarrow> successive P\n                       (((a, z) # arcs z i zs') @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      successive P (((a, z) # arcs z i zs') @ [(i, j)])\n 2. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "using successive_split[of \"((a, z) # arcs z i zs') @ [(i, j), (j, a)]\" _ \"[(j, a)]\" P]"], ["proof (prove)\nusing this:\n  \\<lbrakk>((a, z) # arcs z i zs') @ [(i, j), (j, a)] = ?ys @ [(j, a)];\n   successive P (((a, z) # arcs z i zs') @ [(i, j), (j, a)])\\<rbrakk>\n  \\<Longrightarrow> successive P ?ys \\<and> successive P [(j, a)]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ys = [];\n     successive P (((a, z) # arcs z i zs') @ [(i, j), (j, a)]);\n     \\<not> P (j, a); xs = (z # zs') @ [i, j]; zs = z # zs';\n     P (a, z)\\<rbrakk>\n    \\<Longrightarrow> successive P\n                       (((a, z) # arcs z i zs') @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      successive P (((a, z) # arcs z i zs') @ [(i, j)])\n 2. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "apply auto[]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "(* Generated by sledgehammer *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     P (a, z) \\<longrightarrow> \\<not> P (j, a); xs = z # zs' @ [i, j];\n     zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (\\<not> P (a, z) \\<and>\n                       successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "proof simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "assume a1: \"successive P ((a, z) # arcs z a (zs' @ [i, j]))\""], ["proof (state)\nthis:\n  successive P ((a, z) # arcs z a (zs' @ [i, j]))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "assume a2: \"\\<not> P (a, z)\""], ["proof (state)\nthis:\n  \\<not> P (a, z)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "assume a3: \"zs = z # zs'\""], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "assume a4: \"ys = []\""], ["proof (state)\nthis:\n  ys = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "assume a5: \"xs = z # zs' @ [i, j]\""], ["proof (state)\nthis:\n  xs = z # zs' @ [i, j]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "have f6: \"\\<forall>p pa ps. \\<not> successive p ((pa::nat \\<times> nat) # ps) \\<or> p pa \\<or> successive p ps\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p pa ps.\n       \\<not> successive p (pa # ps) \\<or> p pa \\<or> successive p ps", "by (meson successive_step)"], ["proof (state)\nthis:\n  \\<forall>p pa ps.\n     \\<not> successive p (pa # ps) \\<or> p pa \\<or> successive p ps\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "have \"(a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs", "using a4 a3"], ["proof (prove)\nusing this:\n  ys = []\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs", "by (simp add: arcs1)"], ["proof (state)\nthis:\n  (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "then"], ["proof (chain)\npicking this:\n  (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs", "have \"arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]\""], ["proof (prove)\nusing this:\n  (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs\n\ngoal (1 subgoal):\n 1. arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]", "using a5"], ["proof (prove)\nusing this:\n  (a, z) # arcs z i zs' @ (i, j) # arcs j a [] = arcs a a xs\n  xs = z # zs' @ [i, j]\n\ngoal (1 subgoal):\n 1. arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]", "by simp"], ["proof (state)\nthis:\n  arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ys = []; successive P ((a, z) # arcs z a (zs' @ [i, j]));\n     xs = z # zs' @ [i, j]; zs = z # zs'; \\<not> P (a, z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> P (j, a) \\<and>\n                      successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n                      \\<not> P (i, j) \\<and>\n                      (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n                       \\<not> P (j, a) \\<and>\n                       successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "then"], ["proof (chain)\npicking this:\n  arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]", "show\n           \"\\<not> P (j, a) \\<and> successive P ((a, z) # arcs z i zs' @ [(i, j)])\n          \\<or> \\<not> P (i, j) \\<and> (successive P (arcs z i zs' @ [(i, j)])\n          \\<or> \\<not> P (j, a) \\<and> successive P ((a, z) # arcs z i zs' @ [(i, j)]))\""], ["proof (prove)\nusing this:\n  arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]\n\ngoal (1 subgoal):\n 1. \\<not> P (j, a) \\<and>\n    successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n    \\<not> P (i, j) \\<and>\n    (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n     \\<not> P (j, a) \\<and> successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "using f6 a2 a1"], ["proof (prove)\nusing this:\n  arcs z a (zs' @ [i, j]) = arcs z i zs' @ [(i, j), (j, a)]\n  \\<forall>p pa ps.\n     \\<not> successive p (pa # ps) \\<or> p pa \\<or> successive p ps\n  \\<not> P (a, z)\n  successive P ((a, z) # arcs z a (zs' @ [i, j]))\n\ngoal (1 subgoal):\n 1. \\<not> P (j, a) \\<and>\n    successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n    \\<not> P (i, j) \\<and>\n    (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n     \\<not> P (j, a) \\<and> successive P ((a, z) # arcs z i zs' @ [(i, j)]))", "by (metis successive.simps(1) successive_dest_tail successive_ends_1 successive_stepI)"], ["proof (state)\nthis:\n  \\<not> P (j, a) \\<and>\n  successive P ((a, z) # arcs z i zs' @ [(i, j)]) \\<or>\n  \\<not> P (i, j) \\<and>\n  (successive P (arcs z i zs' @ [(i, j)]) \\<or>\n   \\<not> P (j, a) \\<and> successive P ((a, z) # arcs z i zs' @ [(i, j)]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case False"], ["proof (state)\nthis:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  ys \\<noteq> []", "obtain y ys' where ys: \"ys = ys' @ [y]\""], ["proof (prove)\nusing this:\n  ys \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>ys' y. ys = ys' @ [y] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_butlast_last_id)"], ["proof (state)\nthis:\n  ys = ys' @ [y]\n\ngoal (1 subgoal):\n 1. ys \\<noteq> [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "proof (cases zs)"], ["proof (state)\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case Nil"], ["proof (state)\nthis:\n  zs = []\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with A(3,4) xs ys"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = []", "have *:\n        \"\\<not> P (a, i) \\<or> \\<not> P (y, a)\" \"successive P (arcs a a (i # j # ys' @ [y]))\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = []\n\ngoal (1 subgoal):\n 1. \\<not> P (a, i) \\<or> \\<not> P (y, a) &&&\n    successive P (arcs a a (i # j # ys' @ [y]))", "by simp+"], ["proof (state)\nthis:\n  \\<not> P (a, i) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (i # j # ys' @ [y]))\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from successive_decomp[OF _ this(2,1)] ys Nil arcs_decomp"], ["proof (chain)\npicking this:\n  arcs a a (i # j # ys' @ [y]) =\n  (a, i) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, i) # ?ys)\n  ys = ys' @ [y]\n  zs = []\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs", "have\n        \"successive P (arcs i i (j # ys @ a # zs))\""], ["proof (prove)\nusing this:\n  arcs a a (i # j # ys' @ [y]) =\n  (a, i) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, i) # ?ys)\n  ys = ys' @ [y]\n  zs = []\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "by fastforce"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "moreover"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from *"], ["proof (chain)\npicking this:\n  \\<not> P (a, i) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (i # j # ys' @ [y]))", "have \"\\<not> P (a, i) \\<or> \\<not> P (i, j)\""], ["proof (prove)\nusing this:\n  \\<not> P (a, i) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (i # j # ys' @ [y]))\n\ngoal (1 subgoal):\n 1. \\<not> P (a, i) \\<or> \\<not> P (i, j)", "by auto"], ["proof (state)\nthis:\n  \\<not> P (a, i) \\<or> \\<not> P (i, j)\n\ngoal (2 subgoals):\n 1. zs = [] \\<Longrightarrow>\n    successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n 2. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "ultimately"], ["proof (chain)\npicking this:\n  successive P (arcs i i (j # ys @ a # zs))\n  \\<not> P (a, i) \\<or> \\<not> P (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (arcs i i (j # ys @ a # zs))\n  \\<not> P (a, i) \\<or> \\<not> P (i, j)\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "by (metis append_Cons last_snoc list.distinct(1) list.sel(1) Nil successive_arcs_extend_last)"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "case (Cons z zs')"], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with A(3,4) xs ys"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = z # zs'", "have *:\n        \"\\<not> P (a, z) \\<or> \\<not> P (y, a)\" \"successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. \\<not> P (a, z) \\<or> \\<not> P (y, a) &&&\n    successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))", "by simp_all"], ["proof (state)\nthis:\n  \\<not> P (a, z) \\<or> \\<not> P (y, a)\n  successive P (arcs a a (z # zs' @ i # j # ys' @ [y]))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from successive_decomp[OF _ this(2,1)] ys Cons arcs_decomp"], ["proof (chain)\npicking this:\n  arcs a a (z # zs' @ i # j # ys' @ [y]) =\n  (a, z) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, z) # ?ys)\n  ys = ys' @ [y]\n  zs = z # zs'\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs", "have **:\n        \"successive P (arcs i i (j # ys @ a # zs))\""], ["proof (prove)\nusing this:\n  arcs a a (z # zs' @ i # j # ys' @ [y]) =\n  (a, z) # ?ys @ ?zs @ [(y, a)] \\<Longrightarrow>\n  successive P (?zs @ [(y, a)] @ (a, z) # ?ys)\n  ys = ys' @ [y]\n  zs = z # zs'\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  arcs ?x ?z ?xs = arcs ?x ?y ?ys @ arcs ?y ?z ?zs\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs))", "by fastforce"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from Cons"], ["proof (chain)\npicking this:\n  zs = z # zs'", "have \"zs \\<noteq> []\""], ["proof (prove)\nusing this:\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. zs \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  zs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  zs \\<noteq> []", "obtain w ws where ws: \"zs = ws @ [w]\""], ["proof (prove)\nusing this:\n  zs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>ws w. zs = ws @ [w] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induction zs) auto"], ["proof (state)\nthis:\n  zs = ws @ [w]\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with A(3,4) xs ys"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = ws @ [w]", "have *:\n        \"successive P (arcs a a (ws @ [w] @ i # j # ys' @ [y]))\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  xs = zs @ i # j # ys\n  ys = ys' @ [y]\n  zs = ws @ [w]\n\ngoal (1 subgoal):\n 1. successive P (arcs a a (ws @ [w] @ i # j # ys' @ [y]))", "by simp"], ["proof (state)\nthis:\n  successive P (arcs a a (ws @ [w] @ i # j # ys' @ [y]))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from successive_successors[OF _ *]"], ["proof (chain)\npicking this:\n  ws @ [w] @ i # j # ys' @ [y] = ?ys @ ?a # ?b # ?c # ?zs \\<Longrightarrow>\n  \\<not> P (?a, ?b) \\<or> \\<not> P (?b, ?c)", "have \"\\<not> P (w, i) \\<or> \\<not> P (i, j)\""], ["proof (prove)\nusing this:\n  ws @ [w] @ i # j # ys' @ [y] = ?ys @ ?a # ?b # ?c # ?zs \\<Longrightarrow>\n  \\<not> P (?a, ?b) \\<or> \\<not> P (?b, ?c)\n\ngoal (1 subgoal):\n 1. \\<not> P (w, i) \\<or> \\<not> P (i, j)", "by auto"], ["proof (state)\nthis:\n  \\<not> P (w, i) \\<or> \\<not> P (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       zs = aa # list \\<Longrightarrow>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "with *"], ["proof (chain)\npicking this:\n  successive P (arcs a a (ws @ [w] @ i # j # ys' @ [y]))\n  \\<not> P (w, i) \\<or> \\<not> P (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  successive P (arcs a a (ws @ [w] @ i # j # ys' @ [y]))\n  \\<not> P (w, i) \\<or> \\<not> P (i, j)\n\ngoal (1 subgoal):\n 1. successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "by (metis ** append_is_Nil_conv last.simps last_append list.distinct(2) list.sel(1)\n                successive_arcs_extend_last ws)"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from len_decomp[OF xs, of M a a]"], ["proof (chain)\npicking this:\n  len M a a xs = len M a i zs + len M i a (j # ys)", "have \"len M a a xs = len M a i zs + len M i a (j # ys)\""], ["proof (prove)\nusing this:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. len M a a xs = len M a i zs + len M i a (j # ys)", "."], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "also"], ["proof (state)\nthis:\n  len M a a xs = len M a i zs + len M i a (j # ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "have \"\\<dots> = len M i a (j # ys) + len M a i zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs", "by (simp add: comm)"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "also"], ["proof (state)\nthis:\n  len M a i zs + len M i a (j # ys) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "from len_comp[of M i i \"j # ys\" a zs]"], ["proof (chain)\npicking this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs", "have \"\\<dots> = len M i i (j # ys @ a # zs)\""], ["proof (prove)\nusing this:\n  len M i i ((j # ys) @ a # zs) = len M i a (j # ys) + len M a i zs\n\ngoal (1 subgoal):\n 1. len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)", "by auto"], ["proof (state)\nthis:\n  len M i a (j # ys) + len M a i zs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < length xs; (i, j) \\<in> arcs' xs;\n     successive P (arcs a a xs);\n     \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys zs.\n                         len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n                         set (arcs a a xs) =\n                         set (arcs i i (j # ys @ a # zs)) \\<and>\n                         xs = zs @ i # j # ys \\<and>\n                         successive P\n                          (arcs i i (j # ys @ a # zs) @ [(i, j)])", "finally"], ["proof (chain)\npicking this:\n  len M a a xs = len M i i (j # ys @ a # zs)", "show ?thesis"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "using * xs arcs_decomp[OF xs, of a a] arcs_decomp[of \"j # ys @ a # zs\" \"j # ys\" a zs i i]"], ["proof (prove)\nusing this:\n  len M a a xs = len M i i (j # ys @ a # zs)\n  successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n  xs = zs @ i # j # ys\n  arcs a a xs = arcs a i zs @ arcs i a (j # ys)\n  j # ys @ a # zs = (j # ys) @ a # zs \\<Longrightarrow>\n  arcs i i (j # ys @ a # zs) = arcs i a (j # ys) @ arcs a i zs\n\ngoal (1 subgoal):\n 1. \\<exists>ys zs.\n       len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n       xs = zs @ i # j # ys \\<and>\n       successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "by force"], ["proof (state)\nthis:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and>\n     successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_3:\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs) \\<and> 1 + length ys = length xs\n             \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\n             \\<and> successive P (arcs i i (j # ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "note A = assms"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "{"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "fix ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "assume A:\"a = i\" \"xs = j # ys\""], ["proof (state)\nthis:\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "with assms(3)"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  a = i\n  xs = j # ys", "have ?thesis"], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  a = i\n  xs = j # ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "have **: ?thesis if A: \"a = j\" \"xs = ys @ [i]\" for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "using A"], ["proof (prove)\nusing this:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "case 1"], ["proof (state)\nthis:\n  xs = ys @ [i]\n  a = j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "have \"len M j j (ys @ [i]) = M i j + len M j i ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "using len_decomp[of \"ys @ [i]\" ys i \"[]\" M j j]"], ["proof (prove)\nusing this:\n  ys @ [i] = ys @ [i] \\<Longrightarrow>\n  len M j j (ys @ [i]) = len M j i ys + len M i j []\n\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "by (auto simp: comm)"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "moreover"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "have \"arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "using arcs_decomp_tail"], ["proof (prove)\nusing this:\n  arcs ?j ?l (?ys @ [?i]) = arcs ?j ?i ?ys @ [(?i, ?l)]\n\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "by auto"], ["proof (state)\nthis:\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "moreover"], ["proof (state)\nthis:\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "with assms(3,4) A"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  a = j\n  xs = ys @ [i]\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "have \"successive P ((i,j) # arcs j i ys)\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  a = j\n  xs = ys @ [i]\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. successive P ((i, j) # arcs j i ys)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n     P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n     xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\\<rbrakk>\n    \\<Longrightarrow> successive P ((i, j) # arcs j i ys)", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n     P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n     xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n     ys = []\\<rbrakk>\n    \\<Longrightarrow> successive P ((i, j) # arcs j i ys)\n 2. \\<And>aa list.\n       \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n        P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> successive P ((i, j) # arcs j i ys)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n        P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> successive P ((i, j) # arcs j i ys)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>successive P ((j, aa) # arcs aa i list @ [(i, j)]);\n        P (j, aa) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = aa # list @ [i];\n        arcs aa j (list @ [i]) = arcs aa i list @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (j, aa) \\<and>\n                         successive P (arcs aa i list) \\<or>\n                         \\<not> P (i, j) \\<and>\n                         successive P ((j, aa) # arcs aa i list)", "by (metis arcs.simps(2) calculation(2) 1(1) successive_split successive_step)"], ["proof (state)\nthis:\n  successive P ((i, j) # arcs j i ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys @ [i]; a = j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n                         set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n                         1 + length ysa = length (ys @ [i]) \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         set (arcs i i (j # ysa)) \\<and>\n                         successive P (arcs i i (j # ysa))", "ultimately"], ["proof (chain)\npicking this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n  successive P ((i, j) # arcs j i ys)", "show ?case"], ["proof (prove)\nusing this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n  successive P ((i, j) # arcs j i ys)\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n       set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n       1 + length ysa = length (ys @ [i]) \\<and>\n       set (arcs j j (ys @ [i])) = set (arcs i i (j # ysa)) \\<and>\n       successive P (arcs i i (j # ysa))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     len M j j (ys @ [i]) = len M i i (j # ysa) \\<and>\n     set (i # j # ysa) = set (j # ys @ [i]) \\<and>\n     1 + length ysa = length (ys @ [i]) \\<and>\n     set (arcs j j (ys @ [i])) = set (arcs i i (j # ysa)) \\<and>\n     successive P (arcs i i (j # ysa))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "assume \"length xs = 1\""], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  length xs = 1", "obtain b where xs: \"xs = [b]\""], ["proof (prove)\nusing this:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b. xs = [b] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis One_nat_def length_0_conv length_Suc_conv)"], ["proof (state)\nthis:\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "with A(2)"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]", "have \"a = i \\<and> b = j \\<or> a = j \\<and> b = i\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]\n\ngoal (1 subgoal):\n 1. a = i \\<and> b = j \\<or> a = j \\<and> b = i", "by auto"], ["proof (state)\nthis:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "using * ** xs"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "}"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "note *** = this"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof (cases \"length xs = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  length xs = 0\n\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "with A"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  length xs = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  length xs = 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "case False"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "thus ?thesis"], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof (cases \"length xs = 1\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "with ***"], ["proof (chain)\npicking this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n  length xs = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case 2"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "hence \"length xs > 1\""], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < length xs", "by linarith"], ["proof (state)\nthis:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  1 < length xs", "obtain b c ys where ys:\"xs = b # ys @ [c]\""], ["proof (prove)\nusing this:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>b ys c.\n        xs = b # ys @ [c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis One_nat_def assms(1) 2(2) length_0_conv length_Cons list.exhaust rev_exhaust)"], ["proof (state)\nthis:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof (cases \"(i,j) = (a,b)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  (i, j) = (a, b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "with ys *"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  (i, j) = (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  (i, j) = (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case False"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "proof (cases \"(i,j) = (c,a)\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case True"], ["proof (state)\nthis:\n  (i, j) = (c, a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "with ys **"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  (i, j) = (c, a)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys))\n  (i, j) = (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by force"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "case 2"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "with A(2) ys"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)", "have \"(i, j) \\<in> arcs' xs\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "using cycle_rotate_2_aux"], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n  \\<lbrakk>(?i, ?j) \\<in> set (arcs ?a ?b (?xs @ [?c]));\n   (?i, ?j) \\<noteq> (?c, ?b)\\<rbrakk>\n  \\<Longrightarrow> (?i, ?j) \\<in> set (arcs ?a ?c ?xs)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "by (auto simp add: arcs'_def)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "(* slow *)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys))", "from cycle_rotate_len_arcs_successive[OF \\<open>length xs > 1\\<close> this A(3,4), of M]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and> successive P (arcs i i (j # ys @ a # zs))\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys))", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cycle_rotate_3':\n  fixes M :: \"('a :: linordered_ab_monoid_add) mat\"\n  assumes \"xs \\<noteq> []\" \"(i, j) \\<in> set (arcs a a xs)\" \"successive P (arcs a a xs)\" \"\\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\"\n  shows \"\\<exists> ys. len M a a xs = len M i i (j # ys) \\<and> set (i # j # ys) = set (a # xs) \\<and> 1 + length ys = length xs\n             \\<and> set (arcs a a xs) = set (arcs i i (j # ys))\n             \\<and> successive P (arcs i i (j # ys) @ [(i, j)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "note A = assms"], ["proof (state)\nthis:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "have *: ?thesis if \"a = i\" \"xs = j # ys\" for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "using that assms(3) successive_arcs_extend_last[OF assms(3,4)]"], ["proof (prove)\nusing this:\n  a = i\n  xs = j # ys\n  successive P (arcs a a xs)\n  xs \\<noteq> [] \\<Longrightarrow> successive P (arcs a a xs @ [(a, hd xs)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = i; xs = j # ?ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "have **: ?thesis if A:\"a = j\" \"xs = ys @ [i]\" for ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "using A"], ["proof (prove)\nusing this:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "case 1"], ["proof (state)\nthis:\n  a = j\n  xs = ys @ [i]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "have \"len M j j (ys @ [i]) = M i j + len M j i ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "using len_decomp[of \"ys @ [i]\" ys i \"[]\" M j j]"], ["proof (prove)\nusing this:\n  ys @ [i] = ys @ [i] \\<Longrightarrow>\n  len M j j (ys @ [i]) = len M j i ys + len M i j []\n\ngoal (1 subgoal):\n 1. len M j j (ys @ [i]) = M i j + len M j i ys", "by (auto simp: comm)"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "moreover"], ["proof (state)\nthis:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "have \"arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "using arcs_decomp_tail"], ["proof (prove)\nusing this:\n  arcs ?j ?l (?ys @ [?i]) = arcs ?j ?i ?ys @ [(?i, ?l)]\n\ngoal (1 subgoal):\n 1. arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "by auto"], ["proof (state)\nthis:\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "moreover"], ["proof (state)\nthis:\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "with assms(3,4) A"], ["proof (chain)\npicking this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  a = j\n  xs = ys @ [i]\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]", "have \"successive P ((i,j) # arcs j i ys @ [(i, j)])\""], ["proof (prove)\nusing this:\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  a = j\n  xs = ys @ [i]\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n\ngoal (1 subgoal):\n 1. successive P ((i, j) # arcs j i ys @ [(i, j)])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n     P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n     xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\\<rbrakk>\n    \\<Longrightarrow> successive P ((i, j) # arcs j i ys @ [(i, j)])", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n     P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n     xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n     ys = []\\<rbrakk>\n    \\<Longrightarrow> successive P ((i, j) # arcs j i ys @ [(i, j)])\n 2. \\<And>aa list.\n       \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n        P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> successive P ((i, j) # arcs j i ys @ [(i, j)])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>successive P (arcs j i ys @ [(i, j)]);\n        P (j, hd (ys @ [i])) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = ys @ [i]; arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> successive P ((i, j) # arcs j i ys @ [(i, j)])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>successive P ((j, aa) # arcs aa i list @ [(i, j)]);\n        P (j, aa) \\<longrightarrow> \\<not> P (i, j); a = j;\n        xs = aa # list @ [i];\n        arcs aa j (list @ [i]) = arcs aa i list @ [(i, j)];\n        ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> P (j, aa) \\<and>\n                         successive P (arcs aa i list @ [(i, j)]) \\<or>\n                         \\<not> P (i, j)", "by (metis successive_step)"], ["proof (state)\nthis:\n  successive P ((i, j) # arcs j i ys @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = j; xs = ys @ [i]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n                         insert i (insert j (set ysa)) =\n                         insert j (insert i (set ys)) \\<and>\n                         length ysa = length ys \\<and>\n                         set (arcs j j (ys @ [i])) =\n                         insert (i, j) (set (arcs j i ysa)) \\<and>\n                         successive P ((i, j) # arcs j i ysa @ [(i, j)])", "ultimately"], ["proof (chain)\npicking this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n  successive P ((i, j) # arcs j i ys @ [(i, j)])", "show ?case"], ["proof (prove)\nusing this:\n  len M j j (ys @ [i]) = M i j + len M j i ys\n  arcs j j (ys @ [i]) = arcs j i ys @ [(i, j)]\n  successive P ((i, j) # arcs j i ys @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n       insert i (insert j (set ysa)) = insert j (insert i (set ys)) \\<and>\n       length ysa = length ys \\<and>\n       set (arcs j j (ys @ [i])) = insert (i, j) (set (arcs j i ysa)) \\<and>\n       successive P ((i, j) # arcs j i ysa @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     len M j j (ys @ [i]) = M i j + len M j i ysa \\<and>\n     insert i (insert j (set ysa)) = insert j (insert i (set ys)) \\<and>\n     length ysa = length ys \\<and>\n     set (arcs j j (ys @ [i])) = insert (i, j) (set (arcs j i ysa)) \\<and>\n     successive P ((i, j) # arcs j i ysa @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "{"], ["proof (state)\nthis:\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "assume \"length xs = 1\""], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  length xs = 1", "obtain b where xs: \"xs = [b]\""], ["proof (prove)\nusing this:\n  length xs = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b. xs = [b] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis One_nat_def length_0_conv length_Suc_conv)"], ["proof (state)\nthis:\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "with A(2)"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]", "have \"a = i \\<and> b = j \\<or> a = j \\<and> b = i\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = [b]\n\ngoal (1 subgoal):\n 1. a = i \\<and> b = j \\<or> a = j \\<and> b = i", "by auto"], ["proof (state)\nthis:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i", "have ?thesis"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "using * ** xs"], ["proof (prove)\nusing this:\n  a = i \\<and> b = j \\<or> a = j \\<and> b = i\n  \\<lbrakk>a = i; xs = j # ?ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  xs = [b]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "}"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "note *** = this"], ["proof (state)\nthis:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof (cases \"length xs = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "case True"], ["proof (state)\nthis:\n  length xs = 0\n\ngoal (2 subgoals):\n 1. length xs = 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])\n 2. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "with A"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  length xs = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  (i, j) \\<in> set (arcs a a xs)\n  successive P (arcs a a xs)\n  \\<not> P (a, hd xs) \\<or> \\<not> P (last xs, a)\n  length xs = 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "case False"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. length xs \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "thus ?thesis"], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof (cases \"length xs = 1\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case True"], ["proof (state)\nthis:\n  length xs = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs = 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "with ***"], ["proof (chain)\npicking this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n  length xs = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  length xs = 1 \\<Longrightarrow>\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n  length xs = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case 2"], ["proof (state)\nthis:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "hence \"length xs > 1\""], ["proof (prove)\nusing this:\n  length xs \\<noteq> 0\n  length xs \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < length xs", "by linarith"], ["proof (state)\nthis:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  1 < length xs", "obtain b c ys where ys:\"xs = b # ys @ [c]\""], ["proof (prove)\nusing this:\n  1 < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>b ys c.\n        xs = b # ys @ [c] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis One_nat_def assms(1) 2(2) length_0_conv length_Cons list.exhaust rev_exhaust)"], ["proof (state)\nthis:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs \\<noteq> 0; length xs \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof (cases \"(i,j) = (a,b)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case True"], ["proof (state)\nthis:\n  (i, j) = (a, b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) = (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "with ys *"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  (i, j) = (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = i; xs = j # ?ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  (i, j) = (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case False"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = b # ys @ [c]; (i, j) \\<noteq> (a, b)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "then"], ["proof (chain)\npicking this:\n  (i, j) \\<noteq> (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (i, j) \\<noteq> (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "proof (cases \"(i,j) = (c,a)\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case True"], ["proof (state)\nthis:\n  (i, j) = (c, a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) = (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])\n 2. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "with ys **"], ["proof (chain)\npicking this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  (i, j) = (c, a)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = b # ys @ [c]\n  \\<lbrakk>a = j; xs = ?ys @ [i]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       len M a a xs = len M i i (j # ys) \\<and>\n                       set (i # j # ys) = set (a # xs) \\<and>\n                       1 + length ys = length xs \\<and>\n                       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                       successive P (arcs i i (j # ys) @ [(i, j)])\n  (i, j) = (c, a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by force"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "case 2"], ["proof (state)\nthis:\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "with A(2) ys"], ["proof (chain)\npicking this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)", "have \"(i, j) \\<in> arcs' xs\""], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "using cycle_rotate_2_aux"], ["proof (prove)\nusing this:\n  (i, j) \\<in> set (arcs a a xs)\n  xs = b # ys @ [c]\n  (i, j) \\<noteq> (a, b)\n  (i, j) \\<noteq> (c, a)\n  \\<lbrakk>(?i, ?j) \\<in> set (arcs ?a ?b (?xs @ [?c]));\n   (?i, ?j) \\<noteq> (?c, ?b)\\<rbrakk>\n  \\<Longrightarrow> (?i, ?j) \\<in> set (arcs ?a ?c ?xs)\n\ngoal (1 subgoal):\n 1. (i, j) \\<in> arcs' xs", "by (auto simp add: arcs'_def)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "(* slow *)"], ["proof (state)\nthis:\n  (i, j) \\<in> arcs' xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(i, j) \\<noteq> (a, b); (i, j) \\<noteq> (c, a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         len M a a xs = len M i i (j # ys) \\<and>\n                         set (i # j # ys) = set (a # xs) \\<and>\n                         1 + length ys = length xs \\<and>\n                         set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n                         successive P (arcs i i (j # ys) @ [(i, j)])", "from cycle_rotate_len_arcs_successive'[OF \\<open>length xs > 1\\<close> this A(3,4), of M]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and>\n     successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys zs.\n     len M a a xs = len M i i (j # ys @ a # zs) \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys @ a # zs)) \\<and>\n     xs = zs @ i # j # ys \\<and>\n     successive P (arcs i i (j # ys @ a # zs) @ [(i, j)])\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       len M a a xs = len M i i (j # ys) \\<and>\n       set (i # j # ys) = set (a # xs) \\<and>\n       1 + length ys = length xs \\<and>\n       set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n       successive P (arcs i i (j # ys) @ [(i, j)])", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     len M a a xs = len M i i (j # ys) \\<and>\n     set (i # j # ys) = set (a # xs) \\<and>\n     1 + length ys = length xs \\<and>\n     set (arcs a a xs) = set (arcs i i (j # ys)) \\<and>\n     successive P (arcs i i (j # ys) @ [(i, j)])\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}