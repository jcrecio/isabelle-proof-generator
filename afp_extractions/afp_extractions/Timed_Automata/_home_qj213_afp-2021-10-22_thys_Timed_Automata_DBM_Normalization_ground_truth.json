{"file_name": "/home/qj213/afp-2021-10-22/thys/Timed_Automata/DBM_Normalization.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Timed_Automata", "problem_names": ["lemma norm_mono:\n  assumes \"\\<forall>c. v c > 0\" \"u \\<in> [M]\\<^bsub>v,n\\<^esub>\"\n  shows \"u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>\" (is \"u \\<in> [?M2]\\<^bsub>v,n\\<^esub>\")"], "translations": [["", "lemma norm_mono:\n  assumes \"\\<forall>c. v c > 0\" \"u \\<in> [M]\\<^bsub>v,n\\<^esub>\"\n  shows \"u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>\" (is \"u \\<in> [?M2]\\<^bsub>v,n\\<^esub>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>", "note A = assms"], ["proof (state)\nthis:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>", "note M1 = A(2)[unfolded DBM_zone_repr_def DBM_val_bounded_def]"], ["proof (state)\nthis:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n\ngoal (1 subgoal):\n 1. u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>", "proof (unfold DBM_zone_repr_def DBM_val_bounded_def, auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. Le (0::'b) \\<preceq> norm M k n 0 0\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 3. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 4. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "show \"Le 0 \\<preceq> ?M2 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> norm M k n 0 0", "using A"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<preceq> norm M k n 0 0", "unfolding norm_def DBM_zone_repr_def DBM_val_bounded_def dbm_le_def"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> {u. (Le (0::'b) \\<prec> M 0 0 \\<or> Le (0::'b) = M 0 0) \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n\ngoal (1 subgoal):\n 1. Le (0::'b) \\<prec> (let ub = if 0 < 0 then k 0 else (0::'b);\n                            lb = if 0 < 0 then - k 0 else (0::'b)\n                        in if 0 \\<le> n \\<and> 0 \\<le> n\n                           then norm_lower (norm_upper (M 0 0) ub) lb\n                           else M 0 0) \\<or>\n    Le (0::'b) =\n    (let ub = if 0 < 0 then k 0 else (0::'b);\n         lb = if 0 < 0 then - k 0 else (0::'b)\n     in if 0 \\<le> n \\<and> 0 \\<le> n\n        then norm_lower (norm_upper (M 0 0) ub) lb else M 0 0)", "by auto"], ["proof (state)\nthis:\n  Le (0::'b) \\<preceq> norm M k n 0 0\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "fix c"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "assume \"v c \\<le> n\""], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "with M1"], ["proof (chain)\npicking this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c \\<le> n", "have M1: \"dbm_entry_val u None (Some c) (M 0 (v c))\""], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (M 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "from \\<open>v c \\<le> n\\<close> A"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>", "have *:\n      \"?M2 0 (v c) = norm_lower (norm_upper (M 0 (v c)) 0) (- k (v c))\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. norm M k n 0 (v c) =\n    norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))", "unfolding norm_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < 0 then k 0 else (0::'b);\n         lb = if 0 < v c then - k (v c) else (0::'b)\n     in if 0 \\<le> n \\<and> v c \\<le> n\n        then norm_lower (norm_upper (M 0 (v c)) ub) lb else M 0 (v c)) =\n    norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))", "by auto"], ["proof (state)\nthis:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n\ngoal (3 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 3. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "show \"dbm_entry_val u None (Some c) (?M2 0 (v c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "proof (cases \"M 0 (v c) \\<prec> Lt (- k (v c))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case True"], ["proof (state)\nthis:\n  M 0 (v c) \\<prec> Lt (- k (v c))\n\ngoal (2 subgoals):\n 1. M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "proof (cases \"Le 0 \\<prec> M 0 (v c)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case True"], ["proof (state)\nthis:\n  Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (2 subgoals):\n 1. Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "with *"], ["proof (chain)\npicking this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  Le (0::'b) \\<prec> M 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case False"], ["proof (state)\nthis:\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "with * True"], ["proof (chain)\npicking this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  M 0 (v c) \\<prec> Lt (- k (v c))\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)", "have \"?M2 0 (v c) = Lt (- k (v c))\""], ["proof (prove)\nusing this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  M 0 (v c) \\<prec> Lt (- k (v c))\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. norm M k n 0 (v c) = Lt (- k (v c))", "by auto"], ["proof (state)\nthis:\n  norm M k n 0 (v c) = Lt (- k (v c))\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "moreover"], ["proof (state)\nthis:\n  norm M k n 0 (v c) = Lt (- k (v c))\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "from True dbm_entry_val_mono_2[OF M1]"], ["proof (chain)\npicking this:\n  M 0 (v c) \\<prec> Lt (- k (v c))\n  M 0 (v c) \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u None (Some c) ?b'", "have\n          \"dbm_entry_val u None (Some c) (Lt (- k (v c)))\""], ["proof (prove)\nusing this:\n  M 0 (v c) \\<prec> Lt (- k (v c))\n  M 0 (v c) \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u None (Some c) ?b'\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (Lt (- k (v c)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (Lt (- k (v c)))\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "ultimately"], ["proof (chain)\npicking this:\n  norm M k n 0 (v c) = Lt (- k (v c))\n  dbm_entry_val u None (Some c) (Lt (- k (v c)))", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n 0 (v c) = Lt (- k (v c))\n  dbm_entry_val u None (Some c) (Lt (- k (v c)))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<not> M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case False"], ["proof (state)\nthis:\n  \\<not> M 0 (v c) \\<prec> Lt (- k (v c))\n\ngoal (1 subgoal):\n 1. \\<not> M 0 (v c) \\<prec> Lt (- k (v c)) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "proof (cases \"Le 0 \\<prec> M 0 (v c)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case True"], ["proof (state)\nthis:\n  Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (2 subgoals):\n 1. Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n 2. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "with *"], ["proof (chain)\npicking this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  Le (0::'b) \\<prec> M 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "case F: False"], ["proof (state)\nthis:\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. \\<not> Le (0::'b) \\<prec> M 0 (v c) \\<Longrightarrow>\n    dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "with M1 * False"], ["proof (chain)\npicking this:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  \\<not> M 0 (v c) \\<prec> Lt (- k (v c))\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u None (Some c) (M 0 (v c))\n  norm M k n 0 (v c) =\n  norm_lower (norm_upper (M 0 (v c)) (0::'b)) (- k (v c))\n  \\<not> M 0 (v c) \\<prec> Lt (- k (v c))\n  \\<not> Le (0::'b) \\<prec> M 0 (v c)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u None (Some c) (norm M k n 0 (v c))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u None (Some c) (norm M k n 0 (v c))\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "fix c"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "assume \"v c \\<le> n\""], ["proof (state)\nthis:\n  v c \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "with M1"], ["proof (chain)\npicking this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c \\<le> n", "have M1: \"dbm_entry_val u (Some c) None (M (v c) 0)\""], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (M (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (M (v c) 0)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "from \\<open>v c \\<le> n\\<close> A"], ["proof (chain)\npicking this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>", "have *:\n      \"?M2 (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) 0\""], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. norm M k n (v c) 0 =\n    norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)", "unfolding norm_def"], ["proof (prove)\nusing this:\n  v c \\<le> n\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < v c then k (v c) else (0::'b);\n         lb = if 0 < 0 then - k 0 else (0::'b)\n     in if v c \\<le> n \\<and> 0 \\<le> n\n        then norm_lower (norm_upper (M (v c) 0) ub) lb else M (v c) 0) =\n    norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)", "by auto"], ["proof (state)\nthis:\n  norm M k n (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       v c \\<le> n \\<Longrightarrow>\n       dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "show \"dbm_entry_val u (Some c) None (?M2 (v c) 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "proof (cases \"Le (k (v c)) \\<prec> M (v c) 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "case True"], ["proof (state)\nthis:\n  Le (k (v c)) \\<prec> M (v c) 0\n\ngoal (2 subgoals):\n 1. Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "with A(1,2) \\<open>v c \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c \\<le> n\n  Le (k (v c)) \\<prec> M (v c) 0", "have \"?M2 (v c) 0 = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c \\<le> n\n  Le (k (v c)) \\<prec> M (v c) 0\n\ngoal (1 subgoal):\n 1. norm M k n (v c) 0 = \\<infinity>", "unfolding norm_def"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c \\<le> n\n  Le (k (v c)) \\<prec> M (v c) 0\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < v c then k (v c) else (0::'b);\n         lb = if 0 < 0 then - k 0 else (0::'b)\n     in if v c \\<le> n \\<and> 0 \\<le> n\n        then norm_lower (norm_upper (M (v c) 0) ub) lb else M (v c) 0) =\n    \\<infinity>", "by auto"], ["proof (state)\nthis:\n  norm M k n (v c) 0 = \\<infinity>\n\ngoal (2 subgoals):\n 1. Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "then"], ["proof (chain)\npicking this:\n  norm M k n (v c) 0 = \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n (v c) 0 = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "case False"], ["proof (state)\nthis:\n  \\<not> Le (k (v c)) \\<prec> M (v c) 0\n\ngoal (1 subgoal):\n 1. \\<not> Le (k (v c)) \\<prec> M (v c) 0 \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "proof (cases \"M (v c) 0 \\<prec> Lt 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<not> M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "case True"], ["proof (state)\nthis:\n  M (v c) 0 \\<prec> Lt (0::'b)\n\ngoal (2 subgoals):\n 1. M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n 2. \\<not> M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "with False * dbm_entry_val_mono_3[OF M1]"], ["proof (chain)\npicking this:\n  \\<not> Le (k (v c)) \\<prec> M (v c) 0\n  norm M k n (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)\n  M (v c) 0 \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c) None ?b'\n  M (v c) 0 \\<prec> Lt (0::'b)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Le (k (v c)) \\<prec> M (v c) 0\n  norm M k n (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)\n  M (v c) 0 \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c) None ?b'\n  M (v c) 0 \\<prec> Lt (0::'b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<not> M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "case F: False"], ["proof (state)\nthis:\n  \\<not> M (v c) 0 \\<prec> Lt (0::'b)\n\ngoal (1 subgoal):\n 1. \\<not> M (v c) 0 \\<prec> Lt (0::'b) \\<Longrightarrow>\n    dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "with M1 * False"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  norm M k n (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)\n  \\<not> Le (k (v c)) \\<prec> M (v c) 0\n  \\<not> M (v c) 0 \\<prec> Lt (0::'b)", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c) None (M (v c) 0)\n  norm M k n (v c) 0 = norm_lower (norm_upper (M (v c) 0) (k (v c))) (0::'b)\n  \\<not> Le (k (v c)) \\<prec> M (v c) 0\n  \\<not> M (v c) 0 \\<prec> Lt (0::'b)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c) None (norm M k n (v c) 0)", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c) None (norm M k n (v c) 0)\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "fix c1 c2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "assume \"v c1 \\<le> n\" \"v c2 \\<le> n\""], ["proof (state)\nthis:\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "with M1"], ["proof (chain)\npicking this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c1 \\<le> n\n  v c2 \\<le> n", "have M1: \"dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  u \\<in> {u. Le (0::'b) \\<preceq> M 0 0 \\<and>\n              (\\<forall>c.\n                  v c \\<le> n \\<longrightarrow>\n                  dbm_entry_val u None (Some c) (M 0 (v c)) \\<and>\n                  dbm_entry_val u (Some c) None (M (v c) 0)) \\<and>\n              (\\<forall>c1 c2.\n                  v c1 \\<le> n \\<and> v c2 \\<le> n \\<longrightarrow>\n                  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2)))}\n  v c1 \\<le> n\n  v c2 \\<le> n\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>v c1 \\<le> n; v c2 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                          (norm M k n (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))", "show \"dbm_entry_val u (Some c1) (Some c2) (?M2 (v c1) (v c2))\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "proof (cases \"Le (k (v c1)) \\<prec> M (v c1) (v c2)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))\n 2. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))\n 2. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "with A(1,2) \\<open>v c1 \\<le> n\\<close> \\<open>v c2 \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  Le (k (v c1)) \\<prec> M (v c1) (v c2)", "have \"?M2 (v c1) (v c2) = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. norm M k n (v c1) (v c2) = \\<infinity>", "unfolding norm_def"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < v c1 then k (v c1) else (0::'b);\n         lb = if 0 < v c2 then - k (v c2) else (0::'b)\n     in if v c1 \\<le> n \\<and> v c2 \\<le> n\n        then norm_lower (norm_upper (M (v c1) (v c2)) ub) lb\n        else M (v c1) (v c2)) =\n    \\<infinity>", "by auto"], ["proof (state)\nthis:\n  norm M k n (v c1) (v c2) = \\<infinity>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))\n 2. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  norm M k n (v c1) (v c2) = \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n (v c1) (v c2) = \\<infinity>\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "with A(1,2) \\<open>v c1 \\<le> n\\<close> \\<open>v c2 \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)", "have\n        *: \"?M2 (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\""], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))", "unfolding norm_def"], ["proof (prove)\nusing this:\n  \\<forall>c. 0 < v c\n  u \\<in> [M]\\<^bsub>v,n\\<^esub>\n  v c1 \\<le> n\n  v c2 \\<le> n\n  \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\n\ngoal (1 subgoal):\n 1. (let ub = if 0 < v c1 then k (v c1) else (0::'b);\n         lb = if 0 < v c2 then - k (v c2) else (0::'b)\n     in if v c1 \\<le> n \\<and> v c2 \\<le> n\n        then norm_lower (norm_upper (M (v c1) (v c2)) ub) lb\n        else M (v c1) (v c2)) =\n    norm_lower (M (v c1) (v c2)) (- k (v c2))", "by auto"], ["proof (state)\nthis:\n  norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2));\n     \\<not> Le (k (v c1)) \\<prec> M (v c1) (v c2)\\<rbrakk>\n    \\<Longrightarrow> dbm_entry_val u (Some c1) (Some c2)\n                       (norm M k n (v c1) (v c2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "proof (cases \"M (v c1) (v c2) \\<prec> Lt (- k (v c2))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n 2. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "case True"], ["proof (state)\nthis:\n  M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n\ngoal (2 subgoals):\n 1. M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n 2. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "with dbm_entry_val_mono_1[OF M1]"], ["proof (chain)\npicking this:\n  M (v c1) (v c2) \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) ?b'\n  M (v c1) (v c2) \\<prec> Lt (- k (v c2))", "have\n          \"dbm_entry_val u (Some c1) (Some c2) (Lt (- k (v c2)))\""], ["proof (prove)\nusing this:\n  M (v c1) (v c2) \\<preceq> ?b' \\<Longrightarrow>\n  dbm_entry_val u (Some c1) (Some c2) ?b'\n  M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (Lt (- k (v c2)))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (Lt (- k (v c2)))\n\ngoal (2 subgoals):\n 1. M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n 2. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "then"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (Lt (- k (v c2)))", "have \"u c1 - u c2 < - k (v c2)\""], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (Lt (- k (v c2)))\n\ngoal (1 subgoal):\n 1. u c1 - u c2 < - k (v c2)", "by auto"], ["proof (state)\nthis:\n  u c1 - u c2 < - k (v c2)\n\ngoal (2 subgoals):\n 1. M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n 2. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "with * True"], ["proof (chain)\npicking this:\n  norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\n  M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n  u c1 - u c2 < - k (v c2)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\n  M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n  u c1 - u c2 < - k (v c2)\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n\ngoal (1 subgoal):\n 1. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "case False"], ["proof (state)\nthis:\n  \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n\ngoal (1 subgoal):\n 1. \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2)) \\<Longrightarrow>\n    dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "with M1 *"], ["proof (chain)\npicking this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\n  \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2))", "show ?thesis"], ["proof (prove)\nusing this:\n  dbm_entry_val u (Some c1) (Some c2) (M (v c1) (v c2))\n  norm M k n (v c1) (v c2) = norm_lower (M (v c1) (v c2)) (- k (v c2))\n  \\<not> M (v c1) (v c2) \\<prec> Lt (- k (v c2))\n\ngoal (1 subgoal):\n 1. dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))", "by auto"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dbm_entry_val u (Some c1) (Some c2) (norm M k n (v c1) (v c2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<in> [norm M k n]\\<^bsub>v,n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}