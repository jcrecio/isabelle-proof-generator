{"file_name": "/home/qj213/afp-2021-10-22/thys/Secondary_Sylow/SndSylow.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Secondary_Sylow", "problem_names": ["lemma singletonI:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> x = y\"\n  assumes \"y \\<in> A\"\n  shows \"A = {y}\"", "lemma set_mult_inclusion:\n  assumes H:\"subgroup H G\"\n  assumes Q:\"P \\<subseteq> carrier G\"\n  assumes PQ:\"H <#> P \\<subseteq> H\"\n  shows \"P \\<subseteq> H\"", "lemma card_subgrp_dvd:\n  assumes \"subgroup H G\"\n  shows \"card H dvd order G\"", "lemma subgroup_finite:\n  assumes subgroup:\"subgroup H G\"\n  assumes finite:\"finite (carrier G)\"\n  shows \"finite H\"", "lemma pa_not_zero: \"p ^ a \\<noteq> 0\"", "lemma sylow_greater_zero:\n  shows \"card (subgroups_of_size (p ^ a)) > 0\"", "lemma is_snd_sylow: \"snd_sylow G p a m\"", "lemma ex_conj_sylow_group:\n  assumes H:\"H \\<in> subgroups_of_size (p ^ b)\"\n  assumes Psize:\"P \\<in> subgroups_of_size (p ^ a)\"\n  obtains g where \"g \\<in> carrier G\" \"H \\<subseteq> g <# (P #> inv g)\"", "theorem sylow_contained_in_sylow_group:\n  assumes H:\"H \\<in> subgroups_of_size (p ^ b)\"\n  obtains S where \"H \\<subseteq> S\" and \"S \\<in> subgroups_of_size (p ^ a)\"", "theorem sylow_conjugate:\n  assumes P:\"P \\<in> subgroups_of_size (p ^ a)\"\n  assumes Q:\"Q \\<in> subgroups_of_size (p ^ a)\"\n  obtains g where \"g \\<in> carrier G\" \"Q = g <# (P #> inv g)\"", "theorem num_eq_card_orbit:\n  assumes P:\"P \\<in> subgroups_of_size (p ^ a)\"\n  shows \"subgroups_of_size (p ^ a) = group_action.orbit G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) P\"", "theorem num_sylow_normalizer:\n  assumes Psize:\"P \\<in> subgroups_of_size (p ^ a)\"\n  shows \"card (rcosets\\<^bsub>G\\<lparr>carrier := group_action.stabilizer G (conjugation_action (p ^ a)) P\\<rparr>\\<^esub> P) * p ^ a = card (group_action.stabilizer G (conjugation_action (p ^ a)) P)\"", "theorem (in snd_sylow) num_sylow_dvd_remainder:\n  shows \"card (subgroups_of_size (p ^ a)) dvd m\"", "lemma (in snd_sylow) restrict_locale:\n  assumes subgrp:\"subgroup P G\"\n  assumes card:\"p ^ a dvd card P\"\n  shows \"snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a ((card P) div (p ^ a))\"", "theorem (in snd_sylow) p_sylow_mod_p:\n  shows \"card (subgroups_of_size (p ^ a)) mod p = 1\""], "translations": [["", "lemma singletonI:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> x = y\"\n  assumes \"y \\<in> A\"\n  shows \"A = {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = {y}", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> ?x = y\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. A = {y}", "by fastforce"], ["", "context group\nbegin"], ["", "lemma set_mult_inclusion:\n  assumes H:\"subgroup H G\"\n  assumes Q:\"P \\<subseteq> carrier G\"\n  assumes PQ:\"H <#> P \\<subseteq> H\"\n  shows \"P \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "from H"], ["proof (chain)\npicking this:\n  subgroup H G", "have \"\\<one> \\<in> H\""], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "by (rule subgroup.one_closed)"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "moreover"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "assume x:\"x \\<in> P\""], ["proof (state)\nthis:\n  x \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "ultimately"], ["proof (chain)\npicking this:\n  \\<one> \\<in> H\n  x \\<in> P", "have \"\\<one> \\<otimes> x \\<in> H <#> P\""], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  x \\<in> P\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> x \\<in> H <#> P", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  x \\<in> P\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> x\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>P. {h \\<otimes> k})", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<otimes> x \\<in> H <#> P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "with PQ"], ["proof (chain)\npicking this:\n  H <#> P \\<subseteq> H\n  \\<one> \\<otimes> x \\<in> H <#> P", "have \"\\<one> \\<otimes> x \\<in> H\""], ["proof (prove)\nusing this:\n  H <#> P \\<subseteq> H\n  \\<one> \\<otimes> x \\<in> H <#> P\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> x \\<in> H", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<otimes> x \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> P \\<Longrightarrow> x \\<in> H", "with H Q x"], ["proof (chain)\npicking this:\n  subgroup H G\n  P \\<subseteq> carrier G\n  x \\<in> P\n  \\<one> \\<otimes> x \\<in> H", "show  \"x \\<in> H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  P \\<subseteq> carrier G\n  x \\<in> P\n  \\<one> \\<otimes> x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> H", "by (metis in_mono l_one)"], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_subgrp_dvd:\n  assumes \"subgroup H G\"\n  shows \"card H dvd order G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card H dvd order G", "proof(cases \"finite (carrier G)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (carrier G) \\<Longrightarrow> card H dvd order G\n 2. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "case True"], ["proof (state)\nthis:\n  finite (carrier G)\n\ngoal (2 subgoals):\n 1. finite (carrier G) \\<Longrightarrow> card H dvd order G\n 2. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "with assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  finite (carrier G)", "have \"card (rcosets H) * card H = order G\""], ["proof (prove)\nusing this:\n  subgroup H G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. card (rcosets H) * card H = order G", "by (metis lagrange)"], ["proof (state)\nthis:\n  card (rcosets H) * card H = order G\n\ngoal (2 subgoals):\n 1. finite (carrier G) \\<Longrightarrow> card H dvd order G\n 2. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "thus ?thesis"], ["proof (prove)\nusing this:\n  card (rcosets H) * card H = order G\n\ngoal (1 subgoal):\n 1. card H dvd order G", "by (metis dvd_triv_left mult.commute)"], ["proof (state)\nthis:\n  card H dvd order G\n\ngoal (1 subgoal):\n 1. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "case False"], ["proof (state)\nthis:\n  infinite (carrier G)\n\ngoal (1 subgoal):\n 1. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "hence \"order G = 0\""], ["proof (prove)\nusing this:\n  infinite (carrier G)\n\ngoal (1 subgoal):\n 1. order G = 0", "unfolding order_def"], ["proof (prove)\nusing this:\n  infinite (carrier G)\n\ngoal (1 subgoal):\n 1. card (carrier G) = 0", "by (metis card.infinite)"], ["proof (state)\nthis:\n  order G = 0\n\ngoal (1 subgoal):\n 1. infinite (carrier G) \\<Longrightarrow> card H dvd order G", "thus ?thesis"], ["proof (prove)\nusing this:\n  order G = 0\n\ngoal (1 subgoal):\n 1. card H dvd order G", "by (metis dvd_0_right)"], ["proof (state)\nthis:\n  card H dvd order G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_finite:\n  assumes subgroup:\"subgroup H G\"\n  assumes finite:\"finite (carrier G)\"\n  shows \"finite H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite H", "by (metis finite finite_subset subgroup subgroup.subset)"], ["", "end"], ["", "subsection \\<open>Extending the Sylow Locale\\<close>"], ["", "text \\<open>This locale extends the originale @{term sylow} locale by adding\nthe constraint that the @{term p} must not divide the remainder @{term m},\ni.e. @{term \"p ^ a\"} is the maximal size of a @{term p}-subgroup of\n@{term G}.\\<close>"], ["", "locale snd_sylow = sylow +\n  assumes pNotDvdm:\"\\<not> (p dvd m)\""], ["", "context snd_sylow\nbegin"], ["", "lemma pa_not_zero: \"p ^ a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ a \\<noteq> 0", "by (simp add: prime_gt_0_nat prime_p)"], ["", "lemma sylow_greater_zero:\n  shows \"card (subgroups_of_size (p ^ a)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "obtain P where PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>subgroup P G; card P = p ^ a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis sylow_thm)"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "hence \"P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> subgroups_of_size (p ^ a)", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> {H. subgroup H G \\<and> card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "hence \"subgroups_of_size (p ^ a) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. subgroups_of_size (p ^ a) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  subgroups_of_size (p ^ a) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "moreover"], ["proof (state)\nthis:\n  subgroups_of_size (p ^ a) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "have \"finite (subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (subgroups_of_size (p ^ a))", "unfolding subgroups_of_size_def subgroup_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite\n     {H. ((H \\<subseteq> carrier G \\<and>\n           (\\<forall>x y.\n               x \\<in> H \\<longrightarrow>\n               y \\<in> H \\<longrightarrow> x \\<otimes> y \\<in> H)) \\<and>\n          \\<one> \\<in> H \\<and>\n          (\\<forall>x. x \\<in> H \\<longrightarrow> inv x \\<in> H)) \\<and>\n         card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  finite (subgroups_of_size (p ^ a))\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "ultimately"], ["proof (chain)\npicking this:\n  subgroups_of_size (p ^ a) \\<noteq> {}\n  finite (subgroups_of_size (p ^ a))", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroups_of_size (p ^ a) \\<noteq> {}\n  finite (subgroups_of_size (p ^ a))\n\ngoal (1 subgoal):\n 1. 0 < card (subgroups_of_size (p ^ a))", "by auto"], ["proof (state)\nthis:\n  0 < card (subgroups_of_size (p ^ a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_snd_sylow: \"snd_sylow G p a m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow G p a m", "by (rule snd_sylow_axioms)"], ["", "subsection \\<open>Every $p$-group is Contained in a conjugate of a $p$-Sylow-Group\\<close>"], ["", "lemma ex_conj_sylow_group:\n  assumes H:\"H \\<in> subgroups_of_size (p ^ b)\"\n  assumes Psize:\"P \\<in> subgroups_of_size (p ^ a)\"\n  obtains g where \"g \\<in> carrier G\" \"H \\<subseteq> g <# (P #> inv g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)", "have HsubG:\"subgroup H G\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n\ngoal (1 subgoal):\n 1. subgroup H G", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  H \\<in> {H. subgroup H G \\<and> card H = p ^ b}\n\ngoal (1 subgoal):\n 1. subgroup H G", "by auto"], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence HG:\"H \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "by (simp add:subgroup.subset)"], ["proof (state)\nthis:\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from Psize"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)", "have PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. subgroup P G &&& card P = p ^ a", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  P \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. subgroup P G &&& card P = p ^ a", "by auto"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define H' where \"H' = G\\<lparr>carrier := H\\<rparr>\""], ["proof (state)\nthis:\n  H' = G\\<lparr>carrier := H\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from HsubG"], ["proof (chain)\npicking this:\n  subgroup H G", "interpret Hgroup: group H'"], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. Group.group H'", "unfolding H'_def"], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H\\<rparr>)", "by (metis subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)", "have orderH':\"order H' =  p ^ b\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n\ngoal (1 subgoal):\n 1. order H' = p ^ b", "unfolding H'_def subgroups_of_size_def order_def"], ["proof (prove)\nusing this:\n  H \\<in> {H. subgroup H G \\<and> card H = p ^ b}\n\ngoal (1 subgoal):\n 1. card (carrier (G\\<lparr>carrier := H\\<rparr>)) = p ^ b", "by simp"], ["proof (state)\nthis:\n  order H' = p ^ b\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<phi> where \"\\<phi> = (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)\""], ["proof (state)\nthis:\n  \\<phi> = (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with PG"], ["proof (chain)\npicking this:\n  subgroup P G\n  \\<phi> = (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)", "interpret Gact: group_action G \\<phi> \"rcosets P\""], ["proof (prove)\nusing this:\n  subgroup P G\n  \\<phi> = (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)\n\ngoal (1 subgoal):\n 1. group_action G \\<phi> (rcosets P)", "unfolding \\<phi>_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g) =\n  (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)\n\ngoal (1 subgoal):\n 1. group_action G (\\<lambda>g. \\<lambda>U\\<in>rcosets P. U #> inv g)\n     (rcosets P)", "by (metis inv_mult_on_rcosets_action)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)", "interpret H'act: group_action H' \\<phi> \"rcosets P\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n\ngoal (1 subgoal):\n 1. group_action H' \\<phi> (rcosets P)", "unfolding H'_def subgroups_of_size_def"], ["proof (prove)\nusing this:\n  H \\<in> {H. subgroup H G \\<and> card H = p ^ b}\n\ngoal (1 subgoal):\n 1. group_action (G\\<lparr>carrier := H\\<rparr>) \\<phi> (rcosets P)", "by (metis (mono_tags) Gact.subgroup_action mem_Collect_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from finite_G PG"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup P G", "have \"finite (rcosets P)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup P G\n\ngoal (1 subgoal):\n 1. finite (rcosets P)", "unfolding RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup P G\n\ngoal (1 subgoal):\n 1. finite (\\<Union>a\\<in>carrier G. {\\<Union>h\\<in>P. {h \\<otimes> a}})", "by (metis (lifting) finite.emptyI finite_UN_I finite_insert)"], ["proof (state)\nthis:\n  finite (rcosets P)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with orderH' sylow_axioms cardP"], ["proof (chain)\npicking this:\n  order H' = p ^ b\n  sylow G p a m\n  card P = p ^ a\n  finite (rcosets P)", "have \"card H'act.fixed_points mod p = card (rcosets P) mod p\""], ["proof (prove)\nusing this:\n  order H' = p ^ b\n  sylow G p a m\n  card P = p ^ a\n  finite (rcosets P)\n\ngoal (1 subgoal):\n 1. card H'act.fixed_points mod p = card (rcosets P) mod p", "unfolding sylow_def sylow_axioms_def"], ["proof (prove)\nusing this:\n  order H' = p ^ b\n  Group.group G \\<and>\n  prime p \\<and> order G = p ^ a * m \\<and> finite (carrier G)\n  card P = p ^ a\n  finite (rcosets P)\n\ngoal (1 subgoal):\n 1. card H'act.fixed_points mod p = card (rcosets P) mod p", "by (metis H'act.fixed_point_congruence)"], ["proof (state)\nthis:\n  card H'act.fixed_points mod p = card (rcosets P) mod p\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  card H'act.fixed_points mod p = card (rcosets P) mod p\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from finite_G PG order_G cardP"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup P G\n  order G = p ^ a * m\n  card P = p ^ a", "have \"card (rcosets P) * p ^ a  = p ^ a * m\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup P G\n  order G = p ^ a * m\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. card (rcosets P) * p ^ a = p ^ a * m", "by (metis lagrange)"], ["proof (state)\nthis:\n  card (rcosets P) * p ^ a = p ^ a * m\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with prime_p"], ["proof (chain)\npicking this:\n  prime p\n  card (rcosets P) * p ^ a = p ^ a * m", "have \"card (rcosets P) = m\""], ["proof (prove)\nusing this:\n  prime p\n  card (rcosets P) * p ^ a = p ^ a * m\n\ngoal (1 subgoal):\n 1. card (rcosets P) = m", "by (metis less_nat_zero_code mult_cancel2 mult_is_0 mult.commute order_G zero_less_o_G)"], ["proof (state)\nthis:\n  card (rcosets P) = m\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"card (rcosets P) mod p = m mod p\""], ["proof (prove)\nusing this:\n  card (rcosets P) = m\n\ngoal (1 subgoal):\n 1. card (rcosets P) mod p = m mod p", "by simp"], ["proof (state)\nthis:\n  card (rcosets P) mod p = m mod p\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  card (rcosets P) mod p = m mod p\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from pNotDvdm prime_p"], ["proof (chain)\npicking this:\n  \\<not> p dvd m\n  prime p", "have \"... \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> p dvd m\n  prime p\n\ngoal (1 subgoal):\n 1. m mod p \\<noteq> 0", "by (metis dvd_eq_mod_eq_0)"], ["proof (state)\nthis:\n  m mod p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  card H'act.fixed_points mod p = card (rcosets P) mod p\n  card (rcosets P) mod p = m mod p\n  m mod p \\<noteq> 0", "have \"card H'act.fixed_points \\<noteq> 0\""], ["proof (prove)\nusing this:\n  card H'act.fixed_points mod p = card (rcosets P) mod p\n  card (rcosets P) mod p = m mod p\n  m mod p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card H'act.fixed_points \\<noteq> 0", "by (metis mod_0)"], ["proof (state)\nthis:\n  card H'act.fixed_points \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  card H'act.fixed_points \\<noteq> 0", "obtain N where N:\"N \\<in> H'act.fixed_points\""], ["proof (prove)\nusing this:\n  card H'act.fixed_points \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        N \\<in> H'act.fixed_points \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  N \\<in> H'act.fixed_points\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence Ncoset:\"N \\<in> rcosets P\""], ["proof (prove)\nusing this:\n  N \\<in> H'act.fixed_points\n\ngoal (1 subgoal):\n 1. N \\<in> rcosets P", "unfolding H'act.fixed_points_def"], ["proof (prove)\nusing this:\n  N \\<in> {m \\<in> rcosets P. carrier H' \\<subseteq> H'act.stabilizer m}\n\ngoal (1 subgoal):\n 1. N \\<in> rcosets P", "by simp"], ["proof (state)\nthis:\n  N \\<in> rcosets P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  N \\<in> rcosets P", "obtain g where g:\"g \\<in> carrier G\" \"N = P #> g\""], ["proof (prove)\nusing this:\n  N \\<in> rcosets P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; N = P #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  N \\<in> (\\<Union>a\\<in>carrier G. {P #> a})\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; N = P #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  N = P #> g\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence invg:\"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence invinvg:\"inv (inv g) \\<in> carrier G\""], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv (inv g) \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv (inv g) \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from N"], ["proof (chain)\npicking this:\n  N \\<in> H'act.fixed_points", "have \"carrier H' \\<subseteq> H'act.stabilizer N\""], ["proof (prove)\nusing this:\n  N \\<in> H'act.fixed_points\n\ngoal (1 subgoal):\n 1. carrier H' \\<subseteq> H'act.stabilizer N", "unfolding H'act.fixed_points_def"], ["proof (prove)\nusing this:\n  N \\<in> {m \\<in> rcosets P. carrier H' \\<subseteq> H'act.stabilizer m}\n\ngoal (1 subgoal):\n 1. carrier H' \\<subseteq> H'act.stabilizer N", "by simp"], ["proof (state)\nthis:\n  carrier H' \\<subseteq> H'act.stabilizer N\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<forall>h\\<in>H. \\<phi> h N = N\""], ["proof (prove)\nusing this:\n  carrier H' \\<subseteq> H'act.stabilizer N\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<in>H. \\<phi> h N = N", "unfolding H'act.stabilizer_def"], ["proof (prove)\nusing this:\n  carrier H' \\<subseteq> {g \\<in> carrier H'. \\<phi> g N = N}\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<in>H. \\<phi> h N = N", "using H'_def"], ["proof (prove)\nusing this:\n  carrier H' \\<subseteq> {g \\<in> carrier H'. \\<phi> g N = N}\n  H' = G\\<lparr>carrier := H\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<in>H. \\<phi> h N = N", "by auto"], ["proof (state)\nthis:\n  \\<forall>h\\<in>H. \\<phi> h N = N\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with HG Ncoset"], ["proof (chain)\npicking this:\n  H \\<subseteq> carrier G\n  N \\<in> rcosets P\n  \\<forall>h\\<in>H. \\<phi> h N = N", "have a1:\"\\<forall>h\\<in>H. N #> inv h \\<subseteq> N\""], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  N \\<in> rcosets P\n  \\<forall>h\\<in>H. \\<phi> h N = N\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<in>H. N #> inv h \\<subseteq> N", "unfolding \\<phi>_def"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  N \\<in> rcosets P\n  \\<forall>h\\<in>H. (\\<lambda>U\\<in>rcosets P. U #> inv h) N = N\n\ngoal (1 subgoal):\n 1. \\<forall>h\\<in>H. N #> inv h \\<subseteq> N", "by simp"], ["proof (state)\nthis:\n  \\<forall>h\\<in>H. N #> inv h \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"N <#> H \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N <#> H \\<subseteq> N", "unfolding set_mult_def r_coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>N. \\<Union>k\\<in>H. {h \\<otimes> k}) \\<subseteq> N", "proof(auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h k.\n       \\<lbrakk>h \\<in> N; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> h \\<otimes> k \\<in> N", "fix n h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h k.\n       \\<lbrakk>h \\<in> N; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> h \\<otimes> k \\<in> N", "assume n:\"n \\<in> N\" and h:\"h \\<in> H\""], ["proof (state)\nthis:\n  n \\<in> N\n  h \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>h k.\n       \\<lbrakk>h \\<in> N; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> h \\<otimes> k \\<in> N", "with H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)\n  n \\<in> N\n  h \\<in> H", "have \"inv h \\<in> H\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n  n \\<in> N\n  h \\<in> H\n\ngoal (1 subgoal):\n 1. inv h \\<in> H", "by (metis (mono_tags) mem_Collect_eq subgroup.m_inv_closed subgroups_of_size_def)"], ["proof (state)\nthis:\n  inv h \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>h k.\n       \\<lbrakk>h \\<in> N; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> h \\<otimes> k \\<in> N", "with n HG PG a1"], ["proof (chain)\npicking this:\n  n \\<in> N\n  H \\<subseteq> carrier G\n  subgroup P G\n  \\<forall>h\\<in>H. N #> inv h \\<subseteq> N\n  inv h \\<in> H", "have \"n \\<otimes> inv (inv h) \\<in> N\""], ["proof (prove)\nusing this:\n  n \\<in> N\n  H \\<subseteq> carrier G\n  subgroup P G\n  \\<forall>h\\<in>H. N #> inv h \\<subseteq> N\n  inv h \\<in> H\n\ngoal (1 subgoal):\n 1. n \\<otimes> inv (inv h) \\<in> N", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  n \\<in> N\n  H \\<subseteq> carrier G\n  subgroup P G\n  \\<forall>h\\<in>H. (\\<Union>ha\\<in>N. {ha \\<otimes> inv h}) \\<subseteq> N\n  inv h \\<in> H\n\ngoal (1 subgoal):\n 1. n \\<otimes> inv (inv h) \\<in> N", "by auto"], ["proof (state)\nthis:\n  n \\<otimes> inv (inv h) \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>h k.\n       \\<lbrakk>h \\<in> N; k \\<in> H\\<rbrakk>\n       \\<Longrightarrow> h \\<otimes> k \\<in> N", "with HG h"], ["proof (chain)\npicking this:\n  H \\<subseteq> carrier G\n  h \\<in> H\n  n \\<otimes> inv (inv h) \\<in> N", "show  \"n \\<otimes> h \\<in> N\""], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  h \\<in> H\n  n \\<otimes> inv (inv h) \\<in> N\n\ngoal (1 subgoal):\n 1. n \\<otimes> h \\<in> N", "by (metis in_mono inv_inv)"], ["proof (state)\nthis:\n  n \\<otimes> h \\<in> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N <#> H \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  N = P #> g\n  N <#> H \\<subseteq> N", "have \"((P #> g) <#> H) #> inv g \\<subseteq> (P #> g) #> inv g\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n  N <#> H \\<subseteq> N\n\ngoal (1 subgoal):\n 1. P #> g <#> H #> inv g \\<subseteq> P #> g #> inv g", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = (\\<Union>h\\<in>P. {h \\<otimes> g})\n  N <#> H \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>(\\<Union>h\\<in>P. {h \\<otimes> g}) <#> H.\n        {h \\<otimes> inv g})\n    \\<subseteq> (\\<Union>h\\<in>\\<Union>h\\<in>P. {h \\<otimes> g}.\n                    {h \\<otimes> inv g})", "by auto"], ["proof (state)\nthis:\n  P #> g <#> H #> inv g \\<subseteq> P #> g #> inv g\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with PG g invg"], ["proof (chain)\npicking this:\n  subgroup P G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  P #> g <#> H #> inv g \\<subseteq> P #> g #> inv g", "have \"((P #> g) <#> H) #> inv g \\<subseteq> P\""], ["proof (prove)\nusing this:\n  subgroup P G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  P #> g <#> H #> inv g \\<subseteq> P #> g #> inv g\n\ngoal (1 subgoal):\n 1. P #> g <#> H #> inv g \\<subseteq> P", "by (metis coset_mult_assoc coset_mult_one r_inv subgroup.subset)"], ["proof (state)\nthis:\n  P #> g <#> H #> inv g \\<subseteq> P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g HG PG invg"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  N = P #> g\n  H \\<subseteq> carrier G\n  subgroup P G\n  inv g \\<in> carrier G\n  P #> g <#> H #> inv g \\<subseteq> P", "have \"P <#> (g <# H #> inv g) \\<subseteq> P\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n  H \\<subseteq> carrier G\n  subgroup P G\n  inv g \\<in> carrier G\n  P #> g <#> H #> inv g \\<subseteq> P\n\ngoal (1 subgoal):\n 1. P <#> (g <# H #> inv g) \\<subseteq> P", "by (metis lr_coset_assoc r_coset_subset_G rcos_assoc_lcos setmult_rcos_assoc subgroup.subset)"], ["proof (state)\nthis:\n  P <#> (g <# H #> inv g) \\<subseteq> P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with PG HG g invg"], ["proof (chain)\npicking this:\n  subgroup P G\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  P <#> (g <# H #> inv g) \\<subseteq> P", "have \"g <# H #> inv g \\<subseteq> P\""], ["proof (prove)\nusing this:\n  subgroup P G\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  P <#> (g <# H #> inv g) \\<subseteq> P\n\ngoal (1 subgoal):\n 1. g <# H #> inv g \\<subseteq> P", "by (metis l_coset_subset_G r_coset_subset_G set_mult_inclusion)"], ["proof (state)\nthis:\n  g <# H #> inv g \\<subseteq> P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  N = P #> g\n  g <# H #> inv g \\<subseteq> P", "have \"(g <# H #> inv g) #> inv (inv g) \\<subseteq> P #> inv (inv g)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n  g <# H #> inv g \\<subseteq> P\n\ngoal (1 subgoal):\n 1. g <# H #> inv g #> inv (inv g) \\<subseteq> P #> inv (inv g)", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = (\\<Union>h\\<in>P. {h \\<otimes> g})\n  (\\<Union>h\\<in>g <# H. {h \\<otimes> inv g}) \\<subseteq> P\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>\\<Union>h\\<in>g <# H. {h \\<otimes> inv g}.\n        {h \\<otimes> inv (inv g)})\n    \\<subseteq> (\\<Union>h\\<in>P. {h \\<otimes> inv (inv g)})", "by auto"], ["proof (state)\nthis:\n  g <# H #> inv g #> inv (inv g) \\<subseteq> P #> inv (inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with HG g invg invinvg"], ["proof (chain)\npicking this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  inv (inv g) \\<in> carrier G\n  g <# H #> inv g #> inv (inv g) \\<subseteq> P #> inv (inv g)", "have \"g <# H \\<subseteq> P #> inv (inv g)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  inv (inv g) \\<in> carrier G\n  g <# H #> inv g #> inv (inv g) \\<subseteq> P #> inv (inv g)\n\ngoal (1 subgoal):\n 1. g <# H \\<subseteq> P #> inv (inv g)", "by (metis coset_mult_assoc coset_mult_inv2 l_coset_subset_G)"], ["proof (state)\nthis:\n  g <# H \\<subseteq> P #> inv (inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  N = P #> g\n  g <# H \\<subseteq> P #> inv (inv g)", "have \"(inv g) <# (g <# H) \\<subseteq> inv g <# (P #> inv (inv g))\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n  g <# H \\<subseteq> P #> inv (inv g)\n\ngoal (1 subgoal):\n 1. inv g <# (g <# H) \\<subseteq> inv g <# (P #> inv (inv g))", "unfolding l_coset_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  N = P #> g\n  (\\<Union>h\\<in>H. {g \\<otimes> h}) \\<subseteq> P #> inv (inv g)\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>\\<Union>h\\<in>H. {g \\<otimes> h}. {inv g \\<otimes> h})\n    \\<subseteq> (\\<Union>h\\<in>P #> inv (inv g). {inv g \\<otimes> h})", "by auto"], ["proof (state)\nthis:\n  inv g <# (g <# H) \\<subseteq> inv g <# (P #> inv (inv g))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with HG g invg invinvg"], ["proof (chain)\npicking this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  inv (inv g) \\<in> carrier G\n  inv g <# (g <# H) \\<subseteq> inv g <# (P #> inv (inv g))", "have \"H \\<subseteq> inv g <# (P #> inv (inv g))\""], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  N = P #> g\n  inv g \\<in> carrier G\n  inv (inv g) \\<in> carrier G\n  inv g <# (g <# H) \\<subseteq> inv g <# (P #> inv (inv g))\n\ngoal (1 subgoal):\n 1. H \\<subseteq> inv g <# (P #> inv (inv g))", "by (metis inv_inv lcos_m_assoc lcos_mult_one r_inv)"], ["proof (state)\nthis:\n  H \\<subseteq> inv g <# (P #> inv (inv g))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with invg"], ["proof (chain)\npicking this:\n  inv g \\<in> carrier G\n  H \\<subseteq> inv g <# (P #> inv (inv g))", "show thesis"], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n  H \\<subseteq> inv g <# (P #> inv (inv g))\n\ngoal (1 subgoal):\n 1. thesis", "by (auto dest:that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Every $p$-Group is Contained in a $p$-Sylow-Group\\<close>"], ["", "theorem sylow_contained_in_sylow_group:\n  assumes H:\"H \\<in> subgroups_of_size (p ^ b)\"\n  obtains S where \"H \\<subseteq> S\" and \"S \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)", "have HG:\"H \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  H \\<in> {H. subgroup H G \\<and> card H = p ^ b}\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "by (simp add:subgroup.subset)"], ["proof (state)\nthis:\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain P where PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>subgroup P G; card P = p ^ a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis sylow_thm)"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence Psize:\"P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> subgroups_of_size (p ^ a)", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> {H. subgroup H G \\<and> card H = p ^ a}", "by simp"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with H"], ["proof (chain)\npicking this:\n  H \\<in> subgroups_of_size (p ^ b)\n  P \\<in> subgroups_of_size (p ^ a)", "obtain g where g:\"g \\<in> carrier G\" \"H \\<subseteq> g <# (P #> inv g)\""], ["proof (prove)\nusing this:\n  H \\<in> subgroups_of_size (p ^ b)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; H \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ex_conj_sylow_group)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note Psize g"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)", "have \"conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)", "by (metis conjugation_is_size_invariant)"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>H \\<subseteq> S; S \\<in> subgroups_of_size (p ^ a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)", "show thesis"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. thesis", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  H \\<subseteq> g <# (P #> inv g)\n  (\\<lambda>g\\<in>carrier G.\n      \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n   g P\n  \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. thesis", "by (auto dest:that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>$p$-Sylow-Groups are conjugates of each other\\<close>"], ["", "theorem sylow_conjugate:\n  assumes P:\"P \\<in> subgroups_of_size (p ^ a)\"\n  assumes Q:\"Q \\<in> subgroups_of_size (p ^ a)\"\n  obtains g where \"g \\<in> carrier G\" \"Q = g <# (P #> inv g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from P"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)", "have \"card P = p ^ a\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card P = p ^ a", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  P \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. card P = p ^ a", "by simp"], ["proof (state)\nthis:\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from Q"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)", "have Qcard:\"card Q = p ^ a\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card Q = p ^ a", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  Q \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. card Q = p ^ a", "by simp"], ["proof (state)\nthis:\n  card Q = p ^ a\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from Q P"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)", "obtain g where g:\"g \\<in> carrier G\" \"Q \\<subseteq> g <# (P #> inv g)\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q \\<subseteq> g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule ex_conj_sylow_group)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with P finite_G"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)\n  finite (carrier G)\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)", "have \"conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  finite (carrier G)\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)", "by (metis conjugation_is_size_invariant)"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from g P"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)", "have \"conjugation_action (p ^ a) g P = g <# (P #> inv g)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. conjugation_action (p ^ a) g P = g <# (P #> inv g)", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G.\n        \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n     g P =\n    g <# (P #> inv g)", "by simp"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g P = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n  conjugation_action (p ^ a) g P = g <# (P #> inv g)", "have conjSize:\"g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  conjugation_action (p ^ a) g P \\<in> subgroups_of_size (p ^ a)\n  conjugation_action (p ^ a) g P = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  (\\<lambda>g\\<in>carrier G.\n      \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n   g P\n  \\<in> subgroups_of_size (p ^ a)\n  (\\<lambda>g\\<in>carrier G.\n      \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n   g P =\n  g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)", "by simp"], ["proof (state)\nthis:\n  g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with Qcard"], ["proof (chain)\npicking this:\n  card Q = p ^ a\n  g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)", "have  card:\"card (g <# (P #> inv g)) = card Q\""], ["proof (prove)\nusing this:\n  card Q = p ^ a\n  g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card (g <# (P #> inv g)) = card Q", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  card Q = p ^ a\n  g <# (P #> inv g) \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. card (g <# (P #> inv g)) = card Q", "by simp"], ["proof (state)\nthis:\n  card (g <# (P #> inv g)) = card Q\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from conjSize finite_G"], ["proof (chain)\npicking this:\n  g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)\n  finite (carrier G)", "have \"finite (g <# (P #> inv g))\""], ["proof (prove)\nusing this:\n  g <# (P #> inv g) \\<in> subgroups_of_size (p ^ a)\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (g <# (P #> inv g))", "by (metis (mono_tags) finite_subset mem_Collect_eq subgroup.subset subgroups_of_size_def)"], ["proof (state)\nthis:\n  finite (g <# (P #> inv g))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g card"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  card (g <# (P #> inv g)) = card Q\n  finite (g <# (P #> inv g))", "have \"Q = g <# (P #> inv g)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  card (g <# (P #> inv g)) = card Q\n  finite (g <# (P #> inv g))\n\ngoal (1 subgoal):\n 1. Q = g <# (P #> inv g)", "by (metis card_subset_eq)"], ["proof (state)\nthis:\n  Q = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  Q = g <# (P #> inv g)", "show thesis"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Q \\<subseteq> g <# (P #> inv g)\n  Q = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. thesis", "by (metis that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary sylow_conj_orbit_rel:\n  assumes P:\"P \\<in> subgroups_of_size (p ^ a)\"\n  assumes Q:\"Q \\<in> subgroups_of_size (p ^ a)\"\n  shows \"(P,Q) \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q)\n    \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a))\n           (subgroups_of_size (p ^ a))", "unfolding group_action.same_orbit_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q)\n    \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a))\n           (subgroups_of_size (p ^ a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (P, Q)\n    \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a))\n           (subgroups_of_size (p ^ a))", "from Q P"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)", "obtain g where g:\"g \\<in> carrier G\" \"P = g <# (Q #> inv g)\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; P = g <# (Q #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule sylow_conjugate)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. (P, Q)\n    \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a))\n           (subgroups_of_size (p ^ a))", "with Q P"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)", "have g':\"conjugation_action (p ^ a) g Q = P\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. conjugation_action (p ^ a) g Q = P", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G.\n        \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n     g Q =\n    P", "by simp"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g Q = P\n\ngoal (1 subgoal):\n 1. (P, Q)\n    \\<in> group_action.same_orbit_rel G (conjugation_action (p ^ a))\n           (subgroups_of_size (p ^ a))", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "interpret conj: group_action G \"(conjugation_action (p ^ a))\" \"(subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. group_action G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule acts_on_subsets)"], ["proof (state)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> conj.same_orbit_rel", "have \"conj.same_orbit_rel = {X \\<in> (subgroups_of_size (p ^ a) \\<times> subgroups_of_size (p ^ a)). \\<exists>g \\<in> carrier G. ((conjugation_action (p ^ a)) g) (snd X) = (fst X)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conj.same_orbit_rel =\n    {X \\<in> subgroups_of_size (p ^ a) \\<times> subgroups_of_size (p ^ a).\n     \\<exists>g\\<in>carrier G. conjugation_action (p ^ a) g (snd X) = fst X}", "by (rule conj.same_orbit_rel_def)"], ["proof (state)\nthis:\n  conj.same_orbit_rel =\n  {X \\<in> subgroups_of_size (p ^ a) \\<times> subgroups_of_size (p ^ a).\n   \\<exists>g\\<in>carrier G. conjugation_action (p ^ a) g (snd X) = fst X}\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> conj.same_orbit_rel", "with g g' P Q"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)\n  conjugation_action (p ^ a) g Q = P\n  P \\<in> subgroups_of_size (p ^ a)\n  Q \\<in> subgroups_of_size (p ^ a)\n  conj.same_orbit_rel =\n  {X \\<in> subgroups_of_size (p ^ a) \\<times> subgroups_of_size (p ^ a).\n   \\<exists>g\\<in>carrier G. conjugation_action (p ^ a) g (snd X) = fst X}", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  P = g <# (Q #> inv g)\n  conjugation_action (p ^ a) g Q = P\n  P \\<in> subgroups_of_size (p ^ a)\n  Q \\<in> subgroups_of_size (p ^ a)\n  conj.same_orbit_rel =\n  {X \\<in> subgroups_of_size (p ^ a) \\<times> subgroups_of_size (p ^ a).\n   \\<exists>g\\<in>carrier G. conjugation_action (p ^ a) g (snd X) = fst X}\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> conj.same_orbit_rel", "by auto"], ["proof (state)\nthis:\n  (P, Q) \\<in> conj.same_orbit_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Counting Sylow-Groups\\<close>"], ["", "text \\<open>The number of sylow groups is the orbit size of one of them:\\<close>"], ["", "theorem num_eq_card_orbit:\n  assumes P:\"P \\<in> subgroups_of_size (p ^ a)\"\n  shows \"subgroups_of_size (p ^ a) = group_action.orbit G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroups_of_size (p ^ a) =\n    group_action.orbit G (conjugation_action (p ^ a))\n     (subgroups_of_size (p ^ a)) P", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> group_action.orbit G (conjugation_action (p ^ a))\n                (subgroups_of_size (p ^ a)) P\n 2. \\<And>x.\n       x \\<in> group_action.orbit G (conjugation_action (p ^ a))\n                (subgroups_of_size (p ^ a)) P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "interpret conj: group_action G \"(conjugation_action (p ^ a))\" \"(subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. group_action G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule acts_on_subsets)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "have \"group_action.orbit G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) P = group_action.same_orbit_rel G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) `` {P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conj.orbit P = conj.same_orbit_rel `` {P}", "by (rule conj.orbit_def)"], ["proof (state)\nthis:\n  conj.orbit P = conj.same_orbit_rel `` {P}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "fix Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "assume Q:\"Q \\<in> subgroups_of_size (p ^ a)\""], ["proof (state)\nthis:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "from P Q"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)\n  Q \\<in> subgroups_of_size (p ^ a)", "obtain g where g:\"g \\<in> carrier G\" \"Q = g <# (P #> inv g) \""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; Q = g <# (P #> inv g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule sylow_conjugate)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  Q = g <# (P #> inv g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n       x \\<in> conj.orbit P\n 2. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "with P conj.orbit_char"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)\n  ?m \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n  conj.orbit ?m =\n  {n. \\<exists>g.\n         g \\<in> carrier G \\<and> conjugation_action (p ^ a) g ?m = n}\n  g \\<in> carrier G\n  Q = g <# (P #> inv g)", "show \"Q \\<in> group_action.orbit G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) P\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  ?m \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n  conj.orbit ?m =\n  {n. \\<exists>g.\n         g \\<in> carrier G \\<and> conjugation_action (p ^ a) g ?m = n}\n  g \\<in> carrier G\n  Q = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. Q \\<in> conj.orbit P", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  ?m \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n  group_action.orbit G\n   (\\<lambda>g\\<in>carrier G.\n       \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n   (subgroups_of_size (p ^ a)) ?m =\n  {n. \\<exists>g.\n         g \\<in> carrier G \\<and>\n         (\\<lambda>g\\<in>carrier G.\n             \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n          g ?m =\n         n}\n  g \\<in> carrier G\n  Q = g <# (P #> inv g)\n\ngoal (1 subgoal):\n 1. Q \\<in> group_action.orbit G\n             (\\<lambda>g\\<in>carrier G.\n                 \\<lambda>P\\<in>subgroups_of_size (p ^ a).\n                    g <# (P #> inv g))\n             (subgroups_of_size (p ^ a)) P", "by auto"], ["proof (state)\nthis:\n  Q \\<in> conj.orbit P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "}"], ["proof (state)\nthis:\n  Q \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow> Q \\<in> conj.orbit P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "{"], ["proof (state)\nthis:\n  Q \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow> Q \\<in> conj.orbit P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "assume \"Q \\<in> group_action.orbit G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a)) P\""], ["proof (state)\nthis:\n  Q \\<in> conj.orbit P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "with P conj.orbit_char"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)\n  ?m \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n  conj.orbit ?m =\n  {n. \\<exists>g.\n         g \\<in> carrier G \\<and> conjugation_action (p ^ a) g ?m = n}\n  Q \\<in> conj.orbit P", "obtain g where g:\"g \\<in> carrier G\" \"Q = conjugation_action (p ^ a) g P\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  ?m \\<in> subgroups_of_size (p ^ a) \\<Longrightarrow>\n  conj.orbit ?m =\n  {n. \\<exists>g.\n         g \\<in> carrier G \\<and> conjugation_action (p ^ a) g ?m = n}\n  Q \\<in> conj.orbit P\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G;\n         Q = conjugation_action (p ^ a) g P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  Q = conjugation_action (p ^ a) g P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> conj.orbit P \\<Longrightarrow>\n       x \\<in> subgroups_of_size (p ^ a)", "with finite_G P"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  Q = conjugation_action (p ^ a) g P", "show \"Q \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n  g \\<in> carrier G\n  Q = conjugation_action (p ^ a) g P\n\ngoal (1 subgoal):\n 1. Q \\<in> subgroups_of_size (p ^ a)", "by (metis conjugation_is_size_invariant)"], ["proof (state)\nthis:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  Q \\<in> conj.orbit P \\<Longrightarrow> Q \\<in> subgroups_of_size (p ^ a)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem num_sylow_normalizer:\n  assumes Psize:\"P \\<in> subgroups_of_size (p ^ a)\"\n  shows \"card (rcosets\\<^bsub>G\\<lparr>carrier := group_action.stabilizer G (conjugation_action (p ^ a)) P\\<rparr>\\<^esub> P) * p ^ a = card (group_action.stabilizer G (conjugation_action (p ^ a)) P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := group_action.stabilizer G (conjugation_action (p ^ a)) P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (group_action.stabilizer G (conjugation_action (p ^ a)) P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := group_action.stabilizer G (conjugation_action (p ^ a)) P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (group_action.stabilizer G (conjugation_action (p ^ a)) P)", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "interpret conj: group_action G \"(conjugation_action (p ^ a))\" \"(subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. group_action G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule acts_on_subsets)"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "from Psize"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)", "have PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. subgroup P G &&& card P = p ^ a", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  P \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. subgroup P G &&& card P = p ^ a", "by auto"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "with finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup P G\n  card P = p ^ a", "have \"order G = card (conj.orbit P) * card (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. order G = card (conj.orbit P) * card (conj.stabilizer P)", "by (metis Psize acts_on_subsets group_action.orbit_size)"], ["proof (state)\nthis:\n  order G = card (conj.orbit P) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "with order_G Psize"], ["proof (chain)\npicking this:\n  order G = p ^ a * m\n  P \\<in> subgroups_of_size (p ^ a)\n  order G = card (conj.orbit P) * card (conj.stabilizer P)", "have \"p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  order G = p ^ a * m\n  P \\<in> subgroups_of_size (p ^ a)\n  order G = card (conj.orbit P) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)", "by (metis num_eq_card_orbit)"], ["proof (state)\nthis:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "moreover"], ["proof (state)\nthis:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "from Psize"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)", "interpret stabGroup: group \"G\\<lparr>carrier := conj.stabilizer P\\<rparr>\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)", "by (metis conj.stabilizer_is_subgroup subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "from finite_G Psize"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)", "have PStab:\"subgroup P (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. subgroup P (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)", "by (rule stabilizer_supergrp_P)"], ["proof (state)\nthis:\n  subgroup P (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "from finite_G Psize"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)", "have \"finite (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. finite (conj.stabilizer P)", "by (metis card.infinite conj.stabilizer_is_subgroup less_nat_zero_code subgroup.finite_imp_card_positive)"], ["proof (state)\nthis:\n  finite (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "with finite_G PStab stabGroup.lagrange"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup P (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n  subgroup ?H\n   (G\\<lparr>carrier := conj.stabilizer P\\<rparr>) \\<Longrightarrow>\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> ?H) *\n  card ?H =\n  order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n  finite (conj.stabilizer P)", "have \"card (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) * card P = order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup P (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n  subgroup ?H\n   (G\\<lparr>carrier := conj.stabilizer P\\<rparr>) \\<Longrightarrow>\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> ?H) *\n  card ?H =\n  order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n  finite (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    card P =\n    order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)", "by force"], ["proof (state)\nthis:\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n  card P =\n  order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "with cardP"], ["proof (chain)\npicking this:\n  card P = p ^ a\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n  card P =\n  order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)", "show ?thesis"], ["proof (prove)\nusing this:\n  card P = p ^ a\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n  card P =\n  order (G\\<lparr>carrier := conj.stabilizer P\\<rparr>)\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "unfolding order_def"], ["proof (prove)\nusing this:\n  card P = p ^ a\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n  card P =\n  card (carrier (G\\<lparr>carrier := conj.stabilizer P\\<rparr>))\n\ngoal (1 subgoal):\n 1. card\n     (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n    p ^ a =\n    card (conj.stabilizer P)", "by auto"], ["proof (state)\nthis:\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P) *\n  p ^ a =\n  card (conj.stabilizer P)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem (in snd_sylow) num_sylow_dvd_remainder:\n  shows \"card (subgroups_of_size (p ^ a)) dvd m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "interpret conj: group_action G \"(conjugation_action (p ^ a))\" \"(subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. group_action G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule acts_on_subsets)"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "obtain P where PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>subgroup P G; card P = p ^ a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis sylow_thm)"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "hence Psize:\"P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> subgroups_of_size (p ^ a)", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> {H. subgroup H G \\<and> card H = p ^ a}", "by simp"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "with finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)", "have \"order G = card (conj.orbit P) * card (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. order G = card (conj.orbit P) * card (conj.stabilizer P)", "by (metis Psize acts_on_subsets group_action.orbit_size)"], ["proof (state)\nthis:\n  order G = card (conj.orbit P) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "with order_G Psize"], ["proof (chain)\npicking this:\n  order G = p ^ a * m\n  P \\<in> subgroups_of_size (p ^ a)\n  order G = card (conj.orbit P) * card (conj.stabilizer P)", "have orderEq:\"p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  order G = p ^ a * m\n  P \\<in> subgroups_of_size (p ^ a)\n  order G = card (conj.orbit P) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)", "by (metis num_eq_card_orbit)"], ["proof (state)\nthis:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "define k where \"k = card (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P)\""], ["proof (state)\nthis:\n  k =\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "with Psize"], ["proof (chain)\npicking this:\n  P \\<in> subgroups_of_size (p ^ a)\n  k =\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P)", "have \"k * p ^ a = card (conj.stabilizer P)\""], ["proof (prove)\nusing this:\n  P \\<in> subgroups_of_size (p ^ a)\n  k =\n  card\n   (rcosets\\<^bsub>G\\<lparr>carrier := conj.stabilizer P\\<rparr>\\<^esub> P)\n\ngoal (1 subgoal):\n 1. k * p ^ a = card (conj.stabilizer P)", "by (metis num_sylow_normalizer)"], ["proof (state)\nthis:\n  k * p ^ a = card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "with orderEq"], ["proof (chain)\npicking this:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\n  k * p ^ a = card (conj.stabilizer P)", "have \"p ^ a * m = card (subgroups_of_size (p ^ a)) * p ^ a * k\""], ["proof (prove)\nusing this:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * card (conj.stabilizer P)\n  k * p ^ a = card (conj.stabilizer P)\n\ngoal (1 subgoal):\n 1. p ^ a * m = card (subgroups_of_size (p ^ a)) * p ^ a * k", "by (auto simp:mult.assoc mult.commute)"], ["proof (state)\nthis:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * p ^ a * k\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "hence \"p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k\""], ["proof (prove)\nusing this:\n  p ^ a * m = card (subgroups_of_size (p ^ a)) * p ^ a * k\n\ngoal (1 subgoal):\n 1. p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k", "by auto"], ["proof (state)\nthis:\n  p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "then"], ["proof (chain)\npicking this:\n  p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k", "have \"m = card (subgroups_of_size (p ^ a)) * k\""], ["proof (prove)\nusing this:\n  p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k\n\ngoal (1 subgoal):\n 1. m = card (subgroups_of_size (p ^ a)) * k", "using pa_not_zero"], ["proof (prove)\nusing this:\n  p ^ a * m = p ^ a * card (subgroups_of_size (p ^ a)) * k\n  p ^ a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m = card (subgroups_of_size (p ^ a)) * k", "by auto"], ["proof (state)\nthis:\n  m = card (subgroups_of_size (p ^ a)) * k\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", "then"], ["proof (chain)\npicking this:\n  m = card (subgroups_of_size (p ^ a)) * k", "show ?thesis"], ["proof (prove)\nusing this:\n  m = card (subgroups_of_size (p ^ a)) * k\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) dvd m", ".."], ["proof (state)\nthis:\n  card (subgroups_of_size (p ^ a)) dvd m\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can restrict this locale to refer to a subgroup of order at\nleast @{term \"(p ^ a)\"}:\\<close>"], ["", "lemma (in snd_sylow) restrict_locale:\n  assumes subgrp:\"subgroup P G\"\n  assumes card:\"p ^ a dvd card P\"\n  shows \"snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a ((card P) div (p ^ a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "from subgrp"], ["proof (chain)\npicking this:\n  subgroup P G", "interpret groupP: group \"G\\<lparr>carrier := P\\<rparr>\""], ["proof (prove)\nusing this:\n  subgroup P G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := P\\<rparr>)", "by (metis subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "define k where \"k = (card P) div (p ^ a)\""], ["proof (state)\nthis:\n  k = card P div p ^ a\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "with card"], ["proof (chain)\npicking this:\n  p ^ a dvd card P\n  k = card P div p ^ a", "have cardP:\"card P = p ^ a * k\""], ["proof (prove)\nusing this:\n  p ^ a dvd card P\n  k = card P div p ^ a\n\ngoal (1 subgoal):\n 1. card P = p ^ a * k", "by auto"], ["proof (state)\nthis:\n  card P = p ^ a * k\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "hence orderP:\"order (G\\<lparr>carrier := P\\<rparr>) = p ^ a * k\""], ["proof (prove)\nusing this:\n  card P = p ^ a * k\n\ngoal (1 subgoal):\n 1. order (G\\<lparr>carrier := P\\<rparr>) = p ^ a * k", "unfolding order_def"], ["proof (prove)\nusing this:\n  card P = p ^ a * k\n\ngoal (1 subgoal):\n 1. card (carrier (G\\<lparr>carrier := P\\<rparr>)) = p ^ a * k", "by simp"], ["proof (state)\nthis:\n  order (G\\<lparr>carrier := P\\<rparr>) = p ^ a * k\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "from cardP subgrp order_G"], ["proof (chain)\npicking this:\n  card P = p ^ a * k\n  subgroup P G\n  order G = p ^ a * m", "have \"p ^ a * k dvd p ^ a * m\""], ["proof (prove)\nusing this:\n  card P = p ^ a * k\n  subgroup P G\n  order G = p ^ a * m\n\ngoal (1 subgoal):\n 1. p ^ a * k dvd p ^ a * m", "by (metis card_subgrp_dvd)"], ["proof (state)\nthis:\n  p ^ a * k dvd p ^ a * m\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "hence \"k dvd m\""], ["proof (prove)\nusing this:\n  p ^ a * k dvd p ^ a * m\n\ngoal (1 subgoal):\n 1. k dvd m", "by (metis nat_mult_dvd_cancel_disj pa_not_zero)"], ["proof (state)\nthis:\n  k dvd m\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "with pNotDvdm"], ["proof (chain)\npicking this:\n  \\<not> p dvd m\n  k dvd m", "have ndvd:\"\\<not> p dvd k\""], ["proof (prove)\nusing this:\n  \\<not> p dvd m\n  k dvd m\n\ngoal (1 subgoal):\n 1. \\<not> p dvd k", "by (blast intro: dvd_trans)"], ["proof (state)\nthis:\n  \\<not> p dvd k\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "define PcalM where \"PcalM = {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and> card s = p ^ a}\""], ["proof (state)\nthis:\n  PcalM =\n  {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and>\n      card s = p ^ a}\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "define PRelM where \"PRelM = {(N1, N2). N1 \\<in> PcalM \\<and> N2 \\<in> PcalM \\<and> (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>). N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}\""], ["proof (state)\nthis:\n  PRelM =\n  {(N1, N2).\n   N1 \\<in> PcalM \\<and>\n   N2 \\<in> PcalM \\<and>\n   (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>).\n       N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "from subgrp finite_G"], ["proof (chain)\npicking this:\n  subgroup P G\n  finite (carrier G)", "have finite_groupP:\"finite (carrier (G\\<lparr>carrier := P\\<rparr>))\""], ["proof (prove)\nusing this:\n  subgroup P G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (carrier (G\\<lparr>carrier := P\\<rparr>))", "by (auto simp:subgroup_finite)"], ["proof (state)\nthis:\n  finite (carrier (G\\<lparr>carrier := P\\<rparr>))\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "interpret Nsylow: snd_sylow \"G\\<lparr>carrier := P\\<rparr>\" p a k PcalM PRelM"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a k &&&\n    (PcalM \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    PRelM \\<equiv>\n    {(N1, N2).\n     N1 \\<in> PcalM \\<and>\n     N2 \\<in> PcalM \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}", "unfolding snd_sylow_def snd_sylow_axioms_def sylow_def sylow_axioms_def k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Group.group (G\\<lparr>carrier := P\\<rparr>) \\<and>\n     prime p \\<and>\n     order (G\\<lparr>carrier := P\\<rparr>) =\n     p ^ a * (card P div p ^ a) \\<and>\n     finite (carrier (G\\<lparr>carrier := P\\<rparr>))) \\<and>\n    \\<not> p dvd card P div p ^ a &&&\n    (PcalM \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    PRelM \\<equiv>\n    {(N1, N2).\n     N1 \\<in> PcalM \\<and>\n     N2 \\<in> PcalM \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}", "using groupP.is_group prime_p orderP finite_groupP ndvd PcalM_def PRelM_def k_def"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := P\\<rparr>)\n  prime p\n  order (G\\<lparr>carrier := P\\<rparr>) = p ^ a * k\n  finite (carrier (G\\<lparr>carrier := P\\<rparr>))\n  \\<not> p dvd k\n  PcalM =\n  {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and>\n      card s = p ^ a}\n  PRelM =\n  {(N1, N2).\n   N1 \\<in> PcalM \\<and>\n   N2 \\<in> PcalM \\<and>\n   (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>).\n       N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}\n  k = card P div p ^ a\n\ngoal (1 subgoal):\n 1. (Group.group (G\\<lparr>carrier := P\\<rparr>) \\<and>\n     prime p \\<and>\n     order (G\\<lparr>carrier := P\\<rparr>) =\n     p ^ a * (card P div p ^ a) \\<and>\n     finite (carrier (G\\<lparr>carrier := P\\<rparr>))) \\<and>\n    \\<not> p dvd card P div p ^ a &&&\n    (PcalM \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := P\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    PRelM \\<equiv>\n    {(N1, N2).\n     N1 \\<in> PcalM \\<and>\n     N2 \\<in> PcalM \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := P\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := P\\<rparr>\\<^esub> g)}", "by fastforce+"], ["proof (state)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "using k_def"], ["proof (prove)\nusing this:\n  k = card P div p ^ a\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)", "by (metis Nsylow.is_snd_sylow)"], ["proof (state)\nthis:\n  snd_sylow (G\\<lparr>carrier := P\\<rparr>) p a (card P div p ^ a)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem (in snd_sylow) p_sylow_mod_p:\n  shows \"card (subgroups_of_size (p ^ a)) mod p = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "obtain P where PG:\"subgroup P G\" and cardP:\"card P = p ^ a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>subgroup P G; card P = p ^ a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis sylow_thm)"], ["proof (state)\nthis:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "hence orderP:\"order (G\\<lparr>carrier := P\\<rparr>) = p ^ a\""], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. order (G\\<lparr>carrier := P\\<rparr>) = p ^ a", "unfolding order_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. card (carrier (G\\<lparr>carrier := P\\<rparr>)) = p ^ a", "by auto"], ["proof (state)\nthis:\n  order (G\\<lparr>carrier := P\\<rparr>) = p ^ a\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from PG"], ["proof (chain)\npicking this:\n  subgroup P G", "have PsubG:\"P \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  subgroup P G\n\ngoal (1 subgoal):\n 1. P \\<subseteq> carrier G", "by (metis subgroup.subset)"], ["proof (state)\nthis:\n  P \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from PG cardP"], ["proof (chain)\npicking this:\n  subgroup P G\n  card P = p ^ a", "have PSize:\"P \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> subgroups_of_size (p ^ a)", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  subgroup P G\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> {H. subgroup H G \\<and> card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from PG"], ["proof (chain)\npicking this:\n  subgroup P G", "interpret groupP:group \"(G\\<lparr>carrier := P\\<rparr>)\""], ["proof (prove)\nusing this:\n  subgroup P G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := P\\<rparr>)", "by (rule subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from cardP"], ["proof (chain)\npicking this:\n  card P = p ^ a", "have PSize2:\"P \\<in> groupP.subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  card P = p ^ a\n\ngoal (1 subgoal):\n 1. P \\<in> groupP.subgroups_of_size (p ^ a)", "using groupP.subgroups_of_size_def groupP.subgroup_self"], ["proof (prove)\nusing this:\n  card P = p ^ a\n  groupP.subgroups_of_size ?p =\n  {H. subgroup H (G\\<lparr>carrier := P\\<rparr>) \\<and> card H = ?p}\n  subgroup (carrier (G\\<lparr>carrier := P\\<rparr>))\n   (G\\<lparr>carrier := P\\<rparr>)\n\ngoal (1 subgoal):\n 1. P \\<in> groupP.subgroups_of_size (p ^ a)", "by auto"], ["proof (state)\nthis:\n  P \\<in> groupP.subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "interpret conjG: group_action G \"conjugation_action (p ^ a)\" \"subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. group_action G (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule acts_on_subsets)"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from PG"], ["proof (chain)\npicking this:\n  subgroup P G", "interpret conjP: group_action \"G\\<lparr>carrier := P\\<rparr>\" \"conjugation_action (p ^ a)\" \"subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  subgroup P G\n\ngoal (1 subgoal):\n 1. group_action (G\\<lparr>carrier := P\\<rparr>)\n     (conjugation_action (p ^ a)) (subgroups_of_size (p ^ a))", "by (rule conjG.subgroup_action)"], ["proof (state)\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "from finite_G"], ["proof (chain)\npicking this:\n  finite (carrier G)", "have \"finite (subgroups_of_size (p ^ a))\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (subgroups_of_size (p ^ a))", "unfolding subgroups_of_size_def subgroup_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite\n     {H. ((H \\<subseteq> carrier G \\<and>\n           (\\<forall>x y.\n               x \\<in> H \\<longrightarrow>\n               y \\<in> H \\<longrightarrow> x \\<otimes> y \\<in> H)) \\<and>\n          \\<one> \\<in> H \\<and>\n          (\\<forall>x. x \\<in> H \\<longrightarrow> inv x \\<in> H)) \\<and>\n         card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  finite (subgroups_of_size (p ^ a))\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "with orderP prime_p"], ["proof (chain)\npicking this:\n  order (G\\<lparr>carrier := P\\<rparr>) = p ^ a\n  prime p\n  finite (subgroups_of_size (p ^ a))", "have \"card (subgroups_of_size (p ^ a)) mod p = card conjP.fixed_points mod p\""], ["proof (prove)\nusing this:\n  order (G\\<lparr>carrier := P\\<rparr>) = p ^ a\n  prime p\n  finite (subgroups_of_size (p ^ a))\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = card conjP.fixed_points mod p", "by (rule conjP.fixed_point_congruence)"], ["proof (state)\nthis:\n  card (subgroups_of_size (p ^ a)) mod p = card conjP.fixed_points mod p\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "also"], ["proof (state)\nthis:\n  card (subgroups_of_size (p ^ a)) mod p = card conjP.fixed_points mod p\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "have \"\\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "fix Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "assume Qfixed:\"Q \\<in> conjP.fixed_points\""], ["proof (state)\nthis:\n  Q \\<in> conjP.fixed_points\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "hence Qsize:\"Q \\<in> subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  Q \\<in> conjP.fixed_points\n\ngoal (1 subgoal):\n 1. Q \\<in> subgroups_of_size (p ^ a)", "unfolding conjP.fixed_points_def"], ["proof (prove)\nusing this:\n  Q \\<in> {m \\<in> subgroups_of_size (p ^ a).\n           carrier (G\\<lparr>carrier := P\\<rparr>)\n           \\<subseteq> conjP.stabilizer m}\n\ngoal (1 subgoal):\n 1. Q \\<in> subgroups_of_size (p ^ a)", "by simp"], ["proof (state)\nthis:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "hence cardQ:\"card Q = p ^ a\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. card Q = p ^ a", "unfolding subgroups_of_size_def"], ["proof (prove)\nusing this:\n  Q \\<in> {H. subgroup H G \\<and> card H = p ^ a}\n\ngoal (1 subgoal):\n 1. card Q = p ^ a", "by simp\n      \\<comment> \\<open>The normalizer of @{term Q} in @{term G}\\<close>\n      \\<comment> \\<open>Let's first show some basic propertiers of @{text N}\\<close>"], ["proof (state)\nthis:\n  card Q = p ^ a\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "define N where \"N = conjG.stabilizer Q\""], ["proof (state)\nthis:\n  N = conjG.stabilizer Q\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "define k where \"k = (card N) div (p ^ a)\""], ["proof (state)\nthis:\n  k = card N div p ^ a\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from N_def Qsize"], ["proof (chain)\npicking this:\n  N = conjG.stabilizer Q\n  Q \\<in> subgroups_of_size (p ^ a)", "have NG:\"subgroup N G\""], ["proof (prove)\nusing this:\n  N = conjG.stabilizer Q\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. subgroup N G", "by (metis conjG.stabilizer_is_subgroup)"], ["proof (state)\nthis:\n  subgroup N G\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "then"], ["proof (chain)\npicking this:\n  subgroup N G", "interpret groupN: group \"G\\<lparr>carrier := N\\<rparr>\""], ["proof (prove)\nusing this:\n  subgroup N G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := N\\<rparr>)", "by (metis subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from Qsize N_def"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  N = conjG.stabilizer Q", "have QN:\"subgroup Q (G\\<lparr>carrier := N\\<rparr>)\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  N = conjG.stabilizer Q\n\ngoal (1 subgoal):\n 1. subgroup Q (G\\<lparr>carrier := N\\<rparr>)", "using stabilizer_supergrp_P"], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n  N = conjG.stabilizer Q\n  \\<lbrakk>finite (carrier G); ?P \\<in> subgroups_of_size ?p\\<rbrakk>\n  \\<Longrightarrow> subgroup ?P\n                     (G\\<lparr>carrier :=\n                                 group_action.stabilizer G\n                                  (conjugation_action ?p) ?P\\<rparr>)\n\ngoal (1 subgoal):\n 1. subgroup Q (G\\<lparr>carrier := N\\<rparr>)", "by auto\n      \\<comment> \\<open>The following proposition is used to show that $P = Q$ later\\<close>"], ["proof (state)\nthis:\n  subgroup Q (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from Qsize"], ["proof (chain)\npicking this:\n  Q \\<in> subgroups_of_size (p ^ a)", "have NfixesQ:\"\\<forall>g\\<in>N. conjugation_action (p ^ a) g Q = Q\""], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. \\<forall>g\\<in>N. conjugation_action (p ^ a) g Q = Q", "unfolding N_def conjG.stabilizer_def"], ["proof (prove)\nusing this:\n  Q \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. \\<forall>g\\<in>{g \\<in> carrier G. conjugation_action (p ^ a) g Q = Q}.\n       conjugation_action (p ^ a) g Q = Q", "by auto"], ["proof (state)\nthis:\n  \\<forall>g\\<in>N. conjugation_action (p ^ a) g Q = Q\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from Qfixed"], ["proof (chain)\npicking this:\n  Q \\<in> conjP.fixed_points", "have PfixesQ:\"\\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q\""], ["proof (prove)\nusing this:\n  Q \\<in> conjP.fixed_points\n\ngoal (1 subgoal):\n 1. \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q", "unfolding conjP.fixed_points_def conjP.stabilizer_def"], ["proof (prove)\nusing this:\n  Q \\<in> {m \\<in> subgroups_of_size (p ^ a).\n           carrier (G\\<lparr>carrier := P\\<rparr>)\n           \\<subseteq> {g \\<in> carrier (G\\<lparr>carrier := P\\<rparr>).\n                        conjugation_action (p ^ a) g m = m}}\n\ngoal (1 subgoal):\n 1. \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q", "by auto"], ["proof (state)\nthis:\n  \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with PsubG"], ["proof (chain)\npicking this:\n  P \\<subseteq> carrier G\n  \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q", "have  \"P \\<subseteq> N\""], ["proof (prove)\nusing this:\n  P \\<subseteq> carrier G\n  \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q\n\ngoal (1 subgoal):\n 1. P \\<subseteq> N", "unfolding N_def conjG.stabilizer_def"], ["proof (prove)\nusing this:\n  P \\<subseteq> carrier G\n  \\<forall>g\\<in>P. conjugation_action (p ^ a) g Q = Q\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {g \\<in> carrier G. conjugation_action (p ^ a) g Q = Q}", "by auto"], ["proof (state)\nthis:\n  P \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with PG N_def Qsize"], ["proof (chain)\npicking this:\n  subgroup P G\n  N = conjG.stabilizer Q\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<subseteq> N", "have PN:\"subgroup P (G\\<lparr>carrier := N\\<rparr>)\""], ["proof (prove)\nusing this:\n  subgroup P G\n  N = conjG.stabilizer Q\n  Q \\<in> subgroups_of_size (p ^ a)\n  P \\<subseteq> N\n\ngoal (1 subgoal):\n 1. subgroup P (G\\<lparr>carrier := N\\<rparr>)", "by (metis conjG.stabilizer_is_subgroup is_group subgroup.subgroup_of_subset)"], ["proof (state)\nthis:\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with cardP"], ["proof (chain)\npicking this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)", "have \"p ^ a dvd order (G\\<lparr>carrier := N\\<rparr>)\""], ["proof (prove)\nusing this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. p ^ a dvd order (G\\<lparr>carrier := N\\<rparr>)", "using groupN.card_subgrp_dvd"], ["proof (prove)\nusing this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)\n  subgroup ?H (G\\<lparr>carrier := N\\<rparr>) \\<Longrightarrow>\n  card ?H dvd order (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. p ^ a dvd order (G\\<lparr>carrier := N\\<rparr>)", "by force"], ["proof (state)\nthis:\n  p ^ a dvd order (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "hence \"p ^ a dvd card N\""], ["proof (prove)\nusing this:\n  p ^ a dvd order (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. p ^ a dvd card N", "unfolding order_def"], ["proof (prove)\nusing this:\n  p ^ a dvd card (carrier (G\\<lparr>carrier := N\\<rparr>))\n\ngoal (1 subgoal):\n 1. p ^ a dvd card N", "by simp"], ["proof (state)\nthis:\n  p ^ a dvd card N\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with NG"], ["proof (chain)\npicking this:\n  subgroup N G\n  p ^ a dvd card N", "have smaller_sylow:\"snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k\""], ["proof (prove)\nusing this:\n  subgroup N G\n  p ^ a dvd card N\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k", "unfolding k_def"], ["proof (prove)\nusing this:\n  subgroup N G\n  p ^ a dvd card N\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a (card N div p ^ a)", "by (rule restrict_locale)\n      \\<comment> \\<open>Instantiate the @{term snd_sylow} Locale a second time for the normalizer of @{term Q}\\<close>"], ["proof (state)\nthis:\n  snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "define NcalM where \"NcalM = {s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and> card s = p ^ a}\""], ["proof (state)\nthis:\n  NcalM =\n  {s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n      card s = p ^ a}\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "define NRelM where \"NRelM = {(N1, N2). N1 \\<in> NcalM \\<and> N2 \\<in> NcalM \\<and> (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>). N1 = N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)}\""], ["proof (state)\nthis:\n  NRelM =\n  {(N1, N2).\n   N1 \\<in> NcalM \\<and>\n   N2 \\<in> NcalM \\<and>\n   (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n       N1 = N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)}\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "interpret Nsylow: snd_sylow \"G\\<lparr>carrier := N\\<rparr>\" p a k NcalM NRelM"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k &&&\n    (NcalM \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    NRelM \\<equiv>\n    {(N1, N2).\n     N1 \\<in> NcalM \\<and>\n     N2 \\<in> NcalM \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)}", "unfolding NcalM_def NRelM_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k &&&\n    ({s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n         card s = p ^ a} \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    {(N1, N2).\n     N1 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     N2 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n         N1 =\n         N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)} \\<equiv>\n    {(N1, N2).\n     N1 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     N2 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)}", "using smaller_sylow"], ["proof (prove)\nusing this:\n  snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k\n\ngoal (1 subgoal):\n 1. snd_sylow (G\\<lparr>carrier := N\\<rparr>) p a k &&&\n    ({s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n         card s = p ^ a} \\<equiv>\n     {s. s \\<subseteq> carrier (G\\<lparr>carrier := N\\<rparr>) \\<and>\n         card s = p ^ a}) &&&\n    {(N1, N2).\n     N1 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     N2 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n         N1 =\n         N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)} \\<equiv>\n    {(N1, N2).\n     N1 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     N2 \\<in> {s. s \\<subseteq> carrier\n                                 (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                  card s = p ^ a} \\<and>\n     (\\<exists>g\\<in>carrier (G\\<lparr>carrier := N\\<rparr>).\n         N1 = N2 #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)}", ".\n      \\<comment> \\<open>@{term P} and @{term Q} are conjugate in @{term N}:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from cardP PN"], ["proof (chain)\npicking this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)", "have PsizeN:\"P \\<in> groupN.subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. P \\<in> groupN.subgroups_of_size (p ^ a)", "unfolding groupN.subgroups_of_size_def"], ["proof (prove)\nusing this:\n  card P = p ^ a\n  subgroup P (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. P \\<in> {H. subgroup H (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  P \\<in> groupN.subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from cardQ QN"], ["proof (chain)\npicking this:\n  card Q = p ^ a\n  subgroup Q (G\\<lparr>carrier := N\\<rparr>)", "have QsizeN:\"Q \\<in> groupN.subgroups_of_size (p ^ a)\""], ["proof (prove)\nusing this:\n  card Q = p ^ a\n  subgroup Q (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. Q \\<in> groupN.subgroups_of_size (p ^ a)", "unfolding groupN.subgroups_of_size_def"], ["proof (prove)\nusing this:\n  card Q = p ^ a\n  subgroup Q (G\\<lparr>carrier := N\\<rparr>)\n\ngoal (1 subgoal):\n 1. Q \\<in> {H. subgroup H (G\\<lparr>carrier := N\\<rparr>) \\<and>\n                card H = p ^ a}", "by auto"], ["proof (state)\nthis:\n  Q \\<in> groupN.subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "from QsizeN PsizeN"], ["proof (chain)\npicking this:\n  Q \\<in> groupN.subgroups_of_size (p ^ a)\n  P \\<in> groupN.subgroups_of_size (p ^ a)", "obtain g where g:\"g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\" \"P = g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\""], ["proof (prove)\nusing this:\n  Q \\<in> groupN.subgroups_of_size (p ^ a)\n  P \\<in> groupN.subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>);\n         P =\n         g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n         (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n          inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Nsylow.sylow_conjugate)"], ["proof (state)\nthis:\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with NG"], ["proof (chain)\npicking this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)", "have \"P = g <# (Q #> inv g)\""], ["proof (prove)\nusing this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n\ngoal (1 subgoal):\n 1. P = g <# (Q #> inv g)", "unfolding r_coset_def l_coset_def"], ["proof (prove)\nusing this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  (\\<Union>h\\<in>\\<Union>h\\<in>Q.\n                    {h \\<otimes>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n                     inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g}.\n      {g \\<otimes>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> h})\n\ngoal (1 subgoal):\n 1. P =\n    (\\<Union>h\\<in>\\<Union>h\\<in>Q. {h \\<otimes> inv g}. {g \\<otimes> h})", "by (auto simp:m_inv_consistent)"], ["proof (state)\nthis:\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with NG g Qsize"], ["proof (chain)\npicking this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  Q \\<in> subgroups_of_size (p ^ a)\n  P = g <# (Q #> inv g)", "have \"conjugation_action (p ^ a) g Q = P\""], ["proof (prove)\nusing this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  Q \\<in> subgroups_of_size (p ^ a)\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. conjugation_action (p ^ a) g Q = P", "unfolding conjugation_action_def"], ["proof (prove)\nusing this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  Q \\<in> subgroups_of_size (p ^ a)\n  P = g <# (Q #> inv g)\n\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G.\n        \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n     g Q =\n    P", "using subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup N G\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  Q \\<in> subgroups_of_size (p ^ a)\n  P = g <# (Q #> inv g)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G.\n        \\<lambda>P\\<in>subgroups_of_size (p ^ a). g <# (P #> inv g))\n     g Q =\n    P", "by force"], ["proof (state)\nthis:\n  conjugation_action (p ^ a) g Q = P\n\ngoal (1 subgoal):\n 1. \\<And>Q. Q \\<in> conjP.fixed_points \\<Longrightarrow> Q = P", "with g NfixesQ"], ["proof (chain)\npicking this:\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  \\<forall>g\\<in>N. conjugation_action (p ^ a) g Q = Q\n  conjugation_action (p ^ a) g Q = P", "show \"Q = P\""], ["proof (prove)\nusing this:\n  g \\<in> carrier (G\\<lparr>carrier := N\\<rparr>)\n  P =\n  g <#\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n  (Q #>\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub>\n   inv\\<^bsub>G\\<lparr>carrier := N\\<rparr>\\<^esub> g)\n  \\<forall>g\\<in>N. conjugation_action (p ^ a) g Q = Q\n  conjugation_action (p ^ a) g Q = P\n\ngoal (1 subgoal):\n 1. Q = P", "by auto"], ["proof (state)\nthis:\n  Q = P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?Q \\<in> conjP.fixed_points \\<Longrightarrow> ?Q = P\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "moreover"], ["proof (state)\nthis:\n  ?Q \\<in> conjP.fixed_points \\<Longrightarrow> ?Q = P\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "from finite_G PSize"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)", "have \"P \\<in> conjP.fixed_points\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n\ngoal (1 subgoal):\n 1. P \\<in> conjP.fixed_points", "using P_fixed_point_of_P_conj"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  P \\<in> subgroups_of_size (p ^ a)\n  \\<lbrakk>finite (carrier G); ?P \\<in> subgroups_of_size ?p\\<rbrakk>\n  \\<Longrightarrow> ?P \\<in> group_action.fixed_points\n                              (G\\<lparr>carrier := ?P\\<rparr>)\n                              (conjugation_action ?p) (subgroups_of_size ?p)\n\ngoal (1 subgoal):\n 1. P \\<in> conjP.fixed_points", "by auto"], ["proof (state)\nthis:\n  P \\<in> conjP.fixed_points\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "ultimately"], ["proof (chain)\npicking this:\n  ?Q \\<in> conjP.fixed_points \\<Longrightarrow> ?Q = P\n  P \\<in> conjP.fixed_points", "have \"conjP.fixed_points = {P}\""], ["proof (prove)\nusing this:\n  ?Q \\<in> conjP.fixed_points \\<Longrightarrow> ?Q = P\n  P \\<in> conjP.fixed_points\n\ngoal (1 subgoal):\n 1. conjP.fixed_points = {P}", "by fastforce"], ["proof (state)\nthis:\n  conjP.fixed_points = {P}\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "hence one:\"card conjP.fixed_points = 1\""], ["proof (prove)\nusing this:\n  conjP.fixed_points = {P}\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points = 1", "by (auto simp: card_Suc_eq)"], ["proof (state)\nthis:\n  card conjP.fixed_points = 1\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "with prime_p"], ["proof (chain)\npicking this:\n  prime p\n  card conjP.fixed_points = 1", "have \"card conjP.fixed_points < p\""], ["proof (prove)\nusing this:\n  prime p\n  card conjP.fixed_points = 1\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points < p", "unfolding prime_nat_iff"], ["proof (prove)\nusing this:\n  1 < p \\<and> (\\<forall>m. m dvd p \\<longrightarrow> m = 1 \\<or> m = p)\n  card conjP.fixed_points = 1\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points < p", "by auto"], ["proof (state)\nthis:\n  card conjP.fixed_points < p\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "with one"], ["proof (chain)\npicking this:\n  card conjP.fixed_points = 1\n  card conjP.fixed_points < p", "show ?thesis"], ["proof (prove)\nusing this:\n  card conjP.fixed_points = 1\n  card conjP.fixed_points < p\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "using mod_pos_pos_trivial"], ["proof (prove)\nusing this:\n  card conjP.fixed_points = 1\n  card conjP.fixed_points < p\n  \\<lbrakk>0 \\<le> ?k; ?k < ?l\\<rbrakk> \\<Longrightarrow> ?k mod ?l = ?k\n\ngoal (1 subgoal):\n 1. card conjP.fixed_points mod p = 1", "by auto"], ["proof (state)\nthis:\n  card conjP.fixed_points mod p = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card conjP.fixed_points mod p = 1\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "finally"], ["proof (chain)\npicking this:\n  card (subgroups_of_size (p ^ a)) mod p = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  card (subgroups_of_size (p ^ a)) mod p = 1\n\ngoal (1 subgoal):\n 1. card (subgroups_of_size (p ^ a)) mod p = 1", "."], ["proof (state)\nthis:\n  card (subgroups_of_size (p ^ a)) mod p = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}