{"file_name": "/home/qj213/afp-2021-10-22/thys/Secondary_Sylow/GroupAction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Secondary_Sylow", "problem_names": ["theorem singleton_intersection:\n  assumes A:\"card A = 1\"\n  assumes B:\"card B = 1\"\n  assumes noteq:\"A \\<noteq> B\"\n  shows \"A \\<inter> B = {}\"", "theorem card_singleton_set:\n  assumes cardOne:\"\\<forall>x \\<in> A.(card x = 1)\"\n  shows \"card (\\<Union>A) = card A\"", "lemma (in subgroup) repr_independence2:\n  assumes group:\"group G\"\n  assumes U:\"U \\<in> rcosets\\<^bsub>G\\<^esub> H\"\n  assumes g:\"g \\<in> U\"\n  shows \"U = H #> g\"", "lemma is_group_action:\"group_action G \\<phi> M\"", "lemma one_is_id:\n  assumes \"m \\<in> M\"\n  shows \"(\\<phi> \\<one>) m = m\"", "lemma action_closed:\n  assumes m:\"m \\<in> M\"\n  assumes g:\"g \\<in> carrier G\"\n  shows \"\\<phi> g m \\<in> M\"", "lemma img_in_bij:\n  assumes \"g \\<in> carrier G\"\n  shows \"(\\<phi> g) \\<in> Bij M\"", "lemma group_inv_rel:\n  assumes g:\"g \\<in> carrier G\"\n  assumes mn:\"m \\<in> M\" \"n \\<in> M\"\n  assumes phi:\"(\\<phi> g) n = m\"\n  shows \"(\\<phi> (inv g)) m = n\"", "lemma images_are_bij:\n  assumes g:\"g \\<in> carrier G\"\n  shows \"bij_betw (\\<phi> g) M M\"", "lemma action_mult:\n  assumes g:\"g \\<in> carrier G\"\n  assumes h:\"h \\<in> carrier G\"\n  assumes m:\"m \\<in> M\"\n  shows \"(\\<phi> g) ((\\<phi> h) m) = (\\<phi> (g \\<otimes> h)) m\"", "lemma orbit_char:\n  assumes m:\"m \\<in> M\"\n  shows \"orbit m = {n. \\<exists>g. g \\<in> carrier G \\<and> (\\<phi> g) m = n}\"", "lemma same_orbit_char:\n  assumes \"m \\<in> M\" \"n \\<in> M\"\n  shows \"(m, n) \\<in> same_orbit_rel = (\\<exists>g \\<in> carrier G. ((\\<phi> g) n = m))\"", "lemma same_orbit_is_equiv:\n  shows \"equiv M same_orbit_rel\"", "lemma stabilizer_is_subgroup:\n  assumes m:\"m \\<in> M\"\n  shows \"subgroup (stabilizer m) G\"", "lemma fixed_point_char:\n  assumes \"m \\<in> M\"\n  shows \"(m \\<in> fixed_points) = (\\<forall>g\\<in>carrier G. \\<phi> g m = m)\"", "lemma orbit_contains_rep:\n  assumes m:\"m \\<in> M\"\n  shows \"m \\<in> orbit m\"", "lemma singleton_orbit_eq_fixed_point:\n  assumes m:\"m \\<in> M\"\n  shows \"(card (orbit m) = 1) = (m \\<in> fixed_points)\"", "theorem orbit_thm:\n  assumes m:\"m \\<in> M\"\n  assumes rep:\"\\<And>U. U \\<in> (carrier (G Mod (stabilizer m))) \\<Longrightarrow> rep U \\<in> U\"\n  shows \"bij_betw (\\<lambda>H. (\\<phi> (inv (rep H)) m)) (carrier (G Mod (stabilizer m))) (orbit m)\"", "lemma orbit_not_empty:\n  assumes fin:\"finite M\"\n  assumes A:\"A \\<in> orbits\"\n  shows \"card A > 0\"", "lemma fin_set_imp_fin_orbits:\n  assumes finM:\"finite M\"\n  shows \"finite orbits\"", "lemma singleton_orbits:\n  shows \"\\<Union>{N\\<in>orbits. card N = 1} = fixed_points\"", "lemma p_dvd_orbit_size:\n  assumes orderG:\"order G = p ^ a\"\n  assumes prime:\"prime p\"\n  assumes finM:\"finite M\"\n  assumes Norbit:\"N \\<in> orbits\"\n  assumes \"card N > 1\"\n  shows \"p dvd card N\"", "lemma fixed_point_congruence:\n  assumes \"order G = p ^ a\"\n  assumes \"prime p\"\n  assumes finM:\"finite M\"\n  shows \"card M mod p = card fixed_points mod p\"", "lemma subgroup_action:\n  assumes H:\"subgroup H G\"\n  shows \"group_action (G\\<lparr>carrier := H\\<rparr>) \\<phi> M\"", "lemma (in group) right_mult_is_bij:\n  assumes h:\"h \\<in> carrier G\"\n  shows \"(\\<lambda>g \\<in> carrier G. h \\<otimes> g) \\<in> Bij (carrier G)\"", "lemma (in group) right_mult_group_action:\n  shows \"group_action G (\\<lambda>h. \\<lambda>g \\<in> carrier G. h \\<otimes> g) (carrier G)\"", "lemma (in group) rcosets_closed:\n  assumes HG:\"subgroup H G\"\n  assumes g:\"g \\<in> carrier G\"\n  assumes M:\"M \\<in> rcosets H\"\n  shows \"M #> g \\<in> rcosets H\"", "lemma (in group) inv_mult_on_rcosets_is_bij:\n  assumes HG:\"subgroup H G\"\n  assumes g:\"g \\<in> carrier G\"\n  shows \"(\\<lambda>U \\<in> rcosets H. U #> inv g) \\<in> Bij (rcosets H)\"", "lemma (in group) inv_mult_on_rcosets_action:\n  assumes HG:\"subgroup H G\"\n  shows \"group_action G (\\<lambda>g. \\<lambda>U \\<in> rcosets H. U #> inv g) (rcosets H)\""], "translations": [["", "theorem singleton_intersection:\n  assumes A:\"card A = 1\"\n  assumes B:\"card B = 1\"\n  assumes noteq:\"A \\<noteq> B\"\n  shows \"A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "using assms"], ["proof (prove)\nusing this:\n  card A = 1\n  card B = 1\n  A \\<noteq> B\n\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "by(auto simp:card_Suc_eq)"], ["", "theorem card_singleton_set:\n  assumes cardOne:\"\\<forall>x \\<in> A.(card x = 1)\"\n  shows \"card (\\<Union>A) = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "have \"card (\\<Union>A) = (\\<Sum>x\\<in>A. card x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> A) = sum card A", "proof(rule card_Union_disjoint)"], ["proof (state)\ngoal (2 subgoals):\n 1. pairwise disjnt A\n 2. \\<And>Aa. Aa \\<in> A \\<Longrightarrow> finite Aa", "from cardOne"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. card x = 1", "show \"\\<And>a. a\\<in>A \\<Longrightarrow> finite a\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. card x = 1\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> A \\<Longrightarrow> finite a", "by (auto intro: card_ge_0_finite)"], ["proof (state)\nthis:\n  ?a \\<in> A \\<Longrightarrow> finite ?a\n\ngoal (1 subgoal):\n 1. pairwise disjnt A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise disjnt A", "show \"pairwise disjnt A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise disjnt A", "unfolding pairwise_def disjnt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A. x \\<noteq> y \\<longrightarrow> x \\<inter> y = {}", "proof(clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y = {}", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y = {}", "assume x:\"x \\<in> A\" and y:\"y \\<in> A\" and \"x \\<noteq> y\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y = {}", "with cardOne"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. card x = 1\n  x \\<in> A\n  y \\<in> A\n  x \\<noteq> y", "have \"card x = 1\" \"card y = 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. card x = 1\n  x \\<in> A\n  y \\<in> A\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. card x = 1 &&& card y = 1", "by auto"], ["proof (state)\nthis:\n  card x = 1\n  card y = 1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y = {}", "with \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  card x = 1\n  card y = 1", "show \"x \\<inter> y = {}\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  card x = 1\n  card y = 1\n\ngoal (1 subgoal):\n 1. x \\<inter> y = {}", "by (metis singleton_intersection)"], ["proof (state)\nthis:\n  x \\<inter> y = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pairwise disjnt A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (\\<Union> A) = sum card A\n\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "also"], ["proof (state)\nthis:\n  card (\\<Union> A) = sum card A\n\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "from cardOne"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. card x = 1", "have \"... = card A\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. card x = 1\n\ngoal (1 subgoal):\n 1. sum card A = card A", "by simp"], ["proof (state)\nthis:\n  sum card A = card A\n\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "finally"], ["proof (chain)\npicking this:\n  card (\\<Union> A) = card A", "show ?thesis"], ["proof (prove)\nusing this:\n  card (\\<Union> A) = card A\n\ngoal (1 subgoal):\n 1. card (\\<Union> A) = card A", "."], ["proof (state)\nthis:\n  card (\\<Union> A) = card A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Intersecting Cosets are equal:\\<close>"], ["", "lemma (in subgroup) repr_independence2:\n  assumes group:\"group G\"\n  assumes U:\"U \\<in> rcosets\\<^bsub>G\\<^esub> H\"\n  assumes g:\"g \\<in> U\"\n  shows \"U = H #> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = H #> g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U = H #> g", "from U"], ["proof (chain)\npicking this:\n  U \\<in> rcosets H", "obtain h where h:\"h \\<in> carrier G\" \"U = H #> h\""], ["proof (prove)\nusing this:\n  U \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; U = H #> h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  U \\<in> (\\<Union>a\\<in>carrier G. {H #> a})\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; U = H #> h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier G\n  U = H #> h\n\ngoal (1 subgoal):\n 1. U = H #> g", "with g"], ["proof (chain)\npicking this:\n  g \\<in> U\n  h \\<in> carrier G\n  U = H #> h", "have \"g \\<in> H #> h\""], ["proof (prove)\nusing this:\n  g \\<in> U\n  h \\<in> carrier G\n  U = H #> h\n\ngoal (1 subgoal):\n 1. g \\<in> H #> h", "by simp"], ["proof (state)\nthis:\n  g \\<in> H #> h\n\ngoal (1 subgoal):\n 1. U = H #> g", "with group h"], ["proof (chain)\npicking this:\n  Group.group G\n  h \\<in> carrier G\n  U = H #> h\n  g \\<in> H #> h", "show \"U = H #> g\""], ["proof (prove)\nusing this:\n  Group.group G\n  h \\<in> carrier G\n  U = H #> h\n  g \\<in> H #> h\n\ngoal (1 subgoal):\n 1. U = H #> g", "by (metis group.repr_independence is_subgroup)"], ["proof (state)\nthis:\n  U = H #> g\n\ngoal:\nNo subgoals!", "qed"], ["", "locale group_action = group +\n  fixes \\<phi> M\n  assumes grouphom:\"group_hom G (BijGroup M) \\<phi>\""], ["", "context group_action\nbegin"], ["", "lemma is_group_action:\"group_action G \\<phi> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_action G \\<phi> M", ".."], ["", "text \\<open>The action of @{term \"\\<one>\\<^bsub>G\\<^esub>\"} has no effect:\\<close>"], ["", "lemma one_is_id:\n  assumes \"m \\<in> M\"\n  shows \"(\\<phi> \\<one>) m = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "from grouphom"], ["proof (chain)\npicking this:\n  group_hom G (BijGroup M) \\<phi>", "have \"(\\<phi> \\<one>) m = \\<one>\\<^bsub>(BijGroup M)\\<^esub> m\""], ["proof (prove)\nusing this:\n  group_hom G (BijGroup M) \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = \\<one>\\<^bsub>BijGroup M\\<^esub> m", "by (metis group_hom.hom_one)"], ["proof (state)\nthis:\n  \\<phi> \\<one> m = \\<one>\\<^bsub>BijGroup M\\<^esub> m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "also"], ["proof (state)\nthis:\n  \\<phi> \\<one> m = \\<one>\\<^bsub>BijGroup M\\<^esub> m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "have \"... = (\\<lambda>x\\<in>M. x) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>BijGroup M\\<^esub> m = (\\<lambda>x\\<in>M. x) m", "unfolding BijGroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>\\<lparr>carrier = Bij M, monoid.mult = \\<lambda>g\\<in>Bij M. restrict (compose M g) (Bij M), one = \\<lambda>x\\<in>M. x\\<rparr>\\<^esub>\n     m =\n    (\\<lambda>x\\<in>M. x) m", "by (metis monoid.select_convs(2))"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>BijGroup M\\<^esub> m = (\\<lambda>x\\<in>M. x) m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "also"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>BijGroup M\\<^esub> m = (\\<lambda>x\\<in>M. x) m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "from assms"], ["proof (chain)\npicking this:\n  m \\<in> M", "have \"... = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>M. x) m = m", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x\\<in>M. x) m = m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "finally"], ["proof (chain)\npicking this:\n  \\<phi> \\<one> m = m", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "."], ["proof (state)\nthis:\n  \\<phi> \\<one> m = m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma action_closed:\n  assumes m:\"m \\<in> M\"\n  assumes g:\"g \\<in> carrier G\"\n  shows \"\\<phi> g m \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> g m \\<in> M", "using assms grouphom group_hom.hom_closed"], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n  group_hom G (BijGroup M) \\<phi>\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h ?x \\<in> carrier ?H\n\ngoal (1 subgoal):\n 1. \\<phi> g m \\<in> M", "unfolding BijGroup_def Bij_def bij_betw_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n  group_hom G\n   \\<lparr>carrier =\n             extensional M \\<inter> {f. inj_on f M \\<and> f ` M = M},\n      monoid.mult =\n        \\<lambda>g\\<in>extensional M \\<inter>\n                       {f. inj_on f M \\<and> f ` M = M}.\n           restrict (compose M g)\n            (extensional M \\<inter> {f. inj_on f M \\<and> f ` M = M}),\n      one = \\<lambda>x\\<in>M. x\\<rparr>\n   \\<phi>\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h ?x \\<in> carrier ?H\n\ngoal (1 subgoal):\n 1. \\<phi> g m \\<in> M", "by fastforce"], ["", "lemma img_in_bij:\n  assumes \"g \\<in> carrier G\"\n  shows \"(\\<phi> g) \\<in> Bij M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "using assms grouphom"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  group_hom G (BijGroup M) \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  group_hom G\n   \\<lparr>carrier = Bij M,\n      monoid.mult = \\<lambda>g\\<in>Bij M. restrict (compose M g) (Bij M),\n      one = \\<lambda>x\\<in>M. x\\<rparr>\n   \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "by (auto dest: group_hom.hom_closed)"], ["", "text \\<open>The action of @{term \"inv g\"} reverts the action of @{term g}\\<close>"], ["", "lemma group_inv_rel:\n  assumes g:\"g \\<in> carrier G\"\n  assumes mn:\"m \\<in> M\" \"n \\<in> M\"\n  assumes phi:\"(\\<phi> g) n = m\"\n  shows \"(\\<phi> (inv g)) m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have bij:\"(\\<phi> g) \\<in> Bij M\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "by (metis img_in_bij)"], ["proof (state)\nthis:\n  \\<phi> g \\<in> Bij M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "with g grouphom"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  group_hom G (BijGroup M) \\<phi>\n  \\<phi> g \\<in> Bij M", "have \"\\<phi> (inv g) = restrict (inv_into M (\\<phi> g)) M\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  group_hom G (BijGroup M) \\<phi>\n  \\<phi> g \\<in> Bij M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) = restrict (inv_into M (\\<phi> g)) M", "by(metis inv_BijGroup group_hom.hom_inv)"], ["proof (state)\nthis:\n  \\<phi> (inv g) = restrict (inv_into M (\\<phi> g)) M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "hence \"\\<phi> (inv g) m = (restrict (inv_into M (\\<phi> g)) M) m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) = restrict (inv_into M (\\<phi> g)) M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = restrict (inv_into M (\\<phi> g)) M m", "by simp"], ["proof (state)\nthis:\n  \\<phi> (inv g) m = restrict (inv_into M (\\<phi> g)) M m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "also"], ["proof (state)\nthis:\n  \\<phi> (inv g) m = restrict (inv_into M (\\<phi> g)) M m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "from mn"], ["proof (chain)\npicking this:\n  m \\<in> M\n  n \\<in> M", "have \"... = (inv_into M (\\<phi> g)) m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  n \\<in> M\n\ngoal (1 subgoal):\n 1. restrict (inv_into M (\\<phi> g)) M m = inv_into M (\\<phi> g) m", "by (metis restrict_def)"], ["proof (state)\nthis:\n  restrict (inv_into M (\\<phi> g)) M m = inv_into M (\\<phi> g) m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "also"], ["proof (state)\nthis:\n  restrict (inv_into M (\\<phi> g)) M m = inv_into M (\\<phi> g) m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "from g phi"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g n = m", "have \"... = (inv_into M (\\<phi> g)) ((\\<phi> g) n)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g n = m\n\ngoal (1 subgoal):\n 1. inv_into M (\\<phi> g) m = inv_into M (\\<phi> g) (\\<phi> g n)", "by simp"], ["proof (state)\nthis:\n  inv_into M (\\<phi> g) m = inv_into M (\\<phi> g) (\\<phi> g n)\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "also"], ["proof (state)\nthis:\n  inv_into M (\\<phi> g) m = inv_into M (\\<phi> g) (\\<phi> g n)\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "from \\<open>\\<phi> g \\<in> Bij M\\<close> Bij_def"], ["proof (chain)\npicking this:\n  \\<phi> g \\<in> Bij M\n  Bij ?S = extensional ?S \\<inter> {f. bij_betw f ?S ?S}", "have \"bij_betw (\\<phi> g) M M\""], ["proof (prove)\nusing this:\n  \\<phi> g \\<in> Bij M\n  Bij ?S = extensional ?S \\<inter> {f. bij_betw f ?S ?S}\n\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> g) M M", "by auto"], ["proof (state)\nthis:\n  bij_betw (\\<phi> g) M M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "hence \"inj_on (\\<phi> g) M\""], ["proof (prove)\nusing this:\n  bij_betw (\\<phi> g) M M\n\ngoal (1 subgoal):\n 1. inj_on (\\<phi> g) M", "by (metis bij_betw_imp_inj_on)"], ["proof (state)\nthis:\n  inj_on (\\<phi> g) M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "with g mn"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  m \\<in> M\n  n \\<in> M\n  inj_on (\\<phi> g) M", "have \"(inv_into M (\\<phi> g)) ((\\<phi> g) n) = n\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  m \\<in> M\n  n \\<in> M\n  inj_on (\\<phi> g) M\n\ngoal (1 subgoal):\n 1. inv_into M (\\<phi> g) (\\<phi> g n) = n", "by (metis inv_into_f_f)"], ["proof (state)\nthis:\n  inv_into M (\\<phi> g) (\\<phi> g n) = n\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (inv g) m = n", "show \"\\<phi> (inv g) m = n\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) m = n\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "."], ["proof (state)\nthis:\n  \\<phi> (inv g) m = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma images_are_bij:\n  assumes g:\"g \\<in> carrier G\"\n  shows \"bij_betw (\\<phi> g) M M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> g) M M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> g) M M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have bij:\"(\\<phi> g) \\<in> Bij M\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "by (metis img_in_bij)"], ["proof (state)\nthis:\n  \\<phi> g \\<in> Bij M\n\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> g) M M", "with Bij_def"], ["proof (chain)\npicking this:\n  Bij ?S = extensional ?S \\<inter> {f. bij_betw f ?S ?S}\n  \\<phi> g \\<in> Bij M", "show \"bij_betw (\\<phi> g) M M\""], ["proof (prove)\nusing this:\n  Bij ?S = extensional ?S \\<inter> {f. bij_betw f ?S ?S}\n  \\<phi> g \\<in> Bij M\n\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> g) M M", "by auto"], ["proof (state)\nthis:\n  bij_betw (\\<phi> g) M M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma action_mult:\n  assumes g:\"g \\<in> carrier G\"\n  assumes h:\"h \\<in> carrier G\"\n  assumes m:\"m \\<in> M\"\n  shows \"(\\<phi> g) ((\\<phi> h) m) = (\\<phi> (g \\<otimes> h)) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have \\<phi>g:\"(\\<phi> g) \\<in> Bij M\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g \\<in> Bij M", "by (rule img_in_bij)"], ["proof (state)\nthis:\n  \\<phi> g \\<in> Bij M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from h"], ["proof (chain)\npicking this:\n  h \\<in> carrier G", "have \\<phi>h:\"(\\<phi> h) \\<in> Bij M\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> h \\<in> Bij M", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> h \\<in> Bij M", "by (rule img_in_bij)"], ["proof (state)\nthis:\n  \\<phi> h \\<in> Bij M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from h"], ["proof (chain)\npicking this:\n  h \\<in> carrier G", "have \"bij_betw (\\<phi> h) M M\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. bij_betw (\\<phi> h) M M", "by (rule images_are_bij)"], ["proof (state)\nthis:\n  bij_betw (\\<phi> h) M M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "hence \"(\\<phi> h) ` M = M\""], ["proof (prove)\nusing this:\n  bij_betw (\\<phi> h) M M\n\ngoal (1 subgoal):\n 1. \\<phi> h ` M = M", "by (metis bij_betw_def)"], ["proof (state)\nthis:\n  \\<phi> h ` M = M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  \\<phi> h ` M = M", "have hm:\"(\\<phi> h) m \\<in> M\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  \\<phi> h ` M = M\n\ngoal (1 subgoal):\n 1. \\<phi> h m \\<in> M", "by (metis imageI)"], ["proof (state)\nthis:\n  \\<phi> h m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from grouphom g h"], ["proof (chain)\npicking this:\n  group_hom G (BijGroup M) \\<phi>\n  g \\<in> carrier G\n  h \\<in> carrier G", "have \"(\\<phi> (g \\<otimes> h)) = ((\\<phi> g) \\<otimes>\\<^bsub>(BijGroup M)\\<^esub> (\\<phi> h))\""], ["proof (prove)\nusing this:\n  group_hom G (BijGroup M) \\<phi>\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) =\n    \\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h", "by (rule group_hom.hom_mult)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) =\n  \\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "hence \"\\<phi> (g \\<otimes> h) m = ((\\<phi> g) \\<otimes>\\<^bsub>(BijGroup M)\\<^esub> (\\<phi> h)) m\""], ["proof (prove)\nusing this:\n  \\<phi> (g \\<otimes> h) =\n  \\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) m =\n    (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m", "by simp"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) m =\n  (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "also"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) m =\n  (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from \\<phi>g \\<phi>h"], ["proof (chain)\npicking this:\n  \\<phi> g \\<in> Bij M\n  \\<phi> h \\<in> Bij M", "have \"... = (compose M (\\<phi> g) (\\<phi> h)) m\""], ["proof (prove)\nusing this:\n  \\<phi> g \\<in> Bij M\n  \\<phi> h \\<in> Bij M\n\ngoal (1 subgoal):\n 1. (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m =\n    compose M (\\<phi> g) (\\<phi> h) m", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  \\<phi> g \\<in> Bij M\n  \\<phi> h \\<in> Bij M\n\ngoal (1 subgoal):\n 1. (\\<phi>\n      g \\<otimes>\\<^bsub>\\<lparr>carrier = Bij M, monoid.mult = \\<lambda>g\\<in>Bij M. restrict (compose M g) (Bij M), one = \\<lambda>x\\<in>M. x\\<rparr>\\<^esub>\n     \\<phi> h)\n     m =\n    compose M (\\<phi> g) (\\<phi> h) m", "by simp"], ["proof (state)\nthis:\n  (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m =\n  compose M (\\<phi> g) (\\<phi> h) m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "also"], ["proof (state)\nthis:\n  (\\<phi> g \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> h) m =\n  compose M (\\<phi> g) (\\<phi> h) m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "from \\<phi>g \\<phi>h hm"], ["proof (chain)\npicking this:\n  \\<phi> g \\<in> Bij M\n  \\<phi> h \\<in> Bij M\n  \\<phi> h m \\<in> M", "have \"... = (\\<phi> g) ((\\<phi> h) m)\""], ["proof (prove)\nusing this:\n  \\<phi> g \\<in> Bij M\n  \\<phi> h \\<in> Bij M\n  \\<phi> h m \\<in> M\n\ngoal (1 subgoal):\n 1. compose M (\\<phi> g) (\\<phi> h) m = \\<phi> g (\\<phi> h m)", "by (metis compose_eq m)"], ["proof (state)\nthis:\n  compose M (\\<phi> g) (\\<phi> h) m = \\<phi> g (\\<phi> h m)\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (g \\<otimes> h) m = \\<phi> g (\\<phi> h m)", "show \"(\\<phi> g) ((\\<phi> h) m) = (\\<phi> (g \\<otimes> h)) m\""], ["proof (prove)\nusing this:\n  \\<phi> (g \\<otimes> h) m = \\<phi> g (\\<phi> h m)\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m", ".."], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> h m) = \\<phi> (g \\<otimes> h) m\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The orbit relation\\<close>"], ["", "text \\<open>The following describes the relation containing the information\nwhether two elements of @{term M} lie in the same orbit of the action\\<close>"], ["", "definition same_orbit_rel\n  where \"same_orbit_rel = {p \\<in> M \\<times> M. \\<exists>g \\<in> carrier G. (\\<phi> g) (snd p) = (fst p)}\""], ["", "text \\<open>Use the library about equivalence relations to define the set of\norbits and the map assigning to each element of @{term M} its orbit\\<close>"], ["", "definition orbits\n where \"orbits = M // same_orbit_rel\""], ["", "definition orbit :: \"'c \\<Rightarrow> 'c set\"\n  where \"orbit m = same_orbit_rel `` {m}\""], ["", "text \\<open>Next, we define a more easy-to-use characterization of an orbit.\\<close>"], ["", "lemma orbit_char:\n  assumes m:\"m \\<in> M\"\n  shows \"orbit m = {n. \\<exists>g. g \\<in> carrier G \\<and> (\\<phi> g) m = n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit m = {n. \\<exists>g. g \\<in> carrier G \\<and> \\<phi> g m = n}", "using assms"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. orbit m = {n. \\<exists>g. g \\<in> carrier G \\<and> \\<phi> g m = n}", "unfolding orbit_def Image_def same_orbit_rel_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{m}.\n           (x, y)\n           \\<in> {p \\<in> M \\<times> M.\n                  \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}} =\n    {n. \\<exists>g. g \\<in> carrier G \\<and> \\<phi> g m = n}", "proof(auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "fix x g"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "assume g:\"g \\<in> carrier G\" and \"\\<phi> g x \\<in> M\" \"x \\<in> M\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g x \\<in> M\n  x \\<in> M\n\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "hence \"\\<phi> (inv g) (\\<phi> g x) = x\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g x \\<in> M\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) (\\<phi> g x) = x", "by (metis group_inv_rel)"], ["proof (state)\nthis:\n  \\<phi> (inv g) (\\<phi> g x) = x\n\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "moreover"], ["proof (state)\nthis:\n  \\<phi> (inv g) (\\<phi> g x) = x\n\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have \"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (rule inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x g.\n       \\<lbrakk>\\<phi> g x \\<in> M; x \\<in> M; g \\<in> carrier G;\n        m = \\<phi> g x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga.\n                            ga \\<in> carrier G \\<and>\n                            \\<phi> ga (\\<phi> g x) = x\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 3. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "ultimately"], ["proof (chain)\npicking this:\n  \\<phi> (inv g) (\\<phi> g x) = x\n  inv g \\<in> carrier G", "show \"\\<exists>h. h \\<in> carrier G \\<and> \\<phi> h (\\<phi> g x) = x\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) (\\<phi> g x) = x\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>h. h \\<in> carrier G \\<and> \\<phi> h (\\<phi> g x) = x", "by auto"], ["proof (state)\nthis:\n  \\<exists>h. h \\<in> carrier G \\<and> \\<phi> h (\\<phi> g x) = x\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "assume g:\"g \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<phi> g m \\<in> M\n 2. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G", "show \"\\<phi> g m \\<in> M\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g m \\<in> M", "by (metis action_closed)"], ["proof (state)\nthis:\n  \\<phi> g m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "with m g"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G\n  \\<phi> g m \\<in> M", "have \"\\<phi> (inv g) (\\<phi> g m) = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n  \\<phi> g m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) (\\<phi> g m) = m", "by (metis group_inv_rel)"], ["proof (state)\nthis:\n  \\<phi> (inv g) (\\<phi> g m) = m\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "moreover"], ["proof (state)\nthis:\n  \\<phi> (inv g) (\\<phi> g m) = m\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have \"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (rule inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>m \\<in> M; g \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ga\\<in>carrier G.\n                            \\<phi> ga (\\<phi> g m) = m", "ultimately"], ["proof (chain)\npicking this:\n  \\<phi> (inv g) (\\<phi> g m) = m\n  inv g \\<in> carrier G", "show \"\\<exists>h\\<in>carrier G. \\<phi> h (\\<phi> g m) = m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) (\\<phi> g m) = m\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>h\\<in>carrier G. \\<phi> h (\\<phi> g m) = m", "by auto"], ["proof (state)\nthis:\n  \\<exists>h\\<in>carrier G. \\<phi> h (\\<phi> g m) = m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_orbit_char:\n  assumes \"m \\<in> M\" \"n \\<in> M\"\n  shows \"(m, n) \\<in> same_orbit_rel = (\\<exists>g \\<in> carrier G. ((\\<phi> g) n = m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((m, n) \\<in> same_orbit_rel) =\n    (\\<exists>g\\<in>carrier G. \\<phi> g n = m)", "unfolding same_orbit_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((m, n)\n     \\<in> {p \\<in> M \\<times> M.\n            \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}) =\n    (\\<exists>g\\<in>carrier G. \\<phi> g n = m)", "using assms"], ["proof (prove)\nusing this:\n  m \\<in> M\n  n \\<in> M\n\ngoal (1 subgoal):\n 1. ((m, n)\n     \\<in> {p \\<in> M \\<times> M.\n            \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}) =\n    (\\<exists>g\\<in>carrier G. \\<phi> g n = m)", "by auto"], ["", "text \\<open>Now we show that the relation we've defined is, indeed, an\nequivalence relation:\\<close>"], ["", "lemma same_orbit_is_equiv:\n  shows \"equiv M same_orbit_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv M same_orbit_rel", "proof(rule equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. refl_on M same_orbit_rel\n 2. sym same_orbit_rel\n 3. trans same_orbit_rel", "show \"refl_on M same_orbit_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl_on M same_orbit_rel", "proof(rule refl_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. same_orbit_rel \\<subseteq> M \\<times> M\n 2. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "show \"same_orbit_rel \\<subseteq> M \\<times> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. same_orbit_rel \\<subseteq> M \\<times> M", "unfolding same_orbit_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<in> M \\<times> M.\n     \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n    \\<subseteq> M \\<times> M", "by auto"], ["proof (state)\nthis:\n  same_orbit_rel \\<subseteq> M \\<times> M\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "assume \"m \\<in> M\""], ["proof (state)\nthis:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "hence \"(\\<phi> \\<one>) m = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "by(rule one_is_id)"], ["proof (state)\nthis:\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> (x, x) \\<in> same_orbit_rel", "with \\<open>m \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  m \\<in> M\n  \\<phi> \\<one> m = m", "show  \"(m, m) \\<in> same_orbit_rel\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. (m, m) \\<in> same_orbit_rel", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. (m, m)\n    \\<in> {p \\<in> M \\<times> M.\n           \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}", "by (auto simp:same_orbit_char)"], ["proof (state)\nthis:\n  (m, m) \\<in> same_orbit_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl_on M same_orbit_rel\n\ngoal (2 subgoals):\n 1. sym same_orbit_rel\n 2. trans same_orbit_rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. sym same_orbit_rel\n 2. trans same_orbit_rel", "show \"sym same_orbit_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym same_orbit_rel", "proof(rule symI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "fix m n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "assume mn:\"(m, n) \\<in> same_orbit_rel\""], ["proof (state)\nthis:\n  (m, n) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "then"], ["proof (chain)\npicking this:\n  (m, n) \\<in> same_orbit_rel", "obtain g where g:\"g \\<in> carrier G\" \"\\<phi> g n = m\""], ["proof (prove)\nusing this:\n  (m, n) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g n = m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  (m, n)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g n = m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g n = m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "hence invg:\"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g n = m\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "from mn"], ["proof (chain)\npicking this:\n  (m, n) \\<in> same_orbit_rel", "have \"(m, n) \\<in> M \\<times> M\""], ["proof (prove)\nusing this:\n  (m, n) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. (m, n) \\<in> M \\<times> M", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  (m, n)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. (m, n) \\<in> M \\<times> M", "by simp"], ["proof (state)\nthis:\n  (m, n) \\<in> M \\<times> M\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "hence mn2:\"m \\<in> M\" \"n \\<in> M\""], ["proof (prove)\nusing this:\n  (m, n) \\<in> M \\<times> M\n\ngoal (1 subgoal):\n 1. m \\<in> M &&& n \\<in> M", "by auto"], ["proof (state)\nthis:\n  m \\<in> M\n  n \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "from g mn2"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g n = m\n  m \\<in> M\n  n \\<in> M", "have \"\\<phi> (inv g) m = n\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g n = m\n  m \\<in> M\n  n \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = n", "by (metis group_inv_rel)"], ["proof (state)\nthis:\n  \\<phi> (inv g) m = n\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> same_orbit_rel \\<Longrightarrow>\n       (b, a) \\<in> same_orbit_rel", "with invg mn2"], ["proof (chain)\npicking this:\n  inv g \\<in> carrier G\n  m \\<in> M\n  n \\<in> M\n  \\<phi> (inv g) m = n", "show \"(n, m) \\<in> same_orbit_rel\""], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n  m \\<in> M\n  n \\<in> M\n  \\<phi> (inv g) m = n\n\ngoal (1 subgoal):\n 1. (n, m) \\<in> same_orbit_rel", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n  m \\<in> M\n  n \\<in> M\n  \\<phi> (inv g) m = n\n\ngoal (1 subgoal):\n 1. (n, m)\n    \\<in> {p \\<in> M \\<times> M.\n           \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}", "by auto"], ["proof (state)\nthis:\n  (n, m) \\<in> same_orbit_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sym same_orbit_rel\n\ngoal (1 subgoal):\n 1. trans same_orbit_rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. trans same_orbit_rel", "show \"trans same_orbit_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans same_orbit_rel", "proof(rule transI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "assume xy:\"(x, y) \\<in> same_orbit_rel\""], ["proof (state)\nthis:\n  (x, y) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> same_orbit_rel", "obtain g where g:\"g \\<in> carrier G\" and grel:\"(\\<phi> g) y = x\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g y = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  (x, y)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g y = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g y = x\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "assume yz:\"(y, z) \\<in> same_orbit_rel\""], ["proof (state)\nthis:\n  (y, z) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "then"], ["proof (chain)\npicking this:\n  (y, z) \\<in> same_orbit_rel", "obtain h where h:\"h \\<in> carrier G\" and hrel:\"(\\<phi> h) z = y\""], ["proof (prove)\nusing this:\n  (y, z) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; \\<phi> h z = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  (y, z)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; \\<phi> h z = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier G\n  \\<phi> h z = y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "from g h"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  h \\<in> carrier G", "have gh:\"g \\<otimes> h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  g \\<otimes> h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "from xy yz"], ["proof (chain)\npicking this:\n  (x, y) \\<in> same_orbit_rel\n  (y, z) \\<in> same_orbit_rel", "have \"x \\<in> M\" \"z \\<in> M\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> same_orbit_rel\n  (y, z) \\<in> same_orbit_rel\n\ngoal (1 subgoal):\n 1. x \\<in> M &&& z \\<in> M", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  (x, y)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n  (y, z)\n  \\<in> {p \\<in> M \\<times> M.\n         \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. x \\<in> M &&& z \\<in> M", "by auto"], ["proof (state)\nthis:\n  x \\<in> M\n  z \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "with g h"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  x \\<in> M\n  z \\<in> M", "have \"\\<phi> (g \\<otimes> h) z = (\\<phi> g) ((\\<phi> h) z)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  x \\<in> M\n  z \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) z = \\<phi> g (\\<phi> h z)", "by (metis action_mult)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) z = \\<phi> g (\\<phi> h z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "also"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) z = \\<phi> g (\\<phi> h z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "from hrel grel"], ["proof (chain)\npicking this:\n  \\<phi> h z = y\n  \\<phi> g y = x", "have \"... = x\""], ["proof (prove)\nusing this:\n  \\<phi> h z = y\n  \\<phi> g y = x\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h z) = x", "by simp"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> h z) = x\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (g \\<otimes> h) z = x", "have \"\\<phi> (g \\<otimes> h) z = x\""], ["proof (prove)\nusing this:\n  \\<phi> (g \\<otimes> h) z = x\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) z = x", "."], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) z = x\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>(x, y) \\<in> same_orbit_rel;\n        (y, z) \\<in> same_orbit_rel\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> same_orbit_rel", "with gh \\<open>x \\<in> M\\<close> \\<open>z \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  g \\<otimes> h \\<in> carrier G\n  x \\<in> M\n  z \\<in> M\n  \\<phi> (g \\<otimes> h) z = x", "show \"(x, z) \\<in> same_orbit_rel\""], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<in> carrier G\n  x \\<in> M\n  z \\<in> M\n  \\<phi> (g \\<otimes> h) z = x\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> same_orbit_rel", "unfolding same_orbit_rel_def"], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<in> carrier G\n  x \\<in> M\n  z \\<in> M\n  \\<phi> (g \\<otimes> h) z = x\n\ngoal (1 subgoal):\n 1. (x, z)\n    \\<in> {p \\<in> M \\<times> M.\n           \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}", "by auto"], ["proof (state)\nthis:\n  (x, z) \\<in> same_orbit_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trans same_orbit_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stabilizer and fixed points\\<close>"], ["", "text \\<open>The following definition models the stabilizer of a group action:\\<close>"], ["", "definition stabilizer :: \"'c \\<Rightarrow> _\"\n  where \"stabilizer m = {g \\<in> carrier G. (\\<phi> g) m = m}\""], ["", "text \\<open>This shows that the stabilizer of @{term m} is a subgroup of @{term G}.\\<close>"], ["", "lemma stabilizer_is_subgroup:\n  assumes m:\"m \\<in> M\"\n  shows \"subgroup (stabilizer m) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (stabilizer m) G", "proof(rule subgroupI)"], ["proof (state)\ngoal (4 subgoals):\n 1. stabilizer m \\<subseteq> carrier G\n 2. stabilizer m \\<noteq> {}\n 3. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "show \"stabilizer m \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stabilizer m \\<subseteq> carrier G", "unfolding stabilizer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> carrier G. \\<phi> g m = m} \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  stabilizer m \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. stabilizer m \\<noteq> {}\n 2. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. stabilizer m \\<noteq> {}\n 2. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "from m"], ["proof (chain)\npicking this:\n  m \\<in> M", "have \"(\\<phi> \\<one>) m = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> \\<one> m = m", "by (rule one_is_id)"], ["proof (state)\nthis:\n  \\<phi> \\<one> m = m\n\ngoal (3 subgoals):\n 1. stabilizer m \\<noteq> {}\n 2. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "hence \"\\<one> \\<in> stabilizer m\""], ["proof (prove)\nusing this:\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> stabilizer m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  \\<phi> \\<one> m = m\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> {g \\<in> carrier G. \\<phi> g m = m}", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<in> stabilizer m\n\ngoal (3 subgoals):\n 1. stabilizer m \\<noteq> {}\n 2. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "thus \"stabilizer m \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<one> \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. stabilizer m \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  stabilizer m \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "assume g:\"g \\<in> stabilizer m\""], ["proof (state)\nthis:\n  g \\<in> stabilizer m\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "hence \"g \\<in> carrier G\" \"(\\<phi> g) m = m\""], ["proof (prove)\nusing this:\n  g \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& \\<phi> g m = m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& \\<phi> g m = m", "by simp+"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g m = m\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G\n  \\<phi> g m = m", "have ginv:\"(\\<phi> (inv g)) m = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = m", "by (metis group_inv_rel)"], ["proof (state)\nthis:\n  \\<phi> (inv g) m = m\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "from \\<open>g \\<in> carrier G\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> carrier G", "have \"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> stabilizer m \\<Longrightarrow> inv a \\<in> stabilizer m\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "with ginv"], ["proof (chain)\npicking this:\n  \\<phi> (inv g) m = m\n  inv g \\<in> carrier G", "show \"(inv g) \\<in>  stabilizer m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) m = m\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> stabilizer m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  \\<phi> (inv g) m = m\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> {g \\<in> carrier G. \\<phi> g m = m}", "by simp"], ["proof (state)\nthis:\n  inv g \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "fix g h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "assume g:\"g \\<in> stabilizer m\""], ["proof (state)\nthis:\n  g \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "hence g2:\"g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "assume h:\"h \\<in> stabilizer m\""], ["proof (state)\nthis:\n  h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "hence h2:\"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  h \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "with g2"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  h \\<in> carrier G", "have gh:\"g \\<otimes> h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> carrier G", "by (rule m_closed)"], ["proof (state)\nthis:\n  g \\<otimes> h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "from g2 h2 m"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  m \\<in> M", "have \"\\<phi> (g \\<otimes> h) m = (\\<phi> g) ((\\<phi> h) m)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) m = \\<phi> g (\\<phi> h m)", "by (metis action_mult)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) m = \\<phi> g (\\<phi> h m)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "also"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) m = \\<phi> g (\\<phi> h m)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "from g h"], ["proof (chain)\npicking this:\n  g \\<in> stabilizer m\n  h \\<in> stabilizer m", "have \"... = m\""], ["proof (prove)\nusing this:\n  g \\<in> stabilizer m\n  h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n  h \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> h m) = m", "by simp"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> h m) = m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (g \\<otimes> h) m = m", "have \"\\<phi> (g \\<otimes> h) m = m\""], ["proof (prove)\nusing this:\n  \\<phi> (g \\<otimes> h) m = m\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> h) m = m", "."], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> h) m = m\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> stabilizer m; b \\<in> stabilizer m\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> stabilizer m", "with gh"], ["proof (chain)\npicking this:\n  g \\<otimes> h \\<in> carrier G\n  \\<phi> (g \\<otimes> h) m = m", "show \"g \\<otimes> h \\<in> stabilizer m\""], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<in> carrier G\n  \\<phi> (g \\<otimes> h) m = m\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> stabilizer m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<in> carrier G\n  \\<phi> (g \\<otimes> h) m = m\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> {g \\<in> carrier G. \\<phi> g m = m}", "by simp"], ["proof (state)\nthis:\n  g \\<otimes> h \\<in> stabilizer m\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Next, we define and characterize the fixed points of a group action.\\<close>"], ["", "definition fixed_points :: \"'c set\"\n  where \"fixed_points = {m \\<in> M. carrier G \\<subseteq> stabilizer m}\""], ["", "lemma fixed_point_char:\n  assumes \"m \\<in> M\"\n  shows \"(m \\<in> fixed_points) = (\\<forall>g\\<in>carrier G. \\<phi> g m = m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m \\<in> fixed_points) = (\\<forall>g\\<in>carrier G. \\<phi> g m = m)", "using assms"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. (m \\<in> fixed_points) = (\\<forall>g\\<in>carrier G. \\<phi> g m = m)", "unfolding fixed_points_def stabilizer_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. (m \\<in> {m \\<in> M.\n              carrier G \\<subseteq> {g \\<in> carrier G. \\<phi> g m = m}}) =\n    (\\<forall>g\\<in>carrier G. \\<phi> g m = m)", "by force"], ["", "lemma orbit_contains_rep:\n  assumes m:\"m \\<in> M\"\n  shows \"m \\<in> orbit m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> orbit m", "unfolding orbit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> same_orbit_rel `` {m}", "using assms"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. m \\<in> same_orbit_rel `` {m}", "by (metis equiv_class_self same_orbit_is_equiv)"], ["", "lemma singleton_orbit_eq_fixed_point:\n  assumes m:\"m \\<in> M\"\n  shows \"(card (orbit m) = 1) = (m \\<in> fixed_points)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card (orbit m) = 1) = (m \\<in> fixed_points)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. card (orbit m) = 1 \\<Longrightarrow> m \\<in> fixed_points\n 2. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "assume card:\"card (orbit m) = 1\""], ["proof (state)\nthis:\n  card (orbit m) = 1\n\ngoal (2 subgoals):\n 1. card (orbit m) = 1 \\<Longrightarrow> m \\<in> fixed_points\n 2. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "from m"], ["proof (chain)\npicking this:\n  m \\<in> M", "have \"m \\<in> orbit m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. m \\<in> orbit m", "by (rule orbit_contains_rep)"], ["proof (state)\nthis:\n  m \\<in> orbit m\n\ngoal (2 subgoals):\n 1. card (orbit m) = 1 \\<Longrightarrow> m \\<in> fixed_points\n 2. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "from m"], ["proof (chain)\npicking this:\n  m \\<in> M", "show \"m \\<in> fixed_points\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. m \\<in> fixed_points", "unfolding fixed_points_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. m \\<in> {m \\<in> M. carrier G \\<subseteq> stabilizer m}", "proof(auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> stabilizer m", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> stabilizer m", "assume gG:\"g \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> stabilizer m", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G", "have \"\\<phi> g m \\<in> orbit m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g m \\<in> orbit m", "by (auto dest:orbit_char)"], ["proof (state)\nthis:\n  \\<phi> g m \\<in> orbit m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> stabilizer m", "with \\<open>m \\<in> orbit m\\<close> card"], ["proof (chain)\npicking this:\n  m \\<in> orbit m\n  card (orbit m) = 1\n  \\<phi> g m \\<in> orbit m", "have \"\\<phi> g m = m\""], ["proof (prove)\nusing this:\n  m \\<in> orbit m\n  card (orbit m) = 1\n  \\<phi> g m \\<in> orbit m\n\ngoal (1 subgoal):\n 1. \\<phi> g m = m", "by (auto simp add: card_Suc_eq)"], ["proof (state)\nthis:\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> stabilizer m", "with gG"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = m", "show \"g \\<in> stabilizer m\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. g \\<in> stabilizer m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. g \\<in> {g \\<in> carrier G. \\<phi> g m = m}", "by simp"], ["proof (state)\nthis:\n  g \\<in> stabilizer m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "assume \"m \\<in> fixed_points\""], ["proof (state)\nthis:\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "hence fixed:\"carrier G \\<subseteq> stabilizer m\""], ["proof (prove)\nusing this:\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. carrier G \\<subseteq> stabilizer m", "unfolding fixed_points_def"], ["proof (prove)\nusing this:\n  m \\<in> {m \\<in> M. carrier G \\<subseteq> stabilizer m}\n\ngoal (1 subgoal):\n 1. carrier G \\<subseteq> stabilizer m", "by simp"], ["proof (state)\nthis:\n  carrier G \\<subseteq> stabilizer m\n\ngoal (1 subgoal):\n 1. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "from m"], ["proof (chain)\npicking this:\n  m \\<in> M", "have \"orbit m = {m}\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. orbit m = {m}", "proof(auto simp add: orbit_contains_rep)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "assume \"n \\<in> orbit m\""], ["proof (state)\nthis:\n  n \\<in> orbit m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  n \\<in> orbit m", "obtain g where g:\"g \\<in> carrier G\" \"\\<phi> g m = n\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  n \\<in> orbit m\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g m = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: orbit_char)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "moreover"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "with fixed"], ["proof (chain)\npicking this:\n  carrier G \\<subseteq> stabilizer m\n  g \\<in> carrier G\n  \\<phi> g m = n", "have \"\\<phi> g m = m\""], ["proof (prove)\nusing this:\n  carrier G \\<subseteq> stabilizer m\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<phi> g m = m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  carrier G \\<subseteq> {g \\<in> carrier G. \\<phi> g m = m}\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<phi> g m = m", "by auto"], ["proof (state)\nthis:\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>m \\<in> M; x \\<in> orbit m\\<rbrakk> \\<Longrightarrow> x = m", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  \\<phi> g m = m", "show \"n = m\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  \\<phi> g m = m\n\ngoal (1 subgoal):\n 1. n = m", "by simp"], ["proof (state)\nthis:\n  n = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  orbit m = {m}\n\ngoal (1 subgoal):\n 1. m \\<in> fixed_points \\<Longrightarrow> card (orbit m) = 1", "thus \"card (orbit m) = 1\""], ["proof (prove)\nusing this:\n  orbit m = {m}\n\ngoal (1 subgoal):\n 1. card (orbit m) = 1", "by simp"], ["proof (state)\nthis:\n  card (orbit m) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Orbit-Stabilizer Theorem\\<close>"], ["", "text \\<open>This section contains some theorems about orbits and their quotient\ngroups. The first one is the well-known orbit-stabilizer theorem which\nestablishes a bijection between the the quotient group of the an element's\nstabilizer and its orbit.\\<close>"], ["", "theorem orbit_thm:\n  assumes m:\"m \\<in> M\"\n  assumes rep:\"\\<And>U. U \\<in> (carrier (G Mod (stabilizer m))) \\<Longrightarrow> rep U \\<in> U\"\n  shows \"bij_betw (\\<lambda>H. (\\<phi> (inv (rep H)) m)) (carrier (G Mod (stabilizer m))) (orbit m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>H. \\<phi> (inv rep H) m)\n     (carrier (G Mod stabilizer m)) (orbit m)", "proof(auto simp add:bij_betw_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on (\\<lambda>H. \\<phi> (inv rep H) m) (carrier (G Mod stabilizer m))\n 2. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 3. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "show \"inj_on (\\<lambda>H. \\<phi> (inv (rep H)) m) (carrier (G Mod stabilizer m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>H. \\<phi> (inv rep H) m) (carrier (G Mod stabilizer m))", "proof(rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix U V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume U:\"U \\<in> carrier (G Mod (stabilizer m))\""], ["proof (state)\nthis:\n  U \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume V:\"V \\<in> carrier (G Mod (stabilizer m))\""], ["proof (state)\nthis:\n  V \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "define h where \"h = rep V\""], ["proof (state)\nthis:\n  h = rep V\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "define g where \"g = rep U\""], ["proof (state)\nthis:\n  g = rep U\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "have stabSubset:\"(stabilizer m) \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stabilizer m \\<subseteq> carrier G", "unfolding stabilizer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> carrier G. \\<phi> g m = m} \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  stabilizer m \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from m"], ["proof (chain)\npicking this:\n  m \\<in> M", "have stabSubgroup: \"subgroup (stabilizer m) G\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. subgroup (stabilizer m) G", "by (metis stabilizer_is_subgroup)"], ["proof (state)\nthis:\n  subgroup (stabilizer m) G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from V rep"], ["proof (chain)\npicking this:\n  V \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U", "have hV:\"h \\<in> V\""], ["proof (prove)\nusing this:\n  V \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. h \\<in> V", "unfolding h_def"], ["proof (prove)\nusing this:\n  V \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. rep V \\<in> V", "by simp"], ["proof (state)\nthis:\n  h \\<in> V\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from V stabSubset"], ["proof (chain)\npicking this:\n  V \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G", "have \"V \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  V \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. V \\<subseteq> carrier G", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  V \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier G.\n                        {\\<Union>h\\<in>stabilizer m. {h \\<otimes> a}},\n              monoid.mult = (<#>), one = stabilizer m\\<rparr>\n  stabilizer m \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. V \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  V \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "with hV"], ["proof (chain)\npicking this:\n  h \\<in> V\n  V \\<subseteq> carrier G", "have hG:\"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> V\n  V \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence hinvG:\"inv h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv h \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from U rep"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U", "have gU:\"g \\<in> U\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. g \\<in> U", "unfolding g_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. rep U \\<in> U", "by simp"], ["proof (state)\nthis:\n  g \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from U stabSubset"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G", "have \"U \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. U \\<subseteq> carrier G", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier G.\n                        {\\<Union>h\\<in>stabilizer m. {h \\<otimes> a}},\n              monoid.mult = (<#>), one = stabilizer m\\<rparr>\n  stabilizer m \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. U \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  U \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "with gU"], ["proof (chain)\npicking this:\n  g \\<in> U\n  U \\<subseteq> carrier G", "have gG:\"g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> U\n  U \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence ginvG:\"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by (metis inv_closed)"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from gG hinvG"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  inv h \\<in> carrier G", "have ginvhG: \"g \\<otimes> inv h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  inv h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes> inv h \\<in> carrier G", "by (metis m_closed)"], ["proof (state)\nthis:\n  g \\<otimes> inv h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume reps:\"\\<phi> (inv rep U) m = \\<phi> (inv rep V) m\""], ["proof (state)\nthis:\n  \\<phi> (inv rep U) m = \\<phi> (inv rep V) m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence gh:\"\\<phi> (inv g) m = \\<phi> (inv h) m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv rep U) m = \\<phi> (inv rep V) m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) m = \\<phi> (inv h) m", "unfolding g_def h_def"], ["proof (prove)\nusing this:\n  \\<phi> (inv rep U) m = \\<phi> (inv rep V) m\n\ngoal (1 subgoal):\n 1. \\<phi> (inv rep U) m = \\<phi> (inv rep V) m", "."], ["proof (state)\nthis:\n  \\<phi> (inv g) m = \\<phi> (inv h) m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from gG hinvG m"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  inv h \\<in> carrier G\n  m \\<in> M", "have \"\\<phi> (g \\<otimes> (inv h)) m = \\<phi> g (\\<phi> (inv h) m)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  inv h \\<in> carrier G\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)", "by (metis action_mult)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from gh ginvG gG m"], ["proof (chain)\npicking this:\n  \\<phi> (inv g) m = \\<phi> (inv h) m\n  inv g \\<in> carrier G\n  g \\<in> carrier G\n  m \\<in> M", "have \"... = \\<phi> (g \\<otimes> inv g) m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv g) m = \\<phi> (inv h) m\n  inv g \\<in> carrier G\n  g \\<in> carrier G\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> (inv h) m) = \\<phi> (g \\<otimes> inv g) m", "by (metis action_mult)"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> (inv h) m) = \\<phi> (g \\<otimes> inv g) m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> (inv h) m) = \\<phi> (g \\<otimes> inv g) m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from m gG"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G", "have \"... = m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> inv g) m = m", "by (auto simp: one_is_id)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv g) m = m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (g \\<otimes> inv h) m = m", "have \"\\<phi> (g \\<otimes> inv h) m = m\""], ["proof (prove)\nusing this:\n  \\<phi> (g \\<otimes> inv h) m = m\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> inv h) m = m", "."], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv h) m = m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "with ginvhG"], ["proof (chain)\npicking this:\n  g \\<otimes> inv h \\<in> carrier G\n  \\<phi> (g \\<otimes> inv h) m = m", "have \"(g \\<otimes> inv h) \\<in> stabilizer m\""], ["proof (prove)\nusing this:\n  g \\<otimes> inv h \\<in> carrier G\n  \\<phi> (g \\<otimes> inv h) m = m\n\ngoal (1 subgoal):\n 1. g \\<otimes> inv h \\<in> stabilizer m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  g \\<otimes> inv h \\<in> carrier G\n  \\<phi> (g \\<otimes> inv h) m = m\n\ngoal (1 subgoal):\n 1. g \\<otimes> inv h \\<in> {g \\<in> carrier G. \\<phi> g m = m}", "by simp"], ["proof (state)\nthis:\n  g \\<otimes> inv h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"(stabilizer m) #> (g \\<otimes> inv h) = (stabilizer m) #> \\<one>\""], ["proof (prove)\nusing this:\n  g \\<otimes> inv h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. stabilizer m #> g \\<otimes> inv h = stabilizer m #> \\<one>", "by (metis coset_join2 coset_mult_one m stabSubset stabilizer_is_subgroup subgroup.mem_carrier)"], ["proof (state)\nthis:\n  stabilizer m #> g \\<otimes> inv h = stabilizer m #> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "with hinvG hG gG stabSubset"], ["proof (chain)\npicking this:\n  inv h \\<in> carrier G\n  h \\<in> carrier G\n  g \\<in> carrier G\n  stabilizer m \\<subseteq> carrier G\n  stabilizer m #> g \\<otimes> inv h = stabilizer m #> \\<one>", "have  stabgstabh:\"(stabilizer m) #> g = (stabilizer m) #> h\""], ["proof (prove)\nusing this:\n  inv h \\<in> carrier G\n  h \\<in> carrier G\n  g \\<in> carrier G\n  stabilizer m \\<subseteq> carrier G\n  stabilizer m #> g \\<otimes> inv h = stabilizer m #> \\<one>\n\ngoal (1 subgoal):\n 1. stabilizer m #> g = stabilizer m #> h", "by (metis coset_mult_inv1 group.coset_mult_one is_group)"], ["proof (state)\nthis:\n  stabilizer m #> g = stabilizer m #> h\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from stabSubgroup is_group U gU"], ["proof (chain)\npicking this:\n  subgroup (stabilizer m) G\n  Group.group G\n  U \\<in> carrier (G Mod stabilizer m)\n  g \\<in> U", "have \"U = (stabilizer m) #> g\""], ["proof (prove)\nusing this:\n  subgroup (stabilizer m) G\n  Group.group G\n  U \\<in> carrier (G Mod stabilizer m)\n  g \\<in> U\n\ngoal (1 subgoal):\n 1. U = stabilizer m #> g", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  subgroup (stabilizer m) G\n  Group.group G\n  U \\<in> carrier\n           \\<lparr>carrier = rcosets stabilizer m, monoid.mult = (<#>),\n              one = stabilizer m\\<rparr>\n  g \\<in> U\n\ngoal (1 subgoal):\n 1. U = stabilizer m #> g", "by (simp add:subgroup.repr_independence2)"], ["proof (state)\nthis:\n  U = stabilizer m #> g\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  U = stabilizer m #> g\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from stabgstabh is_group stabSubgroup V hV subgroup.repr_independence2"], ["proof (chain)\npicking this:\n  stabilizer m #> g = stabilizer m #> h\n  Group.group G\n  subgroup (stabilizer m) G\n  V \\<in> carrier (G Mod stabilizer m)\n  h \\<in> V\n  \\<lbrakk>subgroup ?H ?G; Group.group ?G;\n   ?U \\<in> rcosets\\<^bsub>?G\\<^esub> ?H; ?g \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> ?U = ?H #>\\<^bsub>?G\\<^esub> ?g", "have \"... = V\""], ["proof (prove)\nusing this:\n  stabilizer m #> g = stabilizer m #> h\n  Group.group G\n  subgroup (stabilizer m) G\n  V \\<in> carrier (G Mod stabilizer m)\n  h \\<in> V\n  \\<lbrakk>subgroup ?H ?G; Group.group ?G;\n   ?U \\<in> rcosets\\<^bsub>?G\\<^esub> ?H; ?g \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> ?U = ?H #>\\<^bsub>?G\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. stabilizer m #> g = V", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  stabilizer m #> g = stabilizer m #> h\n  Group.group G\n  subgroup (stabilizer m) G\n  V \\<in> carrier\n           \\<lparr>carrier = rcosets stabilizer m, monoid.mult = (<#>),\n              one = stabilizer m\\<rparr>\n  h \\<in> V\n  \\<lbrakk>subgroup ?H ?G; Group.group ?G;\n   ?U \\<in> rcosets\\<^bsub>?G\\<^esub> ?H; ?g \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> ?U = ?H #>\\<^bsub>?G\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. stabilizer m #> g = V", "by force"], ["proof (state)\nthis:\n  stabilizer m #> g = V\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod stabilizer m);\n        y \\<in> carrier (G Mod stabilizer m);\n        \\<phi> (inv rep x) m = \\<phi> (inv rep y) m\\<rbrakk>\n       \\<Longrightarrow> x = y", "finally"], ["proof (chain)\npicking this:\n  U = V", "show \"U = V\""], ["proof (prove)\nusing this:\n  U = V\n\ngoal (1 subgoal):\n 1. U = V", "."], ["proof (state)\nthis:\n  U = V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>H. \\<phi> (inv rep H) m) (carrier (G Mod stabilizer m))\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "have stabSubset:\"stabilizer m \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stabilizer m \\<subseteq> carrier G", "unfolding stabilizer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> carrier G. \\<phi> g m = m} \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  stabilizer m \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "fix H"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "assume H:\"H \\<in> carrier (G Mod stabilizer m)\""], ["proof (state)\nthis:\n  H \\<in> carrier (G Mod stabilizer m)\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with rep"], ["proof (chain)\npicking this:\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n  H \\<in> carrier (G Mod stabilizer m)", "have \"rep H \\<in> H\""], ["proof (prove)\nusing this:\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n  H \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. rep H \\<in> H", "by simp"], ["proof (state)\nthis:\n  rep H \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "moreover"], ["proof (state)\nthis:\n  rep H \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with H stabSubset"], ["proof (chain)\npicking this:\n  H \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G\n  rep H \\<in> H", "have \"H \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  H \\<in> carrier (G Mod stabilizer m)\n  stabilizer m \\<subseteq> carrier G\n  rep H \\<in> H\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  H \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier G.\n                        {\\<Union>h\\<in>stabilizer m. {h \\<otimes> a}},\n              monoid.mult = (<#>), one = stabilizer m\\<rparr>\n  stabilizer m \\<subseteq> carrier G\n  rep H \\<in> H\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  H \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "ultimately"], ["proof (chain)\npicking this:\n  rep H \\<in> H\n  H \\<subseteq> carrier G", "have \"rep H \\<in> carrier G\""], ["proof (prove)\nusing this:\n  rep H \\<in> H\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. rep H \\<in> carrier G", ".."], ["proof (state)\nthis:\n  rep H \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "hence \"inv rep H \\<in> carrier G\""], ["proof (prove)\nusing this:\n  rep H \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv rep H \\<in> carrier G", "by (rule inv_closed)"], ["proof (state)\nthis:\n  inv rep H \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       H \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow>\n       \\<phi> (inv rep H) m \\<in> orbit m\n 2. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  inv rep H \\<in> carrier G", "show \"\\<phi> (inv rep H) m \\<in> orbit m\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  inv rep H \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (inv rep H) m \\<in> orbit m", "by (auto dest:orbit_char)"], ["proof (state)\nthis:\n  \\<phi> (inv rep H) m \\<in> orbit m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "assume \"n \\<in> orbit m\""], ["proof (state)\nthis:\n  n \\<in> orbit m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  n \\<in> orbit m", "obtain g where g:\"g \\<in> carrier G\" \"\\<phi> g m = n\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  n \\<in> orbit m\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; \\<phi> g m = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:orbit_char)"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "hence invg:\"inv g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. inv g \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "hence stabinvg:\"((stabilizer m) #> (inv g)) \\<in> carrier (G Mod stabilizer m)\""], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. stabilizer m #> inv g \\<in> carrier (G Mod stabilizer m)", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  inv g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. stabilizer m #> inv g\n    \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {stabilizer m #> a},\n              monoid.mult = (<#>), one = stabilizer m\\<rparr>", "by auto"], ["proof (state)\nthis:\n  stabilizer m #> inv g \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "hence \"rep ((stabilizer m) #> (inv g)) \\<in> (stabilizer m) #> (inv g)\""], ["proof (prove)\nusing this:\n  stabilizer m #> inv g \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. rep (stabilizer m #> inv g) \\<in> stabilizer m #> inv g", "by (metis rep)"], ["proof (state)\nthis:\n  rep (stabilizer m #> inv g) \\<in> stabilizer m #> inv g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "then"], ["proof (chain)\npicking this:\n  rep (stabilizer m #> inv g) \\<in> stabilizer m #> inv g", "obtain h where h:\"h \\<in> stabilizer m\" \"rep ((stabilizer m) #> (inv g)) = h \\<otimes> (inv g)\""], ["proof (prove)\nusing this:\n  rep (stabilizer m #> inv g) \\<in> stabilizer m #> inv g\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> stabilizer m;\n         rep (stabilizer m #> inv g) = h \\<otimes> inv g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  rep (\\<Union>h\\<in>stabilizer m. {h \\<otimes> inv g})\n  \\<in> (\\<Union>h\\<in>stabilizer m. {h \\<otimes> inv g})\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> stabilizer m;\n         rep (\\<Union>h\\<in>stabilizer m. {h \\<otimes> inv g}) =\n         h \\<otimes> inv g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g", "have \"\\<phi> (inv rep ((stabilizer m) #> (inv g))) m =  \\<phi> (inv (h \\<otimes> (inv g))) m\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. \\<phi> (inv rep (stabilizer m #> inv g)) m =\n    \\<phi> (inv (h \\<otimes> inv g)) m", "by simp"], ["proof (state)\nthis:\n  \\<phi> (inv rep (stabilizer m #> inv g)) m =\n  \\<phi> (inv (h \\<otimes> inv g)) m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "also"], ["proof (state)\nthis:\n  \\<phi> (inv rep (stabilizer m #> inv g)) m =\n  \\<phi> (inv (h \\<otimes> inv g)) m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "from h"], ["proof (chain)\npicking this:\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g", "have hG:\"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  h \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n  rep ({g \\<in> carrier G. \\<phi> g m = m} #> inv g) = h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> carrier G", "have \"\\<phi> (inv (h \\<otimes> (inv g))) m = \\<phi> (g \\<otimes> (inv h)) m\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (inv (h \\<otimes> inv g)) m = \\<phi> (g \\<otimes> inv h) m", "by (metis inv_closed inv_inv inv_mult_group)"], ["proof (state)\nthis:\n  \\<phi> (inv (h \\<otimes> inv g)) m = \\<phi> (g \\<otimes> inv h) m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "also"], ["proof (state)\nthis:\n  \\<phi> (inv (h \\<otimes> inv g)) m = \\<phi> (g \\<otimes> inv h) m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "from g hG m"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> carrier G\n  m \\<in> M", "have \"... = \\<phi> g (\\<phi> (inv h) m)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n  h \\<in> carrier G\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)", "by (metis action_mult inv_closed)"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "also"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> inv h) m = \\<phi> g (\\<phi> (inv h) m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "from h m"], ["proof (chain)\npicking this:\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g\n  m \\<in> M", "have \"inv h \\<in> stabilizer m\""], ["proof (prove)\nusing this:\n  h \\<in> stabilizer m\n  rep (stabilizer m #> inv g) = h \\<otimes> inv g\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. inv h \\<in> stabilizer m", "by (metis stabilizer_is_subgroup subgroup.m_inv_closed)"], ["proof (state)\nthis:\n  inv h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "hence \"\\<phi> g (\\<phi> (inv h) m) = \\<phi> g m\""], ["proof (prove)\nusing this:\n  inv h \\<in> stabilizer m\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> (inv h) m) = \\<phi> g m", "unfolding stabilizer_def"], ["proof (prove)\nusing this:\n  inv h \\<in> {g \\<in> carrier G. \\<phi> g m = m}\n\ngoal (1 subgoal):\n 1. \\<phi> g (\\<phi> (inv h) m) = \\<phi> g m", "by simp"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> (inv h) m) = \\<phi> g m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "also"], ["proof (state)\nthis:\n  \\<phi> g (\\<phi> (inv h) m) = \\<phi> g m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "from g"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  \\<phi> g m = n", "have \"... = n\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<phi> g m = n", "by simp"], ["proof (state)\nthis:\n  \\<phi> g m = n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "finally"], ["proof (chain)\npicking this:\n  \\<phi> (inv rep (stabilizer m #> inv g)) m = n", "have \"n = \\<phi> (inv rep ((stabilizer m) #> (inv g))) m\""], ["proof (prove)\nusing this:\n  \\<phi> (inv rep (stabilizer m #> inv g)) m = n\n\ngoal (1 subgoal):\n 1. n = \\<phi> (inv rep (stabilizer m #> inv g)) m", ".."], ["proof (state)\nthis:\n  n = \\<phi> (inv rep (stabilizer m #> inv g)) m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit m \\<Longrightarrow>\n       x \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n               carrier (G Mod stabilizer m)", "with stabinvg"], ["proof (chain)\npicking this:\n  stabilizer m #> inv g \\<in> carrier (G Mod stabilizer m)\n  n = \\<phi> (inv rep (stabilizer m #> inv g)) m", "show \"n \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) ` carrier (G Mod stabilizer m)\""], ["proof (prove)\nusing this:\n  stabilizer m #> inv g \\<in> carrier (G Mod stabilizer m)\n  n = \\<phi> (inv rep (stabilizer m #> inv g)) m\n\ngoal (1 subgoal):\n 1. n \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) `\n            carrier (G Mod stabilizer m)", "by simp"], ["proof (state)\nthis:\n  n \\<in> (\\<lambda>H. \\<phi> (inv rep H) m) ` carrier (G Mod stabilizer m)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the case of @{term G} being finite, the last theorem can be reduced\nto a statement about the cardinality of orbit and stabilizer:\\<close>"], ["", "corollary orbit_size:\n  assumes fin:\"finite (carrier G)\"\n  assumes m:\"m \\<in> M\"\n  shows \"order G = card (orbit m) * card (stabilizer m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "define rep where \"rep = (\\<lambda>U \\<in> (carrier (G Mod (stabilizer m))). SOME x. x \\<in> U)\""], ["proof (state)\nthis:\n  rep = (\\<lambda>U\\<in>carrier (G Mod stabilizer m). SOME x. x \\<in> U)\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "have \"\\<And>U. U \\<in> (carrier (G Mod (stabilizer m))) \\<Longrightarrow> rep U \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "assume U:\"U \\<in> carrier (G Mod stabilizer m)\""], ["proof (state)\nthis:\n  U \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "then"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod stabilizer m)", "obtain g where \"g \\<in> carrier G\" \" U = (stabilizer m) #> g\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; U = stabilizer m #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {stabilizer m #> a},\n              monoid.mult = (<#>), one = stabilizer m\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; U = stabilizer m #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  U = stabilizer m #> g\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  g \\<in> carrier G\n  U = stabilizer m #> g", "have \"(SOME x. x \\<in> U) \\<in> U\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  g \\<in> carrier G\n  U = stabilizer m #> g\n\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> U) \\<in> U", "by (metis rcos_self stabilizer_is_subgroup someI_ex)"], ["proof (state)\nthis:\n  (SOME x. x \\<in> U) \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep U \\<in> U", "with U"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod stabilizer m)\n  (SOME x. x \\<in> U) \\<in> U", "show \"rep U \\<in> U\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n  (SOME x. x \\<in> U) \\<in> U\n\ngoal (1 subgoal):\n 1. rep U \\<in> U", "unfolding rep_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod stabilizer m)\n  (SOME x. x \\<in> U) \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>carrier (G Mod stabilizer m). SOME x. x \\<in> U) U\n    \\<in> U", "by simp"], ["proof (state)\nthis:\n  rep U \\<in> U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U", "have  bij:\"card (carrier (G Mod (stabilizer m))) = card (orbit m)\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  ?U \\<in> carrier (G Mod stabilizer m) \\<Longrightarrow> rep ?U \\<in> ?U\n\ngoal (1 subgoal):\n 1. card (carrier (G Mod stabilizer m)) = card (orbit m)", "by (metis bij_betw_same_card orbit_thm)"], ["proof (state)\nthis:\n  card (carrier (G Mod stabilizer m)) = card (orbit m)\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "from fin m"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  m \\<in> M", "have \"card (carrier (G Mod (stabilizer m))) * card (stabilizer m)  = order G\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. card (carrier (G Mod stabilizer m)) * card (stabilizer m) = order G", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = rcosets stabilizer m, monoid.mult = (<#>),\n          one = stabilizer m\\<rparr>) *\n    card (stabilizer m) =\n    order G", "by (simp add: stabilizer_is_subgroup lagrange)"], ["proof (state)\nthis:\n  card (carrier (G Mod stabilizer m)) * card (stabilizer m) = order G\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "with bij"], ["proof (chain)\npicking this:\n  card (carrier (G Mod stabilizer m)) = card (orbit m)\n  card (carrier (G Mod stabilizer m)) * card (stabilizer m) = order G", "show ?thesis"], ["proof (prove)\nusing this:\n  card (carrier (G Mod stabilizer m)) = card (orbit m)\n  card (carrier (G Mod stabilizer m)) * card (stabilizer m) = order G\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "by simp"], ["proof (state)\nthis:\n  order G = card (orbit m) * card (stabilizer m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orbit_not_empty:\n  assumes fin:\"finite M\"\n  assumes A:\"A \\<in> orbits\"\n  shows \"card A > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < card A", "from A"], ["proof (chain)\npicking this:\n  A \\<in> orbits", "obtain m where \"m \\<in> M\" \"A = orbit m\""], ["proof (prove)\nusing this:\n  A \\<in> orbits\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> M; A = orbit m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding orbits_def quotient_def orbit_def"], ["proof (prove)\nusing this:\n  A \\<in> (\\<Union>x\\<in>M. {same_orbit_rel `` {x}})\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> M; A = same_orbit_rel `` {m}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<in> M\n  A = orbit m\n\ngoal (1 subgoal):\n 1. 0 < card A", "hence \"m \\<in> A\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  A = orbit m\n\ngoal (1 subgoal):\n 1. m \\<in> A", "by (metis orbit_contains_rep)"], ["proof (state)\nthis:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < card A", "hence \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "unfolding orbits_def"], ["proof (prove)\nusing this:\n  m \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card A", "moreover"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card A", "from fin A"], ["proof (chain)\npicking this:\n  finite M\n  A \\<in> orbits", "have \"finite A\""], ["proof (prove)\nusing this:\n  finite M\n  A \\<in> orbits\n\ngoal (1 subgoal):\n 1. finite A", "unfolding orbits_def quotient_def Image_def same_orbit_rel_def"], ["proof (prove)\nusing this:\n  finite M\n  A \\<in> (\\<Union>x\\<in>M.\n              {{y. \\<exists>x\\<in>{x}.\n                      (x, y)\n                      \\<in> {p \\<in> M \\<times> M.\n                             \\<exists>g\\<in>carrier G.\n                                \\<phi> g (snd p) = fst p}}})\n\ngoal (1 subgoal):\n 1. finite A", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. 0 < card A", "ultimately"], ["proof (chain)\npicking this:\n  A \\<noteq> {}\n  finite A", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  finite A\n\ngoal (1 subgoal):\n 1. 0 < card A", "by auto"], ["proof (state)\nthis:\n  0 < card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fin_set_imp_fin_orbits:\n  assumes finM:\"finite M\"\n  shows \"finite orbits\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite orbits", "using assms"], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. finite orbits", "unfolding orbits_def quotient_def"], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. finite (\\<Union>x\\<in>M. {same_orbit_rel `` {x}})", "by simp"], ["", "(*One-Element-Orbits are Fixed Points*)"], ["", "lemma singleton_orbits:\n  shows \"\\<Union>{N\\<in>orbits. card N = 1} = fixed_points\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {N \\<in> orbits. card N = 1} = fixed_points", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> {N \\<in> orbits. card N = 1} \\<subseteq> fixed_points\n 2. fixed_points \\<subseteq> \\<Union> {N \\<in> orbits. card N = 1}", "show \"\\<Union>{N \\<in> orbits. card N = 1} \\<subseteq> fixed_points\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {N \\<in> orbits. card N = 1} \\<subseteq> fixed_points", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "assume a:\"x \\<in> \\<Union>{N \\<in> orbits. card N = 1}\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "hence \"x \\<in> M\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. x \\<in> M", "unfolding orbits_def quotient_def Image_def same_orbit_rel_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {N \\<in> \\<Union>x\\<in>M.\n                       {{y. \\<exists>x\\<in>{x}.\n                               (x, y)\n                               \\<in> {p \\<in> M \\<times> M.\n\\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}}}.\n            card N = 1}\n\ngoal (1 subgoal):\n 1. x \\<in> M", "by auto"], ["proof (state)\nthis:\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "from a"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "obtain N where N:\"N \\<in> orbits\" \"card N = 1\" \"x \\<in> N\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<in> orbits; card N = 1; x \\<in> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  N \\<in> orbits\n  card N = 1\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "then"], ["proof (chain)\npicking this:\n  N \\<in> orbits\n  card N = 1\n  x \\<in> N", "obtain y where Norbit:\"N = orbit y\" \"y \\<in> M\""], ["proof (prove)\nusing this:\n  N \\<in> orbits\n  card N = 1\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>N = orbit y; y \\<in> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding orbits_def quotient_def orbit_def"], ["proof (prove)\nusing this:\n  N \\<in> (\\<Union>x\\<in>M. {same_orbit_rel `` {x}})\n  card N = 1\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>N = same_orbit_rel `` {y}; y \\<in> M\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  N = orbit y\n  y \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "hence \"y \\<in> N\""], ["proof (prove)\nusing this:\n  N = orbit y\n  y \\<in> M\n\ngoal (1 subgoal):\n 1. y \\<in> N", "by (metis orbit_contains_rep)"], ["proof (state)\nthis:\n  y \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "with N"], ["proof (chain)\npicking this:\n  N \\<in> orbits\n  card N = 1\n  x \\<in> N\n  y \\<in> N", "have Nsing:\"N = {x}\" \"N = {y}\""], ["proof (prove)\nusing this:\n  N \\<in> orbits\n  card N = 1\n  x \\<in> N\n  y \\<in> N\n\ngoal (1 subgoal):\n 1. N = {x} &&& N = {y}", "by (auto simp: card_Suc_eq)"], ["proof (state)\nthis:\n  N = {x}\n  N = {y}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "hence \"x = y\""], ["proof (prove)\nusing this:\n  N = {x}\n  N = {y}\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "with Norbit"], ["proof (chain)\npicking this:\n  N = orbit y\n  y \\<in> M\n  x = y", "have Norbit2:\"N = orbit x\""], ["proof (prove)\nusing this:\n  N = orbit y\n  y \\<in> M\n  x = y\n\ngoal (1 subgoal):\n 1. N = orbit x", "by simp"], ["proof (state)\nthis:\n  N = orbit x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "have \"{g \\<in> carrier G. \\<phi> g x = x} = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> carrier G. \\<phi> g x = x} = carrier G", "proof(auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> carrier G \\<Longrightarrow> \\<phi> xa x = x", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> carrier G \\<Longrightarrow> \\<phi> xa x = x", "assume \"g \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> carrier G \\<Longrightarrow> \\<phi> xa x = x", "with \\<open>x \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> M\n  g \\<in> carrier G", "have \"\\<phi> g x \\<in> orbit x\""], ["proof (prove)\nusing this:\n  x \\<in> M\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> g x \\<in> orbit x", "by (auto dest:orbit_char)"], ["proof (state)\nthis:\n  \\<phi> g x \\<in> orbit x\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> carrier G \\<Longrightarrow> \\<phi> xa x = x", "with Nsing"], ["proof (chain)\npicking this:\n  N = {x}\n  N = {y}\n  \\<phi> g x \\<in> orbit x", "show \"\\<phi> g x = x\""], ["proof (prove)\nusing this:\n  N = {x}\n  N = {y}\n  \\<phi> g x \\<in> orbit x\n\ngoal (1 subgoal):\n 1. \\<phi> g x = x", "by (metis Norbit2 singleton_iff)"], ["proof (state)\nthis:\n  \\<phi> g x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {g \\<in> carrier G. \\<phi> g x = x} = carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1} \\<Longrightarrow>\n       x \\<in> fixed_points", "with \\<open>x \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> M\n  {g \\<in> carrier G. \\<phi> g x = x} = carrier G", "show \"x \\<in> fixed_points\""], ["proof (prove)\nusing this:\n  x \\<in> M\n  {g \\<in> carrier G. \\<phi> g x = x} = carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> fixed_points", "unfolding fixed_points_def stabilizer_def"], ["proof (prove)\nusing this:\n  x \\<in> M\n  {g \\<in> carrier G. \\<phi> g x = x} = carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> {m \\<in> M.\n             carrier G \\<subseteq> {g \\<in> carrier G. \\<phi> g m = m}}", "by simp"], ["proof (state)\nthis:\n  x \\<in> fixed_points\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> {N \\<in> orbits. card N = 1} \\<subseteq> fixed_points\n\ngoal (1 subgoal):\n 1. fixed_points \\<subseteq> \\<Union> {N \\<in> orbits. card N = 1}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fixed_points \\<subseteq> \\<Union> {N \\<in> orbits. card N = 1}", "show \"fixed_points \\<subseteq> \\<Union>{N \\<in> orbits. card N = 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fixed_points \\<subseteq> \\<Union> {N \\<in> orbits. card N = 1}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "assume m:\"m \\<in> fixed_points\""], ["proof (state)\nthis:\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "hence mM:\"m \\<in> M\""], ["proof (prove)\nusing this:\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. m \\<in> M", "unfolding fixed_points_def"], ["proof (prove)\nusing this:\n  m \\<in> {m \\<in> M. carrier G \\<subseteq> stabilizer m}\n\ngoal (1 subgoal):\n 1. m \\<in> M", "by simp"], ["proof (state)\nthis:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "hence orbit:\"orbit m \\<in> orbits\""], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. orbit m \\<in> orbits", "unfolding orbits_def quotient_def orbit_def"], ["proof (prove)\nusing this:\n  m \\<in> M\n\ngoal (1 subgoal):\n 1. same_orbit_rel `` {m} \\<in> (\\<Union>x\\<in>M. {same_orbit_rel `` {x}})", "by auto"], ["proof (state)\nthis:\n  orbit m \\<in> orbits\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "from mM m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  m \\<in> fixed_points", "have \"card (orbit m) = 1\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  m \\<in> fixed_points\n\ngoal (1 subgoal):\n 1. card (orbit m) = 1", "by (metis singleton_orbit_eq_fixed_point)"], ["proof (state)\nthis:\n  card (orbit m) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "with orbit"], ["proof (chain)\npicking this:\n  orbit m \\<in> orbits\n  card (orbit m) = 1", "have \"orbit m \\<in> {N \\<in> orbits. card N = 1}\""], ["proof (prove)\nusing this:\n  orbit m \\<in> orbits\n  card (orbit m) = 1\n\ngoal (1 subgoal):\n 1. orbit m \\<in> {N \\<in> orbits. card N = 1}", "by simp"], ["proof (state)\nthis:\n  orbit m \\<in> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> fixed_points \\<Longrightarrow>\n       x \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "with mM"], ["proof (chain)\npicking this:\n  m \\<in> M\n  orbit m \\<in> {N \\<in> orbits. card N = 1}", "show \"m \\<in> \\<Union>{N \\<in> orbits. card N = 1}\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  orbit m \\<in> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. m \\<in> \\<Union> {N \\<in> orbits. card N = 1}", "by (auto dest: orbit_contains_rep)"], ["proof (state)\nthis:\n  m \\<in> \\<Union> {N \\<in> orbits. card N = 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fixed_points \\<subseteq> \\<Union> {N \\<in> orbits. card N = 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If @{term G} is a @{term p}-group acting on a finite set, a given orbit is\neither a singleton or @{term p} divides its cardinality.\\<close>"], ["", "lemma p_dvd_orbit_size:\n  assumes orderG:\"order G = p ^ a\"\n  assumes prime:\"prime p\"\n  assumes finM:\"finite M\"\n  assumes Norbit:\"N \\<in> orbits\"\n  assumes \"card N > 1\"\n  shows \"p dvd card N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd card N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd card N", "from Norbit"], ["proof (chain)\npicking this:\n  N \\<in> orbits", "obtain m where m:\"m \\<in> M\" \"N = orbit m\""], ["proof (prove)\nusing this:\n  N \\<in> orbits\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> M; N = orbit m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding orbits_def quotient_def orbit_def"], ["proof (prove)\nusing this:\n  N \\<in> (\\<Union>x\\<in>M. {same_orbit_rel `` {x}})\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> M; N = same_orbit_rel `` {m}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<in> M\n  N = orbit m\n\ngoal (1 subgoal):\n 1. p dvd card N", "from prime"], ["proof (chain)\npicking this:\n  prime p", "have \"0 < p ^ a\""], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. 0 < p ^ a", "by (simp add: prime_gt_0_nat)"], ["proof (state)\nthis:\n  0 < p ^ a\n\ngoal (1 subgoal):\n 1. p dvd card N", "with orderG"], ["proof (chain)\npicking this:\n  order G = p ^ a\n  0 < p ^ a", "have \"finite (carrier G)\""], ["proof (prove)\nusing this:\n  order G = p ^ a\n  0 < p ^ a\n\ngoal (1 subgoal):\n 1. finite (carrier G)", "unfolding order_def"], ["proof (prove)\nusing this:\n  card (carrier G) = p ^ a\n  0 < p ^ a\n\ngoal (1 subgoal):\n 1. finite (carrier G)", "by (metis card.infinite less_nat_zero_code)"], ["proof (state)\nthis:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. p dvd card N", "with m"], ["proof (chain)\npicking this:\n  m \\<in> M\n  N = orbit m\n  finite (carrier G)", "have \"order G = card (orbit m) * card (stabilizer m)\""], ["proof (prove)\nusing this:\n  m \\<in> M\n  N = orbit m\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. order G = card (orbit m) * card (stabilizer m)", "by (metis orbit_size)"], ["proof (state)\nthis:\n  order G = card (orbit m) * card (stabilizer m)\n\ngoal (1 subgoal):\n 1. p dvd card N", "with orderG m"], ["proof (chain)\npicking this:\n  order G = p ^ a\n  m \\<in> M\n  N = orbit m\n  order G = card (orbit m) * card (stabilizer m)", "have \"p ^ a = card N * card (stabilizer m)\""], ["proof (prove)\nusing this:\n  order G = p ^ a\n  m \\<in> M\n  N = orbit m\n  order G = card (orbit m) * card (stabilizer m)\n\ngoal (1 subgoal):\n 1. p ^ a = card N * card (stabilizer m)", "by simp"], ["proof (state)\nthis:\n  p ^ a = card N * card (stabilizer m)\n\ngoal (1 subgoal):\n 1. p dvd card N", "with \\<open>card N > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < card N\n  p ^ a = card N * card (stabilizer m)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < card N\n  p ^ a = card N * card (stabilizer m)\n\ngoal (1 subgoal):\n 1. p dvd card N", "by (metis dvd_mult2 dvd_mult_cancel1 nat_dvd_not_less nat_mult_1 prime \n          prime_dvd_power_nat prime_factor_nat prime_nat_iff zero_less_one)"], ["proof (state)\nthis:\n  p dvd card N\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As a result of the last lemma the only orbits that count modulo\n@{term p} are the fixed points\\<close>"], ["", "lemma fixed_point_congruence:\n  assumes \"order G = p ^ a\"\n  assumes \"prime p\"\n  assumes finM:\"finite M\"\n  shows \"card M mod p = card fixed_points mod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "define big_orbits where \"big_orbits = {N\\<in>orbits. card N > 1}\""], ["proof (state)\nthis:\n  big_orbits = {N \\<in> orbits. 1 < card N}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "from finM"], ["proof (chain)\npicking this:\n  finite M", "have orbit_part:\"orbits = big_orbits \\<union> {N\\<in>orbits. card N = 1}\""], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. orbits = big_orbits \\<union> {N \\<in> orbits. card N = 1}", "unfolding big_orbits_def"], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. orbits =\n    {N \\<in> orbits. 1 < card N} \\<union> {N \\<in> orbits. card N = 1}", "by (auto dest:orbit_not_empty)"], ["proof (state)\nthis:\n  orbits = big_orbits \\<union> {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "have orbit_disj:\"big_orbits \\<inter> {N\\<in>orbits. card N = 1} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. big_orbits \\<inter> {N \\<in> orbits. card N = 1} = {}", "unfolding big_orbits_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {N \\<in> orbits. 1 < card N} \\<inter> {N \\<in> orbits. card N = 1} = {}", "by auto"], ["proof (state)\nthis:\n  big_orbits \\<inter> {N \\<in> orbits. card N = 1} = {}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "from finM"], ["proof (chain)\npicking this:\n  finite M", "have orbits_fin:\"finite orbits\""], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. finite orbits", "by (rule fin_set_imp_fin_orbits)"], ["proof (state)\nthis:\n  finite orbits\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "hence fin_parts:\"finite big_orbits\" \"finite {N\\<in>orbits. card N = 1}\""], ["proof (prove)\nusing this:\n  finite orbits\n\ngoal (1 subgoal):\n 1. finite big_orbits &&& finite {N \\<in> orbits. card N = 1}", "unfolding big_orbits_def"], ["proof (prove)\nusing this:\n  finite orbits\n\ngoal (1 subgoal):\n 1. finite {N \\<in> orbits. 1 < card N} &&&\n    finite {N \\<in> orbits. card N = 1}", "by simp+"], ["proof (state)\nthis:\n  finite big_orbits\n  finite {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "from assms"], ["proof (chain)\npicking this:\n  order G = p ^ a\n  prime p\n  finite M", "have \"\\<And>N. N \\<in> big_orbits \\<Longrightarrow> p dvd card N\""], ["proof (prove)\nusing this:\n  order G = p ^ a\n  prime p\n  finite M\n\ngoal (1 subgoal):\n 1. \\<And>N. N \\<in> big_orbits \\<Longrightarrow> p dvd card N", "unfolding big_orbits_def"], ["proof (prove)\nusing this:\n  order G = p ^ a\n  prime p\n  finite M\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       N \\<in> {N \\<in> orbits. 1 < card N} \\<Longrightarrow> p dvd card N", "by (auto simp: p_dvd_orbit_size)"], ["proof (state)\nthis:\n  ?N \\<in> big_orbits \\<Longrightarrow> p dvd card ?N\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "hence orbit_div:\"\\<And>N. N \\<in> big_orbits \\<Longrightarrow> card N = (card N div p) * p\""], ["proof (prove)\nusing this:\n  ?N \\<in> big_orbits \\<Longrightarrow> p dvd card ?N\n\ngoal (1 subgoal):\n 1. \\<And>N. N \\<in> big_orbits \\<Longrightarrow> card N = card N div p * p", "by (metis dvd_mult_div_cancel mult.commute)"], ["proof (state)\nthis:\n  ?N \\<in> big_orbits \\<Longrightarrow> card ?N = card ?N div p * p\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "have \"card M = card (\\<Union> orbits)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card M = card (\\<Union> orbits)", "unfolding orbits_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card M = card (\\<Union> (M // same_orbit_rel))", "by (metis Union_quotient same_orbit_is_equiv)"], ["proof (state)\nthis:\n  card M = card (\\<Union> orbits)\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "also"], ["proof (state)\nthis:\n  card M = card (\\<Union> orbits)\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "have \"card (\\<Union> orbits) = (\\<Sum>N\\<in>orbits. card N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> orbits) = sum card orbits", "unfolding orbits_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> (M // same_orbit_rel)) = sum card (M // same_orbit_rel)", "proof (rule card_Union_disjoint)"], ["proof (state)\ngoal (2 subgoals):\n 1. pairwise disjnt (M // same_orbit_rel)\n 2. \\<And>A. A \\<in> M // same_orbit_rel \\<Longrightarrow> finite A", "show \"pairwise disjnt (M // same_orbit_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise disjnt (M // same_orbit_rel)", "unfolding pairwise_def disjnt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>M // same_orbit_rel.\n       \\<forall>y\\<in>M // same_orbit_rel.\n          x \\<noteq> y \\<longrightarrow> x \\<inter> y = {}", "by(metis same_orbit_is_equiv quotient_disj)"], ["proof (state)\nthis:\n  pairwise disjnt (M // same_orbit_rel)\n\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> M // same_orbit_rel \\<Longrightarrow> finite A", "show \"\\<And>A. A \\<in> M // same_orbit_rel \\<Longrightarrow> finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> M // same_orbit_rel \\<Longrightarrow> finite A", "using finM same_orbit_rel_def"], ["proof (prove)\nusing this:\n  finite M\n  same_orbit_rel =\n  {p \\<in> M \\<times> M. \\<exists>g\\<in>carrier G. \\<phi> g (snd p) = fst p}\n\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> M // same_orbit_rel \\<Longrightarrow> finite A", "by (auto dest:finite_equiv_class)"], ["proof (state)\nthis:\n  ?A \\<in> M // same_orbit_rel \\<Longrightarrow> finite ?A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card (\\<Union> orbits) = sum card orbits\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "also"], ["proof (state)\nthis:\n  card (\\<Union> orbits) = sum card orbits\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "from orbit_part orbit_disj fin_parts"], ["proof (chain)\npicking this:\n  orbits = big_orbits \\<union> {N \\<in> orbits. card N = 1}\n  big_orbits \\<inter> {N \\<in> orbits. card N = 1} = {}\n  finite big_orbits\n  finite {N \\<in> orbits. card N = 1}", "have \"... = (\\<Sum>N\\<in>big_orbits. card N) + (\\<Sum>N\\<in>{N'\\<in>orbits. card N' = 1}. card N)\""], ["proof (prove)\nusing this:\n  orbits = big_orbits \\<union> {N \\<in> orbits. card N = 1}\n  big_orbits \\<inter> {N \\<in> orbits. card N = 1} = {}\n  finite big_orbits\n  finite {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. sum card orbits =\n    sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1}", "by (metis (lifting) sum.union_disjoint)"], ["proof (state)\nthis:\n  sum card orbits =\n  sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "also"], ["proof (state)\nthis:\n  sum card orbits =\n  sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1}\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "from assms orbit_div fin_parts"], ["proof (chain)\npicking this:\n  order G = p ^ a\n  prime p\n  finite M\n  ?N \\<in> big_orbits \\<Longrightarrow> card ?N = card ?N div p * p\n  finite big_orbits\n  finite {N \\<in> orbits. card N = 1}", "have \"... = (\\<Sum>N\\<in>big_orbits. (card N div p) * p) + card (\\<Union>{N'\\<in>orbits. card N' = 1})\""], ["proof (prove)\nusing this:\n  order G = p ^ a\n  prime p\n  finite M\n  ?N \\<in> big_orbits \\<Longrightarrow> card ?N = card ?N div p * p\n  finite big_orbits\n  finite {N \\<in> orbits. card N = 1}\n\ngoal (1 subgoal):\n 1. sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1} =\n    (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n    card (\\<Union> {N' \\<in> orbits. card N' = 1})", "by (auto simp: card_singleton_set)"], ["proof (state)\nthis:\n  sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1} =\n  (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n  card (\\<Union> {N' \\<in> orbits. card N' = 1})\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "also"], ["proof (state)\nthis:\n  sum card big_orbits + sum card {N' \\<in> orbits. card N' = 1} =\n  (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n  card (\\<Union> {N' \\<in> orbits. card N' = 1})\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "have \"... = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n    card (\\<Union> {N' \\<in> orbits. card N' = 1}) =\n    (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points", "using singleton_orbits"], ["proof (prove)\nusing this:\n  \\<Union> {N \\<in> orbits. card N = 1} = fixed_points\n\ngoal (1 subgoal):\n 1. (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n    card (\\<Union> {N' \\<in> orbits. card N' = 1}) =\n    (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points", "by (auto simp:sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>N\\<in>big_orbits. card N div p * p) +\n  card (\\<Union> {N' \\<in> orbits. card N' = 1}) =\n  (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "finally"], ["proof (chain)\npicking this:\n  card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points", "have \"card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\""], ["proof (prove)\nusing this:\n  card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\n\ngoal (1 subgoal):\n 1. card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points", "."], ["proof (state)\nthis:\n  card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "hence \"card M mod p = ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p\""], ["proof (prove)\nusing this:\n  card M = (\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points\n\ngoal (1 subgoal):\n 1. card M mod p =\n    ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p", "by simp"], ["proof (state)\nthis:\n  card M mod p =\n  ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "also"], ["proof (state)\nthis:\n  card M mod p =\n  ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "have \"... = (card fixed_points) mod p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p =\n    card fixed_points mod p", "by (metis mod_mult_self3)"], ["proof (state)\nthis:\n  ((\\<Sum>N\\<in>big_orbits. card N div p) * p + card fixed_points) mod p =\n  card fixed_points mod p\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "finally"], ["proof (chain)\npicking this:\n  card M mod p = card fixed_points mod p", "show ?thesis"], ["proof (prove)\nusing this:\n  card M mod p = card fixed_points mod p\n\ngoal (1 subgoal):\n 1. card M mod p = card fixed_points mod p", "."], ["proof (state)\nthis:\n  card M mod p = card fixed_points mod p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can restrict any group action to the action of a subgroup:\\<close>"], ["", "lemma subgroup_action:\n  assumes H:\"subgroup H G\"\n  shows \"group_action (G\\<lparr>carrier := H\\<rparr>) \\<phi> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_action (G\\<lparr>carrier := H\\<rparr>) \\<phi> M", "unfolding group_action_def group_action_axioms_def group_hom_def group_hom_axioms_def hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H\\<rparr>) \\<and>\n    Group.group (G\\<lparr>carrier := H\\<rparr>) \\<and>\n    Group.group (BijGroup M) \\<and>\n    \\<phi>\n    \\<in> {h \\<in> carrier (G\\<lparr>carrier := H\\<rparr>) \\<rightarrow>\n                   carrier (BijGroup M).\n           \\<forall>x\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n              \\<forall>y\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n                 h (x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n                    y) =\n                 h x \\<otimes>\\<^bsub>BijGroup M\\<^esub> h y}", "using assms"], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H\\<rparr>) \\<and>\n    Group.group (G\\<lparr>carrier := H\\<rparr>) \\<and>\n    Group.group (BijGroup M) \\<and>\n    \\<phi>\n    \\<in> {h \\<in> carrier (G\\<lparr>carrier := H\\<rparr>) \\<rightarrow>\n                   carrier (BijGroup M).\n           \\<forall>x\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n              \\<forall>y\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n                 h (x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n                    y) =\n                 h x \\<otimes>\\<^bsub>BijGroup M\\<^esub> h y}", "proof (auto simp add: is_group subgroup.subgroup_is_group group_BijGroup)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>subgroup H G; x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> x \\<in> carrier (BijGroup M)\n 2. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>subgroup H G; x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> x \\<in> carrier (BijGroup M)\n 2. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "assume \"x \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>subgroup H G; x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> x \\<in> carrier (BijGroup M)\n 2. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "with H"], ["proof (chain)\npicking this:\n  subgroup H G\n  x \\<in> H", "have \"x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  subgroup H G\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "by (metis subgroup.mem_carrier)"], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>subgroup H G; x \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> x \\<in> carrier (BijGroup M)\n 2. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "with grouphom"], ["proof (chain)\npicking this:\n  group_hom G (BijGroup M) \\<phi>\n  x \\<in> carrier G", "show \"\\<phi> x \\<in> carrier (BijGroup M)\""], ["proof (prove)\nusing this:\n  group_hom G (BijGroup M) \\<phi>\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> x \\<in> carrier (BijGroup M)", "by (metis group_hom.hom_closed)"], ["proof (state)\nthis:\n  \\<phi> x \\<in> carrier (BijGroup M)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "assume x:\"x \\<in> H\" and y:\"y \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n  y \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "with H"], ["proof (chain)\npicking this:\n  subgroup H G\n  x \\<in> H\n  y \\<in> H", "have \"x \\<in> carrier G\" \"y \\<in> carrier G\""], ["proof (prove)\nusing this:\n  subgroup H G\n  x \\<in> H\n  y \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&& y \\<in> carrier G", "by (metis subgroup.mem_carrier)+"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>subgroup H G; x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub>\n                         \\<phi> y", "with grouphom"], ["proof (chain)\npicking this:\n  group_hom G (BijGroup M) \\<phi>\n  x \\<in> carrier G\n  y \\<in> carrier G", "show \"\\<phi> (x \\<otimes> y) = \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> y\""], ["proof (prove)\nusing this:\n  group_hom G (BijGroup M) \\<phi>\n  x \\<in> carrier G\n  y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (x \\<otimes> y) =\n    \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> y", "by (simp add: group_hom.hom_mult)"], ["proof (state)\nthis:\n  \\<phi> (x \\<otimes> y) =\n  \\<phi> x \\<otimes>\\<^bsub>BijGroup M\\<^esub> \\<phi> y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Some Examples for Group Actions\\<close>"], ["", "lemma (in group) right_mult_is_bij:\n  assumes h:\"h \\<in> carrier G\"\n  shows \"(\\<lambda>g \\<in> carrier G. h \\<otimes> g) \\<in> Bij (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) h) (carrier G) \\<in> Bij (carrier G)", "proof(auto simp add:Bij_def bij_betw_def inj_on_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G;\n        h \\<otimes> x = h \\<otimes> y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 3. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "fix x y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G;\n        h \\<otimes> x = h \\<otimes> y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 3. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "assume x:\"x \\<in> carrier G\" and y:\"y \\<in> carrier G\" and \"h \\<otimes> x = h \\<otimes> y\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h \\<otimes> x = h \\<otimes> y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G;\n        h \\<otimes> x = h \\<otimes> y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 3. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "with h"], ["proof (chain)\npicking this:\n  h \\<in> carrier G\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h \\<otimes> x = h \\<otimes> y", "show \"x = y\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n  x \\<in> carrier G\n  y \\<in> carrier G\n  h \\<otimes> x = h \\<otimes> y\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 2. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 2. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 2. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "assume x:\"x \\<in> carrier G\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> carrier G \\<Longrightarrow> h \\<otimes> xa \\<in> carrier G\n 2. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "with h"], ["proof (chain)\npicking this:\n  h \\<in> carrier G\n  x \\<in> carrier G", "show \"h \\<otimes> x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> x \\<in> carrier G", "by (metis m_closed)"], ["proof (state)\nthis:\n  h \\<otimes> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "from x h"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  h \\<in> carrier G", "have \"inv h \\<otimes> x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv h \\<otimes> x \\<in> carrier G", "by (metis m_closed inv_closed)"], ["proof (state)\nthis:\n  inv h \\<otimes> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "moreover"], ["proof (state)\nthis:\n  inv h \\<otimes> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "from x h"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  h \\<in> carrier G", "have \"h \\<otimes> (inv h \\<otimes> x)  = x\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> (inv h \\<otimes> x) = x", "by (metis inv_closed r_inv m_assoc l_one)"], ["proof (state)\nthis:\n  h \\<otimes> (inv h \\<otimes> x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> x \\<in> (\\<otimes>) h ` carrier G", "ultimately"], ["proof (chain)\npicking this:\n  inv h \\<otimes> x \\<in> carrier G\n  h \\<otimes> (inv h \\<otimes> x) = x", "show \"x \\<in> (\\<otimes>) h ` carrier G\""], ["proof (prove)\nusing this:\n  inv h \\<otimes> x \\<in> carrier G\n  h \\<otimes> (inv h \\<otimes> x) = x\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<otimes>) h ` carrier G", "by force"], ["proof (state)\nthis:\n  x \\<in> (\\<otimes>) h ` carrier G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) right_mult_group_action:\n  shows \"group_action G (\\<lambda>h. \\<lambda>g \\<in> carrier G. h \\<otimes> g) (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_action G (\\<lambda>h. restrict ((\\<otimes>) h) (carrier G))\n     (carrier G)", "unfolding group_action_def group_action_axioms_def group_hom_def group_hom_axioms_def hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group G \\<and>\n    Group.group (BijGroup (carrier G)) \\<and>\n    (\\<lambda>h. restrict ((\\<otimes>) h) (carrier G))\n    \\<in> {h \\<in> carrier G \\<rightarrow> carrier (BijGroup (carrier G)).\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) =\n                 h x \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> h y}", "proof(auto simp add:is_group group_BijGroup)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n       \\<in> carrier (BijGroup (carrier G))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "fix h"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n       \\<in> carrier (BijGroup (carrier G))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "assume \"h \\<in> carrier G\""], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n       \\<in> carrier (BijGroup (carrier G))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "thus \"(\\<lambda>g \\<in> carrier G. h \\<otimes> g) \\<in> carrier (BijGroup (carrier G))\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) h) (carrier G)\n    \\<in> carrier (BijGroup (carrier G))", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) h) (carrier G)\n    \\<in> carrier\n           \\<lparr>carrier = Bij (carrier G),\n              monoid.mult =\n                \\<lambda>g\\<in>Bij (carrier G).\n                   restrict (compose (carrier G) g) (Bij (carrier G)),\n              one = \\<lambda>x\\<in>carrier G. x\\<rparr>", "by (auto simp:right_mult_is_bij)"], ["proof (state)\nthis:\n  restrict ((\\<otimes>) h) (carrier G) \\<in> carrier (BijGroup (carrier G))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "assume x:\"x \\<in> carrier G\" and y:\"y \\<in> carrier G\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "define multx multy\n    where \"multx = (\\<lambda>g\\<in>carrier G. x \\<otimes> g)\"\n      and \"multy = (\\<lambda>g\\<in>carrier G. y \\<otimes> g)\""], ["proof (state)\nthis:\n  multx = restrict ((\\<otimes>) x) (carrier G)\n  multy = restrict ((\\<otimes>) y) (carrier G)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "with x y"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  multx = restrict ((\\<otimes>) x) (carrier G)\n  multy = restrict ((\\<otimes>) y) (carrier G)", "have \"multx \\<in> (Bij (carrier G))\" \"multy \\<in> (Bij (carrier G))\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  multx = restrict ((\\<otimes>) x) (carrier G)\n  multy = restrict ((\\<otimes>) y) (carrier G)\n\ngoal (1 subgoal):\n 1. multx \\<in> Bij (carrier G) &&& multy \\<in> Bij (carrier G)", "by (metis right_mult_is_bij)+"], ["proof (state)\nthis:\n  multx \\<in> Bij (carrier G)\n  multy \\<in> Bij (carrier G)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "hence \"multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy = (\\<lambda>g\\<in>carrier G. multx (multy g))\""], ["proof (prove)\nusing this:\n  multx \\<in> Bij (carrier G)\n  multy \\<in> Bij (carrier G)\n\ngoal (1 subgoal):\n 1. multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy =\n    (\\<lambda>g\\<in>carrier G. multx (multy g))", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  multx \\<in> Bij (carrier G)\n  multy \\<in> Bij (carrier G)\n\ngoal (1 subgoal):\n 1. multx \\<otimes>\\<^bsub>\\<lparr>carrier = Bij (carrier G), monoid.mult = \\<lambda>g\\<in>Bij (carrier G). restrict (compose (carrier G) g) (Bij (carrier G)), one = \\<lambda>x\\<in>carrier G. x\\<rparr>\\<^esub>\n    multy =\n    (\\<lambda>g\\<in>carrier G. multx (multy g))", "by (auto simp: compose_def)"], ["proof (state)\nthis:\n  multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy =\n  (\\<lambda>g\\<in>carrier G. multx (multy g))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "also"], ["proof (state)\nthis:\n  multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy =\n  (\\<lambda>g\\<in>carrier G. multx (multy g))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "have \"... = (\\<lambda>g\\<in>carrier G. (x \\<otimes> y) \\<otimes> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G. multx (multy g)) =\n    restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)", "unfolding multx_def multy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>g\\<in>carrier G.\n        restrict ((\\<otimes>) x) (carrier G)\n         (restrict ((\\<otimes>) y) (carrier G) g)) =\n    restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)", "proof(rule restrict_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n        (restrict ((\\<otimes>) y) (carrier G) g) =\n       x \\<otimes> y \\<otimes> g", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n        (restrict ((\\<otimes>) y) (carrier G) g) =\n       x \\<otimes> y \\<otimes> g", "assume g:\"g \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n        (restrict ((\\<otimes>) y) (carrier G) g) =\n       x \\<otimes> y \\<otimes> g", "with x y"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  g \\<in> carrier G", "have \"x \\<otimes> y \\<in> carrier G\" \"y \\<otimes> g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> carrier G &&& y \\<otimes> g \\<in> carrier G", "by simp+"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> carrier G\n  y \\<otimes> g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> carrier G \\<Longrightarrow>\n       restrict ((\\<otimes>) x) (carrier G)\n        (restrict ((\\<otimes>) y) (carrier G) g) =\n       x \\<otimes> y \\<otimes> g", "with x y g"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  g \\<in> carrier G\n  x \\<otimes> y \\<in> carrier G\n  y \\<otimes> g \\<in> carrier G", "show \"(\\<lambda>g\\<in>carrier G. x \\<otimes> g) ((\\<lambda>g\\<in>carrier G. y \\<otimes> g) g) = x \\<otimes> y \\<otimes> g\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  g \\<in> carrier G\n  x \\<otimes> y \\<in> carrier G\n  y \\<otimes> g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) x) (carrier G)\n     (restrict ((\\<otimes>) y) (carrier G) g) =\n    x \\<otimes> y \\<otimes> g", "by (auto simp:m_assoc)"], ["proof (state)\nthis:\n  restrict ((\\<otimes>) x) (carrier G)\n   (restrict ((\\<otimes>) y) (carrier G) g) =\n  x \\<otimes> y \\<otimes> g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>g\\<in>carrier G. multx (multy g)) =\n  restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> restrict ((\\<otimes>) (x \\<otimes> y))\n                          (carrier G) =\n                         restrict ((\\<otimes>) x)\n                          (carrier\n                            G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n                         restrict ((\\<otimes>) y) (carrier G)", "finally"], ["proof (chain)\npicking this:\n  multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy =\n  restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)", "show \"(\\<lambda>g\\<in>carrier G. (x \\<otimes> y) \\<otimes> g) = (\\<lambda>g\\<in>carrier G. x \\<otimes> g) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> (\\<lambda>g\\<in>carrier G. y \\<otimes> g)\""], ["proof (prove)\nusing this:\n  multx \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub> multy =\n  restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)\n\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G) =\n    restrict ((\\<otimes>) x)\n     (carrier G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n    restrict ((\\<otimes>) y) (carrier G)", "unfolding multx_def multy_def"], ["proof (prove)\nusing this:\n  restrict ((\\<otimes>) x)\n   (carrier G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n  restrict ((\\<otimes>) y) (carrier G) =\n  restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G)\n\ngoal (1 subgoal):\n 1. restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G) =\n    restrict ((\\<otimes>) x)\n     (carrier G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n    restrict ((\\<otimes>) y) (carrier G)", "by simp"], ["proof (state)\nthis:\n  restrict ((\\<otimes>) (x \\<otimes> y)) (carrier G) =\n  restrict ((\\<otimes>) x)\n   (carrier G) \\<otimes>\\<^bsub>BijGroup (carrier G)\\<^esub>\n  restrict ((\\<otimes>) y) (carrier G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) rcosets_closed:\n  assumes HG:\"subgroup H G\"\n  assumes g:\"g \\<in> carrier G\"\n  assumes M:\"M \\<in> rcosets H\"\n  shows \"M #> g \\<in> rcosets H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "from M"], ["proof (chain)\npicking this:\n  M \\<in> rcosets H", "obtain h where h:\"h \\<in> carrier G\" \"M = H #> h\""], ["proof (prove)\nusing this:\n  M \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; M = H #> h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  M \\<in> (\\<Union>a\\<in>carrier G. {H #> a})\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> carrier G; M = H #> h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> carrier G\n  M = H #> h\n\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "with g HG"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  subgroup H G\n  h \\<in> carrier G\n  M = H #> h", "have \"M #> g = H #> (h \\<otimes> g)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  subgroup H G\n  h \\<in> carrier G\n  M = H #> h\n\ngoal (1 subgoal):\n 1. M #> g = H #> h \\<otimes> g", "by (metis coset_mult_assoc subgroup.subset)"], ["proof (state)\nthis:\n  M #> g = H #> h \\<otimes> g\n\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "with HG g h"], ["proof (chain)\npicking this:\n  subgroup H G\n  g \\<in> carrier G\n  h \\<in> carrier G\n  M = H #> h\n  M #> g = H #> h \\<otimes> g", "show \"M #> g \\<in> rcosets H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  g \\<in> carrier G\n  h \\<in> carrier G\n  M = H #> h\n  M #> g = H #> h \\<otimes> g\n\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "by (metis rcosetsI subgroup.m_closed subgroup.subset subgroup_self)"], ["proof (state)\nthis:\n  M #> g \\<in> rcosets H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) inv_mult_on_rcosets_is_bij:\n  assumes HG:\"subgroup H G\"\n  assumes g:\"g \\<in> carrier G\"\n  shows \"(\\<lambda>U \\<in> rcosets H. U #> inv g) \\<in> Bij (rcosets H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv g) \\<in> Bij (rcosets H)", "proof(auto simp add:Bij_def bij_betw_def inj_on_def)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>xa.\n       xa \\<in> rcosets H \\<Longrightarrow> xa #> inv g \\<in> rcosets H\n 4. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "fix M"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>xa.\n       xa \\<in> rcosets H \\<Longrightarrow> xa #> inv g \\<in> rcosets H\n 4. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "assume \"M \\<in> rcosets H\""], ["proof (state)\nthis:\n  M \\<in> rcosets H\n\ngoal (4 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>xa.\n       xa \\<in> rcosets H \\<Longrightarrow> xa #> inv g \\<in> rcosets H\n 4. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "with HG g"], ["proof (chain)\npicking this:\n  subgroup H G\n  g \\<in> carrier G\n  M \\<in> rcosets H", "show \"M #> inv g \\<in> rcosets H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  g \\<in> carrier G\n  M \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. M #> inv g \\<in> rcosets H", "by (metis inv_closed rcosets_closed)"], ["proof (state)\nthis:\n  M #> inv g \\<in> rcosets H\n\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "fix M"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "assume M:\"M \\<in> rcosets H\""], ["proof (state)\nthis:\n  M \\<in> rcosets H\n\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "with HG g"], ["proof (chain)\npicking this:\n  subgroup H G\n  g \\<in> carrier G\n  M \\<in> rcosets H", "have \"M #> g \\<in> rcosets H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  g \\<in> carrier G\n  M \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. M #> g \\<in> rcosets H", "by (rule rcosets_closed)"], ["proof (state)\nthis:\n  M #> g \\<in> rcosets H\n\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "moreover"], ["proof (state)\nthis:\n  M #> g \\<in> rcosets H\n\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "from M HG g"], ["proof (chain)\npicking this:\n  M \\<in> rcosets H\n  subgroup H G\n  g \\<in> carrier G", "have \"M #> g #> inv g = M\""], ["proof (prove)\nusing this:\n  M \\<in> rcosets H\n  subgroup H G\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. M #> g #> inv g = M", "by (metis coset_mult_assoc coset_mult_inv2 inv_closed is_group subgroup.rcosets_carrier)"], ["proof (state)\nthis:\n  M #> g #> inv g = M\n\ngoal (3 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       x \\<in> rcosets H \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x #> inv g) ` (rcosets H)", "ultimately"], ["proof (chain)\npicking this:\n  M #> g \\<in> rcosets H\n  M #> g #> inv g = M", "show \" M \\<in> (\\<lambda>U. U #> inv g) ` (rcosets H)\""], ["proof (prove)\nusing this:\n  M #> g \\<in> rcosets H\n  M #> g #> inv g = M\n\ngoal (1 subgoal):\n 1. M \\<in> (\\<lambda>U. U #> inv g) ` (rcosets H)", "by auto"], ["proof (state)\nthis:\n  M \\<in> (\\<lambda>U. U #> inv g) ` (rcosets H)\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "fix M N x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "assume M:\"M \\<in> rcosets H\" and N:\"N \\<in> rcosets H\" and \"M #> inv g = N #> inv g\""], ["proof (state)\nthis:\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  M #> inv g = N #> inv g\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "hence \"(M #> inv g) #> g = (N #> inv g) #> g\""], ["proof (prove)\nusing this:\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  M #> inv g = N #> inv g\n\ngoal (1 subgoal):\n 1. M #> inv g #> g = N #> inv g #> g", "by simp"], ["proof (state)\nthis:\n  M #> inv g #> g = N #> inv g #> g\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "with HG M N g"], ["proof (chain)\npicking this:\n  subgroup H G\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  g \\<in> carrier G\n  M #> inv g #> g = N #> inv g #> g", "have \"M #> (inv g \\<otimes> g) = N #> (inv g \\<otimes> g)\""], ["proof (prove)\nusing this:\n  subgroup H G\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  g \\<in> carrier G\n  M #> inv g #> g = N #> inv g #> g\n\ngoal (1 subgoal):\n 1. M #> inv g \\<otimes> g = N #> inv g \\<otimes> g", "by (metis coset_mult_assoc is_group subgroup.m_inv_closed subgroup.rcosets_carrier subgroup_self)"], ["proof (state)\nthis:\n  M #> inv g \\<otimes> g = N #> inv g \\<otimes> g\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "with HG M N g"], ["proof (chain)\npicking this:\n  subgroup H G\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  g \\<in> carrier G\n  M #> inv g \\<otimes> g = N #> inv g \\<otimes> g", "have a1:\"M = N\""], ["proof (prove)\nusing this:\n  subgroup H G\n  M \\<in> rcosets H\n  N \\<in> rcosets H\n  g \\<in> carrier G\n  M #> inv g \\<otimes> g = N #> inv g \\<otimes> g\n\ngoal (1 subgoal):\n 1. M = N", "by (metis l_inv coset_mult_one is_group subgroup.rcosets_carrier)"], ["proof (state)\nthis:\n  M = N\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "{"], ["proof (state)\nthis:\n  M = N\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "assume \"x \\<in> M\""], ["proof (state)\nthis:\n  x \\<in> M\n\ngoal (2 subgoals):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> y\n 2. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "with a1"], ["proof (chain)\npicking this:\n  M = N\n  x \\<in> M", "show \"x \\<in> N\""], ["proof (prove)\nusing this:\n  M = N\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. x \\<in> N", "by simp"], ["proof (state)\nthis:\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "}"], ["proof (state)\nthis:\n  x \\<in> M \\<Longrightarrow> x \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "{"], ["proof (state)\nthis:\n  x \\<in> M \\<Longrightarrow> x \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "assume \"x \\<in> N\""], ["proof (state)\nthis:\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>x y xa.\n       \\<lbrakk>x \\<in> rcosets H; y \\<in> rcosets H;\n        x #> inv g = y #> inv g; xa \\<in> y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "with a1"], ["proof (chain)\npicking this:\n  M = N\n  x \\<in> N", "show \"x \\<in> M\""], ["proof (prove)\nusing this:\n  M = N\n  x \\<in> N\n\ngoal (1 subgoal):\n 1. x \\<in> M", "by simp"], ["proof (state)\nthis:\n  x \\<in> M\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  x \\<in> N \\<Longrightarrow> x \\<in> M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) inv_mult_on_rcosets_action:\n  assumes HG:\"subgroup H G\"\n  shows \"group_action G (\\<lambda>g. \\<lambda>U \\<in> rcosets H. U #> inv g) (rcosets H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_action G (\\<lambda>g. \\<lambda>U\\<in>rcosets H. U #> inv g)\n     (rcosets H)", "unfolding group_action_def group_action_axioms_def group_hom_def group_hom_axioms_def hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group G \\<and>\n    Group.group (BijGroup (rcosets H)) \\<and>\n    (\\<lambda>g. \\<lambda>U\\<in>rcosets H. U #> inv g)\n    \\<in> {h \\<in> carrier G \\<rightarrow> carrier (BijGroup (rcosets H)).\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) =\n                 h x \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> h y}", "proof(auto simp add:is_group group_BijGroup)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n       \\<in> carrier (BijGroup (rcosets H))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "fix h"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n       \\<in> carrier (BijGroup (rcosets H))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "assume \"h \\<in> carrier G\""], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n       \\<in> carrier (BijGroup (rcosets H))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "with HG"], ["proof (chain)\npicking this:\n  subgroup H G\n  h \\<in> carrier G", "show \"(\\<lambda>U \\<in> rcosets H. U #> inv h) \\<in> carrier (BijGroup (rcosets H))\""], ["proof (prove)\nusing this:\n  subgroup H G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv h)\n    \\<in> carrier (BijGroup (rcosets H))", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  subgroup H G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv h)\n    \\<in> carrier\n           \\<lparr>carrier = Bij (rcosets H),\n              monoid.mult =\n                \\<lambda>g\\<in>Bij (rcosets H).\n                   restrict (compose (rcosets H) g) (Bij (rcosets H)),\n              one = \\<lambda>x\\<in>rcosets H. x\\<rparr>", "by (auto simp:inv_mult_on_rcosets_is_bij)"], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. U #> inv h)\n  \\<in> carrier (BijGroup (rcosets H))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "assume x:\"x \\<in> carrier G\" and y:\"y \\<in> carrier G\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "define cosx cosy\n    where \"cosx = (\\<lambda>U\\<in>rcosets H. U #> inv x)\"\n      and \"cosy = (\\<lambda>U\\<in>rcosets H. U #> inv y)\""], ["proof (state)\nthis:\n  cosx = (\\<lambda>U\\<in>rcosets H. U #> inv x)\n  cosy = (\\<lambda>U\\<in>rcosets H. U #> inv y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "with x y HG"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  subgroup H G\n  cosx = (\\<lambda>U\\<in>rcosets H. U #> inv x)\n  cosy = (\\<lambda>U\\<in>rcosets H. U #> inv y)", "have \"cosx \\<in> (Bij (rcosets H))\" \"cosy \\<in> (Bij (rcosets H))\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  subgroup H G\n  cosx = (\\<lambda>U\\<in>rcosets H. U #> inv x)\n  cosy = (\\<lambda>U\\<in>rcosets H. U #> inv y)\n\ngoal (1 subgoal):\n 1. cosx \\<in> Bij (rcosets H) &&& cosy \\<in> Bij (rcosets H)", "by (metis inv_mult_on_rcosets_is_bij)+"], ["proof (state)\nthis:\n  cosx \\<in> Bij (rcosets H)\n  cosy \\<in> Bij (rcosets H)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "hence \"cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy = (\\<lambda>U\\<in>rcosets H. cosx (cosy U))\""], ["proof (prove)\nusing this:\n  cosx \\<in> Bij (rcosets H)\n  cosy \\<in> Bij (rcosets H)\n\ngoal (1 subgoal):\n 1. cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy =\n    (\\<lambda>U\\<in>rcosets H. cosx (cosy U))", "unfolding BijGroup_def"], ["proof (prove)\nusing this:\n  cosx \\<in> Bij (rcosets H)\n  cosy \\<in> Bij (rcosets H)\n\ngoal (1 subgoal):\n 1. cosx \\<otimes>\\<^bsub>\\<lparr>carrier = Bij (rcosets H), monoid.mult = \\<lambda>g\\<in>Bij (rcosets H). restrict (compose (rcosets H) g) (Bij (rcosets H)), one = \\<lambda>x\\<in>rcosets H. x\\<rparr>\\<^esub>\n    cosy =\n    (\\<lambda>U\\<in>rcosets H. cosx (cosy U))", "by (auto simp: compose_def)"], ["proof (state)\nthis:\n  cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy =\n  (\\<lambda>U\\<in>rcosets H. cosx (cosy U))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "also"], ["proof (state)\nthis:\n  cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy =\n  (\\<lambda>U\\<in>rcosets H. cosx (cosy U))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "have \"... = (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. cosx (cosy U)) =\n    (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))", "unfolding cosx_def cosy_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H.\n        (\\<lambda>U\\<in>rcosets H. U #> inv x)\n         ((\\<lambda>U\\<in>rcosets H. U #> inv y) U)) =\n    (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))", "proof(rule restrict_ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "assume U:\"U \\<in> rcosets H\""], ["proof (state)\nthis:\n  U \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "with HG y"], ["proof (chain)\npicking this:\n  subgroup H G\n  y \\<in> carrier G\n  U \\<in> rcosets H", "have \"U #> inv y \\<in> rcosets H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  y \\<in> carrier G\n  U \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. U #> inv y \\<in> rcosets H", "by (metis inv_closed rcosets_closed)"], ["proof (state)\nthis:\n  U #> inv y \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "with x y HG U"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  subgroup H G\n  U \\<in> rcosets H\n  U #> inv y \\<in> rcosets H", "have \"(\\<lambda>U\\<in>rcosets H. U #> inv x) ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) = U #> inv y #> inv x\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  subgroup H G\n  U \\<in> rcosets H\n  U #> inv y \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv x)\n     ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n    U #> inv y #> inv x", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. U #> inv x)\n   ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n  U #> inv y #> inv x\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "also"], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. U #> inv x)\n   ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n  U #> inv y #> inv x\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "from x y U HG"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  U \\<in> rcosets H\n  subgroup H G", "have \"... = U #> inv (x \\<otimes> y)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  U \\<in> rcosets H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. U #> inv y #> inv x = U #> inv (x \\<otimes> y)", "by (metis inv_mult_group coset_mult_assoc inv_closed is_group subgroup.rcosets_carrier)"], ["proof (state)\nthis:\n  U #> inv y #> inv x = U #> inv (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. \\<And>U.\n       U \\<in> rcosets H \\<Longrightarrow>\n       (\\<lambda>U\\<in>rcosets H. U #> inv x)\n        ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n       U #> inv (x \\<otimes> y)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>U\\<in>rcosets H. U #> inv x)\n   ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n  U #> inv (x \\<otimes> y)", "show \"(\\<lambda>U\\<in>rcosets H. U #> inv x) ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) = U #> inv (x \\<otimes> y)\""], ["proof (prove)\nusing this:\n  (\\<lambda>U\\<in>rcosets H. U #> inv x)\n   ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n  U #> inv (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv x)\n     ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n    U #> inv (x \\<otimes> y)", "."], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. U #> inv x)\n   ((\\<lambda>U\\<in>rcosets H. U #> inv y) U) =\n  U #> inv (x \\<otimes> y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. cosx (cosy U)) =\n  (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>U\\<in>rcosets H.\n                             U #> inv (x \\<otimes> y)) =\n                         (\\<lambda>U\\<in>rcosets H.\n                             U #>\n                             inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n                         (\\<lambda>U\\<in>rcosets H. U #> inv y)", "finally"], ["proof (chain)\npicking this:\n  cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy =\n  (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))", "show \"(\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y)) = (\\<lambda>U\\<in>rcosets H. U #> inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> (\\<lambda>U\\<in>rcosets H. U #> inv y)\""], ["proof (prove)\nusing this:\n  cosx \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub> cosy =\n  (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y)) =\n    (\\<lambda>U\\<in>rcosets H.\n        U #> inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n    (\\<lambda>U\\<in>rcosets H. U #> inv y)", "unfolding cosx_def cosy_def"], ["proof (prove)\nusing this:\n  (\\<lambda>U\\<in>rcosets H.\n      U #> inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n  (\\<lambda>U\\<in>rcosets H. U #> inv y) =\n  (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y))\n\ngoal (1 subgoal):\n 1. (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y)) =\n    (\\<lambda>U\\<in>rcosets H.\n        U #> inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n    (\\<lambda>U\\<in>rcosets H. U #> inv y)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>U\\<in>rcosets H. U #> inv (x \\<otimes> y)) =\n  (\\<lambda>U\\<in>rcosets H.\n      U #> inv x) \\<otimes>\\<^bsub>BijGroup (rcosets H)\\<^esub>\n  (\\<lambda>U\\<in>rcosets H. U #> inv y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}