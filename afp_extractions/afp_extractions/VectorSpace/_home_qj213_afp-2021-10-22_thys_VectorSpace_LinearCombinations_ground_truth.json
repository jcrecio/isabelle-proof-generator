{"file_name": "/home/qj213/afp-2021-10-22/thys/VectorSpace/LinearCombinations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VectorSpace", "problem_names": ["lemma (in ring) coeff_in_ring:\n  \"\\<lbrakk>a\\<in>A\\<rightarrow>carrier R; x\\<in>A\\<rbrakk> \\<Longrightarrow> a x \\<in>carrier R\"", "lemma (in ring) coeff_in_ring2:\n  \"\\<lbrakk> x\\<in>A;a\\<in>A\\<rightarrow>carrier R\\<rbrakk> \\<Longrightarrow> a x \\<in>carrier R\"", "lemma ring_subset_carrier:\n  \"\\<lbrakk>x \\<in>A; A\\<subseteq>carrier R\\<rbrakk> \\<Longrightarrow> x \\<in>carrier R\"", "lemma disj_if:\n  \"\\<lbrakk>A\\<inter>B={}; x\\<in> B\\<rbrakk> \\<Longrightarrow> (if x\\<in>A then f x else g x) = g x\"", "lemmas (in module) sum_simp = ring_subset_carrier", "lemma (in module) summands_valid:\n  fixes A a\n  assumes h2: \"A\\<subseteq> carrier M\" and h3: \"a\\<in>(A\\<rightarrow>carrier R)\"\n  shows \"\\<forall> v\\<in> A. (((a v) \\<odot>\\<^bsub>M\\<^esub> v)\\<in> carrier M)\"", "lemma (in module) lincomb_closed [simp, intro]:\n  fixes S a\n  assumes h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<rightarrow>carrier R)\"\n  shows \"lincomb a S \\<in> carrier M\"", "lemma (in comm_monoid) finprod_cong2:\n  \"[| A = B; \n      !!i. i \\<in> B ==> f i = g i; f \\<in> B \\<rightarrow> carrier G|] ==> \nfinprod G f A = finprod G g B\"", "lemmas (in abelian_monoid) finsum_cong2 = add.finprod_cong2", "lemma (in module) lincomb_cong:\n  assumes h2: \"A=B\" and h3: \"A \\<subseteq> carrier M\" \n    and h4: \"\\<And>v. v\\<in>A \\<Longrightarrow> a v = b v\" and h5: \"b\\<in> B\\<rightarrow>carrier R\"\n  shows \"lincomb a A = lincomb b B\"", "lemma (in module) lincomb_union:\n  fixes a A B \n  assumes h1: \"finite (A\\<union> B)\"  and h3: \"A\\<union>B \\<subseteq> carrier M\" \n    and h4: \"A\\<inter>B={}\" and h5: \"a\\<in>(A\\<union>B\\<rightarrow>carrier R)\"\n  shows \"lincomb a (A\\<union>B) = lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb a B\"", "lemma (in module) lincomb_union2:\n  fixes a b A B \n  assumes h1: \"finite (A\\<union> B)\"  and h3: \"A\\<union>B \\<subseteq> carrier M\" \n    and h4: \"A\\<inter>B={}\" and h5: \"a\\<in>A\\<rightarrow>carrier R\" and h6: \"b\\<in>B\\<rightarrow>carrier R\"\n  shows \"lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B = lincomb (\\<lambda>v. if (v\\<in>A) then a v else b v) (A\\<union>B)\"\n    (is \"lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B = lincomb ?c (A\\<union>B)\")", "lemma (in module) lincomb_del2:\n  fixes S a v\n  assumes h1: \"finite S\" and h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<rightarrow>carrier R)\" and h4:\"v\\<in>S\"\n  shows \"lincomb a S = ((a v) \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> lincomb a (S-{v})\"", "lemma (in module) lincomb_insert:\n  fixes S a v\n  assumes h1: \"finite S\" and h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<union>{v}\\<rightarrow>carrier R)\" and h4:\"v\\<notin>S\" and \nh5:\"v\\<in> carrier M\"\n  shows \"lincomb a (S\\<union>{v}) = ((a v) \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> lincomb a S\"", "lemma (in module) lincomb_elim_if [simp]:\n  fixes b c S\n  assumes h1: \"S \\<subseteq> carrier M\" and h2: \"\\<And>v. v\\<in>S\\<Longrightarrow> \\<not>P v\" and h3: \"c\\<in>S\\<rightarrow>carrier R\"\n  shows \"lincomb (\\<lambda>w. if P w then b w else c w) S = lincomb c S\"", "lemma (in module) lincomb_smult:\n  fixes A c\n  assumes h2: \"A\\<subseteq>carrier M\"  and h3: \"a\\<in>A\\<rightarrow>carrier R\" and h4: \"c\\<in>carrier R\"\n  shows \"lincomb (\\<lambda>w. c\\<otimes>\\<^bsub>R\\<^esub> a w) A = c\\<odot>\\<^bsub>M\\<^esub> (lincomb a A)\"", "lemma (in module) finite_lin_dep: \n  fixes S\n  assumes finS:\"finite S\" and ld: \"lin_dep S\" and inC: \"S\\<subseteq>carrier M\"\n  shows \"\\<exists>a v. (a\\<in> (S\\<rightarrow>carrier R)) \\<and> (lincomb a S = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>S) \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>)\"", "lemma (in module) lin_dep_crit: \n  fixes A S a v\n  assumes fin: \"finite A\" and subset: \"A\\<subseteq>S\" and h1: \"(a\\<in> (A\\<rightarrow>carrier R))\" and h2: \"v\\<in> A\" \n    and h3:\"a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>\" and h4: \"(lincomb a A = \\<zero>\\<^bsub>M\\<^esub>)\"\n  shows \"lin_dep S\"", "lemma (in module) finite_lin_indpt2:\n  fixes A \n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and\n    lc0: \"\\<And>a. a\\<in> (A\\<rightarrow>carrier R) \\<Longrightarrow> (lincomb a A = \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow> (\\<forall> v\\<in>A. a v= \\<zero>\\<^bsub>R\\<^esub>)\"\n  shows \"lin_indpt A\"", "lemma (in module) zero_lin_dep: \n  assumes 0: \"\\<zero>\\<^bsub>M\\<^esub> \\<in> S\" and nonzero: \"carrier R \\<noteq> {\\<zero>\\<^bsub>R\\<^esub>}\"\n  shows \"lin_dep S\"", "lemma (in module) zero_nin_lin_indpt: \n  assumes h2: \"S\\<subseteq>carrier M\" and li: \"\\<not>(lin_dep S)\" and nonzero: \"carrier R \\<noteq> {\\<zero>\\<^bsub>R\\<^esub>}\"\n  shows \"\\<zero>\\<^bsub>M\\<^esub> \\<notin> S\"", "lemma (in module) finite_span:\n  assumes fin: \"finite S\" and inC: \"S\\<subseteq>carrier M\"\n  shows \"span S = {lincomb a S | a. a\\<in> (S\\<rightarrow>carrier R)}\"", "lemma (in module) in_span:\n  fixes S v\n  assumes  h2: \"S\\<subseteq>carrier V\" and h3: \"v\\<in>span S\"\n  shows \"\\<exists>a A. (A\\<subseteq>S \\<and> (a\\<in>A\\<rightarrow>carrier R) \\<and> (lincomb a A=v))\"", "lemma (in module) finite_in_span:\n  fixes S v\n  assumes fin: \"finite S\" and h2: \"S\\<subseteq>carrier M\" and h3: \"v\\<in>span S\"\n  shows \"\\<exists>a. (a\\<in>S\\<rightarrow>carrier R) \\<and> (lincomb a S=v)\"", "lemma (in module) lincomb_must_include:\n  fixes A S T b v\n  assumes  inC: \"T\\<subseteq>carrier M\" and li: \"lin_indpt S\" and Ssub: \"S\\<subseteq>T\" and Ssub: \"A\\<subseteq>T\"\n    and fin: \"finite A\"\n    and b: \"b\\<in>A\\<rightarrow>carrier R\" and lc: \"lincomb b A=\\<zero>\\<^bsub>M\\<^esub>\" and v_in: \"v\\<in>A\"\n    and nz_coeff: \"b v\\<noteq>\\<zero>\\<^bsub>R\\<^esub>\"\n  shows \"\\<exists>w\\<in>A-S. b w\\<noteq>\\<zero>\\<^bsub>R\\<^esub>\"", "lemma module_criteria:\n  fixes R and M \n  assumes cring: \"cring R\"\n      and zero: \"\\<zero>\\<^bsub>M\\<^esub>\\<in> carrier M\" \n      and add: \"\\<forall>v w. v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> v\\<oplus>\\<^bsub>M\\<^esub> w\\<in> carrier M\"\n      and neg: \"\\<forall>v\\<in>carrier M. (\\<exists>neg_v\\<in>carrier M. v\\<oplus>\\<^bsub>M\\<^esub>neg_v=\\<zero>\\<^bsub>M\\<^esub>)\"\n      and smult: \"\\<forall>c v. c\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> c\\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\"\n      and comm: \"\\<forall>v w. v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> v\\<oplus>\\<^bsub>M\\<^esub> w=w\\<oplus>\\<^bsub>M\\<^esub> v\"\n      and assoc: \"\\<forall>v w x. v\\<in>carrier M \\<and> w\\<in>carrier M \\<and> x\\<in>carrier M\\<longrightarrow> (v\\<oplus>\\<^bsub>M\\<^esub> w)\\<oplus>\\<^bsub>M\\<^esub> x= v\\<oplus>\\<^bsub>M\\<^esub> (w\\<oplus>\\<^bsub>M\\<^esub> x)\"\n      and add_id: \"\\<forall>v\\<in>carrier M. (v\\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> =v)\"\n      and compat: \"\\<forall>a b v. a\\<in> carrier R \\<and> b\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> (a\\<otimes>\\<^bsub>R\\<^esub> b)\\<odot>\\<^bsub>M\\<^esub> v =a\\<odot>\\<^bsub>M\\<^esub> (b\\<odot>\\<^bsub>M\\<^esub> v)\"\n      and smult_id: \"\\<forall>v\\<in>carrier M. (\\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v =v)\"\n      and dist_f: \"\\<forall>a b v. a\\<in> carrier R \\<and> b\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> (a\\<oplus>\\<^bsub>R\\<^esub> b)\\<odot>\\<^bsub>M\\<^esub> v =(a\\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (b\\<odot>\\<^bsub>M\\<^esub> v)\"\n      and dist_add: \"\\<forall>a v w. a\\<in> carrier R \\<and> v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> a\\<odot>\\<^bsub>M\\<^esub> (v\\<oplus>\\<^bsub>M\\<^esub> w) =(a\\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (a\\<odot>\\<^bsub>M\\<^esub> w)\"\n  shows \"module R M\"", "lemma (in module) carrier_vs_is_self [simp]:\n  \"carrier (md N) = N\"", "lemma (in module) submodule_is_module:\n  fixes N::\"'c set\"\n  assumes 0: \"submodule R N M\"\n  shows \"module R (md N)\"", "lemma module_hom_closed: \"f\\<in> module_hom R M N \\<Longrightarrow> f\\<in> carrier M \\<rightarrow> carrier N\"", "lemma module_hom_add: \"\\<lbrakk>f\\<in> module_hom R M N; m1\\<in>carrier M; m2\\<in>carrier M \\<rbrakk> \\<Longrightarrow> f (m1 \\<oplus>\\<^bsub>M\\<^esub> m2) = (f m1) \\<oplus>\\<^bsub>N\\<^esub> (f m2)\"", "lemma module_hom_smult: \"\\<lbrakk>f\\<in> module_hom R M N; r\\<in>carrier R; m\\<in>carrier M \\<rbrakk>  \\<Longrightarrow> f (r \\<odot>\\<^bsub>M\\<^esub> m) = r \\<odot>\\<^bsub>N\\<^esub> (f m)\"", "lemma f_im [simp, intro]: \nassumes \"v \\<in> carrier M\" (*doesn't work if \\<Longrightarrow>*)\nshows \"f v \\<in> carrier N\"", "lemma f0_is_0[simp]: \"f \\<zero>\\<^bsub>M\\<^esub>=\\<zero>\\<^bsub>N\\<^esub>\"", "lemma f_neg [simp]: \"v \\<in> carrier M\\<Longrightarrow>f (\\<ominus>\\<^bsub>M\\<^esub> v) = \\<ominus>\\<^bsub>N\\<^esub> f v\"", "lemma f_minus [simp]: \"\\<lbrakk>v\\<in>carrier M; w\\<in>carrier M\\<rbrakk>\\<Longrightarrow>f (v\\<ominus>\\<^bsub>M\\<^esub>w) = f v \\<ominus>\\<^bsub>N\\<^esub> f w\"", "lemma ker_is_submodule: \"submodule R ker M\"", "lemma im_is_submodule: \"submodule R im N\"", "lemma (in mod_hom) f_ker:\n  \"v\\<in>ker \\<Longrightarrow> f v=\\<zero>\\<^bsub>N\\<^esub>\"", "lemma (in cring) func_space_is_module:\n  fixes S\n  shows \"module R (func_space S)\"", "lemma (in module) lincomb_is_mod_hom:\n  fixes S\n  assumes h: \"finite S\" and h2: \"S\\<subseteq>carrier M\"\n  shows \"mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)\"", "lemma (in module) lincomb_sum:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and a_fun: \"a\\<in>A\\<rightarrow>carrier R\" and \n    b_fun: \"b\\<in>A\\<rightarrow>carrier R\" \n  shows \"lincomb (\\<lambda>v. a v \\<oplus>\\<^bsub>R\\<^esub> b v) A = lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\"", "lemma (in cring) func_space_neg: \n  fixes f\n  assumes \"f\\<in> carrier (func_space S)\"\n  shows \"\\<ominus>\\<^bsub>func_space S\\<^esub> f = (\\<lambda> v. if (v\\<in>S) then \\<ominus>\\<^bsub>R\\<^esub> f v else undefined)\"", "lemma (in module) lincomb_diff:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and a_fun: \"a\\<in>A\\<rightarrow>carrier R\" and \n    b_fun: \"b\\<in>A\\<rightarrow>carrier R\" \n  shows \"lincomb (\\<lambda>v. a v \\<ominus>\\<^bsub>R\\<^esub> b v) A = lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\"", "lemma (in module) nested_union_vs: \n  fixes I N N'\n  assumes subm: \"\\<And>i. i\\<in>I\\<Longrightarrow> submodule R (N i) M\"\n    and max_exists: \"\\<And>i j. i\\<in>I\\<Longrightarrow>j\\<in>I\\<Longrightarrow> (\\<exists>k. k\\<in>I \\<and> N i\\<subseteq>N k \\<and> N j \\<subseteq>N k)\" \n    and uni: \"N'=(\\<Union> i\\<in>I. N i)\"\n    and ne: \"I\\<noteq>{}\"\n  shows \"submodule R N' M\"", "lemma (in module) span_is_monotone:\n  fixes S T\n  assumes subs: \"S\\<subseteq>T\"\n  shows \"span S \\<subseteq> span T\"", "lemma (in module) span_is_submodule:\n  fixes S\n  assumes  h2: \"S\\<subseteq>carrier M\"\n  shows \"submodule R (span S) M\"", "lemma (in module) finsum_not_depend:\n  fixes a A N\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>N\" and h3: \"submodule R N M\" and h4: \"f:A\\<rightarrow>N\"\n  shows \"(\\<Oplus>\\<^bsub>(md N)\\<^esub> v\\<in>A. f v) = (\\<Oplus>\\<^bsub>M\\<^esub> v\\<in>A. f v)\"", "lemma (in module) lincomb_not_depend:\n  fixes a A N\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>N\" and h3: \"submodule R N M\" and h4: \"a:A\\<rightarrow>carrier R\"\n  shows \"lincomb a A = module.lincomb (md N) a A\"", "lemma (in module) span_li_not_depend:\n  fixes S N\n  assumes h2: \"S\\<subseteq>N\" and  h3: \"submodule R N M\"\n  shows \"module.span R (md N) S = module.span R M S\"\n    and \"module.lin_dep R (md N) S = module.lin_dep R M S\"", "lemma (in module) span_is_subset: \n  fixes S N\n  assumes h2: \"S\\<subseteq>N\" and  h3: \"submodule R N M\"\n  shows \"span S \\<subseteq> N\"", "lemma (in module) span_is_subset2:\n  fixes S\n  assumes h2: \"S\\<subseteq>carrier M\"\n  shows \"span S \\<subseteq> carrier M\"", "lemma (in module) in_own_span: \n  fixes S\n  assumes  inC:\"S\\<subseteq>carrier M\"\n  shows \"S \\<subseteq> span S\"", "lemma (in module) supset_ld_is_ld:\n  fixes A B\n  assumes ld: \"lin_dep A\" and sub: \"A \\<subseteq> B\"\n  shows \"lin_dep B\"", "lemma (in module) subset_li_is_li:\n  fixes A B\n  assumes li: \"lin_indpt A\" and sub: \"B \\<subseteq> A\" \n  shows \"lin_indpt B\"", "lemma (in mod_hom) hom_sum:\n  fixes A B g\n  assumes h2: \"A\\<subseteq>carrier M\" and h3: \"g:A\\<rightarrow>carrier M\"\n  shows \"f (\\<Oplus>\\<^bsub>M\\<^esub> a\\<in>A. g a) = (\\<Oplus>\\<^bsub>N\\<^esub> a\\<in>A. f (g a))\""], "translations": [["", "lemma (in ring) coeff_in_ring:\n  \"\\<lbrakk>a\\<in>A\\<rightarrow>carrier R; x\\<in>A\\<rbrakk> \\<Longrightarrow> a x \\<in>carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A \\<rightarrow> carrier R; x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> a x \\<in> carrier R", "by (rule Pi_mem)"], ["", "lemma (in ring) coeff_in_ring2:\n  \"\\<lbrakk> x\\<in>A;a\\<in>A\\<rightarrow>carrier R\\<rbrakk> \\<Longrightarrow> a x \\<in>carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> a x \\<in> carrier R", "by (metis Pi_mem)"], ["", "lemma ring_subset_carrier:\n  \"\\<lbrakk>x \\<in>A; A\\<subseteq>carrier R\\<rbrakk> \\<Longrightarrow> x \\<in>carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; A \\<subseteq> carrier R\\<rbrakk>\n    \\<Longrightarrow> x \\<in> carrier R", "by auto"], ["", "lemma disj_if:\n  \"\\<lbrakk>A\\<inter>B={}; x\\<in> B\\<rbrakk> \\<Longrightarrow> (if x\\<in>A then f x else g x) = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<inter> B = {}; x \\<in> B\\<rbrakk>\n    \\<Longrightarrow> (if x \\<in> A then f x else g x) = g x", "by auto"], ["", "lemmas (in module) sum_simp = ring_subset_carrier"], ["", "subsection \\<open>Linear combinations\\<close>"], ["", "text \\<open>A linear combination is $\\sum_{v\\in A} a_v v$. $(a_v)_{v\\in S}$ is a function \n$A\\to K$, where $A\\subseteq K$.\\<close>"], ["", "definition (in module) lincomb::\"['c \\<Rightarrow> 'a, 'c set]\\<Rightarrow> 'c\"\nwhere \"lincomb a A = (\\<Oplus>\\<^bsub>M\\<^esub>  v\\<in>A. (a v \\<odot>\\<^bsub>M\\<^esub> v))\""], ["", "lemma (in module) summands_valid:\n  fixes A a\n  assumes h2: \"A\\<subseteq> carrier M\" and h3: \"a\\<in>(A\\<rightarrow>carrier R)\"\n  shows \"\\<forall> v\\<in> A. (((a v) \\<odot>\\<^bsub>M\\<^esub> v)\\<in> carrier M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "from assms"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier M\n  a \\<in> A \\<rightarrow> carrier R", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n  a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  \\<forall>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) lincomb_closed [simp, intro]:\n  fixes S a\n  assumes h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<rightarrow>carrier R)\"\n  shows \"lincomb a S \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a S \\<in> carrier M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a S \\<in> carrier M", "from h2 h3"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier M\n  a \\<in> S \\<rightarrow> carrier R", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier M\n  a \\<in> S \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a S \\<in> carrier M", "by (unfold lincomb_def, auto intro:finsum_closed)"], ["proof (state)\nthis:\n  lincomb a S \\<in> carrier M\n\ngoal:\nNo subgoals!", "(*doesn't work with simp*)"], ["proof (state)\nthis:\n  lincomb a S \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_monoid) finprod_cong2:\n  \"[| A = B; \n      !!i. i \\<in> B ==> f i = g i; f \\<in> B \\<rightarrow> carrier G|] ==> \nfinprod G f A = finprod G g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = B; \\<And>i. i \\<in> B \\<Longrightarrow> f i = g i;\n     f \\<in> B \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f A = finprod G g B", "by (intro finprod_cong, auto)"], ["", "lemmas (in abelian_monoid) finsum_cong2 = add.finprod_cong2"], ["", "lemma (in module) lincomb_cong:\n  assumes h2: \"A=B\" and h3: \"A \\<subseteq> carrier M\" \n    and h4: \"\\<And>v. v\\<in>A \\<Longrightarrow> a v = b v\" and h5: \"b\\<in> B\\<rightarrow>carrier R\"\n  shows \"lincomb a A = lincomb b B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a A = lincomb b B", "using assms"], ["proof (prove)\nusing this:\n  A = B\n  A \\<subseteq> carrier M\n  ?v \\<in> A \\<Longrightarrow> a ?v = b ?v\n  b \\<in> B \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a A = lincomb b B", "by (simp cong: finsum_cong2 add: lincomb_def summands_valid ring_subset_carrier)"], ["", "lemma (in module) lincomb_union:\n  fixes a A B \n  assumes h1: \"finite (A\\<union> B)\"  and h3: \"A\\<union>B \\<subseteq> carrier M\" \n    and h4: \"A\\<inter>B={}\" and h5: \"a\\<in>(A\\<union>B\\<rightarrow>carrier R)\"\n  shows \"lincomb a (A\\<union>B) = lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb a B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> B) =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb a B", "using assms"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  A \\<union> B \\<subseteq> carrier M\n  A \\<inter> B = {}\n  a \\<in> A \\<union> B \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> B) =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb a B", "by (auto cong: finsum_cong2 simp add: lincomb_def finsum_Un_disjoint summands_valid ring_subset_carrier)"], ["", "text \\<open>This is useful as a simp rule sometimes, for combining linear combinations.\\<close>"], ["", "lemma (in module) lincomb_union2:\n  fixes a b A B \n  assumes h1: \"finite (A\\<union> B)\"  and h3: \"A\\<union>B \\<subseteq> carrier M\" \n    and h4: \"A\\<inter>B={}\" and h5: \"a\\<in>A\\<rightarrow>carrier R\" and h6: \"b\\<in>B\\<rightarrow>carrier R\"\n  shows \"lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B = lincomb (\\<lambda>v. if (v\\<in>A) then a v else b v) (A\\<union>B)\"\n    (is \"lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B = lincomb ?c (A\\<union>B)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B =\n    lincomb (\\<lambda>v. if v \\<in> A then a v else b v) (A \\<union> B)", "using assms"], ["proof (prove)\nusing this:\n  finite (A \\<union> B)\n  A \\<union> B \\<subseteq> carrier M\n  A \\<inter> B = {}\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> B \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b B =\n    lincomb (\\<lambda>v. if v \\<in> A then a v else b v) (A \\<union> B)", "by (auto cong: finsum_cong2 \n        simp add: lincomb_def finsum_Un_disjoint summands_valid ring_subset_carrier disj_if)"], ["", "lemma (in module) lincomb_del2:\n  fixes S a v\n  assumes h1: \"finite S\" and h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<rightarrow>carrier R)\" and h4:\"v\\<in>S\"\n  shows \"lincomb a S = ((a v) \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> lincomb a (S-{v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a S =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb a (S - {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a S =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb a (S - {v})", "from h4"], ["proof (chain)\npicking this:\n  v \\<in> S", "have 1: \"S={v}\\<union>(S-{v})\""], ["proof (prove)\nusing this:\n  v \\<in> S\n\ngoal (1 subgoal):\n 1. S = {v} \\<union> (S - {v})", "by (metis insert_Diff insert_is_Un)"], ["proof (state)\nthis:\n  S = {v} \\<union> (S - {v})\n\ngoal (1 subgoal):\n 1. lincomb a S =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb a (S - {v})", "from assms"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  a \\<in> S \\<rightarrow> carrier R\n  v \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  a \\<in> S \\<rightarrow> carrier R\n  v \\<in> S\n\ngoal (1 subgoal):\n 1. lincomb a S =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb a (S - {v})", "apply (subst 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M;\n     a \\<in> S \\<rightarrow> carrier R; v \\<in> S\\<rbrakk>\n    \\<Longrightarrow> lincomb a ({v} \\<union> (S - {v})) =\n                      a v \\<odot>\\<^bsub>M\\<^esub>\n                      v \\<oplus>\\<^bsub>M\\<^esub>\n                      lincomb a (S - {v})", "apply (subst lincomb_union, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M;\n     a \\<in> S \\<rightarrow> carrier R; v \\<in> S\\<rbrakk>\n    \\<Longrightarrow> lincomb a {v} \\<oplus>\\<^bsub>M\\<^esub>\n                      lincomb a (S - {v}) =\n                      a v \\<odot>\\<^bsub>M\\<^esub>\n                      v \\<oplus>\\<^bsub>M\\<^esub>\n                      lincomb a (S - {v})", "by (unfold lincomb_def, auto simp add: coeff_in_ring)"], ["proof (state)\nthis:\n  lincomb a S =\n  a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb a (S - {v})\n\ngoal:\nNo subgoals!", "qed"], ["", "(*alternate form of the above*)"], ["", "lemma (in module) lincomb_insert:\n  fixes S a v\n  assumes h1: \"finite S\" and h2: \"S\\<subseteq> carrier M\" and h3: \"a\\<in>(S\\<union>{v}\\<rightarrow>carrier R)\" and h4:\"v\\<notin>S\" and \nh5:\"v\\<in> carrier M\"\n  shows \"lincomb a (S\\<union>{v}) = ((a v) \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> lincomb a S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (S \\<union> {v}) =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb a S", "using assms"], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  a \\<in> S \\<union> {v} \\<rightarrow> carrier R\n  v \\<notin> S\n  v \\<in> carrier M\n\ngoal (1 subgoal):\n 1. lincomb a (S \\<union> {v}) =\n    a v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb a S", "by (auto cong: finsum_cong2 \n        simp add: lincomb_def finsum_Un_disjoint summands_valid ring_subset_carrier disj_if)"], ["", "lemma (in module) lincomb_elim_if [simp]:\n  fixes b c S\n  assumes h1: \"S \\<subseteq> carrier M\" and h2: \"\\<And>v. v\\<in>S\\<Longrightarrow> \\<not>P v\" and h3: \"c\\<in>S\\<rightarrow>carrier R\"\n  shows \"lincomb (\\<lambda>w. if P w then b w else c w) S = lincomb c S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>w. if P w then b w else c w) S = lincomb c S", "using assms"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier M\n  ?v \\<in> S \\<Longrightarrow> \\<not> P ?v\n  c \\<in> S \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>w. if P w then b w else c w) S = lincomb c S", "by (auto cong: finsum_cong2 \n        simp add: lincomb_def finsum_Un_disjoint summands_valid ring_subset_carrier disj_if)"], ["", "lemma (in module) lincomb_smult:\n  fixes A c\n  assumes h2: \"A\\<subseteq>carrier M\"  and h3: \"a\\<in>A\\<rightarrow>carrier R\" and h4: \"c\\<in>carrier R\"\n  shows \"lincomb (\\<lambda>w. c\\<otimes>\\<^bsub>R\\<^esub> a w) A = c\\<odot>\\<^bsub>M\\<^esub> (lincomb a A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>w. c \\<otimes> a w) A =\n    c \\<odot>\\<^bsub>M\\<^esub> lincomb a A", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n  a \\<in> A \\<rightarrow> carrier R\n  c \\<in> carrier R\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>w. c \\<otimes> a w) A =\n    c \\<odot>\\<^bsub>M\\<^esub> lincomb a A", "by (auto cong: finsum_cong2 \n        simp add: lincomb_def finsum_Un_disjoint finsum_smult ring_subset_carrier disj_if smult_assoc1 coeff_in_ring)"], ["", "subsection \\<open>Linear dependence and independence.\\<close>"], ["", "text \\<open>A set $S$ in a module/vectorspace is linearly dependent if there is a finite set $A \\subseteq S$\n and coefficients $(a_v)_{v\\in A}$ such that $sum_{v\\in A} a_vv=0$ and for some $v$, $a_v\\neq 0$.\\<close>"], ["", "definition (in module) lin_dep where\n  \"lin_dep S = (\\<exists>A a v. (finite A \\<and> A\\<subseteq>S \\<and> (a\\<in> (A\\<rightarrow>carrier R)) \\<and> (lincomb a A = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>A) \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>)))\""], ["", "(*shows \"\\<exists>a. (a\\<in> (S\\<rightarrow>carrier K)) \\<and> (lincomb a S = \\<zero>\\<^bsub>V\\<^esub>) \\<and> (\\<exists>v\\<in>S. a v\\<noteq> \\<zero>\\<^bsub>K\\<^esub>)\"*)"], ["", "abbreviation (in module) lin_indpt::\"'c set \\<Rightarrow> bool\"\n  where \"lin_indpt S \\<equiv> \\<not>lin_dep S\""], ["", "text \\<open>In the finite case, we can take $A=S$. This may be more convenient (e.g., when adding two\nlinear combinations.\\<close>"], ["", "lemma (in module) finite_lin_dep: \n  fixes S\n  assumes finS:\"finite S\" and ld: \"lin_dep S\" and inC: \"S\\<subseteq>carrier M\"\n  shows \"\\<exists>a v. (a\\<in> (S\\<rightarrow>carrier R)) \\<and> (lincomb a S = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>S) \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "from ld"], ["proof (chain)\npicking this:\n  lin_dep S", "obtain A a v where A: \"(A\\<subseteq>S \\<and> (a\\<in> (A\\<rightarrow>carrier R)) \\<and> (lincomb a A = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>A) \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>))\""], ["proof (prove)\nusing this:\n  lin_dep S\n\ngoal (1 subgoal):\n 1. (\\<And>A a v.\n        A \\<subseteq> S \\<and>\n        a \\<in> A \\<rightarrow> carrier R \\<and>\n        lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n        v \\<in> A \\<and> a v \\<noteq> \\<zero> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold lin_dep_def, auto)"], ["proof (state)\nthis:\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "let ?b=\"\\<lambda>w. if w\\<in>A then a w else \\<zero>\\<^bsub>R\\<^esub>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "(*extend the coefficients to be 0 outside of A*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "from finS inC A"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>", "have if_in: \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v else \\<zero>) \\<odot>\\<^bsub>M\\<^esub> v) = (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v \\<odot>\\<^bsub>M\\<^esub> v else \\<zero>\\<^bsub>M\\<^esub>))\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\n  else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n then a v \\<odot>\\<^bsub>M\\<^esub> v else \\<zero>\\<^bsub>M\\<^esub>)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R;\n     lincomb a A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     a v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A\n                    then a v else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                   v) =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                   then a v \\<odot>\\<^bsub>M\\<^esub> v\n                   else \\<zero>\\<^bsub>M\\<^esub>)", "apply (intro finsum_cong')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R;\n     lincomb a A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     a v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> S = S\n 2. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R;\n     lincomb a A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     a v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          if v \\<in> A then a v \\<odot>\\<^bsub>M\\<^esub> v\n                          else \\<zero>\\<^bsub>M\\<^esub>)\n                      \\<in> S \\<rightarrow> carrier M\n 3. \\<And>i.\n       \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n        a \\<in> A \\<rightarrow> carrier R;\n        lincomb a A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n        a v \\<noteq> \\<zero>; i \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (if i \\<in> A then a i\n                          else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         (if i \\<in> A then a i \\<odot>\\<^bsub>M\\<^esub> i\n                          else \\<zero>\\<^bsub>M\\<^esub>)", "by (auto simp add: coeff_in_ring)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\nelse \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                                     then a v \\<odot>\\<^bsub>M\\<^esub> v\n                                     else \\<zero>\\<^bsub>M\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "(*massage the sum*)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\nelse \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                                     then a v \\<odot>\\<^bsub>M\\<^esub> v\n                                     else \\<zero>\\<^bsub>M\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "from finS inC A"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>", "have b: \"lincomb ?b S = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n    \\<zero>\\<^bsub>M\\<^esub>", "apply (unfold lincomb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M;\n     A \\<subseteq> S \\<and>\n     a \\<in> A \\<rightarrow> carrier R \\<and>\n     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n     \\<zero>\\<^bsub>M\\<^esub> \\<and>\n     v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A\n                    then a v else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                   v) =\n                      \\<zero>\\<^bsub>M\\<^esub>", "apply (subst if_in)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M;\n     A \\<subseteq> S \\<and>\n     a \\<in> A \\<rightarrow> carrier R \\<and>\n     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n     \\<zero>\\<^bsub>M\\<^esub> \\<and>\n     v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                   then a v \\<odot>\\<^bsub>M\\<^esub> v\n                   else \\<zero>\\<^bsub>M\\<^esub>) =\n                      \\<zero>\\<^bsub>M\\<^esub>", "by (subst extend_sum, auto)"], ["proof (state)\nthis:\n  lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n  \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "from A b"], ["proof (chain)\npicking this:\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n  lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n  \\<zero>\\<^bsub>M\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> S \\<and>\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n  lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n  \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>a v.\n       a \\<in> S \\<rightarrow> carrier R \\<and>\n       lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n       v \\<in> S \\<and> a v \\<noteq> \\<zero>", "apply (rule_tac x=\"?b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             a \\<in> A \\<rightarrow> carrier R \\<and>\n             lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A \\<and> a v \\<noteq> \\<zero>;\n     lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n     \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v.\n                         (\\<lambda>w. if w \\<in> A then a w else \\<zero>)\n                         \\<in> S \\<rightarrow> carrier R \\<and>\n                         lincomb\n                          (\\<lambda>w. if w \\<in> A then a w else \\<zero>)\n                          S =\n                         \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> S \\<and>\n                         (if v \\<in> A then a v else \\<zero>) \\<noteq>\n                         \\<zero>", "apply (rule_tac x=\"v\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             a \\<in> A \\<rightarrow> carrier R \\<and>\n             lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A \\<and> a v \\<noteq> \\<zero>;\n     lincomb (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n     \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w. if w \\<in> A then a w else \\<zero>)\n                      \\<in> S \\<rightarrow> carrier R \\<and>\n                      lincomb\n                       (\\<lambda>w. if w \\<in> A then a w else \\<zero>) S =\n                      \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                      v \\<in> S \\<and>\n                      (if v \\<in> A then a v else \\<zero>) \\<noteq> \\<zero>", "by auto"], ["proof (state)\nthis:\n  \\<exists>a v.\n     a \\<in> S \\<rightarrow> carrier R \\<and>\n     lincomb a S = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n     v \\<in> S \\<and> a v \\<noteq> \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Criteria of linear dependency in a easy format to apply: apply (rule lin-dep-crit)\\<close>"], ["", "lemma (in module) lin_dep_crit: \n  fixes A S a v\n  assumes fin: \"finite A\" and subset: \"A\\<subseteq>S\" and h1: \"(a\\<in> (A\\<rightarrow>carrier R))\" and h2: \"v\\<in> A\" \n    and h3:\"a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>\" and h4: \"(lincomb a A = \\<zero>\\<^bsub>M\\<^esub>)\"\n  shows \"lin_dep S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep S", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R\n  v \\<in> A\n  a v \\<noteq> \\<zero>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R\n  v \\<in> A\n  a v \\<noteq> \\<zero>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep S", "by (unfold lin_dep_def, auto)"], ["proof (state)\nthis:\n  lin_dep S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $\\sum_{v\\in A} a_vv=0$ implies $a_v=0$ for all $v\\in S$, then $A$ is linearly independent.\\<close>"], ["", "lemma (in module) finite_lin_indpt2:\n  fixes A \n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and\n    lc0: \"\\<And>a. a\\<in> (A\\<rightarrow>carrier R) \\<Longrightarrow> (lincomb a A = \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow> (\\<forall> v\\<in>A. a v= \\<zero>\\<^bsub>R\\<^esub>)\"\n  shows \"lin_indpt A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "assume \"\\<not>lin_indpt A\""], ["proof (state)\nthis:\n  \\<not> lin_indpt A\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from A_fin AinC this"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier M\n  \\<not> lin_indpt A", "obtain a v where av:\n    \"(a\\<in> (A\\<rightarrow>carrier R)) \\<and> (lincomb a A = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>A) \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>)\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier M\n  \\<not> lin_indpt A\n\ngoal (1 subgoal):\n 1. (\\<And>a v.\n        a \\<in> A \\<rightarrow> carrier R \\<and>\n        lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n        v \\<in> A \\<and> a v \\<noteq> \\<zero> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_lin_dep)"], ["proof (state)\nthis:\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from av lc0"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n  \\<lbrakk>?a \\<in> A \\<rightarrow> carrier R;\n   lincomb ?a A = \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>v\\<in>A. ?a v = \\<zero>", "show False"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R \\<and>\n  lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A \\<and> a v \\<noteq> \\<zero>\n  \\<lbrakk>?a \\<in> A \\<rightarrow> carrier R;\n   lincomb ?a A = \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>v\\<in>A. ?a v = \\<zero>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any set containing 0 is linearly dependent.\\<close>"], ["", "lemma (in module) zero_lin_dep: \n  assumes 0: \"\\<zero>\\<^bsub>M\\<^esub> \\<in> S\" and nonzero: \"carrier R \\<noteq> {\\<zero>\\<^bsub>R\\<^esub>}\"\n  shows \"lin_dep S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep S", "from nonzero"], ["proof (chain)\npicking this:\n  carrier R \\<noteq> {\\<zero>}", "have zero_not_one: \"\\<zero>\\<^bsub>R\\<^esub> \\<noteq> \\<one>\\<^bsub>R\\<^esub>\""], ["proof (prove)\nusing this:\n  carrier R \\<noteq> {\\<zero>}\n\ngoal (1 subgoal):\n 1. \\<zero> \\<noteq> \\<one>", "by (rule nontrivial_ring)"], ["proof (state)\nthis:\n  \\<zero> \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. lin_dep S", "from 0 zero_not_one"], ["proof (chain)\npicking this:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> S\n  \\<zero> \\<noteq> \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> S\n  \\<zero> \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. lin_dep S", "apply (unfold lin_dep_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<zero>\\<^bsub>M\\<^esub> \\<in> S;\n     \\<zero> \\<noteq> \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A a v.\n                         finite A \\<and>\n                         A \\<subseteq> S \\<and>\n                         a \\<in> A \\<rightarrow> carrier R \\<and>\n                         lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> A \\<and> a v \\<noteq> \\<zero>", "apply (rule_tac x=\"{\\<zero>\\<^bsub>M\\<^esub>}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<zero>\\<^bsub>M\\<^esub> \\<in> S;\n     \\<zero> \\<noteq> \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a v.\n                         finite {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                         {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> S \\<and>\n                         a \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<rightarrow>\n                                 carrier R \\<and>\n                         lincomb a {\\<zero>\\<^bsub>M\\<^esub>} =\n                         \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                         a v \\<noteq> \\<zero>", "apply (rule_tac x=\"(\\<lambda>v. \\<one>\\<^bsub>R\\<^esub>)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<zero>\\<^bsub>M\\<^esub> \\<in> S;\n     \\<zero> \\<noteq> \\<one>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v.\n                         finite {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                         {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> S \\<and>\n                         (\\<lambda>v. \\<one>)\n                         \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<rightarrow>\n                               carrier R \\<and>\n                         lincomb (\\<lambda>v. \\<one>)\n                          {\\<zero>\\<^bsub>M\\<^esub>} =\n                         \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                         \\<one> \\<noteq> \\<zero>", "apply (rule_tac x=\"\\<zero>\\<^bsub>M\\<^esub>\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<zero>\\<^bsub>M\\<^esub> \\<in> S;\n     \\<zero> \\<noteq> \\<one>\\<rbrakk>\n    \\<Longrightarrow> finite {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                      {\\<zero>\\<^bsub>M\\<^esub>} \\<subseteq> S \\<and>\n                      (\\<lambda>v. \\<one>)\n                      \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<rightarrow>\n                            carrier R \\<and>\n                      lincomb (\\<lambda>v. \\<one>)\n                       {\\<zero>\\<^bsub>M\\<^esub>} =\n                      \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                      \\<zero>\\<^bsub>M\\<^esub>\n                      \\<in> {\\<zero>\\<^bsub>M\\<^esub>} \\<and>\n                      \\<one> \\<noteq> \\<zero>", "by (unfold lincomb_def, auto)"], ["proof (state)\nthis:\n  lin_dep S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) zero_nin_lin_indpt: \n  assumes h2: \"S\\<subseteq>carrier M\" and li: \"\\<not>(lin_dep S)\" and nonzero: \"carrier R \\<noteq> {\\<zero>\\<^bsub>R\\<^esub>}\"\n  shows \"\\<zero>\\<^bsub>M\\<^esub> \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<notin> S", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S \\<Longrightarrow> False", "assume a1: \"\\<not>(\\<zero>\\<^bsub>M\\<^esub> \\<notin> S)\""], ["proof (state)\nthis:\n  \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S \\<Longrightarrow> False", "from a1"], ["proof (chain)\npicking this:\n  \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S", "have a2: \"\\<zero>\\<^bsub>M\\<^esub> \\<in> S\""], ["proof (prove)\nusing this:\n  \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S \\<Longrightarrow> False", "from a2 nonzero"], ["proof (chain)\npicking this:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> S\n  carrier R \\<noteq> {\\<zero>}", "have ld: \"lin_dep S\""], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> S\n  carrier R \\<noteq> {\\<zero>}\n\ngoal (1 subgoal):\n 1. lin_dep S", "by (rule zero_lin_dep)"], ["proof (state)\nthis:\n  lin_dep S\n\ngoal (1 subgoal):\n 1. \\<not> \\<zero>\\<^bsub>M\\<^esub> \\<notin> S \\<Longrightarrow> False", "from li ld"], ["proof (chain)\npicking this:\n  lin_indpt S\n  lin_dep S", "show False"], ["proof (prove)\nusing this:\n  lin_indpt S\n  lin_dep S\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The \\<open>span\\<close> of $S$ is the set of linear combinations with $A \\subseteq S$.\\<close>"], ["", "definition (in module) span::\"'c set \\<Rightarrow>'c set\" \n  where \"span S = {lincomb a A | a A. finite A \\<and> A\\<subseteq>S \\<and> a\\<in> (A\\<rightarrow>carrier R)}\""], ["", "text \\<open>The \\<open>span\\<close> interpreted as a module or vectorspace.\\<close>"], ["", "abbreviation (in module) span_vs::\"'c set \\<Rightarrow> ('a,'c,'d) module_scheme\" \n  where \"span_vs S \\<equiv> M \\<lparr>carrier := span S\\<rparr>\""], ["", "text \\<open>In the finite case, we can take $A=S$ without loss of generality.\\<close>"], ["", "lemma (in module) finite_span:\n  assumes fin: \"finite S\" and inC: \"S\\<subseteq>carrier M\"\n  shows \"span S = {lincomb a S | a. a\\<in> (S\\<rightarrow>carrier R)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}", "proof (rule equalityI)"], ["proof (state)\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "fix A a"], ["proof (state)\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "assume subset: \"A \\<subseteq> S\" and   a: \"a \\<in> A \\<rightarrow> carrier R\""], ["proof (state)\nthis:\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "let ?b=\"(\\<lambda>v. if v \\<in> A then a v else \\<zero>)\""], ["proof (state)\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "from fin inC subset a"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R", "have if_in: \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?b v \\<odot>\\<^bsub>M\\<^esub> v) = (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v \\<odot>\\<^bsub>M\\<^esub> v else \\<zero>\\<^bsub>M\\<^esub>))\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\n  else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n then a v \\<odot>\\<^bsub>M\\<^esub> v else \\<zero>\\<^bsub>M\\<^esub>)", "apply (intro finsum_cong')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> S = S\n 2. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          if v \\<in> A then a v \\<odot>\\<^bsub>M\\<^esub> v\n                          else \\<zero>\\<^bsub>M\\<^esub>)\n                      \\<in> S \\<rightarrow> carrier M\n 3. \\<And>i.\n       \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n        a \\<in> A \\<rightarrow> carrier R; i \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (if i \\<in> A then a i\n                          else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         (if i \\<in> A then a i \\<odot>\\<^bsub>M\\<^esub> i\n                          else \\<zero>\\<^bsub>M\\<^esub>)", "by (auto simp add: coeff_in_ring)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\nelse \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                                     then a v \\<odot>\\<^bsub>M\\<^esub> v\n                                     else \\<zero>\\<^bsub>M\\<^esub>)\n\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "(*massage the sum*)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A then a v\nelse \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                                     then a v \\<odot>\\<^bsub>M\\<^esub> v\n                                     else \\<zero>\\<^bsub>M\\<^esub>)\n\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "from fin inC subset a"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R", "have \"\\<exists>b. lincomb a A = lincomb b S \\<and> b \\<in> S \\<rightarrow> carrier R\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  A \\<subseteq> S\n  a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       lincomb a A = lincomb b S \\<and> b \\<in> S \\<rightarrow> carrier R", "apply (rule_tac x=\"?b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> lincomb a A =\n                      lincomb\n                       (\\<lambda>v. if v \\<in> A then a v else \\<zero>)\n                       S \\<and>\n                      (\\<lambda>v. if v \\<in> A then a v else \\<zero>)\n                      \\<in> S \\<rightarrow> carrier R", "apply (unfold lincomb_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a\n                    v \\<odot>\\<^bsub>M\\<^esub>\n                   v) =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> A\n                    then a v else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                   v)", "apply (subst if_in)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; A \\<subseteq> S;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a\n                    v \\<odot>\\<^bsub>M\\<^esub>\n                   v) =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. if v \\<in> A\n                   then a v \\<odot>\\<^bsub>M\\<^esub> v\n                   else \\<zero>\\<^bsub>M\\<^esub>)", "by (subst extend_sum, auto)"], ["proof (state)\nthis:\n  \\<exists>b.\n     lincomb a A = lincomb b S \\<and> b \\<in> S \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?A2 \\<subseteq> S; ?a2 \\<in> ?A2 \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b.\n                       lincomb ?a2 ?A2 = lincomb b S \\<and>\n                       b \\<in> S \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n 2. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?A2 \\<subseteq> S; ?a2 \\<in> ?A2 \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b.\n                       lincomb ?a2 ?A2 = lincomb b S \\<and>\n                       b \\<in> S \\<rightarrow> carrier R", "show \"span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A2 \\<subseteq> S; ?a2 \\<in> ?A2 \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b.\n                       lincomb ?a2 ?A2 = lincomb b S \\<and>\n                       b \\<in> S \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}", "by (unfold span_def, auto)"], ["proof (state)\nthis:\n  span S \\<subseteq> {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n\ngoal (1 subgoal):\n 1. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "from fin"], ["proof (chain)\npicking this:\n  finite S", "show \"{lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S\""], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S", "by (unfold span_def, auto)"], ["proof (state)\nthis:\n  {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R} \\<subseteq> span S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $v\\in \\text{span S}$, then we can find a linear combination. This is in an easy to apply\nformat (e.g. obtain a A where\\ldots)\\<close>"], ["", "lemma (in module) in_span:\n  fixes S v\n  assumes  h2: \"S\\<subseteq>carrier V\" and h3: \"v\\<in>span S\"\n  shows \"\\<exists>a A. (A\\<subseteq>S \\<and> (a\\<in>A\\<rightarrow>carrier R) \\<and> (lincomb a A=v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a A.\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<and> lincomb a A = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a A.\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<and> lincomb a A = v", "from h2 h3"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  v \\<in> span S", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  v \\<in> span S\n\ngoal (1 subgoal):\n 1. \\<exists>a A.\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<and> lincomb a A = v", "apply (unfold span_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> carrier V;\n     v \\<in> {lincomb a A |a A.\n              finite A \\<and>\n              A \\<subseteq> S \\<and>\n              a \\<in> A \\<rightarrow> carrier R}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a A.\n                         A \\<subseteq> S \\<and>\n                         a \\<in> A \\<rightarrow> carrier R \\<and>\n                         lincomb a A = v", "by auto"], ["proof (state)\nthis:\n  \\<exists>a A.\n     A \\<subseteq> S \\<and>\n     a \\<in> A \\<rightarrow> carrier R \\<and> lincomb a A = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the finite case, we can take $A=S$.\\<close>"], ["", "lemma (in module) finite_in_span:\n  fixes S v\n  assumes fin: \"finite S\" and h2: \"S\\<subseteq>carrier M\" and h3: \"v\\<in>span S\"\n  shows \"\\<exists>a. (a\\<in>S\\<rightarrow>carrier R) \\<and> (lincomb a S=v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> S \\<rightarrow> carrier R \\<and> lincomb a S = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> S \\<rightarrow> carrier R \\<and> lincomb a S = v", "from fin h2"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M", "have fin_span: \"span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}", "by (rule finite_span)"], ["proof (state)\nthis:\n  span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> S \\<rightarrow> carrier R \\<and> lincomb a S = v", "from h3 fin_span"], ["proof (chain)\npicking this:\n  v \\<in> span S\n  span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> span S\n  span S = {lincomb a S |a. a \\<in> S \\<rightarrow> carrier R}\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> S \\<rightarrow> carrier R \\<and> lincomb a S = v", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. a \\<in> S \\<rightarrow> carrier R \\<and> lincomb a S = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a subset is linearly independent, then any linear combination that is 0 must have a \nnonzero coefficient outside that set.\\<close>"], ["", "lemma (in module) lincomb_must_include:\n  fixes A S T b v\n  assumes  inC: \"T\\<subseteq>carrier M\" and li: \"lin_indpt S\" and Ssub: \"S\\<subseteq>T\" and Ssub: \"A\\<subseteq>T\"\n    and fin: \"finite A\"\n    and b: \"b\\<in>A\\<rightarrow>carrier R\" and lc: \"lincomb b A=\\<zero>\\<^bsub>M\\<^esub>\" and v_in: \"v\\<in>A\"\n    and nz_coeff: \"b v\\<noteq>\\<zero>\\<^bsub>R\\<^esub>\"\n  shows \"\\<exists>w\\<in>A-S. b w\\<noteq>\\<zero>\\<^bsub>R\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "(*we may assume B doesn't intersect A.*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "assume 0: \"\\<not>(\\<exists> w\\<in>A-S. b w\\<noteq>\\<zero>\\<^bsub>R\\<^esub>)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "from 0"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>)", "have 1: \"\\<And>w. w\\<in>A-S\\<Longrightarrow> b w=\\<zero>\\<^bsub>R\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>", "by auto"], ["proof (state)\nthis:\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "have Auni: \"A=(S\\<inter>A) \\<union>(A-S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = S \\<inter> A \\<union> (A - S)", "by auto"], ["proof (state)\nthis:\n  A = S \\<inter> A \\<union> (A - S)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "from fin b Ssub inC 1"], ["proof (chain)\npicking this:\n  finite A\n  b \\<in> A \\<rightarrow> carrier R\n  A \\<subseteq> T\n  T \\<subseteq> carrier M\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>", "have 2: \"lincomb b A = lincomb b (S\\<inter>A)\""], ["proof (prove)\nusing this:\n  finite A\n  b \\<in> A \\<rightarrow> carrier R\n  A \\<subseteq> T\n  T \\<subseteq> carrier M\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>\n\ngoal (1 subgoal):\n 1. lincomb b A = lincomb b (S \\<inter> A)", "(* \\<oplus>\\<^bsub>M\\<^esub> lincomb b ((-S)\\<inter>A)*)"], ["proof (prove)\nusing this:\n  finite A\n  b \\<in> A \\<rightarrow> carrier R\n  A \\<subseteq> T\n  T \\<subseteq> carrier M\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>\n\ngoal (1 subgoal):\n 1. lincomb b A = lincomb b (S \\<inter> A)", "apply (subst Auni)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; b \\<in> A \\<rightarrow> carrier R; A \\<subseteq> T;\n     T \\<subseteq> carrier M;\n     \\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> lincomb b (S \\<inter> A \\<union> (A - S)) =\n                      lincomb b (S \\<inter> A)", "apply (subst lincomb_union, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; b \\<in> A \\<rightarrow> carrier R; A \\<subseteq> T;\n     T \\<subseteq> carrier M;\n     \\<And>w.\n        w \\<in> A \\<and> w \\<notin> S \\<Longrightarrow>\n        b w = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> lincomb b (S \\<inter> A) \\<oplus>\\<^bsub>M\\<^esub>\n                      lincomb b (A - S) =\n                      lincomb b (S \\<inter> A)", "(*apply (intro r_zero)*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; b \\<in> A \\<rightarrow> carrier R; A \\<subseteq> T;\n     T \\<subseteq> carrier M;\n     \\<And>w.\n        w \\<in> A \\<and> w \\<notin> S \\<Longrightarrow>\n        b w = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> lincomb b (S \\<inter> A) \\<oplus>\\<^bsub>M\\<^esub>\n                      lincomb b (A - S) =\n                      lincomb b (S \\<inter> A)", "apply (unfold lincomb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; b \\<in> A \\<rightarrow> carrier R; A \\<subseteq> T;\n     T \\<subseteq> carrier M;\n     \\<And>w.\n        w \\<in> A \\<and> w \\<notin> S \\<Longrightarrow>\n        b w = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S \\<inter>\n                A. b v \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub>\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A -\n                S. b v \\<odot>\\<^bsub>M\\<^esub> v) =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S \\<inter>\n                A. b v \\<odot>\\<^bsub>M\\<^esub> v)", "apply (subst (2) finsum_all0, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; b \\<in> A \\<rightarrow> carrier R; A \\<subseteq> T;\n     T \\<subseteq> carrier M;\n     \\<And>w.\n        w \\<in> A \\<and> w \\<notin> S \\<Longrightarrow>\n        b w = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S \\<inter>\n                A. b v \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub>\n                      \\<zero>\\<^bsub>M\\<^esub> =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S \\<inter>\n                A. b v \\<odot>\\<^bsub>M\\<^esub> v)", "by (subst show_r_zero, auto intro!: finsum_closed)"], ["proof (state)\nthis:\n  lincomb b A = lincomb b (S \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "from 1 2 assms"], ["proof (chain)\npicking this:\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>\n  lincomb b A = lincomb b (S \\<inter> A)\n  T \\<subseteq> carrier M\n  lin_indpt S\n  S \\<subseteq> T\n  A \\<subseteq> T\n  finite A\n  b \\<in> A \\<rightarrow> carrier R\n  lincomb b A = \\<zero>\\<^bsub>M\\<^esub>\n  v \\<in> A\n  b v \\<noteq> \\<zero>", "have ld: \"lin_dep S\""], ["proof (prove)\nusing this:\n  ?w \\<in> A - S \\<Longrightarrow> b ?w = \\<zero>\n  lincomb b A = lincomb b (S \\<inter> A)\n  T \\<subseteq> carrier M\n  lin_indpt S\n  S \\<subseteq> T\n  A \\<subseteq> T\n  finite A\n  b \\<in> A \\<rightarrow> carrier R\n  lincomb b A = \\<zero>\\<^bsub>M\\<^esub>\n  v \\<in> A\n  b v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. lin_dep S", "apply (intro lin_dep_crit[where ?A=\"S\\<inter>A\" and ?a=\"b\" and ?v=\"v\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finite (S \\<inter> A)\n 2. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> S \\<inter> A \\<subseteq> S\n 3. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> b \\<in> S \\<inter> A \\<rightarrow> carrier R\n 4. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> v \\<in> S \\<inter> A\n 5. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> b v \\<noteq> \\<zero>\n 6. \\<lbrakk>\\<And>w. w \\<in> A - S \\<Longrightarrow> b w = \\<zero>;\n     lincomb b A = lincomb b (S \\<inter> A); T \\<subseteq> carrier M;\n     lin_indpt S; S \\<subseteq> T; A \\<subseteq> T; finite A;\n     b \\<in> A \\<rightarrow> carrier R;\n     lincomb b A = \\<zero>\\<^bsub>M\\<^esub>; v \\<in> A;\n     b v \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> lincomb b (S \\<inter> A) = \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lin_dep S\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>w\\<in>A - S. b w \\<noteq> \\<zero>) \\<Longrightarrow>\n    False", "from ld li"], ["proof (chain)\npicking this:\n  lin_dep S\n  lin_indpt S", "show False"], ["proof (prove)\nusing this:\n  lin_dep S\n  lin_indpt S\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A generating set is a set such that the span of $S$ is all of $M$.\\<close>"], ["", "abbreviation (in module) gen_set::\"'c set \\<Rightarrow> bool\"\n  where \"gen_set S \\<equiv> (span S = carrier M)\""], ["", "subsection \\<open>Submodules\\<close>"], ["", "lemma module_criteria:\n  fixes R and M \n  assumes cring: \"cring R\"\n      and zero: \"\\<zero>\\<^bsub>M\\<^esub>\\<in> carrier M\" \n      and add: \"\\<forall>v w. v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> v\\<oplus>\\<^bsub>M\\<^esub> w\\<in> carrier M\"\n      and neg: \"\\<forall>v\\<in>carrier M. (\\<exists>neg_v\\<in>carrier M. v\\<oplus>\\<^bsub>M\\<^esub>neg_v=\\<zero>\\<^bsub>M\\<^esub>)\"\n      and smult: \"\\<forall>c v. c\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> c\\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\"\n      and comm: \"\\<forall>v w. v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> v\\<oplus>\\<^bsub>M\\<^esub> w=w\\<oplus>\\<^bsub>M\\<^esub> v\"\n      and assoc: \"\\<forall>v w x. v\\<in>carrier M \\<and> w\\<in>carrier M \\<and> x\\<in>carrier M\\<longrightarrow> (v\\<oplus>\\<^bsub>M\\<^esub> w)\\<oplus>\\<^bsub>M\\<^esub> x= v\\<oplus>\\<^bsub>M\\<^esub> (w\\<oplus>\\<^bsub>M\\<^esub> x)\"\n      and add_id: \"\\<forall>v\\<in>carrier M. (v\\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> =v)\"\n      and compat: \"\\<forall>a b v. a\\<in> carrier R \\<and> b\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> (a\\<otimes>\\<^bsub>R\\<^esub> b)\\<odot>\\<^bsub>M\\<^esub> v =a\\<odot>\\<^bsub>M\\<^esub> (b\\<odot>\\<^bsub>M\\<^esub> v)\"\n      and smult_id: \"\\<forall>v\\<in>carrier M. (\\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v =v)\"\n      and dist_f: \"\\<forall>a b v. a\\<in> carrier R \\<and> b\\<in> carrier R \\<and> v\\<in>carrier M\\<longrightarrow> (a\\<oplus>\\<^bsub>R\\<^esub> b)\\<odot>\\<^bsub>M\\<^esub> v =(a\\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (b\\<odot>\\<^bsub>M\\<^esub> v)\"\n      and dist_add: \"\\<forall>a v w. a\\<in> carrier R \\<and> v\\<in>carrier M \\<and> w\\<in>carrier M\\<longrightarrow> a\\<odot>\\<^bsub>M\\<^esub> (v\\<oplus>\\<^bsub>M\\<^esub> w) =(a\\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (a\\<odot>\\<^bsub>M\\<^esub> w)\"\n  shows \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. module R M", "from assms"], ["proof (chain)\npicking this:\n  cring R\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> carrier M\n  \\<forall>v\\<in>carrier M.\n     \\<exists>neg_v\\<in>carrier M.\n        v \\<oplus>\\<^bsub>M\\<^esub> neg_v = \\<zero>\\<^bsub>M\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w = w \\<oplus>\\<^bsub>M\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier M \\<and>\n     w \\<in> carrier M \\<and> x \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<oplus>\\<^bsub>M\\<^esub> x =\n     v \\<oplus>\\<^bsub>M\\<^esub> (w \\<oplus>\\<^bsub>M\\<^esub> x)\n  \\<forall>v\\<in>carrier M.\n     v \\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     a \\<otimes>\\<^bsub>R\\<^esub> b \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> (b \\<odot>\\<^bsub>M\\<^esub> v)\n  \\<forall>v\\<in>carrier M.\n     \\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>R\\<^esub> b) \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     b \\<odot>\\<^bsub>M\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier R \\<and>\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     a \\<odot>\\<^bsub>M\\<^esub> (v \\<oplus>\\<^bsub>M\\<^esub> w) =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     a \\<odot>\\<^bsub>M\\<^esub> w", "have 2: \"abelian_group M\""], ["proof (prove)\nusing this:\n  cring R\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> carrier M\n  \\<forall>v\\<in>carrier M.\n     \\<exists>neg_v\\<in>carrier M.\n        v \\<oplus>\\<^bsub>M\\<^esub> neg_v = \\<zero>\\<^bsub>M\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w = w \\<oplus>\\<^bsub>M\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier M \\<and>\n     w \\<in> carrier M \\<and> x \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<oplus>\\<^bsub>M\\<^esub> x =\n     v \\<oplus>\\<^bsub>M\\<^esub> (w \\<oplus>\\<^bsub>M\\<^esub> x)\n  \\<forall>v\\<in>carrier M.\n     v \\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     a \\<otimes>\\<^bsub>R\\<^esub> b \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> (b \\<odot>\\<^bsub>M\\<^esub> v)\n  \\<forall>v\\<in>carrier M.\n     \\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>R\\<^esub> b) \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     b \\<odot>\\<^bsub>M\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier R \\<and>\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     a \\<odot>\\<^bsub>M\\<^esub> (v \\<oplus>\\<^bsub>M\\<^esub> w) =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     a \\<odot>\\<^bsub>M\\<^esub> w\n\ngoal (1 subgoal):\n 1. abelian_group M", "by (intro abelian_groupI, auto)"], ["proof (state)\nthis:\n  abelian_group M\n\ngoal (1 subgoal):\n 1. module R M", "from assms"], ["proof (chain)\npicking this:\n  cring R\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> carrier M\n  \\<forall>v\\<in>carrier M.\n     \\<exists>neg_v\\<in>carrier M.\n        v \\<oplus>\\<^bsub>M\\<^esub> neg_v = \\<zero>\\<^bsub>M\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w = w \\<oplus>\\<^bsub>M\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier M \\<and>\n     w \\<in> carrier M \\<and> x \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<oplus>\\<^bsub>M\\<^esub> x =\n     v \\<oplus>\\<^bsub>M\\<^esub> (w \\<oplus>\\<^bsub>M\\<^esub> x)\n  \\<forall>v\\<in>carrier M.\n     v \\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     a \\<otimes>\\<^bsub>R\\<^esub> b \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> (b \\<odot>\\<^bsub>M\\<^esub> v)\n  \\<forall>v\\<in>carrier M.\n     \\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>R\\<^esub> b) \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     b \\<odot>\\<^bsub>M\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier R \\<and>\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     a \\<odot>\\<^bsub>M\\<^esub> (v \\<oplus>\\<^bsub>M\\<^esub> w) =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     a \\<odot>\\<^bsub>M\\<^esub> w", "have 3: \"module_axioms R M\""], ["proof (prove)\nusing this:\n  cring R\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> carrier M\n  \\<forall>v\\<in>carrier M.\n     \\<exists>neg_v\\<in>carrier M.\n        v \\<oplus>\\<^bsub>M\\<^esub> neg_v = \\<zero>\\<^bsub>M\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n  \\<forall>v w.\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w = w \\<oplus>\\<^bsub>M\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier M \\<and>\n     w \\<in> carrier M \\<and> x \\<in> carrier M \\<longrightarrow>\n     v \\<oplus>\\<^bsub>M\\<^esub> w \\<oplus>\\<^bsub>M\\<^esub> x =\n     v \\<oplus>\\<^bsub>M\\<^esub> (w \\<oplus>\\<^bsub>M\\<^esub> x)\n  \\<forall>v\\<in>carrier M.\n     v \\<oplus>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     a \\<otimes>\\<^bsub>R\\<^esub> b \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> (b \\<odot>\\<^bsub>M\\<^esub> v)\n  \\<forall>v\\<in>carrier M.\n     \\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier R \\<and>\n     b \\<in> carrier R \\<and> v \\<in> carrier M \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>R\\<^esub> b) \\<odot>\\<^bsub>M\\<^esub> v =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     b \\<odot>\\<^bsub>M\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier R \\<and>\n     v \\<in> carrier M \\<and> w \\<in> carrier M \\<longrightarrow>\n     a \\<odot>\\<^bsub>M\\<^esub> (v \\<oplus>\\<^bsub>M\\<^esub> w) =\n     a \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n     a \\<odot>\\<^bsub>M\\<^esub> w\n\ngoal (1 subgoal):\n 1. module_axioms R M", "by (unfold module_axioms_def, auto)"], ["proof (state)\nthis:\n  module_axioms R M\n\ngoal (1 subgoal):\n 1. module R M", "from 2 3 cring"], ["proof (chain)\npicking this:\n  abelian_group M\n  module_axioms R M\n  cring R", "show ?thesis"], ["proof (prove)\nusing this:\n  abelian_group M\n  module_axioms R M\n  cring R\n\ngoal (1 subgoal):\n 1. module R M", "by (unfold module_def module_def, auto)"], ["proof (state)\nthis:\n  module R M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A submodule is $N\\subseteq M$ that is closed under addition and scalar multiplication, and\ncontains 0 (so is not empty).\\<close>"], ["", "locale submodule =\n  fixes R and N and M (structure)\n  assumes module: \"module R M\" \n    and subset: \"N \\<subseteq> carrier M\"\n    and m_closed [intro, simp]: \"\\<lbrakk>v \\<in> N; w \\<in> N\\<rbrakk> \\<Longrightarrow> v \\<oplus> w \\<in> N\"\n    and zero_closed [simp]: \"\\<zero> \\<in> N\" (*prevents N from being the empty set*)\n    and smult_closed [intro, simp]: \"\\<lbrakk>c \\<in> carrier R; v \\<in> N\\<rbrakk> \\<Longrightarrow> c\\<odot>v \\<in> N\""], ["", "abbreviation (in module) md::\"'c set \\<Rightarrow> ('a, 'c, 'd) module_scheme\"\n  where \"md N \\<equiv> M\\<lparr>carrier :=N\\<rparr>\""], ["", "lemma (in module) carrier_vs_is_self [simp]:\n  \"carrier (md N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (md N) = N", "by auto"], ["", "lemma (in module) submodule_is_module:\n  fixes N::\"'c set\"\n  assumes 0: \"submodule R N M\"\n  shows \"module R (md N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R (md N)", "proof  (unfold module_def, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. cring R\n 2. abelian_group (md N)\n 3. module_axioms R (md N)", "show 1: \"cring R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring R", ".."], ["proof (state)\nthis:\n  cring R\n\ngoal (2 subgoals):\n 1. abelian_group (md N)\n 2. module_axioms R (md N)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. abelian_group (md N)\n 2. module_axioms R (md N)", "from assms"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N M", "show 2: \"abelian_group (md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. abelian_group (md N)", "apply (unfold submodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (module R M \\<and> N \\<subseteq> carrier M) \\<and>\n    (\\<forall>v w.\n        v \\<in> N \\<longrightarrow>\n        w \\<in> N \\<longrightarrow>\n        v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N) \\<and>\n    \\<zero>\\<^bsub>M\\<^esub> \\<in> N \\<and>\n    (\\<forall>c v.\n        c \\<in> carrier R \\<longrightarrow>\n        v \\<in> N \\<longrightarrow>\n        c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N) \\<Longrightarrow>\n    abelian_group (md N)", "apply (intro abelian_groupI, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> N; y \\<in> N; z \\<in> N; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>M\\<^esub>\n                         y \\<oplus>\\<^bsub>M\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>M\\<^esub>\n                         (y \\<oplus>\\<^bsub>M\\<^esub> z)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> N; y \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>M\\<^esub> y =\n                         y \\<oplus>\\<^bsub>M\\<^esub> x\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N.\n                            y \\<oplus>\\<^bsub>M\\<^esub> x =\n                            \\<zero>\\<^bsub>M\\<^esub>", "apply (metis (no_types, hide_lams) M.add.m_assoc contra_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> N; y \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>M\\<^esub> y =\n                         y \\<oplus>\\<^bsub>M\\<^esub> x\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N.\n                            y \\<oplus>\\<^bsub>M\\<^esub> x =\n                            \\<zero>\\<^bsub>M\\<^esub>", "apply (metis (no_types, hide_lams) M.add.m_comm contra_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N.\n                            y \\<oplus>\\<^bsub>M\\<^esub> x =\n                            \\<zero>\\<^bsub>M\\<^esub>", "apply (rename_tac v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N.\n                            y \\<oplus>\\<^bsub>M\\<^esub> v =\n                            \\<zero>\\<^bsub>M\\<^esub>", "txt \\<open>The inverse of $v$ under addition is $-v$\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N.\n                            y \\<oplus>\\<^bsub>M\\<^esub> v =\n                            \\<zero>\\<^bsub>M\\<^esub>", "apply (rule_tac x=\"\\<ominus>\\<^bsub>M\\<^esub>v\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<ominus>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n                         v =\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>v.\n       \\<lbrakk>v \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<ominus>\\<^bsub>M\\<^esub> v \\<in> N", "apply (metis M.l_neg contra_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> N; module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n       \\<Longrightarrow> \\<ominus>\\<^bsub>M\\<^esub> v \\<in> N", "by (metis R.add.inv_closed one_closed smult_minus_1 subset_iff)"], ["proof (state)\nthis:\n  abelian_group (md N)\n\ngoal (1 subgoal):\n 1. module_axioms R (md N)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. module_axioms R (md N)", "from assms"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N M", "show 3: \"module_axioms R (md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. module_axioms R (md N)", "apply (unfold module_axioms_def submodule_def, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b x.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; b \\<in> carrier R; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>M\\<^esub> x =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         x \\<oplus>\\<^bsub>M\\<^esub>\n                         b \\<odot>\\<^bsub>M\\<^esub> x\n 2. \\<And>a x y.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; x \\<in> N; y \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>M\\<^esub>\n                         (x \\<oplus>\\<^bsub>M\\<^esub> y) =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         x \\<oplus>\\<^bsub>M\\<^esub>\n                         a \\<odot>\\<^bsub>M\\<^esub> y\n 3. \\<And>a b x.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; b \\<in> carrier R; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>M\\<^esub> x =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         (b \\<odot>\\<^bsub>M\\<^esub> x)", "apply (metis (no_types, hide_lams) smult_l_distr contra_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x y.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; x \\<in> N; y \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>M\\<^esub>\n                         (x \\<oplus>\\<^bsub>M\\<^esub> y) =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         x \\<oplus>\\<^bsub>M\\<^esub>\n                         a \\<odot>\\<^bsub>M\\<^esub> y\n 2. \\<And>a b x.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; b \\<in> carrier R; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>M\\<^esub> x =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         (b \\<odot>\\<^bsub>M\\<^esub> x)", "apply (metis (no_types, hide_lams) smult_r_distr contra_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       \\<lbrakk>LinearCombinations.submodule R N M; module R M;\n        N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        a \\<in> carrier R; b \\<in> carrier R; x \\<in> N\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>M\\<^esub> x =\n                         a \\<odot>\\<^bsub>M\\<^esub>\n                         (b \\<odot>\\<^bsub>M\\<^esub> x)", "by (metis (no_types, hide_lams) smult_assoc1 contra_subsetD)"], ["proof (state)\nthis:\n  module_axioms R (md N)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>$N_1+N_2=\\{x+y | x\\in N_1,y\\in N_2\\}$\\<close>"], ["", "definition (in module) submodule_sum:: \"['c set, 'c set] \\<Rightarrow> 'c set\"\n  where \"submodule_sum N1 N2 = (\\<lambda> (x,y). x \\<oplus>\\<^bsub>M\\<^esub> y) `{(x,y). x\\<in>  N1 \\<and> y\\<in> N2}\""], ["", "(*This only depends on the carriers, actually, so it could be defined on that level if desired.*)"], ["", "text \\<open>A module homomorphism $M\\to N$ preserves addition and scalar multiplication.\\<close>"], ["", "definition module_hom:: \"[('a, 'c0) ring_scheme, \n  ('a,'b1,'c1) module_scheme, ('a,'b2,'c2) module_scheme] \\<Rightarrow>('b1\\<Rightarrow>'b2) set\"\n  where \"module_hom R M N = {f. \n    ((f\\<in> carrier M \\<rightarrow> carrier N)\n    \\<and> (\\<forall>m1 m2. m1\\<in>carrier M\\<and> m2\\<in>carrier M \\<longrightarrow> f (m1 \\<oplus>\\<^bsub>M\\<^esub> m2) = (f m1) \\<oplus>\\<^bsub>N\\<^esub> (f m2))\n    \\<and> (\\<forall>r m. r\\<in>carrier R\\<and> m\\<in>carrier M \\<longrightarrow>f (r \\<odot>\\<^bsub>M\\<^esub> m) = r \\<odot>\\<^bsub>N\\<^esub> (f m)))}\""], ["", "lemma module_hom_closed: \"f\\<in> module_hom R M N \\<Longrightarrow> f\\<in> carrier M \\<rightarrow> carrier N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> module_hom R M N \\<Longrightarrow>\n    f \\<in> carrier M \\<rightarrow> carrier N", "by (unfold module_hom_def, auto)"], ["", "lemma module_hom_add: \"\\<lbrakk>f\\<in> module_hom R M N; m1\\<in>carrier M; m2\\<in>carrier M \\<rbrakk> \\<Longrightarrow> f (m1 \\<oplus>\\<^bsub>M\\<^esub> m2) = (f m1) \\<oplus>\\<^bsub>N\\<^esub> (f m2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> module_hom R M N; m1 \\<in> carrier M;\n     m2 \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (m1 \\<oplus>\\<^bsub>M\\<^esub> m2) =\n                      f m1 \\<oplus>\\<^bsub>N\\<^esub> f m2", "by (unfold module_hom_def, auto)"], ["", "lemma module_hom_smult: \"\\<lbrakk>f\\<in> module_hom R M N; r\\<in>carrier R; m\\<in>carrier M \\<rbrakk>  \\<Longrightarrow> f (r \\<odot>\\<^bsub>M\\<^esub> m) = r \\<odot>\\<^bsub>N\\<^esub> (f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> module_hom R M N; r \\<in> carrier R;\n     m \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (r \\<odot>\\<^bsub>M\\<^esub> m) =\n                      r \\<odot>\\<^bsub>N\\<^esub> f m", "by (unfold module_hom_def, auto)"], ["", "locale mod_hom = \n  M?: module R M + N?: module R N\n    for R and M and N +\n  fixes f\n  assumes f_hom: \"f \\<in> module_hom R M N\"\n  notes f_add [simp] = module_hom_add [OF f_hom]\n    and f_smult [simp] = module_hom_smult [OF f_hom]"], ["", "text \\<open>Some basic simplification rules for module homomorphisms.\\<close>"], ["", "context mod_hom\nbegin"], ["", "lemma f_im [simp, intro]: \nassumes \"v \\<in> carrier M\" (*doesn't work if \\<Longrightarrow>*)\nshows \"f v \\<in> carrier N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f v \\<in> carrier N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f v \\<in> carrier N", "have 0: \"mod_hom R M N f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R M N f", ".."], ["proof (state)\nthis:\n  mod_hom R M N f\n\ngoal (1 subgoal):\n 1. f v \\<in> carrier N", "from 0 assms"], ["proof (chain)\npicking this:\n  mod_hom R M N f\n  v \\<in> carrier M", "show ?thesis"], ["proof (prove)\nusing this:\n  mod_hom R M N f\n  v \\<in> carrier M\n\ngoal (1 subgoal):\n 1. f v \\<in> carrier N", "apply (unfold mod_hom_def module_hom_def mod_hom_axioms_def Pi_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>module R M \\<and>\n             module R N \\<and>\n             f \\<in> {f \\<in> {f. \\<forall>x.\n                                     x \\<in> carrier M \\<longrightarrow>\n                                     f x \\<in> carrier N}.\n                      (\\<forall>m1 m2.\n                          m1 \\<in> carrier M \\<and>\n                          m2 \\<in> carrier M \\<longrightarrow>\n                          f (m1 \\<oplus>\\<^bsub>M\\<^esub> m2) =\n                          f m1 \\<oplus>\\<^bsub>N\\<^esub> f m2) \\<and>\n                      (\\<forall>r m.\n                          r \\<in> carrier R \\<and>\n                          m \\<in> carrier M \\<longrightarrow>\n                          f (r \\<odot>\\<^bsub>M\\<^esub> m) =\n                          r \\<odot>\\<^bsub>N\\<^esub> f m)};\n     v \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> f v \\<in> carrier N", "by auto"], ["proof (state)\nthis:\n  f v \\<in> carrier N\n\ngoal:\nNo subgoals!", "qed"], ["", "definition im:: \"'e set\"\n  where \"im = f`(carrier M)\""], ["", "definition ker:: \"'c set\"\n  where \"ker = {v. v \\<in> carrier M & f v = \\<zero>\\<^bsub>N\\<^esub>}\""], ["", "lemma f0_is_0[simp]: \"f \\<zero>\\<^bsub>M\\<^esub>=\\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>", "have 1: \"f \\<zero>\\<^bsub>M\\<^esub> = f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> =\n    f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n       \\<zero>\\<^bsub>M\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  f \\<zero>\\<^bsub>M\\<^esub> =\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>)\n\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>", "have 2: \"f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub> \\<zero>\\<^bsub>M\\<^esub>) = \\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n       \\<zero>\\<^bsub>M\\<^esub>) =\n    \\<zero>\\<^bsub>N\\<^esub>", "using M.M.zero_closed N.lmult_0 R.zero_closed f_im f_smult"], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n  ?m \\<in> carrier N \\<Longrightarrow>\n  \\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>N\\<^esub> ?m =\n  \\<zero>\\<^bsub>N\\<^esub>\n  \\<zero>\\<^bsub>R\\<^esub> \\<in> carrier R\n  ?v \\<in> carrier M \\<Longrightarrow> f ?v \\<in> carrier N\n  \\<lbrakk>?r \\<in> carrier R; ?m \\<in> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (?r \\<odot>\\<^bsub>M\\<^esub> ?m) =\n                    ?r \\<odot>\\<^bsub>N\\<^esub> f ?m\n\ngoal (1 subgoal):\n 1. f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n       \\<zero>\\<^bsub>M\\<^esub>) =\n    \\<zero>\\<^bsub>N\\<^esub>", "by presburger"], ["proof (state)\nthis:\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>) =\n  \\<zero>\\<^bsub>N\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>", "from 1 2"], ["proof (chain)\npicking this:\n  f \\<zero>\\<^bsub>M\\<^esub> =\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>)\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>) =\n  \\<zero>\\<^bsub>N\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<zero>\\<^bsub>M\\<^esub> =\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>)\n  f (\\<zero>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>M\\<^esub>\n     \\<zero>\\<^bsub>M\\<^esub>) =\n  \\<zero>\\<^bsub>N\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_neg [simp]: \"v \\<in> carrier M\\<Longrightarrow>f (\\<ominus>\\<^bsub>M\\<^esub> v) = \\<ominus>\\<^bsub>N\\<^esub> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> carrier M \\<Longrightarrow>\n    f (\\<ominus>\\<^bsub>M\\<^esub> v) = \\<ominus>\\<^bsub>N\\<^esub> f v", "by (simp flip: M.smult_minus_1 N.smult_minus_1)"], ["", "lemma f_minus [simp]: \"\\<lbrakk>v\\<in>carrier M; w\\<in>carrier M\\<rbrakk>\\<Longrightarrow>f (v\\<ominus>\\<^bsub>M\\<^esub>w) = f v \\<ominus>\\<^bsub>N\\<^esub> f w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> carrier M; w \\<in> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (v \\<ominus>\\<^bsub>M\\<^esub> w) =\n                      f v \\<ominus>\\<^bsub>N\\<^esub> f w", "by (simp add: a_minus_def)"], ["", "lemma ker_is_submodule: \"submodule R ker M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R ker M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R ker M", "have 0: \"mod_hom R M N f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R M N f", ".."], ["proof (state)\nthis:\n  mod_hom R M N f\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R ker M", "from 0"], ["proof (chain)\npicking this:\n  mod_hom R M N f", "have 1: \"module R M\""], ["proof (prove)\nusing this:\n  mod_hom R M N f\n\ngoal (1 subgoal):\n 1. module R M", "by (unfold mod_hom_def, auto)"], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R ker M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R ker M", "by  (rule submodule.intro, auto simp add: ker_def, rule 1)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R ker M\n\ngoal:\nNo subgoals!", "(*rmult_0*)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R ker M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma im_is_submodule: \"submodule R im N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "have 1: \"im \\<subseteq> carrier N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im \\<subseteq> carrier N", "by (auto simp add: im_def image_def mod_hom_def module_hom_def f_im)"], ["proof (state)\nthis:\n  im \\<subseteq> carrier N\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "have 2: \"\\<And>w1 w2.\\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk> \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "(*it can't auto convert \\<And> and w/ o*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "fix w1 w2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "assume w1: \"w1 \\<in> im\" and w2: \"w2\\<in> im\""], ["proof (state)\nthis:\n  w1 \\<in> im\n  w2 \\<in> im\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from w1"], ["proof (chain)\npicking this:\n  w1 \\<in> im", "obtain v1 where 3: \"v1\\<in> carrier M \\<and> f v1 = w1\""], ["proof (prove)\nusing this:\n  w1 \\<in> im\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        v1 \\<in> carrier M \\<and> f v1 = w1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold im_def, auto)"], ["proof (state)\nthis:\n  v1 \\<in> carrier M \\<and> f v1 = w1\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from w2"], ["proof (chain)\npicking this:\n  w2 \\<in> im", "obtain v2 where 4: \"v2\\<in> carrier M \\<and> f v2 = w2\""], ["proof (prove)\nusing this:\n  w2 \\<in> im\n\ngoal (1 subgoal):\n 1. (\\<And>v2.\n        v2 \\<in> carrier M \\<and> f v2 = w2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold im_def, auto)"], ["proof (state)\nthis:\n  v2 \\<in> carrier M \\<and> f v2 = w2\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from 3 4"], ["proof (chain)\npicking this:\n  v1 \\<in> carrier M \\<and> f v1 = w1\n  v2 \\<in> carrier M \\<and> f v2 = w2", "have 5: \"f (v1\\<oplus>\\<^bsub>M\\<^esub>v2) = w1 \\<oplus>\\<^bsub>N\\<^esub> w2\""], ["proof (prove)\nusing this:\n  v1 \\<in> carrier M \\<and> f v1 = w1\n  v2 \\<in> carrier M \\<and> f v2 = w2\n\ngoal (1 subgoal):\n 1. f (v1 \\<oplus>\\<^bsub>M\\<^esub> v2) = w1 \\<oplus>\\<^bsub>N\\<^esub> w2", "by simp"], ["proof (state)\nthis:\n  f (v1 \\<oplus>\\<^bsub>M\\<^esub> v2) = w1 \\<oplus>\\<^bsub>N\\<^esub> w2\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from 3 4"], ["proof (chain)\npicking this:\n  v1 \\<in> carrier M \\<and> f v1 = w1\n  v2 \\<in> carrier M \\<and> f v2 = w2", "have 6: \"v1\\<oplus>\\<^bsub>M\\<^esub>v2\\<in> carrier M\""], ["proof (prove)\nusing this:\n  v1 \\<in> carrier M \\<and> f v1 = w1\n  v2 \\<in> carrier M \\<and> f v2 = w2\n\ngoal (1 subgoal):\n 1. v1 \\<oplus>\\<^bsub>M\\<^esub> v2 \\<in> carrier M", "by simp"], ["proof (state)\nthis:\n  v1 \\<oplus>\\<^bsub>M\\<^esub> v2 \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from 5 6"], ["proof (chain)\npicking this:\n  f (v1 \\<oplus>\\<^bsub>M\\<^esub> v2) = w1 \\<oplus>\\<^bsub>N\\<^esub> w2\n  v1 \\<oplus>\\<^bsub>M\\<^esub> v2 \\<in> carrier M", "have 7: \"\\<exists>x\\<in>carrier M. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 = f x\""], ["proof (prove)\nusing this:\n  f (v1 \\<oplus>\\<^bsub>M\\<^esub> v2) = w1 \\<oplus>\\<^bsub>N\\<^esub> w2\n  v1 \\<oplus>\\<^bsub>M\\<^esub> v2 \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>carrier M. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 = f x", "by metis"], ["proof (state)\nthis:\n  \\<exists>x\\<in>carrier M. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 = f x\n\ngoal (1 subgoal):\n 1. \\<And>w1 w2.\n       \\<lbrakk>w1 \\<in> im; w2 \\<in> im\\<rbrakk>\n       \\<Longrightarrow> w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "from 7"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>carrier M. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 = f x", "show \"?thesis w1 w2\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>carrier M. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 = f x\n\ngoal (1 subgoal):\n 1. w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im", "by (unfold im_def image_def, auto)"], ["proof (state)\nthis:\n  w1 \\<oplus>\\<^bsub>N\\<^esub> w2 \\<in> im\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?w1.0 \\<in> im; ?w2.0 \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?w1.0 \\<oplus>\\<^bsub>N\\<^esub> ?w2.0 \\<in> im\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "have 3: \" \\<zero>\\<^bsub>N\\<^esub> \\<in> im\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>N\\<^esub> \\<in> im", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>N\\<^esub> \\<in> im", "have 8: \"f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub> \\<and> \\<zero>\\<^bsub>M\\<^esub>\\<in>carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub> \\<and>\n    \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub> \\<and>\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>N\\<^esub> \\<in> im", "from 8"], ["proof (chain)\npicking this:\n  f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub> \\<and>\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M", "have 9: \"\\<exists>x\\<in>carrier M. \\<zero>\\<^bsub>N\\<^esub> = f x\""], ["proof (prove)\nusing this:\n  f \\<zero>\\<^bsub>M\\<^esub> = \\<zero>\\<^bsub>N\\<^esub> \\<and>\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>carrier M. \\<zero>\\<^bsub>N\\<^esub> = f x", "by metis"], ["proof (state)\nthis:\n  \\<exists>x\\<in>carrier M. \\<zero>\\<^bsub>N\\<^esub> = f x\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>N\\<^esub> \\<in> im", "from 9"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>carrier M. \\<zero>\\<^bsub>N\\<^esub> = f x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>carrier M. \\<zero>\\<^bsub>N\\<^esub> = f x\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>N\\<^esub> \\<in> im", "by (unfold im_def image_def, auto)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>N\\<^esub> \\<in> im\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>N\\<^esub> \\<in> im\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "have 4: \"\\<And>c w. \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk> \\<Longrightarrow> c\\<odot>\\<^bsub>N\\<^esub> w \\<in> im\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "fix c w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "assume c: \"c \\<in> carrier R\" and w: \"w \\<in> im\""], ["proof (state)\nthis:\n  c \\<in> carrier R\n  w \\<in> im\n\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "from w"], ["proof (chain)\npicking this:\n  w \\<in> im", "obtain v where 10: \"v\\<in> carrier M \\<and> f v = w\""], ["proof (prove)\nusing this:\n  w \\<in> im\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v \\<in> carrier M \\<and> f v = w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold im_def, auto)"], ["proof (state)\nthis:\n  v \\<in> carrier M \\<and> f v = w\n\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "from c 10"], ["proof (chain)\npicking this:\n  c \\<in> carrier R\n  v \\<in> carrier M \\<and> f v = w", "have 11: \"f (c\\<odot>\\<^bsub>M\\<^esub> v) = c\\<odot>\\<^bsub>N\\<^esub> w\\<and> (c \\<odot>\\<^bsub>M\\<^esub> v\\<in>carrier M)\""], ["proof (prove)\nusing this:\n  c \\<in> carrier R\n  v \\<in> carrier M \\<and> f v = w\n\ngoal (1 subgoal):\n 1. f (c \\<odot>\\<^bsub>M\\<^esub> v) = c \\<odot>\\<^bsub>N\\<^esub> w \\<and>\n    c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  f (c \\<odot>\\<^bsub>M\\<^esub> v) = c \\<odot>\\<^bsub>N\\<^esub> w \\<and>\n  c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "from 11"], ["proof (chain)\npicking this:\n  f (c \\<odot>\\<^bsub>M\\<^esub> v) = c \\<odot>\\<^bsub>N\\<^esub> w \\<and>\n  c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "have 12: \"\\<exists>v1\\<in>carrier M.  c\\<odot>\\<^bsub>N\\<^esub> w=f v1\""], ["proof (prove)\nusing this:\n  f (c \\<odot>\\<^bsub>M\\<^esub> v) = c \\<odot>\\<^bsub>N\\<^esub> w \\<and>\n  c \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal (1 subgoal):\n 1. \\<exists>v1\\<in>carrier M. c \\<odot>\\<^bsub>N\\<^esub> w = f v1", "by metis"], ["proof (state)\nthis:\n  \\<exists>v1\\<in>carrier M. c \\<odot>\\<^bsub>N\\<^esub> w = f v1\n\ngoal (1 subgoal):\n 1. \\<And>c w.\n       \\<lbrakk>c \\<in> carrier R; w \\<in> im\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "from 12"], ["proof (chain)\npicking this:\n  \\<exists>v1\\<in>carrier M. c \\<odot>\\<^bsub>N\\<^esub> w = f v1", "show \"?thesis c w\""], ["proof (prove)\nusing this:\n  \\<exists>v1\\<in>carrier M. c \\<odot>\\<^bsub>N\\<^esub> w = f v1\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im", "by (unfold im_def image_def, auto)"], ["proof (state)\nthis:\n  c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im\n\ngoal:\nNo subgoals!", "(*sensitive to ordering*)"], ["proof (state)\nthis:\n  c \\<odot>\\<^bsub>N\\<^esub> w \\<in> im\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?c \\<in> carrier R; ?w \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>N\\<^esub> ?w \\<in> im\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "from 1 2 3 4"], ["proof (chain)\npicking this:\n  im \\<subseteq> carrier N\n  \\<lbrakk>?w1.0 \\<in> im; ?w2.0 \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?w1.0 \\<oplus>\\<^bsub>N\\<^esub> ?w2.0 \\<in> im\n  \\<zero>\\<^bsub>N\\<^esub> \\<in> im\n  \\<lbrakk>?c \\<in> carrier R; ?w \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>N\\<^esub> ?w \\<in> im", "show ?thesis"], ["proof (prove)\nusing this:\n  im \\<subseteq> carrier N\n  \\<lbrakk>?w1.0 \\<in> im; ?w2.0 \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?w1.0 \\<oplus>\\<^bsub>N\\<^esub> ?w2.0 \\<in> im\n  \\<zero>\\<^bsub>N\\<^esub> \\<in> im\n  \\<lbrakk>?c \\<in> carrier R; ?w \\<in> im\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>N\\<^esub> ?w \\<in> im\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R im N", "by (unfold_locales, auto)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R im N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in mod_hom) f_ker:\n  \"v\\<in>ker \\<Longrightarrow> f v=\\<zero>\\<^bsub>N\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> ker \\<Longrightarrow> f v = \\<zero>\\<^bsub>N\\<^esub>", "by (unfold ker_def, auto)"], ["", "end"], ["", "text \\<open>We will show that for any set $S$, the space of functions $S\\to K$ forms a vector space.\\<close>"], ["", "definition (in ring) func_space:: \"'z set\\<Rightarrow>('a,('z \\<Rightarrow> 'a)) module\"\n  where \"func_space S = \\<lparr>carrier = S\\<rightarrow>\\<^sub>Ecarrier R, \n                  mult = (\\<lambda> f g. restrict (\\<lambda>v. \\<zero>\\<^bsub>R\\<^esub>) S),\n                  one =  restrict (\\<lambda>v. \\<zero>\\<^bsub>R\\<^esub>) S,\n                  zero = restrict (\\<lambda>v. \\<zero>\\<^bsub>R\\<^esub>) S,\n                  add = (\\<lambda> f g. restrict (\\<lambda>v. f v \\<oplus>\\<^bsub>R\\<^esub> g v) S),\n                  smult = (\\<lambda> c f. restrict (\\<lambda>v. c \\<otimes>\\<^bsub>R\\<^esub> f v) S)\\<rparr>\""], ["", "lemma (in cring) func_space_is_module:\n  fixes S\n  shows \"module R (func_space S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R (func_space S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. module R (func_space S)", "have 0: \"cring R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring R", ".."], ["proof (state)\nthis:\n  cring R\n\ngoal (1 subgoal):\n 1. module R (func_space S)", "from 0"], ["proof (chain)\npicking this:\n  cring R", "show ?thesis"], ["proof (prove)\nusing this:\n  cring R\n\ngoal (1 subgoal):\n 1. module R (func_space S)", "apply (auto intro!: module_criteria simp add: func_space_def)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> v x \\<oplus> w x \\<in> carrier R\n 2. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>neg_v\n                                  \\<in>S \\<rightarrow>\\<^sub>E carrier R.\n                            (\\<lambda>va\\<in>S. v va \\<oplus> neg_v va) =\n                            (\\<lambda>v\\<in>S. \\<zero>)\n 3. \\<And>c v x.\n       \\<lbrakk>cring R; c \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> c \\<otimes> v x \\<in> carrier R\n 4. \\<And>v w.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. v va \\<oplus> w va) =\n                         (\\<lambda>va\\<in>S. w va \\<oplus> v va)\n 5. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        x \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined) \\<oplus>\n                             x va) =\n                         (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then w va \\<oplus> x va\n                              else undefined))\n 6. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then \\<zero> else undefined)) =\n                         v\n 7. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. a \\<otimes> b \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 8. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. \\<one> \\<otimes> v va) = v\n 9. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (a \\<oplus> b) \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 10. \\<And>a v w.\n        \\<lbrakk>cring R; a \\<in> carrier R;\n         v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n         w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                              a \\<otimes>\n                              (if va \\<in> S then v va \\<oplus> w va\n                               else undefined)) =\n                          (\\<lambda>va\\<in>S.\n                              (if va \\<in> S then a \\<otimes> v va\n                               else undefined) \\<oplus>\n                              (if va \\<in> S then a \\<otimes> w va\n                               else undefined))", "apply (auto simp add: module_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>neg_v\n                                  \\<in>S \\<rightarrow>\\<^sub>E carrier R.\n                            (\\<lambda>va\\<in>S. v va \\<oplus> neg_v va) =\n                            (\\<lambda>v\\<in>S. \\<zero>)\n 2. \\<And>v w.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. v va \\<oplus> w va) =\n                         (\\<lambda>va\\<in>S. w va \\<oplus> v va)\n 3. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        x \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined) \\<oplus>\n                             x va) =\n                         (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then w va \\<oplus> x va\n                              else undefined))\n 4. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then \\<zero> else undefined)) =\n                         v\n 5. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. a \\<otimes> b \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 6. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. \\<one> \\<otimes> v va) = v\n 7. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (a \\<oplus> b) \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 8. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined)) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then a \\<otimes> w va\n                              else undefined))", "apply (rename_tac f)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>cring R; f \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>neg_v\n                                  \\<in>S \\<rightarrow>\\<^sub>E carrier R.\n                            (\\<lambda>v\\<in>S. f v \\<oplus> neg_v v) =\n                            (\\<lambda>v\\<in>S. \\<zero>)\n 2. \\<And>v w.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. v va \\<oplus> w va) =\n                         (\\<lambda>va\\<in>S. w va \\<oplus> v va)\n 3. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        x \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined) \\<oplus>\n                             x va) =\n                         (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then w va \\<oplus> x va\n                              else undefined))\n 4. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then \\<zero> else undefined)) =\n                         v\n 5. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. a \\<otimes> b \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 6. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. \\<one> \\<otimes> v va) = v\n 7. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (a \\<oplus> b) \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 8. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined)) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then a \\<otimes> w va\n                              else undefined))", "apply (rule_tac x=\"restrict (\\<lambda>v'. \\<ominus>\\<^bsub>R\\<^esub> (f v')) S\" in bexI)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>cring R; f \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>v\\<in>S.\n                             f v \\<oplus>\n                             (\\<lambda>v'\\<in>S. \\<ominus> f v') v) =\n                         (\\<lambda>v\\<in>S. \\<zero>)\n 2. \\<And>f.\n       \\<lbrakk>cring R; f \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>v'\\<in>S. \\<ominus> f v')\n                         \\<in> S \\<rightarrow>\\<^sub>E carrier R\n 3. \\<And>v w.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. v va \\<oplus> w va) =\n                         (\\<lambda>va\\<in>S. w va \\<oplus> v va)\n 4. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        x \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined) \\<oplus>\n                             x va) =\n                         (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then w va \\<oplus> x va\n                              else undefined))\n 5. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             v va \\<oplus>\n                             (if va \\<in> S then \\<zero> else undefined)) =\n                         v\n 6. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. a \\<otimes> b \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 7. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S. \\<one> \\<otimes> v va) = v\n 8. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             (a \\<oplus> b) \\<otimes> v va) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then b \\<otimes> v va\n                              else undefined))\n 9. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>va\\<in>S.\n                             a \\<otimes>\n                             (if va \\<in> S then v va \\<oplus> w va\n                              else undefined)) =\n                         (\\<lambda>va\\<in>S.\n                             (if va \\<in> S then a \\<otimes> v va\n                              else undefined) \\<oplus>\n                             (if va \\<in> S then a \\<otimes> w va\n                              else undefined))", "apply (auto simp add:restrict_def cong: if_cong split: if_split_asm, auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>cring R; f \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then f x \\<oplus> \\<ominus> f x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then \\<zero> else undefined)\n 2. \\<And>v w.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then v x \\<oplus> w x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then w x \\<oplus> v x\n                             else undefined)\n 3. \\<And>v w x.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        x \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xa.\n                             if xa \\<in> S\n                             then v xa \\<oplus> w xa \\<oplus> x xa\n                             else undefined) =\n                         (\\<lambda>xa.\n                             if xa \\<in> S\n                             then v xa \\<oplus> (w xa \\<oplus> x xa)\n                             else undefined)\n 4. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then v x \\<oplus> \\<zero>\n                             else undefined) =\n                         v\n 5. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> b \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> (b \\<otimes> v x)\n                             else undefined)\n 6. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then \\<one> \\<otimes> v x\n                             else undefined) =\n                         v\n 7. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then (a \\<oplus> b) \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> b \\<otimes> v x\n                             else undefined)\n 8. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> (v x \\<oplus> w x)\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> a \\<otimes> w x\n                             else undefined)", "apply (auto simp add: a_ac PiE_mem2 r_neg)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then v x \\<oplus> \\<zero>\n                             else undefined) =\n                         v\n 2. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> b \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> (b \\<otimes> v x)\n                             else undefined)\n 3. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then \\<one> \\<otimes> v x\n                             else undefined) =\n                         v\n 4. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then (a \\<oplus> b) \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> b \\<otimes> v x\n                             else undefined)\n 5. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> (v x \\<oplus> w x)\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> a \\<otimes> w x\n                             else undefined)", "(*intro: ext*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then v x \\<oplus> \\<zero>\n                             else undefined) =\n                         v\n 2. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> b \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> (b \\<otimes> v x)\n                             else undefined)\n 3. \\<And>v.\n       \\<lbrakk>cring R; v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then \\<one> \\<otimes> v x\n                             else undefined) =\n                         v\n 4. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then (a \\<oplus> b) \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> b \\<otimes> v x\n                             else undefined)\n 5. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        w \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> (v x \\<oplus> w x)\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> a \\<otimes> w x\n                             else undefined)", "apply (unfold PiE_def extensional_def Pi_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>cring R;\n        v \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow>\n                       f x = undefined}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then v x \\<oplus> \\<zero>\n                             else undefined) =\n                         v\n 2. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow>\n                       f x = undefined}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> b \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S then a \\<otimes> (b \\<otimes> v x)\n                             else undefined)\n 3. \\<And>v.\n       \\<lbrakk>cring R;\n        v \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow>\n                       f x = undefined}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then \\<one> \\<otimes> v x\n                             else undefined) =\n                         v\n 4. \\<And>a b v.\n       \\<lbrakk>cring R; a \\<in> carrier R; b \\<in> carrier R;\n        v \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow>\n                       f x = undefined}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S then (a \\<oplus> b) \\<otimes> v x\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> b \\<otimes> v x\n                             else undefined)\n 5. \\<And>a v w.\n       \\<lbrakk>cring R; a \\<in> carrier R;\n        v \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow> f x = undefined};\n        w \\<in> {f. \\<forall>x.\n                       x \\<in> S \\<longrightarrow>\n                       f x \\<in> carrier R} \\<inter>\n                {f. \\<forall>x.\n                       x \\<notin> S \\<longrightarrow>\n                       f x = undefined}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> (v x \\<oplus> w x)\n                             else undefined) =\n                         (\\<lambda>x.\n                             if x \\<in> S\n                             then a \\<otimes> v x \\<oplus> a \\<otimes> w x\n                             else undefined)", "by (auto simp add: m_assoc l_distr r_distr)"], ["proof (state)\nthis:\n  module R (func_space S)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Note: one can define $M^n$ from this.\\<close>"], ["", "text \\<open>A linear combination is a module homomorphism from the space of coefficients to the module,\n $(a_v)\\mapsto \\sum_{v\\in S} a_vv$.\\<close>"], ["", "lemma (in module) lincomb_is_mod_hom:\n  fixes S\n  assumes h: \"finite S\" and h2: \"S\\<subseteq>carrier M\"\n  shows \"mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "have 0: \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", ".."], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "{"], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "fix m1 m2"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "assume m1: \"m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\" and m2: \"m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\""], ["proof (state)\nthis:\n  m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n  m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from h h2 m1 m2"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n  m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R", "have a1: \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus>\\<^bsub>R\\<^esub> m2 v) v \\<odot>\\<^bsub>M\\<^esub> v) = \n      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> m2 v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n  m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n     m1 v \\<oplus> m2 v)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n v \\<oplus>\\<^bsub>M\\<^esub>\n m2 v \\<odot>\\<^bsub>M\\<^esub> v)", "by (intro finsum_cong', auto simp add: smult_l_distr PiE_mem2)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v)\nv \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from h h2 m1 m2"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n  m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R", "have a2: \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> m2 v \\<odot>\\<^bsub>M\\<^esub> v) = \n      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n  m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n v \\<oplus>\\<^bsub>M\\<^esub>\n m2 v \\<odot>\\<^bsub>M\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n v) \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)", "by (intro finsum_addf, auto)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v) \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from a1 a2"], ["proof (chain)\npicking this:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v)\nv \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v) \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)", "have \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v) v \\<odot>\\<^bsub>M\\<^esub> v) =\n       (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v)\nv \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v \\<oplus>\\<^bsub>M\\<^esub>\n                                     m2 v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v) \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n     m1 v \\<oplus> m2 v)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n v) \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)", "by auto"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v)\nv \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub>\n                                     v) \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?m1.3 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.3 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.3 v \\<oplus> ?m2.3 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "hence 1: \"\\<And>m1 m2.\n       m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R \\<Longrightarrow>\n       m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v) v \\<odot>\\<^bsub>M\\<^esub> v) =\n       (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1 v \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2 v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?m1.3 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.3 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.3 v \\<oplus> ?m2.3 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. \\<And>m1 m2.\n       \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                          m1 v \\<oplus> m2 v)\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) =\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) \\<oplus>\\<^bsub>M\\<^esub>\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?m1.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.1 v \\<oplus> ?m2.1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?m1.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.1 v \\<oplus> ?m2.1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "fix r m"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "assume r: \"r \\<in> carrier R\" and m: \"m \\<in> S \\<rightarrow>\\<^sub>E carrier R\""], ["proof (state)\nthis:\n  r \\<in> carrier R\n  m \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from h h2 r m"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  r \\<in> carrier R\n  m \\<in> S \\<rightarrow>\\<^sub>E carrier R", "have b1: \"r \\<odot>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v) =  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. r \\<odot>\\<^bsub>M\\<^esub>(m v \\<odot>\\<^bsub>M\\<^esub> v))\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  r \\<in> carrier R\n  m \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. r \\<odot>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. r \\<odot>\\<^bsub>M\\<^esub>\n (m v \\<odot>\\<^bsub>M\\<^esub> v))", "by (intro finsum_smult, auto)"], ["proof (state)\nthis:\n  r \\<odot>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. r \\<odot>\\<^bsub>M\\<^esub>\n                                     (m v \\<odot>\\<^bsub>M\\<^esub> v))\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from h h2 r m"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  r \\<in> carrier R\n  m \\<in> S \\<rightarrow>\\<^sub>E carrier R", "have b2: \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. r \\<otimes> m v) v \\<odot>\\<^bsub>M\\<^esub> v) = r \\<odot>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  r \\<in> carrier R\n  m \\<in> S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. r \\<otimes> m v)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v) =\n    r \\<odot>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v)", "apply (subst b1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite S; S \\<subseteq> carrier M; r \\<in> carrier R;\n     m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                       r \\<otimes> m v)\n                    v \\<odot>\\<^bsub>M\\<^esub>\n                   v) =\n                      (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. r \\<odot>\\<^bsub>M\\<^esub>\n                   (m v \\<odot>\\<^bsub>M\\<^esub> v))", "apply (intro finsum_cong', auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>finite S; S \\<subseteq> carrier M; r \\<in> carrier R;\n        m \\<in> S \\<rightarrow>\\<^sub>E carrier R; i \\<in> S\\<rbrakk>\n       \\<Longrightarrow> r \\<otimes> m i \\<odot>\\<^bsub>M\\<^esub> i =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (m i \\<odot>\\<^bsub>M\\<^esub> i)", "by (subst smult_assoc1, auto)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. r \\<otimes> m v)\nv \\<odot>\\<^bsub>M\\<^esub>\n                                     v) =\n  r \\<odot>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?r3 \\<in> carrier R;\n   ?m3 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?r3 \\<otimes> ?m3 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    ?r3 \\<odot>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "hence 2: \"\\<And>r m. r \\<in> carrier R \\<Longrightarrow>\n           m \\<in> S \\<rightarrow>\\<^sub>E carrier R \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S. r \\<otimes> m v) v \\<odot>\\<^bsub>M\\<^esub> v) = r \\<odot>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?r3 \\<in> carrier R;\n   ?m3 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?r3 \\<otimes> ?m3 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    ?r3 \\<odot>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m3\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. \\<And>r m.\n       \\<lbrakk>r \\<in> carrier R;\n        m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                          r \\<otimes> m v)\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?r1 \\<in> carrier R;\n   ?m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?r1 \\<otimes> ?m1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    ?r1 \\<odot>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "from h h2 0 1 2"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier M\n  module R M\n  \\<lbrakk>?m1.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.1 v \\<oplus> ?m2.1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n  \\<lbrakk>?r1 \\<in> carrier R;\n   ?m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?r1 \\<otimes> ?m1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    ?r1 \\<odot>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier M\n  module R M\n  \\<lbrakk>?m1.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n   ?m2.1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?m1.1 v \\<oplus> ?m2.1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) \\<oplus>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m2.1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n  \\<lbrakk>?r1 \\<in> carrier R;\n   ?m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                     ?r1 \\<otimes> ?m1 v)\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v) =\n                    ?r1 \\<odot>\\<^bsub>M\\<^esub>\n                    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. ?m1\n                  v \\<odot>\\<^bsub>M\\<^esub>\n                 v)\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)", "apply (unfold mod_hom_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>m1 m2.\n                \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                 m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                                   \\<in> S\n                                then m1 v \\<oplus> m2 v\n                                else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                               v) =\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v) \\<oplus>\\<^bsub>M\\<^esub>\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v);\n     \\<And>r m.\n        \\<lbrakk>r \\<in> carrier R;\n         m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n        \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> S\n                        then r \\<otimes> m v\n                        else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                       v) =\n                          r \\<odot>\\<^bsub>M\\<^esub>\n                          (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                        v \\<odot>\\<^bsub>M\\<^esub>\n                       v);\n     finite S; S \\<subseteq> carrier M; module R M\\<rbrakk>\n    \\<Longrightarrow> module R (func_space S)\n 2. \\<lbrakk>\\<And>m1 m2.\n                \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                 m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                                   \\<in> S\n                                then m1 v \\<oplus> m2 v\n                                else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                               v) =\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v) \\<oplus>\\<^bsub>M\\<^esub>\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v);\n     \\<And>r m.\n        \\<lbrakk>r \\<in> carrier R;\n         m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n        \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> S\n                        then r \\<otimes> m v\n                        else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                       v) =\n                          r \\<odot>\\<^bsub>M\\<^esub>\n                          (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                        v \\<odot>\\<^bsub>M\\<^esub>\n                       v);\n     finite S; S \\<subseteq> carrier M; module R M\\<rbrakk>\n    \\<Longrightarrow> mod_hom_axioms R (func_space S) M\n                       (\\<lambda>a. lincomb a S)", "apply (rule func_space_is_module)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>m1 m2.\n                \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                 m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                                   \\<in> S\n                                then m1 v \\<oplus> m2 v\n                                else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                               v) =\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v) \\<oplus>\\<^bsub>M\\<^esub>\n                                  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                v \\<odot>\\<^bsub>M\\<^esub>\n                               v);\n     \\<And>r m.\n        \\<lbrakk>r \\<in> carrier R;\n         m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n        \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v \\<in> S\n                        then r \\<otimes> m v\n                        else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                       v) =\n                          r \\<odot>\\<^bsub>M\\<^esub>\n                          (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                        v \\<odot>\\<^bsub>M\\<^esub>\n                       v);\n     finite S; S \\<subseteq> carrier M; module R M\\<rbrakk>\n    \\<Longrightarrow> mod_hom_axioms R (func_space S) M\n                       (\\<lambda>a. lincomb a S)", "apply (unfold mod_hom_axioms_def module_hom_def, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M;\n        x \\<in> carrier (func_space S)\\<rbrakk>\n       \\<Longrightarrow> lincomb x S \\<in> carrier M\n 2. \\<And>m1 m2.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M;\n        m1 \\<in> carrier (func_space S);\n        m2 \\<in> carrier (func_space S)\\<rbrakk>\n       \\<Longrightarrow> lincomb\n                          (m1 \\<oplus>\\<^bsub>func_space S\\<^esub> m2) S =\n                         lincomb m1 S \\<oplus>\\<^bsub>M\\<^esub> lincomb m2 S\n 3. \\<And>r m.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M; r \\<in> carrier R;\n        m \\<in> carrier (func_space S)\\<rbrakk>\n       \\<Longrightarrow> lincomb (r \\<odot>\\<^bsub>func_space S\\<^esub> m)\n                          S =\n                         r \\<odot>\\<^bsub>M\\<^esub> lincomb m S", "apply (rule lincomb_closed, unfold func_space_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m1 m2.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M;\n        m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb (\\<lambda>v\\<in>S. m1 v \\<oplus> m2 v) S =\n                         lincomb m1 S \\<oplus>\\<^bsub>M\\<^esub> lincomb m2 S\n 2. \\<And>r m.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M; r \\<in> carrier R;\n        m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb (\\<lambda>v\\<in>S. r \\<otimes> m v) S =\n                         r \\<odot>\\<^bsub>M\\<^esub> lincomb m S", "apply (unfold lincomb_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m1 m2.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M;\n        m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n        m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                          m1 v \\<oplus> m2 v)\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) =\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) \\<oplus>\\<^bsub>M\\<^esub>\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v)\n 2. \\<And>r m.\n       \\<lbrakk>\\<And>m1 m2.\n                   \\<lbrakk>m1 \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n                    m2 \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n                   \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n\\<in> S\n                                   then m1 v \\<oplus> m2 v\n                                   else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                                  v) =\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m1\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v) \\<oplus>\\<^bsub>M\\<^esub>\n                                     (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m2\n                                   v \\<odot>\\<^bsub>M\\<^esub>\n                                  v);\n        \\<And>r m.\n           \\<lbrakk>r \\<in> carrier R;\n            m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n           \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (if v\n                              \\<in> S\n                           then r \\<otimes> m v\n                           else undefined) \\<odot>\\<^bsub>M\\<^esub>\n                          v) =\n                             r \\<odot>\\<^bsub>M\\<^esub>\n                             (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                           v \\<odot>\\<^bsub>M\\<^esub>\n                          v);\n        finite S; S \\<subseteq> carrier M; module R M; r \\<in> carrier R;\n        m \\<in> S \\<rightarrow>\\<^sub>E carrier R\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. (\\<lambda>v\\<in>S.\n                          r \\<otimes> m v)\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v) =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>S. m\n                       v \\<odot>\\<^bsub>M\\<^esub>\n                      v)", "by auto"], ["proof (state)\nthis:\n  mod_hom R (func_space S) M (\\<lambda>a. lincomb a S)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*These are not really used.*)"], ["", "lemma (in module) lincomb_sum:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and a_fun: \"a\\<in>A\\<rightarrow>carrier R\" and \n    b_fun: \"b\\<in>A\\<rightarrow>carrier R\" \n  shows \"lincomb (\\<lambda>v. a v \\<oplus>\\<^bsub>R\\<^esub> b v) A = lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "from A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier M", "interpret mh: mod_hom R \"func_space A\" M  \"(\\<lambda>a. lincomb a A)\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space A) M (\\<lambda>a. lincomb a A)", "by (rule \n    lincomb_is_mod_hom)"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "let ?a=\"restrict a A\""], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "let ?b=\"restrict b A\""], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun A_fin AinC"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M", "have 1: \"LinearCombinations.module.lincomb M (?a\\<oplus>\\<^bsub>(LinearCombinations.ring.func_space R A)\\<^esub> ?b) A\n    = LinearCombinations.module.lincomb M (\\<lambda>x.  a x \\<oplus>\\<^bsub>R\\<^esub> b x) A\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n     A =\n    lincomb (\\<lambda>x. a x \\<oplus> b x) A", "by (auto simp add: func_space_def Pi_iff restrict_apply' cong: lincomb_cong)"], ["proof (state)\nthis:\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<oplus> b x) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun A_fin AinC"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M", "have 2: \"LinearCombinations.module.lincomb M ?a A \\<oplus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M ?b A = LinearCombinations.module.lincomb M a A \\<oplus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M b A\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (restrict b A) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "by (simp_all add: sum_simp cong: lincomb_cong)"], ["proof (state)\nthis:\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A =\n  lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R", "have ainC: \"?a\\<in>carrier (LinearCombinations.ring.func_space R A)\" \n    and binC: \"?b\\<in>carrier (LinearCombinations.ring.func_space R A)\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. restrict a A \\<in> carrier (func_space A) &&&\n    restrict b A \\<in> carrier (func_space A)", "by (unfold func_space_def, auto)"], ["proof (state)\nthis:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "from ainC binC"], ["proof (chain)\npicking this:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)", "have \"LinearCombinations.module.lincomb M (?a\\<oplus>\\<^bsub>(LinearCombinations.ring.func_space R A)\\<^esub> ?b) A\n    = LinearCombinations.module.lincomb M ?a A \\<oplus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M ?b A\""], ["proof (prove)\nusing this:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n\ngoal (1 subgoal):\n 1. lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n     A =\n    lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (restrict b A) A", "by (simp cong: lincomb_cong)"], ["proof (state)\nthis:\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "with 1 2"], ["proof (chain)\npicking this:\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<oplus> b x) A\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A =\n  lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A", "show ?thesis"], ["proof (prove)\nusing this:\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<oplus> b x) A\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A =\n  lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\n  lincomb (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A) A \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (restrict b A) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n    lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A", "by auto"], ["proof (state)\nthis:\n  lincomb (\\<lambda>v. a v \\<oplus> b v) A =\n  lincomb a A \\<oplus>\\<^bsub>M\\<^esub> lincomb b A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The negative of a function is just pointwise negation.\\<close>"], ["", "lemma (in cring) func_space_neg: \n  fixes f\n  assumes \"f\\<in> carrier (func_space S)\"\n  shows \"\\<ominus>\\<^bsub>func_space S\\<^esub> f = (\\<lambda> v. if (v\\<in>S) then \\<ominus>\\<^bsub>R\\<^esub> f v else undefined)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>func_space S\\<^esub> f =\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>func_space S\\<^esub> f =\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)", "interpret fs: module R \"func_space S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R (func_space S)", "by (rule func_space_is_module)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>func_space S\\<^esub> f =\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)", "from assms"], ["proof (chain)\npicking this:\n  f \\<in> carrier (func_space S)", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> carrier (func_space S)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>func_space S\\<^esub> f =\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)", "apply (intro fs.minus_equality)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<in> carrier (func_space S) \\<Longrightarrow>\n    (\\<lambda>v.\n        if v \\<in> S then \\<ominus> f v\n        else undefined) \\<oplus>\\<^bsub>func_space S\\<^esub>\n    f =\n    \\<zero>\\<^bsub>func_space S\\<^esub>\n 2. f \\<in> carrier (func_space S) \\<Longrightarrow>\n    f \\<in> carrier (func_space S)\n 3. f \\<in> carrier (func_space S) \\<Longrightarrow>\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)\n    \\<in> carrier (func_space S)", "apply (unfold func_space_def PiE_def extensional_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<in> carrier\n             \\<lparr>carrier =\n                       (S \\<rightarrow> carrier R) \\<inter>\n                       {f. \\<forall>x.\n                              x \\<notin> S \\<longrightarrow>\n                              f x = undefined},\n                mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>,\n                one = \\<lambda>v\\<in>S. \\<zero>,\n                zero = \\<lambda>v\\<in>S. \\<zero>,\n                add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v,\n                smult =\n                  \\<lambda>c f.\n                     \\<lambda>v\\<in>S.\n                        c \\<otimes> f v\\<rparr> \\<Longrightarrow>\n    (\\<lambda>v.\n        if v \\<in> S then \\<ominus> f v\n        else undefined) \\<oplus>\\<^bsub>\\<lparr>carrier = (S \\<rightarrow> carrier R) \\<inter> {f. \\<forall>x. x \\<notin> S \\<longrightarrow> f x = undefined}, mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>, one = \\<lambda>v\\<in>S. \\<zero>, zero = \\<lambda>v\\<in>S. \\<zero>, add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v, smult = \\<lambda>c f. \\<lambda>v\\<in>S. c \\<otimes> f v\\<rparr>\\<^esub>\n    f =\n    \\<zero>\\<^bsub>\\<lparr>carrier = (S \\<rightarrow> carrier R) \\<inter> {f. \\<forall>x. x \\<notin> S \\<longrightarrow> f x = undefined}, mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>, one = \\<lambda>v\\<in>S. \\<zero>, zero = \\<lambda>v\\<in>S. \\<zero>, add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v, smult = \\<lambda>c f. \\<lambda>v\\<in>S. c \\<otimes> f v\\<rparr>\\<^esub>\n 2. f \\<in> carrier\n             \\<lparr>carrier =\n                       (S \\<rightarrow> carrier R) \\<inter>\n                       {f. \\<forall>x.\n                              x \\<notin> S \\<longrightarrow>\n                              f x = undefined},\n                mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>,\n                one = \\<lambda>v\\<in>S. \\<zero>,\n                zero = \\<lambda>v\\<in>S. \\<zero>,\n                add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v,\n                smult =\n                  \\<lambda>c f.\n                     \\<lambda>v\\<in>S.\n                        c \\<otimes> f v\\<rparr> \\<Longrightarrow>\n    f \\<in> carrier\n             \\<lparr>carrier =\n                       (S \\<rightarrow> carrier R) \\<inter>\n                       {f. \\<forall>x.\n                              x \\<notin> S \\<longrightarrow>\n                              f x = undefined},\n                mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>,\n                one = \\<lambda>v\\<in>S. \\<zero>,\n                zero = \\<lambda>v\\<in>S. \\<zero>,\n                add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v,\n                smult =\n                  \\<lambda>c f. \\<lambda>v\\<in>S. c \\<otimes> f v\\<rparr>\n 3. f \\<in> carrier\n             \\<lparr>carrier =\n                       (S \\<rightarrow> carrier R) \\<inter>\n                       {f. \\<forall>x.\n                              x \\<notin> S \\<longrightarrow>\n                              f x = undefined},\n                mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>,\n                one = \\<lambda>v\\<in>S. \\<zero>,\n                zero = \\<lambda>v\\<in>S. \\<zero>,\n                add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v,\n                smult =\n                  \\<lambda>c f.\n                     \\<lambda>v\\<in>S.\n                        c \\<otimes> f v\\<rparr> \\<Longrightarrow>\n    (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)\n    \\<in> carrier\n           \\<lparr>carrier =\n                     (S \\<rightarrow> carrier R) \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> S \\<longrightarrow> f x = undefined},\n              mult = \\<lambda>f g. \\<lambda>v\\<in>S. \\<zero>,\n              one = \\<lambda>v\\<in>S. \\<zero>,\n              zero = \\<lambda>v\\<in>S. \\<zero>,\n              add = \\<lambda>f g. \\<lambda>v\\<in>S. f v \\<oplus> g v,\n              smult =\n                \\<lambda>c f. \\<lambda>v\\<in>S. c \\<otimes> f v\\<rparr>", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> S \\<rightarrow> carrier R;\n     \\<forall>x. x \\<notin> S \\<longrightarrow> f x = undefined\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v\\<in>S.\n                          (if v \\<in> S then \\<ominus> f v\n                           else undefined) \\<oplus>\n                          f v) =\n                      (\\<lambda>v\\<in>S. \\<zero>)\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> S; f \\<in> S \\<rightarrow> carrier R;\n        \\<forall>x. x \\<notin> S \\<longrightarrow> f x = undefined\\<rbrakk>\n       \\<Longrightarrow> \\<ominus> f x \\<in> carrier R", "apply (intro restrict_ext, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>f \\<in> S \\<rightarrow> carrier R;\n        \\<forall>x. x \\<notin> S \\<longrightarrow> f x = undefined;\n        v \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<ominus> f v \\<oplus> f v = \\<zero>", "by (simp add: l_neg coeff_in_ring)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>func_space S\\<^esub> f =\n  (\\<lambda>v. if v \\<in> S then \\<ominus> f v else undefined)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Ditto for subtraction. Note the above is really a special case, when a is the 0 function.\\<close>"], ["", "lemma (in module) lincomb_diff:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier M\" and a_fun: \"a\\<in>A\\<rightarrow>carrier R\" and \n    b_fun: \"b\\<in>A\\<rightarrow>carrier R\" \n  shows \"lincomb (\\<lambda>v. a v \\<ominus>\\<^bsub>R\\<^esub> b v) A = lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "from A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier M", "interpret mh: mod_hom R \"func_space A\" M  \"(\\<lambda>a. lincomb a A)\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space A) M (\\<lambda>a. lincomb a A)", "by (rule \n    lincomb_is_mod_hom)"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "let ?a=\"restrict a A\""], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "let ?b=\"restrict b A\""], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R", "have ainC: \"?a\\<in>carrier (LinearCombinations.ring.func_space R A)\" \n    and binC: \"?b\\<in>carrier (LinearCombinations.ring.func_space R A)\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. restrict a A \\<in> carrier (func_space A) &&&\n    restrict b A \\<in> carrier (func_space A)", "by (unfold func_space_def, auto)"], ["proof (state)\nthis:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun ainC binC A_fin AinC"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n  finite A\n  A \\<subseteq> carrier M", "have 1: \"LinearCombinations.module.lincomb M (?a\\<ominus>\\<^bsub>(func_space A)\\<^esub> ?b) A\n    = LinearCombinations.module.lincomb M (\\<lambda>x.  a x \\<ominus>\\<^bsub>R\\<^esub> b x) A\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. lincomb\n     (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A) A =\n    lincomb (\\<lambda>x. a x \\<ominus> b x) A", "apply (subst mh.M.M.minus_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A \\<rightarrow> carrier R;\n     b \\<in> A \\<rightarrow> carrier R;\n     restrict a A \\<in> carrier (func_space A);\n     restrict b A \\<in> carrier (func_space A); finite A;\n     A \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> lincomb\n                       (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub>\n                        \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n                       A =\n                      lincomb (\\<lambda>x. a x \\<ominus> b x) A", "apply (intro lincomb_cong, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier R;\n        b \\<in> A \\<rightarrow> carrier R;\n        restrict a A \\<in> carrier (func_space A);\n        restrict b A \\<in> carrier (func_space A); finite A;\n        A \\<subseteq> carrier M; v \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub>\n                          \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b\n                           A)\n                          v =\n                         a v \\<ominus> b v", "apply (subst func_space_neg, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier R;\n        b \\<in> A \\<rightarrow> carrier R;\n        restrict a A \\<in> carrier (func_space A);\n        restrict b A \\<in> carrier (func_space A); finite A;\n        A \\<subseteq> carrier M; v \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (restrict a A \\<oplus>\\<^bsub>func_space A\\<^esub>\n                          (\\<lambda>v.\n                              if v \\<in> A then \\<ominus> restrict b A v\n                              else undefined))\n                          v =\n                         a v \\<ominus> b v", "apply (simp add: restrict_def func_space_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier R;\n        b \\<in> A \\<rightarrow> carrier R;\n        (\\<lambda>x. if x \\<in> A then a x else undefined)\n        \\<in> A \\<rightarrow>\\<^sub>E carrier R;\n        (\\<lambda>x. if x \\<in> A then b x else undefined)\n        \\<in> A \\<rightarrow>\\<^sub>E carrier R;\n        finite A; A \\<subseteq> carrier M; v \\<in> A\\<rbrakk>\n       \\<Longrightarrow> a v \\<oplus> \\<ominus> b v = a v \\<ominus> b v", "by (subst R.minus_eq, auto)"], ["proof (state)\nthis:\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<ominus> b x) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "from a_fun b_fun A_fin AinC"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M", "have 2: \"LinearCombinations.module.lincomb M ?a A \\<ominus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M ?b A = LinearCombinations.module.lincomb M a A \\<ominus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M b A\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier R\n  b \\<in> A \\<rightarrow> carrier R\n  finite A\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. lincomb (restrict a A)\n     A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "by (simp cong: lincomb_cong)"], ["proof (state)\nthis:\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A =\n  lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "from ainC binC"], ["proof (chain)\npicking this:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)", "have \"LinearCombinations.module.lincomb M (?a\\<ominus>\\<^bsub>(LinearCombinations.ring.func_space R A)\\<^esub> ?b) A\n    = LinearCombinations.module.lincomb M ?a A \\<ominus>\\<^bsub>M\\<^esub> \n      LinearCombinations.module.lincomb M ?b A\""], ["proof (prove)\nusing this:\n  restrict a A \\<in> carrier (func_space A)\n  restrict b A \\<in> carrier (func_space A)\n\ngoal (1 subgoal):\n 1. lincomb\n     (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A) A =\n    lincomb (restrict a A)\n     A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A", "by (simp cong: lincomb_cong)"], ["proof (state)\nthis:\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "with 1 2"], ["proof (chain)\npicking this:\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<ominus> b x) A\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A =\n  lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A", "show ?thesis"], ["proof (prove)\nusing this:\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (\\<lambda>x. a x \\<ominus> b x) A\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A =\n  lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\n  lincomb (restrict a A \\<ominus>\\<^bsub>func_space A\\<^esub> restrict b A)\n   A =\n  lincomb (restrict a A)\n   A \\<ominus>\\<^bsub>M\\<^esub> lincomb (restrict b A) A\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n    lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A", "by auto"], ["proof (state)\nthis:\n  lincomb (\\<lambda>v. a v \\<ominus> b v) A =\n  lincomb a A \\<ominus>\\<^bsub>M\\<^esub> lincomb b A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The union of nested submodules is a submodule. We will use this to show that span of any\nset is a submodule.\\<close>"], ["", "lemma (in module) nested_union_vs: \n  fixes I N N'\n  assumes subm: \"\\<And>i. i\\<in>I\\<Longrightarrow> submodule R (N i) M\"\n    and max_exists: \"\\<And>i j. i\\<in>I\\<Longrightarrow>j\\<in>I\\<Longrightarrow> (\\<exists>k. k\\<in>I \\<and> N i\\<subseteq>N k \\<and> N j \\<subseteq>N k)\" \n    and uni: \"N'=(\\<Union> i\\<in>I. N i)\"\n    and ne: \"I\\<noteq>{}\"\n  shows \"submodule R N' M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "have 1: \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", ".."], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "from subm"], ["proof (chain)\npicking this:\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M", "have all_in: \"\\<And>i. i\\<in>I \\<Longrightarrow> N i \\<subseteq> carrier M\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> N i \\<subseteq> carrier M", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> N ?i1 \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "from uni all_in"], ["proof (chain)\npicking this:\n  N' = \\<Union> (N ` I)\n  ?i1 \\<in> I \\<Longrightarrow> N ?i1 \\<subseteq> carrier M", "have 2: \"\\<And>x. x \\<in> N' \\<Longrightarrow> x \\<in> carrier M\""], ["proof (prove)\nusing this:\n  N' = \\<Union> (N ` I)\n  ?i1 \\<in> I \\<Longrightarrow> N ?i1 \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> N' \\<Longrightarrow> x \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  ?x1 \\<in> N' \\<Longrightarrow> ?x1 \\<in> carrier M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "from uni"], ["proof (chain)\npicking this:\n  N' = \\<Union> (N ` I)", "have 3: \"\\<And>v w. v \\<in> N' \\<Longrightarrow> w \\<in> N' \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'\""], ["proof (prove)\nusing this:\n  N' = \\<Union> (N ` I)\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "fix v w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "assume v: \"v \\<in> N'\" and w: \"w \\<in> N'\""], ["proof (state)\nthis:\n  v \\<in> N'\n  w \\<in> N'\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "from uni v w"], ["proof (chain)\npicking this:\n  N' = \\<Union> (N ` I)\n  v \\<in> N'\n  w \\<in> N'", "obtain i j where i: \"i\\<in>I\\<and> v\\<in> N i\" and j: \"j\\<in>I\\<and> w\\<in> N j\""], ["proof (prove)\nusing this:\n  N' = \\<Union> (N ` I)\n  v \\<in> N'\n  w \\<in> N'\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i \\<in> I \\<and> v \\<in> N i;\n         j \\<in> I \\<and> w \\<in> N j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> I \\<and> v \\<in> N i\n  j \\<in> I \\<and> w \\<in> N j\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "from max_exists i j"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i1 \\<in> I; ?j1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       k \\<in> I \\<and>\n                       N ?i1 \\<subseteq> N k \\<and> N ?j1 \\<subseteq> N k\n  i \\<in> I \\<and> v \\<in> N i\n  j \\<in> I \\<and> w \\<in> N j", "obtain k where k: \"k\\<in>I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1 \\<in> I; ?j1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       k \\<in> I \\<and>\n                       N ?i1 \\<subseteq> N k \\<and> N ?j1 \\<subseteq> N k\n  i \\<in> I \\<and> v \\<in> N i\n  j \\<in> I \\<and> w \\<in> N j\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<in> I \\<and>\n        N i \\<subseteq> N k \\<and> N j \\<subseteq> N k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by presburger"], ["proof (state)\nthis:\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "from v w i j k"], ["proof (chain)\npicking this:\n  v \\<in> N'\n  w \\<in> N'\n  i \\<in> I \\<and> v \\<in> N i\n  j \\<in> I \\<and> w \\<in> N j\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k", "have v2: \"v\\<in>N k\" and w2: \"w\\<in> N k\""], ["proof (prove)\nusing this:\n  v \\<in> N'\n  w \\<in> N'\n  i \\<in> I \\<and> v \\<in> N i\n  j \\<in> I \\<and> w \\<in> N j\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n\ngoal (1 subgoal):\n 1. v \\<in> N k &&& w \\<in> N k", "by auto"], ["proof (state)\nthis:\n  v \\<in> N k\n  w \\<in> N k\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "from v2 w2 k subm[of k]"], ["proof (chain)\npicking this:\n  v \\<in> N k\n  w \\<in> N k\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n  k \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N k) M", "have vw: \"v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k\""], ["proof (prove)\nusing this:\n  v \\<in> N k\n  w \\<in> N k\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n  k \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N k) M\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k", "apply (unfold submodule_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> N k; w \\<in> N k;\n     k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k;\n     k \\<in> I \\<Longrightarrow>\n     (module R M \\<and> N k \\<subseteq> carrier M) \\<and>\n     (\\<forall>v w.\n         v \\<in> N k \\<longrightarrow>\n         w \\<in> N k \\<longrightarrow>\n         v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k) \\<and>\n     \\<zero>\\<^bsub>M\\<^esub> \\<in> N k \\<and>\n     (\\<forall>c v.\n         c \\<in> carrier R \\<longrightarrow>\n         v \\<in> N k \\<longrightarrow>\n         c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N k)\\<rbrakk>\n    \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k", "by auto"], ["proof (state)\nthis:\n  v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>v \\<in> N'; w \\<in> N'; N' = \\<Union> (N ` I)\\<rbrakk>\n       \\<Longrightarrow> v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "from k vw uni"], ["proof (chain)\npicking this:\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n  v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k\n  N' = \\<Union> (N ` I)", "show \"?thesis v w\""], ["proof (prove)\nusing this:\n  k \\<in> I \\<and> N i \\<subseteq> N k \\<and> N j \\<subseteq> N k\n  v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N k\n  N' = \\<Union> (N ` I)\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'", "by auto"], ["proof (state)\nthis:\n  v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?v1 \\<in> N'; ?w1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?v1 \\<oplus>\\<^bsub>M\\<^esub> ?w1 \\<in> N'\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "have 4: \"\\<zero>\\<^bsub>M\\<^esub> \\<in> N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N'", "from ne"], ["proof (chain)\npicking this:\n  I \\<noteq> {}", "obtain i where i: \"i\\<in>I\""], ["proof (prove)\nusing this:\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> I \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N'", "from i subm"], ["proof (chain)\npicking this:\n  i \\<in> I\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M", "have zi: \"\\<zero>\\<^bsub>M\\<^esub>\\<in>N i\""], ["proof (prove)\nusing this:\n  i \\<in> I\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N i", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N i\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N'", "from i zi uni"], ["proof (chain)\npicking this:\n  i \\<in> I\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N i\n  N' = \\<Union> (N ` I)", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> I\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N i\n  N' = \\<Union> (N ` I)\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>M\\<^esub> \\<in> N'", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N'\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "from uni subm"], ["proof (chain)\npicking this:\n  N' = \\<Union> (N ` I)\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M", "have 5: \"\\<And>c v. c \\<in> carrier R \\<Longrightarrow> v \\<in> N' \\<Longrightarrow> c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N'\""], ["proof (prove)\nusing this:\n  N' = \\<Union> (N ` I)\n  ?i1 \\<in> I \\<Longrightarrow> LinearCombinations.submodule R (N ?i1) M\n\ngoal (1 subgoal):\n 1. \\<And>c v.\n       \\<lbrakk>c \\<in> carrier R; v \\<in> N'\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N'", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>?c1 \\<in> carrier R; ?v1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?c1 \\<odot>\\<^bsub>M\\<^esub> ?v1 \\<in> N'\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "from 1 2 3 4 5"], ["proof (chain)\npicking this:\n  module R M\n  ?x1 \\<in> N' \\<Longrightarrow> ?x1 \\<in> carrier M\n  \\<lbrakk>?v1 \\<in> N'; ?w1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?v1 \\<oplus>\\<^bsub>M\\<^esub> ?w1 \\<in> N'\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N'\n  \\<lbrakk>?c1 \\<in> carrier R; ?v1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?c1 \\<odot>\\<^bsub>M\\<^esub> ?v1 \\<in> N'", "show ?thesis"], ["proof (prove)\nusing this:\n  module R M\n  ?x1 \\<in> N' \\<Longrightarrow> ?x1 \\<in> carrier M\n  \\<lbrakk>?v1 \\<in> N'; ?w1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?v1 \\<oplus>\\<^bsub>M\\<^esub> ?w1 \\<in> N'\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> N'\n  \\<lbrakk>?c1 \\<in> carrier R; ?v1 \\<in> N'\\<rbrakk>\n  \\<Longrightarrow> ?c1 \\<odot>\\<^bsub>M\\<^esub> ?v1 \\<in> N'\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R N' M", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R N' M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) span_is_monotone:\n  fixes S T\n  assumes subs: \"S\\<subseteq>T\"\n  shows \"span S \\<subseteq> span T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span S \\<subseteq> span T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span S \\<subseteq> span T", "from subs"], ["proof (chain)\npicking this:\n  S \\<subseteq> T", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> span T", "by (unfold span_def, auto)"], ["proof (state)\nthis:\n  span S \\<subseteq> span T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) span_is_submodule:\n  fixes S\n  assumes  h2: \"S\\<subseteq>carrier M\"\n  shows \"submodule R (span S) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span S) M", "proof (cases \"S={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> LinearCombinations.submodule R (span S) M\n 2. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> LinearCombinations.submodule R (span S) M\n 2. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "moreover"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> LinearCombinations.submodule R (span S) M\n 2. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "have \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", ".."], ["proof (state)\nthis:\n  module R M\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> LinearCombinations.submodule R (span S) M\n 2. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "ultimately"], ["proof (chain)\npicking this:\n  S = {}\n  module R M", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n  module R M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span S) M", "apply (unfold submodule_def span_def lincomb_def, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span S) M\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    LinearCombinations.submodule R (span S) M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span S) M", "proof (rule nested_union_vs[where ?I=\"{F. F\\<subseteq>S \\<and> finite F}\" and ?N=\"\\<lambda>F. span F\" and ?N'=\"span S\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i.\n       i \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span i) M\n 2. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k\n 3. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n 4. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "show \" \\<And>F. F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow> submodule R (span F) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "assume F: \"F \\<in> {F. F \\<subseteq> S \\<and> finite F}\""], ["proof (state)\nthis:\n  F \\<in> {F. F \\<subseteq> S \\<and> finite F}\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "from F"], ["proof (chain)\npicking this:\n  F \\<in> {F. F \\<subseteq> S \\<and> finite F}", "have h1: \"finite F\""], ["proof (prove)\nusing this:\n  F \\<in> {F. F \\<subseteq> S \\<and> finite F}\n\ngoal (1 subgoal):\n 1. finite F", "by auto"], ["proof (state)\nthis:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "from F h2"], ["proof (chain)\npicking this:\n  F \\<in> {F. F \\<subseteq> S \\<and> finite F}\n  S \\<subseteq> carrier M", "have inC: \"F\\<subseteq>carrier M\""], ["proof (prove)\nusing this:\n  F \\<in> {F. F \\<subseteq> S \\<and> finite F}\n  S \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. F \\<subseteq> carrier M", "by auto"], ["proof (state)\nthis:\n  F \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "from h1 inC"], ["proof (chain)\npicking this:\n  finite F\n  F \\<subseteq> carrier M", "interpret mh: mod_hom R \"(func_space F)\" M \"(\\<lambda>a. lincomb a F)\""], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. mod_hom R (func_space F) M (\\<lambda>a. lincomb a F)", "by (rule lincomb_is_mod_hom)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "from h1 inC"], ["proof (chain)\npicking this:\n  finite F\n  F \\<subseteq> carrier M", "have 1: \"mh.im = span F\""], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. mh.im = span F", "apply (unfold mh.im_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; F \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>a. lincomb a F) ` carrier (func_space F) =\n                      span F", "apply (unfold func_space_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; F \\<subseteq> carrier M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. lincomb x F) `\n                      (F \\<rightarrow>\\<^sub>E carrier R) =\n                      span F", "apply (subst finite_span, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>finite F; F \\<subseteq> carrier M;\n        a \\<in> F \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb a F\n                         \\<in> (\\<lambda>x. lincomb x F) `\n                               (F \\<rightarrow>\\<^sub>E carrier R)", "apply (unfold image_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>finite F; F \\<subseteq> carrier M;\n        a \\<in> F \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>F \\<rightarrow>\\<^sub>E carrier R.\n                            lincomb a F = lincomb x F", "apply (rule_tac x=\"restrict a F\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>finite F; F \\<subseteq> carrier M;\n        a \\<in> F \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb a F = lincomb (restrict a F) F\n 2. \\<And>a.\n       \\<lbrakk>finite F; F \\<subseteq> carrier M;\n        a \\<in> F \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> restrict a F\n                         \\<in> F \\<rightarrow>\\<^sub>E carrier R", "by (auto intro!: lincomb_cong)"], ["proof (state)\nthis:\n  mh.im = span F\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       F \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n       LinearCombinations.submodule R (span F) M", "from 1"], ["proof (chain)\npicking this:\n  mh.im = span F", "show \"submodule R (span F) M\""], ["proof (prove)\nusing this:\n  mh.im = span F\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span F) M", "by (metis mh.im_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span F) M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F1 \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n  LinearCombinations.submodule R (span ?F1) M\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k\n 2. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n 3. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k\n 2. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n 3. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "show \"\\<And>i j. i \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n           j \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<Longrightarrow>\n           \\<exists>k. k \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<and> span i \\<subseteq> span k \\<and> span j \\<subseteq> span k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k", "assume i: \"i \\<in> {F. F \\<subseteq> S \\<and> finite F}\" and j: \"j \\<in> {F. F \\<subseteq> S \\<and> finite F}\""], ["proof (state)\nthis:\n  i \\<in> {F. F \\<subseteq> S \\<and> finite F}\n  j \\<in> {F. F \\<subseteq> S \\<and> finite F}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n        j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            k \\<in> {F. F \\<subseteq> S \\<and>\n  finite F} \\<and>\n                            span i \\<subseteq> span k \\<and>\n                            span j \\<subseteq> span k", "from i j"], ["proof (chain)\npicking this:\n  i \\<in> {F. F \\<subseteq> S \\<and> finite F}\n  j \\<in> {F. F \\<subseteq> S \\<and> finite F}", "show \"?thesis i j\""], ["proof (prove)\nusing this:\n  i \\<in> {F. F \\<subseteq> S \\<and> finite F}\n  j \\<in> {F. F \\<subseteq> S \\<and> finite F}\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<and>\n       span i \\<subseteq> span k \\<and> span j \\<subseteq> span k", "apply (rule_tac x=\"i\\<union>j\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in> {F. F \\<subseteq> S \\<and> finite F};\n     j \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n    \\<Longrightarrow> i \\<union> j\n                      \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<and>\n                      span i \\<subseteq> span (i \\<union> j) \\<and>\n                      span j \\<subseteq> span (i \\<union> j)", "apply (auto del: subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<subseteq> S; finite i; j \\<subseteq> S; finite j\\<rbrakk>\n    \\<Longrightarrow> span i \\<subseteq> span (i \\<union> j)\n 2. \\<lbrakk>i \\<subseteq> S; finite i; j \\<subseteq> S; finite j\\<rbrakk>\n    \\<Longrightarrow> span j \\<subseteq> span (i \\<union> j)", "by (intro span_is_monotone, auto del: subsetI)+"], ["proof (state)\nthis:\n  \\<exists>k.\n     k \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<and>\n     span i \\<subseteq> span k \\<and> span j \\<subseteq> span k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<in> {F. F \\<subseteq> S \\<and> finite F};\n   ?j1 \\<in> {F. F \\<subseteq> S \\<and> finite F}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       k \\<in> {F. F \\<subseteq> S \\<and> finite F} \\<and>\n                       span ?i1 \\<subseteq> span k \\<and>\n                       span ?j1 \\<subseteq> span k\n\ngoal (2 subgoals):\n 1. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n 2. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n 2. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "show \"span S=(\\<Union> i\\<in>{F. F \\<subseteq> S \\<and> finite F}. span i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})", "by (unfold span_def,auto)"], ["proof (state)\nthis:\n  span S = \\<Union> (span ` {F. F \\<subseteq> S \\<and> finite F})\n\ngoal (1 subgoal):\n 1. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "have ne: \"S\\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "by fact"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "from ne"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "show \"{F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {F. F \\<subseteq> S \\<and> finite F} \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span S) M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A finite sum does not depend on the ambient module. This can be done for monoid, but \n\"submonoid\" isn't currently defined. (It can be copied, however, for groups\\ldots)\nThis lemma requires a somewhat annoying lemma foldD-not-depend. Then we show that linear combinations, \nlinear independence, span do not depend on the ambient module.\\<close>"], ["", "lemma (in module) finsum_not_depend:\n  fixes a A N\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>N\" and h3: \"submodule R N M\" and h4: \"f:A\\<rightarrow>N\"\n  shows \"(\\<Oplus>\\<^bsub>(md N)\\<^esub> v\\<in>A. f v) = (\\<Oplus>\\<^bsub>M\\<^esub> v\\<in>A. f v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum (md N) f A = finsum M f A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finsum (md N) f A = finsum M f A", "from h1 h2 h3 h4"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> N\n  LinearCombinations.submodule R N M\n  f \\<in> A \\<rightarrow> N", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> N\n  LinearCombinations.submodule R N M\n  f \\<in> A \\<rightarrow> N\n\ngoal (1 subgoal):\n 1. finsum (md N) f A = finsum M f A", "apply (unfold finsum_def finprod_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> (if finite A\n                       then foldD (carrier (add_monoid (md N)))\n                             ((\\<otimes>\\<^bsub>add_monoid (md N)\\<^esub>) \\<circ>\n                              f)\n                             \\<one>\\<^bsub>add_monoid (md N)\\<^esub> A\n                       else \\<one>\\<^bsub>add_monoid (md N)\\<^esub>) =\n                      (if finite A\n                       then foldD (carrier (add_monoid M))\n                             ((\\<otimes>\\<^bsub>add_monoid M\\<^esub>) \\<circ>\n                              f)\n                             \\<one>\\<^bsub>add_monoid M\\<^esub> A\n                       else \\<one>\\<^bsub>add_monoid M\\<^esub>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> foldD N ((\\<oplus>\\<^bsub>M\\<^esub>) \\<circ> f)\n                       \\<zero>\\<^bsub>M\\<^esub> A =\n                      foldD (carrier M)\n                       ((\\<oplus>\\<^bsub>M\\<^esub>) \\<circ> f)\n                       \\<zero>\\<^bsub>M\\<^esub> A", "apply (intro foldD_not_depend[where ?B=\"A\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> LCD A N ((\\<oplus>\\<^bsub>M\\<^esub>) \\<circ> f)\n 2. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> LCD A (carrier M)\n                       ((\\<oplus>\\<^bsub>M\\<^esub>) \\<circ> f)\n 3. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> N \\<subseteq> carrier M\n 4. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> \\<in> N\n 5. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> A\n 6. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     f \\<in> A \\<rightarrow> N\\<rbrakk>\n    \\<Longrightarrow> finite A", "apply (unfold submodule_def LCD_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>finite A; A \\<subseteq> N; f \\<in> A \\<rightarrow> N;\n        module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        x \\<in> A; y \\<in> A; z \\<in> N\\<rbrakk>\n       \\<Longrightarrow> f x \\<oplus>\\<^bsub>M\\<^esub>\n                         (f y \\<oplus>\\<^bsub>M\\<^esub> z) =\n                         f y \\<oplus>\\<^bsub>M\\<^esub>\n                         (f x \\<oplus>\\<^bsub>M\\<^esub> z)\n 2. \\<And>x y z.\n       \\<lbrakk>finite A; A \\<subseteq> N; f \\<in> A \\<rightarrow> N;\n        module R M; N \\<subseteq> carrier M;\n        \\<forall>v.\n           v \\<in> N \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> N \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> N \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N);\n        x \\<in> A; y \\<in> A; z \\<in> carrier M\\<rbrakk>\n       \\<Longrightarrow> f x \\<oplus>\\<^bsub>M\\<^esub>\n                         (f y \\<oplus>\\<^bsub>M\\<^esub> z) =\n                         f y \\<oplus>\\<^bsub>M\\<^esub>\n                         (f x \\<oplus>\\<^bsub>M\\<^esub> z)", "apply (meson M.add.m_lcomm PiE subsetCE)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  finsum (md N) f A = finsum M f A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) lincomb_not_depend:\n  fixes a A N\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>N\" and h3: \"submodule R N M\" and h4: \"a:A\\<rightarrow>carrier R\"\n  shows \"lincomb a A = module.lincomb (md N) a A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a A = module.lincomb (md N) a A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a A = module.lincomb (md N) a A", "from h3"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N M", "interpret N: module R \"(md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. module R (md N)", "by (rule submodule_is_module)"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a A = N.lincomb a A", "have 3: \"N=carrier (md N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = carrier (md N)", "by auto"], ["proof (state)\nthis:\n  N = carrier (md N)\n\ngoal (1 subgoal):\n 1. lincomb a A = N.lincomb a A", "have 4: \"(smult M ) = (smult (md N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<odot>\\<^bsub>M\\<^esub>) = (\\<odot>\\<^bsub>md N\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  (\\<odot>\\<^bsub>M\\<^esub>) = (\\<odot>\\<^bsub>md N\\<^esub>)\n\ngoal (1 subgoal):\n 1. lincomb a A = N.lincomb a A", "from h1 h2 h3 h4"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> N\n  LinearCombinations.submodule R N M\n  a \\<in> A \\<rightarrow> carrier R", "have \"(\\<Oplus>\\<^bsub>(md N)\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) = (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> N\n  LinearCombinations.submodule R N M\n  a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>md N\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v)", "apply (intro finsum_not_depend)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> N\n 3. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> LinearCombinations.submodule R N M\n 4. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v. a v \\<odot>\\<^bsub>M\\<^esub> v)\n                      \\<in> A \\<rightarrow> N", "using N.summands_valid"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> carrier (md N);\n   ?a \\<in> ?A \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<forall>v\\<in>?A.\n                       ?a v \\<odot>\\<^bsub>md N\\<^esub> v\n                       \\<in> carrier (md N)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> N\n 3. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> LinearCombinations.submodule R N M\n 4. \\<lbrakk>finite A; A \\<subseteq> N; LinearCombinations.submodule R N M;\n     a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v. a v \\<odot>\\<^bsub>M\\<^esub> v)\n                      \\<in> A \\<rightarrow> N", "by auto"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>md N\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. lincomb a A = N.lincomb a A", "from this"], ["proof (chain)\npicking this:\n  (\\<Oplus>\\<^bsub>md N\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Oplus>\\<^bsub>md N\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>M\\<^esub> v)\n\ngoal (1 subgoal):\n 1. lincomb a A = N.lincomb a A", "by (unfold lincomb_def N.lincomb_def, simp)"], ["proof (state)\nthis:\n  lincomb a A = N.lincomb a A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) span_li_not_depend:\n  fixes S N\n  assumes h2: \"S\\<subseteq>N\" and  h3: \"submodule R N M\"\n  shows \"module.span R (md N) S = module.span R M S\"\n    and \"module.lin_dep R (md N) S = module.lin_dep R M S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module.span R (md N) S = span S &&&\n    module.lin_dep R (md N) S = lin_dep S", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. module.span R (md N) S = span S\n 2. module.lin_dep R (md N) S = lin_dep S", "from h3"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N M", "interpret w: module R \"(md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. module R (md N)", "by (rule submodule_is_module)"], ["proof (state)\ngoal (2 subgoals):\n 1. w.span S = span S\n 2. w.lin_dep S = lin_dep S", "from h2"], ["proof (chain)\npicking this:\n  S \\<subseteq> N", "have 1:\"submodule R (module.span R (md N) S) (md N)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> N\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (w.span S) (md N)", "by (intro w.span_is_submodule, simp)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (w.span S) (md N)\n\ngoal (2 subgoals):\n 1. w.span S = span S\n 2. w.lin_dep S = lin_dep S", "have 3: \"\\<And>a A. (finite A \\<and> A\\<subseteq>S \\<and> a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow> \n    module.lincomb M a A = module.lincomb (md N) a A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a A.\n       finite A \\<and>\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n       lincomb a A = w.lincomb a A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a A.\n       finite A \\<and>\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n       lincomb a A = w.lincomb a A", "fix a A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a A.\n       finite A \\<and>\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n       lincomb a A = w.lincomb a A", "assume 31: \"finite A \\<and> A\\<subseteq>S \\<and> a \\<in> A \\<rightarrow> carrier R\""], ["proof (state)\nthis:\n  finite A \\<and> A \\<subseteq> S \\<and> a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>a A.\n       finite A \\<and>\n       A \\<subseteq> S \\<and>\n       a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n       lincomb a A = w.lincomb a A", "from assms 31"], ["proof (chain)\npicking this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M\n  finite A \\<and> A \\<subseteq> S \\<and> a \\<in> A \\<rightarrow> carrier R", "show \"?thesis a A\""], ["proof (prove)\nusing this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M\n  finite A \\<and> A \\<subseteq> S \\<and> a \\<in> A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a A = w.lincomb a A", "by (intro lincomb_not_depend, auto)"], ["proof (state)\nthis:\n  lincomb a A = w.lincomb a A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ?A1 \\<and>\n  ?A1 \\<subseteq> S \\<and>\n  ?a1 \\<in> ?A1 \\<rightarrow> carrier R \\<Longrightarrow>\n  lincomb ?a1 ?A1 = w.lincomb ?a1 ?A1\n\ngoal (2 subgoals):\n 1. w.span S = span S\n 2. w.lin_dep S = lin_dep S", "from 3"], ["proof (chain)\npicking this:\n  finite ?A1 \\<and>\n  ?A1 \\<subseteq> S \\<and>\n  ?a1 \\<in> ?A1 \\<rightarrow> carrier R \\<Longrightarrow>\n  lincomb ?a1 ?A1 = w.lincomb ?a1 ?A1", "show 4: \"module.span R (md N) S = module.span R M S\""], ["proof (prove)\nusing this:\n  finite ?A1 \\<and>\n  ?A1 \\<subseteq> S \\<and>\n  ?a1 \\<in> ?A1 \\<rightarrow> carrier R \\<Longrightarrow>\n  lincomb ?a1 ?A1 = w.lincomb ?a1 ?A1\n\ngoal (1 subgoal):\n 1. w.span S = span S", "apply (unfold span_def w.span_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        finite A \\<and>\n        A \\<subseteq> S \\<and>\n        a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n        lincomb a A = w.lincomb a A) \\<Longrightarrow>\n    {w.lincomb a A |a A.\n     finite A \\<and>\n     A \\<subseteq> S \\<and> a \\<in> A \\<rightarrow> carrier R} =\n    {lincomb a A |a A.\n     finite A \\<and>\n     A \\<subseteq> S \\<and> a \\<in> A \\<rightarrow> carrier R}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a A.\n       \\<lbrakk>\\<And>A a.\n                   finite A \\<and>\n                   A \\<subseteq> S \\<and>\n                   a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n                   lincomb a A = w.lincomb a A;\n        finite A; A \\<subseteq> S;\n        a \\<in> A \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa Aa.\n                            w.lincomb a A = lincomb aa Aa \\<and>\n                            finite Aa \\<and>\n                            Aa \\<subseteq> S \\<and>\n                            aa \\<in> Aa \\<rightarrow> carrier R", "by (metis)"], ["proof (state)\nthis:\n  w.span S = span S\n\ngoal (1 subgoal):\n 1. w.lin_dep S = lin_dep S", "have zeros: \"\\<zero>\\<^bsub>md N\\<^esub>=\\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>md N\\<^esub> = \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>md N\\<^esub> = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. w.lin_dep S = lin_dep S", "from assms 3"], ["proof (chain)\npicking this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M\n  finite ?A1 \\<and>\n  ?A1 \\<subseteq> S \\<and>\n  ?a1 \\<in> ?A1 \\<rightarrow> carrier R \\<Longrightarrow>\n  lincomb ?a1 ?A1 = w.lincomb ?a1 ?A1", "show 5: \"module.lin_dep R (md N) S = module.lin_dep R M S\""], ["proof (prove)\nusing this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M\n  finite ?A1 \\<and>\n  ?A1 \\<subseteq> S \\<and>\n  ?a1 \\<in> ?A1 \\<rightarrow> carrier R \\<Longrightarrow>\n  lincomb ?a1 ?A1 = w.lincomb ?a1 ?A1\n\ngoal (1 subgoal):\n 1. w.lin_dep S = lin_dep S", "apply (unfold lin_dep_def w.lin_dep_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> N; LinearCombinations.submodule R N M;\n     \\<And>A a.\n        finite A \\<and>\n        A \\<subseteq> S \\<and>\n        a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n        lincomb a A = w.lincomb a A\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>A a v.\n                          finite A \\<and>\n                          A \\<subseteq> S \\<and>\n                          a \\<in> A \\<rightarrow> carrier R \\<and>\n                          w.lincomb a A = \\<zero>\\<^bsub>md N\\<^esub> \\<and>\n                          v \\<in> A \\<and> a v \\<noteq> \\<zero>) =\n                      (\\<exists>A a v.\n                          finite A \\<and>\n                          A \\<subseteq> S \\<and>\n                          a \\<in> A \\<rightarrow> carrier R \\<and>\n                          lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                          v \\<in> A \\<and> a v \\<noteq> \\<zero>)", "apply (subst zeros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> N; LinearCombinations.submodule R N M;\n     \\<And>A a.\n        finite A \\<and>\n        A \\<subseteq> S \\<and>\n        a \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n        lincomb a A = w.lincomb a A\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>A a v.\n                          finite A \\<and>\n                          A \\<subseteq> S \\<and>\n                          a \\<in> A \\<rightarrow> carrier R \\<and>\n                          w.lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                          v \\<in> A \\<and> a v \\<noteq> \\<zero>) =\n                      (\\<exists>A a v.\n                          finite A \\<and>\n                          A \\<subseteq> S \\<and>\n                          a \\<in> A \\<rightarrow> carrier R \\<and>\n                          lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                          v \\<in> A \\<and> a v \\<noteq> \\<zero>)", "by metis"], ["proof (state)\nthis:\n  w.lin_dep S = lin_dep S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) span_is_subset: \n  fixes S N\n  assumes h2: \"S\\<subseteq>N\" and  h3: \"submodule R N M\"\n  shows \"span S \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "from h3"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N M", "interpret w: module R \"(md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. module R (md N)", "by (rule submodule_is_module)"], ["proof (state)\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "from h2"], ["proof (chain)\npicking this:\n  S \\<subseteq> N", "have 1:\"submodule R (module.span R (md N) S) (md N)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> N\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (w.span S) (md N)", "by (intro w.span_is_submodule, simp)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (w.span S) (md N)\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "from assms"], ["proof (chain)\npicking this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M", "have 4: \"module.span R (md N) S = module.span R M S\""], ["proof (prove)\nusing this:\n  S \\<subseteq> N\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. w.span S = span S", "by (rule span_li_not_depend)"], ["proof (state)\nthis:\n  w.span S = span S\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "from 1 4"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (w.span S) (md N)\n  w.span S = span S", "have 5: \"submodule R (module.span R M S) (md N)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (w.span S) (md N)\n  w.span S = span S\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span S) (md N)", "by auto"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span S) (md N)\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "from 5"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span S) (md N)", "show ?thesis"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span S) (md N)\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> N", "by (unfold submodule_def, simp)"], ["proof (state)\nthis:\n  span S \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) span_is_subset2:\n  fixes S\n  assumes h2: \"S\\<subseteq>carrier M\"\n  shows \"span S \\<subseteq> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span S \\<subseteq> carrier M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span S \\<subseteq> carrier M", "have 0: \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", ".."], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> carrier M", "from 0"], ["proof (chain)\npicking this:\n  module R M", "have h3: \"submodule R (carrier M) M\""], ["proof (prove)\nusing this:\n  module R M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (carrier M) M", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (carrier M) M\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> carrier M", "from h2 h3"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier M\n  LinearCombinations.submodule R (carrier M) M", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier M\n  LinearCombinations.submodule R (carrier M) M\n\ngoal (1 subgoal):\n 1. span S \\<subseteq> carrier M", "by (rule span_is_subset)"], ["proof (state)\nthis:\n  span S \\<subseteq> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) in_own_span: \n  fixes S\n  assumes  inC:\"S\\<subseteq>carrier M\"\n  shows \"S \\<subseteq> span S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> span S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<subseteq> span S", "from inC"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier M", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. S \\<subseteq> span S", "apply (unfold span_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>S \\<subseteq> carrier M; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a A.\n                            x = lincomb a A \\<and>\n                            finite A \\<and>\n                            A \\<subseteq> S \\<and>\n                            a \\<in> A \\<rightarrow> carrier R", "apply (rename_tac v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>S \\<subseteq> carrier M; v \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a A.\n                            v = lincomb a A \\<and>\n                            finite A \\<and>\n                            A \\<subseteq> S \\<and>\n                            a \\<in> A \\<rightarrow> carrier R", "apply (rule_tac x=\"(\\<lambda> w. if (w=v) then \\<one>\\<^bsub>R\\<^esub> else \\<zero>\\<^bsub>R\\<^esub>)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>S \\<subseteq> carrier M; v \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A.\n                            v =\n                            lincomb\n                             (\\<lambda>w. if w = v then \\<one> else \\<zero>)\n                             A \\<and>\n                            finite A \\<and>\n                            A \\<subseteq> S \\<and>\n                            (\\<lambda>w. if w = v then \\<one> else \\<zero>)\n                            \\<in> A \\<rightarrow> carrier R", "apply (rule_tac x=\"{v}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>S \\<subseteq> carrier M; v \\<in> S\\<rbrakk>\n       \\<Longrightarrow> v =\n                         lincomb\n                          (\\<lambda>w. if w = v then \\<one> else \\<zero>)\n                          {v} \\<and>\n                         finite {v} \\<and>\n                         {v} \\<subseteq> S \\<and>\n                         (\\<lambda>w. if w = v then \\<one> else \\<zero>)\n                         \\<in> {v} \\<rightarrow> carrier R", "apply (unfold lincomb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>S \\<subseteq> carrier M; v \\<in> S\\<rbrakk>\n       \\<Longrightarrow> v =\n                         (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>{v}. (if va = v\n                          then \\<one> else \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n                         va) \\<and>\n                         finite {v} \\<and>\n                         {v} \\<subseteq> S \\<and>\n                         (\\<lambda>w. if w = v then \\<one> else \\<zero>)\n                         \\<in> {v} \\<rightarrow> carrier R", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> span S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) supset_ld_is_ld:\n  fixes A B\n  assumes ld: \"lin_dep A\" and sub: \"A \\<subseteq> B\"\n  shows \"lin_dep B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep B", "from ld"], ["proof (chain)\npicking this:\n  lin_dep A", "obtain A' a v where 1: \"(finite A' \\<and> A'\\<subseteq>A \\<and> (a\\<in> (A'\\<rightarrow>carrier R)) \\<and> (lincomb a A' = \\<zero>\\<^bsub>M\\<^esub>) \\<and> (v\\<in>A') \\<and> (a v\\<noteq> \\<zero>\\<^bsub>R\\<^esub>))\""], ["proof (prove)\nusing this:\n  lin_dep A\n\ngoal (1 subgoal):\n 1. (\\<And>A' a v.\n        finite A' \\<and>\n        A' \\<subseteq> A \\<and>\n        a \\<in> A' \\<rightarrow> carrier R \\<and>\n        lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n        v \\<in> A' \\<and> a v \\<noteq> \\<zero> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold lin_dep_def, auto)"], ["proof (state)\nthis:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier R \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. lin_dep B", "from 1 sub"], ["proof (chain)\npicking this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier R \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\n  A \\<subseteq> B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier R \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. lin_dep B", "apply (unfold lin_dep_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier R \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>;\n     A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A a v.\n                         finite A \\<and>\n                         A \\<subseteq> B \\<and>\n                         a \\<in> A \\<rightarrow> carrier R \\<and>\n                         lincomb a A = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> A \\<and> a v \\<noteq> \\<zero>", "apply (rule_tac x=\"A'\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier R \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>;\n     A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a v.\n                         finite A' \\<and>\n                         A' \\<subseteq> B \\<and>\n                         a \\<in> A' \\<rightarrow> carrier R \\<and>\n                         lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> A' \\<and> a v \\<noteq> \\<zero>", "apply (rule_tac x=\"a\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier R \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>;\n     A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v.\n                         finite A' \\<and>\n                         A' \\<subseteq> B \\<and>\n                         a \\<in> A' \\<rightarrow> carrier R \\<and>\n                         lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                         v \\<in> A' \\<and> a v \\<noteq> \\<zero>", "apply (rule_tac x=\"v\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier R \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>;\n     A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> finite A' \\<and>\n                      A' \\<subseteq> B \\<and>\n                      a \\<in> A' \\<rightarrow> carrier R \\<and>\n                      lincomb a A' = \\<zero>\\<^bsub>M\\<^esub> \\<and>\n                      v \\<in> A' \\<and> a v \\<noteq> \\<zero>", "by auto"], ["proof (state)\nthis:\n  lin_dep B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) subset_li_is_li:\n  fixes A B\n  assumes li: \"lin_indpt A\" and sub: \"B \\<subseteq> A\" \n  shows \"lin_indpt B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt B", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lin_indpt B \\<Longrightarrow> False", "assume ld: \"\\<not>lin_indpt B\""], ["proof (state)\nthis:\n  \\<not> lin_indpt B\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt B \\<Longrightarrow> False", "from ld sub"], ["proof (chain)\npicking this:\n  \\<not> lin_indpt B\n  B \\<subseteq> A", "have ldA: \"lin_dep A\""], ["proof (prove)\nusing this:\n  \\<not> lin_indpt B\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. lin_dep A", "by (metis supset_ld_is_ld)"], ["proof (state)\nthis:\n  lin_dep A\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt B \\<Longrightarrow> False", "from li ldA"], ["proof (chain)\npicking this:\n  lin_indpt A\n  lin_dep A", "show False"], ["proof (prove)\nusing this:\n  lin_indpt A\n  lin_dep A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in mod_hom) hom_sum:\n  fixes A B g\n  assumes h2: \"A\\<subseteq>carrier M\" and h3: \"g:A\\<rightarrow>carrier M\"\n  shows \"f (\\<Oplus>\\<^bsub>M\\<^esub> a\\<in>A. g a) = (\\<Oplus>\\<^bsub>N\\<^esub> a\\<in>A. f (g a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (finsum M g A) = (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (finsum M g A) = (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))", "from h2 h3"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier M\n  g \\<in> A \\<rightarrow> carrier M", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n  g \\<in> A \\<rightarrow> carrier M\n\ngoal (1 subgoal):\n 1. f (finsum M g A) = (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))", "proof (induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g A) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     g \\<in> {} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (finsum M g {}) =\n                      (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>{}. f (g a))\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         g \\<in> F \\<rightarrow> carrier M\\<rbrakk>\n        \\<Longrightarrow> f (finsum M g F) =\n                          (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>F. f (g a));\n        insert x F \\<subseteq> carrier M;\n        g \\<in> insert x F \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g (insert x F)) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert x\n                    F. f (g a))", "(*doesn't work on outside?*)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g A) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     g \\<in> {} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (finsum M g {}) =\n                      (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>{}. f (g a))\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         g \\<in> F \\<rightarrow> carrier M\\<rbrakk>\n        \\<Longrightarrow> f (finsum M g F) =\n                          (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>F. f (g a));\n        insert x F \\<subseteq> carrier M;\n        g \\<in> insert x F \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g (insert x F)) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert x\n                    F. f (g a))", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier M;\n   g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (finsum M g A) =\n                    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n  insert a A \\<subseteq> carrier M\n  g \\<in> insert a A \\<rightarrow> carrier M\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g A) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     g \\<in> {} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (finsum M g {}) =\n                      (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>{}. f (g a))\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         g \\<in> F \\<rightarrow> carrier M\\<rbrakk>\n        \\<Longrightarrow> f (finsum M g F) =\n                          (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>F. f (g a));\n        insert x F \\<subseteq> carrier M;\n        g \\<in> insert x F \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g (insert x F)) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert x\n                    F. f (g a))", "then"], ["proof (chain)\npicking this:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier M;\n   g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (finsum M g A) =\n                    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n  insert a A \\<subseteq> carrier M\n  g \\<in> insert a A \\<rightarrow> carrier M", "have \"(\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a)) = f (g a) \\<oplus>\\<^bsub>N\\<^esub> (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\""], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier M;\n   g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (finsum M g A) =\n                    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n  insert a A \\<subseteq> carrier M\n  g \\<in> insert a A \\<rightarrow> carrier M\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a)) =\n    f (g a) \\<oplus>\\<^bsub>N\\<^esub>\n    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))", "by (intro finsum_insert, auto)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a)) =\n  f (g a) \\<oplus>\\<^bsub>N\\<^esub>\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g A) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     g \\<in> {} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (finsum M g {}) =\n                      (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>{}. f (g a))\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         g \\<in> F \\<rightarrow> carrier M\\<rbrakk>\n        \\<Longrightarrow> f (finsum M g F) =\n                          (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>F. f (g a));\n        insert x F \\<subseteq> carrier M;\n        g \\<in> insert x F \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g (insert x F)) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert x\n                    F. f (g a))", "with insert.prems insert.hyps"], ["proof (chain)\npicking this:\n  insert a A \\<subseteq> carrier M\n  g \\<in> insert a A \\<rightarrow> carrier M\n  finite A\n  a \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier M;\n   g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (finsum M g A) =\n                    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a)) =\n  f (g a) \\<oplus>\\<^bsub>N\\<^esub>\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))", "show ?case"], ["proof (prove)\nusing this:\n  insert a A \\<subseteq> carrier M\n  g \\<in> insert a A \\<rightarrow> carrier M\n  finite A\n  a \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier M;\n   g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n  \\<Longrightarrow> f (finsum M g A) =\n                    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a)) =\n  f (g a) \\<oplus>\\<^bsub>N\\<^esub>\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n\ngoal (1 subgoal):\n 1. f (finsum M g (insert a A)) =\n    (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a))", "by simp"], ["proof (state)\nthis:\n  f (finsum M g (insert a A)) =\n  (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>insert a A. f (g a))\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        g \\<in> A \\<rightarrow> carrier M\\<rbrakk>\n       \\<Longrightarrow> f (finsum M g A) =\n                         (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     g \\<in> {} \\<rightarrow> carrier M\\<rbrakk>\n    \\<Longrightarrow> f (finsum M g {}) =\n                      (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>{}. f (g a))", "qed auto"], ["proof (state)\nthis:\n  f (finsum M g A) = (\\<Oplus>\\<^bsub>N\\<^esub>a\\<in>A. f (g a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}