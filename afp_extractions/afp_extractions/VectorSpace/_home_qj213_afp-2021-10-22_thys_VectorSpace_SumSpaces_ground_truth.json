{"file_name": "/home/qj213/afp-2021-10-22/thys/VectorSpace/SumSpaces.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VectorSpace", "problem_names": ["lemma direct_sum_is_module: \n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"module R (direct_sum M1 M2)\"", "lemma inj1_hom:\n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)\"", "lemma inj2_hom:\n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)\"", "lemma (in module) sum_map_hom: \n  fixes M1 M2\n  assumes h1: \"submodule R M1 M\" and h2: \"submodule R M2 M\"\n  shows \"mod_hom R (direct_sum (md M1) (md M2)) M (\\<lambda> v. (fst v) \\<oplus>\\<^bsub>M\\<^esub> (snd v))\"", "lemma (in module) sum_is_submodule:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"submodule R (submodule_sum N1 N2) M\"", "lemma (in module) in_sum:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"N1 \\<subseteq> submodule_sum N1 N2\"", "lemma (in module) msum_comm:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"(submodule_sum N1 N2) = (submodule_sum N2 N1)\"", "lemma (in module) sum_is_minimal:\n  fixes N N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\" and h3: \"submodule R N M\"\n  shows \"(submodule_sum N1 N2) \\<subseteq> N \\<longleftrightarrow> N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\"", "lemma (in module) span_union_is_sum: \n  fixes A B\n  assumes  h2: \"A\\<subseteq>carrier M\" and h3: \"B\\<subseteq>carrier M\"\n  shows \"span (A\\<union> B) = submodule_sum (span A) (span B)\""], "translations": [["", "lemma direct_sum_is_module: \n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"module R (direct_sum M1 M2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from h1"], ["proof (chain)\npicking this:\n  module R M1", "have 1: \"cring R\""], ["proof (prove)\nusing this:\n  module R M1\n\ngoal (1 subgoal):\n 1. cring R", "by (unfold module_def, auto)"], ["proof (state)\nthis:\n  cring R\n\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from h1"], ["proof (chain)\npicking this:\n  module R M1", "interpret v1: module R M1"], ["proof (prove)\nusing this:\n  module R M1\n\ngoal (1 subgoal):\n 1. module R M1", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from h2"], ["proof (chain)\npicking this:\n  module R M2", "interpret v2: module R M2"], ["proof (prove)\nusing this:\n  module R M2\n\ngoal (1 subgoal):\n 1. module R M2", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from h1 h2"], ["proof (chain)\npicking this:\n  module R M1\n  module R M2", "have 2: \"abelian_group (direct_sum M1 M2)\""], ["proof (prove)\nusing this:\n  module R M1\n  module R M2\n\ngoal (1 subgoal):\n 1. abelian_group (direct_sum M1 M2)", "apply (intro abelian_groupI, auto)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>(a, b) \\<in> carrier (direct_sum M1 M2);\n        (aa, ba) \\<in> carrier (direct_sum M1 M2); module R M1;\n        module R M2\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba)\n                         \\<in> carrier (direct_sum M1 M2)\n 2. \\<lbrakk>module R M1; module R M2\\<rbrakk>\n    \\<Longrightarrow> \\<zero>\\<^bsub>direct_sum M1 M2\\<^esub>\n                      \\<in> carrier (direct_sum M1 M2)\n 3. \\<And>a b aa ba ab bb.\n       \\<lbrakk>(a, b) \\<in> carrier (direct_sum M1 M2);\n        (aa, ba) \\<in> carrier (direct_sum M1 M2);\n        (ab, bb) \\<in> carrier (direct_sum M1 M2); module R M1;\n        module R M2\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (ab, bb) =\n                         (a, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         ((aa, ba) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                          (ab, bb))\n 4. \\<And>a b aa ba.\n       \\<lbrakk>(a, b) \\<in> carrier (direct_sum M1 M2);\n        (aa, ba) \\<in> carrier (direct_sum M1 M2); module R M1;\n        module R M2\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba) =\n                         (aa, ba) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (a, b)\n 5. \\<And>a b.\n       \\<lbrakk>(a, b) \\<in> carrier (direct_sum M1 M2); module R M1;\n        module R M2\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>direct_sum M1 M2\\<^esub> \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (a, b) =\n                         (a, b)\n 6. \\<And>a b.\n       \\<lbrakk>(a, b) \\<in> carrier (direct_sum M1 M2); module R M1;\n        module R M2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>carrier (direct_sum M1 M2).\n                            y \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                            (a, b) =\n                            \\<zero>\\<^bsub>direct_sum M1 M2\\<^esub>", "apply (unfold direct_sum_def, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba ab bb.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier M1;\n        b \\<in> carrier M2; aa \\<in> carrier M1; ba \\<in> carrier M2;\n        ab \\<in> carrier M1; bb \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M1\\<^esub>\n                         aa \\<oplus>\\<^bsub>M1\\<^esub>\n                         ab =\n                         a \\<oplus>\\<^bsub>M1\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M1\\<^esub> ab)\n 2. \\<And>a b aa ba ab bb.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier M1;\n        b \\<in> carrier M2; aa \\<in> carrier M1; ba \\<in> carrier M2;\n        ab \\<in> carrier M1; bb \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> b \\<oplus>\\<^bsub>M2\\<^esub>\n                         ba \\<oplus>\\<^bsub>M2\\<^esub>\n                         bb =\n                         b \\<oplus>\\<^bsub>M2\\<^esub>\n                         (ba \\<oplus>\\<^bsub>M2\\<^esub> bb)\n 3. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier M1;\n        b \\<in> carrier M2; aa \\<in> carrier M1;\n        ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M1\\<^esub> aa =\n                         aa \\<oplus>\\<^bsub>M1\\<^esub> a\n 4. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier M1;\n        b \\<in> carrier M2; aa \\<in> carrier M1;\n        ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> b \\<oplus>\\<^bsub>M2\\<^esub> ba =\n                         ba \\<oplus>\\<^bsub>M2\\<^esub> b", "by (auto simp add: v1.a_ac v2.a_ac)"], ["proof (state)\nthis:\n  abelian_group (direct_sum M1 M2)\n\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from h1 h2 assms"], ["proof (chain)\npicking this:\n  module R M1\n  module R M2\n  module R M1\n  module R M2", "have 3: \"module_axioms R (direct_sum M1 M2)\""], ["proof (prove)\nusing this:\n  module R M1\n  module R M2\n  module R M1\n  module R M2\n\ngoal (1 subgoal):\n 1. module_axioms R (direct_sum M1 M2)", "apply (unfold module_axioms_def, auto)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a aa b.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        (aa, b) \\<in> carrier (direct_sum M1 M2)\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub> (aa, b)\n                         \\<in> carrier (direct_sum M1 M2)\n 2. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R;\n        (aa, ba) \\<in> carrier (direct_sum M1 M2)\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus>\\<^bsub>R\\<^esub>\n                          b) \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba) =\n                         a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         b \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub> (aa, ba)\n 3. \\<And>a aa b ab ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        (aa, b) \\<in> carrier (direct_sum M1 M2);\n        (ab, ba) \\<in> carrier (direct_sum M1 M2)\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         ((aa, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                          (ab, ba)) =\n                         a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, b) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub> (ab, ba)\n 4. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R;\n        (aa, ba) \\<in> carrier (direct_sum M1 M2)\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes>\\<^bsub>R\\<^esub>\n                         b \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (aa, ba) =\n                         a \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (b \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                          (aa, ba))\n 5. \\<And>a b.\n       \\<lbrakk>module R M1; module R M2;\n        (a, b) \\<in> carrier (direct_sum M1 M2)\\<rbrakk>\n       \\<Longrightarrow> \\<one>\\<^bsub>R\\<^esub> \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (a, b) =\n                         (a, b)", "apply (unfold direct_sum_def, auto)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R; aa \\<in> carrier M1; ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus>\\<^bsub>R\\<^esub>\n                          b) \\<odot>\\<^bsub>M1\\<^esub>\n                         aa =\n                         a \\<odot>\\<^bsub>M1\\<^esub>\n                         aa \\<oplus>\\<^bsub>M1\\<^esub>\n                         b \\<odot>\\<^bsub>M1\\<^esub> aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R; aa \\<in> carrier M1; ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus>\\<^bsub>R\\<^esub>\n                          b) \\<odot>\\<^bsub>M2\\<^esub>\n                         ba =\n                         a \\<odot>\\<^bsub>M2\\<^esub>\n                         ba \\<oplus>\\<^bsub>M2\\<^esub>\n                         b \\<odot>\\<^bsub>M2\\<^esub> ba\n 3. \\<And>a aa b ab ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        aa \\<in> carrier M1; b \\<in> carrier M2; ab \\<in> carrier M1;\n        ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>M1\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M1\\<^esub> ab) =\n                         a \\<odot>\\<^bsub>M1\\<^esub>\n                         aa \\<oplus>\\<^bsub>M1\\<^esub>\n                         a \\<odot>\\<^bsub>M1\\<^esub> ab\n 4. \\<And>a aa b ab ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        aa \\<in> carrier M1; b \\<in> carrier M2; ab \\<in> carrier M1;\n        ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>M2\\<^esub>\n                         (b \\<oplus>\\<^bsub>M2\\<^esub> ba) =\n                         a \\<odot>\\<^bsub>M2\\<^esub>\n                         b \\<oplus>\\<^bsub>M2\\<^esub>\n                         a \\<odot>\\<^bsub>M2\\<^esub> ba\n 5. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R; aa \\<in> carrier M1; ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes>\\<^bsub>R\\<^esub>\n                         b \\<odot>\\<^bsub>M1\\<^esub>\n                         aa =\n                         a \\<odot>\\<^bsub>M1\\<^esub>\n                         (b \\<odot>\\<^bsub>M1\\<^esub> aa)\n 6. \\<And>a b aa ba.\n       \\<lbrakk>module R M1; module R M2; a \\<in> carrier R;\n        b \\<in> carrier R; aa \\<in> carrier M1; ba \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes>\\<^bsub>R\\<^esub>\n                         b \\<odot>\\<^bsub>M2\\<^esub>\n                         ba =\n                         a \\<odot>\\<^bsub>M2\\<^esub>\n                         (b \\<odot>\\<^bsub>M2\\<^esub> ba)", "by (auto simp add: v1.smult_l_distr v2.smult_l_distr v1.smult_r_distr v2.smult_r_distr\n      v1.smult_assoc1 v2.smult_assoc1)"], ["proof (state)\nthis:\n  module_axioms R (direct_sum M1 M2)\n\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "from 1 2 3"], ["proof (chain)\npicking this:\n  cring R\n  abelian_group (direct_sum M1 M2)\n  module_axioms R (direct_sum M1 M2)", "show ?thesis"], ["proof (prove)\nusing this:\n  cring R\n  abelian_group (direct_sum M1 M2)\n  module_axioms R (direct_sum M1 M2)\n\ngoal (1 subgoal):\n 1. module R (direct_sum M1 M2)", "by (unfold module_def, auto)"], ["proof (state)\nthis:\n  module R (direct_sum M1 M2)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition inj1:: \"('a,'b) module \\<Rightarrow> ('a, 'c) module \\<Rightarrow>('b\\<Rightarrow>('b\\<times>'c))\"\n  where \"inj1 M1 M2 = (\\<lambda>v. (v, \\<zero>\\<^bsub>M2\\<^esub>))\""], ["", "definition inj2:: \"('a,'b) module \\<Rightarrow> ('a, 'c) module \\<Rightarrow>('c\\<Rightarrow>('b\\<times>'c))\"\n  where \"inj2 M1 M2 = (\\<lambda>v. (\\<zero>\\<^bsub>M1\\<^esub>, v))\""], ["", "lemma inj1_hom:\n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)", "from h1"], ["proof (chain)\npicking this:\n  module R M1", "interpret v1:module R M1"], ["proof (prove)\nusing this:\n  module R M1\n\ngoal (1 subgoal):\n 1. module R M1", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)", "from h2"], ["proof (chain)\npicking this:\n  module R M2", "interpret v2:module R M2"], ["proof (prove)\nusing this:\n  module R M2\n\ngoal (1 subgoal):\n 1. module R M2", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)", "from h1 h2"], ["proof (chain)\npicking this:\n  module R M1\n  module R M2", "show ?thesis"], ["proof (prove)\nusing this:\n  module R M1\n  module R M2\n\ngoal (1 subgoal):\n 1. mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)", "apply (unfold mod_hom_def module_hom_def mod_hom_axioms_def inj1_def, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>module R M1; module R M2\\<rbrakk>\n    \\<Longrightarrow> module R (direct_sum M1 M2)\n 2. \\<And>x.\n       \\<lbrakk>module R M1; module R M2; x \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (x, \\<zero>\\<^bsub>M2\\<^esub>)\n                         \\<in> carrier (direct_sum M1 M2)\n 3. \\<And>m1 m2.\n       \\<lbrakk>module R M1; module R M2; m1 \\<in> carrier M1;\n        m2 \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (m1 \\<oplus>\\<^bsub>M1\\<^esub> m2,\n                          \\<zero>\\<^bsub>M2\\<^esub>) =\n                         (m1,\n                          \\<zero>\\<^bsub>M2\\<^esub>) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (m2, \\<zero>\\<^bsub>M2\\<^esub>)\n 4. \\<And>r m.\n       \\<lbrakk>module R M1; module R M2; r \\<in> carrier R;\n        m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (r \\<odot>\\<^bsub>M1\\<^esub> m,\n                          \\<zero>\\<^bsub>M2\\<^esub>) =\n                         r \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (m, \\<zero>\\<^bsub>M2\\<^esub>)", "apply (rule direct_sum_is_module, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>module R M1; module R M2; x \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (x, \\<zero>\\<^bsub>M2\\<^esub>)\n                         \\<in> carrier (direct_sum M1 M2)\n 2. \\<And>m1 m2.\n       \\<lbrakk>module R M1; module R M2; m1 \\<in> carrier M1;\n        m2 \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (m1 \\<oplus>\\<^bsub>M1\\<^esub> m2,\n                          \\<zero>\\<^bsub>M2\\<^esub>) =\n                         (m1,\n                          \\<zero>\\<^bsub>M2\\<^esub>) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (m2, \\<zero>\\<^bsub>M2\\<^esub>)\n 3. \\<And>r m.\n       \\<lbrakk>module R M1; module R M2; r \\<in> carrier R;\n        m \\<in> carrier M1\\<rbrakk>\n       \\<Longrightarrow> (r \\<odot>\\<^bsub>M1\\<^esub> m,\n                          \\<zero>\\<^bsub>M2\\<^esub>) =\n                         r \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (m, \\<zero>\\<^bsub>M2\\<^esub>)", "by (unfold direct_sum_def, auto)"], ["proof (state)\nthis:\n  mod_hom R M1 (direct_sum M1 M2) (inj1 M1 M2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj2_hom:\n  fixes R M1 M2\n  assumes h1: \"module R M1\" and h2: \"module R M2\"\n  shows \"mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)", "from h1"], ["proof (chain)\npicking this:\n  module R M1", "interpret v1:module R M1"], ["proof (prove)\nusing this:\n  module R M1\n\ngoal (1 subgoal):\n 1. module R M1", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)", "from h2"], ["proof (chain)\npicking this:\n  module R M2", "interpret v2:module R M2"], ["proof (prove)\nusing this:\n  module R M2\n\ngoal (1 subgoal):\n 1. module R M2", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)", "from h1 h2"], ["proof (chain)\npicking this:\n  module R M1\n  module R M2", "show ?thesis"], ["proof (prove)\nusing this:\n  module R M1\n  module R M2\n\ngoal (1 subgoal):\n 1. mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)", "apply (unfold mod_hom_def module_hom_def mod_hom_axioms_def inj2_def, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>module R M1; module R M2\\<rbrakk>\n    \\<Longrightarrow> module R (direct_sum M1 M2)\n 2. \\<And>x.\n       \\<lbrakk>module R M1; module R M2; x \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>, x)\n                         \\<in> carrier (direct_sum M1 M2)\n 3. \\<And>m1 m2.\n       \\<lbrakk>module R M1; module R M2; m1 \\<in> carrier M2;\n        m2 \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>,\n                          m1 \\<oplus>\\<^bsub>M2\\<^esub> m2) =\n                         (\\<zero>\\<^bsub>M1\\<^esub>,\n                          m1) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (\\<zero>\\<^bsub>M1\\<^esub>, m2)\n 4. \\<And>r m.\n       \\<lbrakk>module R M1; module R M2; r \\<in> carrier R;\n        m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>,\n                          r \\<odot>\\<^bsub>M2\\<^esub> m) =\n                         r \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (\\<zero>\\<^bsub>M1\\<^esub>, m)", "apply (rule direct_sum_is_module, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>module R M1; module R M2; x \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>, x)\n                         \\<in> carrier (direct_sum M1 M2)\n 2. \\<And>m1 m2.\n       \\<lbrakk>module R M1; module R M2; m1 \\<in> carrier M2;\n        m2 \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>,\n                          m1 \\<oplus>\\<^bsub>M2\\<^esub> m2) =\n                         (\\<zero>\\<^bsub>M1\\<^esub>,\n                          m1) \\<oplus>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (\\<zero>\\<^bsub>M1\\<^esub>, m2)\n 3. \\<And>r m.\n       \\<lbrakk>module R M1; module R M2; r \\<in> carrier R;\n        m \\<in> carrier M2\\<rbrakk>\n       \\<Longrightarrow> (\\<zero>\\<^bsub>M1\\<^esub>,\n                          r \\<odot>\\<^bsub>M2\\<^esub> m) =\n                         r \\<odot>\\<^bsub>direct_sum M1 M2\\<^esub>\n                         (\\<zero>\\<^bsub>M1\\<^esub>, m)", "by (unfold direct_sum_def, auto)"], ["proof (state)\nthis:\n  mod_hom R M2 (direct_sum M1 M2) (inj2 M1 M2)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For submodules $M_1,M_2\\subseteq M$, the map $M_1\\oplus M_2\\to M$ given by $(m_1,m_2)\\mapsto \nm_1+m_2$ is linear.\\<close>"], ["", "lemma (in module) sum_map_hom: \n  fixes M1 M2\n  assumes h1: \"submodule R M1 M\" and h2: \"submodule R M2 M\"\n  shows \"mod_hom R (direct_sum (md M1) (md M2)) M (\\<lambda> v. (fst v) \\<oplus>\\<^bsub>M\\<^esub> (snd v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "have 0: \"module R M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module R M", ".."], ["proof (state)\nthis:\n  module R M\n\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "from h1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R M1 M", "have 1: \"module R (md M1)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R M1 M\n\ngoal (1 subgoal):\n 1. module R (md M1)", "by (rule submodule_is_module)"], ["proof (state)\nthis:\n  module R (md M1)\n\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "from h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R M2 M", "have 2: \"module R (md M2)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R M2 M\n\ngoal (1 subgoal):\n 1. module R (md M2)", "by (rule submodule_is_module)"], ["proof (state)\nthis:\n  module R (md M2)\n\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "from h1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R M1 M", "interpret w1: module R \"(md M1)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R M1 M\n\ngoal (1 subgoal):\n 1. module R (md M1)", "by (rule submodule_is_module)"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "from h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R M2 M", "interpret w2: module R \"(md M2)\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R M2 M\n\ngoal (1 subgoal):\n 1. module R (md M2)", "by (rule submodule_is_module)"], ["proof (state)\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "from 0 h1 h2 1 2"], ["proof (chain)\npicking this:\n  module R M\n  LinearCombinations.submodule R M1 M\n  LinearCombinations.submodule R M2 M\n  module R (md M1)\n  module R (md M2)", "show ?thesis"], ["proof (prove)\nusing this:\n  module R M\n  LinearCombinations.submodule R M1 M\n  LinearCombinations.submodule R M2 M\n  module R (md M1)\n  module R (md M2)\n\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md M1) (md M2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "apply (unfold mod_hom_def mod_hom_axioms_def module_hom_def, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n     LinearCombinations.submodule R M2 M; module R (md M1);\n     module R (md M2)\\<rbrakk>\n    \\<Longrightarrow> module R (direct_sum (md M1) (md M2))\n 2. \\<And>a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2);\n        (a, b) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub> b \\<in> carrier M\n 3. \\<And>a b aa ba.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); (a, b) \\<in> carrier (direct_sum (md M1) (md M2));\n        (aa, ba) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> fst ((a, b) \\<oplus>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (aa, ba)) \\<oplus>\\<^bsub>M\\<^esub>\n                         snd ((a, b) \\<oplus>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (aa, ba)) =\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         b \\<oplus>\\<^bsub>M\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M\\<^esub> ba)\n 4. \\<And>r a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); r \\<in> carrier R;\n        (a, b) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> fst (r \\<odot>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (a, b)) \\<oplus>\\<^bsub>M\\<^esub>\n                         snd (r \\<odot>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (a, b)) =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (a \\<oplus>\\<^bsub>M\\<^esub> b)", "apply (rule direct_sum_is_module, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2);\n        (a, b) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub> b \\<in> carrier M\n 2. \\<And>a b aa ba.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); (a, b) \\<in> carrier (direct_sum (md M1) (md M2));\n        (aa, ba) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> fst ((a, b) \\<oplus>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (aa, ba)) \\<oplus>\\<^bsub>M\\<^esub>\n                         snd ((a, b) \\<oplus>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (aa, ba)) =\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         b \\<oplus>\\<^bsub>M\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M\\<^esub> ba)\n 3. \\<And>r a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); r \\<in> carrier R;\n        (a, b) \\<in> carrier (direct_sum (md M1) (md M2))\\<rbrakk>\n       \\<Longrightarrow> fst (r \\<odot>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (a, b)) \\<oplus>\\<^bsub>M\\<^esub>\n                         snd (r \\<odot>\\<^bsub>direct_sum (md M1) (md M2)\\<^esub>\n                              (a, b)) =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (a \\<oplus>\\<^bsub>M\\<^esub> b)", "apply (unfold direct_sum_def, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); a \\<in> M1; b \\<in> M2\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub> b \\<in> carrier M\n 2. \\<And>a b aa ba.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); a \\<in> M1; b \\<in> M2; aa \\<in> M1;\n        ba \\<in> M2\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub>\n                         aa \\<oplus>\\<^bsub>M\\<^esub>\n                         (b \\<oplus>\\<^bsub>M\\<^esub> ba) =\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         b \\<oplus>\\<^bsub>M\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M\\<^esub> ba)\n 3. \\<And>r a b.\n       \\<lbrakk>module R M; LinearCombinations.submodule R M1 M;\n        LinearCombinations.submodule R M2 M; module R (md M1);\n        module R (md M2); r \\<in> carrier R; a \\<in> M1; b \\<in> M2\\<rbrakk>\n       \\<Longrightarrow> r \\<odot>\\<^bsub>M\\<^esub>\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         r \\<odot>\\<^bsub>M\\<^esub> b =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (a \\<oplus>\\<^bsub>M\\<^esub> b)", "apply (unfold submodule_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>module R (md M1); module R (md M2); a \\<in> M1; b \\<in> M2;\n        aa \\<in> M1; ba \\<in> M2; M1 \\<subseteq> carrier M; module R M;\n        \\<forall>v.\n           v \\<in> M1 \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> M1 \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> M1);\n        M2 \\<subseteq> carrier M; \\<zero>\\<^bsub>M\\<^esub> \\<in> M1;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> M1 \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> M1);\n        \\<forall>v.\n           v \\<in> M2 \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> M2 \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> M2);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> M2;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> M2 \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> M2)\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub>\n                         aa \\<oplus>\\<^bsub>M\\<^esub>\n                         (b \\<oplus>\\<^bsub>M\\<^esub> ba) =\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         b \\<oplus>\\<^bsub>M\\<^esub>\n                         (aa \\<oplus>\\<^bsub>M\\<^esub> ba)\n 2. \\<And>r a b.\n       \\<lbrakk>module R (md M1); module R (md M2); r \\<in> carrier R;\n        a \\<in> M1; b \\<in> M2; M1 \\<subseteq> carrier M; module R M;\n        \\<forall>v.\n           v \\<in> M1 \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> M1 \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> M1);\n        M2 \\<subseteq> carrier M; \\<zero>\\<^bsub>M\\<^esub> \\<in> M1;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> M1 \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> M1);\n        \\<forall>v.\n           v \\<in> M2 \\<longrightarrow>\n           (\\<forall>w.\n               w \\<in> M2 \\<longrightarrow>\n               v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> M2);\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> M2;\n        \\<forall>c.\n           c \\<in> carrier R \\<longrightarrow>\n           (\\<forall>v.\n               v \\<in> M2 \\<longrightarrow>\n               c \\<odot>\\<^bsub>M\\<^esub> v \\<in> M2)\\<rbrakk>\n       \\<Longrightarrow> r \\<odot>\\<^bsub>M\\<^esub>\n                         a \\<oplus>\\<^bsub>M\\<^esub>\n                         r \\<odot>\\<^bsub>M\\<^esub> b =\n                         r \\<odot>\\<^bsub>M\\<^esub>\n                         (a \\<oplus>\\<^bsub>M\\<^esub> b)", "by (auto simp add: a_ac smult_r_distr ring_subset_carrier)"], ["proof (state)\nthis:\n  mod_hom R (direct_sum (md M1) (md M2)) M\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)\n\ngoal:\nNo subgoals!", "(*key is a_ac, permutative rewrite rule*)"], ["proof (state)\nthis:\n  mod_hom R (direct_sum (md M1) (md M2)) M\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) sum_is_submodule:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"submodule R (submodule_sum N1 N2) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "from h1 h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M", "interpret l: mod_hom R \"(direct_sum (md N1) (md N2))\" M \"(\\<lambda> v. (fst v) \\<oplus>\\<^bsub>M\\<^esub> (snd v))\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M\n\ngoal (1 subgoal):\n 1. mod_hom R (direct_sum (md N1) (md N2)) M\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v)", "by (rule sum_map_hom)"], ["proof (state)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "have 1: \"l.im =submodule_sum N1 N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l.im = submodule_sum N1 N2", "apply (unfold l.im_def submodule_sum_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. fst v \\<oplus>\\<^bsub>M\\<^esub> snd v) `\n    carrier (direct_sum (md N1) (md N2)) =\n    (\\<lambda>(x, y). x \\<oplus>\\<^bsub>M\\<^esub> y) `\n    {(x, y). x \\<in> N1 \\<and> y \\<in> N2}", "apply (unfold direct_sum_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> N1; b \\<in> N2\\<rbrakk>\n       \\<Longrightarrow> a \\<oplus>\\<^bsub>M\\<^esub> b\n                         \\<in> (\\<lambda>x.\n                                   fst x \\<oplus>\\<^bsub>M\\<^esub> snd x) `\n                               (N1 \\<times> N2)", "by (unfold image_def, auto)"], ["proof (state)\nthis:\n  l.im = submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "have 2: \"submodule R (l.im) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R l.im M", "by (rule l.im_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R l.im M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "from 1 2"], ["proof (chain)\npicking this:\n  l.im = submodule_sum N1 N2\n  LinearCombinations.submodule R l.im M", "show ?thesis"], ["proof (prove)\nusing this:\n  l.im = submodule_sum N1 N2\n  LinearCombinations.submodule R l.im M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum N1 N2) M", "by auto"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (submodule_sum N1 N2) M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) in_sum:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"N1 \\<subseteq> submodule_sum N1 N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> submodule_sum N1 N2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> submodule_sum N1 N2", "from h1 h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M", "show ?thesis"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> submodule_sum N1 N2", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; x \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> submodule_sum N1 N2", "apply (unfold submodule_sum_def image_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; x \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>N1.\n                            \\<exists>y\\<in>N2.\n                               x = xa \\<oplus>\\<^bsub>M\\<^esub> y", "apply (rename_tac v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N1.\n                            \\<exists>y\\<in>N2.\n                               v = x \\<oplus>\\<^bsub>M\\<^esub> y", "apply (rule_tac x=\"v\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>N2.\n                            v = v \\<oplus>\\<^bsub>M\\<^esub> y\n 2. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> N1", "apply (rule_tac x=\"\\<zero>\\<^bsub>M\\<^esub>\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> v =\n                         v \\<oplus>\\<^bsub>M\\<^esub>\n                         \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<zero>\\<^bsub>M\\<^esub> \\<in> N2\n 3. \\<And>v.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; v \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> N1", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  N1 \\<subseteq> submodule_sum N1 N2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in module) msum_comm:\n  fixes N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\"\n  shows \"(submodule_sum N1 N2) = (submodule_sum N2 N1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 = submodule_sum N2 N1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 = submodule_sum N2 N1", "(*have 0: \"module R M\"..*)"], ["proof (state)\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 = submodule_sum N2 N1", "from h1 h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M", "show ?thesis"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 = submodule_sum N2 N1", "apply (unfold submodule_sum_def image_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; xa \\<in> N1;\n        y \\<in> N2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N2.\n                            \\<exists>ya\\<in>N1.\n                               xa \\<oplus>\\<^bsub>M\\<^esub> y =\n                               x \\<oplus>\\<^bsub>M\\<^esub> ya\n 2. \\<And>xa y.\n       \\<lbrakk>LinearCombinations.submodule R N1 M;\n        LinearCombinations.submodule R N2 M; xa \\<in> N2;\n        y \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N1.\n                            \\<exists>ya\\<in>N2.\n                               xa \\<oplus>\\<^bsub>M\\<^esub> y =\n                               x \\<oplus>\\<^bsub>M\\<^esub> ya", "apply (unfold submodule_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>(module R M \\<and> N1 \\<subseteq> carrier M) \\<and>\n                (\\<forall>v w.\n                    v \\<in> N1 \\<longrightarrow>\n                    w \\<in> N1 \\<longrightarrow>\n                    v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N1) \\<and>\n                \\<zero>\\<^bsub>M\\<^esub> \\<in> N1 \\<and>\n                (\\<forall>c v.\n                    c \\<in> carrier R \\<longrightarrow>\n                    v \\<in> N1 \\<longrightarrow>\n                    c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N1);\n        (module R M \\<and> N2 \\<subseteq> carrier M) \\<and>\n        (\\<forall>v w.\n            v \\<in> N2 \\<longrightarrow>\n            w \\<in> N2 \\<longrightarrow>\n            v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N2) \\<and>\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N2 \\<and>\n        (\\<forall>c v.\n            c \\<in> carrier R \\<longrightarrow>\n            v \\<in> N2 \\<longrightarrow>\n            c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N2);\n        xa \\<in> N1; y \\<in> N2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N2.\n                            \\<exists>ya\\<in>N1.\n                               xa \\<oplus>\\<^bsub>M\\<^esub> y =\n                               x \\<oplus>\\<^bsub>M\\<^esub> ya\n 2. \\<And>xa y.\n       \\<lbrakk>(module R M \\<and> N1 \\<subseteq> carrier M) \\<and>\n                (\\<forall>v w.\n                    v \\<in> N1 \\<longrightarrow>\n                    w \\<in> N1 \\<longrightarrow>\n                    v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N1) \\<and>\n                \\<zero>\\<^bsub>M\\<^esub> \\<in> N1 \\<and>\n                (\\<forall>c v.\n                    c \\<in> carrier R \\<longrightarrow>\n                    v \\<in> N1 \\<longrightarrow>\n                    c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N1);\n        (module R M \\<and> N2 \\<subseteq> carrier M) \\<and>\n        (\\<forall>v w.\n            v \\<in> N2 \\<longrightarrow>\n            w \\<in> N2 \\<longrightarrow>\n            v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N2) \\<and>\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N2 \\<and>\n        (\\<forall>c v.\n            c \\<in> carrier R \\<longrightarrow>\n            v \\<in> N2 \\<longrightarrow>\n            c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N2);\n        xa \\<in> N2; y \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N1.\n                            \\<exists>ya\\<in>N2.\n                               xa \\<oplus>\\<^bsub>M\\<^esub> y =\n                               x \\<oplus>\\<^bsub>M\\<^esub> ya", "apply (rename_tac v w)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v w.\n       \\<lbrakk>(module R M \\<and> N1 \\<subseteq> carrier M) \\<and>\n                (\\<forall>v w.\n                    v \\<in> N1 \\<longrightarrow>\n                    w \\<in> N1 \\<longrightarrow>\n                    v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N1) \\<and>\n                \\<zero>\\<^bsub>M\\<^esub> \\<in> N1 \\<and>\n                (\\<forall>c v.\n                    c \\<in> carrier R \\<longrightarrow>\n                    v \\<in> N1 \\<longrightarrow>\n                    c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N1);\n        (module R M \\<and> N2 \\<subseteq> carrier M) \\<and>\n        (\\<forall>v w.\n            v \\<in> N2 \\<longrightarrow>\n            w \\<in> N2 \\<longrightarrow>\n            v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N2) \\<and>\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N2 \\<and>\n        (\\<forall>c v.\n            c \\<in> carrier R \\<longrightarrow>\n            v \\<in> N2 \\<longrightarrow>\n            c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N2);\n        v \\<in> N1; w \\<in> N2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N2.\n                            \\<exists>y\\<in>N1.\n                               v \\<oplus>\\<^bsub>M\\<^esub> w =\n                               x \\<oplus>\\<^bsub>M\\<^esub> y\n 2. \\<And>xa y.\n       \\<lbrakk>(module R M \\<and> N1 \\<subseteq> carrier M) \\<and>\n                (\\<forall>v w.\n                    v \\<in> N1 \\<longrightarrow>\n                    w \\<in> N1 \\<longrightarrow>\n                    v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N1) \\<and>\n                \\<zero>\\<^bsub>M\\<^esub> \\<in> N1 \\<and>\n                (\\<forall>c v.\n                    c \\<in> carrier R \\<longrightarrow>\n                    v \\<in> N1 \\<longrightarrow>\n                    c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N1);\n        (module R M \\<and> N2 \\<subseteq> carrier M) \\<and>\n        (\\<forall>v w.\n            v \\<in> N2 \\<longrightarrow>\n            w \\<in> N2 \\<longrightarrow>\n            v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N2) \\<and>\n        \\<zero>\\<^bsub>M\\<^esub> \\<in> N2 \\<and>\n        (\\<forall>c v.\n            c \\<in> carrier R \\<longrightarrow>\n            v \\<in> N2 \\<longrightarrow>\n            c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N2);\n        xa \\<in> N2; y \\<in> N1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>N1.\n                            \\<exists>ya\\<in>N2.\n                               xa \\<oplus>\\<^bsub>M\\<^esub> y =\n                               x \\<oplus>\\<^bsub>M\\<^esub> ya", "by (metis (full_types) M.add.m_comm subsetD)+"], ["proof (state)\nthis:\n  submodule_sum N1 N2 = submodule_sum N2 N1\n\ngoal:\nNo subgoals!", "(* Alternatively, apply (rule_tac x=\"w\" in bexI, rule_tac x=\"v\" in bexI,\n      auto simp add: ring_subset_carrier M.a_ac)+ *)"], ["proof (state)\nthis:\n  submodule_sum N1 N2 = submodule_sum N2 N1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $M_1,M_2\\subseteq M$ are submodules, then $M_1+M_2$ is the minimal subspace such that \nboth $M_1\\subseteq M$ and $M_2\\subseteq M$.\\<close>"], ["", "lemma (in module) sum_is_minimal:\n  fixes N N1 N2\n  assumes h1: \"submodule R N1 M\" and h2: \"submodule R N2 M\" and h3: \"submodule R N M\"\n  shows \"(submodule_sum N1 N2) \\<subseteq> N \\<longleftrightarrow> N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (submodule_sum N1 N2 \\<subseteq> N) =\n    (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (submodule_sum N1 N2 \\<subseteq> N) =\n    (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)", "have 1: \"(submodule_sum N1 N2) \\<subseteq> N \\<Longrightarrow> N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "assume 10: \"(submodule_sum N1 N2) \\<subseteq> N\""], ["proof (state)\nthis:\n  submodule_sum N1 N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "from h1 h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M", "have 11: \"N1\\<subseteq>submodule_sum N1 N2\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> submodule_sum N1 N2", "by (rule in_sum)"], ["proof (state)\nthis:\n  N1 \\<subseteq> submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "from h2 h1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R N2 M\n  LinearCombinations.submodule R N1 M", "have 12: \"N2\\<subseteq>submodule_sum N2 N1\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R N2 M\n  LinearCombinations.submodule R N1 M\n\ngoal (1 subgoal):\n 1. N2 \\<subseteq> submodule_sum N2 N1", "by (rule in_sum)"], ["proof (state)\nthis:\n  N2 \\<subseteq> submodule_sum N2 N1\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "from 12 h1 h2"], ["proof (chain)\npicking this:\n  N2 \\<subseteq> submodule_sum N2 N1\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M", "have 13: \"N2\\<subseteq>submodule_sum N1 N2\""], ["proof (prove)\nusing this:\n  N2 \\<subseteq> submodule_sum N2 N1\n  LinearCombinations.submodule R N1 M\n  LinearCombinations.submodule R N2 M\n\ngoal (1 subgoal):\n 1. N2 \\<subseteq> submodule_sum N1 N2", "by (metis msum_comm)"], ["proof (state)\nthis:\n  N2 \\<subseteq> submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n    N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "from 10 11 13"], ["proof (chain)\npicking this:\n  submodule_sum N1 N2 \\<subseteq> N\n  N1 \\<subseteq> submodule_sum N1 N2\n  N2 \\<subseteq> submodule_sum N1 N2", "show ?thesis"], ["proof (prove)\nusing this:\n  submodule_sum N1 N2 \\<subseteq> N\n  N1 \\<subseteq> submodule_sum N1 N2\n  N2 \\<subseteq> submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N", "by auto"], ["proof (state)\nthis:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (submodule_sum N1 N2 \\<subseteq> N) =\n    (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)", "have 2: \"N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow> (submodule_sum N1 N2) \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "assume 19: \"N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\""], ["proof (state)\nthis:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "{"], ["proof (state)\nthis:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "assume 20: \"v\\<in>submodule_sum N1 N2\""], ["proof (state)\nthis:\n  v \\<in> submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "from 20"], ["proof (chain)\npicking this:\n  v \\<in> submodule_sum N1 N2", "obtain w1 w2 where 21: \"w1\\<in>N1\" and 22: \"w2\\<in>N2\" and 23: \"v=w1\\<oplus>\\<^bsub>M\\<^esub> w2\""], ["proof (prove)\nusing this:\n  v \\<in> submodule_sum N1 N2\n\ngoal (1 subgoal):\n 1. (\\<And>w1 w2.\n        \\<lbrakk>w1 \\<in> N1; w2 \\<in> N2;\n         v = w1 \\<oplus>\\<^bsub>M\\<^esub> w2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold submodule_sum_def image_def, auto)"], ["proof (state)\nthis:\n  w1 \\<in> N1\n  w2 \\<in> N2\n  v = w1 \\<oplus>\\<^bsub>M\\<^esub> w2\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "from 19 21 22 23 h3"], ["proof (chain)\npicking this:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n  w1 \\<in> N1\n  w2 \\<in> N2\n  v = w1 \\<oplus>\\<^bsub>M\\<^esub> w2\n  LinearCombinations.submodule R N M", "have \"v \\<in> N\""], ["proof (prove)\nusing this:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n  w1 \\<in> N1\n  w2 \\<in> N2\n  v = w1 \\<oplus>\\<^bsub>M\\<^esub> w2\n  LinearCombinations.submodule R N M\n\ngoal (1 subgoal):\n 1. v \\<in> N", "apply (unfold submodule_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w1 \\<in> N1; w2 \\<in> N2; v = w1 \\<oplus>\\<^bsub>M\\<^esub> w2;\n     LinearCombinations.submodule R N M; module R M; N1 \\<subseteq> N;\n     N2 \\<subseteq> N; N \\<subseteq> carrier M;\n     \\<forall>v.\n        v \\<in> N \\<longrightarrow>\n        (\\<forall>w.\n            w \\<in> N \\<longrightarrow>\n            v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> N);\n     \\<zero>\\<^bsub>M\\<^esub> \\<in> N;\n     \\<forall>c.\n        c \\<in> carrier R \\<longrightarrow>\n        (\\<forall>v.\n            v \\<in> N \\<longrightarrow>\n            c \\<odot>\\<^bsub>M\\<^esub> v \\<in> N)\\<rbrakk>\n    \\<Longrightarrow> w1 \\<oplus>\\<^bsub>M\\<^esub> w2 \\<in> N", "by (metis (poly_guards_query)  contra_subsetD)"], ["proof (state)\nthis:\n  v \\<in> N\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "(*how is an obtain goal rep'd?*)"], ["proof (state)\nthis:\n  v \\<in> N\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "}"], ["proof (state)\nthis:\n  ?v3 \\<in> submodule_sum N1 N2 \\<Longrightarrow> ?v3 \\<in> N\n\ngoal (1 subgoal):\n 1. N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n    submodule_sum N1 N2 \\<subseteq> N", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?v3 \\<in> submodule_sum N1 N2 \\<Longrightarrow> ?v3 \\<in> N\n\ngoal (1 subgoal):\n 1. submodule_sum N1 N2 \\<subseteq> N", "by (metis subset_iff)"], ["proof (state)\nthis:\n  submodule_sum N1 N2 \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n  submodule_sum N1 N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (submodule_sum N1 N2 \\<subseteq> N) =\n    (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)", "from 1 2"], ["proof (chain)\npicking this:\n  submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n  submodule_sum N1 N2 \\<subseteq> N", "show ?thesis"], ["proof (prove)\nusing this:\n  submodule_sum N1 N2 \\<subseteq> N \\<Longrightarrow>\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N\n  N1 \\<subseteq> N \\<and> N2 \\<subseteq> N \\<Longrightarrow>\n  submodule_sum N1 N2 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (submodule_sum N1 N2 \\<subseteq> N) =\n    (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)", "by metis"], ["proof (state)\nthis:\n  (submodule_sum N1 N2 \\<subseteq> N) =\n  (N1 \\<subseteq> N \\<and> N2 \\<subseteq> N)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>$\\text{span} A\\cup B = \\text{span} A + \\text{span} B$\\<close>"], ["", "lemma (in module) span_union_is_sum: \n  fixes A B\n  assumes  h2: \"A\\<subseteq>carrier M\" and h3: \"B\\<subseteq>carrier M\"\n  shows \"span (A\\<union> B) = submodule_sum (span A) (span B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "let ?AplusB=\"submodule_sum (span A) (span B)\""], ["proof (state)\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from  h2"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier M", "have s0: \"submodule R (span A) M\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span A) M", "by (rule span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span A) M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from  h3"], ["proof (chain)\npicking this:\n  B \\<subseteq> carrier M", "have s1: \"submodule R (span B) M\""], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span B) M", "by (rule span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span B) M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from s0"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span A) M", "have s0_1: \"(span A)\\<subseteq>carrier M\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span A) M\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> carrier M", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  span A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from s1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span B) M", "have s1_1: \"(span B)\\<subseteq>carrier M\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span B) M\n\ngoal (1 subgoal):\n 1. span B \\<subseteq> carrier M", "by (unfold submodule_def, auto)"], ["proof (state)\nthis:\n  span B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from h2 h3"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier M\n  B \\<subseteq> carrier M", "have 1: \"A\\<union>B\\<subseteq>carrier M\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n  B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. A \\<union> B \\<subseteq> carrier M", "by auto"], ["proof (state)\nthis:\n  A \\<union> B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from  1"], ["proof (chain)\npicking this:\n  A \\<union> B \\<subseteq> carrier M", "have 2: \"submodule R (span (A\\<union>B)) M\""], ["proof (prove)\nusing this:\n  A \\<union> B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (span (A \\<union> B)) M", "by (rule span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (span (A \\<union> B)) M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from s0 s1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M", "have 3: \"submodule R ?AplusB M\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R (submodule_sum (span A) (span B)) M", "by (rule sum_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule R (submodule_sum (span A) (span B)) M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "have c1: \"span (A\\<union>B) \\<subseteq> ?AplusB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "(*span(A\\<union>B) \\<subseteq> span(A) + span(B) *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from  h2"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier M", "have a1: \"A\\<subseteq>span A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. A \\<subseteq> span A", "by (rule in_own_span)"], ["proof (state)\nthis:\n  A \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from s0 s1"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M", "have a2: \"span A \\<subseteq> ?AplusB\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> submodule_sum (span A) (span B)", "by (rule in_sum)"], ["proof (state)\nthis:\n  span A \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "(*M\\<subseteq>M+N*)"], ["proof (state)\nthis:\n  span A \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from a1 a2"], ["proof (chain)\npicking this:\n  A \\<subseteq> span A\n  span A \\<subseteq> submodule_sum (span A) (span B)", "have a3: \"A\\<subseteq> ?AplusB\""], ["proof (prove)\nusing this:\n  A \\<subseteq> span A\n  span A \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. A \\<subseteq> submodule_sum (span A) (span B)", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "(*similarly*)"], ["proof (state)\nthis:\n  A \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from  h3"], ["proof (chain)\npicking this:\n  B \\<subseteq> carrier M", "have b1: \"B\\<subseteq>span B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. B \\<subseteq> span B", "by (rule in_own_span)"], ["proof (state)\nthis:\n  B \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from s1 s0"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span B) M\n  LinearCombinations.submodule R (span A) M", "have b2: \"span B \\<subseteq> ?AplusB\""], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span B) M\n  LinearCombinations.submodule R (span A) M\n\ngoal (1 subgoal):\n 1. span B \\<subseteq> submodule_sum (span A) (span B)", "by (metis in_sum msum_comm)"], ["proof (state)\nthis:\n  span B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "(*M\\<subseteq>M+N*)"], ["proof (state)\nthis:\n  span B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from b1 b2"], ["proof (chain)\npicking this:\n  B \\<subseteq> span B\n  span B \\<subseteq> submodule_sum (span A) (span B)", "have b3: \"B\\<subseteq> ?AplusB\""], ["proof (prove)\nusing this:\n  B \\<subseteq> span B\n  span B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. B \\<subseteq> submodule_sum (span A) (span B)", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from a3 b3"], ["proof (chain)\npicking this:\n  A \\<subseteq> submodule_sum (span A) (span B)\n  B \\<subseteq> submodule_sum (span A) (span B)", "have 5: \"A\\<union>B\\<subseteq> ?AplusB\""], ["proof (prove)\nusing this:\n  A \\<subseteq> submodule_sum (span A) (span B)\n  B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. A \\<union> B \\<subseteq> submodule_sum (span A) (span B)", "by auto"], ["proof (state)\nthis:\n  A \\<union> B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "(*by default simp *)"], ["proof (state)\nthis:\n  A \\<union> B \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "from 5 3"], ["proof (chain)\npicking this:\n  A \\<union> B \\<subseteq> submodule_sum (span A) (span B)\n  LinearCombinations.submodule R (submodule_sum (span A) (span B)) M", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<union> B \\<subseteq> submodule_sum (span A) (span B)\n  LinearCombinations.submodule R (submodule_sum (span A) (span B)) M\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)", "by (rule span_is_subset)"], ["proof (state)\nthis:\n  span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "have c2: \"?AplusB \\<subseteq> span (A\\<union>B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "have 11: \"A\\<subseteq>A\\<union>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> A \\<union> B", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> A \\<union> B\n\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "have 12: \"B\\<subseteq>A\\<union>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> A \\<union> B", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> A \\<union> B\n\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "from  11"], ["proof (chain)\npicking this:\n  A \\<subseteq> A \\<union> B", "have 21:\"span A \\<subseteq>span (A\\<union>B)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> A \\<union> B\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> span (A \\<union> B)", "by (rule span_is_monotone)"], ["proof (state)\nthis:\n  span A \\<subseteq> span (A \\<union> B)\n\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "from  12"], ["proof (chain)\npicking this:\n  B \\<subseteq> A \\<union> B", "have 22:\"span B \\<subseteq>span (A\\<union>B)\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A \\<union> B\n\ngoal (1 subgoal):\n 1. span B \\<subseteq> span (A \\<union> B)", "by (rule span_is_monotone)"], ["proof (state)\nthis:\n  span B \\<subseteq> span (A \\<union> B)\n\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "from s0 s1 2 21 22"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M\n  LinearCombinations.submodule R (span (A \\<union> B)) M\n  span A \\<subseteq> span (A \\<union> B)\n  span B \\<subseteq> span (A \\<union> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule R (span A) M\n  LinearCombinations.submodule R (span B) M\n  LinearCombinations.submodule R (span (A \\<union> B)) M\n  span A \\<subseteq> span (A \\<union> B)\n  span B \\<subseteq> span (A \\<union> B)\n\ngoal (1 subgoal):\n 1. submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "by (auto simp add: sum_is_minimal)"], ["proof (state)\nthis:\n  submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "from c1 c2"], ["proof (chain)\npicking this:\n  span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)\n  submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  span (A \\<union> B) \\<subseteq> submodule_sum (span A) (span B)\n  submodule_sum (span A) (span B) \\<subseteq> span (A \\<union> B)\n\ngoal (1 subgoal):\n 1. span (A \\<union> B) = submodule_sum (span A) (span B)", "by auto"], ["proof (state)\nthis:\n  span (A \\<union> B) = submodule_sum (span A) (span B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}