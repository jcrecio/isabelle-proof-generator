{"file_name": "/home/qj213/afp-2021-10-22/thys/VectorSpace/VectorSpace.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VectorSpace", "problem_names": ["lemma (in vectorspace) is_module[simp]:\n  \"subspace K W V\\<Longrightarrow>submodule K W V\"", "lemma (in vectorspace) carrier_vs_is_self [simp]:\n  \"carrier (vs W) = W\"", "lemma (in vectorspace) subspace_is_vs:\n  fixes W::\"'c set\"\n  assumes 0: \"subspace K W V\"\n  shows \"vectorspace K (vs W)\"", "lemma (in vectorspace) vs_zero_lin_dep: \n  assumes h2: \"S\\<subseteq>carrier V\" and h3: \"lin_indpt S\"\n  shows \"\\<zero>\\<^bsub>V\\<^esub> \\<notin> S\"", "lemmas T_hom = f_hom", "lemmas T_add = f_add", "lemmas T_smult = f_smult", "lemmas T_im = f_im", "lemmas T_neg = f_neg", "lemmas T_minus = f_minus", "lemmas T_ker = f_ker", "lemmas T0_is_0[simp] = f0_is_0", "lemma kerT_is_subspace: \"subspace K ker V\"", "lemma imT_is_subspace: \"subspace K imT W\"", "lemma vs_criteria:\n  fixes K and V \n  assumes field: \"field K\"\n      and zero: \"\\<zero>\\<^bsub>V\\<^esub>\\<in> carrier V\" \n      and add: \"\\<forall>v w. v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> v\\<oplus>\\<^bsub>V\\<^esub> w\\<in> carrier V\"\n      and neg: \"\\<forall>v\\<in>carrier V. (\\<exists>neg_v\\<in>carrier V. v\\<oplus>\\<^bsub>V\\<^esub>neg_v=\\<zero>\\<^bsub>V\\<^esub>)\"\n      and smult: \"\\<forall>c v. c\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> c\\<odot>\\<^bsub>V\\<^esub> v \\<in> carrier V\"\n      and comm: \"\\<forall>v w. v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> v\\<oplus>\\<^bsub>V\\<^esub> w=w\\<oplus>\\<^bsub>V\\<^esub> v\"\n      and assoc: \"\\<forall>v w x. v\\<in>carrier V \\<and> w\\<in>carrier V \\<and> x\\<in>carrier V\\<longrightarrow> (v\\<oplus>\\<^bsub>V\\<^esub> w)\\<oplus>\\<^bsub>V\\<^esub> x= v\\<oplus>\\<^bsub>V\\<^esub> (w\\<oplus>\\<^bsub>V\\<^esub> x)\"\n      and add_id: \"\\<forall>v\\<in>carrier V. (v\\<oplus>\\<^bsub>V\\<^esub> \\<zero>\\<^bsub>V\\<^esub> =v)\"\n      and compat: \"\\<forall>a b v. a\\<in> carrier K \\<and> b\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> (a\\<otimes>\\<^bsub>K\\<^esub> b)\\<odot>\\<^bsub>V\\<^esub> v =a\\<odot>\\<^bsub>V\\<^esub> (b\\<odot>\\<^bsub>V\\<^esub> v)\"\n      and smult_id: \"\\<forall>v\\<in>carrier V. (\\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> v =v)\"\n      and dist_f: \"\\<forall>a b v. a\\<in> carrier K \\<and> b\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> (a\\<oplus>\\<^bsub>K\\<^esub> b)\\<odot>\\<^bsub>V\\<^esub> v =(a\\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> (b\\<odot>\\<^bsub>V\\<^esub> v)\"\n      and dist_add: \"\\<forall>a v w. a\\<in> carrier K \\<and> v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> a\\<odot>\\<^bsub>V\\<^esub> (v\\<oplus>\\<^bsub>V\\<^esub> w) =(a\\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> (a\\<odot>\\<^bsub>V\\<^esub> w)\"\n  shows \"vectorspace K V\"", "lemma (in vectorspace) func_space_is_vs:\n  fixes S\n  shows \"vectorspace K (func_space S)\"", "lemma direct_sum_is_vs: \n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"vectorspace K (direct_sum V1 V2)\"", "lemma inj1_linear:\n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)\"", "lemma inj2_linear:\n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)\"", "lemma (in vectorspace) sum_map_linear: \n  fixes V1 V2\n  assumes h1: \"subspace K V1 V\" and h2: \"subspace K V2 V\"\n  shows \"linear_map K (direct_sum (vs V1) (vs V2)) V (\\<lambda> v. (fst v) \\<oplus>\\<^bsub>V\\<^esub> (snd v))\"", "lemma (in vectorspace) sum_is_subspace:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"subspace K (subspace_sum W1 W2) V\"", "lemma (in vectorspace) in_sum_vs:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"W1 \\<subseteq> subspace_sum W1 W2\"", "lemma (in vectorspace) vsum_comm:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"(subspace_sum W1 W2) = (subspace_sum W2 W1)\"", "lemma (in vectorspace) vsum_is_minimal:\n  fixes W W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\" and h3: \"subspace K W V\"\n  shows \"(subspace_sum W1 W2) \\<subseteq> W \\<longleftrightarrow> W1 \\<subseteq> W \\<and> W2 \\<subseteq> W\"", "lemma (in vectorspace) span_is_subspace:\n  fixes S\n  assumes h2: \"S\\<subseteq>carrier V\"\n  shows \"subspace K (span S) V\"", "lemma (in vectorspace) mult_inverse:\n  assumes h1: \"a\\<in>carrier K\" and h2: \"v\\<in>carrier V\" and h3: \"a \\<odot>\\<^bsub>V\\<^esub> v = w\" and h4: \"a\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\"\n  shows \"v = (inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub> w\"", "lemma (in vectorspace) lincomb_isolate: \n  fixes A v\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>carrier V\"  and h3: \"a\\<in>A\\<rightarrow>carrier K\" and h4: \"v\\<in>A\"\n    and h5: \"a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\" and h6: \"lincomb a A=\\<zero>\\<^bsub>V\\<^esub>\"\n  shows \"v=lincomb (\\<lambda>w. \\<ominus>\\<^bsub>K\\<^esub>(inv\\<^bsub>K\\<^esub> (a v)) \\<otimes>\\<^bsub>K\\<^esub> a w) (A-{v})\" and \"v\\<in> span (A-{v})\"", "lemma (in vectorspace) lincomb_is_linear:\n  fixes S\n  assumes h: \"finite S\" and h2: \"S\\<subseteq>carrier V\"\n  shows \"linear_map K (func_space S) V (\\<lambda>a. lincomb a S)\"", "theorem (in vectorspace) lin_dep_iff_in_span:\n  fixes A v S\n  assumes  h1: \"S \\<subseteq> carrier V\" and h2: \"lin_indpt S\" and h3: \"v\\<in> carrier V\" and h4: \"v\\<notin>S\"\n  shows \"v\\<in> span S \\<longleftrightarrow> lin_dep (S \\<union> {v})\"", "lemma (in vectorspace) already_in_span:\n  fixes v A\n  assumes  inC: \"A\\<subseteq>carrier V\" and inspan: \"v\\<in>span A\"\n  shows \"span A= span (A\\<union>{v})\"", "theorem (in vectorspace) replacement:\n  fixes A B (*A B are lists of vectors (colloquially we refer to them as sets)*) \n  assumes h1: \"finite A\"\n      and h2: \"finite B\"\n      and h3: \"B\\<subseteq>carrier V\"\n      and h4: \"lin_indpt A\" (*A is linearly independent*)\n      and h5: \"A\\<subseteq>span B\" (*All entries of A are in K*)\n  shows \"\\<exists>C. finite C \\<and> C\\<subseteq>carrier V \\<and> C\\<subseteq>span B \\<and> C\\<inter>A={} \\<and> int (card C) \\<le> (int (card B)) - (int (card A)) \\<and> (span (A \\<union> C) = span B)\" \n  (is \"\\<exists>C. ?P A B C\")", "lemma (in vectorspace) li_smaller_than_gen:\n  fixes A B\n  assumes h1: \"finite A\" and h2: \"finite B\" and h3: \"A\\<subseteq>carrier V\" and h4: \"B\\<subseteq>carrier V\" \n    and h5: \"lin_indpt A\" and h6: \"gen_set B\"\n  shows \"card A \\<le> card B\"", "lemma (in vectorspace) dim_basis:\n  fixes A \n  assumes  fin: \"finite A\" and h2: \"basis A\"\n  shows \"dim = card A\"", "lemma (in vectorspace) max_li_is_gen:\n  fixes A\n  assumes h1: \"maximal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> lin_indpt S)\"\n  shows \"gen_set A\"", "lemma (in vectorspace) min_gen_is_li:\n  fixes A\n  assumes h1: \"minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\"\n  shows \"lin_indpt A\"", "lemma minimal_exists:\n  fixes A P\n  assumes h1: \"finite A\" and h2: \"P A\"\n  shows \"\\<exists>B. B\\<subseteq>A \\<and> minimal B P\"", "lemma (in vectorspace) fin_dim_li_fin:\n  assumes fd: \"fin_dim\" and li: \"lin_indpt A\" and inC: \"A\\<subseteq>carrier V\"\n  shows fin: \"finite A\"", "lemma (in vectorspace) finite_basis_exists:\n  assumes h1: \"fin_dim\"\n  shows \"\\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>\"", "lemma (in vectorspace) li_le_dim: \n  fixes A\n  assumes fd: \"fin_dim\" and c: \"A\\<subseteq>carrier V\" and l: \"lin_indpt A\"\n  shows \"finite A\" \"card A \\<le> dim\"", "lemma (in vectorspace) gen_ge_dim: \n  fixes A\n  assumes fa: \"finite A\" and c: \"A\\<subseteq>carrier V\" and l: \"gen_set A\"\n  shows \"card A \\<ge> dim\"", "lemma maximal_exists:\n  fixes P B N\n  assumes maxc: \"\\<And>A. P A \\<Longrightarrow> finite A \\<and> (card A \\<le>N)\" and b: \"P B\"\n  shows \"\\<exists>A. finite A \\<and> maximal A P\"", "lemma (in vectorspace) max_li_is_basis:\n  fixes A\n  assumes h1: \"maximal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> lin_indpt S)\"\n  shows \"basis A\"", "lemma (in vectorspace) min_gen_is_basis:\n  fixes A\n  assumes h1: \"minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\"\n  shows \"basis A\"", "lemma (in vectorspace) dim_li_is_basis:\n  fixes A\n  assumes fd: \"fin_dim\" and fa: \"finite A\" and ca: \"A\\<subseteq>carrier V\" and li: \"lin_indpt A\" \n    and d: \"card A \\<ge> dim\" (*\\<ge>*)\n  shows \"basis A\"", "lemma (in vectorspace) dim_gen_is_basis:\n  fixes A\n  assumes fa: \"finite A\" and ca: \"A\\<subseteq>carrier V\" and li: \"gen_set A\" \n    and d: \"card A \\<le> dim\"\n  shows \"basis A\"", "lemma (in vectorspace) basis_criterion:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier V\"\n  shows \"basis A \\<longleftrightarrow> (\\<forall>v. v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v))\"", "lemma (in linear_map) surj_imp_imT_carrier:\n  assumes surj: \"T` (carrier V) = carrier W\"\n  shows \"(imT) = carrier W\"", "theorem (in linear_map) rank_nullity_main: \n  assumes fd: \"V.fin_dim\"\n  shows \"(vectorspace.dim K (W.vs imT)) + (vectorspace.dim K (V.vs kerT)) = V.dim\"       \n    \"T ` (carrier V) = carrier W \\<Longrightarrow> W.fin_dim\"", "theorem (in linear_map) rank_nullity: \n  assumes fd: \"V.fin_dim\"\n  shows \"(vectorspace.dim K (W.vs imT)) + (vectorspace.dim K (V.vs kerT)) = V.dim\""], "translations": [["", "lemma (in vectorspace) is_module[simp]:\n  \"subspace K W V\\<Longrightarrow>submodule K W V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K W V \\<Longrightarrow> LinearCombinations.submodule K W V", "by (unfold subspace_def, auto)"], ["", "text \\<open>We introduce some basic facts and definitions copied from module.\nWe introduce some abbreviations, to match convention.\\<close>"], ["", "abbreviation (in vectorspace) vs::\"'c set \\<Rightarrow> ('a, 'c, 'd) module_scheme\"\n  where \"vs W \\<equiv> V\\<lparr>carrier :=W\\<rparr>\""], ["", "lemma (in vectorspace) carrier_vs_is_self [simp]:\n  \"carrier (vs W) = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (vs W) = W", "by auto"], ["", "lemma (in vectorspace) subspace_is_vs:\n  fixes W::\"'c set\"\n  assumes 0: \"subspace K W V\"\n  shows \"vectorspace K (vs W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (vs W)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace K (vs W)", "from 0"], ["proof (chain)\npicking this:\n  subspace K W V", "show ?thesis"], ["proof (prove)\nusing this:\n  subspace K W V\n\ngoal (1 subgoal):\n 1. vectorspace K (vs W)", "apply (unfold vectorspace_def subspace_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>subspace K W V; module K V; field K\\<rbrakk>\n    \\<Longrightarrow> module K (vs W)", "by (intro submodule_is_module, auto)"], ["proof (state)\nthis:\n  vectorspace K (vs W)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation (in module) subspace_sum:: \"['c set, 'c set] \\<Rightarrow> 'c set\"\n  where \"subspace_sum W1 W2 \\<equiv>submodule_sum W1 W2\""], ["", "lemma (in vectorspace) vs_zero_lin_dep: \n  assumes h2: \"S\\<subseteq>carrier V\" and h3: \"lin_indpt S\"\n  shows \"\\<zero>\\<^bsub>V\\<^esub> \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<notin> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<notin> S", "have vs: \"vectorspace K V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V", ".."], ["proof (state)\nthis:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<notin> S", "from vs"], ["proof (chain)\npicking this:\n  vectorspace K V", "have nonzero: \"carrier K \\<noteq>{\\<zero>\\<^bsub>K\\<^esub>}\""], ["proof (prove)\nusing this:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. carrier K \\<noteq> {\\<zero>\\<^bsub>K\\<^esub>}", "by (metis one_zeroI zero_not_one)"], ["proof (state)\nthis:\n  carrier K \\<noteq> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<notin> S", "from h2 h3 nonzero"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  carrier K \\<noteq> {\\<zero>\\<^bsub>K\\<^esub>}", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  carrier K \\<noteq> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<notin> S", "by (rule zero_nin_lin_indpt)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A \\<open>linear_map\\<close> is a module homomorphism between 2 vectorspaces\nover the same field.\\<close>"], ["", "locale linear_map = \n  V?: vectorspace K V + W?: vectorspace K W\n  + mod_hom?: mod_hom K V W T\n    for K and V and W and T"], ["", "context linear_map\nbegin"], ["", "lemmas T_hom = f_hom"], ["", "lemmas T_add = f_add"], ["", "lemmas T_smult = f_smult"], ["", "lemmas T_im = f_im"], ["", "lemmas T_neg = f_neg"], ["", "lemmas T_minus = f_minus"], ["", "lemmas T_ker = f_ker"], ["", "abbreviation imT:: \"'e set\"\n  where \"imT \\<equiv> mod_hom.im\""], ["", "abbreviation kerT:: \"'c set\"\n  where \"kerT \\<equiv> mod_hom.ker\""], ["", "lemmas T0_is_0[simp] = f0_is_0"], ["", "lemma kerT_is_subspace: \"subspace K ker V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K kerT V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subspace K kerT V", "have vs: \"vectorspace K V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V", ".."], ["proof (state)\nthis:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. subspace K kerT V", "from vs"], ["proof (chain)\npicking this:\n  vectorspace K V", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. subspace K kerT V", "apply (unfold subspace_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V \\<Longrightarrow> LinearCombinations.submodule K kerT V", "by (rule ker_is_submodule)"], ["proof (state)\nthis:\n  subspace K kerT V\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma imT_is_subspace: \"subspace K imT W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K imT W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subspace K imT W", "have vs: \"vectorspace K W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K W", ".."], ["proof (state)\nthis:\n  vectorspace K W\n\ngoal (1 subgoal):\n 1. subspace K imT W", "from vs"], ["proof (chain)\npicking this:\n  vectorspace K W", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace K W\n\ngoal (1 subgoal):\n 1. subspace K imT W", "apply (unfold subspace_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K W \\<Longrightarrow> LinearCombinations.submodule K imT W", "by (rule im_is_submodule)"], ["proof (state)\nthis:\n  subspace K imT W\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma vs_criteria:\n  fixes K and V \n  assumes field: \"field K\"\n      and zero: \"\\<zero>\\<^bsub>V\\<^esub>\\<in> carrier V\" \n      and add: \"\\<forall>v w. v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> v\\<oplus>\\<^bsub>V\\<^esub> w\\<in> carrier V\"\n      and neg: \"\\<forall>v\\<in>carrier V. (\\<exists>neg_v\\<in>carrier V. v\\<oplus>\\<^bsub>V\\<^esub>neg_v=\\<zero>\\<^bsub>V\\<^esub>)\"\n      and smult: \"\\<forall>c v. c\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> c\\<odot>\\<^bsub>V\\<^esub> v \\<in> carrier V\"\n      and comm: \"\\<forall>v w. v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> v\\<oplus>\\<^bsub>V\\<^esub> w=w\\<oplus>\\<^bsub>V\\<^esub> v\"\n      and assoc: \"\\<forall>v w x. v\\<in>carrier V \\<and> w\\<in>carrier V \\<and> x\\<in>carrier V\\<longrightarrow> (v\\<oplus>\\<^bsub>V\\<^esub> w)\\<oplus>\\<^bsub>V\\<^esub> x= v\\<oplus>\\<^bsub>V\\<^esub> (w\\<oplus>\\<^bsub>V\\<^esub> x)\"\n      and add_id: \"\\<forall>v\\<in>carrier V. (v\\<oplus>\\<^bsub>V\\<^esub> \\<zero>\\<^bsub>V\\<^esub> =v)\"\n      and compat: \"\\<forall>a b v. a\\<in> carrier K \\<and> b\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> (a\\<otimes>\\<^bsub>K\\<^esub> b)\\<odot>\\<^bsub>V\\<^esub> v =a\\<odot>\\<^bsub>V\\<^esub> (b\\<odot>\\<^bsub>V\\<^esub> v)\"\n      and smult_id: \"\\<forall>v\\<in>carrier V. (\\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> v =v)\"\n      and dist_f: \"\\<forall>a b v. a\\<in> carrier K \\<and> b\\<in> carrier K \\<and> v\\<in>carrier V\\<longrightarrow> (a\\<oplus>\\<^bsub>K\\<^esub> b)\\<odot>\\<^bsub>V\\<^esub> v =(a\\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> (b\\<odot>\\<^bsub>V\\<^esub> v)\"\n      and dist_add: \"\\<forall>a v w. a\\<in> carrier K \\<and> v\\<in>carrier V \\<and> w\\<in>carrier V\\<longrightarrow> a\\<odot>\\<^bsub>V\\<^esub> (v\\<oplus>\\<^bsub>V\\<^esub> w) =(a\\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> (a\\<odot>\\<^bsub>V\\<^esub> w)\"\n  shows \"vectorspace K V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace K V", "from field"], ["proof (chain)\npicking this:\n  field K", "have 1: \"cring K\""], ["proof (prove)\nusing this:\n  field K\n\ngoal (1 subgoal):\n 1. cring K", "by (unfold field_def domain_def, auto)"], ["proof (state)\nthis:\n  cring K\n\ngoal (1 subgoal):\n 1. vectorspace K V", "from assms 1"], ["proof (chain)\npicking this:\n  field K\n  \\<zero>\\<^bsub>V\\<^esub> \\<in> carrier V\n  \\<forall>v w.\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> carrier V\n  \\<forall>v\\<in>carrier V.\n     \\<exists>neg_v\\<in>carrier V.\n        v \\<oplus>\\<^bsub>V\\<^esub> neg_v = \\<zero>\\<^bsub>V\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     c \\<odot>\\<^bsub>V\\<^esub> v \\<in> carrier V\n  \\<forall>v w.\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w = w \\<oplus>\\<^bsub>V\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier V \\<and>\n     w \\<in> carrier V \\<and> x \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w \\<oplus>\\<^bsub>V\\<^esub> x =\n     v \\<oplus>\\<^bsub>V\\<^esub> (w \\<oplus>\\<^bsub>V\\<^esub> x)\n  \\<forall>v\\<in>carrier V.\n     v \\<oplus>\\<^bsub>V\\<^esub> \\<zero>\\<^bsub>V\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier K \\<and>\n     b \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     a \\<otimes>\\<^bsub>K\\<^esub> b \\<odot>\\<^bsub>V\\<^esub> v =\n     a \\<odot>\\<^bsub>V\\<^esub> (b \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<forall>v\\<in>carrier V.\n     \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier K \\<and>\n     b \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>K\\<^esub> b) \\<odot>\\<^bsub>V\\<^esub> v =\n     a \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     b \\<odot>\\<^bsub>V\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier K \\<and>\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     a \\<odot>\\<^bsub>V\\<^esub> (v \\<oplus>\\<^bsub>V\\<^esub> w) =\n     a \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     a \\<odot>\\<^bsub>V\\<^esub> w\n  cring K", "have 2: \"module K V\""], ["proof (prove)\nusing this:\n  field K\n  \\<zero>\\<^bsub>V\\<^esub> \\<in> carrier V\n  \\<forall>v w.\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> carrier V\n  \\<forall>v\\<in>carrier V.\n     \\<exists>neg_v\\<in>carrier V.\n        v \\<oplus>\\<^bsub>V\\<^esub> neg_v = \\<zero>\\<^bsub>V\\<^esub>\n  \\<forall>c v.\n     c \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     c \\<odot>\\<^bsub>V\\<^esub> v \\<in> carrier V\n  \\<forall>v w.\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w = w \\<oplus>\\<^bsub>V\\<^esub> v\n  \\<forall>v w x.\n     v \\<in> carrier V \\<and>\n     w \\<in> carrier V \\<and> x \\<in> carrier V \\<longrightarrow>\n     v \\<oplus>\\<^bsub>V\\<^esub> w \\<oplus>\\<^bsub>V\\<^esub> x =\n     v \\<oplus>\\<^bsub>V\\<^esub> (w \\<oplus>\\<^bsub>V\\<^esub> x)\n  \\<forall>v\\<in>carrier V.\n     v \\<oplus>\\<^bsub>V\\<^esub> \\<zero>\\<^bsub>V\\<^esub> = v\n  \\<forall>a b v.\n     a \\<in> carrier K \\<and>\n     b \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     a \\<otimes>\\<^bsub>K\\<^esub> b \\<odot>\\<^bsub>V\\<^esub> v =\n     a \\<odot>\\<^bsub>V\\<^esub> (b \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<forall>v\\<in>carrier V.\n     \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> v = v\n  \\<forall>a b v.\n     a \\<in> carrier K \\<and>\n     b \\<in> carrier K \\<and> v \\<in> carrier V \\<longrightarrow>\n     (a \\<oplus>\\<^bsub>K\\<^esub> b) \\<odot>\\<^bsub>V\\<^esub> v =\n     a \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     b \\<odot>\\<^bsub>V\\<^esub> v\n  \\<forall>a v w.\n     a \\<in> carrier K \\<and>\n     v \\<in> carrier V \\<and> w \\<in> carrier V \\<longrightarrow>\n     a \\<odot>\\<^bsub>V\\<^esub> (v \\<oplus>\\<^bsub>V\\<^esub> w) =\n     a \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     a \\<odot>\\<^bsub>V\\<^esub> w\n  cring K\n\ngoal (1 subgoal):\n 1. module K V", "by (intro module_criteria, auto)"], ["proof (state)\nthis:\n  module K V\n\ngoal (1 subgoal):\n 1. vectorspace K V", "from field 2"], ["proof (chain)\npicking this:\n  field K\n  module K V", "show ?thesis"], ["proof (prove)\nusing this:\n  field K\n  module K V\n\ngoal (1 subgoal):\n 1. vectorspace K V", "by (unfold vectorspace_def module_def, auto)"], ["proof (state)\nthis:\n  vectorspace K V\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For any set $S$, the space of functions $S\\to K$ forms a vector space.\\<close>"], ["", "lemma (in vectorspace) func_space_is_vs:\n  fixes S\n  shows \"vectorspace K (func_space S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (func_space S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace K (func_space S)", "have 0: \"field K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. field K", ".."], ["proof (state)\nthis:\n  field K\n\ngoal (1 subgoal):\n 1. vectorspace K (func_space S)", "have 1: \"module K (func_space S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. module K (func_space S)", "by (rule func_space_is_module)"], ["proof (state)\nthis:\n  module K (func_space S)\n\ngoal (1 subgoal):\n 1. vectorspace K (func_space S)", "from 0 1"], ["proof (chain)\npicking this:\n  field K\n  module K (func_space S)", "show ?thesis"], ["proof (prove)\nusing this:\n  field K\n  module K (func_space S)\n\ngoal (1 subgoal):\n 1. vectorspace K (func_space S)", "by (unfold vectorspace_def module_def, auto)"], ["proof (state)\nthis:\n  vectorspace K (func_space S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma direct_sum_is_vs: \n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"vectorspace K (direct_sum V1 V2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (direct_sum V1 V2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace K (direct_sum V1 V2)", "from h1 h2"], ["proof (chain)\npicking this:\n  vectorspace K V1\n  vectorspace K V2", "have mod: \"module K (direct_sum V1 V2)\""], ["proof (prove)\nusing this:\n  vectorspace K V1\n  vectorspace K V2\n\ngoal (1 subgoal):\n 1. module K (direct_sum V1 V2)", "by (unfold vectorspace_def, intro direct_sum_is_module, auto)"], ["proof (state)\nthis:\n  module K (direct_sum V1 V2)\n\ngoal (1 subgoal):\n 1. vectorspace K (direct_sum V1 V2)", "from mod h1"], ["proof (chain)\npicking this:\n  module K (direct_sum V1 V2)\n  vectorspace K V1", "show ?thesis"], ["proof (prove)\nusing this:\n  module K (direct_sum V1 V2)\n  vectorspace K V1\n\ngoal (1 subgoal):\n 1. vectorspace K (direct_sum V1 V2)", "by (unfold vectorspace_def, auto)"], ["proof (state)\nthis:\n  vectorspace K (direct_sum V1 V2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj1_linear:\n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)", "from h1 h2"], ["proof (chain)\npicking this:\n  vectorspace K V1\n  vectorspace K V2", "have mod: \"mod_hom K V1 (direct_sum V1 V2) (inj1 V1 V2)\""], ["proof (prove)\nusing this:\n  vectorspace K V1\n  vectorspace K V2\n\ngoal (1 subgoal):\n 1. mod_hom K V1 (direct_sum V1 V2) (inj1 V1 V2)", "by (unfold vectorspace_def, intro inj1_hom, auto)"], ["proof (state)\nthis:\n  mod_hom K V1 (direct_sum V1 V2) (inj1 V1 V2)\n\ngoal (1 subgoal):\n 1. linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)", "from mod h1 h2"], ["proof (chain)\npicking this:\n  mod_hom K V1 (direct_sum V1 V2) (inj1 V1 V2)\n  vectorspace K V1\n  vectorspace K V2", "show ?thesis"], ["proof (prove)\nusing this:\n  mod_hom K V1 (direct_sum V1 V2) (inj1 V1 V2)\n  vectorspace K V1\n  vectorspace K V2\n\ngoal (1 subgoal):\n 1. linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)", "by (unfold linear_map_def vectorspace_def , auto, intro direct_sum_is_module, auto)"], ["proof (state)\nthis:\n  linear_map K V1 (direct_sum V1 V2) (inj1 V1 V2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj2_linear:\n  fixes K V1 V2\n  assumes h1: \"vectorspace K V1\" and h2: \"vectorspace K V2\"\n  shows \"linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)", "from h1 h2"], ["proof (chain)\npicking this:\n  vectorspace K V1\n  vectorspace K V2", "have mod: \"mod_hom K V2 (direct_sum V1 V2) (inj2 V1 V2)\""], ["proof (prove)\nusing this:\n  vectorspace K V1\n  vectorspace K V2\n\ngoal (1 subgoal):\n 1. mod_hom K V2 (direct_sum V1 V2) (inj2 V1 V2)", "by (unfold vectorspace_def, intro inj2_hom, auto)"], ["proof (state)\nthis:\n  mod_hom K V2 (direct_sum V1 V2) (inj2 V1 V2)\n\ngoal (1 subgoal):\n 1. linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)", "from mod h1 h2"], ["proof (chain)\npicking this:\n  mod_hom K V2 (direct_sum V1 V2) (inj2 V1 V2)\n  vectorspace K V1\n  vectorspace K V2", "show ?thesis"], ["proof (prove)\nusing this:\n  mod_hom K V2 (direct_sum V1 V2) (inj2 V1 V2)\n  vectorspace K V1\n  vectorspace K V2\n\ngoal (1 subgoal):\n 1. linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)", "by (unfold linear_map_def vectorspace_def , auto, intro direct_sum_is_module, auto)"], ["proof (state)\nthis:\n  linear_map K V2 (direct_sum V1 V2) (inj2 V1 V2)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For subspaces $V_1,V_2\\subseteq V$, the map $V_1\\oplus V_2\\to V$ given by $(v_1,v_2)\\mapsto \nv_1+v_2$ is linear.\\<close>"], ["", "lemma (in vectorspace) sum_map_linear: \n  fixes V1 V2\n  assumes h1: \"subspace K V1 V\" and h2: \"subspace K V2 V\"\n  shows \"linear_map K (direct_sum (vs V1) (vs V2)) V (\\<lambda> v. (fst v) \\<oplus>\\<^bsub>V\\<^esub> (snd v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K (direct_sum (vs V1) (vs V2)) V\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. linear_map K (direct_sum (vs V1) (vs V2)) V\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)", "from h1 h2"], ["proof (chain)\npicking this:\n  subspace K V1 V\n  subspace K V2 V", "have mod: \"mod_hom K (direct_sum (vs V1) (vs V2)) V (\\<lambda> v. (fst v) \\<oplus>\\<^bsub>V\\<^esub> (snd v))\""], ["proof (prove)\nusing this:\n  subspace K V1 V\n  subspace K V2 V\n\ngoal (1 subgoal):\n 1. mod_hom K (direct_sum (vs V1) (vs V2)) V\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)", "by ( intro sum_map_hom, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  mod_hom K (direct_sum (vs V1) (vs V2)) V\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)\n\ngoal (1 subgoal):\n 1. linear_map K (direct_sum (vs V1) (vs V2)) V\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)", "from mod h1 h2"], ["proof (chain)\npicking this:\n  mod_hom K (direct_sum (vs V1) (vs V2)) V\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)\n  subspace K V1 V\n  subspace K V2 V", "show ?thesis"], ["proof (prove)\nusing this:\n  mod_hom K (direct_sum (vs V1) (vs V2)) V\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)\n  subspace K V1 V\n  subspace K V2 V\n\ngoal (1 subgoal):\n 1. linear_map K (direct_sum (vs V1) (vs V2)) V\n     (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)", "apply (unfold linear_map_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>mod_hom K (direct_sum (vs V1) (vs V2)) V\n              (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v);\n     subspace K V1 V; subspace K V2 V\\<rbrakk>\n    \\<Longrightarrow> vectorspace K (direct_sum (vs V1) (vs V2))\n 2. \\<lbrakk>mod_hom K (direct_sum (vs V1) (vs V2)) V\n              (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v);\n     subspace K V1 V; subspace K V2 V\\<rbrakk>\n    \\<Longrightarrow> vectorspace K V", "apply (intro direct_sum_is_vs subspace_is_vs, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>mod_hom K (direct_sum (vs V1) (vs V2)) V\n              (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v);\n     subspace K V1 V; subspace K V2 V\\<rbrakk>\n    \\<Longrightarrow> vectorspace K V", ".."], ["proof (state)\nthis:\n  linear_map K (direct_sum (vs V1) (vs V2)) V\n   (\\<lambda>v. fst v \\<oplus>\\<^bsub>V\\<^esub> snd v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) sum_is_subspace:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"subspace K (subspace_sum W1 W2) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K (subspace_sum W1 W2) V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subspace K (subspace_sum W1 W2) V", "from h1 h2"], ["proof (chain)\npicking this:\n  subspace K W1 V\n  subspace K W2 V", "have mod: \"submodule K (submodule_sum W1 W2) V\""], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule K (subspace_sum W1 W2) V", "by ( intro sum_is_submodule, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  LinearCombinations.submodule K (subspace_sum W1 W2) V\n\ngoal (1 subgoal):\n 1. subspace K (subspace_sum W1 W2) V", "from mod h1 h2"], ["proof (chain)\npicking this:\n  LinearCombinations.submodule K (subspace_sum W1 W2) V\n  subspace K W1 V\n  subspace K W2 V", "show ?thesis"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule K (subspace_sum W1 W2) V\n  subspace K W1 V\n  subspace K W2 V\n\ngoal (1 subgoal):\n 1. subspace K (subspace_sum W1 W2) V", "by (unfold subspace_def, auto)"], ["proof (state)\nthis:\n  subspace K (subspace_sum W1 W2) V\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $W_1,W_2\\subseteq V$ are subspaces, $W_1\\subseteq W_1 + W_2$\\<close>"], ["", "lemma (in vectorspace) in_sum_vs:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"W1 \\<subseteq> subspace_sum W1 W2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W1 \\<subseteq> subspace_sum W1 W2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. W1 \\<subseteq> subspace_sum W1 W2", "from h1 h2"], ["proof (chain)\npicking this:\n  subspace K W1 V\n  subspace K W2 V", "show ?thesis"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n\ngoal (1 subgoal):\n 1. W1 \\<subseteq> subspace_sum W1 W2", "by (intro in_sum, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  W1 \\<subseteq> subspace_sum W1 W2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) vsum_comm:\n  fixes W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\"\n  shows \"(subspace_sum W1 W2) = (subspace_sum W2 W1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace_sum W1 W2 = subspace_sum W2 W1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subspace_sum W1 W2 = subspace_sum W2 W1", "from h1 h2"], ["proof (chain)\npicking this:\n  subspace K W1 V\n  subspace K W2 V", "show ?thesis"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n\ngoal (1 subgoal):\n 1. subspace_sum W1 W2 = subspace_sum W2 W1", "by (intro msum_comm, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  subspace_sum W1 W2 = subspace_sum W2 W1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $W_1,W_2\\subseteq V$ are subspaces, then $W_1+W_2$ is the minimal subspace such that \nboth $W_1\\subseteq W$ and $W_2\\subseteq W$.\\<close>"], ["", "lemma (in vectorspace) vsum_is_minimal:\n  fixes W W1 W2\n  assumes h1: \"subspace K W1 V\" and h2: \"subspace K W2 V\" and h3: \"subspace K W V\"\n  shows \"(subspace_sum W1 W2) \\<subseteq> W \\<longleftrightarrow> W1 \\<subseteq> W \\<and> W2 \\<subseteq> W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (subspace_sum W1 W2 \\<subseteq> W) =\n    (W1 \\<subseteq> W \\<and> W2 \\<subseteq> W)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (subspace_sum W1 W2 \\<subseteq> W) =\n    (W1 \\<subseteq> W \\<and> W2 \\<subseteq> W)", "from h1 h2 h3"], ["proof (chain)\npicking this:\n  subspace K W1 V\n  subspace K W2 V\n  subspace K W V", "show ?thesis"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n  subspace K W V\n\ngoal (1 subgoal):\n 1. (subspace_sum W1 W2 \\<subseteq> W) =\n    (W1 \\<subseteq> W \\<and> W2 \\<subseteq> W)", "by (intro sum_is_minimal, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  (subspace_sum W1 W2 \\<subseteq> W) =\n  (W1 \\<subseteq> W \\<and> W2 \\<subseteq> W)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) span_is_subspace:\n  fixes S\n  assumes h2: \"S\\<subseteq>carrier V\"\n  shows \"subspace K (span S) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K (span S) V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subspace K (span S) V", "have 0: \"vectorspace K V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V", ".."], ["proof (state)\nthis:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. subspace K (span S) V", "from h2"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V", "have 1: \"submodule K (span S) V\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule K (span S) V", "by (rule span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule K (span S) V\n\ngoal (1 subgoal):\n 1. subspace K (span S) V", "from 0 1"], ["proof (chain)\npicking this:\n  vectorspace K V\n  LinearCombinations.submodule K (span S) V", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace K V\n  LinearCombinations.submodule K (span S) V\n\ngoal (1 subgoal):\n 1. subspace K (span S) V", "by (unfold subspace_def mod_hom_def linear_map_def, auto)"], ["proof (state)\nthis:\n  subspace K (span S) V\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Facts specific to vector spaces\\<close>"], ["", "text \\<open>If $av = w$ and $a\\neq 0$, $v=a^{-1}w$.\\<close>"], ["", "lemma (in vectorspace) mult_inverse:\n  assumes h1: \"a\\<in>carrier K\" and h2: \"v\\<in>carrier V\" and h3: \"a \\<odot>\\<^bsub>V\\<^esub> v = w\" and h4: \"a\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\"\n  shows \"v = (inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from h1 h2 h3"], ["proof (chain)\npicking this:\n  a \\<in> carrier K\n  v \\<in> carrier V\n  a \\<odot>\\<^bsub>V\\<^esub> v = w", "have 1: \"w\\<in>carrier V\""], ["proof (prove)\nusing this:\n  a \\<in> carrier K\n  v \\<in> carrier V\n  a \\<odot>\\<^bsub>V\\<^esub> v = w\n\ngoal (1 subgoal):\n 1. w \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  w \\<in> carrier V\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from h3 1"], ["proof (chain)\npicking this:\n  a \\<odot>\\<^bsub>V\\<^esub> v = w\n  w \\<in> carrier V", "have 2: \"(inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub>(a \\<odot>\\<^bsub>V\\<^esub> v) =(inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub>w\""], ["proof (prove)\nusing this:\n  a \\<odot>\\<^bsub>V\\<^esub> v = w\n  w \\<in> carrier V\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from h1 h4"], ["proof (chain)\npicking this:\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 3: \"inv\\<^bsub>K\\<^esub> a\\<in>carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<in> carrier K\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "interpret g: group \"(units_group K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (units_group K)", "by (rule units_form_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "have f: \"field K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. field K", ".."], ["proof (state)\nthis:\n  field K\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from f h1 h4"], ["proof (chain)\npicking this:\n  field K\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 4: \"a\\<in>Units K\""], ["proof (prove)\nusing this:\n  field K\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<in> Units K", "by (unfold field_def field_axioms_def, simp)"], ["proof (state)\nthis:\n  a \\<in> Units K\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from 4 h1 h4"], ["proof (chain)\npicking this:\n  a \\<in> Units K\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 5: \"((inv\\<^bsub>K\\<^esub> a) \\<otimes>\\<^bsub>K\\<^esub>a) = \\<one>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  a \\<in> Units K\n  a \\<in> carrier K\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n    \\<one>\\<^bsub>K\\<^esub>", "by (intro Units_l_inv, auto)"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n  \\<one>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from 5"], ["proof (chain)\npicking this:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n  \\<one>\\<^bsub>K\\<^esub>", "have 6: \"(inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub>(a \\<odot>\\<^bsub>V\\<^esub> v) = v\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n  \\<one>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n    \\<one>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n    inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    v", "from h1 h2 h4"], ["proof (chain)\npicking this:\n  a \\<in> carrier K\n  v \\<in> carrier V\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 7: \"(inv\\<^bsub>K\\<^esub> a )\\<odot>\\<^bsub>V\\<^esub>(a \\<odot>\\<^bsub>V\\<^esub> v) =(inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>a) \\<odot>\\<^bsub>V\\<^esub> v\""], ["proof (prove)\nusing this:\n  a \\<in> carrier K\n  v \\<in> carrier V\n  a \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n    a \\<odot>\\<^bsub>V\\<^esub>\n    v", "by (auto simp add: smult_assoc1)"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n    \\<one>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n    inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    v", "from 5 h2"], ["proof (chain)\npicking this:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n  \\<one>\\<^bsub>K\\<^esub>\n  v \\<in> carrier V", "have 8: \"(inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>a) \\<odot>\\<^bsub>V\\<^esub> v = v\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n  \\<one>\\<^bsub>K\\<^esub>\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n    a \\<odot>\\<^bsub>V\\<^esub>\n    v =\n    v", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v =\n  v\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub> a =\n    \\<one>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n    inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    v", "from 7 8"], ["proof (chain)\npicking this:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v =\n  v", "show ?thesis"], ["proof (prove)\nusing this:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v\n  inv\\<^bsub>K\\<^esub> a \\<otimes>\\<^bsub>K\\<^esub>\n  a \\<odot>\\<^bsub>V\\<^esub>\n  v =\n  v\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n    (a \\<odot>\\<^bsub>V\\<^esub> v) =\n    v", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  v\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "from 2 6"], ["proof (chain)\npicking this:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  v", "show ?thesis"], ["proof (prove)\nusing this:\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w\n  inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub>\n  (a \\<odot>\\<^bsub>V\\<^esub> v) =\n  v\n\ngoal (1 subgoal):\n 1. v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w", "by auto"], ["proof (state)\nthis:\n  v = inv\\<^bsub>K\\<^esub> a \\<odot>\\<^bsub>V\\<^esub> w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $w\\in S$ and $\\sum_{w\\in S} a_ww=0$, we have $v=\\sum_{w\\not\\in S}a_v^{-1}a_ww$\\<close>"], ["", "lemma (in vectorspace) lincomb_isolate: \n  fixes A v\n  assumes h1: \"finite A\" and h2: \"A\\<subseteq>carrier V\"  and h3: \"a\\<in>A\\<rightarrow>carrier K\" and h4: \"v\\<in>A\"\n    and h5: \"a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\" and h6: \"lincomb a A=\\<zero>\\<^bsub>V\\<^esub>\"\n  shows \"v=lincomb (\\<lambda>w. \\<ominus>\\<^bsub>K\\<^esub>(inv\\<^bsub>K\\<^esub> (a v)) \\<otimes>\\<^bsub>K\\<^esub> a w) (A-{v})\" and \"v\\<in> span (A-{v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v}) &&&\n    v \\<in> span (A - {v})", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from h1 h2 h3 h4"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A", "have 1: \"lincomb a A = ((a v) \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> lincomb a (A-{v})\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. lincomb a A =\n    a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "by (rule lincomb_del2)"], ["proof (state)\nthis:\n  lincomb a A =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from 1"], ["proof (chain)\npicking this:\n  lincomb a A =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})", "have 2: \"\\<zero>\\<^bsub>V\\<^esub>= ((a v) \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> lincomb a (A-{v})\""], ["proof (prove)\nusing this:\n  lincomb a A =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> =\n    a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "by (simp add: h6)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from h1 h2 h3"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K", "have 5: \"lincomb a (A-{v}) \\<in>carrier V\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a (A - {v}) \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  lincomb a (A - {v}) \\<in> carrier V\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "(*intro lincomb_closed*)"], ["proof (state)\nthis:\n  lincomb a (A - {v}) \\<in> carrier V\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from 2 h1 h2 h3 h4"], ["proof (chain)\npicking this:\n  \\<zero>\\<^bsub>V\\<^esub> =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A", "have 3: \" \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A-{v}) = ((a v) \\<odot>\\<^bsub>V\\<^esub> v)\""], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>V\\<^esub> =\n  a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n    a v \\<odot>\\<^bsub>V\\<^esub> v", "by (auto intro!: M.minus_equality)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  a v \\<odot>\\<^bsub>V\\<^esub> v\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "have 6: \"v = (\\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> (a v))) \\<odot>\\<^bsub>V\\<^esub> lincomb a (A-{v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "from h2 h3 h4 h5 3"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  a v \\<odot>\\<^bsub>V\\<^esub> v", "have 7: \"v = inv\\<^bsub>K\\<^esub> (a v) \\<odot>\\<^bsub>V\\<^esub> (\\<ominus>\\<^bsub>V\\<^esub> lincomb a (A-{v}))\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  a v \\<odot>\\<^bsub>V\\<^esub> v\n\ngoal (1 subgoal):\n 1. v =\n    inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n    \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v})", "by (intro mult_inverse, auto)"], ["proof (state)\nthis:\n  v =\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v})\n\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>", "have 8: \"inv\\<^bsub>K\\<^esub> (a v)\\<in>carrier K\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a v \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a v \\<in> carrier K\n\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "from assms 5 8"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v}) \\<in> carrier V\n  inv\\<^bsub>K\\<^esub> a v \\<in> carrier K", "have 9: \"inv\\<^bsub>K\\<^esub> (a v) \\<odot>\\<^bsub>V\\<^esub> (\\<ominus>\\<^bsub>V\\<^esub> lincomb a (A-{v})) \n      = (\\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> (a v))) \\<odot>\\<^bsub>V\\<^esub> lincomb a (A-{v})\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v}) \\<in> carrier V\n  inv\\<^bsub>K\\<^esub> a v \\<in> carrier K\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n    \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "by (simp add: smult_assoc_simp smult_minus_1_back r_minus)"], ["proof (state)\nthis:\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "from 7 9"], ["proof (chain)\npicking this:\n  v =\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v})\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})", "show ?thesis"], ["proof (prove)\nusing this:\n  v =\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v})\n  inv\\<^bsub>K\\<^esub> a v \\<odot>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>V\\<^esub> lincomb a (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (1 subgoal):\n 1. v =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "by auto"], ["proof (state)\nthis:\n  v =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from h1"], ["proof (chain)\npicking this:\n  finite A", "have 10: \"finite (A-{v})\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A - {v})", "by auto"], ["proof (state)\nthis:\n  finite (A - {v})\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>", "have 11 : \"(\\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> (a v)))\\<in> carrier K\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a v) \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a v) \\<in> carrier K\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>", "have 12: \"lincomb (\\<lambda>w. \\<ominus>\\<^bsub>K\\<^esub>(inv\\<^bsub>K\\<^esub> (a v)) \\<otimes>\\<^bsub>K\\<^esub> a w) (A-{v}) = \n    (\\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> (a v))) \\<odot>\\<^bsub>V\\<^esub> lincomb a (A-{v})\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v}) =\n    \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                v) \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a (A - {v})", "by (intro lincomb_smult, auto)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (2 subgoals):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})\n 2. v \\<in> span (A - {v})", "from 6 12"], ["proof (chain)\npicking this:\n  v =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})", "show \"v=lincomb (\\<lambda>w. \\<ominus>\\<^bsub>K\\<^esub>(inv\\<^bsub>K\\<^esub> (a v)) \\<otimes>\\<^bsub>K\\<^esub> a w) (A-{v})\""], ["proof (prove)\nusing this:\n  v =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v}) =\n  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n              v) \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a (A - {v})\n\ngoal (1 subgoal):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A - {v})", "by auto"], ["proof (state)\nthis:\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v})\n\ngoal (1 subgoal):\n 1. v \\<in> span (A - {v})", "with assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v})", "show \"v\\<in> span (A-{v})\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v})\n\ngoal (1 subgoal):\n 1. v \\<in> span (A - {v})", "unfolding span_def"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  v \\<in> A\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A - {v})\n\ngoal (1 subgoal):\n 1. v \\<in> {lincomb a Aa |a Aa.\n             finite Aa \\<and>\n             Aa \\<subseteq> A - {v} \\<and>\n             a \\<in> Aa \\<rightarrow> carrier K}", "by (force simp add: 11 ring_subset_carrier)"], ["proof (state)\nthis:\n  v \\<in> span (A - {v})\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The map $(S\\to K)\\mapsto V$ given by $(a_v)_{v\\in S}\\mapsto \\sum_{v\\in S} a_v v$ is linear.\\<close>"], ["", "lemma (in vectorspace) lincomb_is_linear:\n  fixes S\n  assumes h: \"finite S\" and h2: \"S\\<subseteq>carrier V\"\n  shows \"linear_map K (func_space S) V (\\<lambda>a. lincomb a S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K (func_space S) V (\\<lambda>a. lincomb a S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. linear_map K (func_space S) V (\\<lambda>a. lincomb a S)", "have 0: \"vectorspace K V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K V", ".."], ["proof (state)\nthis:\n  vectorspace K V\n\ngoal (1 subgoal):\n 1. linear_map K (func_space S) V (\\<lambda>a. lincomb a S)", "from h h2"], ["proof (chain)\npicking this:\n  finite S\n  S \\<subseteq> carrier V", "have 1: \"mod_hom K (func_space S) V (\\<lambda>a. lincomb a S)\""], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. mod_hom K (func_space S) V (\\<lambda>a. lincomb a S)", "by (rule lincomb_is_mod_hom)"], ["proof (state)\nthis:\n  mod_hom K (func_space S) V (\\<lambda>a. lincomb a S)\n\ngoal (1 subgoal):\n 1. linear_map K (func_space S) V (\\<lambda>a. lincomb a S)", "from 0 1"], ["proof (chain)\npicking this:\n  vectorspace K V\n  mod_hom K (func_space S) V (\\<lambda>a. lincomb a S)", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace K V\n  mod_hom K (func_space S) V (\\<lambda>a. lincomb a S)\n\ngoal (1 subgoal):\n 1. linear_map K (func_space S) V (\\<lambda>a. lincomb a S)", "by (unfold vectorspace_def mod_hom_def linear_map_def, auto)"], ["proof (state)\nthis:\n  linear_map K (func_space S) V (\\<lambda>a. lincomb a S)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Basic facts about span and linear independence\\<close>"], ["", "text \\<open>If $S$ is linearly independent, then $v\\in \\text{span}S$ iff $S\\cup \\{v\\}$ is linearly \ndependent.\\<close>"], ["", "theorem (in vectorspace) lin_dep_iff_in_span:\n  fixes A v S\n  assumes  h1: \"S \\<subseteq> carrier V\" and h2: \"lin_indpt S\" and h3: \"v\\<in> carrier V\" and h4: \"v\\<notin>S\"\n  shows \"v\\<in> span S \\<longleftrightarrow> lin_dep (S \\<union> {v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "let ?T = \"S \\<union> {v}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "have 0: \"v\\<in>?T \""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> S \\<union> {v}", "by auto"], ["proof (state)\nthis:\n  v \\<in> S \\<union> {v}\n\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "from h1 h3"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  v \\<in> carrier V", "have h1_1: \"?T \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. S \\<union> {v} \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  S \\<union> {v} \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "have a1:\"lin_dep ?T \\<Longrightarrow> v\\<in> span S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "assume a11: \"lin_dep ?T\""], ["proof (state)\nthis:\n  lin_dep (S \\<union> {v})\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from a11"], ["proof (chain)\npicking this:\n  lin_dep (S \\<union> {v})", "obtain a w A where a: \"(finite A \\<and> A\\<subseteq>?T \\<and> (a\\<in> (A\\<rightarrow>carrier K)) \\<and> (lincomb a A = \\<zero>\\<^bsub>V\\<^esub>) \\<and> (w\\<in>A) \\<and> (a w\\<noteq> \\<zero>\\<^bsub>K\\<^esub>))\""], ["proof (prove)\nusing this:\n  lin_dep (S \\<union> {v})\n\ngoal (1 subgoal):\n 1. (\\<And>A a w.\n        finite A \\<and>\n        A \\<subseteq> S \\<union> {v} \\<and>\n        a \\<in> A \\<rightarrow> carrier K \\<and>\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n        w \\<in> A \\<and>\n        a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis lin_dep_def)"], ["proof (state)\nthis:\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from assms a"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have nz2: \"\\<exists>v\\<in>A-S. a v\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "by (intro lincomb_must_include[where ?v=\"w\" and ?T=\"S\\<union>{v}\"], auto)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from a nz2"], ["proof (chain)\npicking this:\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have singleton: \"{v}=A-S\""], ["proof (prove)\nusing this:\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. {v} = A - S", "by auto"], ["proof (state)\nthis:\n  {v} = A - S\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from singleton nz2"], ["proof (chain)\npicking this:\n  {v} = A - S\n  \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have nz3: \"a v\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  {v} = A - S\n  \\<exists>v\\<in>A - S. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "(*Can modularize this whole section out. \"solving for one variable\"*)"], ["proof (state)\nthis:\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "let ?b=\"(\\<lambda>w. \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> (a v)) \\<otimes>\\<^bsub>K\\<^esub> (a w))\""], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from singleton"], ["proof (chain)\npicking this:\n  {v} = A - S", "have Ains: \"(A\\<inter>S) = A-{v}\""], ["proof (prove)\nusing this:\n  {v} = A - S\n\ngoal (1 subgoal):\n 1. A \\<inter> S = A - {v}", "by auto"], ["proof (state)\nthis:\n  A \\<inter> S = A - {v}\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from assms a singleton nz3"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  {v} = A - S\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have a31: \"v= lincomb ?b (A\\<inter>S)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  {v} = A - S\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. v =\n    lincomb\n     (\\<lambda>w.\n         \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                     v) \\<otimes>\\<^bsub>K\\<^esub>\n         a w)\n     (A \\<inter> S)", "apply (subst Ains)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> carrier V; lin_indpt S; v \\<in> carrier V;\n     v \\<notin> S;\n     finite A \\<and>\n     A \\<subseteq> S \\<union> {v} \\<and>\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     {v} = A - S; a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> v =\n                      lincomb\n                       (\\<lambda>w.\n                           \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n v) \\<otimes>\\<^bsub>K\\<^esub>\n                           a w)\n                       (A - {v})", "by (intro lincomb_isolate(1), auto)"], ["proof (state)\nthis:\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A \\<inter> S)\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S", "from a a31 nz3 singleton"], ["proof (chain)\npicking this:\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A \\<inter> S)\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  {v} = A - S", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A \\<and>\n  A \\<subseteq> S \\<union> {v} \\<and>\n  a \\<in> A \\<rightarrow> carrier K \\<and>\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  w \\<in> A \\<and> a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v =\n  lincomb\n   (\\<lambda>w.\n       \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                   v) \\<otimes>\\<^bsub>K\\<^esub>\n       a w)\n   (A \\<inter> S)\n  a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  {v} = A - S\n\ngoal (1 subgoal):\n 1. v \\<in> span S", "apply (unfold span_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v =\n             lincomb\n              (\\<lambda>w.\n                  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                              v) \\<otimes>\\<^bsub>K\\<^esub>\n                  a w)\n              (A \\<inter> S);\n     a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>; {v} = A - S; finite A;\n     a \\<in> A \\<rightarrow> carrier K;\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub>; w \\<in> A;\n     a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a A.\n                         v = lincomb a A \\<and>\n                         finite A \\<and>\n                         A \\<subseteq> S \\<and>\n                         a \\<in> A \\<rightarrow> carrier K", "apply (rule_tac x=\"?b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v =\n             lincomb\n              (\\<lambda>w.\n                  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                              v) \\<otimes>\\<^bsub>K\\<^esub>\n                  a w)\n              (A \\<inter> S);\n     a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>; {v} = A - S; finite A;\n     a \\<in> A \\<rightarrow> carrier K;\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub>; w \\<in> A;\n     a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         v =\n                         lincomb\n                          (\\<lambda>w.\n                              \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n    v) \\<otimes>\\<^bsub>K\\<^esub>\n                              a w)\n                          A \\<and>\n                         finite A \\<and>\n                         A \\<subseteq> S \\<and>\n                         (\\<lambda>w.\n                             \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n   v) \\<otimes>\\<^bsub>K\\<^esub>\n                             a w)\n                         \\<in> A \\<rightarrow> carrier K", "apply (rule_tac x=\"A\\<inter>S\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v =\n             lincomb\n              (\\<lambda>w.\n                  \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n                              v) \\<otimes>\\<^bsub>K\\<^esub>\n                  a w)\n              (A \\<inter> S);\n     a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>; {v} = A - S; finite A;\n     a \\<in> A \\<rightarrow> carrier K;\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub>; w \\<in> A;\n     a w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> v =\n                      lincomb\n                       (\\<lambda>w.\n                           \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\n v) \\<otimes>\\<^bsub>K\\<^esub>\n                           a w)\n                       (A \\<inter> S) \\<and>\n                      finite (A \\<inter> S) \\<and>\n                      A \\<inter> S \\<subseteq> S \\<and>\n                      (\\<lambda>w.\n                          \\<ominus>\\<^bsub>K\\<^esub> (inv\\<^bsub>K\\<^esub> a\nv) \\<otimes>\\<^bsub>K\\<^esub>\n                          a w)\n                      \\<in> A \\<inter> S \\<rightarrow> carrier K", "by (auto intro!: m_closed)"], ["proof (state)\nthis:\n  v \\<in> span S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S\n\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "have a2: \"v\\<in> (span S) \\<Longrightarrow> lin_dep ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "assume inspan: \"v\\<in> (span S)\""], ["proof (state)\nthis:\n  v \\<in> span S\n\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "from inspan"], ["proof (chain)\npicking this:\n  v \\<in> span S", "obtain a A where a: \"A\\<subseteq>S \\<and> finite A \\<and> (v = lincomb a A)\\<and> a\\<in>A\\<rightarrow>carrier K\""], ["proof (prove)\nusing this:\n  v \\<in> span S\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        A \\<subseteq> S \\<and>\n        finite A \\<and>\n        v = lincomb a A \\<and>\n        a \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: span_def, auto)"], ["proof (state)\nthis:\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "let ?b = \"\\<lambda> w. if (w=v) then (\\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>) else a w\""], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "(*consider -v + \\sum a_w w*)"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "have lc0: \" lincomb ?b (A\\<union>{v})=\\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    \\<zero>\\<^bsub>V\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    \\<zero>\\<^bsub>V\\<^esub>", "from assms a"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K", "have lc_ins: \"lincomb ?b (A\\<union>{v}) = ((?b v) \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> lincomb ?b A\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    (if v = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a v) \\<odot>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     A", "by (intro lincomb_insert, auto)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  (if v = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a v) \\<odot>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    \\<zero>\\<^bsub>V\\<^esub>", "from assms a"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K", "have lc_elim: \"lincomb ?b A=lincomb a A\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     A =\n    lincomb a A", "by (intro lincomb_elim_if, auto)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A =\n  lincomb a A\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    \\<zero>\\<^bsub>V\\<^esub>", "from assms lc_ins lc_elim a"], ["proof (chain)\npicking this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  (if v = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a v) \\<odot>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A =\n  lincomb a A\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K", "show ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier V\n  lin_indpt S\n  v \\<in> carrier V\n  v \\<notin> S\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  (if v = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a v) \\<odot>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   A =\n  lincomb a A\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> {v}) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by (simp add: M.l_neg smult_minus_1)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "from  a lc0"], ["proof (chain)\npicking this:\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  \\<zero>\\<^bsub>V\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq> S \\<and>\n  finite A \\<and> v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> {v}) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep (S \\<union> {v})", "apply (unfold lin_dep_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             finite A \\<and>\n             v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> {v}) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A a va.\n                         finite A \\<and>\n                         A \\<subseteq> S \\<union> {v} \\<and>\n                         a \\<in> A \\<rightarrow> carrier K \\<and>\n                         lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n                         va \\<in> A \\<and>\n                         a va \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "apply (rule_tac x=\"A\\<union>{v}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             finite A \\<and>\n             v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> {v}) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a va.\n                         finite (A \\<union> {v}) \\<and>\n                         A \\<union> {v} \\<subseteq> S \\<union> {v} \\<and>\n                         a \\<in> A \\<union> {v} \\<rightarrow>\n                                 carrier K \\<and>\n                         lincomb a (A \\<union> {v}) =\n                         \\<zero>\\<^bsub>V\\<^esub> \\<and>\n                         va \\<in> A \\<union> {v} \\<and>\n                         a va \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "apply (rule_tac x=\"?b\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             finite A \\<and>\n             v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> {v}) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>va.\n                         finite (A \\<union> {v}) \\<and>\n                         A \\<union> {v} \\<subseteq> S \\<union> {v} \\<and>\n                         (\\<lambda>w.\n                             if w = v\n                             then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                             else a w)\n                         \\<in> A \\<union> {v} \\<rightarrow> carrier K \\<and>\n                         lincomb\n                          (\\<lambda>w.\n                              if w = v\n                              then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                              else a w)\n                          (A \\<union> {v}) =\n                         \\<zero>\\<^bsub>V\\<^esub> \\<and>\n                         va \\<in> A \\<union> {v} \\<and>\n                         (if va = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a va) \\<noteq>\n                         \\<zero>\\<^bsub>K\\<^esub>", "apply (rule_tac x=\"v\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> S \\<and>\n             finite A \\<and>\n             v = lincomb a A \\<and> a \\<in> A \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> {v}) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> finite (A \\<union> {v}) \\<and>\n                      A \\<union> {v} \\<subseteq> S \\<union> {v} \\<and>\n                      (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> A \\<union> {v} \\<rightarrow> carrier K \\<and>\n                      lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A \\<union> {v}) =\n                      \\<zero>\\<^bsub>V\\<^esub> \\<and>\n                      v \\<in> A \\<union> {v} \\<and>\n                      (if v = v\n                       then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                       else a v) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lin_dep (S \\<union> {v})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})\n\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "from a1 a2"], ["proof (chain)\npicking this:\n  lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S\n  v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})", "show ?thesis"], ["proof (prove)\nusing this:\n  lin_dep (S \\<union> {v}) \\<Longrightarrow> v \\<in> span S\n  v \\<in> span S \\<Longrightarrow> lin_dep (S \\<union> {v})\n\ngoal (1 subgoal):\n 1. (v \\<in> span S) = lin_dep (S \\<union> {v})", "by auto"], ["proof (state)\nthis:\n  (v \\<in> span S) = lin_dep (S \\<union> {v})\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $v\\in \\text{span} A$ then $\\text{span}A =\\text{span}(A\\cup \\{v\\})$\\<close>"], ["", "lemma (in vectorspace) already_in_span:\n  fixes v A\n  assumes  inC: \"A\\<subseteq>carrier V\" and inspan: \"v\\<in>span A\"\n  shows \"span A= span (A\\<union>{v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "from inC inspan"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  v \\<in> span A", "have dir1: \"span A \\<subseteq> span (A\\<union>{v})\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  v \\<in> span A\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> span (A \\<union> {v})", "by (intro span_is_monotone, auto)"], ["proof (state)\nthis:\n  span A \\<subseteq> span (A \\<union> {v})\n\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "from inC"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V", "have inown: \"A\\<subseteq>span A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<subseteq> span A", "by (rule in_own_span)"], ["proof (state)\nthis:\n  A \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "from inC"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V", "have subm: \"submodule K (span A) V\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. LinearCombinations.submodule K (span A) V", "by (rule span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule K (span A) V\n\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "from inown inspan subm"], ["proof (chain)\npicking this:\n  A \\<subseteq> span A\n  v \\<in> span A\n  LinearCombinations.submodule K (span A) V", "have dir2: \"span (A \\<union> {v}) \\<subseteq> span A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> span A\n  v \\<in> span A\n  LinearCombinations.submodule K (span A) V\n\ngoal (1 subgoal):\n 1. span (A \\<union> {v}) \\<subseteq> span A", "by (intro span_is_subset, auto)"], ["proof (state)\nthis:\n  span (A \\<union> {v}) \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "from dir1 dir2"], ["proof (chain)\npicking this:\n  span A \\<subseteq> span (A \\<union> {v})\n  span (A \\<union> {v}) \\<subseteq> span A", "show ?thesis"], ["proof (prove)\nusing this:\n  span A \\<subseteq> span (A \\<union> {v})\n  span (A \\<union> {v}) \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. span A = span (A \\<union> {v})", "by auto"], ["proof (state)\nthis:\n  span A = span (A \\<union> {v})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Replacement Theorem\\<close>"], ["", "text \\<open>If $A,B\\subseteq V$ are finite, $A$ is linearly independent, $B$ generates $W$, \nand $A\\subseteq W$, then there exists $C\\subseteq V$ disjoint from $A$ such that\n$\\text{span}(A\\cup C) = W$ and $|C|\\le |B|-|A|$. In other words, we can complete\nany linearly independent set to a generating set of $W$ by adding at most $|B|-|A|$ more elements.\\<close>"], ["", "theorem (in vectorspace) replacement:\n  fixes A B (*A B are lists of vectors (colloquially we refer to them as sets)*) \n  assumes h1: \"finite A\"\n      and h2: \"finite B\"\n      and h3: \"B\\<subseteq>carrier V\"\n      and h4: \"lin_indpt A\" (*A is linearly independent*)\n      and h5: \"A\\<subseteq>span B\" (*All entries of A are in K*)\n  shows \"\\<exists>C. finite C \\<and> C\\<subseteq>carrier V \\<and> C\\<subseteq>span B \\<and> C\\<inter>A={} \\<and> int (card C) \\<le> (int (card B)) - (int (card A)) \\<and> (span (A \\<union> C) = span B)\" \n  (is \"\\<exists>C. ?P A B C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "(*There is a set C of cardinality |B| - |A| such that A\\<union>C generates V*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "using h1 h2 h3 h4 h5"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "proof (induct \"card A\" arbitrary: A B)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B\n 2. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "case 0"], ["proof (state)\nthis:\n  0 = card A\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B\n 2. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from \"0.prems\"(1) \"0.hyps\""], ["proof (chain)\npicking this:\n  finite A\n  0 = card A", "have a0: \"A={}\""], ["proof (prove)\nusing this:\n  finite A\n  0 = card A\n\ngoal (1 subgoal):\n 1. A = {}", "by auto"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B\n 2. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from \"0.prems\"(3)"], ["proof (chain)\npicking this:\n  B \\<subseteq> carrier V", "have a3: \"B\\<subseteq>span B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. B \\<subseteq> span B", "by (rule in_own_span)"], ["proof (state)\nthis:\n  B \\<subseteq> span B\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B\n 2. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from a0 a3 \"0.prems\""], ["proof (chain)\npicking this:\n  A = {}\n  B \\<subseteq> span B\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B", "show ?case"], ["proof (prove)\nusing this:\n  A = {}\n  B \\<subseteq> span B\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "by (rule_tac x=\"B\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     span (A \\<union> C) = span B\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "case (Suc m)"], ["proof (state)\nthis:\n  \\<lbrakk>m = card ?A1; finite ?A1; finite ?B1; ?B1 \\<subseteq> carrier V;\n   lin_indpt ?A1; ?A1 \\<subseteq> span ?B1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       finite C \\<and>\n                       C \\<subseteq> carrier V \\<and>\n                       C \\<subseteq> span ?B1 \\<and>\n                       C \\<inter> ?A1 = {} \\<and>\n                       int (card C)\n                       \\<le> int (card ?B1) - int (card ?A1) \\<and>\n                       span (?A1 \\<union> C) = span ?B1\n  Suc m = card A\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "let ?W=\"span B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from Suc.prems(3)"], ["proof (chain)\npicking this:\n  B \\<subseteq> carrier V", "have BinC: \"span B\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. span B \\<subseteq> carrier V", "by (rule span_is_subset2)"], ["proof (state)\nthis:\n  span B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "(*everything you want to know about A*)"], ["proof (state)\nthis:\n  span B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from Suc.prems Suc.hyps BinC"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  \\<lbrakk>m = card ?A1; finite ?A1; finite ?B1; ?B1 \\<subseteq> carrier V;\n   lin_indpt ?A1; ?A1 \\<subseteq> span ?B1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       finite C \\<and>\n                       C \\<subseteq> carrier V \\<and>\n                       C \\<subseteq> span ?B1 \\<and>\n                       C \\<inter> ?A1 = {} \\<and>\n                       int (card C)\n                       \\<le> int (card ?B1) - int (card ?A1) \\<and>\n                       span (?A1 \\<union> C) = span ?B1\n  Suc m = card A\n  span B \\<subseteq> carrier V", "have A: \"finite A\" \"lin_indpt A\" \"A\\<subseteq>span B\" \"Suc m = card A\" \"A\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  \\<lbrakk>m = card ?A1; finite ?A1; finite ?B1; ?B1 \\<subseteq> carrier V;\n   lin_indpt ?A1; ?A1 \\<subseteq> span ?B1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       finite C \\<and>\n                       C \\<subseteq> carrier V \\<and>\n                       C \\<subseteq> span ?B1 \\<and>\n                       C \\<inter> ?A1 = {} \\<and>\n                       int (card C)\n                       \\<le> int (card ?B1) - int (card ?A1) \\<and>\n                       span (?A1 \\<union> C) = span ?B1\n  Suc m = card A\n  span B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (finite A &&& lin_indpt A) &&&\n    A \\<subseteq> span B &&& Suc m = card A &&& A \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "(*everything you want to know about B*)"], ["proof (state)\nthis:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from Suc.prems"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B", "have B: \"finite B\" \"B\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. finite B &&& B \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "(*A B are lists of vectors (colloquially we refer to them as sets)*)"], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from Suc.hyps(2)"], ["proof (chain)\npicking this:\n  Suc m = card A", "obtain v where v: \"v\\<in>A\""], ["proof (prove)\nusing this:\n  Suc m = card A\n\ngoal (1 subgoal):\n 1. (\\<And>v. v \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "let ?A'=\"A-{v}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "(*?A' is linearly independent because it is the subset of a linearly independent set, A.*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from A(2)"], ["proof (chain)\npicking this:\n  lin_indpt A", "have liA': \"lin_indpt ?A'\""], ["proof (prove)\nusing this:\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. lin_indpt (A - {v})", "apply (intro subset_li_is_li[of \"A\" \"?A'\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. lin_indpt A \\<Longrightarrow> lin_indpt A\n 2. lin_indpt A \\<Longrightarrow> A - {v} \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  lin_indpt (A - {v})\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from v liA' Suc.prems Suc.hyps(2)"], ["proof (chain)\npicking this:\n  v \\<in> A\n  lin_indpt (A - {v})\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A", "have \"\\<exists>C'. ?P ?A' B C'\""], ["proof (prove)\nusing this:\n  v \\<in> A\n  lin_indpt (A - {v})\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n\ngoal (1 subgoal):\n 1. \\<exists>C'.\n       finite C' \\<and>\n       C' \\<subseteq> carrier V \\<and>\n       C' \\<subseteq> span B \\<and>\n       C' \\<inter> (A - {v}) = {} \\<and>\n       int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n       span (A - {v} \\<union> C') = span B", "apply (intro Suc.hyps(1))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> m = card (A - {v})\n 2. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> finite (A - {v})\n 3. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> finite B\n 4. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> carrier V\n 5. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> lin_indpt (A - {v})\n 6. \\<lbrakk>v \\<in> A; lin_indpt (A - {v}); finite A; finite B;\n     B \\<subseteq> carrier V; lin_indpt A; A \\<subseteq> span B;\n     Suc m = card A\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<subseteq> span B", "by auto"], ["proof (state)\nthis:\n  \\<exists>C'.\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "from this"], ["proof (chain)\npicking this:\n  \\<exists>C'.\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B", "obtain C' where C': \"?P ?A' B C'\""], ["proof (prove)\nusing this:\n  \\<exists>C'.\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        finite C' \\<and>\n        C' \\<subseteq> carrier V \\<and>\n        C' \\<subseteq> span B \\<and>\n        C' \\<inter> (A - {v}) = {} \\<and>\n        int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n        span (A - {v} \\<union> C') = span B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n\ngoal (1 subgoal):\n 1. \\<And>x A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>x = card A; finite A; finite B;\n                    B \\<subseteq> carrier V; lin_indpt A;\n                    A \\<subseteq> span B\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>C.\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B;\n        Suc x = card A; finite A; finite B; B \\<subseteq> carrier V;\n        lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            finite C \\<and>\n                            C \\<subseteq> carrier V \\<and>\n                            C \\<subseteq> span B \\<and>\n                            C \\<inter> A = {} \\<and>\n                            int (card C)\n                            \\<le> int (card B) - int (card A) \\<and>\n                            span (A \\<union> C) = span B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "proof (cases \"v\\<in> C'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B\n 2. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "case True"], ["proof (state)\nthis:\n  v \\<in> C'\n\ngoal (2 subgoals):\n 1. v \\<in> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B\n 2. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "have vinC': \"v\\<in>C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> C'", "by fact"], ["proof (state)\nthis:\n  v \\<in> C'\n\ngoal (2 subgoals):\n 1. v \\<in> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B\n 2. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from vinC' v"], ["proof (chain)\npicking this:\n  v \\<in> C'\n  v \\<in> A", "have seteq: \"A - {v} \\<union> C' = A \\<union> (C' - {v})\""], ["proof (prove)\nusing this:\n  v \\<in> C'\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. A - {v} \\<union> C' = A \\<union> (C' - {v})", "by auto"], ["proof (state)\nthis:\n  A - {v} \\<union> C' = A \\<union> (C' - {v})\n\ngoal (2 subgoals):\n 1. v \\<in> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B\n 2. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from C' seteq"], ["proof (chain)\npicking this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  A - {v} \\<union> C' = A \\<union> (C' - {v})", "have spaneq: \"span (A \\<union> (C' - {v})) = span (B)\""], ["proof (prove)\nusing this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  A - {v} \\<union> C' = A \\<union> (C' - {v})\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {v})) = span B", "by algebra"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {v})) = span B\n\ngoal (2 subgoals):\n 1. v \\<in> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B\n 2. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from Suc.prems Suc.hyps C' vinC' v spaneq"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  \\<lbrakk>m = card ?A1; finite ?A1; finite ?B1; ?B1 \\<subseteq> carrier V;\n   lin_indpt ?A1; ?A1 \\<subseteq> span ?B1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       finite C \\<and>\n                       C \\<subseteq> carrier V \\<and>\n                       C \\<subseteq> span ?B1 \\<and>\n                       C \\<inter> ?A1 = {} \\<and>\n                       int (card C)\n                       \\<le> int (card ?B1) - int (card ?A1) \\<and>\n                       span (?A1 \\<union> C) = span ?B1\n  Suc m = card A\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> C'\n  v \\<in> A\n  span (A \\<union> (C' - {v})) = span B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n  \\<lbrakk>m = card ?A1; finite ?A1; finite ?B1; ?B1 \\<subseteq> carrier V;\n   lin_indpt ?A1; ?A1 \\<subseteq> span ?B1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       finite C \\<and>\n                       C \\<subseteq> carrier V \\<and>\n                       C \\<subseteq> span ?B1 \\<and>\n                       C \\<inter> ?A1 = {} \\<and>\n                       int (card C)\n                       \\<le> int (card ?B1) - int (card ?A1) \\<and>\n                       span (?A1 \\<union> C) = span ?B1\n  Suc m = card A\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> C'\n  v \\<in> A\n  span (A \\<union> (C' - {v})) = span B\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "apply (rule_tac x=\"C'-{v}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B; B \\<subseteq> carrier V; lin_indpt A;\n     A \\<subseteq> span B;\n     \\<And>A B.\n        \\<lbrakk>m = card A; finite A; finite B; B \\<subseteq> carrier V;\n         lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>C.\n                             finite C \\<and>\n                             C \\<subseteq> carrier V \\<and>\n                             C \\<subseteq> span B \\<and>\n                             C \\<inter> A = {} \\<and>\n                             int (card C)\n                             \\<le> int (card B) - int (card A) \\<and>\n                             span (A \\<union> C) = span B;\n     Suc m = card A;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> C'; v \\<in> A; span (A \\<union> (C' - {v})) = span B\\<rbrakk>\n    \\<Longrightarrow> finite (C' - {v}) \\<and>\n                      C' - {v} \\<subseteq> carrier V \\<and>\n                      C' - {v} \\<subseteq> span B \\<and>\n                      (C' - {v}) \\<inter> A = {} \\<and>\n                      int (card (C' - {v}))\n                      \\<le> int (card B) - int (card A) \\<and>\n                      span (A \\<union> (C' - {v})) = span B", "apply (subgoal_tac \"card C' >0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; finite B; B \\<subseteq> carrier V; lin_indpt A;\n     A \\<subseteq> span B;\n     \\<And>A B.\n        \\<lbrakk>m = card A; finite A; finite B; B \\<subseteq> carrier V;\n         lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>C.\n                             finite C \\<and>\n                             C \\<subseteq> carrier V \\<and>\n                             C \\<subseteq> span B \\<and>\n                             C \\<inter> A = {} \\<and>\n                             int (card C)\n                             \\<le> int (card B) - int (card A) \\<and>\n                             span (A \\<union> C) = span B;\n     Suc m = card A;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> C'; v \\<in> A; span (A \\<union> (C' - {v})) = span B;\n     0 < card C'\\<rbrakk>\n    \\<Longrightarrow> finite (C' - {v}) \\<and>\n                      C' - {v} \\<subseteq> carrier V \\<and>\n                      C' - {v} \\<subseteq> span B \\<and>\n                      (C' - {v}) \\<inter> A = {} \\<and>\n                      int (card (C' - {v}))\n                      \\<le> int (card B) - int (card A) \\<and>\n                      span (A \\<union> (C' - {v})) = span B\n 2. \\<lbrakk>finite A; finite B; B \\<subseteq> carrier V; lin_indpt A;\n     A \\<subseteq> span B;\n     \\<And>A B.\n        \\<lbrakk>m = card A; finite A; finite B; B \\<subseteq> carrier V;\n         lin_indpt A; A \\<subseteq> span B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>C.\n                             finite C \\<and>\n                             C \\<subseteq> carrier V \\<and>\n                             C \\<subseteq> span B \\<and>\n                             C \\<inter> A = {} \\<and>\n                             int (card C)\n                             \\<le> int (card B) - int (card A) \\<and>\n                             span (A \\<union> C) = span B;\n     Suc m = card A;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> C'; v \\<in> A; span (A \\<union> (C' - {v})) = span B\\<rbrakk>\n    \\<Longrightarrow> 0 < card C'", "by auto"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     span (A \\<union> C) = span B\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "case False"], ["proof (state)\nthis:\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "have f: \"v\\<notin>C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> C'", "by fact"], ["proof (state)\nthis:\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from A v C'"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  v \\<in> A\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B", "have \"\\<exists>a. a\\<in>(?A'\\<union>C')\\<rightarrow>carrier K \\<and>  lincomb a (?A' \\<union> C') =v\""], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  v \\<in> A\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n       lincomb a (A - {v} \\<union> C') = v", "by (intro finite_in_span, auto)"], ["proof (state)\nthis:\n  \\<exists>a.\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     lincomb a (A - {v} \\<union> C') = v\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from this"], ["proof (chain)\npicking this:\n  \\<exists>a.\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     lincomb a (A - {v} \\<union> C') = v", "obtain a where a: \"a\\<in>(?A'\\<union>C')\\<rightarrow>carrier K \\<and> v= lincomb a (?A' \\<union> C')\""], ["proof (prove)\nusing this:\n  \\<exists>a.\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     lincomb a (A - {v} \\<union> C') = v\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n        v = lincomb a (A - {v} \\<union> C') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n  v = lincomb a (A - {v} \\<union> C')\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "let ?b=\"(\\<lambda> w. if (w=v) then \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub> else a w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from a"], ["proof (chain)\npicking this:\n  a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n  v = lincomb a (A - {v} \\<union> C')", "have b: \"?b\\<in>A\\<union>C'\\<rightarrow>carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n  v = lincomb a (A - {v} \\<union> C')\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a w)\n    \\<in> A \\<union> C' \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w)\n  \\<in> A \\<union> C' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from v"], ["proof (chain)\npicking this:\n  v \\<in> A", "have rewrite_ins: \"A\\<union>C'=(?A'\\<union>C')\\<union>{v}\""], ["proof (prove)\nusing this:\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<union> C' = A - {v} \\<union> C' \\<union> {v}", "by auto"], ["proof (state)\nthis:\n  A \\<union> C' = A - {v} \\<union> C' \\<union> {v}\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from f"], ["proof (chain)\npicking this:\n  v \\<notin> C'", "have \"v\\<notin>?A'\\<union>C'\""], ["proof (prove)\nusing this:\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. v \\<notin> A - {v} \\<union> C'", "by auto"], ["proof (state)\nthis:\n  v \\<notin> A - {v} \\<union> C'\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from this A C' v a f"], ["proof (chain)\npicking this:\n  v \\<notin> A - {v} \\<union> C'\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> A\n  a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n  v = lincomb a (A - {v} \\<union> C')\n  v \\<notin> C'", "have lcb: \"lincomb ?b (A \\<union> C') = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  v \\<notin> A - {v} \\<union> C'\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> A\n  a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n  v = lincomb a (A - {v} \\<union> C')\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     (A \\<union> C') =\n    \\<zero>\\<^bsub>V\\<^esub>", "apply (subst rewrite_ins)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A - {v} \\<union> C' \\<union> {v}) =\n                      \\<zero>\\<^bsub>V\\<^esub>", "apply (subst lincomb_insert)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> finite (A - {v} \\<union> C')\n 2. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<union> C' \\<subseteq> carrier V\n 3. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> A - {v} \\<union> C' \\<union> {v} \\<rightarrow>\n                            carrier K\n 4. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> v \\<notin> A - {v} \\<union> C'\n 5. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> v \\<in> carrier V\n 6. \\<lbrakk>v \\<notin> A - {v} \\<union> C'; finite A; lin_indpt A;\n     A \\<subseteq> span B; Suc m = card A; A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> (if v = v\n                       then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                       else a v) \\<odot>\\<^bsub>V\\<^esub>\n                      v \\<oplus>\\<^bsub>V\\<^esub>\n                      lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A - {v} \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>", "apply (simp_all add: ring_subset_carrier coeff_in_ring)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card A - Suc 0) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<rightarrow> carrier K \\<and>\n     a \\<in> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<subseteq> carrier V\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card A - Suc 0) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<rightarrow> carrier K \\<and>\n     a \\<in> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> A - {v} \\<rightarrow> carrier K \\<and>\n                      (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> C' \\<rightarrow> carrier K\n 3. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card A - Suc 0) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A;\n     a \\<in> A - {v} \\<rightarrow> carrier K \\<and>\n     a \\<in> C' \\<rightarrow> carrier K \\<and>\n     v = lincomb a (A - {v} \\<union> C');\n     v \\<notin> C'\\<rbrakk>\n    \\<Longrightarrow> \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n                      v \\<oplus>\\<^bsub>V\\<^esub>\n                      lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A - {v} \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>", "apply (auto split: if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V; v \\<in> A; v \\<notin> C'; finite C';\n     a \\<in> A - {v} \\<rightarrow> carrier K; C' \\<subseteq> carrier V;\n     a \\<in> C' \\<rightarrow> carrier K;\n     v = lincomb a (A - {v} \\<union> C'); C' \\<subseteq> span B;\n     C' \\<inter> (A - {v}) = {};\n     int (card C') \\<le> int (card B) - int (card A - Suc 0);\n     span (A - {v} \\<union> C') = span B\\<rbrakk>\n    \\<Longrightarrow> \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n                      v \\<oplus>\\<^bsub>V\\<^esub>\n                      lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A - {v} \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>", "apply (subst lincomb_elim_if)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V; v \\<in> A; v \\<notin> C'; finite C';\n     a \\<in> A - {v} \\<rightarrow> carrier K; C' \\<subseteq> carrier V;\n     a \\<in> C' \\<rightarrow> carrier K;\n     v = lincomb a (A - {v} \\<union> C'); C' \\<subseteq> span B;\n     C' \\<inter> (A - {v}) = {};\n     int (card C') \\<le> int (card B) - int (card A - Suc 0);\n     span (A - {v} \\<union> C') = span B\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<union> C' \\<subseteq> carrier V\n 2. \\<And>va.\n       \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n        A \\<subseteq> carrier V; v \\<in> A; v \\<notin> C'; finite C';\n        a \\<in> A - {v} \\<rightarrow> carrier K; C' \\<subseteq> carrier V;\n        a \\<in> C' \\<rightarrow> carrier K;\n        v = lincomb a (A - {v} \\<union> C'); C' \\<subseteq> span B;\n        C' \\<inter> (A - {v}) = {};\n        int (card C') \\<le> int (card B) - int (card A - Suc 0);\n        span (A - {v} \\<union> C') = span B;\n        va \\<in> A - {v} \\<union> C'\\<rbrakk>\n       \\<Longrightarrow> va \\<noteq> v\n 3. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V; v \\<in> A; v \\<notin> C'; finite C';\n     a \\<in> A - {v} \\<rightarrow> carrier K; C' \\<subseteq> carrier V;\n     a \\<in> C' \\<rightarrow> carrier K;\n     v = lincomb a (A - {v} \\<union> C'); C' \\<subseteq> span B;\n     C' \\<inter> (A - {v}) = {};\n     int (card C') \\<le> int (card B) - int (card A - Suc 0);\n     span (A - {v} \\<union> C') = span B\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A - {v} \\<union> C' \\<rightarrow> carrier K\n 4. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V; v \\<in> A; v \\<notin> C'; finite C';\n     a \\<in> A - {v} \\<rightarrow> carrier K; C' \\<subseteq> carrier V;\n     a \\<in> C' \\<rightarrow> carrier K;\n     v = lincomb a (A - {v} \\<union> C'); C' \\<subseteq> span B;\n     C' \\<inter> (A - {v}) = {};\n     int (card C') \\<le> int (card B) - int (card A - Suc 0);\n     span (A - {v} \\<union> C') = span B\\<rbrakk>\n    \\<Longrightarrow> \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n                      v \\<oplus>\\<^bsub>V\\<^esub>\n                      lincomb a (A - {v} \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>", "by (auto simp add: smult_minus_1 l_neg ring_subset_carrier)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "(*NOTE: l_neg got deleted from the simp rules, but it is very useful.*)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from C' f"], ["proof (chain)\npicking this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<notin> C'", "have rewrite_minus: \"C'=(A\\<union>C')-A\""], ["proof (prove)\nusing this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. C' = A \\<union> C' - A", "by auto"], ["proof (state)\nthis:\n  C' = A \\<union> C' - A\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from A C' b lcb v"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  (\\<lambda>w.\n      if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w)\n  \\<in> A \\<union> C' \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>\n  v \\<in> A", "have exw: \"\\<exists>w\\<in> C'. ?b w\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  (\\<lambda>w.\n      if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w)\n  \\<in> A \\<union> C' \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>w\\<in>C'.\n       (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a w) \\<noteq>\n       \\<zero>\\<^bsub>K\\<^esub>", "apply (subst rewrite_minus)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>w\\<in>A \\<union> C' - A.\n                         (if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w) \\<noteq>\n                         \\<zero>\\<^bsub>K\\<^esub>", "apply (intro lincomb_must_include[where ?T=\"A\\<union>C'\" and ?v=\"v\"])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> A \\<union> C' \\<subseteq> carrier V\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> lin_indpt A\n 3. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> A \\<union> C'\n 4. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> A \\<union> C' \\<subseteq> A \\<union> C'\n 5. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> finite (A \\<union> C')\n 6. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> A \\<union> C' \\<rightarrow> carrier K\n 7. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>\n 8. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> v \\<in> A \\<union> C'\n 9. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> (if v = v\n                       then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                       else a v) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<exists>w\\<in>C'.\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from exw"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>C'.\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>", "obtain w where w: \"w\\<in> C'\" \"?b w\\<noteq>\\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>C'.\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> C';\n         (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w) \\<noteq>\n         \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> C'\n  (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a w) \\<noteq>\n  \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from A C' w f b lcb"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a w) \\<noteq>\n  \\<zero>\\<^bsub>K\\<^esub>\n  v \\<notin> C'\n  (\\<lambda>w.\n      if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w)\n  \\<in> A \\<union> C' \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>", "have w_in: \"w\\<in>span ((A\\<union> C') -{w})\""], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a w) \\<noteq>\n  \\<zero>\\<^bsub>K\\<^esub>\n  v \\<notin> C'\n  (\\<lambda>w.\n      if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w)\n  \\<in> A \\<union> C' \\<rightarrow> carrier K\n  lincomb\n   (\\<lambda>w.\n       if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a w)\n   (A \\<union> C') =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. w \\<in> span (A \\<union> C' - {w})", "apply (intro lincomb_isolate[where a=\"?b\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> finite (A \\<union> C')\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> A \\<union> C' \\<subseteq> carrier V\n 3. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          if w = v\n                          then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                          else a w)\n                      \\<in> A \\<union> C' \\<rightarrow> carrier K\n 4. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> w \\<in> A \\<union> C'\n 5. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (if w = v\n                       then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                       else a w) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>\n 6. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C';\n     (\\<lambda>w.\n         if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a w)\n     \\<in> A \\<union> C' \\<rightarrow> carrier K;\n     lincomb\n      (\\<lambda>w.\n          if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n          else a w)\n      (A \\<union> C') =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> lincomb\n                       (\\<lambda>w.\n                           if w = v\n                           then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                           else a w)\n                       (A \\<union> C') =\n                      \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  w \\<in> span (A \\<union> C' - {w})\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "have spaneq2: \"span (A\\<union>(C'-{w})) = span B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span B", "have 1: \"span (?A'\\<union>C') = span (A\\<union> C')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A \\<union> C')", "(*adding v doesn't change the span*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A \\<union> C')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A \\<union> C')", "from A C' v"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> A", "have m1: \"span (?A'\\<union>C') = span ((?A'\\<union> C')\\<union>{v})\""], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A - {v} \\<union> C' \\<union> {v})", "apply (intro already_in_span)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<union> C' \\<subseteq> carrier V\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     v \\<in> A\\<rbrakk>\n    \\<Longrightarrow> v \\<in> span (A - {v} \\<union> C')", "by auto"], ["proof (state)\nthis:\n  span (A - {v} \\<union> C') = span (A - {v} \\<union> C' \\<union> {v})\n\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A \\<union> C')", "from f m1"], ["proof (chain)\npicking this:\n  v \\<notin> C'\n  span (A - {v} \\<union> C') = span (A - {v} \\<union> C' \\<union> {v})", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<notin> C'\n  span (A - {v} \\<union> C') = span (A - {v} \\<union> C' \\<union> {v})\n\ngoal (1 subgoal):\n 1. span (A - {v} \\<union> C') = span (A \\<union> C')", "by (metis rewrite_ins)"], ["proof (state)\nthis:\n  span (A - {v} \\<union> C') = span (A \\<union> C')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (A - {v} \\<union> C') = span (A \\<union> C')\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span B", "have 2: \"span (A\\<union> (C'-{w})) = span (A\\<union> C')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "(*removing w doesn't change the span*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "from C' w(1) f"], ["proof (chain)\npicking this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  v \\<notin> C'", "have b60: \"A\\<union> (C'-{w}) = (A\\<union> C') -{w}\""], ["proof (prove)\nusing this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  v \\<notin> C'\n\ngoal (1 subgoal):\n 1. A \\<union> (C' - {w}) = A \\<union> C' - {w}", "by auto"], ["proof (state)\nthis:\n  A \\<union> (C' - {w}) = A \\<union> C' - {w}\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "from  w(1)"], ["proof (chain)\npicking this:\n  w \\<in> C'", "have b61: \"A\\<union> C'= (A\\<union> C' -{w})\\<union>{w}\""], ["proof (prove)\nusing this:\n  w \\<in> C'\n\ngoal (1 subgoal):\n 1. A \\<union> C' = A \\<union> C' - {w} \\<union> {w}", "by auto"], ["proof (state)\nthis:\n  A \\<union> C' = A \\<union> C' - {w} \\<union> {w}\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "from A C'  w_in"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> span (A \\<union> C' - {w})", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> span (A \\<union> C' - {w})\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span (A \\<union> C')", "apply (subst b61)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> span (A \\<union> C' - {w})\\<rbrakk>\n    \\<Longrightarrow> span (A \\<union> (C' - {w})) =\n                      span (A \\<union> C' - {w} \\<union> {w})", "apply (subst b60)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> span (A \\<union> C' - {w})\\<rbrakk>\n    \\<Longrightarrow> span (A \\<union> C' - {w}) =\n                      span (A \\<union> C' - {w} \\<union> {w})", "apply (intro already_in_span)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> span (A \\<union> C' - {w})\\<rbrakk>\n    \\<Longrightarrow> A \\<union> C' - {w} \\<subseteq> carrier V\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> span (A \\<union> C' - {w})\\<rbrakk>\n    \\<Longrightarrow> w \\<in> span (A \\<union> C' - {w})", "by auto"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {w})) = span (A \\<union> C')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {w})) = span (A \\<union> C')\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span B", "from C' 1 2"], ["proof (chain)\npicking this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  span (A - {v} \\<union> C') = span (A \\<union> C')\n  span (A \\<union> (C' - {w})) = span (A \\<union> C')", "show ?thesis"], ["proof (prove)\nusing this:\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  span (A - {v} \\<union> C') = span (A \\<union> C')\n  span (A \\<union> (C' - {w})) = span (A \\<union> C')\n\ngoal (1 subgoal):\n 1. span (A \\<union> (C' - {w})) = span B", "by auto"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {w})) = span B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {w})) = span B\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "(* \"span (A\\<union>(C'-{w})) = span B\"*)"], ["proof (state)\nthis:\n  span (A \\<union> (C' - {w})) = span B\n\ngoal (1 subgoal):\n 1. v \\<notin> C' \\<Longrightarrow>\n    \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "from A C' w f v spaneq2"], ["proof (chain)\npicking this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a w) \\<noteq>\n  \\<zero>\\<^bsub>K\\<^esub>\n  v \\<notin> C'\n  v \\<in> A\n  span (A \\<union> (C' - {w})) = span B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  lin_indpt A\n  A \\<subseteq> span B\n  Suc m = card A\n  A \\<subseteq> carrier V\n  finite C' \\<and>\n  C' \\<subseteq> carrier V \\<and>\n  C' \\<subseteq> span B \\<and>\n  C' \\<inter> (A - {v}) = {} \\<and>\n  int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n  span (A - {v} \\<union> C') = span B\n  w \\<in> C'\n  (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a w) \\<noteq>\n  \\<zero>\\<^bsub>K\\<^esub>\n  v \\<notin> C'\n  v \\<in> A\n  span (A \\<union> (C' - {w})) = span B\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       span (A \\<union> C) = span B", "apply (rule_tac x=\"C'-{w}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C'; v \\<in> A;\n     span (A \\<union> (C' - {w})) = span B\\<rbrakk>\n    \\<Longrightarrow> finite (C' - {w}) \\<and>\n                      C' - {w} \\<subseteq> carrier V \\<and>\n                      C' - {w} \\<subseteq> span B \\<and>\n                      (C' - {w}) \\<inter> A = {} \\<and>\n                      int (card (C' - {w}))\n                      \\<le> int (card B) - int (card A) \\<and>\n                      span (A \\<union> (C' - {w})) = span B", "apply (subgoal_tac \"card C' >0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C'; v \\<in> A; span (A \\<union> (C' - {w})) = span B;\n     0 < card C'\\<rbrakk>\n    \\<Longrightarrow> finite (C' - {w}) \\<and>\n                      C' - {w} \\<subseteq> carrier V \\<and>\n                      C' - {w} \\<subseteq> span B \\<and>\n                      (C' - {w}) \\<inter> A = {} \\<and>\n                      int (card (C' - {w}))\n                      \\<le> int (card B) - int (card A) \\<and>\n                      span (A \\<union> (C' - {w})) = span B\n 2. \\<lbrakk>finite A; lin_indpt A; A \\<subseteq> span B; Suc m = card A;\n     A \\<subseteq> carrier V;\n     finite C' \\<and>\n     C' \\<subseteq> carrier V \\<and>\n     C' \\<subseteq> span B \\<and>\n     C' \\<inter> (A - {v}) = {} \\<and>\n     int (card C') \\<le> int (card B) - int (card (A - {v})) \\<and>\n     span (A - {v} \\<union> C') = span B;\n     w \\<in> C';\n     (if w = v then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a w) \\<noteq>\n     \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<notin> C'; v \\<in> A;\n     span (A \\<union> (C' - {w})) = span B\\<rbrakk>\n    \\<Longrightarrow> 0 < card C'", "by auto"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     span (A \\<union> C) = span B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     span (A \\<union> C) = span B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Defining dimension and bases.\\<close>"], ["", "text \\<open>Finite dimensional is defined as having a finite generating set.\\<close>"], ["", "definition (in vectorspace) fin_dim:: \"bool\"\n  where \"fin_dim = (\\<exists> A. ((finite A) \\<and> (A \\<subseteq> carrier V) \\<and> (gen_set A)))\""], ["", "text \\<open>The dimension is the size of the smallest generating set. For equivalent\ncharacterizations see below.\\<close>"], ["", "definition (in vectorspace) dim:: \"nat\"\n  where \"dim = (LEAST n. (\\<exists> A. ((finite A) \\<and> (card A = n) \\<and> (A \\<subseteq> carrier V) \\<and> (gen_set A))))\""], ["", "text \\<open>A \\<open>basis\\<close> is a linearly independent generating set.\\<close>"], ["", "definition (in vectorspace) basis:: \"'c set \\<Rightarrow> bool\"\n  where \"basis A = ((lin_indpt A) \\<and> (gen_set A)\\<and> (A\\<subseteq>carrier V))\""], ["", "text \\<open>From the replacement theorem, any linearly independent set is smaller than any generating set.\\<close>"], ["", "lemma (in vectorspace) li_smaller_than_gen:\n  fixes A B\n  assumes h1: \"finite A\" and h2: \"finite B\" and h3: \"A\\<subseteq>carrier V\" and h4: \"B\\<subseteq>carrier V\" \n    and h5: \"lin_indpt A\" and h6: \"gen_set B\"\n  shows \"card A \\<le> card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A \\<le> card B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card A \\<le> card B", "from h3 h6"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  gen_set B", "have 1: \"A\\<subseteq>span B\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  gen_set B\n\ngoal (1 subgoal):\n 1. A \\<subseteq> span B", "by  auto"], ["proof (state)\nthis:\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. card A \\<le> card B", "from h1 h2 h4 h5 1"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B", "obtain C where \n    2: \"finite C \\<and> C\\<subseteq>carrier V \\<and> C\\<subseteq>span B \\<and> C\\<inter>A={} \\<and> int (card C) \\<le> int (card B) - int (card A) \\<and> (span (A \\<union> C) = span B)\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  B \\<subseteq> carrier V\n  lin_indpt A\n  A \\<subseteq> span B\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        finite C \\<and>\n        C \\<subseteq> carrier V \\<and>\n        C \\<subseteq> span B \\<and>\n        C \\<inter> A = {} \\<and>\n        int (card C) \\<le> int (card B) - int (card A) \\<and>\n        span (A \\<union> C) = span B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis replacement)"], ["proof (state)\nthis:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B\n\ngoal (1 subgoal):\n 1. card A \\<le> card B", "from 2"], ["proof (chain)\npicking this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B", "show ?thesis"], ["proof (prove)\nusing this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  span (A \\<union> C) = span B\n\ngoal (1 subgoal):\n 1. card A \\<le> card B", "by arith"], ["proof (state)\nthis:\n  card A \\<le> card B\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The dimension is the cardinality of any basis. (In particular, all bases are the same size.)\\<close>"], ["", "lemma (in vectorspace) dim_basis:\n  fixes A \n  assumes  fin: \"finite A\" and h2: \"basis A\"\n  shows \"dim = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim = card A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim = card A", "have 0: \"\\<And>B m. ((finite B) \\<and> (card B = m) \\<and> (B \\<subseteq> carrier V) \\<and> (gen_set B)) \\<Longrightarrow> card A \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B m.\n       finite B \\<and>\n       card B = m \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       card A \\<le> m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B m.\n       finite B \\<and>\n       card B = m \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       card A \\<le> m", "fix B m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B m.\n       finite B \\<and>\n       card B = m \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       card A \\<le> m", "assume 1: \"((finite B) \\<and> (card B = m) \\<and> (B \\<subseteq> carrier V) \\<and> (gen_set B))\""], ["proof (state)\nthis:\n  finite B \\<and> card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n\ngoal (1 subgoal):\n 1. \\<And>B m.\n       finite B \\<and>\n       card B = m \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       card A \\<le> m", "from 1 fin h2"], ["proof (chain)\npicking this:\n  finite B \\<and> card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  finite A\n  basis A", "have 2: \"card A \\<le> card B\""], ["proof (prove)\nusing this:\n  finite B \\<and> card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  finite A\n  basis A\n\ngoal (1 subgoal):\n 1. card A \\<le> card B", "apply (unfold basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> card A \\<le> card B", "apply (intro li_smaller_than_gen)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> finite B\n 3. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier V\n 4. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> carrier V\n 5. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> lin_indpt A\n 6. \\<lbrakk>finite B \\<and>\n             card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> gen_set B", "by auto"], ["proof (state)\nthis:\n  card A \\<le> card B\n\ngoal (1 subgoal):\n 1. \\<And>B m.\n       finite B \\<and>\n       card B = m \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       card A \\<le> m", "from 1 2"], ["proof (chain)\npicking this:\n  finite B \\<and> card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  card A \\<le> card B", "show \"?thesis B m\""], ["proof (prove)\nusing this:\n  finite B \\<and> card B = m \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  card A \\<le> card B\n\ngoal (1 subgoal):\n 1. card A \\<le> m", "by auto"], ["proof (state)\nthis:\n  card A \\<le> m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ?B1 \\<and>\n  card ?B1 = ?m1 \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  card A \\<le> ?m1\n\ngoal (1 subgoal):\n 1. dim = card A", "from fin h2 0"], ["proof (chain)\npicking this:\n  finite A\n  basis A\n  finite ?B1 \\<and>\n  card ?B1 = ?m1 \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  card A \\<le> ?m1", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  basis A\n  finite ?B1 \\<and>\n  card ?B1 = ?m1 \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  card A \\<le> ?m1\n\ngoal (1 subgoal):\n 1. dim = card A", "apply (unfold dim_def basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V;\n     \\<And>B m.\n        finite B \\<and>\n        card B = m \\<and>\n        B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n        card A \\<le> m\\<rbrakk>\n    \\<Longrightarrow> (LEAST n.\n                          \\<exists>A.\n                             finite A \\<and>\n                             card A = n \\<and>\n                             A \\<subseteq> carrier V \\<and> gen_set A) =\n                      card A", "apply (intro Least_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V;\n     \\<And>B m.\n        finite B \\<and>\n        card B = m \\<and>\n        B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n        card A \\<le> m\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Aa.\n                         finite Aa \\<and>\n                         card Aa = card A \\<and>\n                         Aa \\<subseteq> carrier V \\<and> gen_set Aa\n 2. \\<And>y.\n       \\<lbrakk>finite A;\n        lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V;\n        \\<And>B m.\n           finite B \\<and>\n           card B = m \\<and>\n           B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n           card A \\<le> m;\n        \\<exists>A.\n           finite A \\<and>\n           card A = y \\<and>\n           A \\<subseteq> carrier V \\<and> gen_set A\\<rbrakk>\n       \\<Longrightarrow> card A \\<le> y", "apply (rule_tac x=\"A\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A;\n     lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V;\n     \\<And>B m.\n        finite B \\<and>\n        card B = m \\<and>\n        B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n        card A \\<le> m\\<rbrakk>\n    \\<Longrightarrow> finite A \\<and>\n                      card A = card A \\<and>\n                      A \\<subseteq> carrier V \\<and> gen_set A\n 2. \\<And>y.\n       \\<lbrakk>finite A;\n        lin_indpt A \\<and> gen_set A \\<and> A \\<subseteq> carrier V;\n        \\<And>B m.\n           finite B \\<and>\n           card B = m \\<and>\n           B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n           card A \\<le> m;\n        \\<exists>A.\n           finite A \\<and>\n           card A = y \\<and>\n           A \\<subseteq> carrier V \\<and> gen_set A\\<rbrakk>\n       \\<Longrightarrow> card A \\<le> y", "by auto"], ["proof (state)\nthis:\n  dim = card A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*can define more generally with posets*)"], ["", "text \\<open>A \\<open>maximal\\<close> set with respect to $P$ is such that if $B\\supseteq A$ and $P$ is also \nsatisfied for $B$, then $B=A$.\\<close>"], ["", "definition maximal::\"'a set \\<Rightarrow> ('a set \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  where \"maximal A P = ((P A) \\<and> (\\<forall>B. B\\<supseteq>A \\<and> P B \\<longrightarrow> B = A))\""], ["", "text \\<open>A \\<open>minimal\\<close> set with respect to $P$ is such that if $B\\subseteq A$ and $P$ is also \nsatisfied for $B$, then $B=A$.\\<close>"], ["", "definition minimal::\"'a set \\<Rightarrow> ('a set \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  where \"minimal A P = ((P A) \\<and> (\\<forall>B. B\\<subseteq>A \\<and> P B \\<longrightarrow> B = A))\""], ["", "text \\<open>A maximal linearly independent set is a generating set.\\<close>"], ["", "lemma (in vectorspace) max_li_is_gen:\n  fixes A\n  assumes h1: \"maximal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> lin_indpt S)\"\n  shows \"gen_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen_set A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "assume 0: \"\\<not>(gen_set A)\""], ["proof (state)\nthis:\n  span A \\<noteq> carrier V\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from h1"], ["proof (chain)\npicking this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "have 1: \" A\\<subseteq> carrier V \\<and> lin_indpt A\""], ["proof (prove)\nusing this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V \\<and> lin_indpt A", "by (unfold maximal_def, auto)"], ["proof (state)\nthis:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from 1"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A", "have 2: \"span A \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> carrier V", "by (intro span_is_subset2, auto)"], ["proof (state)\nthis:\n  span A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from 0 1 2"], ["proof (chain)\npicking this:\n  span A \\<noteq> carrier V\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  span A \\<subseteq> carrier V", "have 3: \"\\<exists>v. v\\<in>carrier V \\<and> v \\<notin> (span A)\""], ["proof (prove)\nusing this:\n  span A \\<noteq> carrier V\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  span A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>v. v \\<in> carrier V \\<and> v \\<notin> span A", "by auto"], ["proof (state)\nthis:\n  \\<exists>v. v \\<in> carrier V \\<and> v \\<notin> span A\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from 3"], ["proof (chain)\npicking this:\n  \\<exists>v. v \\<in> carrier V \\<and> v \\<notin> span A", "obtain v where 4: \"v\\<in>carrier V \\<and> v \\<notin> (span A)\""], ["proof (prove)\nusing this:\n  \\<exists>v. v \\<in> carrier V \\<and> v \\<notin> span A\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v \\<in> carrier V \\<and> v \\<notin> span A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier V \\<and> v \\<notin> span A\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "have 5: \"v\\<notin>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<notin> A", "from h1 1"], ["proof (chain)\npicking this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  A \\<subseteq> carrier V \\<and> lin_indpt A", "have 51: \"A\\<subseteq>span A\""], ["proof (prove)\nusing this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> span A", "apply (intro in_own_span)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>maximal A\n              (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S);\n     A \\<subseteq> carrier V \\<and> lin_indpt A\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. v \\<notin> A", "from 4 51"], ["proof (chain)\npicking this:\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  A \\<subseteq> span A", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  A \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. v \\<notin> A", "by auto"], ["proof (state)\nthis:\n  v \\<notin> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<notin> A\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from lin_dep_iff_in_span"], ["proof (chain)\npicking this:\n  \\<lbrakk>?S \\<subseteq> carrier V; lin_indpt ?S; ?v \\<in> carrier V;\n   ?v \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> (?v \\<in> span ?S) = lin_dep (?S \\<union> {?v})", "have 6: \"\\<And>S v. S \\<subseteq> carrier V\\<and> lin_indpt S \\<and> v\\<in> carrier V \\<and> v\\<notin>S\n    \\<and> v\\<notin> span S \\<Longrightarrow>  (lin_indpt (S \\<union> {v}))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> carrier V; lin_indpt ?S; ?v \\<in> carrier V;\n   ?v \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> (?v \\<in> span ?S) = lin_dep (?S \\<union> {?v})\n\ngoal (1 subgoal):\n 1. \\<And>S v.\n       S \\<subseteq> carrier V \\<and>\n       lin_indpt S \\<and>\n       v \\<in> carrier V \\<and>\n       v \\<notin> S \\<and> v \\<notin> span S \\<Longrightarrow>\n       lin_indpt (S \\<union> {v})", "by auto"], ["proof (state)\nthis:\n  ?S1 \\<subseteq> carrier V \\<and>\n  lin_indpt ?S1 \\<and>\n  ?v1 \\<in> carrier V \\<and>\n  ?v1 \\<notin> ?S1 \\<and> ?v1 \\<notin> span ?S1 \\<Longrightarrow>\n  lin_indpt (?S1 \\<union> {?v1})\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from 1 4 5"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  v \\<notin> A", "have 7: \"lin_indpt (A \\<union> {v})\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  v \\<notin> A\n\ngoal (1 subgoal):\n 1. lin_indpt (A \\<union> {v})", "apply (intro 6)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> carrier V \\<and> lin_indpt A;\n     v \\<in> carrier V \\<and> v \\<notin> span A; v \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> carrier V \\<and>\n                      lin_indpt A \\<and>\n                      v \\<in> carrier V \\<and>\n                      v \\<notin> A \\<and> v \\<notin> span A", "by auto"], ["proof (state)\nthis:\n  lin_indpt (A \\<union> {v})\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "(*  assumes h0:\"finite S\" and h1: \"S \\<subseteq> carrier V\" and h2: \"lin_indpt S\" and h3: \"v\\<in> carrier V\" and h4: \"v\\<notin>S\"\n  shows \"v\\<in> span S \\<longleftrightarrow>  \\<not> (lin_indpt (S \\<union> {v}))\"*)"], ["proof (state)\nthis:\n  lin_indpt (A \\<union> {v})\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "have 9: \"\\<not>(maximal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> lin_indpt S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> maximal A\n            (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> maximal A\n            (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "from 1 4 5 7"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  v \\<notin> A\n  lin_indpt (A \\<union> {v})", "have 8: \"(\\<exists>B. A \\<subseteq> B  \\<and> B \\<subseteq> carrier V \\<and> lin_indpt B \\<and> B \\<noteq> A)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> lin_indpt A\n  v \\<in> carrier V \\<and> v \\<notin> span A\n  v \\<notin> A\n  lin_indpt (A \\<union> {v})\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       A \\<subseteq> B \\<and>\n       B \\<subseteq> carrier V \\<and> lin_indpt B \\<and> B \\<noteq> A", "apply (rule_tac x=\"A\\<union>{v}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> carrier V \\<and> lin_indpt A;\n     v \\<in> carrier V \\<and> v \\<notin> span A; v \\<notin> A;\n     lin_indpt (A \\<union> {v})\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> A \\<union> {v} \\<and>\n                      A \\<union> {v} \\<subseteq> carrier V \\<and>\n                      lin_indpt (A \\<union> {v}) \\<and>\n                      A \\<union> {v} \\<noteq> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>B.\n     A \\<subseteq> B \\<and>\n     B \\<subseteq> carrier V \\<and> lin_indpt B \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> maximal A\n            (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "from 8"], ["proof (chain)\npicking this:\n  \\<exists>B.\n     A \\<subseteq> B \\<and>\n     B \\<subseteq> carrier V \\<and> lin_indpt B \\<and> B \\<noteq> A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     A \\<subseteq> B \\<and>\n     B \\<subseteq> carrier V \\<and> lin_indpt B \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> maximal A\n            (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "apply (unfold maximal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       A \\<subseteq> B \\<and>\n       B \\<subseteq> carrier V \\<and>\n       lin_indpt B \\<and> B \\<noteq> A \\<Longrightarrow>\n    \\<not> ((A \\<subseteq> carrier V \\<and> lin_indpt A) \\<and>\n            (\\<forall>B.\n                A \\<subseteq> B \\<and>\n                B \\<subseteq> carrier V \\<and> lin_indpt B \\<longrightarrow>\n                B = A))", "by simp"], ["proof (state)\nthis:\n  \\<not> maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. span A \\<noteq> carrier V \\<Longrightarrow> False", "from h1 9"], ["proof (chain)\npicking this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  \\<not> maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "show False"], ["proof (prove)\nusing this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  \\<not> maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A minimal generating set is linearly independent.\\<close>"], ["", "lemma (in vectorspace) min_gen_is_li:\n  fixes A\n  assumes h1: \"minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\"\n  shows \"lin_indpt A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "assume 0: \"\\<not>lin_indpt A\""], ["proof (state)\nthis:\n  \\<not> lin_indpt A\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from h1"], ["proof (chain)\npicking this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "have 1: \" A\\<subseteq> carrier V \\<and> gen_set A\""], ["proof (prove)\nusing this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V \\<and> gen_set A", "by (unfold minimal_def, auto)"], ["proof (state)\nthis:\n  A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from 1"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> gen_set A", "have 2: \"span A = carrier V\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. gen_set A", "by auto"], ["proof (state)\nthis:\n  gen_set A\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from 0 1"], ["proof (chain)\npicking this:\n  \\<not> lin_indpt A\n  A \\<subseteq> carrier V \\<and> gen_set A", "obtain a v A' where \n    3: \"finite A' \\<and> A'\\<subseteq>A \\<and> a \\<in> A' \\<rightarrow> carrier K \\<and> LinearCombinations.module.lincomb V a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and> v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> lin_indpt A\n  A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. (\\<And>A' a v.\n        finite A' \\<and>\n        A' \\<subseteq> A \\<and>\n        a \\<in> A' \\<rightarrow> carrier K \\<and>\n        lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n        v \\<in> A' \\<and>\n        a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold lin_dep_def, auto)"], ["proof (state)\nthis:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "have 4: \"gen_set (A-{v})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 1 3"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 5: \"v\\<in>span (A'-{v})\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. v \\<in> span (A' - {v})", "apply (intro lincomb_isolate[where a=\"a\" and v=\"v\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> finite A'\n 2. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> A' \\<subseteq> carrier V\n 3. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> a \\<in> A' \\<rightarrow> carrier K\n 4. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> v \\<in> A'\n 5. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n 6. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> lincomb a A' = \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  v \\<in> span (A' - {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 3 5"], ["proof (chain)\npicking this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v \\<in> span (A' - {v})", "have 51: \"v\\<in>span (A-{v})\""], ["proof (prove)\nusing this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v \\<in> span (A' - {v})\n\ngoal (1 subgoal):\n 1. v \\<in> span (A - {v})", "apply (intro subsetD[where ?A=\"span (A'-{v})\" and ?B=\"span (A-{v})\" and ?c=\"v\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier K \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<in> span (A' - {v})\\<rbrakk>\n    \\<Longrightarrow> span (A' - {v}) \\<subseteq> span (A - {v})\n 2. \\<lbrakk>finite A' \\<and>\n             A' \\<subseteq> A \\<and>\n             a \\<in> A' \\<rightarrow> carrier K \\<and>\n             lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n             v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     v \\<in> span (A' - {v})\\<rbrakk>\n    \\<Longrightarrow> v \\<in> span (A' - {v})", "by (intro span_is_monotone, auto)"], ["proof (state)\nthis:\n  v \\<in> span (A - {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 1"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> gen_set A", "have 6: \"A\\<subseteq>span A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> span A", "apply (intro in_own_span)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V \\<and> gen_set A \\<Longrightarrow>\n    A \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 1 51"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  v \\<in> span (A - {v})", "have 7: \"span (A-{v}) = span ((A-{v})\\<union>{v})\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  v \\<in> span (A - {v})\n\ngoal (1 subgoal):\n 1. span (A - {v}) = span (A - {v} \\<union> {v})", "apply (intro already_in_span)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     v \\<in> span (A - {v})\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<subseteq> carrier V\n 2. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     v \\<in> span (A - {v})\\<rbrakk>\n    \\<Longrightarrow> v \\<in> span (A - {v})", "by auto"], ["proof (state)\nthis:\n  span (A - {v}) = span (A - {v} \\<union> {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 3"], ["proof (chain)\npicking this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "have 8: \"A =  ((A-{v})\\<union>{v})\""], ["proof (prove)\nusing this:\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. A = A - {v} \\<union> {v}", "by auto"], ["proof (state)\nthis:\n  A = A - {v} \\<union> {v}\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 2 7 8"], ["proof (chain)\npicking this:\n  gen_set A\n  span (A - {v}) = span (A - {v} \\<union> {v})\n  A = A - {v} \\<union> {v}", "have 9:\"span (A-{v}) = carrier V\""], ["proof (prove)\nusing this:\n  gen_set A\n  span (A - {v}) = span (A - {v} \\<union> {v})\n  A = A - {v} \\<union> {v}\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "by auto"], ["proof (state)\nthis:\n  gen_set (A - {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "(*can't use 3 directly :( *)"], ["proof (state)\nthis:\n  gen_set (A - {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "from 9"], ["proof (chain)\npicking this:\n  gen_set (A - {v})", "show ?thesis"], ["proof (prove)\nusing this:\n  gen_set (A - {v})\n\ngoal (1 subgoal):\n 1. gen_set (A - {v})", "by auto"], ["proof (state)\nthis:\n  gen_set (A - {v})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gen_set (A - {v})\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "have 10: \"\\<not>(minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "from 1 3 4"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  gen_set (A - {v})", "have 11: \"(\\<exists>B. A \\<supseteq> B \\<and> B \\<subseteq> carrier V \\<and> gen_set B \\<and> B \\<noteq> A)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V \\<and> gen_set A\n  finite A' \\<and>\n  A' \\<subseteq> A \\<and>\n  a \\<in> A' \\<rightarrow> carrier K \\<and>\n  lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n  v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  gen_set (A - {v})\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       B \\<subseteq> carrier V \\<and> gen_set B \\<and> B \\<noteq> A", "apply (rule_tac x=\"A-{v}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> carrier V \\<and> gen_set A;\n     finite A' \\<and>\n     A' \\<subseteq> A \\<and>\n     a \\<in> A' \\<rightarrow> carrier K \\<and>\n     lincomb a A' = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A' \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     gen_set (A - {v})\\<rbrakk>\n    \\<Longrightarrow> A - {v} \\<subseteq> A \\<and>\n                      A - {v} \\<subseteq> carrier V \\<and>\n                      gen_set (A - {v}) \\<and> A - {v} \\<noteq> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A.\n     B \\<subseteq> carrier V \\<and> gen_set B \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "from 11"], ["proof (chain)\npicking this:\n  \\<exists>B\\<subseteq>A.\n     B \\<subseteq> carrier V \\<and> gen_set B \\<and> B \\<noteq> A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>B\\<subseteq>A.\n     B \\<subseteq> carrier V \\<and> gen_set B \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A.\n       B \\<subseteq> carrier V \\<and>\n       gen_set B \\<and> B \\<noteq> A \\<Longrightarrow>\n    \\<not> ((A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n            (\\<forall>B.\n                B \\<subseteq> A \\<and>\n                B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n                B = A))", "by auto"], ["proof (state)\nthis:\n  \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. \\<not> lin_indpt A \\<Longrightarrow> False", "from h1 10"], ["proof (chain)\npicking this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n  \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "show False"], ["proof (prove)\nusing this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n  \\<not> minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Given that some finite set satisfies $P$, there is a minimal set that satisfies $P$.\\<close>"], ["", "lemma minimal_exists:\n  fixes A P\n  assumes h1: \"finite A\" and h2: \"P A\"\n  shows \"\\<exists>B. B\\<subseteq>A \\<and> minimal B P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "using h1 h2"], ["proof (prove)\nusing this:\n  finite A\n  P A\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "proof (induct \"card A\"  arbitrary: A rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>Aa.\n                   \\<lbrakk>card Aa < card A; finite Aa; P Aa\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B\\<subseteq>Aa. minimal B P;\n        finite A; P A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "case (less A)"], ["proof (state)\nthis:\n  \\<lbrakk>card ?A < card A; finite ?A; P ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>?A. minimal B P\n  finite A\n  P A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>Aa.\n                   \\<lbrakk>card Aa < card A; finite Aa; P Aa\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B\\<subseteq>Aa. minimal B P;\n        finite A; P A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "proof (cases \"card A = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. card A = 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P\n 2. card A \\<noteq> 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "case True"], ["proof (state)\nthis:\n  card A = 0\n\ngoal (2 subgoals):\n 1. card A = 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P\n 2. card A \\<noteq> 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from True less.hyps less.prems"], ["proof (chain)\npicking this:\n  card A = 0\n  \\<lbrakk>card ?A < card A; finite ?A; P ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>?A. minimal B P\n  finite A\n  P A", "show ?thesis"], ["proof (prove)\nusing this:\n  card A = 0\n  \\<lbrakk>card ?A < card A; finite ?A; P ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>?A. minimal B P\n  finite A\n  P A\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "apply (rule_tac x=\"{}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>card A = 0;\n     \\<And>A.\n        \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P;\n     finite A; P A\\<rbrakk>\n    \\<Longrightarrow> {} \\<subseteq> A \\<and> minimal {} P", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>card A = 0;\n     \\<And>A.\n        \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>B\\<subseteq>A.\n                             P B \\<and>\n                             (\\<forall>Ba.\n                                 Ba \\<subseteq> B \\<and>\n                                 P Ba \\<longrightarrow>\n                                 Ba = B);\n     finite A; P A\\<rbrakk>\n    \\<Longrightarrow> {} \\<subseteq> A \\<and>\n                      P {} \\<and>\n                      (\\<forall>B.\n                          B \\<subseteq> {} \\<and> P B \\<longrightarrow>\n                          B = {})", "by  auto"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. minimal B P\n\ngoal (1 subgoal):\n 1. card A \\<noteq> 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card A \\<noteq> 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "case False"], ["proof (state)\nthis:\n  card A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card A \\<noteq> 0 \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "proof (cases \"minimal A P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P\n 2. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "case True"], ["proof (state)\nthis:\n  minimal A P\n\ngoal (2 subgoals):\n 1. minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P\n 2. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "then"], ["proof (chain)\npicking this:\n  minimal A P", "show ?thesis"], ["proof (prove)\nusing this:\n  minimal A P\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "apply (rule_tac x=\"A\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. minimal A P \\<Longrightarrow> A \\<subseteq> A \\<and> minimal A P", "by auto"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. minimal B P\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "case False"], ["proof (state)\nthis:\n  \\<not> minimal A P\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "have 2: \"\\<not>minimal A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> minimal A P", "by fact"], ["proof (state)\nthis:\n  \\<not> minimal A P\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from less.prems 2"], ["proof (chain)\npicking this:\n  finite A\n  P A\n  \\<not> minimal A P", "have 3: \"\\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B\\<noteq>A\""], ["proof (prove)\nusing this:\n  finite A\n  P A\n  \\<not> minimal A P\n\ngoal (1 subgoal):\n 1. \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; P A;\n     \\<not> (P A \\<and>\n             (\\<forall>B.\n                 B \\<subseteq> A \\<and> P B \\<longrightarrow>\n                 B = A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B.\n                         P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from 3"], ["proof (chain)\npicking this:\n  \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A", "obtain B where 4: \"P B \\<and> B \\<subset> A \\<and> B\\<noteq>A\""], ["proof (prove)\nusing this:\n  \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        P B \\<and> B \\<subset> A \\<and> B \\<noteq> A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from 4"], ["proof (chain)\npicking this:\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A", "have 5: \"card B < card A\""], ["proof (prove)\nusing this:\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n\ngoal (1 subgoal):\n 1. card B < card A", "by (metis less.prems(1) psubset_card_mono)"], ["proof (state)\nthis:\n  card B < card A\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from less.hyps less.prems 3 4 5"], ["proof (chain)\npicking this:\n  \\<lbrakk>card ?A < card A; finite ?A; P ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>?A. minimal B P\n  finite A\n  P A\n  \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n  card B < card A", "have 6: \"\\<exists>C\\<subseteq>B. minimal C P\""], ["proof (prove)\nusing this:\n  \\<lbrakk>card ?A < card A; finite ?A; P ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B\\<subseteq>?A. minimal B P\n  finite A\n  P A\n  \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n  card B < card A\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<subseteq>B. minimal C P", "apply (intro less.hyps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n                \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P;\n     finite A; P A;\n     \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A;\n     P B \\<and> B \\<subset> A \\<and> B \\<noteq> A; card B < card A\\<rbrakk>\n    \\<Longrightarrow> card B < card A\n 2. \\<lbrakk>\\<And>A.\n                \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n                \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P;\n     finite A; P A;\n     \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A;\n     P B \\<and> B \\<subset> A \\<and> B \\<noteq> A; card B < card A\\<rbrakk>\n    \\<Longrightarrow> finite B\n 3. \\<lbrakk>\\<And>A.\n                \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n                \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P;\n     finite A; P A;\n     \\<exists>B. P B \\<and> B \\<subseteq> A \\<and> B \\<noteq> A;\n     P B \\<and> B \\<subset> A \\<and> B \\<noteq> A; card B < card A\\<rbrakk>\n    \\<Longrightarrow> P B", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ba x xa xb.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>card A < card A; finite A; P A\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P;\n        finite A; P A; 0 < card A; P B; P Ba; B \\<subseteq> A; infinite B;\n        x \\<in> A; Ba \\<subseteq> A; x \\<notin> B; xa \\<in> A;\n        xa \\<notin> B; xb \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xb \\<in> Ba", "by (metis rev_finite_subset)"], ["proof (state)\nthis:\n  \\<exists>C\\<subseteq>B. minimal C P\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from 6"], ["proof (chain)\npicking this:\n  \\<exists>C\\<subseteq>B. minimal C P", "obtain C where 7: \"C\\<subseteq>B \\<and> minimal C P\""], ["proof (prove)\nusing this:\n  \\<exists>C\\<subseteq>B. minimal C P\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        C \\<subseteq> B \\<and> minimal C P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<subseteq> B \\<and> minimal C P\n\ngoal (1 subgoal):\n 1. \\<not> minimal A P \\<Longrightarrow> \\<exists>B\\<subseteq>A. minimal B P", "from 4 7"], ["proof (chain)\npicking this:\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n  C \\<subseteq> B \\<and> minimal C P", "show ?thesis"], ["proof (prove)\nusing this:\n  P B \\<and> B \\<subset> A \\<and> B \\<noteq> A\n  C \\<subseteq> B \\<and> minimal C P\n\ngoal (1 subgoal):\n 1. \\<exists>B\\<subseteq>A. minimal B P", "apply (rule_tac x=\"C\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P B \\<and> B \\<subset> A \\<and> B \\<noteq> A;\n     C \\<subseteq> B \\<and> minimal C P\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> A \\<and> minimal C P", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P B \\<and> B \\<subset> A \\<and> B \\<noteq> A;\n     C \\<subseteq> B \\<and>\n     P C \\<and>\n     (\\<forall>B.\n         B \\<subseteq> C \\<and> P B \\<longrightarrow> B = C)\\<rbrakk>\n    \\<Longrightarrow> C \\<subseteq> A \\<and>\n                      P C \\<and>\n                      (\\<forall>B.\n                          B \\<subseteq> C \\<and> P B \\<longrightarrow>\n                          B = C)", "by auto"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. minimal B P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. minimal B P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>B\\<subseteq>A. minimal B P\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $V$ is finite-dimensional, then any linearly independent set is finite.\\<close>"], ["", "lemma (in vectorspace) fin_dim_li_fin:\n  assumes fd: \"fin_dim\" and li: \"lin_indpt A\" and inC: \"A\\<subseteq>carrier V\"\n  shows fin: \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "assume A: \"\\<not>finite A\""], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "from fd"], ["proof (chain)\npicking this:\n  fin_dim", "obtain C where C: \"finite C \\<and> C\\<subseteq>carrier V \\<and> gen_set C\""], ["proof (prove)\nusing this:\n  fin_dim\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        finite C \\<and>\n        C \\<subseteq> carrier V \\<and> gen_set C \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold fin_dim_def, auto)"], ["proof (state)\nthis:\n  finite C \\<and> C \\<subseteq> carrier V \\<and> gen_set C\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "from A"], ["proof (chain)\npicking this:\n  infinite A", "obtain B where B: \"B\\<subseteq>A\\<and> finite B \\<and> card B = card C + 1\""], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        B \\<subseteq> A \\<and>\n        finite B \\<and> card B = card C + 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis infinite_arbitrarily_large)"], ["proof (state)\nthis:\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "from B li"], ["proof (chain)\npicking this:\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n  lin_indpt A", "have liB: \"lin_indpt B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. lin_indpt B", "by (intro subset_li_is_li[where ?A=\"A\" and ?B=\"B\"], auto)"], ["proof (state)\nthis:\n  lin_indpt B\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "from B C liB inC"], ["proof (chain)\npicking this:\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n  finite C \\<and> C \\<subseteq> carrier V \\<and> gen_set C\n  lin_indpt B\n  A \\<subseteq> carrier V", "have \"card B \\<le> card C\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n  finite C \\<and> C \\<subseteq> carrier V \\<and> gen_set C\n  lin_indpt B\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. card B \\<le> card C", "by (intro li_smaller_than_gen, auto)"], ["proof (state)\nthis:\n  card B \\<le> card C\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> False", "from this B"], ["proof (chain)\npicking this:\n  card B \\<le> card C\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1", "show False"], ["proof (prove)\nusing this:\n  card B \\<le> card C\n  B \\<subseteq> A \\<and> finite B \\<and> card B = card C + 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If $V$ is finite-dimensional (has a finite generating set), then a finite basis exists.\\<close>"], ["", "lemma (in vectorspace) finite_basis_exists:\n  assumes h1: \"fin_dim\"\n  shows \"\\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "from h1"], ["proof (chain)\npicking this:\n  fin_dim", "obtain A where 1: \"finite A \\<and> A\\<subseteq>carrier V \\<and> gen_set A\""], ["proof (prove)\nusing this:\n  fin_dim\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        finite A \\<and>\n        A \\<subseteq> carrier V \\<and> gen_set A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis fin_dim_def)"], ["proof (state)\nthis:\n  finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "hence 2: \"\\<exists>\\<beta>. \\<beta>\\<subseteq>A \\<and> minimal \\<beta> (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\""], ["proof (prove)\nusing this:\n  finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>\\<subseteq>A.\n       minimal \\<beta>\n        (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "apply (intro minimal_exists)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite A \\<and>\n    A \\<subseteq> carrier V \\<and> gen_set A \\<Longrightarrow>\n    finite A\n 2. finite A \\<and>\n    A \\<subseteq> carrier V \\<and> gen_set A \\<Longrightarrow>\n    A \\<subseteq> carrier V \\<and> gen_set A", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<beta>\\<subseteq>A.\n     minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<beta>\\<subseteq>A.\n     minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "obtain \\<beta> where 3: \"\\<beta>\\<subseteq>A \\<and> minimal \\<beta> (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\""], ["proof (prove)\nusing this:\n  \\<exists>\\<beta>\\<subseteq>A.\n     minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<beta>.\n        \\<beta> \\<subseteq> A \\<and>\n        minimal \\<beta>\n         (\\<lambda>S.\n             S \\<subseteq> carrier V \\<and> gen_set S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "hence 4: \"lin_indpt \\<beta>\""], ["proof (prove)\nusing this:\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. lin_indpt \\<beta>", "apply (intro min_gen_is_li)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<subseteq> A \\<and>\n    minimal \\<beta>\n     (\\<lambda>S.\n         S \\<subseteq> carrier V \\<and> gen_set S) \\<Longrightarrow>\n    minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "by auto"], ["proof (state)\nthis:\n  lin_indpt \\<beta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "moreover"], ["proof (state)\nthis:\n  lin_indpt \\<beta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "from 3"], ["proof (chain)\npicking this:\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "have 5: \"gen_set \\<beta> \\<and> \\<beta>\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<subseteq> A \\<and>\n    (\\<beta> \\<subseteq> carrier V \\<and> gen_set \\<beta>) \\<and>\n    (\\<forall>B.\n        B \\<subseteq> \\<beta> \\<and>\n        B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n        B = \\<beta>) \\<Longrightarrow>\n    gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "moreover"], ["proof (state)\nthis:\n  gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "from 1 3"], ["proof (chain)\npicking this:\n  finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "have 6: \"finite \\<beta>\""], ["proof (prove)\nusing this:\n  finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A\n  \\<beta> \\<subseteq> A \\<and>\n  minimal \\<beta> (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. finite \\<beta>", "by (auto simp add: finite_subset)"], ["proof (state)\nthis:\n  finite \\<beta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "ultimately"], ["proof (chain)\npicking this:\n  lin_indpt \\<beta>\n  gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V\n  finite \\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  lin_indpt \\<beta>\n  gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V\n  finite \\<beta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>", "apply (unfold basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lin_indpt \\<beta>;\n     gen_set \\<beta> \\<and> \\<beta> \\<subseteq> carrier V;\n     finite \\<beta>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<beta>.\n                         finite \\<beta> \\<and>\n                         lin_indpt \\<beta> \\<and>\n                         gen_set \\<beta> \\<and>\n                         \\<beta> \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<beta>. finite \\<beta> \\<and> basis \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\nThe proof is as follows.\n\\begin{enumerate}\n\\item Because $V$ is finite-dimensional, there is a finite generating set \n(we took this as our definition of finite-dimensional).\n\\item Hence, there is a minimal $\\beta \\subseteq A$ such that $\\beta$ generates $V$.\n\\item $\\beta$ is linearly independent because a minimal generating set is linearly independent.\n\\end{enumerate}\nFinally, $\\beta$ is a basis because it is both generating and linearly independent.\n\\<close>"], ["", "text \\<open>Any linearly independent set has cardinality at most equal to the dimension.\\<close>"], ["", "lemma (in vectorspace) li_le_dim: \n  fixes A\n  assumes fd: \"fin_dim\" and c: \"A\\<subseteq>carrier V\" and l: \"lin_indpt A\"\n  shows \"finite A\" \"card A \\<le> dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A &&& card A \\<le> dim", "proof  -"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A\n 2. card A \\<le> dim", "from fd c l"], ["proof (chain)\npicking this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A", "show fa: \"finite A\""], ["proof (prove)\nusing this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. finite A", "by (intro fin_dim_li_fin, auto)"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. card A \\<le> dim", "from fd"], ["proof (chain)\npicking this:\n  fin_dim", "obtain \\<beta> where 1: \"finite \\<beta> \\<and> basis \\<beta>\""], ["proof (prove)\nusing this:\n  fin_dim\n\ngoal (1 subgoal):\n 1. (\\<And>\\<beta>.\n        finite \\<beta> \\<and> basis \\<beta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_basis_exists)"], ["proof (state)\nthis:\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. card A \\<le> dim", "from assms fa 1"], ["proof (chain)\npicking this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A\n  finite A\n  finite \\<beta> \\<and> basis \\<beta>", "have 2: \"card A \\<le> card \\<beta>\""], ["proof (prove)\nusing this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A\n  finite A\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. card A \\<le> card \\<beta>", "apply (intro li_smaller_than_gen, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>fin_dim; A \\<subseteq> carrier V; lin_indpt A; finite A;\n        x \\<in> \\<beta>; finite \\<beta>; basis \\<beta>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier V\n 2. \\<And>x.\n       \\<lbrakk>fin_dim; A \\<subseteq> carrier V; lin_indpt A; finite A;\n        finite \\<beta>; basis \\<beta>; x \\<in> span \\<beta>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier V\n 3. \\<And>x.\n       \\<lbrakk>fin_dim; A \\<subseteq> carrier V; lin_indpt A; finite A;\n        finite \\<beta>; basis \\<beta>; x \\<in> carrier V\\<rbrakk>\n       \\<Longrightarrow> x \\<in> span \\<beta>", "by (unfold basis_def, auto)"], ["proof (state)\nthis:\n  card A \\<le> card \\<beta>\n\ngoal (1 subgoal):\n 1. card A \\<le> dim", "from assms 1"], ["proof (chain)\npicking this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A\n  finite \\<beta> \\<and> basis \\<beta>", "have 3: \"dim = card \\<beta>\""], ["proof (prove)\nusing this:\n  fin_dim\n  A \\<subseteq> carrier V\n  lin_indpt A\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. dim = card \\<beta>", "by (intro dim_basis, auto)"], ["proof (state)\nthis:\n  dim = card \\<beta>\n\ngoal (1 subgoal):\n 1. card A \\<le> dim", "from 2 3"], ["proof (chain)\npicking this:\n  card A \\<le> card \\<beta>\n  dim = card \\<beta>", "show \"card A \\<le> dim\""], ["proof (prove)\nusing this:\n  card A \\<le> card \\<beta>\n  dim = card \\<beta>\n\ngoal (1 subgoal):\n 1. card A \\<le> dim", "by auto"], ["proof (state)\nthis:\n  card A \\<le> dim\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any generating set has cardinality at least equal to the dimension.\\<close>"], ["", "lemma (in vectorspace) gen_ge_dim: \n  fixes A\n  assumes fa: \"finite A\" and c: \"A\\<subseteq>carrier V\" and l: \"gen_set A\"\n  shows \"card A \\<ge> dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim \\<le> card A", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim \\<le> card A", "from assms"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A", "have fd: \"fin_dim\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n\ngoal (1 subgoal):\n 1. fin_dim", "by (unfold fin_dim_def, auto)"], ["proof (state)\nthis:\n  fin_dim\n\ngoal (1 subgoal):\n 1. dim \\<le> card A", "from fd"], ["proof (chain)\npicking this:\n  fin_dim", "obtain \\<beta> where 1: \"finite \\<beta> \\<and> basis \\<beta>\""], ["proof (prove)\nusing this:\n  fin_dim\n\ngoal (1 subgoal):\n 1. (\\<And>\\<beta>.\n        finite \\<beta> \\<and> basis \\<beta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_basis_exists)"], ["proof (state)\nthis:\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. dim \\<le> card A", "from assms 1"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  finite \\<beta> \\<and> basis \\<beta>", "have 2: \"card A \\<ge> card \\<beta>\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. card \\<beta> \\<le> card A", "apply (intro li_smaller_than_gen, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>finite A; A \\<subseteq> carrier V; gen_set A;\n        x \\<in> \\<beta>; finite \\<beta>; basis \\<beta>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier V\n 2. \\<lbrakk>finite A; A \\<subseteq> carrier V; gen_set A; finite \\<beta>;\n     basis \\<beta>; lin_dep \\<beta>\\<rbrakk>\n    \\<Longrightarrow> False", "by (unfold basis_def, auto)"], ["proof (state)\nthis:\n  card \\<beta> \\<le> card A\n\ngoal (1 subgoal):\n 1. dim \\<le> card A", "from assms 1"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  finite \\<beta> \\<and> basis \\<beta>", "have 3: \"dim = card \\<beta>\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  finite \\<beta> \\<and> basis \\<beta>\n\ngoal (1 subgoal):\n 1. dim = card \\<beta>", "by (intro dim_basis, auto)"], ["proof (state)\nthis:\n  dim = card \\<beta>\n\ngoal (1 subgoal):\n 1. dim \\<le> card A", "from 2 3"], ["proof (chain)\npicking this:\n  card \\<beta> \\<le> card A\n  dim = card \\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  card \\<beta> \\<le> card A\n  dim = card \\<beta>\n\ngoal (1 subgoal):\n 1. dim \\<le> card A", "by auto"], ["proof (state)\nthis:\n  dim \\<le> card A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If there is an upper bound on the cardinality of sets satisfying $P$, then there is a maximal\nset satisfying $P$.\\<close>"], ["", "lemma maximal_exists:\n  fixes P B N\n  assumes maxc: \"\\<And>A. P A \\<Longrightarrow> finite A \\<and> (card A \\<le>N)\" and b: \"P B\"\n  shows \"\\<exists>A. finite A \\<and> maximal A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "(*take the maximal*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "let ?S=\"{card A| A. P A}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "let ?n=\"Max ?S\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from maxc"], ["proof (chain)\npicking this:\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N", "have 1:\"finite ?S\""], ["proof (prove)\nusing this:\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N\n\ngoal (1 subgoal):\n 1. finite {card A |A. P A}", "apply (simp add: finite_nat_set_iff_bounded_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        P A \\<Longrightarrow>\n        finite A \\<and> card A \\<le> N) \\<Longrightarrow>\n    \\<exists>m.\n       \\<forall>n.\n          (\\<exists>A. n = card A \\<and> P A) \\<longrightarrow> n \\<le> m", "by auto"], ["proof (state)\nthis:\n  finite {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from 1"], ["proof (chain)\npicking this:\n  finite {card A |A. P A}", "have 2: \"?n\\<in>?S\""], ["proof (prove)\nusing this:\n  finite {card A |A. P A}\n\ngoal (1 subgoal):\n 1. Max {card A |A. P A} \\<in> {card A |A. P A}", "by (metis (mono_tags, lifting) Collect_empty_eq Max_in b)"], ["proof (state)\nthis:\n  Max {card A |A. P A} \\<in> {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from assms 2"], ["proof (chain)\npicking this:\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N\n  P B\n  Max {card A |A. P A} \\<in> {card A |A. P A}", "have 3: \"\\<exists>A. P A \\<and> finite A \\<and> card A = ?n\""], ["proof (prove)\nusing this:\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N\n  P B\n  Max {card A |A. P A} \\<in> {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. P A \\<and> finite A \\<and> card A = Max {card A |A. P A}", "by auto"], ["proof (state)\nthis:\n  \\<exists>A. P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from 3"], ["proof (chain)\npicking this:\n  \\<exists>A. P A \\<and> finite A \\<and> card A = Max {card A |A. P A}", "obtain A where 4: \"P A \\<and> finite A \\<and> card A = ?n\""], ["proof (prove)\nusing this:\n  \\<exists>A. P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        P A \\<and>\n        finite A \\<and> card A = Max {card A |A. P A} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from 1 maxc"], ["proof (chain)\npicking this:\n  finite {card A |A. P A}\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N", "have 5: \"\\<And>A. P A \\<Longrightarrow> finite A \\<and> (card A \\<le>?n)\""], ["proof (prove)\nusing this:\n  finite {card A |A. P A}\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       P A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> Max {card A |A. P A}", "by (metis (mono_tags, lifting) Max.coboundedI mem_Collect_eq)"], ["proof (state)\nthis:\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> Max {card A |A. P A}\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from 4 5"], ["proof (chain)\npicking this:\n  P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> Max {card A |A. P A}", "have 6: \"maximal A P\""], ["proof (prove)\nusing this:\n  P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n  P ?A \\<Longrightarrow> finite ?A \\<and> card ?A \\<le> Max {card A |A. P A}\n\ngoal (1 subgoal):\n 1. maximal A P", "apply (unfold maximal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P A \\<and> finite A \\<and> card A = Max {card A |A. P A};\n     \\<And>A.\n        P A \\<Longrightarrow>\n        finite A \\<and> card A \\<le> Max {card A |A. P A}\\<rbrakk>\n    \\<Longrightarrow> P A \\<and>\n                      (\\<forall>B.\n                          A \\<subseteq> B \\<and> P B \\<longrightarrow>\n                          B = A)", "by (metis card_seteq)"], ["proof (state)\nthis:\n  maximal A P\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "from 4 6"], ["proof (chain)\npicking this:\n  P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n  maximal A P", "show ?thesis"], ["proof (prove)\nusing this:\n  P A \\<and> finite A \\<and> card A = Max {card A |A. P A}\n  maximal A P\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P", "by auto"], ["proof (state)\nthis:\n  \\<exists>A. finite A \\<and> maximal A P\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any maximal linearly independent set is a basis.\\<close>"], ["", "lemma (in vectorspace) max_li_is_basis:\n  fixes A\n  assumes h1: \"maximal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> lin_indpt S)\"\n  shows \"basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis A", "from h1"], ["proof (chain)\npicking this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "have 1: \"gen_set A\""], ["proof (prove)\nusing this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. gen_set A", "by (rule max_li_is_gen)"], ["proof (state)\nthis:\n  gen_set A\n\ngoal (1 subgoal):\n 1. basis A", "from assms 1"], ["proof (chain)\npicking this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  gen_set A", "show ?thesis"], ["proof (prove)\nusing this:\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n  gen_set A\n\ngoal (1 subgoal):\n 1. basis A", "by (unfold basis_def maximal_def, auto)"], ["proof (state)\nthis:\n  basis A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any minimal linearly independent set is a generating set.\\<close>"], ["", "lemma (in vectorspace) min_gen_is_basis:\n  fixes A\n  assumes h1: \"minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\"\n  shows \"basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis A", "from h1"], ["proof (chain)\npicking this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "have 1: \"lin_indpt A\""], ["proof (prove)\nusing this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. lin_indpt A", "by (rule min_gen_is_li)"], ["proof (state)\nthis:\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. basis A", "from assms 1"], ["proof (chain)\npicking this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n  lin_indpt A", "show ?thesis"], ["proof (prove)\nusing this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. basis A", "by (unfold basis_def minimal_def, auto)"], ["proof (state)\nthis:\n  basis A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any linearly independent set with cardinality at least the dimension is a basis.\\<close>"], ["", "lemma (in vectorspace) dim_li_is_basis:\n  fixes A\n  assumes fd: \"fin_dim\" and fa: \"finite A\" and ca: \"A\\<subseteq>carrier V\" and li: \"lin_indpt A\" \n    and d: \"card A \\<ge> dim\" (*\\<ge>*)\n  shows \"basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis A", "from fd"], ["proof (chain)\npicking this:\n  fin_dim", "have 0: \"\\<And>S. S\\<subseteq>carrier V \\<and> lin_indpt S \\<Longrightarrow> finite S \\<and> card S \\<le>dim\""], ["proof (prove)\nusing this:\n  fin_dim\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       S \\<subseteq> carrier V \\<and> lin_indpt S \\<Longrightarrow>\n       finite S \\<and> card S \\<le> dim", "by (auto intro: li_le_dim)"], ["proof (state)\nthis:\n  ?S1 \\<subseteq> carrier V \\<and> lin_indpt ?S1 \\<Longrightarrow>\n  finite ?S1 \\<and> card ?S1 \\<le> dim\n\ngoal (1 subgoal):\n 1. basis A", "(*fin_dim_li_fin*)"], ["proof (state)\nthis:\n  ?S1 \\<subseteq> carrier V \\<and> lin_indpt ?S1 \\<Longrightarrow>\n  finite ?S1 \\<and> card ?S1 \\<le> dim\n\ngoal (1 subgoal):\n 1. basis A", "from 0 assms"], ["proof (chain)\npicking this:\n  ?S1 \\<subseteq> carrier V \\<and> lin_indpt ?S1 \\<Longrightarrow>\n  finite ?S1 \\<and> card ?S1 \\<le> dim\n  fin_dim\n  finite A\n  A \\<subseteq> carrier V\n  lin_indpt A\n  dim \\<le> card A", "have h1:  \"finite A \\<and> maximal A (\\<lambda>S.  S\\<subseteq>carrier V \\<and> lin_indpt S)\""], ["proof (prove)\nusing this:\n  ?S1 \\<subseteq> carrier V \\<and> lin_indpt ?S1 \\<Longrightarrow>\n  finite ?S1 \\<and> card ?S1 \\<le> dim\n  fin_dim\n  finite A\n  A \\<subseteq> carrier V\n  lin_indpt A\n  dim \\<le> card A\n\ngoal (1 subgoal):\n 1. finite A \\<and>\n    maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "apply (unfold maximal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>S.\n                S \\<subseteq> carrier V \\<and> lin_indpt S \\<Longrightarrow>\n                finite S \\<and> card S \\<le> dim;\n     fin_dim; finite A; A \\<subseteq> carrier V; lin_indpt A;\n     dim \\<le> card A\\<rbrakk>\n    \\<Longrightarrow> finite A \\<and>\n                      (A \\<subseteq> carrier V \\<and> lin_indpt A) \\<and>\n                      (\\<forall>B.\n                          A \\<subseteq> B \\<and>\n                          B \\<subseteq> carrier V \\<and>\n                          lin_indpt B \\<longrightarrow>\n                          B = A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B x.\n       \\<lbrakk>\\<And>S.\n                   S \\<subseteq> carrier V \\<and>\n                   lin_indpt S \\<Longrightarrow>\n                   finite S \\<and> card S \\<le> dim;\n        fin_dim; A \\<subseteq> carrier V; lin_indpt A; dim \\<le> card A;\n        A \\<subseteq> B; B \\<subseteq> carrier V; lin_indpt B;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "by (metis card_seteq eq_iff)"], ["proof (state)\nthis:\n  finite A \\<and>\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. basis A", "from h1"], ["proof (chain)\npicking this:\n  finite A \\<and>\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A \\<and>\n  maximal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> lin_indpt S)\n\ngoal (1 subgoal):\n 1. basis A", "by (auto intro: max_li_is_basis)"], ["proof (state)\nthis:\n  basis A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Any generating set with cardinality at most the dimension is a basis.\\<close>"], ["", "lemma (in vectorspace) dim_gen_is_basis:\n  fixes A\n  assumes fa: \"finite A\" and ca: \"A\\<subseteq>carrier V\" and li: \"gen_set A\" \n    and d: \"card A \\<le> dim\"\n  shows \"basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis A", "have 0: \"\\<And>S. finite S\\<and> S\\<subseteq>carrier V \\<and> gen_set S \\<Longrightarrow> card S \\<ge>dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       finite S \\<and>\n       S \\<subseteq> carrier V \\<and> gen_set S \\<Longrightarrow>\n       dim \\<le> card S", "by (intro gen_ge_dim, auto)"], ["proof (state)\nthis:\n  finite ?S1 \\<and>\n  ?S1 \\<subseteq> carrier V \\<and> gen_set ?S1 \\<Longrightarrow>\n  dim \\<le> card ?S1\n\ngoal (1 subgoal):\n 1. basis A", "(*li_le_dim*)"], ["proof (state)\nthis:\n  finite ?S1 \\<and>\n  ?S1 \\<subseteq> carrier V \\<and> gen_set ?S1 \\<Longrightarrow>\n  dim \\<le> card ?S1\n\ngoal (1 subgoal):\n 1. basis A", "from 0 assms"], ["proof (chain)\npicking this:\n  finite ?S1 \\<and>\n  ?S1 \\<subseteq> carrier V \\<and> gen_set ?S1 \\<Longrightarrow>\n  dim \\<le> card ?S1\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  card A \\<le> dim", "have h1:  \"minimal A (\\<lambda>S. finite S \\<and> S\\<subseteq>carrier V \\<and> gen_set S)\""], ["proof (prove)\nusing this:\n  finite ?S1 \\<and>\n  ?S1 \\<subseteq> carrier V \\<and> gen_set ?S1 \\<Longrightarrow>\n  dim \\<le> card ?S1\n  finite A\n  A \\<subseteq> carrier V\n  gen_set A\n  card A \\<le> dim\n\ngoal (1 subgoal):\n 1. minimal A\n     (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>S.\n                finite S \\<and>\n                S \\<subseteq> carrier V \\<and> gen_set S \\<Longrightarrow>\n                dim \\<le> card S;\n     finite A; A \\<subseteq> carrier V; gen_set A; card A \\<le> dim\\<rbrakk>\n    \\<Longrightarrow> (finite A \\<and>\n                       A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n                      (\\<forall>B.\n                          B \\<subseteq> A \\<and>\n                          finite B \\<and>\n                          B \\<subseteq> carrier V \\<and>\n                          gen_set B \\<longrightarrow>\n                          B = A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B x.\n       \\<lbrakk>\\<And>S.\n                   finite S \\<and>\n                   S \\<subseteq> carrier V \\<and>\n                   gen_set S \\<Longrightarrow>\n                   dim \\<le> card S;\n        finite A; A \\<subseteq> carrier V; gen_set A; card A \\<le> dim;\n        B \\<subseteq> A; finite B; B \\<subseteq> carrier V; gen_set B;\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> B", "by (metis card_seteq eq_iff)"], ["proof (state)\nthis:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. basis A", "(*slightly annoying: we have to get rid of \"finite S\" inside.*)"], ["proof (state)\nthis:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. basis A", "from h1"], ["proof (chain)\npicking this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)", "have h: \"\\<And>B. B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> LinearCombinations.module.gen_set K V B \\<Longrightarrow> B = A\""], ["proof (prove)\nusing this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<subseteq> A \\<and>\n       B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n       B = A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>B \\<subseteq> A \\<and>\n                B \\<subseteq> carrier V \\<and> gen_set B;\n        minimal A\n         (\\<lambda>S.\n             finite S \\<and>\n             S \\<subseteq> carrier V \\<and> gen_set S)\\<rbrakk>\n       \\<Longrightarrow> B = A", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>B \\<subseteq> A \\<and>\n                B \\<subseteq> carrier V \\<and> gen_set B;\n        minimal A\n         (\\<lambda>S.\n             finite S \\<and>\n             S \\<subseteq> carrier V \\<and> gen_set S)\\<rbrakk>\n       \\<Longrightarrow> B = A", "assume asm: \"B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> LinearCombinations.module.gen_set K V B\""], ["proof (state)\nthis:\n  B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>B \\<subseteq> A \\<and>\n                B \\<subseteq> carrier V \\<and> gen_set B;\n        minimal A\n         (\\<lambda>S.\n             finite S \\<and>\n             S \\<subseteq> carrier V \\<and> gen_set S)\\<rbrakk>\n       \\<Longrightarrow> B = A", "from asm h1"], ["proof (chain)\npicking this:\n  B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)", "have \"finite B\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. finite B", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A \\<and>\n             B \\<subseteq> carrier V \\<and> gen_set B;\n     (finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n     (\\<forall>B.\n         B \\<subseteq> A \\<and>\n         finite B \\<and>\n         B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n         B = A)\\<rbrakk>\n    \\<Longrightarrow> finite B", "apply (intro finite_subset[where ?A=\"B\" and ?B=\"A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>B \\<subseteq> A \\<and>\n             B \\<subseteq> carrier V \\<and> gen_set B;\n     (finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n     (\\<forall>B.\n         B \\<subseteq> A \\<and>\n         finite B \\<and>\n         B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n         B = A)\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> A\n 2. \\<lbrakk>B \\<subseteq> A \\<and>\n             B \\<subseteq> carrier V \\<and> gen_set B;\n     (finite A \\<and> A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n     (\\<forall>B.\n         B \\<subseteq> A \\<and>\n         finite B \\<and>\n         B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n         B = A)\\<rbrakk>\n    \\<Longrightarrow> finite A", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>B \\<subseteq> A \\<and>\n                B \\<subseteq> carrier V \\<and> gen_set B;\n        minimal A\n         (\\<lambda>S.\n             finite S \\<and>\n             S \\<subseteq> carrier V \\<and> gen_set S)\\<rbrakk>\n       \\<Longrightarrow> B = A", "from h1 asm this"], ["proof (chain)\npicking this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n  B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  finite B", "show \"?thesis B\""], ["proof (prove)\nusing this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n  B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B\n  finite B\n\ngoal (1 subgoal):\n 1. B = A", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(finite A \\<and>\n              A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n             (\\<forall>B.\n                 B \\<subseteq> A \\<and>\n                 finite B \\<and>\n                 B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n                 B = A);\n     B \\<subseteq> A \\<and> B \\<subseteq> carrier V \\<and> gen_set B;\n     finite B\\<rbrakk>\n    \\<Longrightarrow> B = A", "by simp"], ["proof (state)\nthis:\n  B = A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B1 \\<subseteq> A \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  ?B1 = A\n\ngoal (1 subgoal):\n 1. basis A", "from h1 h"], ["proof (chain)\npicking this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n  ?B1 \\<subseteq> A \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  ?B1 = A", "have h2: \"minimal A (\\<lambda>S. S\\<subseteq>carrier V \\<and> gen_set S)\""], ["proof (prove)\nusing this:\n  minimal A\n   (\\<lambda>S. finite S \\<and> S \\<subseteq> carrier V \\<and> gen_set S)\n  ?B1 \\<subseteq> A \\<and>\n  ?B1 \\<subseteq> carrier V \\<and> gen_set ?B1 \\<Longrightarrow>\n  ?B1 = A\n\ngoal (1 subgoal):\n 1. minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "apply (unfold minimal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(finite A \\<and>\n              A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n             (\\<forall>B.\n                 B \\<subseteq> A \\<and>\n                 finite B \\<and>\n                 B \\<subseteq> carrier V \\<and> gen_set B \\<longrightarrow>\n                 B = A);\n     \\<And>B.\n        B \\<subseteq> A \\<and>\n        B \\<subseteq> carrier V \\<and> gen_set B \\<Longrightarrow>\n        B = A\\<rbrakk>\n    \\<Longrightarrow> (A \\<subseteq> carrier V \\<and> gen_set A) \\<and>\n                      (\\<forall>B.\n                          B \\<subseteq> A \\<and>\n                          B \\<subseteq> carrier V \\<and>\n                          gen_set B \\<longrightarrow>\n                          B = A)", "by presburger"], ["proof (state)\nthis:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. basis A", "from h2"], ["proof (chain)\npicking this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)", "show ?thesis"], ["proof (prove)\nusing this:\n  minimal A (\\<lambda>S. S \\<subseteq> carrier V \\<and> gen_set S)\n\ngoal (1 subgoal):\n 1. basis A", "by (rule min_gen_is_basis)"], ["proof (state)\nthis:\n  basis A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>$\\beta$ is a basis iff for all $v\\in V$, there exists a unique $(a_v)_{v\\in S}$ such that\n$\\sum_{v\\in S} a_v v=v$.\\<close>"], ["", "lemma (in vectorspace) basis_criterion:\n  assumes A_fin: \"finite A\" and AinC: \"A\\<subseteq>carrier V\"\n  shows \"basis A \\<longleftrightarrow> (\\<forall>v. v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis A =\n    (\\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. basis A =\n    (\\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v))", "have 1: \"\\<not>(\\<forall>v.  v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)) \\<Longrightarrow> \\<not>basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "assume \"\\<not>(\\<forall>v.  v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v))", "obtain v where v: \"v\\<in> carrier V \\<and> \\<not>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v))\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v \\<in> carrier V \\<and>\n        (\\<nexists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "(*either there is more than 1 rep, or no reps*)"], ["proof (state)\nthis:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "from v"], ["proof (chain)\npicking this:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)", "have vinC: \"v\\<in>carrier V\""], ["proof (prove)\nusing this:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "from v"], ["proof (chain)\npicking this:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)", "have \"\\<not>(\\<exists> a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v) \\<or>  (\\<exists> a b. \n      a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v \\<and> b\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb b A = v \n      \\<and> a\\<noteq>b)\""], ["proof (prove)\nusing this:\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. (\\<nexists>a.\n        a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n        lincomb a A = v) \\<or>\n    (\\<exists>a b.\n        a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n        lincomb a A = v \\<and>\n        b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n        lincomb b A = v \\<and> a \\<noteq> b)", "by metis"], ["proof (state)\nthis:\n  (\\<nexists>a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v) \\<or>\n  (\\<exists>a b.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v \\<and>\n      b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb b A = v \\<and> a \\<noteq> b)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v.\n               v \\<in> carrier V \\<longrightarrow>\n               (\\<exists>!a.\n                   a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                   lincomb a A = v)) \\<Longrightarrow>\n    \\<not> basis A", "then"], ["proof (chain)\npicking this:\n  (\\<nexists>a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v) \\<or>\n  (\\<exists>a b.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v \\<and>\n      b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb b A = v \\<and> a \\<noteq> b)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<nexists>a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v) \\<or>\n  (\\<exists>a b.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb a A = v \\<and>\n      b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n      lincomb b A = v \\<and> a \\<noteq> b)\n\ngoal (1 subgoal):\n 1. \\<not> basis A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<nexists>a.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<Longrightarrow>\n    \\<not> basis A\n 2. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "assume a: \"\\<not>(\\<exists> a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\""], ["proof (state)\nthis:\n  \\<nexists>a.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v\n\ngoal (2 subgoals):\n 1. \\<nexists>a.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<Longrightarrow>\n    \\<not> basis A\n 2. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V", "have \"\\<And>a. a\\<in>A \\<rightarrow> carrier K \\<Longrightarrow> lincomb a A = lincomb (restrict a A) A\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n       lincomb a A = lincomb (restrict a A) A", "unfolding lincomb_def restrict_def"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n       (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n       (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. (if v \\<in> A then a v\n     else undefined) \\<odot>\\<^bsub>V\\<^esub>\n    v)", "by (simp cong: finsum_cong add: ring_subset_carrier coeff_in_ring)"], ["proof (state)\nthis:\n  ?a1 \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n  lincomb ?a1 A = lincomb (restrict ?a1 A) A\n\ngoal (2 subgoals):\n 1. \\<nexists>a.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<Longrightarrow>\n    \\<not> basis A\n 2. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "with a"], ["proof (chain)\npicking this:\n  \\<nexists>a.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v\n  ?a1 \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n  lincomb ?a1 A = lincomb (restrict ?a1 A) A", "have \"\\<not>(\\<exists> a.  a\\<in>A \\<rightarrow> carrier K \\<and> lincomb a A = v)\""], ["proof (prove)\nusing this:\n  \\<nexists>a.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v\n  ?a1 \\<in> A \\<rightarrow> carrier K \\<Longrightarrow>\n  lincomb ?a1 A = lincomb (restrict ?a1 A) A\n\ngoal (1 subgoal):\n 1. \\<nexists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v", "by auto"], ["proof (state)\nthis:\n  \\<nexists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n\ngoal (2 subgoals):\n 1. \\<nexists>a.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<Longrightarrow>\n    \\<not> basis A\n 2. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "with A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  \\<nexists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v", "have \"v\\<notin>span A\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  \\<nexists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n\ngoal (1 subgoal):\n 1. v \\<notin> span A", "using finite_in_span"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  \\<nexists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V; ?v \\<in> span ?S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       a \\<in> ?S \\<rightarrow> carrier K \\<and>\n                       lincomb a ?S = ?v\n\ngoal (1 subgoal):\n 1. v \\<notin> span A", "by blast"], ["proof (state)\nthis:\n  v \\<notin> span A\n\ngoal (2 subgoals):\n 1. \\<nexists>a.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<Longrightarrow>\n    \\<not> basis A\n 2. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "with AinC v"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n  v \\<notin> span A", "show \"\\<not>(basis A)\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n  v \\<notin> span A\n\ngoal (1 subgoal):\n 1. \\<not> basis A", "by (unfold basis_def, auto)"], ["proof (state)\nthis:\n  \\<not> basis A\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "assume a2: \"(\\<exists> a b. \n        a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v \\<and> b\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb b A = v \n        \\<and> a\\<noteq>b)\""], ["proof (state)\nthis:\n  \\<exists>a b.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "then"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b", "obtain a b where ab: \"a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v \\<and> b\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb b A = v \n        \\<and> a\\<noteq>b\""], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n        lincomb a A = v \\<and>\n        b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n        lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from ab"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b", "obtain w where w: \"w\\<in>A \\<and> a w \\<noteq> b w\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        w \\<in> A \\<and> a w \\<noteq> b w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (unfold PiE_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>w.\n                w \\<in> A \\<and> a w \\<noteq> b w \\<Longrightarrow> thesis;\n     a \\<in> A \\<rightarrow> carrier K;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K; a \\<in> extensional A;\n     v = lincomb a A; b \\<in> A \\<rightarrow> carrier K;\n     b \\<in> extensional A; b \\<in> A \\<rightarrow>\\<^sub>E carrier K;\n     lincomb b A = lincomb a A; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis extensionalityI)"], ["proof (state)\nthis:\n  w \\<in> A \\<and> a w \\<noteq> b w\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "let ?c=\"\\<lambda> x. (if x\\<in>A then ((a x) \\<ominus>\\<^bsub>K\\<^esub> (b x)) else undefined)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from ab"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b", "have a_fun: \"a\\<in>A \\<rightarrow> carrier K\" \n               and b_fun: \"b\\<in>A \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<in> A \\<rightarrow> carrier K &&& b \\<in> A \\<rightarrow> carrier K", "by (unfold PiE_def, auto)"], ["proof (state)\nthis:\n  a \\<in> A \\<rightarrow> carrier K\n  b \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from w a_fun b_fun"], ["proof (chain)\npicking this:\n  w \\<in> A \\<and> a w \\<noteq> b w\n  a \\<in> A \\<rightarrow> carrier K\n  b \\<in> A \\<rightarrow> carrier K", "have abinC: \"a w \\<in>carrier K\" \"b w \\<in>carrier K\""], ["proof (prove)\nusing this:\n  w \\<in> A \\<and> a w \\<noteq> b w\n  a \\<in> A \\<rightarrow> carrier K\n  b \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a w \\<in> carrier K &&& b w \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  a w \\<in> carrier K\n  b w \\<in> carrier K\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from abinC w"], ["proof (chain)\npicking this:\n  a w \\<in> carrier K\n  b w \\<in> carrier K\n  w \\<in> A \\<and> a w \\<noteq> b w", "have nz: \"a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  a w \\<in> carrier K\n  b w \\<in> carrier K\n  w \\<in> A \\<and> a w \\<noteq> b w\n\ngoal (1 subgoal):\n 1. a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "(*uses M.minus_other_side*)"], ["proof (state)\nthis:\n  a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from A_fin AinC a_fun b_fun ab vinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  b \\<in> A \\<rightarrow> carrier K\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n  v \\<in> carrier V", "have a_b:\n      \"LinearCombinations.module.lincomb V (\\<lambda>x. if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x else undefined) A = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  b \\<in> A \\<rightarrow> carrier K\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>x.\n         if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n         else undefined)\n     A =\n    \\<zero>\\<^bsub>V\\<^esub>", "by (simp cong: lincomb_cong add: coeff_in_ring lincomb_diff)"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>x.\n       if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "from A_fin AinC ab w v nz a_b"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n  w \\<in> A \\<and> a w \\<noteq> b w\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n  a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb\n   (\\<lambda>x.\n       if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>", "have \"lin_dep A\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb a A = v \\<and>\n  b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb b A = v \\<and> a \\<noteq> b\n  w \\<in> A \\<and> a w \\<noteq> b w\n  v \\<in> carrier V \\<and>\n  (\\<nexists>!a.\n      a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n  a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  lincomb\n   (\\<lambda>x.\n       if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. lin_dep A", "apply (intro lin_dep_crit[where ?A=\"A\" and ?a=\"?c\" and ?v=\"w\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> A\n 3. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          if x \\<in> A\n                          then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n                          else undefined)\n                      \\<in> A \\<rightarrow> carrier K\n 4. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> w \\<in> A\n 5. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (if w \\<in> A then a w \\<ominus>\\<^bsub>K\\<^esub> b w\n                       else undefined) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>\n 6. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb a A = v \\<and>\n     b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n     lincomb b A = v \\<and> a \\<noteq> b;\n     w \\<in> A \\<and> a w \\<noteq> b w;\n     v \\<in> carrier V \\<and>\n     (\\<nexists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v);\n     a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     lincomb\n      (\\<lambda>x.\n          if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n          else undefined)\n      A =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> lincomb\n                       (\\<lambda>x.\n                           if x \\<in> A\n                           then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n                           else undefined)\n                       A =\n                      \\<zero>\\<^bsub>V\\<^esub>", "apply (auto simp add: PiE_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x aa y.\n       \\<lbrakk>finite A; A \\<subseteq> carrier V;\n        a w \\<ominus>\\<^bsub>K\\<^esub> b w \\<noteq>\n        \\<zero>\\<^bsub>K\\<^esub>;\n        lincomb\n         (\\<lambda>x.\n             if x \\<in> A then a x \\<ominus>\\<^bsub>K\\<^esub> b x\n             else undefined)\n         A =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        x \\<in> A; a \\<in> A \\<rightarrow> carrier K; w \\<in> A;\n        a w \\<noteq> b w; a \\<in> extensional A; v = lincomb a A;\n        b \\<in> A \\<rightarrow> carrier K; b \\<in> extensional A;\n        lincomb b A = lincomb a A; a \\<noteq> b;\n        a x \\<ominus>\\<^bsub>K\\<^esub> b x \\<notin> carrier K;\n        aa \\<in> A \\<rightarrow> carrier K;\n        y \\<in> A \\<rightarrow> carrier K; aa \\<in> extensional A;\n        lincomb aa A = lincomb a A; y \\<in> extensional A;\n        lincomb y A = lincomb a A\\<rbrakk>\n       \\<Longrightarrow> aa = y", "by auto"], ["proof (state)\nthis:\n  lin_dep A\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb a A = v \\<and>\n       b \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n       lincomb b A = v \\<and> a \\<noteq> b \\<Longrightarrow>\n    \\<not> basis A", "thus \"\\<not>basis A\""], ["proof (prove)\nusing this:\n  lin_dep A\n\ngoal (1 subgoal):\n 1. \\<not> basis A", "by (unfold basis_def, auto)"], ["proof (state)\nthis:\n  \\<not> basis A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> basis A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v)) \\<Longrightarrow>\n  \\<not> basis A\n\ngoal (1 subgoal):\n 1. basis A =\n    (\\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v))", "have 2: \"(\\<forall>v. v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)) \\<Longrightarrow> basis A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "assume b1: \"(\\<forall>v. v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  a\\<in>A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v))\" \n      (is \"(\\<forall>v. v\\<in> carrier V \\<longrightarrow>(\\<exists>! a.  ?Q a v))\")"], ["proof (state)\nthis:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "from b1"], ["proof (chain)\npicking this:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)", "have b2: \"(\\<forall>v.  v\\<in> carrier V \\<longrightarrow>(\\<exists> a.  a\\<in>A \\<rightarrow> carrier K \\<and> lincomb a A = v))\""], ["proof (prove)\nusing this:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>a.\n           a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)", "apply (unfold PiE_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> (A \\<rightarrow> carrier K) \\<inter> extensional A \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>a.\n           a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)", "by blast"], ["proof (state)\nthis:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "from A_fin AinC b2"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)", "have \"gen_set A\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. gen_set A", "apply (unfold span_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<subseteq> carrier V;\n     \\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>a.\n            a \\<in> A \\<rightarrow> carrier K \\<and>\n            lincomb a A = v)\\<rbrakk>\n    \\<Longrightarrow> {lincomb a Aa |a Aa.\n                       finite Aa \\<and>\n                       Aa \\<subseteq> A \\<and>\n                       a \\<in> Aa \\<rightarrow> carrier K} =\n                      carrier V", "by blast"], ["proof (state)\nthis:\n  gen_set A\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "from b1"], ["proof (chain)\npicking this:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)", "have A_li: \"lin_indpt A\""], ["proof (prove)\nusing this:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. lin_indpt A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    lin_indpt A", "let ?z=\"\\<lambda> x. (if (x\\<in>A) then \\<zero>\\<^bsub>K\\<^esub> else undefined)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    lin_indpt A", "from A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V", "have zero: \"?Q ?z \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n    \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n    lincomb\n     (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n     A =\n    \\<zero>\\<^bsub>V\\<^esub>", "by (unfold PiE_def extensional_def lincomb_def, auto simp add: ring_subset_carrier)"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb\n   (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    lin_indpt A", "(*uses finsum_all0*)"], ["proof (state)\nthis:\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb\n   (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    lin_indpt A", "from A_fin AinC"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. lin_indpt A", "proof (rule finite_lin_indpt2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "assume a_fun: \"a \\<in> A \\<rightarrow> carrier K\" and\n          lc_a: \"LinearCombinations.module.lincomb V a A = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (state)\nthis:\n  a \\<in> A \\<rightarrow> carrier K\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "from a_fun"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier K", "have a_res: \"restrict a A \\<in> A \\<rightarrow>\\<^sub>E carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. restrict a A \\<in> A \\<rightarrow>\\<^sub>E carrier K", "by auto"], ["proof (state)\nthis:\n  restrict a A \\<in> A \\<rightarrow>\\<^sub>E carrier K\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "from a_fun A_fin AinC lc_a"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier K\n  finite A\n  A \\<subseteq> carrier V\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>", "have \n          lc_a_res: \"LinearCombinations.module.lincomb V (restrict a A) A = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n  finite A\n  A \\<subseteq> carrier V\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb (restrict a A) A = \\<zero>\\<^bsub>V\\<^esub>", "apply (unfold lincomb_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A \\<rightarrow> carrier K; finite A;\n     A \\<subseteq> carrier V;\n     (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. (if v \\<in> A\n                    then a v else undefined) \\<odot>\\<^bsub>V\\<^esub>\n                   v) =\n                      \\<zero>\\<^bsub>V\\<^esub>", "by (simp cong: finsum_cong2 add: coeff_in_ring ring_subset_carrier)"], ["proof (state)\nthis:\n  lincomb (restrict a A) A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "from a_fun a_res lc_a_res zero b1"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier K\n  restrict a A \\<in> A \\<rightarrow>\\<^sub>E carrier K\n  lincomb (restrict a A) A = \\<zero>\\<^bsub>V\\<^esub>\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb\n   (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)", "have \"restrict a A = ?z\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n  restrict a A \\<in> A \\<rightarrow>\\<^sub>E carrier K\n  lincomb (restrict a A) A = \\<zero>\\<^bsub>V\\<^esub>\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n  \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n  lincomb\n   (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n   A =\n  \\<zero>\\<^bsub>V\\<^esub>\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. restrict a A =\n    (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)", "by auto"], ["proof (state)\nthis:\n  restrict a A =\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> A \\<rightarrow> carrier K;\n        lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "from this"], ["proof (chain)\npicking this:\n  restrict a A =\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)", "show \"\\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  restrict a A =\n  (\\<lambda>x. if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub> else undefined)\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "apply (unfold restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if x \\<in> A then a x else undefined) =\n    (\\<lambda>x.\n        if x \\<in> A then \\<zero>\\<^bsub>K\\<^esub>\n        else undefined) \\<Longrightarrow>\n    \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>", "by meson"], ["proof (state)\nthis:\n  \\<forall>v\\<in>A. a v = \\<zero>\\<^bsub>K\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lin_indpt A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lin_indpt A\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "have A_gen: \"gen_set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gen_set A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. gen_set A", "from AinC"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V", "have dir1: \"span A\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. span A \\<subseteq> carrier V", "by (rule span_is_subset2)"], ["proof (state)\nthis:\n  span A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. gen_set A", "have dir2: \"carrier V\\<subseteq>span A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier V \\<subseteq> span A", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier V \\<Longrightarrow> x \\<in> span A", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier V \\<Longrightarrow> x \\<in> span A", "assume v: \"v\\<in>carrier V\""], ["proof (state)\nthis:\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier V \\<Longrightarrow> x \\<in> span A", "from v b2"], ["proof (chain)\npicking this:\n  v \\<in> carrier V\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)", "obtain a where \"a\\<in>A \\<rightarrow> carrier K \\<and> lincomb a A = v\""], ["proof (prove)\nusing this:\n  v \\<in> carrier V\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>a. a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> A \\<rightarrow> carrier K \\<and>\n        lincomb a A = v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier V \\<Longrightarrow> x \\<in> span A", "from this A_fin AinC"], ["proof (chain)\npicking this:\n  a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n  finite A\n  A \\<subseteq> carrier V", "show \"v\\<in>span A\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K \\<and> lincomb a A = v\n  finite A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<in> span A", "by (subst finite_span, auto)"], ["proof (state)\nthis:\n  v \\<in> span A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier V \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. gen_set A", "from dir1 dir2"], ["proof (chain)\npicking this:\n  span A \\<subseteq> carrier V\n  carrier V \\<subseteq> span A", "show ?thesis"], ["proof (prove)\nusing this:\n  span A \\<subseteq> carrier V\n  carrier V \\<subseteq> span A\n\ngoal (1 subgoal):\n 1. gen_set A", "by auto"], ["proof (state)\nthis:\n  gen_set A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gen_set A\n\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> carrier V \\<longrightarrow>\n       (\\<exists>!a.\n           a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n           lincomb a A = v) \\<Longrightarrow>\n    basis A", "from A_li A_gen AinC"], ["proof (chain)\npicking this:\n  lin_indpt A\n  gen_set A\n  A \\<subseteq> carrier V", "show \"basis A\""], ["proof (prove)\nusing this:\n  lin_indpt A\n  gen_set A\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. basis A", "by (unfold basis_def, auto)"], ["proof (state)\nthis:\n  basis A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n         lincomb a A = v) \\<Longrightarrow>\n  basis A\n\ngoal (1 subgoal):\n 1. basis A =\n    (\\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v))", "from 1 2"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v)) \\<Longrightarrow>\n  \\<not> basis A\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n         lincomb a A = v) \\<Longrightarrow>\n  basis A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v.\n             v \\<in> carrier V \\<longrightarrow>\n             (\\<exists>!a.\n                 a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n                 lincomb a A = v)) \\<Longrightarrow>\n  \\<not> basis A\n  \\<forall>v.\n     v \\<in> carrier V \\<longrightarrow>\n     (\\<exists>!a.\n         a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n         lincomb a A = v) \\<Longrightarrow>\n  basis A\n\ngoal (1 subgoal):\n 1. basis A =\n    (\\<forall>v.\n        v \\<in> carrier V \\<longrightarrow>\n        (\\<exists>!a.\n            a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and>\n            lincomb a A = v))", "by satx"], ["proof (state)\nthis:\n  basis A =\n  (\\<forall>v.\n      v \\<in> carrier V \\<longrightarrow>\n      (\\<exists>!a.\n          a \\<in> A \\<rightarrow>\\<^sub>E carrier K \\<and> lincomb a A = v))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in linear_map) surj_imp_imT_carrier:\n  assumes surj: \"T` (carrier V) = carrier W\"\n  shows \"(imT) = carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. imT = carrier W", "by (simp add: surj im_def)"], ["", "subsection \\<open>The rank-nullity (dimension) theorem\\<close>"], ["", "text \\<open>If $V$ is finite-dimensional and $T:V\\to W$ is a linear map, then $\\text{dim}(\\text{im}(T))+\n\\text{dim}(\\text{ker}(T)) = \\text{dim} V$. Moreover, we prove that if $T$ is surjective \n  linear-map between $V$ and $W$, where $V$ is finite-dimensional, then also $W$ is finite-dimensional.\\<close>"], ["", "theorem (in linear_map) rank_nullity_main: \n  assumes fd: \"V.fin_dim\"\n  shows \"(vectorspace.dim K (W.vs imT)) + (vectorspace.dim K (V.vs kerT)) = V.dim\"       \n    \"T ` (carrier V) = carrier W \\<Longrightarrow> W.fin_dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim &&&\n    (T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim)", "proof - \n  \\<comment> \\<open>First interpret kerT, imT as vectorspaces\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have subs_ker: \"subspace K kerT V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K kerT V", "by (intro kerT_is_subspace)"], ["proof (state)\nthis:\n  subspace K kerT V\n\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from subs_ker"], ["proof (chain)\npicking this:\n  subspace K kerT V", "have vs_ker: \"vectorspace K (V.vs kerT)\""], ["proof (prove)\nusing this:\n  subspace K kerT V\n\ngoal (1 subgoal):\n 1. vectorspace K (V.vs kerT)", "by (rule V.subspace_is_vs)"], ["proof (state)\nthis:\n  vectorspace K (V.vs kerT)\n\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from vs_ker"], ["proof (chain)\npicking this:\n  vectorspace K (V.vs kerT)", "interpret ker: vectorspace K \"(V.vs kerT)\""], ["proof (prove)\nusing this:\n  vectorspace K (V.vs kerT)\n\ngoal (1 subgoal):\n 1. vectorspace K (V.vs kerT)", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have kerInC: \"kerT\\<subseteq>carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kerT \\<subseteq> carrier V", "by (unfold ker_def, auto)"], ["proof (state)\nthis:\n  kerT \\<subseteq> carrier V\n\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have subs_im: \"subspace K imT W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K imT W", "by (intro imT_is_subspace)"], ["proof (state)\nthis:\n  subspace K imT W\n\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from subs_im"], ["proof (chain)\npicking this:\n  subspace K imT W", "have vs_im: \"vectorspace K (W.vs imT)\""], ["proof (prove)\nusing this:\n  subspace K imT W\n\ngoal (1 subgoal):\n 1. vectorspace K (W.vs imT)", "by (rule W.subspace_is_vs)"], ["proof (state)\nthis:\n  vectorspace K (W.vs imT)\n\ngoal (2 subgoals):\n 1. vectorspace.dim K (W.vs imT) + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from vs_im"], ["proof (chain)\npicking this:\n  vectorspace K (W.vs imT)", "interpret im: vectorspace K \"(W.vs imT)\""], ["proof (prove)\nusing this:\n  vectorspace K (W.vs imT)\n\ngoal (1 subgoal):\n 1. vectorspace K (W.vs imT)", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have imInC: \"imT\\<subseteq>carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. imT \\<subseteq> carrier W", "by (unfold im_def, auto)"], ["proof (state)\nthis:\n  imT \\<subseteq> carrier W\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "(* obvious fact *)"], ["proof (state)\nthis:\n  imT \\<subseteq> carrier W\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have zero_same[simp]: \"\\<zero>\\<^bsub>V.vs kerT\\<^esub> = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V.vs kerT\\<^esub> = \\<zero>\\<^bsub>V\\<^esub>", "apply (unfold ker_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V.vs {v \\<in> carrier V. T v = \\<zero>\\<^bsub>W\\<^esub>}\\<^esub> =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto\n  \\<comment> \\<open>Show ker T has a finite basis. This is not obvious. Show that any linearly independent set \nhas size at most that of V. There exists a maximal linearly independent set, which is the basis.\\<close>"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V.vs kerT\\<^esub> = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have every_li_small: \"\\<And>A. (A \\<subseteq> kerT)\\<and> ker.lin_indpt A \\<Longrightarrow> \n    finite A \\<and> card A \\<le> V.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "assume eli_asm: \"(A \\<subseteq> kerT)\\<and> ker.lin_indpt A\""], ["proof (state)\nthis:\n  A \\<subseteq> kerT \\<and> ker.lin_indpt A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "(*annoying: I can't just use subst V.module.span_li_not_depend(2) in the show ?thesis \n    statement because it doesn't appear in the conclusion.*)"], ["proof (state)\nthis:\n  A \\<subseteq> kerT \\<and> ker.lin_indpt A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "note V.module.span_li_not_depend(2)[where ?N=\"kerT\" and ?S=\"A\"]"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<subseteq> kerT;\n   LinearCombinations.submodule K kerT V\\<rbrakk>\n  \\<Longrightarrow> ker.lin_dep A = V.module.lin_dep A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n       finite A \\<and> card A \\<le> V.dim", "from this subs_ker fd eli_asm kerInC"], ["proof (chain)\npicking this:\n  \\<lbrakk>A \\<subseteq> kerT;\n   LinearCombinations.submodule K kerT V\\<rbrakk>\n  \\<Longrightarrow> ker.lin_dep A = V.module.lin_dep A\n  subspace K kerT V\n  V.fin_dim\n  A \\<subseteq> kerT \\<and> ker.lin_indpt A\n  kerT \\<subseteq> carrier V", "show \"?thesis A\""], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> kerT;\n   LinearCombinations.submodule K kerT V\\<rbrakk>\n  \\<Longrightarrow> ker.lin_dep A = V.module.lin_dep A\n  subspace K kerT V\n  V.fin_dim\n  A \\<subseteq> kerT \\<and> ker.lin_indpt A\n  kerT \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. finite A \\<and> card A \\<le> V.dim", "apply (intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<subseteq> kerT;\n              LinearCombinations.submodule K kerT V\\<rbrakk>\n             \\<Longrightarrow> ker.lin_dep A = V.module.lin_dep A;\n     subspace K kerT V; V.fin_dim;\n     A \\<subseteq> kerT \\<and> ker.lin_indpt A;\n     kerT \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>\\<lbrakk>A \\<subseteq> kerT;\n              LinearCombinations.submodule K kerT V\\<rbrakk>\n             \\<Longrightarrow> ker.lin_dep A = V.module.lin_dep A;\n     subspace K kerT V; V.fin_dim;\n     A \\<subseteq> kerT \\<and> ker.lin_indpt A;\n     kerT \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> card A \\<le> V.dim", "by (auto intro!: V.li_le_dim)"], ["proof (state)\nthis:\n  finite A \\<and> card A \\<le> V.dim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A1 \\<subseteq> kerT \\<and> ker.lin_indpt ?A1 \\<Longrightarrow>\n  finite ?A1 \\<and> card ?A1 \\<le> V.dim\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from every_li_small"], ["proof (chain)\npicking this:\n  ?A1 \\<subseteq> kerT \\<and> ker.lin_indpt ?A1 \\<Longrightarrow>\n  finite ?A1 \\<and> card ?A1 \\<le> V.dim", "have exA: \n    \"\\<exists>A. finite A \\<and> maximal A (\\<lambda>S. S\\<subseteq>carrier (V.vs kerT) \\<and> ker.lin_indpt S)\""], ["proof (prove)\nusing this:\n  ?A1 \\<subseteq> kerT \\<and> ker.lin_indpt ?A1 \\<Longrightarrow>\n  finite ?A1 \\<and> card ?A1 \\<le> V.dim\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       finite A \\<and>\n       maximal A\n        (\\<lambda>S.\n            S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)", "apply (intro maximal_exists[where ?N=\"V.dim\" and ?B=\"{}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<And>A.\n                   A \\<subseteq> kerT \\<and>\n                   ker.lin_indpt A \\<Longrightarrow>\n                   finite A \\<and> card A \\<le> V.dim;\n        A \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt A\\<rbrakk>\n       \\<Longrightarrow> finite A \\<and> card A \\<le> V.dim\n 2. (\\<And>A.\n        A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n        finite A \\<and> card A \\<le> V.dim) \\<Longrightarrow>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                A \\<subseteq> kerT \\<and> ker.lin_indpt A \\<Longrightarrow>\n                finite A \\<and> card A \\<le> V.dim;\n     ker.lin_dep {}\\<rbrakk>\n    \\<Longrightarrow> False", "by (unfold ker.lin_dep_def, auto)"], ["proof (state)\nthis:\n  \\<exists>A.\n     finite A \\<and>\n     maximal A\n      (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from exA"], ["proof (chain)\npicking this:\n  \\<exists>A.\n     finite A \\<and>\n     maximal A\n      (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)", "obtain A where A:\" finite A \\<and> maximal A (\\<lambda>S. S\\<subseteq>carrier (V.vs kerT) \\<and> ker.lin_indpt S)\""], ["proof (prove)\nusing this:\n  \\<exists>A.\n     finite A \\<and>\n     maximal A\n      (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        finite A \\<and>\n        maximal A\n         (\\<lambda>S.\n             S \\<subseteq> carrier (V.vs kerT) \\<and>\n             ker.lin_indpt S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "hence finA: \"finite A\" and Ainker: \"A\\<subseteq>carrier (V.vs kerT)\" and AinC: \"A\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n\ngoal (1 subgoal):\n 1. finite A &&&\n    A \\<subseteq> carrier (V.vs kerT) &&& A \\<subseteq> carrier V", "by (unfold maximal_def ker_def, auto)\n  \\<comment> \\<open>We obtain the basis A of kerT. It is also linearly independent when considered in V rather\nthan kerT\\<close>"], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> carrier (V.vs kerT)\n  A \\<subseteq> carrier V\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from A"], ["proof (chain)\npicking this:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)", "have Abasis: \"ker.basis A\""], ["proof (prove)\nusing this:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n\ngoal (1 subgoal):\n 1. ker.basis A", "by (intro ker.max_li_is_basis, auto)"], ["proof (state)\nthis:\n  ker.basis A\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from subs_ker Abasis"], ["proof (chain)\npicking this:\n  subspace K kerT V\n  ker.basis A", "have spanA: \"V.module.span A = kerT\""], ["proof (prove)\nusing this:\n  subspace K kerT V\n  ker.basis A\n\ngoal (1 subgoal):\n 1. V.module.span A = kerT", "apply (unfold ker.basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>subspace K kerT V;\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> V.module.span A = kerT", "by (subst sym[OF V.module.span_li_not_depend(1)[where ?N=\"kerT\"]], auto)"], ["proof (state)\nthis:\n  V.module.span A = kerT\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from Abasis"], ["proof (chain)\npicking this:\n  ker.basis A", "have Akerli: \"ker.lin_indpt A\""], ["proof (prove)\nusing this:\n  ker.basis A\n\ngoal (1 subgoal):\n 1. ker.lin_indpt A", "apply (unfold ker.basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ker.lin_indpt A \\<and>\n    ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT) \\<Longrightarrow>\n    ker.lin_indpt A", "by auto"], ["proof (state)\nthis:\n  ker.lin_indpt A\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from subs_ker Ainker Akerli"], ["proof (chain)\npicking this:\n  subspace K kerT V\n  A \\<subseteq> carrier (V.vs kerT)\n  ker.lin_indpt A", "have Ali: \"V.module.lin_indpt A\""], ["proof (prove)\nusing this:\n  subspace K kerT V\n  A \\<subseteq> carrier (V.vs kerT)\n  ker.lin_indpt A\n\ngoal (1 subgoal):\n 1. V.module.lin_indpt A", "by (auto simp add: V.module.span_li_not_depend(2))"], ["proof (state)\nthis:\n  V.module.lin_indpt A\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt\\<open>Use the replacement theorem to find C such that $A\\cup C$ is a basis of V.\\<close>"], ["proof (state)\nthis:\n  V.module.lin_indpt A\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from fd"], ["proof (chain)\npicking this:\n  V.fin_dim", "obtain B where B: \"finite B\\<and> V.basis B\""], ["proof (prove)\nusing this:\n  V.fin_dim\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        finite B \\<and> V.basis B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis V.finite_basis_exists)"], ["proof (state)\nthis:\n  finite B \\<and> V.basis B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from B"], ["proof (chain)\npicking this:\n  finite B \\<and> V.basis B", "have Bfin: \"finite B\" and Bbasis:\"V.basis B\""], ["proof (prove)\nusing this:\n  finite B \\<and> V.basis B\n\ngoal (1 subgoal):\n 1. finite B &&& V.basis B", "by auto"], ["proof (state)\nthis:\n  finite B\n  V.basis B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from B"], ["proof (chain)\npicking this:\n  finite B \\<and> V.basis B", "have Bcard: \"V.dim = card B\""], ["proof (prove)\nusing this:\n  finite B \\<and> V.basis B\n\ngoal (1 subgoal):\n 1. V.dim = card B", "by (intro V.dim_basis, auto)"], ["proof (state)\nthis:\n  V.dim = card B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from Bbasis"], ["proof (chain)\npicking this:\n  V.basis B", "have 62: \"V.module.span B = carrier V\""], ["proof (prove)\nusing this:\n  V.basis B\n\ngoal (1 subgoal):\n 1. V.module.gen_set B", "by (unfold V.basis_def, auto)"], ["proof (state)\nthis:\n  V.module.gen_set B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from A Abasis Ali B vs_ker"], ["proof (chain)\npicking this:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n  ker.basis A\n  V.module.lin_indpt A\n  finite B \\<and> V.basis B\n  vectorspace K (V.vs kerT)", "have \"\\<exists>C. finite C \\<and> C\\<subseteq>carrier V \\<and> C\\<subseteq> V.module.span B \\<and> C\\<inter>A={} \n      \\<and> int (card C) \\<le> (int (card B)) - (int (card A)) \\<and> (V.module.span (A \\<union> C) = V.module.span B)\""], ["proof (prove)\nusing this:\n  finite A \\<and>\n  maximal A\n   (\\<lambda>S. S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S)\n  ker.basis A\n  V.module.lin_indpt A\n  finite B \\<and> V.basis B\n  vectorspace K (V.vs kerT)\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       finite C \\<and>\n       C \\<subseteq> carrier V \\<and>\n       C \\<subseteq> V.module.span B \\<and>\n       C \\<inter> A = {} \\<and>\n       int (card C) \\<le> int (card B) - int (card A) \\<and>\n       V.module.span (A \\<union> C) = V.module.span B", "apply (intro V.replacement)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.basis A; V.module.lin_indpt A; finite B \\<and> V.basis B;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.basis A; V.module.lin_indpt A; finite B \\<and> V.basis B;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> finite B\n 3. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.basis A; V.module.lin_indpt A; finite B \\<and> V.basis B;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> carrier V\n 4. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.basis A; V.module.lin_indpt A; finite B \\<and> V.basis B;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> V.module.lin_indpt A\n 5. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.basis A; V.module.lin_indpt A; finite B \\<and> V.basis B;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> V.module.span B", "apply (unfold vectorspace.basis_def V.basis_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT);\n     V.module.lin_indpt A;\n     finite B \\<and>\n     V.module.lin_indpt B \\<and>\n     V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT);\n     V.module.lin_indpt A;\n     finite B \\<and>\n     V.module.lin_indpt B \\<and>\n     V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> finite B\n 3. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT);\n     V.module.lin_indpt A;\n     finite B \\<and>\n     V.module.lin_indpt B \\<and>\n     V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> carrier V\n 4. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT);\n     V.module.lin_indpt A;\n     finite B \\<and>\n     V.module.lin_indpt B \\<and>\n     V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> V.module.lin_indpt A\n 5. \\<lbrakk>finite A \\<and>\n             maximal A\n              (\\<lambda>S.\n                  S \\<subseteq> carrier (V.vs kerT) \\<and> ker.lin_indpt S);\n     ker.lin_indpt A \\<and>\n     ker.gen_set A \\<and> A \\<subseteq> carrier (V.vs kerT);\n     V.module.lin_indpt A;\n     finite B \\<and>\n     V.module.lin_indpt B \\<and>\n     V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     vectorspace K (V.vs kerT)\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> V.module.span B", "by (unfold ker_def, auto)"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt \\<open>From replacement we got $|C|\\leq |B|-|A|$. Equality must actually hold, because no generating set\ncan be smaller than $B$. Now $A\\cup C$ is a maximal generating set, hence a basis; its cardinality\nequals the dimension.\\<close>"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt \\<open>We claim that $T(C)$ is basis for $\\text{im}(T)$.\\<close>"], ["proof (state)\nthis:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "then"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B", "obtain C where C: \"finite C \\<and> C\\<subseteq>carrier V \\<and> C\\<subseteq> V.module.span B \\<and> C\\<inter>A={} \n    \\<and> int (card C) \\<le> (int (card B)) - (int (card A)) \\<and> (V.module.span (A \\<union> C) = V.module.span B)\""], ["proof (prove)\nusing this:\n  \\<exists>C.\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        finite C \\<and>\n        C \\<subseteq> carrier V \\<and>\n        C \\<subseteq> V.module.span B \\<and>\n        C \\<inter> A = {} \\<and>\n        int (card C) \\<le> int (card B) - int (card A) \\<and>\n        V.module.span (A \\<union> C) = V.module.span B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "hence Cfin: \"finite C\" and CinC: \"C\\<subseteq>carrier V\" and CinspanB: \" C\\<subseteq>V.module.span B\" and CAdis: \"C\\<inter>A={}\" \n    and Ccard: \"int (card C) \\<le> (int (card B)) - (int (card A))\"\n    and ACspanB: \"(V.module.span (A \\<union> C) = V.module.span B)\""], ["proof (prove)\nusing this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. (finite C &&&\n     C \\<subseteq> carrier V &&& C \\<subseteq> V.module.span B) &&&\n    C \\<inter> A = {} &&&\n    int (card C) \\<le> int (card B) - int (card A) &&&\n    V.module.span (A \\<union> C) = V.module.span B", "by auto"], ["proof (state)\nthis:\n  finite C\n  C \\<subseteq> carrier V\n  C \\<subseteq> V.module.span B\n  C \\<inter> A = {}\n  int (card C) \\<le> int (card B) - int (card A)\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from C"], ["proof (chain)\npicking this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B", "have cardLe: \"card A + card C \\<le> card B\""], ["proof (prove)\nusing this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. card A + card C \\<le> card B", "by auto"], ["proof (state)\nthis:\n  card A + card C \\<le> card B\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from B C"], ["proof (chain)\npicking this:\n  finite B \\<and> V.basis B\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B", "have ACgen: \"V.module.gen_set (A\\<union>C)\""], ["proof (prove)\nusing this:\n  finite B \\<and> V.basis B\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. V.module.gen_set (A \\<union> C)", "apply (unfold V.basis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B \\<and>\n             V.module.lin_indpt B \\<and>\n             V.module.gen_set B \\<and> B \\<subseteq> carrier V;\n     finite C \\<and>\n     C \\<subseteq> carrier V \\<and>\n     C \\<subseteq> V.module.span B \\<and>\n     C \\<inter> A = {} \\<and>\n     int (card C) \\<le> int (card B) - int (card A) \\<and>\n     V.module.span (A \\<union> C) = V.module.span B\\<rbrakk>\n    \\<Longrightarrow> V.module.gen_set (A \\<union> C)", "by auto"], ["proof (state)\nthis:\n  V.module.gen_set (A \\<union> C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from finA C ACgen AinC B"], ["proof (chain)\npicking this:\n  finite A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  V.module.gen_set (A \\<union> C)\n  A \\<subseteq> carrier V\n  finite B \\<and> V.basis B", "have cardGe: \"card (A\\<union>C) \\<ge> card B\""], ["proof (prove)\nusing this:\n  finite A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  V.module.gen_set (A \\<union> C)\n  A \\<subseteq> carrier V\n  finite B \\<and> V.basis B\n\ngoal (1 subgoal):\n 1. card B \\<le> card (A \\<union> C)", "by (intro V.li_smaller_than_gen, unfold V.basis_def, auto)"], ["proof (state)\nthis:\n  card B \\<le> card (A \\<union> C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from finA C"], ["proof (chain)\npicking this:\n  finite A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B", "have cardUn: \"card (A\\<union>C)\\<le>  card A + card C\""], ["proof (prove)\nusing this:\n  finite A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. card (A \\<union> C) \\<le> card A + card C", "by (metis Int_commute card_Un_disjoint le_refl)"], ["proof (state)\nthis:\n  card (A \\<union> C) \\<le> card A + card C\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from cardLe cardUn cardGe Bcard"], ["proof (chain)\npicking this:\n  card A + card C \\<le> card B\n  card (A \\<union> C) \\<le> card A + card C\n  card B \\<le> card (A \\<union> C)\n  V.dim = card B", "have cardEq: \n    \"card (A\\<union>C) = card A + card C\" \n    \"card (A\\<union>C) = card B\" \n    \"card (A\\<union>C) = V.dim\""], ["proof (prove)\nusing this:\n  card A + card C \\<le> card B\n  card (A \\<union> C) \\<le> card A + card C\n  card B \\<le> card (A \\<union> C)\n  V.dim = card B\n\ngoal (1 subgoal):\n 1. card (A \\<union> C) = card A + card C &&&\n    card (A \\<union> C) = card B &&& card (A \\<union> C) = V.dim", "by auto"], ["proof (state)\nthis:\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from Abasis C cardEq"], ["proof (chain)\npicking this:\n  ker.basis A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim", "have disj: \"A\\<inter>C={}\""], ["proof (prove)\nusing this:\n  ker.basis A\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n\ngoal (1 subgoal):\n 1. A \\<inter> C = {}", "by auto"], ["proof (state)\nthis:\n  A \\<inter> C = {}\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from finA AinC C cardEq 62"], ["proof (chain)\npicking this:\n  finite A\n  A \\<subseteq> carrier V\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  V.module.gen_set B", "have ACfin: \"finite (A\\<union>C)\" and ACbasis: \"V.basis (A\\<union>C)\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  V.module.gen_set B\n\ngoal (1 subgoal):\n 1. finite (A \\<union> C) &&& V.basis (A \\<union> C)", "by (auto intro!: V.dim_gen_is_basis)"], ["proof (state)\nthis:\n  finite (A \\<union> C)\n  V.basis (A \\<union> C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have lm: \"linear_map K V W T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K V W T", ".."], ["proof (state)\nthis:\n  linear_map K V W T\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt \\<open>Let $C'$ be the image of $C$ under $T$. We will show $C'$ is a basis for $\\text{im}(T)$.\\<close>"], ["proof (state)\nthis:\n  linear_map K V W T\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "let ?C' = \"T`C\""], ["proof (state)\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from Cfin"], ["proof (chain)\npicking this:\n  finite C", "have C'fin: \"finite ?C'\""], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. finite (T ` C)", "by auto"], ["proof (state)\nthis:\n  finite (T ` C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from AinC C"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B", "have cim: \"?C'\\<subseteq>imT\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n\ngoal (1 subgoal):\n 1. T ` C \\<subseteq> imT", "by (unfold im_def, auto)"], ["proof (state)\nthis:\n  T ` C \\<subseteq> imT\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt \\<open>\"There is a subtle detail: we first have to show $T$ is injective on $C$.\\<close>"], ["proof (state)\nthis:\n  T ` C \\<subseteq> imT\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "txt \\<open>We establish that no nontrivial linear combination of $C$ can have image 0 under $T$, \nbecause that would mean it is a linear combination of $A$, giving that $A\\cup C$ is linearly dependent, \ncontradiction. We use this result in 2 ways: (1) if $T$ is not injective on $C$, then we obtain $v$, $w\\in C$ \nsuch that $v-w$ is in the kernel, contradiction, (2) if $T(C)$ is linearly dependent, \ntaking the inverse image of that linear combination gives a linear combination of $C$ in the kernel, \ncontradiction. Hence $T$ is injective on $C$ and $T(C)$ is linearly independent.\\<close>"], ["proof (state)\nthis:\n  T ` C \\<subseteq> imT\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have lc_in_ker: \"\\<And>d D v. \\<lbrakk>D\\<subseteq>C; d\\<in>D\\<rightarrow>carrier K; T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; \n    v\\<in>D; d v \\<noteq>\\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\\<Longrightarrow>False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "fix d D v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "assume D: \"D\\<subseteq>C\" and d: \"d\\<in>D\\<rightarrow>carrier K\" and T0: \"T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>\" \n      and v: \"v\\<in>D\" and dvnz: \"d v \\<noteq>\\<zero>\\<^bsub>K\\<^esub>\""], ["proof (state)\nthis:\n  D \\<subseteq> C\n  d \\<in> D \\<rightarrow> carrier K\n  T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>\n  v \\<in> D\n  d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from D Cfin"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  finite C", "have Dfin: \"finite D\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  finite C\n\ngoal (1 subgoal):\n 1. finite D", "by (auto intro: finite_subset)"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from D CinC"], ["proof (chain)\npicking this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier V", "have DinC: \"D\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  D \\<subseteq> C\n  C \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. D \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  D \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from T0 d Dfin DinC"], ["proof (chain)\npicking this:\n  T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>\n  d \\<in> D \\<rightarrow> carrier K\n  finite D\n  D \\<subseteq> carrier V", "have lc_d: \"V.module.lincomb d D\\<in>kerT\""], ["proof (prove)\nusing this:\n  T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>\n  d \\<in> D \\<rightarrow> carrier K\n  finite D\n  D \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. V.module.lincomb d D \\<in> kerT", "by (unfold ker_def, auto)"], ["proof (state)\nthis:\n  V.module.lincomb d D \\<in> kerT\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from lc_d spanA AinC"], ["proof (chain)\npicking this:\n  V.module.lincomb d D \\<in> kerT\n  V.module.span A = kerT\n  A \\<subseteq> carrier V", "have  \"\\<exists>a' A'. A'\\<subseteq>A \\<and> a'\\<in>A'\\<rightarrow>carrier K \\<and>\n       V.module.lincomb a' A'= V.module.lincomb d D\""], ["proof (prove)\nusing this:\n  V.module.lincomb d D \\<in> kerT\n  V.module.span A = kerT\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>a' A'.\n       A' \\<subseteq> A \\<and>\n       a' \\<in> A' \\<rightarrow> carrier K \\<and>\n       V.module.lincomb a' A' = V.module.lincomb d D", "by (intro V.module.in_span, auto)"], ["proof (state)\nthis:\n  \\<exists>a' A'.\n     A' \\<subseteq> A \\<and>\n     a' \\<in> A' \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a' A' = V.module.lincomb d D\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>a' A'.\n     A' \\<subseteq> A \\<and>\n     a' \\<in> A' \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a' A' = V.module.lincomb d D", "obtain a' A' where a': \"A'\\<subseteq>A \\<and> a'\\<in>A'\\<rightarrow>carrier K \\<and>\n      V.module.lincomb d D = V.module.lincomb a' A'\""], ["proof (prove)\nusing this:\n  \\<exists>a' A'.\n     A' \\<subseteq> A \\<and>\n     a' \\<in> A' \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a' A' = V.module.lincomb d D\n\ngoal (1 subgoal):\n 1. (\\<And>A' a'.\n        A' \\<subseteq> A \\<and>\n        a' \\<in> A' \\<rightarrow> carrier K \\<and>\n        V.module.lincomb d D = V.module.lincomb a' A' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "hence  A'sub: \"A'\\<subseteq>A\" and a'fun: \"a'\\<in>A'\\<rightarrow>carrier K\" \n      and a'_lc:\"V.module.lincomb d D = V.module.lincomb a' A'\""], ["proof (prove)\nusing this:\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n\ngoal (1 subgoal):\n 1. A' \\<subseteq> A &&&\n    a' \\<in> A' \\<rightarrow> carrier K &&&\n    V.module.lincomb d D = V.module.lincomb a' A'", "by auto"], ["proof (state)\nthis:\n  A' \\<subseteq> A\n  a' \\<in> A' \\<rightarrow> carrier K\n  V.module.lincomb d D = V.module.lincomb a' A'\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from a' finA Dfin"], ["proof (chain)\npicking this:\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n  finite A\n  finite D", "have A'fin: \"finite (A')\""], ["proof (prove)\nusing this:\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n  finite A\n  finite D\n\ngoal (1 subgoal):\n 1. finite A'", "by (auto intro: finite_subset)"], ["proof (state)\nthis:\n  finite A'\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from AinC A'sub"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier V\n  A' \\<subseteq> A", "have A'inC: \"A'\\<subseteq>carrier V\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A' \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A' \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "let ?e = \"(\\<lambda>v. if v \\<in> A' then a' v else \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<otimes>\\<^bsub>K\\<^esub> d v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from a'fun d"], ["proof (chain)\npicking this:\n  a' \\<in> A' \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K", "have e_fun: \"?e \\<in> A' \\<union> D \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a' \\<in> A' \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        if v \\<in> A' then a' v\n        else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n             d v)\n    \\<in> A' \\<union> D \\<rightarrow> carrier K", "apply (unfold Pi_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a' \\<in> {f. \\<forall>x.\n                             x \\<in> A' \\<longrightarrow>\n                             f x \\<in> carrier K};\n     d \\<in> {f. \\<forall>x.\n                    x \\<in> D \\<longrightarrow>\n                    f x \\<in> carrier K}\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          if v \\<in> A' then a' v\n                          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                               d v)\n                      \\<in> {f. \\<forall>x.\n                                   x \\<in> A' \\<union> D \\<longrightarrow>\n                                   f x \\<in> carrier K}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from\n      A'fin Dfin (*finiteness*)\n      A'inC DinC (*in carrier*)\n      a'fun d e_fun (*coefficients valid*)\n      disj D A'sub"], ["proof (chain)\npicking this:\n  finite A'\n  finite D\n  A' \\<subseteq> carrier V\n  D \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n  A \\<inter> C = {}\n  D \\<subseteq> C\n  A' \\<subseteq> A", "(*A and C disjoint*)"], ["proof (chain)\npicking this:\n  finite A'\n  finite D\n  A' \\<subseteq> carrier V\n  D \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n  A \\<inter> C = {}\n  D \\<subseteq> C\n  A' \\<subseteq> A", "have lccomp1:\n      \"V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub> \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<odot>\\<^bsub>V\\<^esub> V.module.lincomb d D = \n        V.module.lincomb (\\<lambda>v. if v\\<in>A' then a' v else \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<otimes>\\<^bsub>K\\<^esub> d v) (A'\\<union>D)\""], ["proof (prove)\nusing this:\n  finite A'\n  finite D\n  A' \\<subseteq> carrier V\n  D \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n  A \\<inter> C = {}\n  D \\<subseteq> C\n  A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    V.module.lincomb d D =\n    V.module.lincomb\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     (A' \\<union> D)", "apply (subst sym[OF V.module.lincomb_smult])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> D \\<subseteq> carrier V\n 2. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> d \\<in> D \\<rightarrow> carrier K\n 3. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n                      \\<in> carrier K\n 4. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n                      V.module.lincomb\n                       (\\<lambda>w.\n                           \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                           d w)\n                       D =\n                      V.module.lincomb\n                       (\\<lambda>v.\n                           if v \\<in> A' then a' v\n                           else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                                d v)\n                       (A' \\<union> D)", "apply (simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n                      V.module.lincomb\n                       (\\<lambda>w.\n                           \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                           d w)\n                       D =\n                      V.module.lincomb\n                       (\\<lambda>v.\n                           if v \\<in> A' then a' v\n                           else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                                d v)\n                       (A' \\<union> D)", "apply (subst V.module.lincomb_union2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> finite (A' \\<union> D)\n 2. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> A' \\<union> D \\<subseteq> carrier V\n 3. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> A' \\<inter> D = {}\n 4. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> a' \\<in> A' \\<rightarrow> carrier K\n 5. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                          d w)\n                      \\<in> D \\<rightarrow> carrier K\n 6. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V; a' \\<in> A' \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<rightarrow> carrier K \\<and>\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> D \\<rightarrow> carrier K;\n     A \\<inter> C = {}; D \\<subseteq> C; A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> V.module.lincomb\n                       (\\<lambda>v.\n                           if v \\<in> A' then a' v\n                           else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                                d v)\n                       (A' \\<union> D) =\n                      V.module.lincomb\n                       (\\<lambda>v.\n                           if v \\<in> A' then a' v\n                           else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                                d v)\n                       (A' \\<union> D)", "by (auto)"], ["proof (state)\nthis:\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D)\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from\n      A'fin (*finiteness*)\n      A'inC (*in carrier*)\n      a'fun"], ["proof (chain)\npicking this:\n  finite A'\n  A' \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K", "(*coefficients valid*)"], ["proof (chain)\npicking this:\n  finite A'\n  A' \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K", "have lccomp2: \n      \"V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub> \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<odot>\\<^bsub>V\\<^esub> V.module.lincomb d D = \n      \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  finite A'\n  A' \\<subseteq> carrier V\n  a' \\<in> A' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    V.module.lincomb d D =\n    \\<zero>\\<^bsub>V\\<^esub>", "by (simp add: a'_lc \n        V.module.smult_minus_1  V.module.M.r_neg)"], ["proof (state)\nthis:\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from lccomp1 lccomp2"], ["proof (chain)\npicking this:\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D)\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  \\<zero>\\<^bsub>V\\<^esub>", "have lc0: \"V.module.lincomb (\\<lambda>v. if v\\<in>A' then a' v else \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<otimes>\\<^bsub>K\\<^esub> d v) (A'\\<union>D)\n      =\\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D)\n  V.module.lincomb a' A' \\<oplus>\\<^bsub>V\\<^esub>\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  V.module.lincomb d D =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. V.module.lincomb\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     (A' \\<union> D) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from disj a' v D"], ["proof (chain)\npicking this:\n  A \\<inter> C = {}\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n  v \\<in> D\n  D \\<subseteq> C", "have v_nin: \"v\\<notin>A'\""], ["proof (prove)\nusing this:\n  A \\<inter> C = {}\n  A' \\<subseteq> A \\<and>\n  a' \\<in> A' \\<rightarrow> carrier K \\<and>\n  V.module.lincomb d D = V.module.lincomb a' A'\n  v \\<in> D\n  D \\<subseteq> C\n\ngoal (1 subgoal):\n 1. v \\<notin> A'", "by auto"], ["proof (state)\nthis:\n  v \\<notin> A'\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from A'fin Dfin (*finiteness*)\n      A'inC DinC (*in carrier*)\n      e_fun d (*coefficients valid*)\n      A'sub D disj (*A' D are disjoint subsets*)\n      v dvnz (*d v is nonzero coefficient*)\n      lc0"], ["proof (chain)\npicking this:\n  finite A'\n  finite D\n  A' \\<subseteq> carrier V\n  D \\<subseteq> carrier V\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n  A' \\<subseteq> A\n  D \\<subseteq> C\n  A \\<inter> C = {}\n  v \\<in> D\n  d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D) =\n  \\<zero>\\<^bsub>V\\<^esub>", "have AC_ld: \"V.module.lin_dep (A\\<union>C)\""], ["proof (prove)\nusing this:\n  finite A'\n  finite D\n  A' \\<subseteq> carrier V\n  D \\<subseteq> carrier V\n  (\\<lambda>v.\n      if v \\<in> A' then a' v\n      else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n           d v)\n  \\<in> A' \\<union> D \\<rightarrow> carrier K\n  d \\<in> D \\<rightarrow> carrier K\n  A' \\<subseteq> A\n  D \\<subseteq> C\n  A \\<inter> C = {}\n  v \\<in> D\n  d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  V.module.lincomb\n   (\\<lambda>v.\n       if v \\<in> A' then a' v\n       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n            d v)\n   (A' \\<union> D) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. V.module.lin_dep (A \\<union> C)", "apply (intro V.module.lin_dep_crit[where ?A=\"A'\\<union>D\" and \n        ?S=\"A\\<union>C\" and ?a=\"\\<lambda>v. if v\\<in>A' then a' v else \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\\<otimes>\\<^bsub>K\\<^esub> d v\" and ?v=\"v\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> finite (A' \\<union> D)\n 2. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> A' \\<union> D \\<subseteq> A \\<union> C\n 3. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>v.\n                          if v \\<in> A' then a' v\n                          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                               d v)\n                      \\<in> A' \\<union> D \\<rightarrow> carrier K\n 4. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> v \\<in> A' \\<union> D\n 5. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (if v \\<in> A' then a' v\n                       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                            d v) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>\n 6. \\<lbrakk>finite A'; finite D; A' \\<subseteq> carrier V;\n     D \\<subseteq> carrier V;\n     (\\<lambda>v.\n         if v \\<in> A' then a' v\n         else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n              d v)\n     \\<in> A' \\<union> D \\<rightarrow> carrier K;\n     d \\<in> D \\<rightarrow> carrier K; A' \\<subseteq> A; D \\<subseteq> C;\n     A \\<inter> C = {}; v \\<in> D; d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>;\n     V.module.lincomb\n      (\\<lambda>v.\n          if v \\<in> A' then a' v\n          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n               d v)\n      (A' \\<union> D) =\n     \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> V.module.lincomb\n                       (\\<lambda>v.\n                           if v \\<in> A' then a' v\n                           else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n                                d v)\n                       (A' \\<union> D) =\n                      \\<zero>\\<^bsub>V\\<^esub>", "by (auto dest: integral)"], ["proof (state)\nthis:\n  V.module.lin_dep (A \\<union> C)\n\ngoal (1 subgoal):\n 1. \\<And>d D v.\n       \\<lbrakk>D \\<subseteq> C; d \\<in> D \\<rightarrow> carrier K;\n        T (V.module.lincomb d D) = \\<zero>\\<^bsub>W\\<^esub>; v \\<in> D;\n        d v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> False", "from AC_ld ACbasis"], ["proof (chain)\npicking this:\n  V.module.lin_dep (A \\<union> C)\n  V.basis (A \\<union> C)", "show False"], ["proof (prove)\nusing this:\n  V.module.lin_dep (A \\<union> C)\n  V.basis (A \\<union> C)\n\ngoal (1 subgoal):\n 1. False", "by (unfold V.basis_def, auto)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?D1 \\<subseteq> C; ?d1 \\<in> ?D1 \\<rightarrow> carrier K;\n   T (V.module.lincomb ?d1 ?D1) = \\<zero>\\<^bsub>W\\<^esub>; ?v1 \\<in> ?D1;\n   ?d1 ?v1 \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have C'_card: \"inj_on T C\" \"card C = card ?C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on T C &&& card C = card (T ` C)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on T C\n 2. card C = card (T ` C)", "show \"inj_on T C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on T C", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> inj_on T C \\<Longrightarrow> False", "assume \"\\<not>inj_on T C\""], ["proof (state)\nthis:\n  \\<not> inj_on T C\n\ngoal (1 subgoal):\n 1. \\<not> inj_on T C \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> inj_on T C", "obtain v w where \"v\\<in>C\" \"w\\<in>C\" \"v\\<noteq>w\" \"T v = T w\""], ["proof (prove)\nusing this:\n  \\<not> inj_on T C\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold inj_on_def, auto)"], ["proof (state)\nthis:\n  v \\<in> C\n  w \\<in> C\n  v \\<noteq> w\n  T v = T w\n\ngoal (1 subgoal):\n 1. \\<not> inj_on T C \\<Longrightarrow> False", "from this CinC"], ["proof (chain)\npicking this:\n  v \\<in> C\n  w \\<in> C\n  v \\<noteq> w\n  T v = T w\n  C \\<subseteq> carrier V", "show False"], ["proof (prove)\nusing this:\n  v \\<in> C\n  w \\<in> C\n  v \\<noteq> w\n  T v = T w\n  C \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. False", "apply (intro lc_in_ker[where ?D1=\"{v,w}\" and ?d1=\"\\<lambda>x. if x=v then \\<one>\\<^bsub>K\\<^esub> else \\<ominus>\\<^bsub>K\\<^esub>\\<one>\\<^bsub>K\\<^esub>\"\n          and ?v1=\"v\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> {v, w} \\<subseteq> C\n 2. \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          if x = v then \\<one>\\<^bsub>K\\<^esub>\n                          else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>)\n                      \\<in> {v, w} \\<rightarrow> carrier K\n 3. \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> T (V.module.lincomb\n                          (\\<lambda>x.\n                              if x = v then \\<one>\\<^bsub>K\\<^esub>\n                              else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>)\n                          {v, w}) =\n                      \\<zero>\\<^bsub>W\\<^esub>\n 4. \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> v \\<in> {v, w}\n 5. \\<lbrakk>v \\<in> C; w \\<in> C; v \\<noteq> w; T v = T w;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> (if v = v then \\<one>\\<^bsub>K\\<^esub>\n                       else \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>) \\<noteq>\n                      \\<zero>\\<^bsub>K\\<^esub>", "by (auto simp add: V.module.lincomb_def hom_sum ring_subset_carrier \n              W.module.smult_minus_1 r_neg T_im)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on T C\n\ngoal (1 subgoal):\n 1. card C = card (T ` C)", "from this Cfin"], ["proof (chain)\npicking this:\n  inj_on T C\n  finite C", "show \"card C = card ?C'\""], ["proof (prove)\nusing this:\n  inj_on T C\n  finite C\n\ngoal (1 subgoal):\n 1. card C = card (T ` C)", "by (metis card_image)"], ["proof (state)\nthis:\n  card C = card (T ` C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on T C\n  card C = card (T ` C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "let ?f=\"the_inv_into C T\""], ["proof (state)\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have f: \"\\<And>x. x\\<in>C \\<Longrightarrow> ?f (T x) = x\" \"\\<And>y. y\\<in>?C' \\<Longrightarrow> T (?f y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x) &&&\n    (\\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y)", "apply (insert C'_card(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> C; inj_on T C\\<rbrakk>\n       \\<Longrightarrow> the_inv_into C T (T x) = x\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> T ` C; inj_on T C\\<rbrakk>\n       \\<Longrightarrow> T (the_inv_into C T y) = y", "apply (metis the_inv_into_f_f)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> T ` C; inj_on T C\\<rbrakk>\n       \\<Longrightarrow> T (the_inv_into C T y) = y", "by (metis f_the_inv_into_f)"], ["proof (state)\nthis:\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "(*We show C' is a basis for the image. First we show it is linearly independent.*)"], ["proof (state)\nthis:\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have C'_li: \"im.lin_indpt ?C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im.lin_indpt (T ` C)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "assume Cld: \"\\<not>im.lin_indpt ?C'\""], ["proof (state)\nthis:\n  \\<not> im.lin_indpt (T ` C)\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "from Cld cim subs_im"], ["proof (chain)\npicking this:\n  \\<not> im.lin_indpt (T ` C)\n  T ` C \\<subseteq> imT\n  subspace K imT W", "have CldW: \"W.module.lin_dep ?C'\""], ["proof (prove)\nusing this:\n  \\<not> im.lin_indpt (T ` C)\n  T ` C \\<subseteq> imT\n  subspace K imT W\n\ngoal (1 subgoal):\n 1. W.module.lin_dep (T ` C)", "apply (subst sym[OF W.module.span_li_not_depend(2)[where ?S=\"T`C\" and ?N=\"imT\"]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<not> im.lin_indpt (T ` C); T ` C \\<subseteq> imT;\n     subspace K imT W\\<rbrakk>\n    \\<Longrightarrow> T ` C \\<subseteq> imT\n 2. \\<lbrakk>\\<not> im.lin_indpt (T ` C); T ` C \\<subseteq> imT;\n     subspace K imT W\\<rbrakk>\n    \\<Longrightarrow> LinearCombinations.submodule K imT W\n 3. \\<lbrakk>\\<not> im.lin_indpt (T ` C); T ` C \\<subseteq> imT;\n     subspace K imT W\\<rbrakk>\n    \\<Longrightarrow> im.lin_dep (T ` C)", "by auto"], ["proof (state)\nthis:\n  W.module.lin_dep (T ` C)\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "from C CldW"], ["proof (chain)\npicking this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  W.module.lin_dep (T ` C)", "have \"\\<exists>c' v'. (c'\\<in> (?C'\\<rightarrow>carrier K)) \\<and> (W.module.lincomb c' ?C' = \\<zero>\\<^bsub>W\\<^esub>) \n      \\<and> (v'\\<in>?C') \\<and> (c' v'\\<noteq> \\<zero>\\<^bsub>K\\<^esub>)\""], ["proof (prove)\nusing this:\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  W.module.lin_dep (T ` C)\n\ngoal (1 subgoal):\n 1. \\<exists>c' v'.\n       c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n       W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n       v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "by (intro W.module.finite_lin_dep, auto)"], ["proof (state)\nthis:\n  \\<exists>c' v'.\n     c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n     W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n     v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>c' v'.\n     c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n     W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n     v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "obtain c' v' where c': \"(c'\\<in> (?C'\\<rightarrow>carrier K)) \\<and> (W.module.lincomb c' ?C' = \\<zero>\\<^bsub>W\\<^esub>) \n      \\<and> (v'\\<in>?C') \\<and> (c' v'\\<noteq> \\<zero>\\<^bsub>K\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>c' v'.\n     c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n     W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n     v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>c' v'.\n        c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n        W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n        v' \\<in> T ` C \\<and>\n        c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n  v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "hence c'fun: \"(c'\\<in> (?C'\\<rightarrow>carrier K))\" and c'lc: \"(W.module.lincomb c' ?C' = \\<zero>\\<^bsub>W\\<^esub>)\" and \n      v':\"(v'\\<in>?C')\" and cvnz: \"(c' v'\\<noteq> \\<zero>\\<^bsub>K\\<^esub>)\""], ["proof (prove)\nusing this:\n  c' \\<in> T ` C \\<rightarrow> carrier K \\<and>\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub> \\<and>\n  v' \\<in> T ` C \\<and> c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. (c' \\<in> T ` C \\<rightarrow> carrier K &&&\n     W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>) &&&\n    v' \\<in> T ` C &&& c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>\n  v' \\<in> T ` C\n  c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "(*can't get c' directly with metis/auto with W.module.finite_lin_dep*)"], ["proof (state)\nthis:\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>\n  v' \\<in> T ` C\n  c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "txt \\<open>We take the inverse image of $C'$ under $T$ to get a linear combination of $C$ that is \nin the kernel and hence a linear combination of $A$. This contradicts $A\\cup C$ being linearly\nindependent.\\<close>"], ["proof (state)\nthis:\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>\n  v' \\<in> T ` C\n  c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "let ?c=\"\\<lambda>v. c' (T v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "from c'fun"], ["proof (chain)\npicking this:\n  c' \\<in> T ` C \\<rightarrow> carrier K", "have c_fun: \"?c\\<in> C\\<rightarrow>carrier K\""], ["proof (prove)\nusing this:\n  c' \\<in> T ` C \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "from Cfin (*C finite*)\n      c_fun c'fun (*coefficients valid*)\n      C'_card (*bijective*)\n      CinC (*C in carrier*)\n      f (*inverse to T*) \n      c'lc"], ["proof (chain)\npicking this:\n  finite C\n  (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  inj_on T C\n  card C = card (T ` C)\n  C \\<subseteq> carrier V\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>", "(*lc c' = 0*)"], ["proof (chain)\npicking this:\n  finite C\n  (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  inj_on T C\n  card C = card (T ` C)\n  C \\<subseteq> carrier V\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>", "have \"T (V.module.lincomb ?c C) = \\<zero>\\<^bsub>W\\<^esub>\""], ["proof (prove)\nusing this:\n  finite C\n  (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  inj_on T C\n  card C = card (T ` C)\n  C \\<subseteq> carrier V\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  W.module.lincomb c' (T ` C) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. T (V.module.lincomb (\\<lambda>v. c' (T v)) C) = \\<zero>\\<^bsub>W\\<^esub>", "apply (unfold V.module.lincomb_def W.module.lincomb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite C;\n     (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K;\n     c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> T (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>C. c'\n                      (T v) \\<odot>\\<^bsub>V\\<^esub>\n                     v) =\n                      \\<zero>\\<^bsub>W\\<^esub>", "apply (subst hom_sum, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite C;\n     (\\<lambda>v. c' (T v)) \\<in> C \\<rightarrow> carrier K;\n     c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>a\\<in>C. T\n                    (c' (T a) \\<odot>\\<^bsub>V\\<^esub> a)) =\n                      \\<zero>\\<^bsub>W\\<^esub>", "apply (simp cong: finsum_cong add: ring_subset_carrier coeff_in_ring)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite C; c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>i\\<in>C. c'\n                    (T i) \\<odot>\\<^bsub>W\\<^esub>\n                   T i) =\n                      \\<zero>\\<^bsub>W\\<^esub>", "apply (subst finsum_reindex[where ?f=\"\\<lambda>w. c' w \\<odot>\\<^bsub>W\\<^esub> w\" and ?h=\"T\" and ?A=\"C\", THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite C; c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w. c' w \\<odot>\\<^bsub>W\\<^esub> w)\n                      \\<in> T ` C \\<rightarrow> carrier W\n 2. \\<lbrakk>finite C; c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> inj_on T C\n 3. \\<lbrakk>finite C; c' \\<in> T ` C \\<rightarrow> carrier K; inj_on T C;\n     card C = card (T ` C); C \\<subseteq> carrier V;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                                     C. c' v \\<odot>\\<^bsub>W\\<^esub> v) =\n     \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>w\\<in>T `\n                C. c' w \\<odot>\\<^bsub>W\\<^esub> w) =\n                      \\<zero>\\<^bsub>W\\<^esub>", "by auto"], ["proof (state)\nthis:\n  T (V.module.lincomb (\\<lambda>v. c' (T v)) C) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> im.lin_indpt (T ` C) \\<Longrightarrow> False", "with f c'fun cvnz v'"], ["proof (chain)\npicking this:\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v' \\<in> T ` C\n  T (V.module.lincomb (\\<lambda>v. c' (T v)) C) = \\<zero>\\<^bsub>W\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  c' \\<in> T ` C \\<rightarrow> carrier K\n  c' v' \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  v' \\<in> T ` C\n  T (V.module.lincomb (\\<lambda>v. c' (T v)) C) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by (intro lc_in_ker[where ?D1=\"C\" and ?d1=\"?c\" and ?v1=\"?f v'\"], auto)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  im.lin_indpt (T ` C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have C'_gen: \"im.gen_set ?C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im.gen_set (T ` C)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. im.gen_set (T ` C)", "have C'_span: \"span ?C' = imT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.span (T ` C) = imT", "proof (rule equalityI)"], ["proof (state)\ngoal (2 subgoals):\n 1. W.module.span (T ` C) \\<subseteq> imT\n 2. imT \\<subseteq> W.module.span (T ` C)", "from cim subs_im"], ["proof (chain)\npicking this:\n  T ` C \\<subseteq> imT\n  subspace K imT W", "show \"W.module.span ?C' \\<subseteq> imT\""], ["proof (prove)\nusing this:\n  T ` C \\<subseteq> imT\n  subspace K imT W\n\ngoal (1 subgoal):\n 1. W.module.span (T ` C) \\<subseteq> imT", "by (intro span_is_subset, unfold subspace_def, auto)"], ["proof (state)\nthis:\n  W.module.span (T ` C) \\<subseteq> imT\n\ngoal (1 subgoal):\n 1. imT \\<subseteq> W.module.span (T ` C)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. imT \\<subseteq> W.module.span (T ` C)", "show \"imT\\<subseteq>W.module.span ?C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. imT \\<subseteq> W.module.span (T ` C)", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "assume w: \"w\\<in>imT\""], ["proof (state)\nthis:\n  w \\<in> imT\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "from this finA Cfin AinC CinC"], ["proof (chain)\npicking this:\n  w \\<in> imT\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V", "obtain v where v_inC: \"v\\<in>carrier V\" and w_eq_T_v: \"w= T v\""], ["proof (prove)\nusing this:\n  w \\<in> imT\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier V; w = T v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold im_def image_def, auto)"], ["proof (state)\nthis:\n  v \\<in> carrier V\n  w = T v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "from finA Cfin AinC CinC v_inC ACgen"], ["proof (chain)\npicking this:\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V\n  v \\<in> carrier V\n  V.module.gen_set (A \\<union> C)", "have \"\\<exists>a.  a \\<in> A\\<union>C \\<rightarrow> carrier K\\<and> V.module.lincomb a (A\\<union>C) = v\""], ["proof (prove)\nusing this:\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V\n  v \\<in> carrier V\n  V.module.gen_set (A \\<union> C)\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       a \\<in> A \\<union> C \\<rightarrow> carrier K \\<and>\n       V.module.lincomb a (A \\<union> C) = v", "by (intro V.module.finite_in_span, auto)"], ["proof (state)\nthis:\n  \\<exists>a.\n     a \\<in> A \\<union> C \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a (A \\<union> C) = v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "then"], ["proof (chain)\npicking this:\n  \\<exists>a.\n     a \\<in> A \\<union> C \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a (A \\<union> C) = v", "obtain a where \n          a_fun: \"a \\<in> A\\<union>C \\<rightarrow> carrier K\" and\n          lc_a_v: \"v= V.module.lincomb a (A\\<union>C)\""], ["proof (prove)\nusing this:\n  \\<exists>a.\n     a \\<in> A \\<union> C \\<rightarrow> carrier K \\<and>\n     V.module.lincomb a (A \\<union> C) = v\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A \\<union> C \\<rightarrow> carrier K;\n         v = V.module.lincomb a (A \\<union> C)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A \\<union> C \\<rightarrow> carrier K\n  v = V.module.lincomb a (A \\<union> C)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "let ?a'=\"\\<lambda>v. a (?f v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "from finA Cfin AinC CinC a_fun disj Ainker f C'_card"], ["proof (chain)\npicking this:\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V\n  a \\<in> A \\<union> C \\<rightarrow> carrier K\n  A \\<inter> C = {}\n  A \\<subseteq> carrier (V.vs kerT)\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  inj_on T C\n  card C = card (T ` C)", "have Tv: \"T v = W.module.lincomb ?a' ?C'\""], ["proof (prove)\nusing this:\n  finite A\n  finite C\n  A \\<subseteq> carrier V\n  C \\<subseteq> carrier V\n  a \\<in> A \\<union> C \\<rightarrow> carrier K\n  A \\<inter> C = {}\n  A \\<subseteq> carrier (V.vs kerT)\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n  inj_on T C\n  card C = card (T ` C)\n\ngoal (1 subgoal):\n 1. T v = W.module.lincomb (\\<lambda>v. a (the_inv_into C T v)) (T ` C)", "apply (subst lc_a_v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V; a \\<in> A \\<union> C \\<rightarrow> carrier K;\n     A \\<inter> C = {}; A \\<subseteq> carrier (V.vs kerT);\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C)\\<rbrakk>\n    \\<Longrightarrow> T (V.module.lincomb a (A \\<union> C)) =\n                      W.module.lincomb (\\<lambda>v. a (the_inv_into C T v))\n                       (T ` C)", "apply (subst V.module.lincomb_union, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     a \\<in> C \\<rightarrow> carrier K;\n     A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C)\\<rbrakk>\n    \\<Longrightarrow> T (V.module.lincomb a A) \\<oplus>\\<^bsub>W\\<^esub>\n                      T (V.module.lincomb a C) =\n                      W.module.lincomb (\\<lambda>v. a (the_inv_into C T v))\n                       (T ` C)", "(*Break up the union A\\<union>C*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     a \\<in> C \\<rightarrow> carrier K;\n     A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C)\\<rbrakk>\n    \\<Longrightarrow> T (V.module.lincomb a A) \\<oplus>\\<^bsub>W\\<^esub>\n                      T (V.module.lincomb a C) =\n                      W.module.lincomb (\\<lambda>v. a (the_inv_into C T v))\n                       (T ` C)", "apply (unfold lincomb_def V.module.lincomb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V;\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     a \\<in> C \\<rightarrow> carrier K;\n     A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C)\\<rbrakk>\n    \\<Longrightarrow> T (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a\n                      v \\<odot>\\<^bsub>V\\<^esub>\n                     v) \\<oplus>\\<^bsub>W\\<^esub>\n                      T (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>C. a\n                      v \\<odot>\\<^bsub>V\\<^esub>\n                     v) =\n                      (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                C. a (the_inv_into C T v) \\<odot>\\<^bsub>W\\<^esub> v)", "apply (subst hom_sum, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V; A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C); a \\<in> A \\<rightarrow> carrier K;\n     a \\<in> C \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>aa\\<in>A. T\n                     (a aa \\<odot>\\<^bsub>V\\<^esub>\n                      aa)) \\<oplus>\\<^bsub>W\\<^esub>\n                      T (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>C. a\n                      v \\<odot>\\<^bsub>V\\<^esub>\n                     v) =\n                      (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                C. a (the_inv_into C T v) \\<odot>\\<^bsub>W\\<^esub> v)", "(*Take T inside the sum over A*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V; A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C); a \\<in> A \\<rightarrow> carrier K;\n     a \\<in> C \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>aa\\<in>A. T\n                     (a aa \\<odot>\\<^bsub>V\\<^esub>\n                      aa)) \\<oplus>\\<^bsub>W\\<^esub>\n                      T (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>C. a\n                      v \\<odot>\\<^bsub>V\\<^esub>\n                     v) =\n                      (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                C. a (the_inv_into C T v) \\<odot>\\<^bsub>W\\<^esub> v)", "apply (simp add: subsetD coeff_in_ring\n            hom_sum (*Take T inside the sum over C*)\n            T_ker (*all terms become 0 because the vectors are in the kernel.*)\n            )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V; A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C); a \\<in> A \\<rightarrow> carrier K;\n     a \\<in> C \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>C. T\n                    (a v \\<odot>\\<^bsub>V\\<^esub> v)) =\n                      (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>T `\n                C. a (the_inv_into C T v) \\<odot>\\<^bsub>W\\<^esub> v)", "apply (subst finsum_reindex[where ?h=\"T\" and ?f=\"\\<lambda>v. ?a' v\\<odot>\\<^bsub>W\\<^esub> v\"], auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n        C \\<subseteq> carrier V; A \\<inter> C = {}; A \\<subseteq> kerT;\n        \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n        \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n        inj_on T C; card C = card (T ` C);\n        a \\<in> A \\<rightarrow> carrier K;\n        a \\<in> C \\<rightarrow> carrier K; xa \\<in> C\\<rbrakk>\n       \\<Longrightarrow> a xa \\<odot>\\<^bsub>W\\<^esub> T xa \\<in> carrier W\n 2. \\<lbrakk>finite A; finite C; A \\<subseteq> carrier V;\n     C \\<subseteq> carrier V; A \\<inter> C = {}; A \\<subseteq> kerT;\n     \\<And>x. x \\<in> C \\<Longrightarrow> the_inv_into C T (T x) = x;\n     \\<And>y. y \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T y) = y;\n     inj_on T C; card C = card (T ` C); a \\<in> A \\<rightarrow> carrier K;\n     a \\<in> C \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>W\\<^esub>v\\<in>C. T\n                    (a v \\<odot>\\<^bsub>V\\<^esub> v)) =\n                      (\\<Oplus>\\<^bsub>W\\<^esub>x\\<in>C. a\n                    (the_inv_into C T (T x)) \\<odot>\\<^bsub>W\\<^esub>\n                   T x)", "by (auto cong: finsum_cong simp add: coeff_in_ring ring_subset_carrier)"], ["proof (state)\nthis:\n  T v = W.module.lincomb (\\<lambda>v. a (the_inv_into C T v)) (T ` C)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "from a_fun f"], ["proof (chain)\npicking this:\n  a \\<in> A \\<union> C \\<rightarrow> carrier K\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1", "have a'_fun: \"?a'\\<in>?C' \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> A \\<union> C \\<rightarrow> carrier K\n  ?x1 \\<in> C \\<Longrightarrow> the_inv_into C T (T ?x1) = ?x1\n  ?y1 \\<in> T ` C \\<Longrightarrow> T (the_inv_into C T ?y1) = ?y1\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> imT \\<Longrightarrow> x \\<in> W.module.span (T ` C)", "from C'fin CinC this w_eq_T_v a'_fun Tv"], ["proof (chain)\npicking this:\n  finite (T ` C)\n  C \\<subseteq> carrier V\n  (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K\n  w = T v\n  (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K\n  T v = W.module.lincomb (\\<lambda>v. a (the_inv_into C T v)) (T ` C)", "show \"w \\<in> LinearCombinations.module.span K W (T ` C)\""], ["proof (prove)\nusing this:\n  finite (T ` C)\n  C \\<subseteq> carrier V\n  (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K\n  w = T v\n  (\\<lambda>v. a (the_inv_into C T v)) \\<in> T ` C \\<rightarrow> carrier K\n  T v = W.module.lincomb (\\<lambda>v. a (the_inv_into C T v)) (T ` C)\n\ngoal (1 subgoal):\n 1. w \\<in> W.module.span (T ` C)", "by (subst finite_span, auto)"], ["proof (state)\nthis:\n  w \\<in> W.module.span (T ` C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  imT \\<subseteq> W.module.span (T ` C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W.module.span (T ` C) = imT\n\ngoal (1 subgoal):\n 1. im.gen_set (T ` C)", "from this subs_im CinC"], ["proof (chain)\npicking this:\n  W.module.span (T ` C) = imT\n  subspace K imT W\n  C \\<subseteq> carrier V", "show ?thesis"], ["proof (prove)\nusing this:\n  W.module.span (T ` C) = imT\n  subspace K imT W\n  C \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. im.gen_set (T ` C)", "apply (subst span_li_not_depend(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>W.module.span (T ` C) = imT; subspace K imT W;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> T ` C \\<subseteq> imT\n 2. \\<lbrakk>W.module.span (T ` C) = imT; subspace K imT W;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> LinearCombinations.submodule K imT W\n 3. \\<lbrakk>W.module.span (T ` C) = imT; subspace K imT W;\n     C \\<subseteq> carrier V\\<rbrakk>\n    \\<Longrightarrow> W.module.span (T ` C) = carrier (W.vs imT)", "by (unfold im_def subspace_def, auto)"], ["proof (state)\nthis:\n  im.gen_set (T ` C)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  im.gen_set (T ` C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from C'_li C'_gen C cim"], ["proof (chain)\npicking this:\n  im.lin_indpt (T ` C)\n  im.gen_set (T ` C)\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  T ` C \\<subseteq> imT", "have C'_basis: \"im.basis  (T`C)\""], ["proof (prove)\nusing this:\n  im.lin_indpt (T ` C)\n  im.gen_set (T ` C)\n  finite C \\<and>\n  C \\<subseteq> carrier V \\<and>\n  C \\<subseteq> V.module.span B \\<and>\n  C \\<inter> A = {} \\<and>\n  int (card C) \\<le> int (card B) - int (card A) \\<and>\n  V.module.span (A \\<union> C) = V.module.span B\n  T ` C \\<subseteq> imT\n\ngoal (1 subgoal):\n 1. im.basis (T ` C)", "by (unfold im.basis_def, auto)"], ["proof (state)\nthis:\n  im.basis (T ` C)\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "have C_card_im: \"card C = (vectorspace.dim K (W.vs imT))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card C = im.dim", "using C'_basis C'_card(2) C'fin im.dim_basis"], ["proof (prove)\nusing this:\n  im.basis (T ` C)\n  card C = card (T ` C)\n  finite (T ` C)\n  \\<lbrakk>finite ?A; im.basis ?A\\<rbrakk>\n  \\<Longrightarrow> im.dim = card ?A\n\ngoal (1 subgoal):\n 1. card C = im.dim", "by auto"], ["proof (state)\nthis:\n  card C = im.dim\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from finA Abasis"], ["proof (chain)\npicking this:\n  finite A\n  ker.basis A", "have  \"ker.dim = card A\""], ["proof (prove)\nusing this:\n  finite A\n  ker.basis A\n\ngoal (1 subgoal):\n 1. ker.dim = card A", "by (rule ker.dim_basis)"], ["proof (state)\nthis:\n  ker.dim = card A\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "note * = this C_card_im cardEq"], ["proof (state)\nthis:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n\ngoal (2 subgoals):\n 1. im.dim + ker.dim = V.dim\n 2. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "show \"(vectorspace.dim K (W.vs imT)) + (vectorspace.dim K (V.vs kerT)) = V.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im.dim + ker.dim = V.dim", "using *"], ["proof (prove)\nusing this:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n\ngoal (1 subgoal):\n 1. im.dim + ker.dim = V.dim", "by auto"], ["proof (state)\nthis:\n  im.dim + ker.dim = V.dim\n\ngoal (1 subgoal):\n 1. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "assume \"T` (carrier V) = carrier W\""], ["proof (state)\nthis:\n  T ` carrier V = carrier W\n\ngoal (1 subgoal):\n 1. T ` carrier V = carrier W \\<Longrightarrow> W.fin_dim", "from * surj_imp_imT_carrier[OF this]"], ["proof (chain)\npicking this:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  imT = carrier W", "show \"W.fin_dim\""], ["proof (prove)\nusing this:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  imT = carrier W\n\ngoal (1 subgoal):\n 1. W.fin_dim", "using C'_basis C'fin"], ["proof (prove)\nusing this:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  imT = carrier W\n  im.basis (T ` C)\n  finite (T ` C)\n\ngoal (1 subgoal):\n 1. W.fin_dim", "unfolding W.fin_dim_def im.basis_def"], ["proof (prove)\nusing this:\n  ker.dim = card A\n  card C = im.dim\n  card (A \\<union> C) = card A + card C\n  card (A \\<union> C) = card B\n  card (A \\<union> C) = V.dim\n  imT = carrier W\n  im.lin_indpt (T ` C) \\<and>\n  im.gen_set (T ` C) \\<and> T ` C \\<subseteq> carrier (W.vs imT)\n  finite (T ` C)\n\ngoal (1 subgoal):\n 1. \\<exists>A.\n       finite A \\<and> A \\<subseteq> carrier W \\<and> W.module.gen_set A", "by auto"], ["proof (state)\nthis:\n  W.fin_dim\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem (in linear_map) rank_nullity: \n  assumes fd: \"V.fin_dim\"\n  shows \"(vectorspace.dim K (W.vs imT)) + (vectorspace.dim K (V.vs kerT)) = V.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim", "by (rule rank_nullity_main[OF fd])"], ["", "end"]]}