{"file_name": "/home/qj213/afp-2021-10-22/thys/Abortable_Linearizable_Modules/Idempotence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abortable_Linearizable_Modules", "problem_names": ["lemmas ids = id1 id2", "lemmas comp_simps = hide_def composition_def ioa_def par2_def is_trans_def\n  start_def actions_def asig_def trans_def", "lemmas trans_defs = Inv_def Lin_def Resp_def Init_def\n  Abort_def Reco_def", "lemma trans_elim:\n  fixes  s t a s' t' P\n  assumes \"(s,t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s',t')\"\n  obtains \n    (Invoke1) i p c\n      where \"Inv p c s s' \\<and> t = t'\"\n      and \"i < id1\" and \"a = Invoke i p c\"\n  | (Invoke2) i p c\n      where \"Inv p c t t' \\<and> s = s'\"\n      and \"id1 \\<le> i \\<and> i < id2\" and \"a = Invoke i p c\"\n  | (Switch1) p c av\n      where \"Abort p c av s s' \\<and> Init p c av t t'\"\n      and \"a = Switch id1 p c av\"\n  | (Switch2) p c av \n      where \"s = s' \\<and> Abort p c av t t'\"\n      and \"a = Switch id2 p c av\"\n  | (Response1) i p ou\n      where \"Resp p ou s s'\\<and> t = t'\"\n      and \"i < id1\" and \"a = Response i p ou\"\n  | (Response2) i p ou \n      where \"Resp p ou t t' \\<and> s = s'\"\n      and \"id1 \\<le> i \\<and> i < id2\" and \"a = Response i p ou\"\n  | (Lin1) \"Lin s s' \\<and> t = t'\" and \"a = Linearize 0\"\n  | (Lin2) \"Lin t t' \\<and> s = s'\" and \"a = Linearize id1\"\n  | (Reco2) \"Reco t t' \\<and> s = s'\" and \"a = Recover id1\"", "lemma P1_invariant:\nshows \"invariant (composition) P1\"", "lemma P2_invariant:\nshows \"invariant (composition) P2\"", "lemma P16_invariant:\nshows \"invariant (composition) P16\"", "lemma P3_invariant:\nshows \"invariant (composition) P3\"", "lemma P4_invariant:\nshows \"invariant (composition) P4\"", "lemma P5_invariant:\nshows \"invariant (composition) P5\"", "lemma P13_invariant:\nshows \"invariant (composition) P13\"", "lemma P20_invariant:\nshows \"invariant (composition) P20\"", "lemma P18_invariant:\nshows \"invariant (composition) P18\"", "lemma P14_invariant:\nshows \"invariant (composition) P14\"", "lemma P15_invariant:\nshows \"invariant (composition) P15\"", "lemma P6_invariant:\nshows \"invariant (composition) P6\"", "lemma P7_invariant:\nshows \"invariant (composition) P7\"", "lemma P10_invariant:\nshows \"invariant (composition) P10\"", "lemma P11_invariant:\nshows \"invariant (composition) P11\"", "lemma P8_invariant:\nshows \"invariant (composition) P8\"", "lemma P8a_invariant:\nshows \"invariant (composition) P8a\"", "lemma P12_invariant:\nshows \"invariant (composition) P12\"", "lemma P19_invariant:\nshows \"invariant (composition) P19\"", "lemma P9_invariant:\nshows \"invariant (composition) P9\"", "lemma P17_invariant:\nshows \"invariant (composition) P17\"", "lemma P21_invariant:\nshows \"invariant (composition) P21\"", "lemma P22_invariant:\nshows \"invariant (composition) P22\"", "lemma P23_invariant:\nshows \"invariant (composition) P23\"", "lemma P26_invariant:\nshows \"invariant (composition) P26\"", "lemma P25_invariant:\nshows \"invariant (composition) P25\"", "theorem idempotence: \n  shows \"((composition) =<| (ioa 0 id2))\""], "translations": [["", "lemmas ids = id1 id2"], ["", "definition composition where\n  \"composition  \\<equiv> \n     hide ((ioa 0 id1) \\<parallel> (ioa id1 id2))\n          {act . \\<exists>p c av . act = Switch id1 p c av }\""], ["", "lemmas comp_simps = hide_def composition_def ioa_def par2_def is_trans_def\n  start_def actions_def asig_def trans_def"], ["", "lemmas trans_defs = Inv_def Lin_def Resp_def Init_def\n  Abort_def Reco_def"], ["", "declare if_split_asm [split]"], ["", "subsection \\<open>A case rule for decomposing the transition relation \n  of the composition of two SLins\\<close>"], ["", "declare comp_simps [simp]"], ["", "lemma trans_elim:\n  fixes  s t a s' t' P\n  assumes \"(s,t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s',t')\"\n  obtains \n    (Invoke1) i p c\n      where \"Inv p c s s' \\<and> t = t'\"\n      and \"i < id1\" and \"a = Invoke i p c\"\n  | (Invoke2) i p c\n      where \"Inv p c t t' \\<and> s = s'\"\n      and \"id1 \\<le> i \\<and> i < id2\" and \"a = Invoke i p c\"\n  | (Switch1) p c av\n      where \"Abort p c av s s' \\<and> Init p c av t t'\"\n      and \"a = Switch id1 p c av\"\n  | (Switch2) p c av \n      where \"s = s' \\<and> Abort p c av t t'\"\n      and \"a = Switch id2 p c av\"\n  | (Response1) i p ou\n      where \"Resp p ou s s'\\<and> t = t'\"\n      and \"i < id1\" and \"a = Response i p ou\"\n  | (Response2) i p ou \n      where \"Resp p ou t t' \\<and> s = s'\"\n      and \"id1 \\<le> i \\<and> i < id2\" and \"a = Response i p ou\"\n  | (Lin1) \"Lin s s' \\<and> t = t'\" and \"a = Linearize 0\"\n  | (Lin2) \"Lin t t' \\<and> s = s'\" and \"a = Linearize id1\"\n  | (Reco2) \"Reco t t' \\<and> s = s'\" and \"a = Recover id1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p c i.\n                \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                 a = Invoke i p c\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>p c i.\n        \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n         a = Invoke i p c\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>p c av.\n        \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n         a = Switch id1 p c av\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>p c av.\n        \\<lbrakk>s = s' \\<and> Abort p c av t t';\n         a = Switch id2 p c av\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>p ou i.\n        \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n         a = Response i p ou\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>p ou i.\n        \\<lbrakk>Resp p ou t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n         a = Response i p ou\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof %invisible (cases a)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Invoke x11 x12 x13\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Invoke i p c)"], ["proof (state)\nthis:\n  a = Invoke i p c\n\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Invoke x11 x12 x13\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "with assms"], ["proof (chain)\npicking this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Invoke i p c", "have\n    \"(Inv p c s s' \\<and> t = t' \\<and> i < id1)\n      \\<or> (Inv p c t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2)\""], ["proof (prove)\nusing this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Invoke i p c\n\ngoal (1 subgoal):\n 1. Inv p c s s' \\<and> t = t' \\<and> i < id1 \\<or>\n    Inv p c t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2", "by auto"], ["proof (state)\nthis:\n  Inv p c s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Inv p c t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Invoke x11 x12 x13\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv p c s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Inv p c t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n\ngoal (1 subgoal):\n 1. thesis", "using Invoke that"], ["proof (prove)\nusing this:\n  Inv p c s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Inv p c t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n  \\<lbrakk>Inv ?p1 ?c1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Inv ?p1 ?c1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Abort ?p1 ?c1 ?av1 s s' \\<and> Init ?p1 ?c1 ?av1 t t';\n   a = Switch id1 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s = s' \\<and> Abort ?p1 ?c1 ?av1 t t';\n   a = Switch id2 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Response i p ou)"], ["proof (state)\nthis:\n  a = Response i p ou\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "with assms"], ["proof (chain)\npicking this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Response i p ou", "have\n    \"(Resp p ou s s' \\<and> t = t' \\<and> i < id1)\n      \\<or> (Resp p ou t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2)\""], ["proof (prove)\nusing this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Response i p ou\n\ngoal (1 subgoal):\n 1. Resp p ou s s' \\<and> t = t' \\<and> i < id1 \\<or>\n    Resp p ou t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2", "by auto"], ["proof (state)\nthis:\n  Resp p ou s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Resp p ou t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Response x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Resp p ou s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Resp p ou t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n\ngoal (1 subgoal):\n 1. thesis", "using Response that"], ["proof (prove)\nusing this:\n  Resp p ou s s' \\<and> t = t' \\<and> i < id1 \\<or>\n  Resp p ou t t' \\<and> s = s' \\<and> id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n  \\<lbrakk>Inv ?p1 ?c1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Inv ?p1 ?c1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Abort ?p1 ?c1 ?av1 s s' \\<and> Init ?p1 ?c1 ?av1 t t';\n   a = Switch id1 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s = s' \\<and> Abort ?p1 ?c1 ?av1 t t';\n   a = Switch id2 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Switch i p c av)"], ["proof (state)\nthis:\n  a = Switch i p c av\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "with assms ids"], ["proof (chain)\npicking this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  0 < id1\n  id1 < id2\n  a = Switch i p c av", "have\n    \"(i = id1 \\<and> Abort p c av s s'\\<and> Init p c av t t')\n       \\<or> (i = id2 \\<and> s = s' \\<and> Abort p c av t t')\""], ["proof (prove)\nusing this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  0 < id1\n  id1 < id2\n  a = Switch i p c av\n\ngoal (1 subgoal):\n 1. i = id1 \\<and> Abort p c av s s' \\<and> Init p c av t t' \\<or>\n    i = id2 \\<and> s = s' \\<and> Abort p c av t t'", "by auto"], ["proof (state)\nthis:\n  i = id1 \\<and> Abort p c av s s' \\<and> Init p c av t t' \\<or>\n  i = id2 \\<and> s = s' \\<and> Abort p c av t t'\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32 x33 x34.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Switch x31 x32 x33 x34\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = id1 \\<and> Abort p c av s s' \\<and> Init p c av t t' \\<or>\n  i = id2 \\<and> s = s' \\<and> Abort p c av t t'\n\ngoal (1 subgoal):\n 1. thesis", "using Switch that"], ["proof (prove)\nusing this:\n  i = id1 \\<and> Abort p c av s s' \\<and> Init p c av t t' \\<or>\n  i = id2 \\<and> s = s' \\<and> Abort p c av t t'\n  a = Switch i p c av\n  \\<lbrakk>Inv ?p1 ?c1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Inv ?p1 ?c1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Abort ?p1 ?c1 ?av1 s s' \\<and> Init ?p1 ?c1 ?av1 t t';\n   a = Switch id1 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s = s' \\<and> Abort ?p1 ?c1 ?av1 t t';\n   a = Switch id2 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Linearize i)"], ["proof (state)\nthis:\n  a = Linearize i\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "with assms"], ["proof (chain)\npicking this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Linearize i", "have\n    \"(Lin s s' \\<and> t = t' \\<and> i = 0) \n      \\<or> (Lin t t' \\<and> s = s' \\<and> i = id1)\""], ["proof (prove)\nusing this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Linearize i\n\ngoal (1 subgoal):\n 1. Lin s s' \\<and> t = t' \\<and> i = 0 \\<or>\n    Lin t t' \\<and> s = s' \\<and> i = id1", "by auto"], ["proof (state)\nthis:\n  Lin s s' \\<and> t = t' \\<and> i = 0 \\<or>\n  Lin t t' \\<and> s = s' \\<and> i = id1\n\ngoal (2 subgoals):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>x5.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Linearize x5\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lin s s' \\<and> t = t' \\<and> i = 0 \\<or>\n  Lin t t' \\<and> s = s' \\<and> i = id1\n\ngoal (1 subgoal):\n 1. thesis", "using Linearize that"], ["proof (prove)\nusing this:\n  Lin s s' \\<and> t = t' \\<and> i = 0 \\<or>\n  Lin t t' \\<and> s = s' \\<and> i = id1\n  a = Linearize i\n  \\<lbrakk>Inv ?p1 ?c1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Inv ?p1 ?c1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Abort ?p1 ?c1 ?av1 s s' \\<and> Init ?p1 ?c1 ?av1 t t';\n   a = Switch id1 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s = s' \\<and> Abort ?p1 ?c1 ?av1 t t';\n   a = Switch id2 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Recover i)"], ["proof (state)\nthis:\n  a = Recover i\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis", "with assms"], ["proof (chain)\npicking this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Recover i", "have\n    \"Reco t t' \\<and> s = s' \\<and> a = Recover id1\""], ["proof (prove)\nusing this:\n  (s, t) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (s', t')\n  a = Recover i\n\ngoal (1 subgoal):\n 1. Reco t t' \\<and> s = s' \\<and> a = Recover id1", "by auto"], ["proof (state)\nthis:\n  Reco t t' \\<and> s = s' \\<and> a = Recover id1\n\ngoal (1 subgoal):\n 1. \\<And>x4.\n       \\<lbrakk>\\<And>p c i.\n                   \\<lbrakk>Inv p c s s' \\<and> t = t'; i < id1;\n                    a = Invoke i p c\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>p c i.\n           \\<lbrakk>Inv p c t t' \\<and> s = s'; id1 \\<le> i \\<and> i < id2;\n            a = Invoke i p c\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>Abort p c av s s' \\<and> Init p c av t t';\n            a = Switch id1 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p c av.\n           \\<lbrakk>s = s' \\<and> Abort p c av t t';\n            a = Switch id2 p c av\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou s s' \\<and> t = t'; i < id1;\n            a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>p ou i.\n           \\<lbrakk>Resp p ou t t' \\<and> s = s';\n            id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        a = Recover x4\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Reco t t' \\<and> s = s' \\<and> a = Recover id1\n\ngoal (1 subgoal):\n 1. thesis", "using Recover that"], ["proof (prove)\nusing this:\n  Reco t t' \\<and> s = s' \\<and> a = Recover id1\n  a = Recover i\n  \\<lbrakk>Inv ?p1 ?c1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Inv ?p1 ?c1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Invoke ?i1 ?p1 ?c1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Abort ?p1 ?c1 ?av1 s s' \\<and> Init ?p1 ?c1 ?av1 t t';\n   a = Switch id1 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s = s' \\<and> Abort ?p1 ?c1 ?av1 t t';\n   a = Switch id2 ?p1 ?c1 ?av1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 s s' \\<and> t = t'; ?i1 < id1;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Resp ?p1 ?ou1 t t' \\<and> s = s'; id1 \\<le> ?i1 \\<and> ?i1 < id2;\n   a = Response ?i1 ?p1 ?ou1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin s s' \\<and> t = t'; a = Linearize 0\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Lin t t' \\<and> s = s'; a = Linearize id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Reco t t' \\<and> s = s'; a = Recover id1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "declare comp_simps [simp del]"], ["", "subsection \\<open>Definition of the Refinement Mapping\\<close>"], ["", "fun f :: \"(('a,'b,'c)SLin_state * ('a,'b,'c)SLin_state) \\<Rightarrow> ('a,'b,'c)SLin_state\"\n  where\n  \"f (s1, s2) =\n     \\<lparr>pending = \\<lambda> p. (if status s1 p \\<noteq> Aborted then pending s1 p else pending s2 p),\n      initVals = {},\n      abortVals = abortVals s2,\n      status = \\<lambda> p. (if status s1 p \\<noteq> Aborted then status s1 p else status s2 p),\n      dstate = (if dstate s2 = \\<bottom> then dstate s1 else dstate s2),\n      initialized = True\\<rparr>\""], ["", "subsection \\<open>Invariants\\<close>"], ["", "declare \n  trans_defs [simp]"], ["", "fun P1 where\n  \"P1 (s1,s2) = (\\<forall> p . status s1 p \\<in> {Pending, Aborted} \n    \\<longrightarrow> fst (pending s1 p) = p)\""], ["", "fun P2 where\n  \"P2 (s1,s2) = (\\<forall> p . status s2 p \\<noteq> Sleep \\<longrightarrow> fst (pending s2 p) = p)\""], ["", "fun P3 where\n  \"P3 (s1,s2) = (\\<forall> p . (status s2 p = Ready \\<longrightarrow> initialized s2))\""], ["", "(* Used to prove P19 only *)"], ["", "fun P4 where\n  \"P4 (s1,s2) = ((\\<forall> p . status s2 p = Sleep) = (initVals s2 = {}))\""], ["", "fun P5 where\n  \"P5 (s1,s2) = (\\<forall> p . status s1 p \\<noteq> Sleep \\<and> initialized s1 \\<and> initVals s1 = {})\""], ["", "fun P6  where\n  \"P6 (s1,s2) = (\\<forall> p . (status s1 p \\<noteq> Aborted) = (status s2 p = Sleep))\""], ["", "fun P7 where\n  \"P7 (s1,s2) = (\\<forall> c . status s1 c = Aborted \\<and> \\<not> initialized s2 \n    \\<longrightarrow> (pending s2 c = pending s1 c \\<and> status s2 c \\<in> {Pending, Aborted}))\""], ["", "(* Only used in the proof of P8a *)"], ["", "fun P8 where\n  \"P8 (s1,s2) = (\\<forall> iv \\<in> initVals s2 . \\<exists> rs \\<in> pendingSeqs s1 . \n    iv = dstate s1 \\<star> rs)\""], ["", "fun P8a where\n  \"P8a (s1,s2) = (\\<forall> ivs \\<in> initSets s2 . \\<exists> rs \\<in> pendingSeqs s1 . \n    \\<Sqinter>ivs = dstate s1 \\<star> rs)\""], ["", "fun P9 where \n  \"P9 (s1,s2) = (initialized s2 \\<longrightarrow> dstate s1 \\<preceq> dstate s2)\""], ["", "fun P10  where\n  \"P10 (s1,s2) = ((\\<not> initialized s2) \\<longrightarrow> (dstate s2 = \\<bottom>))\""], ["", "fun P11  where\n  \"P11 (s1,s2) = (initVals s2 = abortVals s1)\""], ["", "fun P12 where\n  \"P12 (s1,s2) = (initialized s2 \\<longrightarrow> \\<Sqinter> (initVals s2) \\<preceq> dstate s2)\""], ["", "fun P13 where\n  \"P13 (s1,s2) = (finite (initVals s2)\n    \\<and> finite (abortVals s1) \\<and> finite (abortVals s2))\""], ["", "fun P14 where\n  \"P14 (s1,s2) = (initialized s2 \\<longrightarrow> initVals s2 \\<noteq> {})\""], ["", "fun P15 where\n  \"P15 (s1,s2) = (\\<forall> av \\<in> abortVals s1 . dstate s1 \\<preceq> av)\""], ["", "fun P16 where\n  \"P16 (s1,s2) = (dstate s2 \\<noteq> \\<bottom> \\<longrightarrow> initialized s2)\""], ["", "fun P17 where                                                         \n\\<comment> \\<open>For the Response1 case of the refinement proof, in case a response\n  is produced in the first instance and the second instance is already\n  initialized\\<close>\n  \"P17 (s1,s2) = (initialized s2 \n    \\<longrightarrow> (\\<forall> p . \n      ((status s1 p = Ready \n        \\<or> (status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p))) \n          \\<longrightarrow> (\\<exists> rs . dstate s2 = dstate s1 \\<star> rs \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)))\n      \\<and> ((status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)) \n        \\<longrightarrow> (\\<exists> rs . dstate s2 = dstate s1 \\<star> rs \\<and> (\\<forall> r \\<in> set rs . \n          fst r = p \\<longrightarrow> r = pending s1 p)))))\""], ["", "(* Only used for proving P19 *)"], ["", "fun P18 where\n  \"P18 (s1,s2) = (abortVals s2 \\<noteq> {} \\<longrightarrow> (\\<exists> p . status s2 p \\<noteq> Sleep))\""], ["", "fun P19 where\n  \"P19 (s1,s2) = (abortVals s2 \\<noteq> {} \\<longrightarrow> abortVals s1 \\<noteq> {})\""], ["", "fun P20 where\n  \"P20 (s1,s2) = (\\<forall> av \\<in> abortVals s2 . dstate s2 \\<preceq> av)\""], ["", "fun P21 where\n  \"P21 (s1,s2) = (\\<forall> av \\<in> abortVals s2 . \\<Sqinter>(abortVals s1) \\<preceq> av)\""], ["", "fun P22 where\n  \"P22 (s1,s2) = (initialized s2 \\<longrightarrow> dstate (f (s1,s2)) = dstate s2)\""], ["", "fun P23 where\n  \"P23 (s1,s2) = ((\\<not> initialized s2) \\<longrightarrow> \n    pendingSeqs s1 \\<subseteq> pendingSeqs (f (s1,s2)))\""], ["", "fun P25 where\n  \"P25 (s1,s2) = (\\<forall> ivs . (ivs \\<in> initSets s2 \\<and> initialized s2 \n    \\<and> dstate s2 \\<preceq> \\<Sqinter>ivs)\n      \\<longrightarrow> (\\<exists> rs' \\<in> pendingSeqs (f (s1,s2)) . \\<Sqinter>ivs = dstate s2 \\<star> rs'))\""], ["", "fun P26 where\n  \"P26 (s1,s2) = (\\<forall> p . (status s1 p = Aborted \n    \\<and> \\<not> contains (dstate s2) (pending s1 p))\n      \\<longrightarrow> (status s2 p \\<in> {Pending,Aborted} \n        \\<and> pending s1 p = pending s2 p))\""], ["", "lemma P1_invariant:\nshows \"invariant (composition) P1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P1", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P1 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P1 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P1 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "thus \"P1 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "assume hyp: \"P1 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P1 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P1 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P1 (aa, ba)", "show \"P1 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. P1 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P1 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P2_invariant:\nshows \"invariant (composition) P2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P2", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P2 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P2 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P2 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "thus \"P2 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "assume hyp: \"P2 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P2 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P2 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P2 (aa, ba)", "show \"P2 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P2 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. P2 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P2 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P16_invariant:\nshows \"invariant (composition) P16\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P16", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P16 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P16 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P16 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "thus \"P16 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P16 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P16 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P16 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "assume hyp: \"P16 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P16 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P16 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P16 (aa, ba)", "show \"P16 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P16 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P16 (s1, s2)\n\ngoal (1 subgoal):\n 1. P16 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P16 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P3_invariant:\nshows \"invariant (composition) P3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P3", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P3 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P3 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P3 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "thus \"P3 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P3 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P3 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P3 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "assume hyp: \"P3 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P3 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P3 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P3 (aa, ba)", "show \"P3 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P3 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P3 (s1, s2)\n\ngoal (1 subgoal):\n 1. P3 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P3 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P4_invariant:\nshows \"invariant (composition) P4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P4", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P4 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P4 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P4 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "thus \"P4 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P4 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P4 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P4 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "assume hyp: \"P4 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P4 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P4 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P4 (aa, ba)", "show \"P4 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P4 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P4 (s1, s2)\n\ngoal (1 subgoal):\n 1. P4 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P4 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P5_invariant:\nshows \"invariant (composition) P5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P5", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P5 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P5 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P5 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "thus \"P5 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "assume hyp: \"P5 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P5 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P5 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P5 (aa, ba)", "show \"P5 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P5 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. P5 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P5 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P13_invariant:\nshows \"invariant (composition) P13\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P13", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P13 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P13 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P13 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "thus \"P13 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "assume hyp: \"P13 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P13 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P13 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P13 (aa, ba)", "show \"P13 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. P13 (t1, t2)", "by (cases rule:trans_elim, auto)"], ["proof (state)\nthis:\n  P13 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P20_invariant:\nshows \"invariant (composition) P20\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P20", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P20 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P20 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P20 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "thus \"P20 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P20 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P20 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P20 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "assume hyp: \"P20 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach: \"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P20 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P16:\"P16 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P16 (s1, s2)", "using P16_invariant and ids"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P16\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P16 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P16 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P20 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P20 (aa, ba)", "show \"P20 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P20 (t1, t2)", "using trans and hyp and P16"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P20 (s1, s2)\n  P16 (s1, s2)\n\ngoal (1 subgoal):\n 1. P20 (t1, t2)", "by (cases rule:trans_elim, auto simp add:safeInits_def safeAborts_def\n    initAborts_def uninitAborts_def bot)"], ["proof (state)\nthis:\n  P20 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P18_invariant:\nshows \"invariant (composition) P18\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P18", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P18 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P18 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P18 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "thus \"P18 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P18 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P18 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P18 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "assume hyp: \"P18 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P18 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P18 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P18 (aa, ba)", "show \"P18 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P18 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P18 (s1, s2)\n\ngoal (1 subgoal):\n 1. P18 (t1, t2)", "by (cases rule:trans_elim, auto)"], ["proof (state)\nthis:\n  P18 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P14_invariant:\nshows \"invariant (composition) P14\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P14", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P14 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P14 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P14 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "thus \"P14 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P14 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "assume hyp: \"P14 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P14 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P14 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P14 (aa, ba)", "show \"P14 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P14 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P14 (s1, s2)\n\ngoal (1 subgoal):\n 1. P14 (t1, t2)", "by (cases rule:trans_elim, auto simp add:safeInits_def)"], ["proof (state)\nthis:\n  P14 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P15_invariant:\nshows \"invariant (composition) P15\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P15", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P15 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P15 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P15 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "thus \"P15 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P15 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P15 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P15 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "assume hyp: \"P15 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach: \"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P15 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P5:\"P5 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "using P5_invariant and ids"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P5\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P15 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P15 (aa, ba)", "show \"P15 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P15 (t1, t2)", "using trans and hyp and P5"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P15 (s1, s2)\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. P15 (t1, t2)", "by (cases rule:trans_elim, \n    auto simp add:less_eq_def safeAborts_def initAborts_def)"], ["proof (state)\nthis:\n  P15 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P6_invariant:\nshows \"invariant (composition) P6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P6", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P6 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P6 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P6 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "thus \"P6 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "assume hyp: \"P6 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P6 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P6 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P6 (aa, ba)", "show \"P6 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P6 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. P6 (t1, t2)", "by (cases rule:trans_elim, force+)"], ["proof (state)\nthis:\n  P6 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P7_invariant:\nshows \"invariant (composition) P7\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P7", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P7 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P7 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P7 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "thus \"P7 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "assume hyp: \"P7 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P7 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P7 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P7 (aa, ba)", "show \"P7 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P7 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. P7 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P7 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P10_invariant:\nshows \"invariant (composition) P10\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P10", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P10 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P10 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P10 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "thus \"P10 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P10 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P10 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P10 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "assume hyp: \"P10 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P10 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P10 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P10 (aa, ba)", "show \"P10 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P10 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P10 (s1, s2)\n\ngoal (1 subgoal):\n 1. P10 (t1, t2)", "by (cases rule:trans_elim) auto"], ["proof (state)\nthis:\n  P10 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P11_invariant:\nshows \"invariant (composition) P11\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P11", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P11 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P11 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P11 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "thus \"P11 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "assume hyp: \"P11 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  P11 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P11 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P11 (aa, ba)", "show \"P11 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P11 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. P11 (t1, t2)", "by (cases rule:trans_elim, force+)"], ["proof (state)\nthis:\n  P11 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P8_invariant:\nshows \"invariant (composition) P8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P8", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P8 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P8 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P8 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "thus \"P8 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P8 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P8 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "assume hyp: \"P8 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach: \"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P5:\"P5 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "using P5_invariant and ids"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P5\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P5 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P1:\"P1 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "using P1_invariant and ids"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P1\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P11:\"P11 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "using P11_invariant and ids"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P11\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P8 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P8 (aa, ba)", "show \"P8 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Invoke1 i p c)"], ["proof (state)\nthis:\n  Inv p c s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Invoke i p c\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "have \"pendingSeqs s1 \\<subseteq> pendingSeqs t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs t1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs t1", "have \"pending t1 = (pending s1)(p := (p,c))\"\n      and \"status t1 = (status s1)(p := Pending)\"\n      and \"status s1 p = Ready\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending t1 = (pending s1)(p := (p, c)) &&&\n    status t1 = (status s1)(p := Pending) &&& status s1 p = Ready", "using Invoke1(1)"], ["proof (prove)\nusing this:\n  Inv p c s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. pending t1 = (pending s1)(p := (p, c)) &&&\n    status t1 = (status s1)(p := Pending) &&& status s1 p = Ready", "by auto"], ["proof (state)\nthis:\n  pending t1 = (pending s1)(p := (p, c))\n  status t1 = (status s1)(p := Pending)\n  status s1 p = Ready\n\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs t1", "hence \"pendingReqs s1 \\<subseteq> pendingReqs t1\""], ["proof (prove)\nusing this:\n  pending t1 = (pending s1)(p := (p, c))\n  status t1 = (status s1)(p := Pending)\n  status s1 p = Ready\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<subseteq> pendingReqs t1", "by (simp add:pendingReqs_def) force"], ["proof (state)\nthis:\n  pendingReqs s1 \\<subseteq> pendingReqs t1\n\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs t1", "thus ?thesis"], ["proof (prove)\nusing this:\n  pendingReqs s1 \\<subseteq> pendingReqs t1\n\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs t1", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "have \"initVals t2 = initVals s2\" and \"dstate t1 = dstate s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 &&& dstate t1 = dstate s1", "using Invoke1(1)"], ["proof (prove)\nusing this:\n  Inv p c s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 &&& dstate t1 = dstate s1", "by auto"], ["proof (state)\nthis:\n  initVals t2 = initVals s2\n  dstate t1 = dstate s1\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 9. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "ultimately"], ["proof (chain)\npicking this:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n  initVals t2 = initVals s2\n  dstate t1 = dstate s1", "show \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n  initVals t2 = initVals s2\n  dstate t1 = dstate s1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using \\<open>P8 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  pendingSeqs s1 \\<subseteq> pendingSeqs t1\n  initVals t2 = initVals s2\n  dstate t1 = dstate s1\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by fastforce"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 8. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "show \"P8 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "proof (simp, rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "fix iv"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "assume 0:\"iv \\<in> initVals t2\""], ["proof (state)\nthis:\n  iv \\<in> initVals t2\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 1:\"iv \\<in> initVals s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iv \\<in> initVals s2", "using Lin1(1) 0"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  iv \\<in> initVals t2\n\ngoal (1 subgoal):\n 1. iv \\<in> initVals s2", "by simp"], ["proof (state)\nthis:\n  iv \\<in> initVals s2\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 4:\"iv \\<in> abortVals s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iv \\<in> abortVals s1", "using 1 P11"], ["proof (prove)\nusing this:\n  iv \\<in> initVals s2\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. iv \\<in> abortVals s1", "by simp"], ["proof (state)\nthis:\n  iv \\<in> abortVals s1\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "obtain rs where 2:\"rs \\<in> pendingSeqs s1\" and 3:\"iv = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs s1; iv = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>P8 (s1,s2)\\<close> 1"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  iv \\<in> initVals s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs s1; iv = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs s1\n  iv = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "obtain rs' where 6:\"dstate t1 = dstate s1 \\<star> rs'\" and 5:\"dstate s1 \\<star> rs' \\<preceq> iv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t1 = dstate s1 \\<star> rs';\n         dstate s1 \\<star> rs' \\<preceq> iv\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Lin1(1) 1 4"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  iv \\<in> initVals s2\n  iv \\<in> abortVals s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t1 = dstate s1 \\<star> rs';\n         dstate s1 \\<star> rs' \\<preceq> iv\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dstate t1 = dstate s1 \\<star> rs'\n  dstate s1 \\<star> rs' \\<preceq> iv\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "obtain rs'' where 7:\"iv = (dstate s1 \\<star> rs') \\<star> rs''\" and 8:\"set rs'' \\<subseteq> set rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>iv = (dstate s1 \\<star> rs') \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using consistency 3 5 6"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s1.0 \\<preceq> ?s2.0; ?s2.0 \\<preceq> ?s3.0;\n   ?s3.0 = ?s1.0 \\<star> ?rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       ?s2.0 = ?s1.0 \\<star> rs' \\<and>\n                       ?s3.0 = ?s2.0 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set ?rs \\<and>\n                       set rs'' \\<subseteq> set ?rs\n  iv = dstate s1 \\<star> rs\n  dstate s1 \\<star> rs' \\<preceq> iv\n  dstate t1 = dstate s1 \\<star> rs'\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>iv = (dstate s1 \\<star> rs') \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp (metis less_eq_def)"], ["proof (state)\nthis:\n  iv = (dstate s1 \\<star> rs') \\<star> rs''\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 10:\"rs'' \\<in> pendingSeqs t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs'' \\<in> pendingSeqs t1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rs'' \\<in> pendingSeqs t1", "have 9:\"pendingSeqs t1 = pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "by (auto simp add:pendingSeqs_def pendingReqs_def)"], ["proof (state)\nthis:\n  pendingSeqs t1 = pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs'' \\<in> pendingSeqs t1", "thus ?thesis"], ["proof (prove)\nusing this:\n  pendingSeqs t1 = pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs'' \\<in> pendingSeqs t1", "using 8 2"], ["proof (prove)\nusing this:\n  pendingSeqs t1 = pendingSeqs s1\n  set rs'' \\<subseteq> set rs\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs'' \\<in> pendingSeqs t1", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  rs'' \\<in> pendingSeqs t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs'' \\<in> pendingSeqs t1\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "show \"\\<exists> rs \\<in> pendingSeqs t1 . iv = dstate t1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "using 7 10 6"], ["proof (prove)\nusing this:\n  iv = (dstate s1 \\<star> rs') \\<star> rs''\n  rs'' \\<in> pendingSeqs t1\n  dstate t1 = dstate s1 \\<star> rs'\n\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Response1 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Response i p ou\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume ih:\"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 7. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "show \"P8 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "fix iv"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "assume 1:\"iv \\<in> initVals t2\""], ["proof (state)\nthis:\n  iv \\<in> initVals t2\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "obtain rs where 2:\"iv = dstate t1 \\<star> rs\" and 3:\"rs \\<in> pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>iv = dstate t1 \\<star> rs; rs \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1 Response1(1) ih"], ["proof (prove)\nusing this:\n  iv \\<in> initVals t2\n  Resp p ou s1 t1 \\<and> s2 = t2\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>iv = dstate t1 \\<star> rs; rs \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  iv = dstate t1 \\<star> rs\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 4:\"pendingReqs t1 = ((pendingReqs s1) - {pending s1 p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "have \"pending t1 = pending s1\" and \"status t1 = (status s1)(p := Ready)\"\n          and 5:\"status s1 p = Pending\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending t1 = pending s1 &&&\n    status t1 = (status s1)(p := Ready) &&& status s1 p = Pending", "using Response1(1)"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. pending t1 = pending s1 &&&\n    status t1 = (status s1)(p := Ready) &&& status s1 p = Pending", "by auto"], ["proof (state)\nthis:\n  pending t1 = pending s1\n  status t1 = (status s1)(p := Ready)\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "moreover"], ["proof (state)\nthis:\n  pending t1 = pending s1\n  status t1 = (status s1)(p := Ready)\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "have \"\\<And> q . q \\<noteq> p \\<Longrightarrow> status s1 q \\<in> {Pending,Aborted} \n          \\<Longrightarrow> pending s1 q \\<noteq> pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<noteq> p; status s1 q \\<in> {Pending, Aborted}\\<rbrakk>\n       \\<Longrightarrow> pending s1 q \\<noteq> pending s1 p", "using P1 5"], ["proof (prove)\nusing this:\n  P1 (s1, s2)\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<noteq> p; status s1 q \\<in> {Pending, Aborted}\\<rbrakk>\n       \\<Longrightarrow> pending s1 q \\<noteq> pending s1 p", "by (metis P1.simps insertI1)"], ["proof (state)\nthis:\n  \\<lbrakk>?q56 \\<noteq> p; status s1 ?q56 \\<in> {Pending, Aborted}\\<rbrakk>\n  \\<Longrightarrow> pending s1 ?q56 \\<noteq> pending s1 p\n\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "ultimately"], ["proof (chain)\npicking this:\n  pending t1 = pending s1\n  status t1 = (status s1)(p := Ready)\n  status s1 p = Pending\n  \\<lbrakk>?q56 \\<noteq> p; status s1 ?q56 \\<in> {Pending, Aborted}\\<rbrakk>\n  \\<Longrightarrow> pending s1 ?q56 \\<noteq> pending s1 p", "show ?thesis"], ["proof (prove)\nusing this:\n  pending t1 = pending s1\n  status t1 = (status s1)(p := Ready)\n  status s1 p = Pending\n  \\<lbrakk>?q56 \\<noteq> p; status s1 ?q56 \\<in> {Pending, Aborted}\\<rbrakk>\n  \\<Longrightarrow> pending s1 ?q56 \\<noteq> pending s1 p\n\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1 - {pending s1 p}", "by (simp add:pendingReqs_def) fastforce"], ["proof (state)\nthis:\n  pendingReqs t1 = pendingReqs s1 - {pending s1 p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pendingReqs t1 = pendingReqs s1 - {pending s1 p}\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 8:\"contains (dstate t1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contains (dstate t1) (pending s1 p)", "using Response1(1)"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. contains (dstate t1) (pending s1 p)", "by simp"], ["proof (state)\nthis:\n  contains (dstate t1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "define rs' where \"rs' = filter (\\<lambda> x . x \\<noteq> (pending s1 p)) rs\""], ["proof (state)\nthis:\n  rs' = filter (\\<lambda>x. x \\<noteq> pending s1 p) rs\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 9:\"rs' \\<in> pendingSeqs t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "have 9:\"pending s1 p \\<notin> set rs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending s1 p \\<notin> set rs'", "by (auto simp add:rs'_def)"], ["proof (state)\nthis:\n  pending s1 p \\<notin> set rs'\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "have 10:\"rs' \\<in> pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs s1", "using 3"], ["proof (prove)\nusing this:\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs s1", "by (auto simp add:rs'_def) \n            (metis filter_is_subset mem_Collect_eq pendingSeqs_def subset_trans)"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "using 10 9 4"], ["proof (prove)\nusing this:\n  rs' \\<in> pendingSeqs s1\n  pending s1 p \\<notin> set rs'\n  pendingReqs t1 = pendingReqs s1 - {pending s1 p}\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs t1", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs t1\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "have 10:\"iv = dstate t1 \\<star> rs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iv = dstate t1 \\<star> rs'", "using 8 2 idem_star rs'_def"], ["proof (prove)\nusing this:\n  contains (dstate t1) (pending s1 p)\n  iv = dstate t1 \\<star> rs\n  contains ?s ?r \\<Longrightarrow>\n  ?s \\<star> ?rs = ?s \\<star> filter (\\<lambda>x. x \\<noteq> ?r) ?rs\n  rs' = filter (\\<lambda>x. x \\<noteq> pending s1 p) rs\n\ngoal (1 subgoal):\n 1. iv = dstate t1 \\<star> rs'", "by fast"], ["proof (state)\nthis:\n  iv = dstate t1 \\<star> rs'\n\ngoal (1 subgoal):\n 1. \\<And>iv.\n       iv \\<in> initVals t2 \\<Longrightarrow>\n       \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "show \"\\<exists> rs \\<in> pendingSeqs t1 . iv = dstate t1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "using 10 9"], ["proof (prove)\nusing this:\n  iv = dstate t1 \\<star> rs'\n  rs' \\<in> pendingSeqs t1\n\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs t1. iv = dstate t1 \\<star> rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Switch1 p c av)"], ["proof (state)\nthis:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  a = Switch id1 p c av\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "have 1:\"initialized s1 \\<and> initVals s1 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s1 \\<and> initVals s1 = {}", "using P5"], ["proof (prove)\nusing this:\n  P5 (s1, s2)\n\ngoal (1 subgoal):\n 1. initialized s1 \\<and> initVals s1 = {}", "by auto"], ["proof (state)\nthis:\n  initialized s1 \\<and> initVals s1 = {}\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "obtain av where 2:\"initVals t2 = initVals s2 \\<union> {av}\" and 3:\"av \\<in> safeAborts s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>initVals t2 = initVals s2 \\<union> {av};\n         av \\<in> safeAborts s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>initVals t2 = initVals s2 \\<union> {av};\n         av \\<in> safeAborts s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  initVals t2 = initVals s2 \\<union> {av}\n  av \\<in> safeAborts s1\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "obtain rs where 4:\"rs \\<in> pendingSeqs s1\" and 5:\"av = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs s1; av = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1 3"], ["proof (prove)\nusing this:\n  initialized s1 \\<and> initVals s1 = {}\n  av \\<in> safeAborts s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs s1; av = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:safeAborts_def initAborts_def initSets_def)"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs s1\n  av = dstate s1 \\<star> rs\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "have 6:\"dstate s1 = dstate t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 = dstate t1", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av__ s1 t1 \\<and> Init p c av__ s2 t2\n\ngoal (1 subgoal):\n 1. dstate s1 = dstate t1", "by simp"], ["proof (state)\nthis:\n  dstate s1 = dstate t1\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "have 7:\"pendingSeqs t1 = pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "have \"pendingReqs t1 = pendingReqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av__ s1 t1 \\<and> Init p c av__ s2 t2\n\ngoal (1 subgoal):\n 1. pendingReqs t1 = pendingReqs s1", "by (simp add:pendingReqs_def) fastforce"], ["proof (state)\nthis:\n  pendingReqs t1 = pendingReqs s1\n\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "thus ?thesis"], ["proof (prove)\nusing this:\n  pendingReqs t1 = pendingReqs s1\n\ngoal (1 subgoal):\n 1. pendingSeqs t1 = pendingSeqs s1", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  pendingSeqs t1 = pendingSeqs s1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pendingSeqs t1 = pendingSeqs s1\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 6. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "show \"P8 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using \\<open>P8 (s1,s2)\\<close> 2 4 5 6 7"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  initVals t2 = initVals s2 \\<union> {av}\n  rs \\<in> pendingSeqs s1\n  av = dstate s1 \\<star> rs\n  dstate s1 = dstate t1\n  pendingSeqs t1 = pendingSeqs s1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Invoke2 i p c)"], ["proof (state)\nthis:\n  Inv p c s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P8 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 5. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "thus \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using Invoke2(1)"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  Inv p c s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)\n 4. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "thus \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using Lin2(1)"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Response2 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P8 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 3. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "thus \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using Response2(1)"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  Resp p ou s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case (Switch2 p c av)"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p c av s2 t2\n  a = Switch id2 p c av\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P8 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P8 (t1, t2)\n 2. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "thus \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using Switch2(1)"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "case Reco2"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "assume \"P8 (s1,s2)\""], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P8 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P8 (t1, t2)", "thus \"P8 (t1,t2)\""], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "using Reco2(1)"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P8 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P8 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P8a_invariant:\nshows \"invariant (composition) P8a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P8a", "proof (auto simp:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ivs.\n       \\<lbrakk>reachable composition (a, b); ivs \\<in> initSets b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs\\<in>pendingSeqs a.\n                            \\<Sqinter> ivs = dstate a \\<star> rs", "fix s1 s2 ivs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ivs.\n       \\<lbrakk>reachable composition (a, b); ivs \\<in> initSets b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs\\<in>pendingSeqs a.\n                            \\<Sqinter> ivs = dstate a \\<star> rs", "assume 1:\"reachable (composition) (s1,s2)\"\n  and 2:\"ivs \\<in> initSets s2\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n  ivs \\<in> initSets s2\n\ngoal (1 subgoal):\n 1. \\<And>a b ivs.\n       \\<lbrakk>reachable composition (a, b); ivs \\<in> initSets b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs\\<in>pendingSeqs a.\n                            \\<Sqinter> ivs = dstate a \\<star> rs", "have 3:\"finite ivs \\<and> ivs \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ivs \\<and> ivs \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite ivs \\<and> ivs \\<noteq> {}", "have \"P13 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using P13_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P13\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. finite ivs \\<and> ivs \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. finite ivs \\<and> ivs \\<noteq> {}", "using 2 finite_subset"], ["proof (prove)\nusing this:\n  P13 (s1, s2)\n  ivs \\<in> initSets s2\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite ivs \\<and> ivs \\<noteq> {}", "by (auto simp add:initSets_def)"], ["proof (state)\nthis:\n  finite ivs \\<and> ivs \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ivs \\<and> ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>a b ivs.\n       \\<lbrakk>reachable composition (a, b); ivs \\<in> initSets b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs\\<in>pendingSeqs a.\n                            \\<Sqinter> ivs = dstate a \\<star> rs", "have 4:\"\\<forall> av \\<in> ivs . \\<exists> rs \\<in> pendingSeqs s1 . av = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>ivs.\n       \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>ivs.\n       \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs", "have P8:\"P8 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (s1, s2)", "using P8_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P8\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P8 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>ivs.\n       \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs", "thus ?thesis"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>ivs.\n       \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs", "using 2"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  ivs \\<in> initSets s2\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>ivs.\n       \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs", "by (auto simp add:initSets_def)"], ["proof (state)\nthis:\n  \\<forall>av\\<in>ivs.\n     \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>av\\<in>ivs.\n     \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. \\<And>a b ivs.\n       \\<lbrakk>reachable composition (a, b); ivs \\<in> initSets b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs\\<in>pendingSeqs a.\n                            \\<Sqinter> ivs = dstate a \\<star> rs", "show \"\\<exists> rs \\<in> pendingSeqs s1 . \\<Sqinter>ivs = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs s1. \\<Sqinter> ivs = dstate s1 \\<star> rs", "using 3 4 glb_common_set"], ["proof (prove)\nusing this:\n  finite ivs \\<and> ivs \\<noteq> {}\n  \\<forall>av\\<in>ivs.\n     \\<exists>rs\\<in>pendingSeqs s1. av = dstate s1 \\<star> rs\n  \\<lbrakk>finite ?ss; ?ss \\<noteq> {};\n   \\<And>s.\n      s \\<in> ?ss \\<Longrightarrow>\n      \\<exists>rs.\n         s = ?s0.0 \\<star> rs \\<and> set rs \\<subseteq> ?rset\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs.\n                       \\<Sqinter> ?ss = ?s0.0 \\<star> rs \\<and>\n                       set rs \\<subseteq> ?rset\n\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs s1. \\<Sqinter> ivs = dstate s1 \\<star> rs", "by (simp add:pendingSeqs_def, metis)"], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs s1. \\<Sqinter> ivs = dstate s1 \\<star> rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P12_invariant:\nshows \"invariant (composition) P12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P12", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P12 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P12 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P12 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "thus \"P12 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P12 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P12 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "assume hyp: \"P12 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach: \"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P13:\"P13 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using P13_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P13\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "from reach"], ["proof (chain)\npicking this:\n  reachable composition (s1, s2)", "have P14:\"P14 (s1,s2)\""], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "using P14_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P14\n\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P14 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P12 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P12 (aa, ba)", "show \"P12 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 9. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Invoke1 i p c)"], ["proof (state)\nthis:\n  Inv p c s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Invoke i p c\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 9. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 9. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Invoke1(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  Inv p c s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 8. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Lin1(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Response1 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Response i p ou\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 7. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Response1(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Switch1 p c av)"], ["proof (state)\nthis:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  a = Switch id1 p c av\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume ih:\"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have \"initialized s2 \\<Longrightarrow> \\<Sqinter> (initVals t2) \\<preceq> \\<Sqinter> (initVals s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "assume 1:\"initialized s2\""], ["proof (state)\nthis:\n  initialized s2\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "have \"initVals t2 = initVals s2 \\<union> {av}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 \\<union> {av}", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 \\<union> {av}", "by simp"], ["proof (state)\nthis:\n  initVals t2 = initVals s2 \\<union> {av}\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "hence \"\\<Sqinter> (initVals t2) = \\<Sqinter> (initVals s2) \\<sqinter> av\""], ["proof (prove)\nusing this:\n  initVals t2 = initVals s2 \\<union> {av}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> initVals t2 = \\<Sqinter> initVals s2 \\<sqinter> av", "using insert_not_elem P13 P14 1"], ["proof (prove)\nusing this:\n  initVals t2 = initVals s2 \\<union> {av}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<Sqinter> insert ?x ?A = ?x \\<sqinter> \\<Sqinter> ?A\n  P13 (s1, s2)\n  P14 (s1, s2)\n  initialized s2\n\ngoal (1 subgoal):\n 1. \\<Sqinter> initVals t2 = \\<Sqinter> initVals s2 \\<sqinter> av", "by (metis P13.simps P14.simps Un_empty_right Un_insert_right commute insert)"], ["proof (state)\nthis:\n  \\<Sqinter> initVals t2 = \\<Sqinter> initVals s2 \\<sqinter> av\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Sqinter> initVals t2 = \\<Sqinter> initVals s2 \\<sqinter> av\n\ngoal (1 subgoal):\n 1. \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2", "by (metis cobounded1)"], ["proof (state)\nthis:\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  initialized s2 \\<Longrightarrow>\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  initialized s2 \\<Longrightarrow>\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have \"dstate t2 = dstate s2\" and \"initialized s2 = initialized t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t2 = dstate s2 &&& initialized s2 = initialized t2", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate s2 &&& initialized s2 = initialized t2", "by auto"], ["proof (state)\nthis:\n  dstate t2 = dstate s2\n  initialized s2 = initialized t2\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 6. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "ultimately"], ["proof (chain)\npicking this:\n  initialized s2 \\<Longrightarrow>\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n  dstate t2 = dstate s2\n  initialized s2 = initialized t2", "show \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  initialized s2 \\<Longrightarrow>\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n  dstate t2 = dstate s2\n  initialized s2 = initialized t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using ih"], ["proof (prove)\nusing this:\n  initialized s2 \\<Longrightarrow>\n  \\<Sqinter> initVals t2 \\<preceq> \\<Sqinter> initVals s2\n  dstate t2 = dstate s2\n  initialized s2 = initialized t2\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by auto (metis absorb2 coboundedI1)"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Invoke2 i p c)"], ["proof (state)\nthis:\n  Inv p c s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P12 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 5. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Invoke2(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  Inv p c s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have \"initVals t2 = initVals s2\" and \"initialized s2\"\n    and \"initialized t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 &&& initialized s2 &&& initialized t2", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. initVals t2 = initVals s2 &&& initialized s2 &&& initialized t2", "by auto"], ["proof (state)\nthis:\n  initVals t2 = initVals s2\n  initialized s2\n  initialized t2\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  initVals t2 = initVals s2\n  initialized s2\n  initialized t2\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have \"dstate s2 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> dstate t2", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> dstate t2", "by auto (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate s2 \\<preceq> dstate t2\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)\n 4. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "ultimately"], ["proof (chain)\npicking this:\n  P12 (s1, s2)\n  initVals t2 = initVals s2\n  initialized s2\n  initialized t2\n  dstate s2 \\<preceq> dstate t2", "show \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  initVals t2 = initVals s2\n  initialized s2\n  initialized t2\n  dstate s2 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by auto (metis strict_iff_order strict_trans1)"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Response2 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P12 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 3. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Response2(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  Resp p ou s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case (Switch2 p c av)"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p c av s2 t2\n  a = Switch id2 p c av\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "assume \"P12 (s1,s2)\""], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P12 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P12 (t1, t2)\n 2. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "thus \"P12 (t1,t2)\""], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using Switch2(1)"], ["proof (prove)\nusing this:\n  P12 (s1, s2)\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "case Reco2"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "obtain d where 1:\"d \\<in> safeInits s2\" and 2:\"dstate t2 = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>d \\<in> safeInits s2; dstate t2 = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Reco2(1)"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>d \\<in> safeInits s2; dstate t2 = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  d \\<in> safeInits s2\n  dstate t2 = d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "obtain ivs where 3:\"ivs \\<subseteq> initVals s2\" and 4:\"ivs \\<noteq> {}\"\n      and 5:\"\\<Sqinter>ivs \\<preceq> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         \\<Sqinter> ivs \\<preceq> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  d \\<in> safeInits s2\n\ngoal (1 subgoal):\n 1. (\\<And>ivs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         \\<Sqinter> ivs \\<preceq> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:safeInits_def initSets_def)\n        (metis equals0D less_eq_def)"], ["proof (state)\nthis:\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n  \\<Sqinter> ivs \\<preceq> d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have 6:\"\\<Sqinter> (initVals s2) \\<preceq> \\<Sqinter> ivs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> initVals s2 \\<preceq> \\<Sqinter> ivs", "using 3 P13 4"], ["proof (prove)\nusing this:\n  ivs \\<subseteq> initVals s2\n  P13 (s1, s2)\n  ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> initVals s2 \\<preceq> \\<Sqinter> ivs", "by (simp add: subset_imp)"], ["proof (state)\nthis:\n  \\<Sqinter> initVals s2 \\<preceq> \\<Sqinter> ivs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "have 7:\"initVals s2 = initVals t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initVals s2 = initVals t2", "using Reco2(1)"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. initVals s2 = initVals t2", "by auto"], ["proof (state)\nthis:\n  initVals s2 = initVals t2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P12 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P12 (t1, t2)", "show \"P12 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using 2 5 6 7"], ["proof (prove)\nusing this:\n  dstate t2 = d\n  \\<Sqinter> ivs \\<preceq> d\n  \\<Sqinter> initVals s2 \\<preceq> \\<Sqinter> ivs\n  initVals s2 = initVals t2\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by (metis P12.simps absorb2 coboundedI1)"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P19_invariant:\nshows \"invariant (composition) P19\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P19", "proof (auto simp only:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "assume 1:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "have P4:\"P4 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P4 (s1, s2)", "using P4_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P4\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P4 (s1, s2)", "by (simp add:invariant_def)"], ["proof (state)\nthis:\n  P4 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "moreover"], ["proof (state)\nthis:\n  P4 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "have P18:\"P18 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P18 (s1, s2)", "using P18_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P18\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P18 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P18 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "moreover"], ["proof (state)\nthis:\n  P18 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "have P11:\"P11 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "using P11_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P11\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "moreover"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P19 (a, b)", "ultimately"], ["proof (chain)\npicking this:\n  P4 (s1, s2)\n  P18 (s1, s2)\n  P11 (s1, s2)\n  P11 (s1, s2)", "show \"P19 (s1,s2)\""], ["proof (prove)\nusing this:\n  P4 (s1, s2)\n  P18 (s1, s2)\n  P11 (s1, s2)\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. P19 (s1, s2)", "by auto"], ["proof (state)\nthis:\n  P19 (s1, s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P9_invariant:\nshows \"invariant (composition) P9\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P9", "proof (auto simp only:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "assume 1:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have P12:\"P12 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P12 (s1, s2)", "using P12_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P12\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P12 (s1, s2)", "by (simp add:invariant_def)"], ["proof (state)\nthis:\n  P12 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have P15:\"P15 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P15 (s1, s2)", "using P15_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P15\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P15 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P15 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have P13:\"P13 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using P13_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P13\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have P14:\"P14 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "using P14_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P14\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P14 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P14 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have P11:\"P11 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "using P11_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P11\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "by (metis IOA.invariant_def)"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "have \"initialized s2 \\<Longrightarrow> dstate s1 \\<preceq> \\<Sqinter>(abortVals s1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    dstate s1 \\<preceq> \\<Sqinter> abortVals s1", "using P13 P15 P14 P11 boundedI"], ["proof (prove)\nusing this:\n  P13 (s1, s2)\n  P15 (s1, s2)\n  P14 (s1, s2)\n  P11 (s1, s2)\n  \\<lbrakk>finite ?A; ?A \\<noteq> {};\n   \\<And>a. a \\<in> ?A \\<Longrightarrow> ?x \\<preceq> a\\<rbrakk>\n  \\<Longrightarrow> ?x \\<preceq> \\<Sqinter> ?A\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    dstate s1 \\<preceq> \\<Sqinter> abortVals s1", "by simp"], ["proof (state)\nthis:\n  initialized s2 \\<Longrightarrow>\n  dstate s1 \\<preceq> \\<Sqinter> abortVals s1\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P9 (a, b)", "thus \"P9 (s1,s2)\""], ["proof (prove)\nusing this:\n  initialized s2 \\<Longrightarrow>\n  dstate s1 \\<preceq> \\<Sqinter> abortVals s1\n\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "using P12 P11"], ["proof (prove)\nusing this:\n  initialized s2 \\<Longrightarrow>\n  dstate s1 \\<preceq> \\<Sqinter> abortVals s1\n  P12 (s1, s2)\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "by simp (metis trans)"], ["proof (state)\nthis:\n  P9 (s1, s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P17_invariant:\nshows \"invariant (composition) P17\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P17", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P17 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P17 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P17 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "thus \"P17 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P17 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P17 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "assume hyp: \"P17 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P17 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P17 (aa, ba)", "show \"P17 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 9. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Invoke1 i p c)"], ["proof (state)\nthis:\n  Inv p c s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Invoke i p c\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 9. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 9. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Invoke1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  Inv p c s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by fastforce"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Response1 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Response i p ou\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 8. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Response1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Switch1 p c av)"], ["proof (state)\nthis:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  a = Switch id1 p c av\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 7. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Switch1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Invoke2 i p c)"], ["proof (state)\nthis:\n  Inv p c s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P17 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 6. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Invoke2(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  Inv p c s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Response2 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>P17 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 5. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Response2(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  Resp p ou s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case (Switch2 p c av)"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p c av s2 t2\n  a = Switch id2 p c av\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume \"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>P17 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 4. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "thus \"P17 (t1,t2)\""], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "using Switch2(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 1:\"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "obtain rs' where 2:\"dstate t1 = dstate s1 \\<star> rs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        dstate t1 = dstate s1 \\<star> rs' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Lin1(1) 1"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        dstate t1 = dstate s1 \\<star> rs' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dstate t1 = dstate s1 \\<star> rs'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "have 3:\"dstate s2 = dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s2 = dstate t2", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. dstate s2 = dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate s2 = dstate t2\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "have 4:\"initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2", "assume \"initialized t2\""], ["proof (state)\nthis:\n  initialized t2\n\ngoal (1 subgoal):\n 1. initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2", "moreover"], ["proof (state)\nthis:\n  initialized t2\n\ngoal (1 subgoal):\n 1. initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2", "have \"P9 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P9 (t1, t2)", "using reach trans P9_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant composition P9\n\ngoal (1 subgoal):\n 1. P9 (t1, t2)", "by (metis IOA.invariant_def reachable_n)"], ["proof (state)\nthis:\n  P9 (t1, t2)\n\ngoal (1 subgoal):\n 1. initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2", "ultimately"], ["proof (chain)\npicking this:\n  initialized t2\n  P9 (t1, t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  initialized t2\n  P9 (t1, t2)\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> dstate t2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\n\ngoal (3 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 3. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "show \"P17 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "proof(simp, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 5:\"initialized t2\" and 6:\"status t1 p = Ready\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Ready\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs where 7:\"\\<forall> r \\<in> set rs . fst r \\<noteq> p\"\n        and 8:\"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs \n          \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs. fst r \\<noteq> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1 5 6 Lin1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  initialized t2\n  status t1 p = Ready\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs. fst r \\<noteq> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<forall> r \\<in> set rs . fst r \\<noteq> p\" and \"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r \\<noteq> p &&&\n    dstate t2 = dstate s1 \\<star> rs", "using Lin1(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r \\<noteq> p &&&\n    dstate t2 = dstate s1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n  \\<lbrakk>\\<forall>r\\<in>set ?rs56. fst r \\<noteq> p;\n   dstate t2 = dstate s1 \\<star> ?rs56\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "have 9:\"dstate t1 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "using 4 5"], ["proof (prove)\nusing this:\n  initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\n  initialized t2\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> dstate t2\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs'' where 10:\"dstate t2 = dstate t1 \\<star> rs''\" \n        and 11:\"set rs'' \\<subseteq> set rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using consistency 2 8 9"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s1.0 \\<preceq> ?s2.0; ?s2.0 \\<preceq> ?s3.0;\n   ?s3.0 = ?s1.0 \\<star> ?rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       ?s2.0 = ?s1.0 \\<star> rs' \\<and>\n                       ?s3.0 = ?s2.0 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set ?rs \\<and>\n                       set rs'' \\<subseteq> set ?rs\n  dstate t1 = dstate s1 \\<star> rs'\n  dstate t2 = dstate s1 \\<star> rs\n  dstate t1 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs''\n  set rs'' \\<subseteq> set rs\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "have 12:\"\\<forall> r \\<in> set rs'' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r \\<noteq> p", "using 7 11"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r \\<noteq> p", "by blast"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "thus \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using 10 12"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n  dstate t2 = dstate t1 \\<star> rs''\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by auto"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 5:\"initialized t2\" and 6:\"status t1 p = Pending\"\n        and 7:\"\\<not> contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Pending\n  \\<not> contains (dstate t1) (pending t1 p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs where 8:\"\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending s1 p\"\n        and 9:\"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 9:\"\\<not> contains (dstate s1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p)", "using 7 Lin1(1) contains_star"], ["proof (prove)\nusing this:\n  \\<not> contains (dstate t1) (pending t1 p)\n  Lin s1 t1 \\<and> s2 = t2\n  contains ?s ?r \\<Longrightarrow> contains (?s \\<star> ?rs) ?r\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs \n          \\<and> (\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1 5 6 9 Lin1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  initialized t2\n  status t1 p = Pending\n  \\<not> contains (dstate s1) (pending s1 p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending s1 p\" \n          and \"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p &&&\n    dstate t2 = dstate s1 \\<star> rs", "using Lin1(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p &&&\n    dstate t2 = dstate s1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n  \\<lbrakk>\\<forall>r\\<in>set ?rs56.\n              fst r = p \\<longrightarrow> r = pending s1 p;\n   dstate t2 = dstate s1 \\<star> ?rs56\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "have 10:\"dstate t1 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "using 4 5"], ["proof (prove)\nusing this:\n  initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\n  initialized t2\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> dstate t2\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs'' where 11:\"dstate t2 = dstate t1 \\<star> rs''\" \n        and 12:\"set rs'' \\<subseteq> set rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using consistency 2 9 10"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s1.0 \\<preceq> ?s2.0; ?s2.0 \\<preceq> ?s3.0;\n   ?s3.0 = ?s1.0 \\<star> ?rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       ?s2.0 = ?s1.0 \\<star> rs' \\<and>\n                       ?s3.0 = ?s2.0 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set ?rs \\<and>\n                       set rs'' \\<subseteq> set ?rs\n  dstate t1 = dstate s1 \\<star> rs'\n  dstate t2 = dstate s1 \\<star> rs\n  dstate t1 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs''\n  set rs'' \\<subseteq> set rs\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "have 13:\"\\<forall> r \\<in> set rs'' . fst r = p \\<longrightarrow> r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p", "using 8 12"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p", "by blast"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending t1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "using 11 13 Lin1(1)"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> rs''\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "by auto"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "assume 5:\"initialized t2\" and 6:\"status t1 p = Pending\"\n        and 7:\"contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Pending\n  contains (dstate t1) (pending t1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "proof (cases \"contains (dstate s1) (pending s1 p)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "case True"], ["proof (state)\nthis:\n  contains (dstate s1) (pending s1 p)\n\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "obtain rs where 8:\"\\<forall> r \\<in> set rs . fst r \\<noteq> p\"\n          and 9:\"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs \n            \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs. fst r \\<noteq> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1 5 6 True Lin1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  initialized t2\n  status t1 p = Pending\n  contains (dstate s1) (pending s1 p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs. fst r \\<noteq> p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<forall> r \\<in> set rs . fst r \\<noteq> p\" and \"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r \\<noteq> p &&&\n    dstate t2 = dstate s1 \\<star> rs", "using Lin1(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r \\<noteq> p &&&\n    dstate t2 = dstate s1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs. fst r \\<noteq> p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n  \\<lbrakk>\\<forall>r\\<in>set ?rs56. fst r \\<noteq> p;\n   dstate t2 = dstate s1 \\<star> ?rs56\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have 10:\"dstate t1 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "using 4 5"], ["proof (prove)\nusing this:\n  initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\n  initialized t2\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> dstate t2\n\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "obtain rs'' where 11:\"dstate t2 = dstate t1 \\<star> rs''\" \n          and 12:\"set rs'' \\<subseteq> set rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using consistency 2 9 10"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s1.0 \\<preceq> ?s2.0; ?s2.0 \\<preceq> ?s3.0;\n   ?s3.0 = ?s1.0 \\<star> ?rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       ?s2.0 = ?s1.0 \\<star> rs' \\<and>\n                       ?s3.0 = ?s2.0 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set ?rs \\<and>\n                       set rs'' \\<subseteq> set ?rs\n  dstate t1 = dstate s1 \\<star> rs'\n  dstate t2 = dstate s1 \\<star> rs\n  dstate t1 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs''\n  set rs'' \\<subseteq> set rs\n\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have 13:\"\\<forall> r \\<in> set rs'' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r \\<noteq> p", "using 8 12"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r \\<noteq> p", "by blast"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (2 subgoals):\n 1. contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "thus \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using 11 13"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n  dstate t2 = dstate t1 \\<star> rs''\n  \\<forall>r\\<in>set rs''. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by auto"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "case False"], ["proof (state)\nthis:\n  \\<not> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "obtain rs'' where 8:\"dstate t2 = dstate t1 \\<star> rs''\"\n          and 9:\"\\<forall> r \\<in> set rs'' . fst r = p \\<longrightarrow> r = pending t1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where 8:\"\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending s1 p\"\n            and 9:\"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs \n              \\<and> (\\<forall> r \\<in> set rs . fst r  = p \\<longrightarrow> r = pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1 5 6 False Lin1(1)"], ["proof (prove)\nusing this:\n  P17 (s1, s2)\n  initialized t2\n  status t1 p = Pending\n  \\<not> contains (dstate s1) (pending s1 p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        dstate s2 = dstate s1 \\<star> rs \\<and>\n        (\\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<forall> r \\<in> set rs . fst r  = p \\<longrightarrow> r = pending s1 p\" \n              and \"dstate t2 = dstate s1 \\<star> rs\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p &&&\n    dstate t2 = dstate s1 \\<star> rs", "using Lin1(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs \\<and>\n  (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p &&&\n    dstate t2 = dstate s1 \\<star> rs", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<forall>r\\<in>set rs.\n                    fst r = p \\<longrightarrow> r = pending s1 p;\n         dstate t2 = dstate s1 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n  \\<lbrakk>\\<forall>r\\<in>set ?rs56.\n              fst r = p \\<longrightarrow> r = pending s1 p;\n   dstate t2 = dstate s1 \\<star> ?rs56\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 10:\"dstate t1 \\<preceq> dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "using 4 5"], ["proof (prove)\nusing this:\n  initialized t2 \\<Longrightarrow> dstate t1 \\<preceq> dstate t2\n  initialized t2\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> dstate t2", "by auto"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs'' where 11:\"dstate t2 = dstate t1 \\<star> rs''\" \n            and 12:\"set rs'' \\<subseteq> set rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using consistency 2 9 10"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s1.0 \\<preceq> ?s2.0; ?s2.0 \\<preceq> ?s3.0;\n   ?s3.0 = ?s1.0 \\<star> ?rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       ?s2.0 = ?s1.0 \\<star> rs' \\<and>\n                       ?s3.0 = ?s2.0 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set ?rs \\<and>\n                       set rs'' \\<subseteq> set ?rs\n  dstate t1 = dstate s1 \\<star> rs'\n  dstate t2 = dstate s1 \\<star> rs\n  dstate t1 \\<preceq> dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         set rs'' \\<subseteq> set rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs''\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 13:\"\\<forall> r \\<in> set rs'' . fst r = p \\<longrightarrow> r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p", "using 8 12"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p", "by blast"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"dstate t2 = dstate t1 \\<star> rs''\n            \\<and> (\\<forall> r \\<in> set rs'' . fst r = p \\<longrightarrow> r = pending t1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t2 = dstate t1 \\<star> rs'' \\<and>\n    (\\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p)", "using 11 13 Lin1(1)"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> rs''\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending s1 p\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate t1 \\<star> rs'' \\<and>\n    (\\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p)", "by auto"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs'' \\<and>\n  (\\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs'';\n         \\<forall>r\\<in>set rs''.\n            fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> rs'' \\<and>\n  (\\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> rs'' \\<and>\n  (\\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p)\n  \\<lbrakk>dstate t2 = dstate t1 \\<star> ?rs''56;\n   \\<forall>r\\<in>set ?rs''56.\n      fst r = p \\<longrightarrow> r = pending t1 p\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs''\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have 10:\"dstate t1 \\<star> rs'' \n          = dstate t1 \\<star> (filter (\\<lambda> r . r \\<noteq> pending t1 p) rs'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<star> rs'' =\n    dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs''", "using 7 idem_star"], ["proof (prove)\nusing this:\n  contains (dstate t1) (pending t1 p)\n  contains ?s ?r \\<Longrightarrow>\n  ?s \\<star> ?rs = ?s \\<star> filter (\\<lambda>x. x \\<noteq> ?r) ?rs\n\ngoal (1 subgoal):\n 1. dstate t1 \\<star> rs'' =\n    dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs''", "by blast"], ["proof (state)\nthis:\n  dstate t1 \\<star> rs'' =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs''\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have 11:\"\\<forall> r \\<in> set (filter (\\<lambda> r . r \\<noteq> pending t1 p) rs'') . \n          fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'').\n       fst r \\<noteq> p", "using 9"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs''. fst r = p \\<longrightarrow> r = pending t1 p\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'').\n       fst r \\<noteq> p", "by force"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'').\n     fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s1) (pending s1 p) \\<Longrightarrow>\n    \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using 8 10 11"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> rs''\n  dstate t1 \\<star> rs'' =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs''\n  \\<forall>r\\<in>set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'').\n     fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by metis"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 1:\"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "{"], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 2:\"status s1 p \\<noteq> Aborted\""], ["proof (state)\nthis:\n  status s1 p \\<noteq> Aborted\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "have \"\\<exists> rs' . dstate t2 = dstate s2 \\<star> rs'\n        \\<and> (\\<forall> r \\<in> set rs' . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "obtain rs' where 5:\"dstate t2 = dstate s2 \\<star> rs'\"\n          and 6:\"rs' \\<in> pendingSeqs s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         rs' \\<in> pendingSeqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         rs' \\<in> pendingSeqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate t2 = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s2\n\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "have 7:\"\\<forall> r \\<in> set rs' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs'. fst r \\<noteq> p", "proof (rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "assume \"r \\<in> set rs'\""], ["proof (state)\nthis:\n  r \\<in> set rs'\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "with 6"], ["proof (chain)\npicking this:\n  rs' \\<in> pendingSeqs s2\n  r \\<in> set rs'", "have \"r \\<in> pendingReqs s2\""], ["proof (prove)\nusing this:\n  rs' \\<in> pendingSeqs s2\n  r \\<in> set rs'\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs s2", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  r \\<in> pendingReqs s2\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "moreover"], ["proof (state)\nthis:\n  r \\<in> pendingReqs s2\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "have \"P2 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "using reach P2_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P2\n\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "moreover"], ["proof (state)\nthis:\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "have \"status s2 p = Sleep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s2 p = Sleep", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. status s2 p = Sleep", "have \"P6 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "using reach P6_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P6\n\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. status s2 p = Sleep", "thus ?thesis"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. status s2 p = Sleep", "using 2 Lin2(1)"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n  status s1 p \\<noteq> Aborted\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. status s2 p = Sleep", "by force"], ["proof (state)\nthis:\n  status s2 p = Sleep\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  status s2 p = Sleep\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> set rs' \\<Longrightarrow> fst r \\<noteq> p", "ultimately"], ["proof (chain)\npicking this:\n  r \\<in> pendingReqs s2\n  P2 (s1, s2)\n  status s2 p = Sleep", "show \"fst r \\<noteq> p\""], ["proof (prove)\nusing this:\n  r \\<in> pendingReqs s2\n  P2 (s1, s2)\n  status s2 p = Sleep\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "by (auto simp add:pendingReqs_def)"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "using 5 7"], ["proof (prove)\nusing this:\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate t2 = dstate s2 \\<star> rs' \\<and>\n       (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)", "by force"], ["proof (state)\nthis:\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "}"], ["proof (state)\nthis:\n  status s1 ?p58 \\<noteq> Aborted \\<Longrightarrow>\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> ?p58)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "note a = this"], ["proof (state)\nthis:\n  status s1 ?p58 \\<noteq> Aborted \\<Longrightarrow>\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> ?p58)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P17 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)\n 2. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "show \"P17 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 2:\"initialized t2\" and 3:\"status t1 p = Ready\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Ready\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs\" \n        and \"\\<forall> r \\<in> set rs . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"initialized s2\" and \"status s1 p = Ready\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2 &&& status s1 p = Ready", "using Lin2(1) 2 3"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  initialized t2\n  status t1 p = Ready\n\ngoal (1 subgoal):\n 1. initialized s2 &&& status s1 p = Ready", "by auto"], ["proof (state)\nthis:\n  initialized s2\n  status s1 p = Ready\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Ready\n\ngoal (1 subgoal):\n 1. thesis", "using that 1"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Ready\n  \\<lbrakk>dstate s2 = dstate s1 \\<star> ?rs56;\n   \\<forall>r\\<in>set ?rs56. fst r \\<noteq> p\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. thesis", "by fastforce"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "moreover"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs' where \"dstate t2 = dstate s2 \\<star> rs'\" \n        and \"\\<forall> r \\<in> set rs' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a 3 Lin2(1)"], ["proof (prove)\nusing this:\n  status s1 ?p58 \\<noteq> Aborted \\<Longrightarrow>\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> ?p58)\n  status t1 p = Ready\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis SLin_status.distinct(11))"], ["proof (state)\nthis:\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "ultimately"], ["proof (chain)\npicking this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using Lin2(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by auto (metis UnE exec_append set_append)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 2:\"initialized t2\" and 3:\"status t1 p = Pending\"\n        and 4:\"contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Pending\n  contains (dstate t1) (pending t1 p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs\" \n        and \"\\<forall> r \\<in> set rs . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"initialized s2\" and \"status s1 p = Pending\n          \\<and> contains (dstate s1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2 &&&\n    status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)", "using Lin2(1) 2 3 4"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  initialized t2\n  status t1 p = Pending\n  contains (dstate t1) (pending t1 p)\n\ngoal (1 subgoal):\n 1. initialized s2 &&&\n    status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)", "by auto"], ["proof (state)\nthis:\n  initialized s2\n  status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. thesis", "using that 1"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)\n  \\<lbrakk>dstate s2 = dstate s1 \\<star> ?rs56;\n   \\<forall>r\\<in>set ?rs56. fst r \\<noteq> p\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. thesis", "by fastforce"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "moreover"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs' where \"dstate t2 = dstate s2 \\<star> rs'\" \n        and \"\\<forall> r \\<in> set rs' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a 3 Lin2(1)"], ["proof (prove)\nusing this:\n  status s1 ?p58 \\<noteq> Aborted \\<Longrightarrow>\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> ?p58)\n  status t1 p = Pending\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis SLin_status.distinct(9))"], ["proof (state)\nthis:\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "ultimately"], ["proof (chain)\npicking this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using Lin2(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by auto (metis UnE exec_append set_append)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 2:\"initialized t2\" and 3:\"status t1 p = Pending\"\n        and 4:\"\\<not> contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  initialized t2\n  status t1 p = Pending\n  \\<not> contains (dstate t1) (pending t1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs where \"dstate s2 = dstate s1 \\<star> rs\" \n        and \"\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"initialized s2\" and \"status s1 p = Pending\n          \\<and> \\<not> contains (dstate s1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2 &&&\n    status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)", "using Lin2(1) 2 3 4"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  initialized t2\n  status t1 p = Pending\n  \\<not> contains (dstate t1) (pending t1 p)\n\ngoal (1 subgoal):\n 1. initialized s2 &&&\n    status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)", "by auto"], ["proof (state)\nthis:\n  initialized s2\n  status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate s2 = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs.\n            fst r = p \\<longrightarrow> r = pending s1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. thesis", "using that 1"], ["proof (prove)\nusing this:\n  initialized s2\n  status s1 p = Pending \\<and> \\<not> contains (dstate s1) (pending s1 p)\n  \\<lbrakk>dstate s2 = dstate s1 \\<star> ?rs56;\n   \\<forall>r\\<in>set ?rs56.\n      fst r = p \\<longrightarrow> r = pending s1 p\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. thesis", "by fastforce"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "moreover"], ["proof (state)\nthis:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "obtain rs' where \"dstate t2 = dstate s2 \\<star> rs'\" \n        and \"\\<forall> r \\<in> set rs' . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a 3 Lin2(1)"], ["proof (prove)\nusing this:\n  status s1 ?p58 \\<noteq> Aborted \\<Longrightarrow>\n  \\<exists>rs'.\n     dstate t2 = dstate s2 \\<star> rs' \\<and>\n     (\\<forall>r\\<in>set rs'. fst r \\<noteq> ?p58)\n  status t1 p = Pending\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs';\n         \\<forall>r\\<in>set rs'. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis SLin_status.distinct(9))"], ["proof (state)\nthis:\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "ultimately"], ["proof (chain)\npicking this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending t1 p)\""], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "using Lin2(1)"], ["proof (prove)\nusing this:\n  dstate s2 = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending s1 p\n  dstate t2 = dstate s2 \\<star> rs'\n  \\<forall>r\\<in>set rs'. fst r \\<noteq> p\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "by auto (metis UnE exec_append set_append)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "case Reco2"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 0:\"P17 (s1,s2)\""], ["proof (state)\nthis:\n  P17 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "obtain rs' where 1:\"dstate t2 = dstate t1 \\<star> rs'\" \n      and 2:\"set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain ivs rs where 1:\"ivs \\<subseteq> initVals s2\" and 2:\"ivs \\<noteq> {}\"\n        and 3:\"dstate t2 = \\<Sqinter>ivs \\<star> rs\" and 4:\"rs \\<in> pendingSeqs s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         dstate t2 = \\<Sqinter> ivs \\<star> rs;\n         rs \\<in> pendingSeqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Reco2(1)"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         dstate t2 = \\<Sqinter> ivs \\<star> rs;\n         rs \\<in> pendingSeqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add:safeInits_def initSets_def, force)"], ["proof (state)\nthis:\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n  dstate t2 = \\<Sqinter> ivs \\<star> rs\n  rs \\<in> pendingSeqs s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs'' where \"set rs'' \\<subseteq> pendingReqs s1\"\n        and \"\\<Sqinter>ivs = dstate s1 \\<star> rs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>set rs'' \\<subseteq> pendingReqs s1;\n         \\<Sqinter> ivs = dstate s1 \\<star> rs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>set rs'' \\<subseteq> pendingReqs s1;\n         \\<Sqinter> ivs = dstate s1 \\<star> rs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"P8a (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8a (s1, s2)", "using reach P8a_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P8a\n\ngoal (1 subgoal):\n 1. P8a (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P8a (s1, s2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs''.\n        \\<lbrakk>set rs'' \\<subseteq> pendingReqs s1;\n         \\<Sqinter> ivs = dstate s1 \\<star> rs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  P8a (s1, s2)\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  P8a (s1, s2)\n  \\<lbrakk>set ?rs''56 \\<subseteq> pendingReqs s1;\n   \\<Sqinter> ivs = dstate s1 \\<star> ?rs''56\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "using 1 2"], ["proof (prove)\nusing this:\n  P8a (s1, s2)\n  \\<lbrakk>set ?rs''56 \\<subseteq> pendingReqs s1;\n   \\<Sqinter> ivs = dstate s1 \\<star> ?rs''56\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp add:initSets_def pendingSeqs_def)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set rs'' \\<subseteq> pendingReqs s1\n  \\<Sqinter> ivs = dstate s1 \\<star> rs''\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"dstate t2 = dstate t1 \\<star> (rs''@rs) \n        \\<and> set rs'' \\<subseteq> pendingReqs s1 \n          \\<and> set rs \\<subseteq> pendingReqs s2\""], ["proof (prove)\nusing this:\n  set rs'' \\<subseteq> pendingReqs s1\n  \\<Sqinter> ivs = dstate s1 \\<star> rs''\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate t1 \\<star> append rs rs'' \\<and>\n    set rs'' \\<subseteq> pendingReqs s1 \\<and>\n    set rs \\<subseteq> pendingReqs s2", "using 3 4 Reco2(1) 4"], ["proof (prove)\nusing this:\n  set rs'' \\<subseteq> pendingReqs s1\n  \\<Sqinter> ivs = dstate s1 \\<star> rs''\n  dstate t2 = \\<Sqinter> ivs \\<star> rs\n  rs \\<in> pendingSeqs s2\n  Reco s2 t2 \\<and> s1 = t1\n  rs \\<in> pendingSeqs s2\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate t1 \\<star> append rs rs'' \\<and>\n    set rs'' \\<subseteq> pendingReqs s1 \\<and>\n    set rs \\<subseteq> pendingReqs s2", "by (metis exec_append mem_Collect_eq pendingSeqs_def)"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> append rs rs'' \\<and>\n  set rs'' \\<subseteq> pendingReqs s1 \\<and>\n  set rs \\<subseteq> pendingReqs s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate t2 = dstate t1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> append rs rs'' \\<and>\n  set rs'' \\<subseteq> pendingReqs s1 \\<and>\n  set rs \\<subseteq> pendingReqs s2\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  dstate t2 = dstate t1 \\<star> append rs rs'' \\<and>\n  set rs'' \\<subseteq> pendingReqs s1 \\<and>\n  set rs \\<subseteq> pendingReqs s2\n  \\<lbrakk>dstate t2 = dstate t1 \\<star> ?rs'56;\n   set ?rs'56 \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by force"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "{"], ["proof (state)\nthis:\n  dstate t2 = dstate t1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "fix p r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 1:\"r \\<in> pendingReqs s2\" \n        and 2:\"status s1 p \\<noteq> Aborted\""], ["proof (state)\nthis:\n  r \\<in> pendingReqs s2\n  status s1 p \\<noteq> Aborted\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "have \"fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "have \"P2 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "using reach P2_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P2\n\ngoal (1 subgoal):\n 1. P2 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "moreover"], ["proof (state)\nthis:\n  P2 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "have \"P6 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "using reach P6_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P6\n\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "ultimately"], ["proof (chain)\npicking this:\n  P2 (s1, s2)\n  P6 (s1, s2)", "show ?thesis"], ["proof (prove)\nusing this:\n  P2 (s1, s2)\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "using 1 2 Reco2(1)"], ["proof (prove)\nusing this:\n  P2 (s1, s2)\n  P6 (s1, s2)\n  r \\<in> pendingReqs s2\n  status s1 p \\<noteq> Aborted\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "by (simp add:pendingReqs_def)\n            (metis SLin_status.distinct(1,5))"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "note 3 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "fix r p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "assume 1:\"r \\<in> pendingReqs s1\" and 2:\"fst r = p\"\n        and 3:\"status s1 p = Pending\""], ["proof (state)\nthis:\n  r \\<in> pendingReqs s1\n  fst r = p\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "have \"r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = pending s1 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r = pending s1 p", "have \"P1 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "using reach P1_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P1\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "thus ?thesis"], ["proof (prove)\nusing this:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "using 1 2 3"], ["proof (prove)\nusing this:\n  P1 (s1, s2)\n  r \\<in> pendingReqs s1\n  fst r = p\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "by (auto simp add:pendingReqs_def)"], ["proof (state)\nthis:\n  r = pending s1 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?r58 \\<in> pendingReqs s1; fst ?r58 = ?p58;\n   status s1 ?p58 = Pending\\<rbrakk>\n  \\<Longrightarrow> ?r58 = pending s1 ?p58\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "note 10 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?r58 \\<in> pendingReqs s1; fst ?r58 = ?p58;\n   status s1 ?p58 = Pending\\<rbrakk>\n  \\<Longrightarrow> ?r58 = pending s1 ?p58\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P17 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P17 (t1, t2)", "show \"P17 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P17 (t1, t2)", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 4:\"status t1 p = Ready\""], ["proof (state)\nthis:\n  status t1 p = Ready\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Ready\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 3. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "assume 5:\"r \\<in> pendingReqs s1\""], ["proof (state)\nthis:\n  r \\<in> pendingReqs s1\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have \"fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "have \"P1 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "using reach P1_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P1\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "with 4 5 Reco2(1)"], ["proof (chain)\npicking this:\n  status t1 p = Ready\n  r \\<in> pendingReqs s1\n  Reco s2 t2 \\<and> s1 = t1\n  P1 (s1, s2)", "show ?thesis"], ["proof (prove)\nusing this:\n  status t1 p = Ready\n  r \\<in> pendingReqs s1\n  Reco s2 t2 \\<and> s1 = t1\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "by (auto simp add:pendingReqs_def)"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "}"], ["proof (state)\nthis:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow> fst ?r58 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "moreover"], ["proof (state)\nthis:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow> fst ?r58 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have \"\\<And> r . r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "using 3 4 Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n  status t1 p = Ready\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "ultimately"], ["proof (chain)\npicking this:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow> fst ?r58 \\<noteq> p\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p", "show ?thesis"], ["proof (prove)\nusing this:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow> fst ?r58 \\<noteq> p\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "using 1 2"], ["proof (prove)\nusing this:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow> fst ?r58 \\<noteq> p\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  dstate t2 = dstate t1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by blast"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 4:\"status t1 p = Pending\"\n        and 5:\"contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  status t1 p = Pending\n  contains (dstate t1) (pending t1 p)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n 2. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs\n        \\<and> (\\<forall> r \\<in> set rs . fst r \\<noteq> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "let ?rs = \"filter (\\<lambda> r . r \\<noteq> pending t1 p) rs'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have \"dstate t2 = dstate t1 \\<star> ?rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t2 =\n    dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'", "using 5 1 idem_star"], ["proof (prove)\nusing this:\n  contains (dstate t1) (pending t1 p)\n  dstate t2 = dstate t1 \\<star> rs'\n  contains ?s ?r \\<Longrightarrow>\n  ?s \\<star> ?rs = ?s \\<star> filter (\\<lambda>x. x \\<noteq> ?r) ?rs\n\ngoal (1 subgoal):\n 1. dstate t2 =\n    dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'", "by metis"], ["proof (state)\nthis:\n  dstate t2 =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "moreover"], ["proof (state)\nthis:\n  dstate t2 =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "{"], ["proof (state)\nthis:\n  dstate t2 =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "assume \"r \\<in> set ?rs\""], ["proof (state)\nthis:\n  r \\<in> set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs')\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "have \"fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. fst r__ \\<noteq> p", "assume 6:\"r \\<in> set rs'\" and 7:\"fst r = p\""], ["proof (state)\nthis:\n  r \\<in> set rs'\n  fst r = p\n\ngoal (1 subgoal):\n 1. fst r__ \\<noteq> p", "have \"r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = pending s1 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r = pending s1 p", "have \"\\<And> r . r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "using 3 4 Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n  status t1 p = Pending\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "moreover"], ["proof (state)\nthis:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "have \"\\<And> r . r \\<in> pendingReqs s1 \\<Longrightarrow> fst r = p\n                  \\<Longrightarrow> r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> pendingReqs s1; fst r = p\\<rbrakk>\n       \\<Longrightarrow> r = pending s1 p", "using 10 4 Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r58 \\<in> pendingReqs s1; fst ?r58 = ?p58;\n   status s1 ?p58 = Pending\\<rbrakk>\n  \\<Longrightarrow> ?r58 = pending s1 ?p58\n  status t1 p = Pending\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> pendingReqs s1; fst r = p\\<rbrakk>\n       \\<Longrightarrow> r = pending s1 p", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "ultimately"], ["proof (chain)\npicking this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p", "show ?thesis"], ["proof (prove)\nusing this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "using 2 6 7"], ["proof (prove)\nusing this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n  set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  r \\<in> set rs'\n  fst r = p\n\ngoal (1 subgoal):\n 1. r = pending s1 p", "by (metis (lifting, no_types) UnE subsetD)"], ["proof (state)\nthis:\n  r = pending s1 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. fst r__ \\<noteq> p", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?ra58 \\<in> set rs'; fst ?ra58 = p\\<rbrakk>\n  \\<Longrightarrow> ?ra58 = pending s1 p\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ra58 \\<in> set rs'; fst ?ra58 = p\\<rbrakk>\n  \\<Longrightarrow> ?ra58 = pending s1 p\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "using \\<open>r \\<in> set ?rs\\<close> Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ra58 \\<in> set rs'; fst ?ra58 = p\\<rbrakk>\n  \\<Longrightarrow> ?ra58 = pending s1 p\n  r \\<in> set (filter (\\<lambda>r. r \\<noteq> pending t1 p) rs')\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. fst r \\<noteq> p", "by fastforce"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "}"], ["proof (state)\nthis:\n  ?r58\n  \\<in> set (filter (\\<lambda>r. r \\<noteq> pending t1 p)\n              rs') \\<Longrightarrow>\n  fst ?r58 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "ultimately"], ["proof (chain)\npicking this:\n  dstate t2 =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'\n  ?r58\n  \\<in> set (filter (\\<lambda>r. r \\<noteq> pending t1 p)\n              rs') \\<Longrightarrow>\n  fst ?r58 \\<noteq> p", "show ?thesis"], ["proof (prove)\nusing this:\n  dstate t2 =\n  dstate t1 \\<star> filter (\\<lambda>r. r \\<noteq> pending t1 p) rs'\n  ?r58\n  \\<in> set (filter (\\<lambda>r. r \\<noteq> pending t1 p)\n              rs') \\<Longrightarrow>\n  fst ?r58 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r \\<noteq> p)", "by blast"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r \\<noteq> p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "assume 4:\"status t1 p = Pending\"\n        and 5:\"\\<not> contains (dstate t1) (pending t1 p)\""], ["proof (state)\nthis:\n  status t1 p = Pending\n  \\<not> contains (dstate t1) (pending t1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>initialized t2; status t1 p = Pending;\n        \\<not> contains (dstate t1) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs.\n                            dstate t2 = dstate t1 \\<star> rs \\<and>\n                            (\\<forall>r\\<in>set rs.\n                                fst r = p \\<longrightarrow>\n                                r = pending t1 p)", "show \"\\<exists> rs . dstate t2 = dstate t1 \\<star> rs \n        \\<and> (\\<forall> r \\<in> set rs . fst r = p \\<longrightarrow> r = pending t1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "have \"\\<And> r . r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "using 3 4 Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r58 \\<in> pendingReqs s2;\n   status s1 ?p58 \\<noteq> Aborted\\<rbrakk>\n  \\<Longrightarrow> fst ?r58 \\<noteq> ?p58\n  status t1 p = Pending\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<in> pendingReqs s2 \\<Longrightarrow> fst r \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "moreover"], ["proof (state)\nthis:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "have \"\\<And> r . r \\<in> pendingReqs s1 \\<Longrightarrow> fst r = p\n          \\<Longrightarrow> r = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> pendingReqs s1; fst r = p\\<rbrakk>\n       \\<Longrightarrow> r = pending s1 p", "using 10 4 Reco2(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?r58 \\<in> pendingReqs s1; fst ?r58 = ?p58;\n   status s1 ?p58 = Pending\\<rbrakk>\n  \\<Longrightarrow> ?r58 = pending s1 ?p58\n  status t1 p = Pending\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> pendingReqs s1; fst r = p\\<rbrakk>\n       \\<Longrightarrow> r = pending s1 p", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "ultimately"], ["proof (chain)\npicking this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p", "show ?thesis"], ["proof (prove)\nusing this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "using 1 2 Reco2(1)"], ["proof (prove)\nusing this:\n  ?r56 \\<in> pendingReqs s2 \\<Longrightarrow> fst ?r56 \\<noteq> p\n  \\<lbrakk>?r56 \\<in> pendingReqs s1; fst ?r56 = p\\<rbrakk>\n  \\<Longrightarrow> ?r56 = pending s1 p\n  dstate t2 = dstate t1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       dstate t2 = dstate t1 \\<star> rs \\<and>\n       (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)", "by (metis (lifting, no_types) UnE rev_subsetD)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rs.\n     dstate t2 = dstate t1 \\<star> rs \\<and>\n     (\\<forall>r\\<in>set rs. fst r = p \\<longrightarrow> r = pending t1 p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P17 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P21_invariant:\nshows \"invariant (composition) P21\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P21", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P21 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P21 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P21 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "thus \"P21 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P21 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P21 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "assume hyp: \"P21 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach: \"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  P21 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P21 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P21 (aa, ba)", "show \"P21 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "proof (cases \"initialized t2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "case True"], ["proof (state)\nthis:\n  initialized t2\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  initialized t2\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "have P12:\"P12 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "using P12_invariant reach trans"], ["proof (prove)\nusing this:\n  invariant composition P12\n  reachable composition (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. P12 (t1, t2)", "by (metis invariant_def reachable_n)"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  P12 (t1, t2)\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "have P11:\"P11 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P11 (t1, t2)", "using P11_invariant reach trans"], ["proof (prove)\nusing this:\n  invariant composition P11\n  reachable composition (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. P11 (t1, t2)", "by (metis IOA.invariant_def reachable_n)"], ["proof (state)\nthis:\n  P11 (t1, t2)\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  P11 (t1, t2)\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "have P20:\"P20 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P20 (t1, t2)", "using P20_invariant reach trans"], ["proof (prove)\nusing this:\n  invariant composition P20\n  reachable composition (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. P20 (t1, t2)", "by (metis IOA.invariant_def reachable_n)"], ["proof (state)\nthis:\n  P20 (t1, t2)\n\ngoal (2 subgoals):\n 1. initialized t2 \\<Longrightarrow> P21 (t1, t2)\n 2. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "ultimately"], ["proof (chain)\npicking this:\n  initialized t2\n  P12 (t1, t2)\n  P11 (t1, t2)\n  P20 (t1, t2)", "show \"P21 (t1,t2)\""], ["proof (prove)\nusing this:\n  initialized t2\n  P12 (t1, t2)\n  P11 (t1, t2)\n  P20 (t1, t2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp\n      (metis pre_RDR.trans)"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "case False"], ["proof (state)\nthis:\n  \\<not> initialized t2\n\ngoal (1 subgoal):\n 1. \\<not> initialized t2 \\<Longrightarrow> P21 (t1, t2)", "show \"P21 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using trans"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Switch2 p c av)"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p c av s2 t2\n  a = Switch id2 p c av\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "obtain av where \"abortVals t2 = abortVals s2 \\<union> {av}\"\n        and \"\\<Sqinter>(abortVals s1) \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>abortVals t2 = abortVals s2 \\<union> {av};\n         \\<Sqinter> abortVals s1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>abortVals t2 = abortVals s2 \\<union> {av};\n         \\<Sqinter> abortVals s1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain ivs rs where 1:\"abortVals t2 = abortVals s2 \\<union> {\\<Sqinter>ivs \\<star> rs}\"\n          and 2:\"ivs \\<subseteq> initVals s2\" and 3:\"ivs \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>abortVals t2 =\n                 abortVals s2 \\<union> {\\<Sqinter> ivs \\<star> rs};\n         ivs \\<subseteq> initVals s2; ivs \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using False Switch2(1)"], ["proof (prove)\nusing this:\n  \\<not> initialized t2\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>abortVals t2 =\n                 abortVals s2 \\<union> {\\<Sqinter> ivs \\<star> rs};\n         ivs \\<subseteq> initVals s2; ivs \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:safeAborts_def\n            uninitAborts_def initSets_def)"], ["proof (state)\nthis:\n  abortVals t2 = abortVals s2 \\<union> {\\<Sqinter> ivs \\<star> rs}\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>abortVals t2 = abortVals s2 \\<union> {av};\n         \\<Sqinter> abortVals s1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 4:\"\\<Sqinter>(abortVals s1) \\<preceq> \\<Sqinter>ivs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "have \"P11 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "using reach P11_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P11\n\ngoal (1 subgoal):\n 1. P11 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "moreover"], ["proof (state)\nthis:\n  P11 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "have \"P13 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using reach P13_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P13\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "ultimately"], ["proof (chain)\npicking this:\n  P11 (s1, s2)\n  P13 (s1, s2)", "show ?thesis"], ["proof (prove)\nusing this:\n  P11 (s1, s2)\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "using 2 3"], ["proof (prove)\nusing this:\n  P11 (s1, s2)\n  P13 (s1, s2)\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs", "by (simp add: subset_imp)"], ["proof (state)\nthis:\n  \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs\n\ngoal (1 subgoal):\n 1. (\\<And>av.\n        \\<lbrakk>abortVals t2 = abortVals s2 \\<union> {av};\n         \\<Sqinter> abortVals s1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 1 4"], ["proof (prove)\nusing this:\n  \\<lbrakk>abortVals t2 = abortVals s2 \\<union> {?av56};\n   \\<Sqinter> abortVals s1 \\<preceq> ?av56\\<rbrakk>\n  \\<Longrightarrow> thesis\n  abortVals t2 = abortVals s2 \\<union> {\\<Sqinter> ivs \\<star> rs}\n  \\<Sqinter> abortVals s1 \\<preceq> \\<Sqinter> ivs\n\ngoal (1 subgoal):\n 1. thesis", "by simp\n          (metis coboundedI2 less_eq_def orderE)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  abortVals t2 = abortVals s2 \\<union> {av}\n  \\<Sqinter> abortVals s1 \\<preceq> av\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "with hyp"], ["proof (chain)\npicking this:\n  P21 (s1, s2)\n  abortVals t2 = abortVals s2 \\<union> {av}\n  \\<Sqinter> abortVals s1 \\<preceq> av", "show ?thesis"], ["proof (prove)\nusing this:\n  P21 (s1, s2)\n  abortVals t2 = abortVals s2 \\<union> {av}\n  \\<Sqinter> abortVals s1 \\<preceq> av\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using Switch2(1)"], ["proof (prove)\nusing this:\n  P21 (s1, s2)\n  abortVals t2 = abortVals s2 \\<union> {av}\n  \\<Sqinter> abortVals s1 \\<preceq> av\n  s1 = t1 \\<and> Abort p c av__ s2 t2\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Switch1 p c av)"], ["proof (state)\nthis:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  a = Switch id1 p c av\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "proof (cases \"abortVals s1 = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)\n 2. abortVals s1 \\<noteq> {} \\<Longrightarrow> P21 (t1, t2)", "case False"], ["proof (state)\nthis:\n  abortVals s1 \\<noteq> {}\n\ngoal (2 subgoals):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)\n 2. abortVals s1 \\<noteq> {} \\<Longrightarrow> P21 (t1, t2)", "have \"\\<Sqinter> (abortVals t1) \\<preceq> \\<Sqinter> (abortVals s1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "obtain av where \"abortVals t1 = abortVals s1 \\<union> {av}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>av.\n        abortVals t1 = abortVals s1 \\<union> {av} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. (\\<And>av.\n        abortVals t1 = abortVals s1 \\<union> {av} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  abortVals t1 = abortVals s1 \\<union> {av}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "moreover"], ["proof (state)\nthis:\n  abortVals t1 = abortVals s1 \\<union> {av}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "have \"P13 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "using reach P13_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P13\n\ngoal (1 subgoal):\n 1. P13 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "ultimately"], ["proof (chain)\npicking this:\n  abortVals t1 = abortVals s1 \\<union> {av}\n  P13 (s1, s2)", "show ?thesis"], ["proof (prove)\nusing this:\n  abortVals t1 = abortVals s1 \\<union> {av}\n  P13 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "using False"], ["proof (prove)\nusing this:\n  abortVals t1 = abortVals s1 \\<union> {av}\n  P13 (s1, s2)\n  abortVals s1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n\ngoal (2 subgoals):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)\n 2. abortVals s1 \\<noteq> {} \\<Longrightarrow> P21 (t1, t2)", "moreover"], ["proof (state)\nthis:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n\ngoal (2 subgoals):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)\n 2. abortVals s1 \\<noteq> {} \\<Longrightarrow> P21 (t1, t2)", "have \"abortVals t2 = abortVals s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals t2 = abortVals s2", "using Switch1(1)"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. abortVals t2 = abortVals s2", "by auto"], ["proof (state)\nthis:\n  abortVals t2 = abortVals s2\n\ngoal (2 subgoals):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)\n 2. abortVals s1 \\<noteq> {} \\<Longrightarrow> P21 (t1, t2)", "ultimately"], ["proof (chain)\npicking this:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n  abortVals t2 = abortVals s2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n  abortVals t2 = abortVals s2\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  \\<Sqinter> abortVals t1 \\<preceq> \\<Sqinter> abortVals s1\n  abortVals t2 = abortVals s2\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by auto (metis coboundedI2 orderE)"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (1 subgoal):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)", "case True"], ["proof (state)\nthis:\n  abortVals s1 = {}\n\ngoal (1 subgoal):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)", "have \"abortVals t2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals t2 = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. abortVals t2 = {}", "have \"P19 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P19 (s1, s2)", "using reach P19_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P19\n\ngoal (1 subgoal):\n 1. P19 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P19 (s1, s2)\n\ngoal (1 subgoal):\n 1. abortVals t2 = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  P19 (s1, s2)\n\ngoal (1 subgoal):\n 1. abortVals t2 = {}", "using True Switch1(1)"], ["proof (prove)\nusing this:\n  P19 (s1, s2)\n  abortVals s1 = {}\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n\ngoal (1 subgoal):\n 1. abortVals t2 = {}", "by auto"], ["proof (state)\nthis:\n  abortVals t2 = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  abortVals t2 = {}\n\ngoal (1 subgoal):\n 1. abortVals s1 = {} \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  abortVals t2 = {}\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Invoke1 p c)"], ["proof (state)\nthis:\n  Inv c c_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Invoke p c c_\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv c c_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Invoke p c c_\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Inv c c_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Invoke p c c_\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Invoke2 p c)"], ["proof (state)\nthis:\n  Inv c c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Invoke p c c_\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv c c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Invoke p c c_\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Inv c c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Invoke p c c_\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (5 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Response1 p ou)"], ["proof (state)\nthis:\n  Resp ou ou_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Response p ou ou_\n\ngoal (5 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Resp ou ou_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Response p ou ou_\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Resp ou ou_ s1 t1 \\<and> s2 = t2\n  p < id1\n  a = Response p ou ou_\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (4 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case (Response2 p ou)"], ["proof (state)\nthis:\n  Resp ou ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Response p ou ou_\n\ngoal (4 subgoals):\n 1. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 4. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Resp ou ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Response p ou ou_\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Resp ou ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> p \\<and> p < id2\n  a = Response p ou ou_\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by simp"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 3. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)\n 2. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "case Reco2"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P21 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n  P21 (s1, s2)\n\ngoal (1 subgoal):\n 1. P21 (t1, t2)", "by auto"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P21 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P22_invariant:\nshows \"invariant (composition) P22\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P22", "proof (auto simp only:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P22 (a, b)", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P22 (a, b)", "assume 1:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P22 (a, b)", "have P9:\"P9 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "using P9_invariant 1"], ["proof (prove)\nusing this:\n  invariant composition P9\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "by (simp add:invariant_def)"], ["proof (state)\nthis:\n  P9 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P22 (a, b)", "show \"P22 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P22 (s1, s2)", "proof (simp only:P22.simps, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2", "assume \"initialized s2\""], ["proof (state)\nthis:\n  initialized s2\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2", "show \"dstate (f (s1,s2)) = dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "proof (cases \"dstate s2 = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    dstate (f (s1, s2)) = dstate s2", "case False"], ["proof (state)\nthis:\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    dstate (f (s1, s2)) = dstate s2", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "by auto"], ["proof (state)\nthis:\n  dstate (f (s1, s2)) = dstate s2\n\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2", "case True"], ["proof (state)\nthis:\n  dstate s2 = \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow> dstate (f (s1, s2)) = dstate s2", "show \"dstate  (f (s1,s2)) = dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "have \"dstate s1 \\<preceq> dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "using \\<open>initialized s2\\<close> and \\<open>P9 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  initialized s2\n  P9 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "by auto"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate s2\n\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "hence \"dstate s1 = dstate s2\""], ["proof (prove)\nusing this:\n  dstate s1 \\<preceq> dstate s2\n\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "using True"], ["proof (prove)\nusing this:\n  dstate s1 \\<preceq> dstate s2\n  dstate s2 = \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "by (metis antisym bot)"], ["proof (state)\nthis:\n  dstate s1 = dstate s2\n\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate s1 = dstate s2\n\ngoal (1 subgoal):\n 1. dstate (f (s1, s2)) = dstate s2", "by auto"], ["proof (state)\nthis:\n  dstate (f (s1, s2)) = dstate s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate (f (s1, s2)) = dstate s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate (f (s1, s2)) = dstate s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P22 (s1, s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P23_invariant:\nshows \"invariant (composition) P23\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P23", "proof (auto simp only:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P23 (a, b)", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P23 (a, b)", "assume 1:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P23 (a, b)", "show \"P23 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P23 (s1, s2)", "proof (simp only:P23.simps, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> initialized s2; x \\<in> pendingSeqs s1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> pendingSeqs (f (s1, s2))", "fix rs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> initialized s2; x \\<in> pendingSeqs s1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> pendingSeqs (f (s1, s2))", "assume 2:\"\\<not>initialized s2\" and 3:\"rs\\<in>pendingSeqs s1\""], ["proof (state)\nthis:\n  \\<not> initialized s2\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> initialized s2; x \\<in> pendingSeqs s1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> pendingSeqs (f (s1, s2))", "show \"rs\\<in> pendingSeqs (f (s1,s2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "assume 3:\"r \\<in> pendingReqs s1\""], ["proof (state)\nthis:\n  r \\<in> pendingReqs s1\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "have 4:\"status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\"\n          and 5:\"pending s1 (fst r) = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted &&&\n    pending s1 (fst r) = r", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\n 2. pending s1 (fst r) = r", "have \"P1 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "using 1 P1_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P1\n\ngoal (1 subgoal):\n 1. P1 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n\ngoal (2 subgoals):\n 1. status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\n 2. pending s1 (fst r) = r", "thus \"status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\"\n          and \"pending s1 (fst r) = r\""], ["proof (prove)\nusing this:\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted &&&\n    pending s1 (fst r) = r", "using 3"], ["proof (prove)\nusing this:\n  P1 (s1, s2)\n  r \\<in> pendingReqs s1\n\ngoal (1 subgoal):\n 1. status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted &&&\n    pending s1 (fst r) = r", "by (auto simp add:pendingReqs_def)"], ["proof (state)\nthis:\n  status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\n  pending s1 (fst r) = r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\n  pending s1 (fst r) = r\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "have \"r \\<in> pendingReqs (f (s1,s2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "using 4"], ["proof (prove)\nusing this:\n  status s1 (fst r) = Pending \\<or> status s1 (fst r) = Aborted\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. status s1 (fst r) = Pending \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))\n 2. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "assume \"status s1 (fst r) = Pending\""], ["proof (state)\nthis:\n  status s1 (fst r) = Pending\n\ngoal (2 subgoals):\n 1. status s1 (fst r) = Pending \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))\n 2. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "with 5"], ["proof (chain)\npicking this:\n  pending s1 (fst r) = r\n  status s1 (fst r) = Pending", "show ?thesis"], ["proof (prove)\nusing this:\n  pending s1 (fst r) = r\n  status s1 (fst r) = Pending\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "by (auto simp add:pendingReqs_def)\n            (metis SLin_status.distinct(9))"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "assume 6:\"status s1 (fst r) = Aborted\""], ["proof (state)\nthis:\n  status s1 (fst r) = Aborted\n\ngoal (1 subgoal):\n 1. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "have 7:\"pending s1 (fst r) = pending s2 (fst r)\n            \\<and> status s2 (fst r) \\<in> {Pending,Aborted}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending s1 (fst r) = pending s2 (fst r) \\<and>\n    status s2 (fst r) \\<in> {Pending, Aborted}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pending s1 (fst r) = pending s2 (fst r) \\<and>\n    status s2 (fst r) \\<in> {Pending, Aborted}", "have \"P7 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "using 1 P7_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P7\n\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. pending s1 (fst r) = pending s2 (fst r) \\<and>\n    status s2 (fst r) \\<in> {Pending, Aborted}", "thus ?thesis"], ["proof (prove)\nusing this:\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. pending s1 (fst r) = pending s2 (fst r) \\<and>\n    status s2 (fst r) \\<in> {Pending, Aborted}", "using 2 6"], ["proof (prove)\nusing this:\n  P7 (s1, s2)\n  \\<not> initialized s2\n  status s1 (fst r) = Aborted\n\ngoal (1 subgoal):\n 1. pending s1 (fst r) = pending s2 (fst r) \\<and>\n    status s2 (fst r) \\<in> {Pending, Aborted}", "by auto"], ["proof (state)\nthis:\n  pending s1 (fst r) = pending s2 (fst r) \\<and>\n  status s2 (fst r) \\<in> {Pending, Aborted}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pending s1 (fst r) = pending s2 (fst r) \\<and>\n  status s2 (fst r) \\<in> {Pending, Aborted}\n\ngoal (1 subgoal):\n 1. status s1 (fst r) = Aborted \\<Longrightarrow>\n    r \\<in> pendingReqs (f (s1, s2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "using 6 5 7"], ["proof (prove)\nusing this:\n  status s1 (fst r) = Aborted\n  pending s1 (fst r) = r\n  pending s1 (fst r) = pending s2 (fst r) \\<and>\n  status s2 (fst r) \\<in> {Pending, Aborted}\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "by (simp add:pendingReqs_def, metis)"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "}"], ["proof (state)\nthis:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow>\n  ?r58 \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow>\n  ?r58 \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "using 3"], ["proof (prove)\nusing this:\n  ?r58 \\<in> pendingReqs s1 \\<Longrightarrow>\n  ?r58 \\<in> pendingReqs (f (s1, s2))\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs (f (s1, s2))", "by (auto simp only:pendingSeqs_def)"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs (f (s1, s2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs (f (s1, s2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P23 (s1, s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P26_invariant:\nshows \"invariant (composition) P26\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P26", "proof (rule invariantI, simp_all only:split_paired_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P26 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P26 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "assume \"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow> P26 (a, b)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "thus \"P26 (s1,s2)\""], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (1 subgoal):\n 1. P26 (s1, s2)", "using ids"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. P26 (s1, s2)", "by (auto simp add:comp_simps)"], ["proof (state)\nthis:\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "fix s1 s2 t1 t2 a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "assume hyp: \"P26 (s1,s2)\" and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1,t2)\"\n  and reach:\"reachable composition (s1,s2)\""], ["proof (state)\nthis:\n  P26 (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b); P26 (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> P26 (aa, ba)", "show \"P26 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using trans and hyp"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 9. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 9. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "hence 1:\"dstate s2 \\<preceq> dstate t2\""], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> dstate t2", "by auto (metis less_eq_def)"], ["proof (state)\nthis:\n  dstate s2 \\<preceq> dstate t2\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 9. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "have 2:\"t2 = s2\\<lparr>dstate := dstate t2\\<rparr>\" and 3:\"s1 = t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t2 = s2\\<lparr>dstate := dstate t2\\<rparr> &&& s1 = t1", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. t2 = s2\\<lparr>dstate := dstate t2\\<rparr> &&& s1 = t1", "by auto"], ["proof (state)\nthis:\n  t2 = s2\\<lparr>dstate := dstate t2\\<rparr>\n  s1 = t1\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Lin s2 t2 \\<and> s1 = t1;\n     a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 9. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "proof (simp, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "assume 4:\"status t1 p = Aborted\"\n        and 5:\"\\<not> contains (dstate t2) (pending t1 p)\""], ["proof (state)\nthis:\n  status t1 p = Aborted\n  \\<not> contains (dstate t2) (pending t1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 6:\"status s1 p = Aborted\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Aborted", "using 3 4"], ["proof (prove)\nusing this:\n  s1 = t1\n  status t1 p = Aborted\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted", "by auto"], ["proof (state)\nthis:\n  status s1 p = Aborted\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 7:\"pending s1 p = pending t1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending s1 p = pending t1 p", "using 3"], ["proof (prove)\nusing this:\n  s1 = t1\n\ngoal (1 subgoal):\n 1. pending s1 p = pending t1 p", "by simp"], ["proof (state)\nthis:\n  pending s1 p = pending t1 p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 8:\"\\<not> contains (dstate s2) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s2) (pending s1 p)", "using 1 5 7"], ["proof (prove)\nusing this:\n  dstate s2 \\<preceq> dstate t2\n  \\<not> contains (dstate t2) (pending t1 p)\n  pending s1 p = pending t1 p\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s2) (pending s1 p)", "by simp (metis contains_star less_eq_def)"], ["proof (state)\nthis:\n  \\<not> contains (dstate s2) (pending s1 p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 11:\"status s2 p \\<in> {Pending,Aborted}\" \n        and 9:\"pending s1 p = pending s2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} &&& pending s1 p = pending s2 p", "using hyp 6 8"], ["proof (prove)\nusing this:\n  P26 (s1, s2)\n  status s1 p = Aborted\n  \\<not> contains (dstate s2) (pending s1 p)\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} &&& pending s1 p = pending s2 p", "by auto"], ["proof (state)\nthis:\n  status s2 p \\<in> {Pending, Aborted}\n  pending s1 p = pending s2 p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "show \"(status t2 p = Pending \\<or> status t2 p = Aborted) \n        \\<and> pending t1 p = pending t2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "from 2"], ["proof (chain)\npicking this:\n  t2 = s2\\<lparr>dstate := dstate t2\\<rparr>", "have \"pending s2 = pending t2\" \n            and \"status s2 = status t2\""], ["proof (prove)\nusing this:\n  t2 = s2\\<lparr>dstate := dstate t2\\<rparr>\n\ngoal (1 subgoal):\n 1. pending s2 = pending t2 &&& status s2 = status t2", "by ((cases s2, cases t2, auto)+)"], ["proof (state)\nthis:\n  pending s2 = pending t2\n  status s2 = status t2\n\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "thus ?thesis"], ["proof (prove)\nusing this:\n  pending s2 = pending t2\n  status s2 = status t2\n\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "using 9 3 11"], ["proof (prove)\nusing this:\n  pending s2 = pending t2\n  status s2 = status t2\n  pending s1 p = pending s2 p\n  s1 = t1\n  status s2 p \\<in> {Pending, Aborted}\n\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "by auto"], ["proof (state)\nthis:\n  (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n  pending t1 p = pending t2 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n  pending t1 p = pending t2 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "case Reco2"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)\n 8. \\<lbrakk>P26 (s1, s2); Reco s2 t2 \\<and> s1 = t1;\n     a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "proof (simp,clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "assume 1:\"status t1 p = Aborted\""], ["proof (state)\nthis:\n  status t1 p = Aborted\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 2:\"status s1 p = Aborted\" and 3:\"\\<not>initialized s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Aborted &&& \\<not> initialized s2", "using 1 Reco2(1)"], ["proof (prove)\nusing this:\n  status t1 p = Aborted\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted &&& \\<not> initialized s2", "by auto"], ["proof (state)\nthis:\n  status s1 p = Aborted\n  \\<not> initialized s2\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 4:\"P7 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "using reach P7_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P7\n\ngoal (1 subgoal):\n 1. P7 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "have 5:\"status s2 p \\<in> {Pending,Aborted}\" \n      and 6:\"pending s1 p = pending s2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} &&& pending s1 p = pending s2 p", "using 3 4 2"], ["proof (prove)\nusing this:\n  \\<not> initialized s2\n  P7 (s1, s2)\n  status s1 p = Aborted\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} &&& pending s1 p = pending s2 p", "by auto"], ["proof (state)\nthis:\n  status s2 p \\<in> {Pending, Aborted}\n  pending s1 p = pending s2 p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>status t1 p = Aborted;\n        \\<not> contains (dstate t2) (pending t1 p)\\<rbrakk>\n       \\<Longrightarrow> (status t2 p = Pending \\<or>\n                          status t2 p = Aborted) \\<and>\n                         pending t1 p = pending t2 p", "show \"(status t2 p = Pending \\<or> status t2 p = Aborted) \n        \\<and> pending t1 p = pending t2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "using 5 6 Reco2(1)"], ["proof (prove)\nusing this:\n  status s2 p \\<in> {Pending, Aborted}\n  pending s1 p = pending s2 p\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n    pending t1 p = pending t2 p", "by auto"], ["proof (state)\nthis:\n  (status t2 p = Pending \\<or> status t2 p = Aborted) \\<and>\n  pending t1 p = pending t2 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (7 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 7. \\<lbrakk>P26 (s1, s2); Lin s1 t1 \\<and> s2 = t2;\n     a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Response1"], ["proof (state)\nthis:\n  Resp p_ ou_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Response i_ p_ ou_\n\ngoal (6 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 6. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Resp p_ ou_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Response i_ p_ ou_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Resp p_ ou_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Response i_ p_ ou_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Response2"], ["proof (state)\nthis:\n  Resp p_ ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Response i_ p_ ou_\n\ngoal (5 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 5. \\<And>i p ou.\n       \\<lbrakk>P26 (s1, s2); Resp p ou s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Resp p_ ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Response i_ p_ ou_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Resp p_ ou_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Response i_ p_ ou_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (4 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Invoke2"], ["proof (state)\nthis:\n  Inv p_ c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Invoke i_ p_ c_\n\ngoal (4 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s2 t2 \\<and> s1 = t1;\n        id1 \\<le> i \\<and> i < id2; a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 4. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv p_ c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Invoke i_ p_ c_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Inv p_ c_ s2 t2 \\<and> s1 = t1\n  id1 \\<le> i_ \\<and> i_ < id2\n  a = Invoke i_ p_ c_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (3 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Switch1"], ["proof (state)\nthis:\n  Abort p_ c_ av_ s1 t1 \\<and> Init p_ c_ av_ s2 t2\n  a = Switch id1 p_ c_ av_\n\ngoal (3 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 3. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Abort p_ c_ av_ s1 t1 \\<and> Init p_ c_ av_ s2 t2\n  a = Switch id1 p_ c_ av_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Abort p_ c_ av_ s1 t1 \\<and> Init p_ c_ av_ s2 t2\n  a = Switch id1 p_ c_ av_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (2 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Switch2"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p_ c_ av_ s2 t2\n  a = Switch id2 p_ c_ av_\n\ngoal (2 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)\n 2. \\<And>p c av.\n       \\<lbrakk>P26 (s1, s2); s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s1 = t1 \\<and> Abort p_ c_ av_ s2 t2\n  a = Switch id2 p_ c_ av_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  s1 = t1 \\<and> Abort p_ c_ av_ s2 t2\n  a = Switch id2 p_ c_ av_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "case Invoke1"], ["proof (state)\nthis:\n  Inv p_ c_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Invoke i_ p_ c_\n\ngoal (1 subgoal):\n 1. \\<And>i p c.\n       \\<lbrakk>P26 (s1, s2); Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> P26 (t1, t2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inv p_ c_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Invoke i_ p_ c_\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "using hyp"], ["proof (prove)\nusing this:\n  Inv p_ c_ s1 t1 \\<and> s2 = t2\n  i_ < id1\n  a = Invoke i_ p_ c_\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. P26 (t1, t2)", "by force"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P26 (t1, t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P25_invariant:\nshows \"invariant (composition) P25\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant composition P25", "proof (auto simp only:invariant_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P25 (a, b)", "fix s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P25 (a, b)", "assume reach:\"reachable (composition) (s1,s2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b. reachable composition (a, b) \\<Longrightarrow> P25 (a, b)", "show \"P25 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P25 (s1, s2)", "proof (simp only:P25.simps, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ivs.\n       \\<lbrakk>ivs \\<in> initSets s2; initialized s2;\n        dstate s2 \\<preceq> \\<Sqinter> ivs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs'\\<in>pendingSeqs (f (s1, s2)).\n                            \\<Sqinter> ivs = dstate s2 \\<star> rs'", "fix ivs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ivs.\n       \\<lbrakk>ivs \\<in> initSets s2; initialized s2;\n        dstate s2 \\<preceq> \\<Sqinter> ivs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs'\\<in>pendingSeqs (f (s1, s2)).\n                            \\<Sqinter> ivs = dstate s2 \\<star> rs'", "assume 1:\"ivs \\<in> initSets s2\" and 2:\"initialized s2\"\n      and 3:\"dstate s2 \\<preceq> \\<Sqinter>ivs\""], ["proof (state)\nthis:\n  ivs \\<in> initSets s2\n  initialized s2\n  dstate s2 \\<preceq> \\<Sqinter> ivs\n\ngoal (1 subgoal):\n 1. \\<And>ivs.\n       \\<lbrakk>ivs \\<in> initSets s2; initialized s2;\n        dstate s2 \\<preceq> \\<Sqinter> ivs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs'\\<in>pendingSeqs (f (s1, s2)).\n                            \\<Sqinter> ivs = dstate s2 \\<star> rs'", "obtain rs' where 4:\"dstate s2 \\<star> rs' = \\<Sqinter>ivs\"\n    and 5:\"rs' \\<in> pendingSeqs s1\" and 6:\"\\<forall> r \\<in> set rs' . \\<not> contains (dstate s2) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 5:\"dstate s1 \\<preceq> dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "have P9:\"P9 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "using P9_invariant reach"], ["proof (prove)\nusing this:\n  invariant composition P9\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P9 (s1, s2)", "by (simp add:invariant_def)"], ["proof (state)\nthis:\n  P9 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "thus ?thesis"], ["proof (prove)\nusing this:\n  P9 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "using 2"], ["proof (prove)\nusing this:\n  P9 (s1, s2)\n  initialized s2\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "by auto"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where 6:\"\\<Sqinter>ivs = dstate s1 \\<star> rs\" and 7:\"rs \\<in> pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs;\n         rs \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs;\n         rs \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have P8a:\"P8a (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8a (s1, s2)", "using P8a_invariant reach"], ["proof (prove)\nusing this:\n  invariant composition P8a\n  reachable composition (s1, s2)\n\ngoal (1 subgoal):\n 1. P8a (s1, s2)", "by (simp add:invariant_def)"], ["proof (state)\nthis:\n  P8a (s1, s2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs;\n         rs \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  P8a (s1, s2)\n\ngoal (1 subgoal):\n 1. thesis", "using that 1"], ["proof (prove)\nusing this:\n  P8a (s1, s2)\n  \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> ?rs56;\n   ?rs56 \\<in> pendingSeqs s1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ivs \\<in> initSets s2\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter> ivs = dstate s1 \\<star> rs\n  rs \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists> rs' . dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and>\n       rs' \\<in> pendingSeqs s1", "using 3 5 6 7 consistency[of \"dstate s1\" \"dstate s2\" \"\\<Sqinter>ivs\" rs]"], ["proof (prove)\nusing this:\n  dstate s2 \\<preceq> \\<Sqinter> ivs\n  dstate s1 \\<preceq> dstate s2\n  \\<Sqinter> ivs = dstate s1 \\<star> rs\n  rs \\<in> pendingSeqs s1\n  \\<lbrakk>dstate s1 \\<preceq> dstate s2;\n   dstate s2 \\<preceq> \\<Sqinter> ivs;\n   \\<Sqinter> ivs = dstate s1 \\<star> rs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs' rs''.\n                       dstate s2 = dstate s1 \\<star> rs' \\<and>\n                       \\<Sqinter> ivs = dstate s2 \\<star> rs'' \\<and>\n                       set rs' \\<subseteq> set rs \\<and>\n                       set rs'' \\<subseteq> set rs\n\ngoal (1 subgoal):\n 1. \\<exists>rs'.\n       dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and>\n       rs' \\<in> pendingSeqs s1", "by (force simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  \\<exists>rs'.\n     dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with this"], ["proof (chain)\npicking this:\n  \\<exists>rs'.\n     dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1\n  \\<exists>rs'.\n     dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1", "obtain rs' where \"\\<Sqinter>ivs = dstate s2 \\<star> rs'\" \n        and \"rs' \\<in> pendingSeqs s1\""], ["proof (prove)\nusing this:\n  \\<exists>rs'.\n     dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1\n  \\<exists>rs'.\n     dstate s2 \\<star> rs' = \\<Sqinter> ivs \\<and> rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s2 \\<star> rs';\n         rs' \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>dstate s2 \\<star> rs' = \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s1;\n         \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with this"], ["proof (chain)\npicking this:\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. thesis", "using idem_star2 that"], ["proof (prove)\nusing this:\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n  \\<Sqinter> ivs = dstate s2 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n  \\<exists>rs'.\n     ?s \\<star> ?rs = ?s \\<star> rs' \\<and>\n     set rs' \\<subseteq> set ?rs \\<and>\n     (\\<forall>r\\<in>set rs'. \\<not> contains ?s r)\n  \\<lbrakk>dstate s2 \\<star> ?rs'56 = \\<Sqinter> ivs;\n   ?rs'56 \\<in> pendingSeqs s1;\n   \\<forall>r\\<in>set ?rs'56. \\<not> contains (dstate s2) r\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis mem_Collect_eq pendingSeqs_def subset_trans)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s2 \\<star> rs' = \\<Sqinter> ivs\n  rs' \\<in> pendingSeqs s1\n  \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\n\ngoal (1 subgoal):\n 1. \\<And>ivs.\n       \\<lbrakk>ivs \\<in> initSets s2; initialized s2;\n        dstate s2 \\<preceq> \\<Sqinter> ivs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs'\\<in>pendingSeqs (f (s1, s2)).\n                            \\<Sqinter> ivs = dstate s2 \\<star> rs'", "have 7:\"rs' \\<in> pendingSeqs (f (s1,s2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "assume \"r \\<in> set rs'\""], ["proof (state)\nthis:\n  r \\<in> set rs'\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "with this"], ["proof (chain)\npicking this:\n  r \\<in> set rs'\n  r \\<in> set rs'", "obtain p where 8:\"status s1 p = Pending \n          \\<or> status s1 p = Aborted\" \n        and 9:\"r = pending s1 p\""], ["proof (prove)\nusing this:\n  r \\<in> set rs'\n  r \\<in> set rs'\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>status s1 p = Pending \\<or> status s1 p = Aborted;\n         r = pending s1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 5"], ["proof (prove)\nusing this:\n  r \\<in> set rs'\n  r \\<in> set rs'\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>status s1 p = Pending \\<or> status s1 p = Aborted;\n         r = pending s1 p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:pendingReqs_def pendingSeqs_def)"], ["proof (state)\nthis:\n  status s1 p = Pending \\<or> status s1 p = Aborted\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "from 8"], ["proof (chain)\npicking this:\n  status s1 p = Pending \\<or> status s1 p = Aborted", "have \"r \\<in> pendingReqs (f (s1,s2))\""], ["proof (prove)\nusing this:\n  status s1 p = Pending \\<or> status s1 p = Aborted\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. status s1 p = Pending \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))\n 2. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "assume \"status s1 p = Pending\""], ["proof (state)\nthis:\n  status s1 p = Pending\n\ngoal (2 subgoals):\n 1. status s1 p = Pending \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))\n 2. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  status s1 p = Pending\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "using 9"], ["proof (prove)\nusing this:\n  status s1 p = Pending\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "by (simp add:pendingReqs_def)\n            (metis SLin_status.distinct(9))"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "assume 10:\"status s1 p = Aborted\""], ["proof (state)\nthis:\n  status s1 p = Aborted\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "hence \"status (f (s1,s2)) p = status s2 p\"\n            and \"pending (f (s1,s2)) p = pending s2 p\""], ["proof (prove)\nusing this:\n  status s1 p = Aborted\n\ngoal (1 subgoal):\n 1. status (f (s1, s2)) p = status s2 p &&&\n    pending (f (s1, s2)) p = pending s2 p", "by simp_all"], ["proof (state)\nthis:\n  status (f (s1, s2)) p = status s2 p\n  pending (f (s1, s2)) p = pending s2 p\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "moreover"], ["proof (state)\nthis:\n  status (f (s1, s2)) p = status s2 p\n  pending (f (s1, s2)) p = pending s2 p\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "have \"status s2 p \\<in> {Pending,Aborted} \\<and> pending s2 p = pending s1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "have \"\\<not> contains (dstate s2) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s2) r", "using 6 \\<open>r \\<in> set rs'\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs'. \\<not> contains (dstate s2) r\n  r \\<in> set rs'\n\ngoal (1 subgoal):\n 1. \\<not> contains (dstate s2) r", "by simp"], ["proof (state)\nthis:\n  \\<not> contains (dstate s2) r\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "moreover"], ["proof (state)\nthis:\n  \\<not> contains (dstate s2) r\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "have \"P26 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P26 (s1, s2)", "using reach P26_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P26\n\ngoal (1 subgoal):\n 1. P26 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> contains (dstate s2) r\n  P26 (s1, s2)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> contains (dstate s2) r\n  P26 (s1, s2)\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "using 10 9"], ["proof (prove)\nusing this:\n  \\<not> contains (dstate s2) r\n  P26 (s1, s2)\n  status s1 p = Aborted\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "by force"], ["proof (state)\nthis:\n  status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<Longrightarrow> r \\<in> pendingReqs (f (s1, s2))", "ultimately"], ["proof (chain)\npicking this:\n  status (f (s1, s2)) p = status s2 p\n  pending (f (s1, s2)) p = pending s2 p\n  status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p", "show ?thesis"], ["proof (prove)\nusing this:\n  status (f (s1, s2)) p = status s2 p\n  pending (f (s1, s2)) p = pending s2 p\n  status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "using 9"], ["proof (prove)\nusing this:\n  status (f (s1, s2)) p = status s2 p\n  pending (f (s1, s2)) p = pending s2 p\n  status s2 p \\<in> {Pending, Aborted} \\<and> pending s2 p = pending s1 p\n  r = pending s1 p\n\ngoal (1 subgoal):\n 1. r \\<in> pendingReqs (f (s1, s2))", "by (simp only:pendingReqs_def, force)"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "}"], ["proof (state)\nthis:\n  ?r58 \\<in> set rs' \\<Longrightarrow> ?r58 \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?r58 \\<in> set rs' \\<Longrightarrow> ?r58 \\<in> pendingReqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs (f (s1, s2))", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs (f (s1, s2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. \\<And>ivs.\n       \\<lbrakk>ivs \\<in> initSets s2; initialized s2;\n        dstate s2 \\<preceq> \\<Sqinter> ivs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs'\\<in>pendingSeqs (f (s1, s2)).\n                            \\<Sqinter> ivs = dstate s2 \\<star> rs'", "show \"\\<exists> rs \\<in> pendingSeqs (f (s1,s2)) . \\<Sqinter>ivs = dstate s2 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs (f (s1, s2)).\n       \\<Sqinter> ivs = dstate s2 \\<star> rs", "using 4 7"], ["proof (prove)\nusing this:\n  dstate s2 \\<star> rs' = \\<Sqinter> ivs\n  rs' \\<in> pendingSeqs (f (s1, s2))\n\ngoal (1 subgoal):\n 1. \\<exists>rs\\<in>pendingSeqs (f (s1, s2)).\n       \\<Sqinter> ivs = dstate s2 \\<star> rs", "by force"], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs (f (s1, s2)).\n     \\<Sqinter> ivs = dstate s2 \\<star> rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P25 (s1, s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of the Idempotence Theorem\\<close>"], ["", "declare %invisible\n  hide_asig_def[simp]\n  asig_comp2_def[simp]\n  externals_def[simp]\n  comp_simps[simp]"], ["", "theorem idempotence: \n  shows \"((composition) =<| (ioa 0 id2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "have same_input_sig:\"inp (composition) = inp (ioa 0 id2)\" \n    \\<comment> \\<open>First we show that both automata have the same input and output signature\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))", "using  ids"], ["proof (prove)\nusing this:\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))", "by auto"], ["proof (state)\nthis:\n  inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "moreover"], ["proof (state)\nthis:\n  inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "have same_output_sig:\"out (composition) = out (ioa 0 id2)\" \n    \\<comment> \\<open>Then we show that output signatures match\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))", "using ids"], ["proof (prove)\nusing this:\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))", "by auto"], ["proof (state)\nthis:\n  outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "moreover"], ["proof (state)\nthis:\n  outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "have \"traces (composition) \\<subseteq> traces (ioa 0 id2)\"\n    \\<comment> \\<open>Finally we show trace inclusion\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "have \"ext (composition) = ext (ioa 0 id2)\"  \n      \\<comment> \\<open>First we show that they have the same external signature\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))", "using same_input_sig and same_output_sig"], ["proof (prove)\nusing this:\n  inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))\n  outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))", "by simp"], ["proof (state)\nthis:\n  externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "moreover"], ["proof (state)\nthis:\n  externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))\n\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "have \"is_ref_map f (composition) (ioa 0 id2)\"\n      \\<comment> \\<open>Then we show that @{text f_comp} is a refinement mapping\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_ref_map f composition (ioa 0 id2)", "proof (auto simp only:is_ref_map_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow>\n       f (a, b) \\<in> ioa.start (ioa 0 id2)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "fix s1 s2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow>\n       f (a, b) \\<in> ioa.start (ioa 0 id2)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "assume 1:\"(s1,s2) \\<in> ioa.start (composition)\""], ["proof (state)\nthis:\n  (s1, s2) \\<in> ioa.start composition\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> ioa.start composition \\<Longrightarrow>\n       f (a, b) \\<in> ioa.start (ioa 0 id2)\n 2. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "show \"f (s1,s2) \\<in> ioa.start (ioa 0 id2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "have 2:\"ioa.start (ioa 0 id2) = start (0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ioa.start (ioa 0 id2) = local.start 0", "by simp"], ["proof (state)\nthis:\n  ioa.start (ioa 0 id2) = local.start 0\n\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "have 3:\"ioa.start (composition) \n          = start (0::nat) \\<times> start id1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ioa.start composition = local.start 0 \\<times> local.start id1", "by fastforce"], ["proof (state)\nthis:\n  ioa.start composition = local.start 0 \\<times> local.start id1\n\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "using 1 2 3"], ["proof (prove)\nusing this:\n  (s1, s2) \\<in> ioa.start composition\n  ioa.start (ioa 0 id2) = local.start 0\n  ioa.start composition = local.start 0 \\<times> local.start id1\n\ngoal (1 subgoal):\n 1. f (s1, s2) \\<in> ioa.start (ioa 0 id2)", "by simp"], ["proof (state)\nthis:\n  f (s1, s2) \\<in> ioa.start (ioa 0 id2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (s1, s2) \\<in> ioa.start (ioa 0 id2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "fix s1 s2 t1 t2 :: \"('a,'b,'c)SLin_state\" and a :: \"('a,'b,'c,'d)SLin_action\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "assume reach:\"reachable (composition) (s1,s2)\"\n      and trans:\"(s1,s2) \\<midarrow>a\\<midarrow>(composition)\\<longrightarrow> (t1,t2)\""], ["proof (state)\nthis:\n  reachable composition (s1, s2)\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "define u where \"u = f (s1,s2)\""], ["proof (state)\nthis:\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "define u' where \"u' = f (t1,t2)\""], ["proof (state)\nthis:\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "txt \\<open>Lemmas and invariants\\<close>"], ["proof (state)\nthis:\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"pendingReqs s2 \\<subseteq> pendingReqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingReqs s2 \\<subseteq> pendingReqs u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pendingReqs s2 \\<subseteq> pendingReqs u", "have \"P6 (s1,s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "using reach P6_invariant"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P6\n\ngoal (1 subgoal):\n 1. P6 (s1, s2)", "by (metis invariant_def)"], ["proof (state)\nthis:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. pendingReqs s2 \\<subseteq> pendingReqs u", "thus ?thesis"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. pendingReqs s2 \\<subseteq> pendingReqs u", "by (force simp add:pendingReqs_def u_def)"], ["proof (state)\nthis:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "note lem1 = this"], ["proof (state)\nthis:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"initialized u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized u", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P1 (s1,s2)\" and \"P1 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 (s1, s2) &&& P1 (t1, t2)", "using reach P1_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P1\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P1 (s1, s2) &&& P1 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P1 (s1, s2)\n  P1 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P6 (s1,s2)\" and \"P6 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P6 (s1, s2) &&& P6 (t1, t2)", "using reach P6_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P6\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P6 (s1, s2) &&& P6 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P6 (s1, s2)\n  P6 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P7 (s1,s2)\" and \"P7 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P7 (s1, s2) &&& P7 (t1, t2)", "using reach P7_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P7\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P7 (s1, s2) &&& P7 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P7 (s1, s2)\n  P7 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P8 (s1,s2)\" and \"P8 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8 (s1, s2) &&& P8 (t1, t2)", "using reach P8_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P8\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P8 (s1, s2) &&& P8 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P8 (s1, s2)\n  P8 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P9 (s1,s2)\" and \"P9 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P9 (s1, s2) &&& P9 (t1, t2)", "using reach P9_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P9\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P9 (s1, s2) &&& P9 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P9 (s1, s2)\n  P9 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P10 (s1,s2)\" and \"P10 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P10 (s1, s2) &&& P10 (t1, t2)", "using reach P10_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P10\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P10 (s1, s2) &&& P10 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P10 (s1, s2)\n  P10 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P13 (s1,s2)\" and \"P13 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P13 (s1, s2) &&& P13 (t1, t2)", "using reach P13_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P13\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P13 (s1, s2) &&& P13 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P13 (s1, s2)\n  P13 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P15 (s1,s2)\" and \"P15 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P15 (s1, s2) &&& P15 (t1, t2)", "using reach P15_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P15\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P15 (s1, s2) &&& P15 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P15 (s1, s2)\n  P15 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P16 (s1,s2)\" and \"P16 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P16 (s1, s2) &&& P16 (t1, t2)", "using reach P16_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P16\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P16 (s1, s2) &&& P16 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P16 (s1, s2)\n  P16 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P17 (s1,s2)\" and \"P17 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P17 (s1, s2) &&& P17 (t1, t2)", "using reach P17_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P17\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P17 (s1, s2) &&& P17 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P17 (s1, s2)\n  P17 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P19 (s1,s2)\" and \"P19 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P19 (s1, s2) &&& P19 (t1, t2)", "using reach P19_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P19\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P19 (s1, s2) &&& P19 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P19 (s1, s2)\n  P19 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P21 (s1,s2)\" and \"P21 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P21 (s1, s2) &&& P21 (t1, t2)", "using reach P21_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P21\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P21 (s1, s2) &&& P21 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P21 (s1, s2)\n  P21 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P22 (s1,s2)\" and \"P22 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P22 (s1, s2) &&& P22 (t1, t2)", "using reach P22_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P22\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P22 (s1, s2) &&& P22 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P22 (s1, s2)\n  P22 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P25 (s1,s2)\" and \"P25 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P25 (s1, s2) &&& P25 (t1, t2)", "using reach P25_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P25\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P25 (s1, s2) &&& P25 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P25 (s1, s2)\n  P25 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P8a (s1,s2)\" and \"P8a (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P8a (s1, s2) &&& P8a (t1, t2)", "using reach P8a_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P8a\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P8a (s1, s2) &&& P8a (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P8a (s1, s2)\n  P8a (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "have \"P23 (s1,s2)\" and \"P23 (t1,t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P23 (s1, s2) &&& P23 (t1, t2)", "using reach P23_invariant\n        trans invariant_def"], ["proof (prove)\nusing this:\n  reachable composition (s1, s2)\n  invariant composition P23\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n  invariant ?A ?P \\<equiv> \\<forall>s. reachable ?A s \\<longrightarrow> ?P s\n\ngoal (1 subgoal):\n 1. P23 (s1, s2) &&& P23 (t1, t2)", "by (metis , metis reachable_n)"], ["proof (state)\nthis:\n  P23 (s1, s2)\n  P23 (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba ab.\n       \\<lbrakk>reachable composition (a, b);\n        (a, b) \\<midarrow>ab\\<midarrow>composition\\<longrightarrow> (aa,\n                               ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (a, b) ab (aa, ba) (ioa 0 id2) f", "show \"\\<exists> e . refines e (s1,s2) a (t1,t2) (ioa 0 id2) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using trans"], ["proof (prove)\nusing this:\n  (s1, s2) \\<midarrow>a\\<midarrow>composition\\<longrightarrow> (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "proof (cases rule:trans_elim)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Invoke1 i p c)"], ["proof (state)\nthis:\n  Inv p c s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Invoke i p c\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(a,u')])\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 1:\"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"status s1 p = Ready\" and 2:\"t2 = s2\"\n          and 3:\"t1 = s1\\<lparr>pending := (pending s1)(p := (p,c)), \n            status := (status s1)(p := Pending)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Ready &&&\n    t2 = s2 &&&\n    t1 = s1\n    \\<lparr>pending := (pending s1)(p := (p, c)),\n       status := (status s1)(p := Pending)\\<rparr>", "using Invoke1(1)"], ["proof (prove)\nusing this:\n  Inv p c s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. status s1 p = Ready &&&\n    t2 = s2 &&&\n    t1 = s1\n    \\<lparr>pending := (pending s1)(p := (p, c)),\n       status := (status s1)(p := Pending)\\<rparr>", "by auto"], ["proof (state)\nthis:\n  status s1 p = Ready\n  t2 = s2\n  t1 = s1\n  \\<lparr>pending := (pending s1)(p := (p, c)),\n     status := (status s1)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 4:\"status u p = Ready\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Ready", "using 1 u_def"], ["proof (prove)\nusing this:\n  status s1 p = Ready\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. status u p = Ready", "by auto"], ["proof (state)\nthis:\n  status u p = Ready\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 5:\"u' = u\\<lparr>pending := (pending u)(p := (p,c)), \n            status := (status u)(p := Pending)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>pending := (pending u)(p := (p, c)),\n       status := (status u)(p := Pending)\\<rparr>", "using 2 3 u_def u'_def"], ["proof (prove)\nusing this:\n  t2 = s2\n  t1 = s1\n  \\<lparr>pending := (pending s1)(p := (p, c)),\n     status := (status s1)(p := Pending)\\<rparr>\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>pending := (pending u)(p := (p, c)),\n       status := (status u)(p := Pending)\\<rparr>", "by auto"], ["proof (state)\nthis:\n  u' = u\n  \\<lparr>pending := (pending u)(p := (p, c)),\n     status := (status u)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 6:\"Inv p c u u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inv p c u u'", "using 4 5"], ["proof (prove)\nusing this:\n  status u p = Ready\n  u' = u\n  \\<lparr>pending := (pending u)(p := (p, c)),\n     status := (status u)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. Inv p c u u'", "by force"], ["proof (state)\nthis:\n  Inv p c u u'\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 6 Invoke1(3) ids"], ["proof (prove)\nusing this:\n  Inv p c u u'\n  a = Invoke i p c\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by simp"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 2:\"a \\<in> ext (ioa 0 id2)\" and 3:\"trace (ioa.asig (ioa 0 id2)) ?e = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "using Invoke1(2,3) ids"], ["proof (prove)\nusing this:\n  i < id1\n  a = Invoke i p c\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (9 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s1 t1 \\<and> s2 = t2; i < id1;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 9. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using 1 2 3"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def) \n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Invoke2 i p c)"], ["proof (state)\nthis:\n  Inv p c s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(a,u')])\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 1:\"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"status s2 p = Ready\" and 2:\"t1 = s1\"\n          and 3:\"t2 = s2\\<lparr>pending := (pending s2)(p := (p,c)), \n            status := (status s2)(p := Pending)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s2 p = Ready &&&\n    t1 = s1 &&&\n    t2 = s2\n    \\<lparr>pending := (pending s2)(p := (p, c)),\n       status := (status s2)(p := Pending)\\<rparr>", "using Invoke2(1)"], ["proof (prove)\nusing this:\n  Inv p c s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. status s2 p = Ready &&&\n    t1 = s1 &&&\n    t2 = s2\n    \\<lparr>pending := (pending s2)(p := (p, c)),\n       status := (status s2)(p := Pending)\\<rparr>", "by auto"], ["proof (state)\nthis:\n  status s2 p = Ready\n  t1 = s1\n  t2 = s2\n  \\<lparr>pending := (pending s2)(p := (p, c)),\n     status := (status s2)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 4:\"status u p = Ready\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Ready", "using 1 u_def \\<open>P6 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  status s2 p = Ready\n  u = f (s1, s2)\n  P6 (s1, s2)\n\ngoal (1 subgoal):\n 1. status u p = Ready", "by auto"], ["proof (state)\nthis:\n  status u p = Ready\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 5:\"u' = u\\<lparr>pending := (pending u)(p := (p,c)), \n            status := (status u)(p := Pending)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>pending := (pending u)(p := (p, c)),\n       status := (status u)(p := Pending)\\<rparr>", "using 2 3 u_def u'_def \\<open>P6 (t1,t2)\\<close>"], ["proof (prove)\nusing this:\n  t1 = s1\n  t2 = s2\n  \\<lparr>pending := (pending s2)(p := (p, c)),\n     status := (status s2)(p := Pending)\\<rparr>\n  u = f (s1, s2)\n  u' = f (t1, t2)\n  P6 (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>pending := (pending u)(p := (p, c)),\n       status := (status u)(p := Pending)\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  u' = u\n  \\<lparr>pending := (pending u)(p := (p, c)),\n     status := (status u)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 6:\"Inv p c u u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inv p c u u'", "using 4 5"], ["proof (prove)\nusing this:\n  status u p = Ready\n  u' = u\n  \\<lparr>pending := (pending u)(p := (p, c)),\n     status := (status u)(p := Pending)\\<rparr>\n\ngoal (1 subgoal):\n 1. Inv p c u u'", "by force"], ["proof (state)\nthis:\n  Inv p c u u'\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 6 Invoke2(3) ids"], ["proof (prove)\nusing this:\n  Inv p c u u'\n  a = Invoke i p c\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by simp"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 2:\"a \\<in> ext (ioa 0 id2)\" \n        and 3:\"trace (ioa.asig (ioa 0 id2)) ?e = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "using Invoke2(2,3)"], ["proof (prove)\nusing this:\n  id1 \\<le> i \\<and> i < id2\n  a = Invoke i p c\n\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (8 subgoals):\n 1. \\<And>i p c.\n       \\<lbrakk>Inv p c s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Invoke i p c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 8. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using 1 2 3"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def) \n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Response2 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s2 t2 \\<and> s1 = t1\n  id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(a,u')])\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 1:\"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"status s1 p = Aborted \\<and> status t1 p = Aborted\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<and> status t1 p = Aborted", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<and> status t1 p = Aborted", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<and> status t1 p = Aborted", "using \\<open>P6 (s1,s2)\\<close> \\<open>P6 (t1,t2)\\<close> \n              Response2(1)"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n  P6 (t1, t2)\n  Resp p ou s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. status s1 p = Aborted \\<and> status t1 p = Aborted", "by force"], ["proof (state)\nthis:\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 2:\"status u p = Pending \\<and> initialized u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "using 1 Response2(1) u_def"], ["proof (prove)\nusing this:\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n  Resp p ou s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "by auto"], ["proof (state)\nthis:\n  status u p = Pending \\<and> initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have  3:\"u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "using 1 Response2(1) u_def u'_def"], ["proof (prove)\nusing this:\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n  Resp p ou s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "by (cases u, cases u', auto)"], ["proof (state)\nthis:\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 4:\"ou = \\<gamma> (dstate u) (pending u p) \\<and> contains (dstate u) (pending u p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "proof (cases \"dstate s2 = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "case False"], ["proof (state)\nthis:\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "using 1 Response2(1) u_def"], ["proof (prove)\nusing this:\n  dstate s2 \\<noteq> \\<bottom>\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n  Resp p ou s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "by auto"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "case True"], ["proof (state)\nthis:\n  dstate s2 = \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "have \"dstate s1 = dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "have \"dstate s1 \\<preceq> dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "using Response2(1)  \\<open>P9 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  Resp p ou s2 t2 \\<and> s1 = t1\n  P9 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate s2", "by auto"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate s2\n\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "with True"], ["proof (chain)\npicking this:\n  dstate s2 = \\<bottom>\n  dstate s1 \\<preceq> dstate s2", "show ?thesis"], ["proof (prove)\nusing this:\n  dstate s2 = \\<bottom>\n  dstate s1 \\<preceq> dstate s2\n\ngoal (1 subgoal):\n 1. dstate s1 = dstate s2", "by (metis antisym bot)"], ["proof (state)\nthis:\n  dstate s1 = dstate s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s1 = dstate s2\n\ngoal (1 subgoal):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate s1 = dstate s2\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "using 1 Response2(1) u_def"], ["proof (prove)\nusing this:\n  dstate s1 = dstate s2\n  status s1 p = Aborted \\<and> status t1 p = Aborted\n  Resp p ou s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "by auto"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 2 3 4 Response2(3) ids"], ["proof (prove)\nusing this:\n  status u p = Pending \\<and> initialized u\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n  a = Response i p ou\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 2:\"a \\<in> ext (ioa 0 id2)\" \n        and 3:\"trace (ioa.asig (ioa 0 id2)) ?e = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "using Response2(2,3) ids"], ["proof (prove)\nusing this:\n  id1 \\<le> i \\<and> i < id2\n  a = Response i p ou\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (7 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s2 t2 \\<and> s1 = t1; id1 \\<le> i \\<and> i < id2;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 7. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using 1 2 3"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Response1 i p ou)"], ["proof (state)\nthis:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  i < id1\n  a = Response i p ou\n\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(a,u')])\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 1:\"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "proof (cases \"dstate s2 = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "case True"], ["proof (state)\nthis:\n  dstate s2 = \\<bottom>\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"status u p = Pending \\<and> initialized u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "using Response1(1) u_def"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "by auto"], ["proof (state)\nthis:\n  status u p = Pending \\<and> initialized u\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have  2:\"u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "using Response1(1) u_def u'_def"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "by (cases u, cases u', auto)"], ["proof (state)\nthis:\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 3:\"ou = \\<gamma> (dstate u) (pending u p)\n            \\<and> contains (dstate u) (pending u p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "using Response1(1) True u_def"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  dstate s2 = \\<bottom>\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) \\<and>\n    contains (dstate u) (pending u p)", "by auto"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n\ngoal (2 subgoals):\n 1. dstate s2 = \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n 2. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 1 2 3 \\<open>initialized u\\<close> Response1(3) ids"], ["proof (prove)\nusing this:\n  status u p = Pending \\<and> initialized u\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n  ou = \\<gamma> (dstate u) (pending u p) \\<and>\n  contains (dstate u) (pending u p)\n  initialized u\n  a = Response i p ou\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "case False"], ["proof (state)\nthis:\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"status u p = Pending \\<and> initialized u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "using Response1(1) u_def"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. status u p = Pending \\<and> initialized u", "by auto"], ["proof (state)\nthis:\n  status u p = Pending \\<and> initialized u\n\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have  2:\"u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "using Response1(1) u_def u'_def"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>", "by (cases u, cases u', auto)"], ["proof (state)\nthis:\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 3:\"ou = \\<gamma> (dstate u) (pending u p)\"\n            and 4:\"contains (dstate u) (pending u p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p) &&&\n    contains (dstate u) (pending u p)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. ou = \\<gamma> (dstate u) (pending u p)\n 2. contains (dstate u) (pending u p)", "have 2:\"contains (dstate s1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contains (dstate s1) (pending s1 p)", "using Response1(1)"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. contains (dstate s1) (pending s1 p)", "by auto"], ["proof (state)\nthis:\n  contains (dstate s1) (pending s1 p)\n\ngoal (2 subgoals):\n 1. ou = \\<gamma> (dstate u) (pending u p)\n 2. contains (dstate u) (pending u p)", "show \"contains (dstate u) (pending u p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "have 3:\"dstate s1 \\<preceq> dstate u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate u", "have \"initialized s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2", "using \\<open>P16 (s1,s2)\\<close> False"], ["proof (prove)\nusing this:\n  P16 (s1, s2)\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. initialized s2", "by auto"], ["proof (state)\nthis:\n  initialized s2\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate u", "thus ?thesis"], ["proof (prove)\nusing this:\n  initialized s2\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate u", "using \\<open>P9 (s1,s2)\\<close> u_def False refl"], ["proof (prove)\nusing this:\n  initialized s2\n  P9 (s1, s2)\n  u = f (s1, s2)\n  dstate s2 \\<noteq> \\<bottom>\n  ?a \\<preceq> ?a\n\ngoal (1 subgoal):\n 1. dstate s1 \\<preceq> dstate u", "by simp"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate s1 \\<preceq> dstate u\n\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "have 4:\"pending s1 p = pending u p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending s1 p = pending u p", "using u_def Response1(1)"], ["proof (prove)\nusing this:\n  u = f (s1, s2)\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. pending s1 p = pending u p", "by force"], ["proof (state)\nthis:\n  pending s1 p = pending u p\n\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "using 2 3 4"], ["proof (prove)\nusing this:\n  contains (dstate s1) (pending s1 p)\n  dstate s1 \\<preceq> dstate u\n  pending s1 p = pending u p\n\ngoal (1 subgoal):\n 1. contains (dstate u) (pending u p)", "by (metis contains_star less_eq_def)"], ["proof (state)\nthis:\n  contains (dstate u) (pending u p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  contains (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p)", "have 4:\"\\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "have 4:\"pending s1 p = pending u p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending s1 p = pending u p", "using u_def Response1(1)"], ["proof (prove)\nusing this:\n  u = f (s1, s2)\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. pending s1 p = pending u p", "by force"], ["proof (state)\nthis:\n  pending s1 p = pending u p\n\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "obtain rs where 5:\"dstate u = dstate s1 \\<star> rs\"\n                and 6:\"\\<forall> r \\<in> set rs . fst r \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 7:\"dstate u = dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "using u_def False"], ["proof (prove)\nusing this:\n  u = f (s1, s2)\n  dstate s2 \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "by simp"], ["proof (state)\nthis:\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 6:\"status s1 p = Pending \n                  \\<and> contains (dstate s1) (pending s1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)", "using Response1(1)"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)", "by force"], ["proof (state)\nthis:\n  status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 8:\"initialized s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. initialized s2", "using False \\<open>P16 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  dstate s2 \\<noteq> \\<bottom>\n  P16 (s1, s2)\n\ngoal (1 subgoal):\n 1. initialized s2", "by auto"], ["proof (state)\nthis:\n  initialized s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u = dstate s1 \\<star> rs;\n         \\<forall>r\\<in>set rs. fst r \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that \\<open>P17 (s1,s2)\\<close> 6 8 7"], ["proof (prove)\nusing this:\n  \\<lbrakk>dstate u = dstate s1 \\<star> ?rs56;\n   \\<forall>r\\<in>set ?rs56. fst r \\<noteq> p\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P17 (s1, s2)\n  status s1 p = Pending \\<and> contains (dstate s1) (pending s1 p)\n  initialized s2\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. thesis", "by fastforce"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate u = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "have 7:\"fst (pending s1 p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (pending s1 p) = p", "using Response1(1) \\<open>P1 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  Resp p ou s1 t1 \\<and> s2 = t2\n  P1 (s1, s2)\n\ngoal (1 subgoal):\n 1. fst (pending s1 p) = p", "by auto"], ["proof (state)\nthis:\n  fst (pending s1 p) = p\n\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "using 4 5 6 7 2 idem2_star"], ["proof (prove)\nusing this:\n  pending s1 p = pending u p\n  dstate u = dstate s1 \\<star> rs\n  \\<forall>r\\<in>set rs. fst r \\<noteq> p\n  fst (pending s1 p) = p\n  contains (dstate s1) (pending s1 p)\n  \\<lbrakk>contains ?s ?r;\n   \\<And>r'.\n      r' \\<in> set ?rs \\<Longrightarrow> fst r' \\<noteq> fst ?r\\<rbrakk>\n  \\<Longrightarrow> \\<gamma> ?s ?r = \\<gamma> (?s \\<star> ?rs) ?r\n\ngoal (1 subgoal):\n 1. \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)", "by auto"], ["proof (state)\nthis:\n  \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p)", "thus \"ou = \\<gamma> (dstate u) (pending u p)\""], ["proof (prove)\nusing this:\n  \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p)", "using Response1(1)"], ["proof (prove)\nusing this:\n  \\<gamma> (dstate s1) (pending s1 p) = \\<gamma> (dstate u) (pending u p)\n  Resp p ou s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. ou = \\<gamma> (dstate u) (pending u p)", "by simp"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ou = \\<gamma> (dstate u) (pending u p)\n  contains (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. dstate s2 \\<noteq> \\<bottom> \\<Longrightarrow>\n    is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "thus ?thesis"], ["proof (prove)\nusing this:\n  ou = \\<gamma> (dstate u) (pending u p)\n  contains (dstate u) (pending u p)\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 1 2 3 Response1(3) ids"], ["proof (prove)\nusing this:\n  ou = \\<gamma> (dstate u) (pending u p)\n  contains (dstate u) (pending u p)\n  status u p = Pending \\<and> initialized u\n  u' = u\\<lparr>status := (status u)(p := Ready)\\<rparr>\n  ou = \\<gamma> (dstate u) (pending u p)\n  a = Response i p ou\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 2:\"a \\<in> ext (ioa 0 id2)\" \n        and 3:\"trace (ioa.asig (ioa 0 id2)) ?e = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "using Response1(2,3) ids"], ["proof (prove)\nusing this:\n  i < id1\n  a = Response i p ou\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (6 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<And>i p ou.\n       \\<lbrakk>Resp p ou s1 t1 \\<and> s2 = t2; i < id1;\n        a = Response i p ou\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 6. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using 1 2 3"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Reco2)"], ["proof (state)\nthis:\n  Reco s2 t2 \\<and> s1 = t1\n  a = Recover id1\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(Linearize 0,u')])\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "obtain rs where 1:\"rs \\<in> pendingSeqs u\"\n            and 2:\"dstate u' = dstate u \\<star> rs\" \n            and 3:\"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where \"set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\"\n            and \"dstate t2 = dstate s1 \\<star> rs\"\n            and \"\\<forall> av \\<in> abortVals s2 . dstate t2 \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n         dstate t2 = dstate s1 \\<star> rs;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n         dstate t2 = dstate s1 \\<star> rs;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain ivs rs where 3:\"ivs \\<subseteq> initVals s2\" and 4:\"ivs \\<noteq> {}\"\n              and 5:\"dstate t2 = \\<Sqinter>ivs \\<star> rs\" and 7:\"rs \\<in> pendingSeqs s2\"\n              and 6:\"\\<forall> av \\<in> abortVals s2 . dstate t2 \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         dstate t2 = \\<Sqinter> ivs \\<star> rs; rs \\<in> pendingSeqs s2;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Reco2(1)"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<subseteq> initVals s2; ivs \\<noteq> {};\n         dstate t2 = \\<Sqinter> ivs \\<star> rs; rs \\<in> pendingSeqs s2;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:safeInits_def initSets_def) \n                  (metis all_not_in_conv)"], ["proof (state)\nthis:\n  ivs \\<subseteq> initVals s2\n  ivs \\<noteq> {}\n  dstate t2 = \\<Sqinter> ivs \\<star> rs\n  rs \\<in> pendingSeqs s2\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n         dstate t2 = dstate s1 \\<star> rs;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs' where \"\\<Sqinter>ivs = dstate s1 \\<star> rs'\"\n              and \"set rs' \\<subseteq> pendingReqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix iv"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume 7:\"iv \\<in> ivs\""], ["proof (state)\nthis:\n  iv \\<in> ivs\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists> rs . set rs \\<subseteq> pendingReqs s1 \n                    \\<and> iv = dstate s1 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       set rs \\<subseteq> pendingReqs s1 \\<and> iv = dstate s1 \\<star> rs", "using \\<open>P8 (s1,s2)\\<close> 7 3"], ["proof (prove)\nusing this:\n  P8 (s1, s2)\n  iv \\<in> ivs\n  ivs \\<subseteq> initVals s2\n\ngoal (1 subgoal):\n 1. \\<exists>rs.\n       set rs \\<subseteq> pendingReqs s1 \\<and> iv = dstate s1 \\<star> rs", "by auto\n                        (metis mem_Collect_eq pendingSeqs_def rev_subsetD)"], ["proof (state)\nthis:\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> iv = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?iv59 \\<in> ivs \\<Longrightarrow>\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> ?iv59 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?iv59 \\<in> ivs \\<Longrightarrow>\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> ?iv59 = dstate s1 \\<star> rs\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"finite ivs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ivs", "using \\<open>P13 (s1,s2)\\<close> 3"], ["proof (prove)\nusing this:\n  P13 (s1, s2)\n  ivs \\<subseteq> initVals s2\n\ngoal (1 subgoal):\n 1. finite ivs", "by (metis P13.simps rev_finite_subset)"], ["proof (state)\nthis:\n  finite ivs\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         set rs' \\<subseteq> pendingReqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ?iv59 \\<in> ivs \\<Longrightarrow>\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> ?iv59 = dstate s1 \\<star> rs\n  finite ivs", "show ?thesis"], ["proof (prove)\nusing this:\n  ?iv59 \\<in> ivs \\<Longrightarrow>\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> ?iv59 = dstate s1 \\<star> rs\n  finite ivs\n\ngoal (1 subgoal):\n 1. thesis", "using that glb_common_set 4"], ["proof (prove)\nusing this:\n  ?iv59 \\<in> ivs \\<Longrightarrow>\n  \\<exists>rs.\n     set rs \\<subseteq> pendingReqs s1 \\<and> ?iv59 = dstate s1 \\<star> rs\n  finite ivs\n  \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> ?rs'57;\n   set ?rs'57 \\<subseteq> pendingReqs s1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>finite ?ss; ?ss \\<noteq> {};\n   \\<And>s.\n      s \\<in> ?ss \\<Longrightarrow>\n      \\<exists>rs.\n         s = ?s0.0 \\<star> rs \\<and> set rs \\<subseteq> ?rset\\<rbrakk>\n  \\<Longrightarrow> \\<exists>rs.\n                       \\<Sqinter> ?ss = ?s0.0 \\<star> rs \\<and>\n                       set rs \\<subseteq> ?rset\n  ivs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sqinter> ivs = dstate s1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n         dstate t2 = dstate s1 \\<star> rs;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"dstate t2 = dstate s1 \\<star> (rs'@rs)\n                \\<and> set (rs'@rs) \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\""], ["proof (prove)\nusing this:\n  \\<Sqinter> ivs = dstate s1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate s1 \\<star> append rs rs' \\<and>\n    set (append rs rs') \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2", "using 5 7"], ["proof (prove)\nusing this:\n  \\<Sqinter> ivs = dstate s1 \\<star> rs'\n  set rs' \\<subseteq> pendingReqs s1\n  dstate t2 = \\<Sqinter> ivs \\<star> rs\n  rs \\<in> pendingSeqs s2\n\ngoal (1 subgoal):\n 1. dstate t2 = dstate s1 \\<star> append rs rs' \\<and>\n    set (append rs rs') \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2", "by (metis (lifting, no_types) Un_commute Un_mono \n                      exec_append mem_Collect_eq pendingSeqs_def set_append)"], ["proof (state)\nthis:\n  dstate t2 = dstate s1 \\<star> append rs rs' \\<and>\n  set (append rs rs') \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n         dstate t2 = dstate s1 \\<star> rs;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate t2 = dstate s1 \\<star> append rs rs' \\<and>\n  set (append rs rs') \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n\ngoal (1 subgoal):\n 1. thesis", "using that 6"], ["proof (prove)\nusing this:\n  dstate t2 = dstate s1 \\<star> append rs rs' \\<and>\n  set (append rs rs') \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  \\<lbrakk>set ?rs57 \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2;\n   dstate t2 = dstate s1 \\<star> ?rs57;\n   \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  dstate t2 = dstate s1 \\<star> rs\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  dstate t2 = dstate s1 \\<star> rs\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "note \\<open>pendingReqs s2 \\<subseteq> pendingReqs u\\<close>"], ["proof (state)\nthis:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "moreover"], ["proof (state)\nthis:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "have \"pendingReqs s1 \\<subseteq> pendingReqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<subseteq> pendingReqs u", "using Reco2(1) \\<open>P7 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<subseteq> pendingReqs u", "by (auto simp add:pendingReqs_def u_def)"], ["proof (state)\nthis:\n  pendingReqs s1 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "ultimately"], ["proof (chain)\npicking this:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n  pendingReqs s1 \\<subseteq> pendingReqs u", "show ?thesis"], ["proof (prove)\nusing this:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n  pendingReqs s1 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u", "by auto"], ["proof (state)\nthis:\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"abortVals u = abortVals s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals u = abortVals s2", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  abortVals u = abortVals s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  abortVals u = abortVals s2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"dstate u = dstate s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s1", "using \\<open>P16 (s1,s2)\\<close>\n              Reco2(1) u_def"], ["proof (prove)\nusing this:\n  P16 (s1, s2)\n  Reco s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate u = dstate s1", "by force"], ["proof (state)\nthis:\n  dstate u = dstate s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  dstate u = dstate s1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"dstate u' = dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u' = dstate t2", "using Reco2(1) \\<open>P22 (t1,t2)\\<close>"], ["proof (prove)\nusing this:\n  Reco s2 t2 \\<and> s1 = t1\n  P22 (t1, t2)\n\ngoal (1 subgoal):\n 1. dstate u' = dstate t2", "by (auto simp add:u'_def)"], ["proof (state)\nthis:\n  dstate u' = dstate t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u; dstate u' = dstate u \\<star> rs;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  dstate t2 = dstate s1 \\<star> rs\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n  abortVals u = abortVals s2\n  dstate u = dstate s1\n  dstate u' = dstate t2", "show ?thesis"], ["proof (prove)\nusing this:\n  set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  dstate t2 = dstate s1 \\<star> rs\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n  abortVals u = abortVals s2\n  dstate u = dstate s1\n  dstate u' = dstate t2\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  set rs \\<subseteq> pendingReqs s1 \\<union> pendingReqs s2\n  dstate t2 = dstate s1 \\<star> rs\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n  pendingReqs s1 \\<union> pendingReqs s2 \\<subseteq> pendingReqs u\n  abortVals u = abortVals s2\n  dstate u = dstate s1\n  dstate u' = dstate t2\n  \\<lbrakk>?rs57 \\<in> pendingSeqs u; dstate u' = dstate u \\<star> ?rs57;\n   \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp add:pendingSeqs_def, blast)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs u\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs u\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "have \"u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>", "using 2 Reco2(1) u_def u'_def"], ["proof (prove)\nusing this:\n  dstate u' = dstate u \\<star> rs\n  Reco s2 t2 \\<and> s1 = t1\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>", "by force"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "note \\<open>initialized u\\<close>"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "ultimately"], ["proof (chain)\npicking this:\n  rs \\<in> pendingSeqs u\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n  u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>\n  initialized u", "show ?thesis"], ["proof (prove)\nusing this:\n  rs \\<in> pendingSeqs u\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n  u' = u\\<lparr>dstate := dstate u \\<star> rs\\<rparr>\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<notin> ext (ioa 0 id2)\" \n        and \"trace (ioa.asig (ioa 0 id2)) ?e = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "using Reco2(2) ids"], ["proof (prove)\nusing this:\n  a = Recover id1\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (5 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 5. \\<lbrakk>Reco s2 t2 \\<and> s1 = t1; a = Recover id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Switch1 p c av)"], ["proof (state)\nthis:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  a = Switch id1 p c av\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[])\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<notin> ext (ioa 0 id2)\"\n        and \"trace (ioa.asig (ioa 0 id2)) ?e = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, []) = []", "using Switch1(2) ids"], ["proof (prove)\nusing this:\n  a = Switch id1 p c av\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, []) = []", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"u = u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = u'", "using Switch1(1) u_def u'_def"], ["proof (prove)\nusing this:\n  Abort p c av s1 t1 \\<and> Init p c av s2 t2\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. u = u'", "by auto"], ["proof (state)\nthis:\n  u = u'\n\ngoal (4 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>Abort p c av s1 t1 \\<and> Init p c av s2 t2;\n        a = Switch id1 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 4. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  u = u'", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  u = u'\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using refines_def[of ?e \"(s1,s2)\" a \"(t1,t2)\" \"ioa 0 id2\" f]\n            u_def u'_def"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  u = u'\n  refines (u, []) (s1, s2) a (t1, t2) (ioa 0 id2) f \\<equiv>\n  fst (u, []) = f (s1, s2) \\<and>\n  last_state (u, []) = f (t1, t2) \\<and>\n  is_exec_frag_of (ioa 0 id2) (u, []) \\<and>\n  (let tr = trace (ioa.asig (ioa 0 id2)) (u, [])\n   in if a \\<in> externals (ioa.asig (ioa 0 id2)) then tr = [a]\n      else tr = [])\n  u = f (s1, s2)\n  u' = f (t1, t2)\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (metis last_state.simps(1) fst_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case Lin2"], ["proof (state)\nthis:\n  Lin s2 t2 \\<and> s1 = t1\n  a = Linearize id1\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(Linearize 0,u')])\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "have \"u' = u\\<lparr>dstate := dstate u'\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u'\\<rparr>", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u'\\<rparr>", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "note \\<open>initialized u\\<close>"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "obtain rs where \"dstate u' = dstate u \\<star> rs\"\n            and \"rs \\<in> pendingSeqs u\" \n            and \"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where 1:\"dstate t2 = dstate s2 \\<star> rs\"\n              and 2:\"rs \\<in> pendingSeqs s2\" \n              and 3:\"\\<forall> av \\<in> abortVals s2 . dstate t2 \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs; rs \\<in> pendingSeqs s2;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Lin2(1)"], ["proof (prove)\nusing this:\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate t2 = dstate s2 \\<star> rs; rs \\<in> pendingSeqs s2;\n         \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate t2 = dstate s2 \\<star> rs\n  rs \\<in> pendingSeqs s2\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 4:\"rs \\<in> pendingSeqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs u", "using  2 and \\<open>pendingReqs s2 \\<subseteq> pendingReqs u\\<close>"], ["proof (prove)\nusing this:\n  rs \\<in> pendingSeqs s2\n  pendingReqs s2 \\<subseteq> pendingReqs u\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs u", "by (metis mem_Collect_eq pendingSeqs_def subset_trans)"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 5:\"dstate u' = dstate u \\<star> rs\" \n              and 6:\"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u' = dstate u \\<star> rs &&&\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. dstate u' = dstate u \\<star> rs\n 2. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "have 7:\"dstate u = dstate s2 \\<and> dstate u' = dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s2 \\<and> dstate u' = dstate t2", "using \\<open>P22 (s1,s2)\\<close> and \\<open>P22 (t1,t2)\\<close> Lin2(1)"], ["proof (prove)\nusing this:\n  P22 (s1, s2)\n  P22 (t1, t2)\n  Lin s2 t2 \\<and> s1 = t1\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2 \\<and> dstate u' = dstate t2", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n\ngoal (2 subgoals):\n 1. dstate u' = dstate u \\<star> rs\n 2. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "show \"dstate u' = dstate u \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u' = dstate u \\<star> rs", "using 7 1"], ["proof (prove)\nusing this:\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n  dstate t2 = dstate s2 \\<star> rs\n\ngoal (1 subgoal):\n 1. dstate u' = dstate u \\<star> rs", "by auto"], ["proof (state)\nthis:\n  dstate u' = dstate u \\<star> rs\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "show \"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "have \"abortVals s2 = abortVals u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals s2 = abortVals u", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  abortVals s2 = abortVals u\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "thus ?thesis"], ["proof (prove)\nusing this:\n  abortVals s2 = abortVals u\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "using 7 3"], ["proof (prove)\nusing this:\n  abortVals s2 = abortVals u\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n  \\<forall>av\\<in>abortVals s2. dstate t2 \\<preceq> av\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "by simp"], ["proof (state)\nthis:\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 4 5 6"], ["proof (prove)\nusing this:\n  \\<lbrakk>dstate u' = dstate u \\<star> ?rs57; ?rs57 \\<in> pendingSeqs u;\n   \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs \\<in> pendingSeqs u\n  dstate u' = dstate u \\<star> rs\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "ultimately"], ["proof (chain)\npicking this:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n  initialized u\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "show ?thesis"], ["proof (prove)\nusing this:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n  initialized u\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<notin> ext (ioa 0 id2)\"\n        and \"trace (ioa.asig (ioa 0 id2)) ?e = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "using Lin2(2) ids"], ["proof (prove)\nusing this:\n  a = Linearize id1\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (3 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 3. \\<lbrakk>Lin s2 t2 \\<and> s1 = t1; a = Linearize id1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case Lin1"], ["proof (state)\nthis:\n  Lin s1 t1 \\<and> s2 = t2\n  a = Linearize 0\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"u' = u\\<lparr>dstate := dstate u'\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u'\\<rparr>", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. u' = u\\<lparr>dstate := dstate u'\\<rparr>", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<lbrakk>Lin s1 t1 \\<and> s2 = t2; a = Linearize 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e.\n                         refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "proof (cases \"initialized s2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case False"], ["proof (state)\nthis:\n  \\<not> initialized s2\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(Linearize 0,u')])\""], ["proof (state)\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "note \\<open>u' = u\\<lparr>dstate := dstate u'\\<rparr>\\<close>"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "note \\<open>initialized u\\<close>"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "moreover"], ["proof (state)\nthis:\n  initialized u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "obtain rs where \"dstate u' = dstate u \\<star> rs\"\n              and \"rs \\<in> pendingSeqs u\" \n              and \"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain rs where 1:\"dstate t1 = dstate s1 \\<star> rs\"\n                and 2:\"rs \\<in> pendingSeqs s1\" \n                and 3:\"\\<forall> av \\<in> abortVals s1 . dstate t1 \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate t1 = dstate s1 \\<star> rs; rs \\<in> pendingSeqs s1;\n         \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate t1 = dstate s1 \\<star> rs; rs \\<in> pendingSeqs s1;\n         \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  dstate t1 = dstate s1 \\<star> rs\n  rs \\<in> pendingSeqs s1\n  \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 5:\"pendingSeqs s1 \\<subseteq> pendingSeqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs u", "using False \\<open>P7 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> initialized s2\n  P7 (s1, s2)\n\ngoal (1 subgoal):\n 1. pendingSeqs s1 \\<subseteq> pendingSeqs u", "by (auto simp add:pendingReqs_def pendingSeqs_def u_def)"], ["proof (state)\nthis:\n  pendingSeqs s1 \\<subseteq> pendingSeqs u\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 6:\"dstate u = dstate s1 \\<and> dstate u' = dstate t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s1 \\<and> dstate u' = dstate t1", "using \\<open>P16 (s1,s2)\\<close> False Lin1(1)"], ["proof (prove)\nusing this:\n  P16 (s1, s2)\n  \\<not> initialized s2\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. dstate u = dstate s1 \\<and> dstate u' = dstate t1", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  dstate u = dstate s1 \\<and> dstate u' = dstate t1\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 4:\"\\<forall> av \\<in> abortVals u . dstate u' \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "proof (cases \"abortVals u = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. abortVals u = {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n 2. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "case True"], ["proof (state)\nthis:\n  abortVals u = {}\n\ngoal (2 subgoals):\n 1. abortVals u = {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n 2. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "thus ?thesis"], ["proof (prove)\nusing this:\n  abortVals u = {}\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "by auto"], ["proof (state)\nthis:\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "case False"], ["proof (state)\nthis:\n  abortVals u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "have \"dstate u' = dstate t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u' = dstate t1", "using 6"], ["proof (prove)\nusing this:\n  dstate u = dstate s1 \\<and> dstate u' = dstate t1\n\ngoal (1 subgoal):\n 1. dstate u' = dstate t1", "by auto"], ["proof (state)\nthis:\n  dstate u' = dstate t1\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "moreover"], ["proof (state)\nthis:\n  dstate u' = dstate t1\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "have \"abortVals u = abortVals t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals u = abortVals t2", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. abortVals u = abortVals t2", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  abortVals u = abortVals t2\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "moreover"], ["proof (state)\nthis:\n  abortVals u = abortVals t2\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "have \"dstate t1 \\<preceq> \\<Sqinter>(abortVals t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "have \"abortVals t1 = abortVals s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals t1 = abortVals s1", "using Lin1(1)"], ["proof (prove)\nusing this:\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. abortVals t1 = abortVals s1", "by auto"], ["proof (state)\nthis:\n  abortVals t1 = abortVals s1\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "moreover"], ["proof (state)\nthis:\n  abortVals t1 = abortVals s1\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "have \"abortVals t1 \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abortVals t1 \\<noteq> {}", "using False \\<open>P19 (t1,t2)\\<close>\n                    Lin1(1)"], ["proof (prove)\nusing this:\n  abortVals u \\<noteq> {}\n  P19 (t1, t2)\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. abortVals t1 \\<noteq> {}", "by (simp add: u_def)"], ["proof (state)\nthis:\n  abortVals t1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "ultimately"], ["proof (chain)\npicking this:\n  abortVals t1 = abortVals s1\n  abortVals t1 \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  abortVals t1 = abortVals s1\n  abortVals t1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "using 3 \\<open>P13 (t1,t2)\\<close>"], ["proof (prove)\nusing this:\n  abortVals t1 = abortVals s1\n  abortVals t1 \\<noteq> {}\n  \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\n  P13 (t1, t2)\n\ngoal (1 subgoal):\n 1. dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "by simp (metis boundedI)"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> \\<Sqinter> abortVals t1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate t1 \\<preceq> \\<Sqinter> abortVals t1\n\ngoal (1 subgoal):\n 1. abortVals u \\<noteq> {} \\<Longrightarrow>\n    \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "ultimately"], ["proof (chain)\npicking this:\n  dstate u' = dstate t1\n  abortVals u = abortVals t2\n  dstate t1 \\<preceq> \\<Sqinter> abortVals t1", "show ?thesis"], ["proof (prove)\nusing this:\n  dstate u' = dstate t1\n  abortVals u = abortVals t2\n  dstate t1 \\<preceq> \\<Sqinter> abortVals t1\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "using \\<open>P21 (t1,t2)\\<close> 3"], ["proof (prove)\nusing this:\n  dstate u' = dstate t1\n  abortVals u = abortVals t2\n  dstate t1 \\<preceq> \\<Sqinter> abortVals t1\n  P21 (t1, t2)\n  \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\n\ngoal (1 subgoal):\n 1. \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "by (metis P21.simps coboundedI2 orderE)"], ["proof (state)\nthis:\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>dstate u' = dstate u \\<star> rs; rs \\<in> pendingSeqs u;\n         \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using 1 2 3 4 5 6 that"], ["proof (prove)\nusing this:\n  dstate t1 = dstate s1 \\<star> rs\n  rs \\<in> pendingSeqs s1\n  \\<forall>av\\<in>abortVals s1. dstate t1 \\<preceq> av\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n  pendingSeqs s1 \\<subseteq> pendingSeqs u\n  dstate u = dstate s1 \\<and> dstate u' = dstate t1\n  \\<lbrakk>dstate u' = dstate u \\<star> ?rs57; ?rs57 \\<in> pendingSeqs u;\n   \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "ultimately"], ["proof (chain)\npicking this:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n  initialized u\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av", "show ?thesis"], ["proof (prove)\nusing this:\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n  initialized u\n  dstate u' = dstate u \\<star> rs\n  rs \\<in> pendingSeqs u\n  \\<forall>av\\<in>abortVals u. dstate u' \\<preceq> av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<notin> ext (ioa 0 id2)\"\n          and \"trace (ioa.asig (ioa 0 id2)) ?e = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "using Lin1(2) ids"], ["proof (prove)\nusing this:\n  a = Linearize 0\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n 2. \\<not> initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(Linearize 0, u')])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(Linearize 0, u')]) = []\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n              (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case True"], ["proof (state)\nthis:\n  initialized s2\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[])\""], ["proof (state)\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<notin> ext (ioa 0 id2)\"\n          and \"trace (ioa.asig (ioa 0 id2)) ?e = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, []) = []", "using Lin1(2) ids"], ["proof (prove)\nusing this:\n  a = Linearize 0\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<notin> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, []) = []", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"last_state ?e = u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last_state (u, []) = u'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. last_state (u, []) = u'", "have \"dstate u = dstate s2 \\<and> dstate u' = dstate t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s2 \\<and> dstate u' = dstate t2", "using \\<open>P22 (s1,s2)\\<close> and \\<open>P22 (t1,t2)\\<close> and True and Lin1(1)"], ["proof (prove)\nusing this:\n  P22 (s1, s2)\n  P22 (t1, t2)\n  initialized s2\n  Lin s1 t1 \\<and> s2 = t2\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2 \\<and> dstate u' = dstate t2", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n\ngoal (1 subgoal):\n 1. last_state (u, []) = u'", "thus ?thesis"], ["proof (prove)\nusing this:\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n\ngoal (1 subgoal):\n 1. last_state (u, []) = u'", "using Lin1(1) \\<open>u' = u\\<lparr>dstate := dstate u'\\<rparr>\\<close>"], ["proof (prove)\nusing this:\n  dstate u = dstate s2 \\<and> dstate u' = dstate t2\n  Lin s1 t1 \\<and> s2 = t2\n  u' = u\\<lparr>dstate := dstate u'\\<rparr>\n\ngoal (1 subgoal):\n 1. last_state (u, []) = u'", "by simp"], ["proof (state)\nthis:\n  last_state (u, []) = u'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  last_state (u, []) = u'\n\ngoal (1 subgoal):\n 1. initialized s2 \\<Longrightarrow>\n    \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  last_state (u, []) = u'", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  last_state (u, []) = u'\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "using refines_def[of ?e \"(s1,s2)\" a \"(t1,t2)\" \"ioa 0 id2\" f]"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [])\n  a \\<notin> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, []) = []\n  last_state (u, []) = u'\n  refines (u, []) (s1, s2) a (t1, t2) (ioa 0 id2) f \\<equiv>\n  fst (u, []) = f (s1, s2) \\<and>\n  last_state (u, []) = f (t1, t2) \\<and>\n  is_exec_frag_of (ioa 0 id2) (u, []) \\<and>\n  (let tr = trace (ioa.asig (ioa 0 id2)) (u, [])\n   in if a \\<in> externals (ioa.asig (ioa 0 id2)) then tr = [a]\n      else tr = [])\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:u_def u'_def, auto)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "case (Switch2 p c av)"], ["proof (state)\nthis:\n  s1 = t1 \\<and> Abort p c av s2 t2\n  a = Switch id2 p c av\n\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "let ?e = \"(u,[(a,u')])\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have 1:\"is_exec_frag_of (ioa 0 id2) ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 1:\"u' = u\\<lparr>abortVals := (abortVals u) \\<union> {av},\n            status := (status u)(p := Aborted)\\<rparr>\"\n            and 2:\"av \\<in> safeAborts s2\" and 3:\"status u p = Pending\"\n            and 4:\"pending u p = (p,c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u' = u\n     \\<lparr>abortVals := abortVals u \\<union> {av},\n        status := (status u)(p := Aborted)\\<rparr> &&&\n     av \\<in> safeAborts s2) &&&\n    status u p = Pending &&& pending u p = (p, c)", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>\n 2. av \\<in> safeAborts s2\n 3. status u p = Pending\n 4. pending u p = (p, c)", "have 1:\"t2 = s2\\<lparr>abortVals := (abortVals s2) \\<union> {av},\n              status := (status s2)(p := Aborted)\\<rparr>\"\n              and 2:\"av \\<in> safeAborts s2\" and 3:\"s1 = t1\" \n              and 4:\"status s2 p = Pending\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t2 = s2\n     \\<lparr>abortVals := abortVals s2 \\<union> {av},\n        status := (status s2)(p := Aborted)\\<rparr> &&&\n     av \\<in> safeAborts s2) &&&\n    s1 = t1 &&& status s2 p = Pending", "using Switch2(1)"], ["proof (prove)\nusing this:\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. (t2 = s2\n     \\<lparr>abortVals := abortVals s2 \\<union> {av},\n        status := (status s2)(p := Aborted)\\<rparr> &&&\n     av \\<in> safeAborts s2) &&&\n    s1 = t1 &&& status s2 p = Pending", "by auto"], ["proof (state)\nthis:\n  t2 = s2\n  \\<lparr>abortVals := abortVals s2 \\<union> {av},\n     status := (status s2)(p := Aborted)\\<rparr>\n  av \\<in> safeAborts s2\n  s1 = t1\n  status s2 p = Pending\n\ngoal (4 subgoals):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>\n 2. av \\<in> safeAborts s2\n 3. status u p = Pending\n 4. pending u p = (p, c)", "show 5:\"status u p = Pending\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u p = Pending", "using \\<open>P6 (s1,s2)\\<close> 4"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n  status s2 p = Pending\n\ngoal (1 subgoal):\n 1. status u p = Pending", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  status u p = Pending\n\ngoal (3 subgoals):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>\n 2. av \\<in> safeAborts s2\n 3. pending u p = (p, c)", "have 6:\"status u' p = Aborted\""], ["proof (prove)\ngoal (1 subgoal):\n 1. status u' p = Aborted", "using \\<open>P6 (t1,t2)\\<close> 1"], ["proof (prove)\nusing this:\n  P6 (t1, t2)\n  t2 = s2\n  \\<lparr>abortVals := abortVals s2 \\<union> {av},\n     status := (status s2)(p := Aborted)\\<rparr>\n\ngoal (1 subgoal):\n 1. status u' p = Aborted", "by (auto simp add:u'_def)"], ["proof (state)\nthis:\n  status u' p = Aborted\n\ngoal (3 subgoals):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>\n 2. av \\<in> safeAborts s2\n 3. pending u p = (p, c)", "show \"pending u p = (p,c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pending u p = (p, c)", "using \\<open>P6 (s1,s2)\\<close> 4 Switch2(1)"], ["proof (prove)\nusing this:\n  P6 (s1, s2)\n  status s2 p = Pending\n  s1 = t1 \\<and> Abort p c av s2 t2\n\ngoal (1 subgoal):\n 1. pending u p = (p, c)", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  pending u p = (p, c)\n\ngoal (2 subgoals):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>\n 2. av \\<in> safeAborts s2", "show \"u' = u\\<lparr>abortVals := (abortVals u) \\<union> {av},\n              status := (status u)(p := Aborted)\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>", "using 1 3 5 6"], ["proof (prove)\nusing this:\n  t2 = s2\n  \\<lparr>abortVals := abortVals s2 \\<union> {av},\n     status := (status s2)(p := Aborted)\\<rparr>\n  s1 = t1\n  status u p = Pending\n  status u' p = Aborted\n\ngoal (1 subgoal):\n 1. u' = u\n    \\<lparr>abortVals := abortVals u \\<union> {av},\n       status := (status u)(p := Aborted)\\<rparr>", "by (auto simp add:u_def u'_def)"], ["proof (state)\nthis:\n  u' = u\n  \\<lparr>abortVals := abortVals u \\<union> {av},\n     status := (status u)(p := Aborted)\\<rparr>\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts s2", "show \"av \\<in> safeAborts s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts s2", "using 2"], ["proof (prove)\nusing this:\n  av \\<in> safeAborts s2\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts s2", "by assumption"], ["proof (state)\nthis:\n  av \\<in> safeAborts s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u' = u\n  \\<lparr>abortVals := abortVals u \\<union> {av},\n     status := (status u)(p := Aborted)\\<rparr>\n  av \\<in> safeAborts s2\n  status u p = Pending\n  pending u p = (p, c)\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "have 5:\"av \\<in> safeAborts u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "proof (cases \"initialized s2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow> av \\<in> safeAborts u\n 2. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "case True"], ["proof (state)\nthis:\n  initialized s2\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow> av \\<in> safeAborts u\n 2. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "hence 6:\"dstate u = dstate s2\""], ["proof (prove)\nusing this:\n  initialized s2\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "using \\<open>P22 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  initialized s2\n  P22 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  dstate u = dstate s2\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow> av \\<in> safeAborts u\n 2. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "have \"(\\<exists> rs \\<in> pendingSeqs s2 . av = dstate s2 \\<star> rs)\n              \\<or> (dstate s2 \\<preceq> av \\<and> (\\<exists> ivs \\<in> initSets s2 . \n                dstate s2 \\<preceq> \\<Sqinter>ivs \\<and> (\\<exists> rs \\<in> pendingSeqs s2 . av = \\<Sqinter>ivs \\<star> rs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n    dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n    dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))", "have \"av \\<in> initAborts s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> initAborts s2", "using 2 and True"], ["proof (prove)\nusing this:\n  av \\<in> safeAborts s2\n  initialized s2\n\ngoal (1 subgoal):\n 1. av \\<in> initAborts s2", "by (auto simp add:safeAborts_def)"], ["proof (state)\nthis:\n  av \\<in> initAborts s2\n\ngoal (1 subgoal):\n 1. (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n    dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  av \\<in> initAborts s2\n\ngoal (1 subgoal):\n 1. (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n    dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))", "by (auto simp add:initAborts_def)"], ["proof (state)\nthis:\n  (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n\ngoal (2 subgoals):\n 1. initialized s2 \\<Longrightarrow> av \\<in> safeAborts u\n 2. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs) \\<or>\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>rs\\<in>pendingSeqs s2.\n       av = dstate s2 \\<star> rs \\<Longrightarrow>\n    av \\<in> safeAborts u\n 2. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "assume \"\\<exists> rs \\<in> pendingSeqs s2 . av = dstate s2 \\<star> rs\""], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs\n\ngoal (2 subgoals):\n 1. \\<exists>rs\\<in>pendingSeqs s2.\n       av = dstate s2 \\<star> rs \\<Longrightarrow>\n    av \\<in> safeAborts u\n 2. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "moreover"], ["proof (state)\nthis:\n  \\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs\n\ngoal (2 subgoals):\n 1. \\<exists>rs\\<in>pendingSeqs s2.\n       av = dstate s2 \\<star> rs \\<Longrightarrow>\n    av \\<in> safeAborts u\n 2. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "note \\<open>initialized u\\<close>"], ["proof (state)\nthis:\n  initialized u\n\ngoal (2 subgoals):\n 1. \\<exists>rs\\<in>pendingSeqs s2.\n       av = dstate s2 \\<star> rs \\<Longrightarrow>\n    av \\<in> safeAborts u\n 2. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs\n  initialized u", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs\n  initialized u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "using \\<open>pendingReqs s2 \\<subseteq> pendingReqs u\\<close> 6"], ["proof (prove)\nusing this:\n  \\<exists>rs\\<in>pendingSeqs s2. av = dstate s2 \\<star> rs\n  initialized u\n  pendingReqs s2 \\<subseteq> pendingReqs u\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "by (simp add:safeAborts_def initAborts_def)\n                  (metis less_eq_def mem_Collect_eq pendingSeqs_def \n                    sup.coboundedI2 sup.orderE)"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "assume 7:\"dstate s2 \\<preceq> av \\<and> (\\<exists> ivs \\<in> initSets s2 . \n                dstate s2 \\<preceq> \\<Sqinter>ivs \\<and> (\\<exists> rs \\<in> pendingSeqs s2 . av = \\<Sqinter>ivs \\<star> rs))\""], ["proof (state)\nthis:\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n\ngoal (1 subgoal):\n 1. dstate s2 \\<preceq> av \\<and>\n    (\\<exists>ivs\\<in>initSets s2.\n        dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n        (\\<exists>rs\\<in>pendingSeqs s2.\n            av = \\<Sqinter> ivs \\<star> rs)) \\<Longrightarrow>\n    av \\<in> safeAborts u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 8:\"dstate u \\<preceq> av\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u \\<preceq> av", "using 7 6"], ["proof (prove)\nusing this:\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. dstate u \\<preceq> av", "by auto"], ["proof (state)\nthis:\n  dstate u \\<preceq> av\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "obtain ivs rs' where 9:\"ivs \\<in> initSets s2\" \n                  and 10:\"dstate s2 \\<preceq> \\<Sqinter>ivs\" \n                  and 11:\"rs' \\<in> pendingSeqs s2 \\<and> av = \\<Sqinter>ivs \\<star> rs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs rs'.\n        \\<lbrakk>ivs \\<in> initSets s2; dstate s2 \\<preceq> \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s2 \\<and>\n         av = \\<Sqinter> ivs \\<star> rs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 7"], ["proof (prove)\nusing this:\n  dstate s2 \\<preceq> av \\<and>\n  (\\<exists>ivs\\<in>initSets s2.\n      dstate s2 \\<preceq> \\<Sqinter> ivs \\<and>\n      (\\<exists>rs\\<in>pendingSeqs s2. av = \\<Sqinter> ivs \\<star> rs))\n\ngoal (1 subgoal):\n 1. (\\<And>ivs rs'.\n        \\<lbrakk>ivs \\<in> initSets s2; dstate s2 \\<preceq> \\<Sqinter> ivs;\n         rs' \\<in> pendingSeqs s2 \\<and>\n         av = \\<Sqinter> ivs \\<star> rs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ivs \\<in> initSets s2\n  dstate s2 \\<preceq> \\<Sqinter> ivs\n  rs' \\<in> pendingSeqs s2 \\<and> av = \\<Sqinter> ivs \\<star> rs'\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 12:\"dstate u = dstate s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "using True \\<open>P22 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  initialized s2\n  P22 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate u = dstate s2", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "moreover"], ["proof (state)\nthis:\n  dstate u = dstate s2\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "obtain rs where \"rs \\<in> pendingSeqs u\" and \"\\<Sqinter>ivs = dstate s2 \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u;\n         \\<Sqinter> ivs = dstate s2 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>P25 (s1,s2)\\<close> True 9 10"], ["proof (prove)\nusing this:\n  P25 (s1, s2)\n  initialized s2\n  ivs \\<in> initSets s2\n  dstate s2 \\<preceq> \\<Sqinter> ivs\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>rs \\<in> pendingSeqs u;\n         \\<Sqinter> ivs = dstate s2 \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs u\n  \\<Sqinter> ivs = dstate s2 \\<star> rs\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "ultimately"], ["proof (chain)\npicking this:\n  dstate u = dstate s2\n  rs \\<in> pendingSeqs u\n  \\<Sqinter> ivs = dstate s2 \\<star> rs", "have  \"av = dstate u \\<star> (rs@rs')\" \n                  and \"rs@rs' \\<in> pendingSeqs u\""], ["proof (prove)\nusing this:\n  dstate u = dstate s2\n  rs \\<in> pendingSeqs u\n  \\<Sqinter> ivs = dstate s2 \\<star> rs\n\ngoal (1 subgoal):\n 1. av = dstate u \\<star> append rs' rs &&&\n    append rs' rs \\<in> pendingSeqs u", "using 11"], ["proof (prove)\nusing this:\n  dstate u = dstate s2\n  rs \\<in> pendingSeqs u\n  \\<Sqinter> ivs = dstate s2 \\<star> rs\n  rs' \\<in> pendingSeqs s2 \\<and> av = \\<Sqinter> ivs \\<star> rs'\n\ngoal (1 subgoal):\n 1. av = dstate u \\<star> append rs' rs &&&\n    append rs' rs \\<in> pendingSeqs u", "by (simp_all add:pendingSeqs_def)\n                    (metis exec_append, metis lem1 subset_trans)"], ["proof (state)\nthis:\n  av = dstate u \\<star> append rs' rs\n  append rs' rs \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "thus ?thesis"], ["proof (prove)\nusing this:\n  av = dstate u \\<star> append rs' rs\n  append rs' rs \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "using 8 \\<open>initialized u\\<close>"], ["proof (prove)\nusing this:\n  av = dstate u \\<star> append rs' rs\n  append rs' rs \\<in> pendingSeqs u\n  dstate u \\<preceq> av\n  initialized u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "by (auto simp add:safeAborts_def initAborts_def)"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal (1 subgoal):\n 1. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "case False"], ["proof (state)\nthis:\n  \\<not> initialized s2\n\ngoal (1 subgoal):\n 1. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "with 2"], ["proof (chain)\npicking this:\n  av \\<in> safeAborts s2\n  \\<not> initialized s2", "have 0:\"av \\<in> uninitAborts s2\""], ["proof (prove)\nusing this:\n  av \\<in> safeAborts s2\n  \\<not> initialized s2\n\ngoal (1 subgoal):\n 1. av \\<in> uninitAborts s2", "by (auto simp add:safeAborts_def)"], ["proof (state)\nthis:\n  av \\<in> uninitAborts s2\n\ngoal (1 subgoal):\n 1. \\<not> initialized s2 \\<Longrightarrow> av \\<in> safeAborts u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "obtain ivs rs where 1:\"ivs \\<in> initSets s2\" \n                and 2:\"rs \\<in>pendingSeqs s2\"\n                and 3:\"av = \\<Sqinter>ivs \\<star> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<in> initSets s2; rs \\<in> pendingSeqs s2;\n         av = \\<Sqinter> ivs \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 0"], ["proof (prove)\nusing this:\n  av \\<in> uninitAborts s2\n\ngoal (1 subgoal):\n 1. (\\<And>ivs rs.\n        \\<lbrakk>ivs \\<in> initSets s2; rs \\<in> pendingSeqs s2;\n         av = \\<Sqinter> ivs \\<star> rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add:uninitAborts_def)"], ["proof (state)\nthis:\n  ivs \\<in> initSets s2\n  rs \\<in> pendingSeqs s2\n  av = \\<Sqinter> ivs \\<star> rs\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 4:\"rs \\<in> pendingSeqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs u", "using lem1 2"], ["proof (prove)\nusing this:\n  pendingReqs s2 \\<subseteq> pendingReqs u\n  rs \\<in> pendingSeqs s2\n\ngoal (1 subgoal):\n 1. rs \\<in> pendingSeqs u", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  rs \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 5:\"dstate u = dstate s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dstate u = dstate s1", "using False \\<open>P10 (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> initialized s2\n  P10 (s1, s2)\n\ngoal (1 subgoal):\n 1. dstate u = dstate s1", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  dstate u = dstate s1\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "obtain rs' where 6:\"\\<Sqinter>ivs = dstate s1 \\<star> rs'\" \n                and 7:\"rs' \\<in> pendingSeqs s1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         rs' \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1 \\<open>P8a (s1,s2)\\<close>"], ["proof (prove)\nusing this:\n  ivs \\<in> initSets s2\n  P8a (s1, s2)\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<lbrakk>\\<Sqinter> ivs = dstate s1 \\<star> rs';\n         rs' \\<in> pendingSeqs s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Sqinter> ivs = dstate s1 \\<star> rs'\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 8:\"rs' \\<in> pendingSeqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs u", "using False \\<open>P23 (s1,s2)\\<close> 7"], ["proof (prove)\nusing this:\n  \\<not> initialized s2\n  P23 (s1, s2)\n  rs' \\<in> pendingSeqs s1\n\ngoal (1 subgoal):\n 1. rs' \\<in> pendingSeqs u", "by (auto simp add:u_def)"], ["proof (state)\nthis:\n  rs' \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 9:\"av = dstate u \\<star> (rs'@rs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. av = dstate u \\<star> append rs rs'", "using 3 5 6"], ["proof (prove)\nusing this:\n  av = \\<Sqinter> ivs \\<star> rs\n  dstate u = dstate s1\n  \\<Sqinter> ivs = dstate s1 \\<star> rs'\n\ngoal (1 subgoal):\n 1. av = dstate u \\<star> append rs rs'", "by (metis exec_append)"], ["proof (state)\nthis:\n  av = dstate u \\<star> append rs rs'\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "have 10:\"rs'@rs \\<in> pendingSeqs u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. append rs rs' \\<in> pendingSeqs u", "using 4 8"], ["proof (prove)\nusing this:\n  rs \\<in> pendingSeqs u\n  rs' \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. append rs rs' \\<in> pendingSeqs u", "by (auto simp add:pendingSeqs_def)"], ["proof (state)\nthis:\n  append rs rs' \\<in> pendingSeqs u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "using 9 10 \\<open>initialized u\\<close>"], ["proof (prove)\nusing this:\n  av = dstate u \\<star> append rs rs'\n  append rs rs' \\<in> pendingSeqs u\n  initialized u\n\ngoal (1 subgoal):\n 1. av \\<in> safeAborts u", "by (auto simp add:safeAborts_def initAborts_def less_eq_def)"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  av \\<in> safeAborts u\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "using 1 3 4 5 Switch2(2)"], ["proof (prove)\nusing this:\n  u' = u\n  \\<lparr>abortVals := abortVals u \\<union> {av},\n     status := (status u)(p := Aborted)\\<rparr>\n  status u p = Pending\n  pending u p = (p, c)\n  av \\<in> safeAborts u\n  a = Switch id2 p c av\n\ngoal (1 subgoal):\n 1. is_exec_frag_of (ioa 0 id2) (u, [(a, u')])", "by auto"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "moreover"], ["proof (state)\nthis:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "have \"a \\<in> ext (ioa 0 id2)\" \n        and \"trace (ioa.asig (ioa 0 id2)) ?e = [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "using Switch2(2) ids"], ["proof (prove)\nusing this:\n  a = Switch id2 p c av\n  0 < id1\n  id1 < id2\n\ngoal (1 subgoal):\n 1. a \\<in> externals (ioa.asig (ioa 0 id2)) &&&\n    trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "by (auto simp add:trace_def schedule_def filter_act_def)"], ["proof (state)\nthis:\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<And>p c av.\n       \\<lbrakk>s1 = t1 \\<and> Abort p c av s2 t2;\n        a = Switch id2 p c av\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "ultimately"], ["proof (chain)\npicking this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]", "show ?thesis"], ["proof (prove)\nusing this:\n  is_exec_frag_of (ioa 0 id2) (u, [(a, u')])\n  a \\<in> externals (ioa.asig (ioa 0 id2))\n  trace (ioa.asig (ioa 0 id2)) (u, [(a, u')]) = [a]\n\ngoal (1 subgoal):\n 1. \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f", "by (simp only:refines_def u_def u'_def)\n            (metis fst_conv last_state.simps(2) snd_conv)"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e. refines e (s1, s2) a (t1, t2) (ioa 0 id2) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_ref_map f composition (ioa 0 id2)\n\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "ultimately"], ["proof (chain)\npicking this:\n  externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))\n  is_ref_map f composition (ioa 0 id2)", "show ?thesis"], ["proof (prove)\nusing this:\n  externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))\n  is_ref_map f composition (ioa 0 id2)\n\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "using ref_map_soundness"], ["proof (prove)\nusing this:\n  externals (ioa.asig composition) = externals (ioa.asig (ioa 0 id2))\n  is_ref_map f composition (ioa 0 id2)\n  \\<lbrakk>is_ref_map ?f ?B ?A;\n   externals (ioa.asig ?A) = externals (ioa.asig ?B)\\<rbrakk>\n  \\<Longrightarrow> local.traces ?B \\<subseteq> local.traces ?A\n\ngoal (1 subgoal):\n 1. local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "by blast"], ["proof (state)\nthis:\n  local.traces composition \\<subseteq> local.traces (ioa 0 id2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.traces composition \\<subseteq> local.traces (ioa 0 id2)\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "ultimately"], ["proof (chain)\npicking this:\n  inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))\n  outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))\n  local.traces composition \\<subseteq> local.traces (ioa 0 id2)", "show ?thesis"], ["proof (prove)\nusing this:\n  inputs (ioa.asig composition) = inputs (ioa.asig (ioa 0 id2))\n  outputs (ioa.asig composition) = outputs (ioa.asig (ioa 0 id2))\n  local.traces composition \\<subseteq> local.traces (ioa 0 id2)\n\ngoal (1 subgoal):\n 1. composition =<| ioa 0 id2", "by (metis ioa_implements_def)"], ["proof (state)\nthis:\n  composition =<| ioa 0 id2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}