{"file_name": "/home/qj213/afp-2021-10-22/thys/Amicable_Numbers/Amicable_Numbers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Amicable_Numbers", "problem_names": ["lemma mult_minus_eq_nat: \n  fixes  x::nat and y ::nat and z::nat\n  assumes \" x+y = z\"\n  shows \" -x-y = -z \"", "lemma minus_eq_nat_subst: fixes A::nat and B::nat and  C::nat and  D::nat and  E::nat\n  assumes \"A = B-C-D\" and \" -E = -C-D\"\n  shows \" A = B-E\"", "lemma minus_eq_nat_subst_order:  fixes  A::nat and  B::nat  and  C::nat  and  D::nat  and   E::nat\n  assumes \"B-C-D > 0\" and \"A = B-C-D+B\"  shows \"A = 2*B-C-D\"", "lemma auxiliary_ineq: fixes x::nat assumes \"x \\<ge> (2::nat)\"\n  shows \" x+1 < (2::nat)*x\"", "lemma sum_strict_mono:\n  fixes A :: \"nat set\"\n  assumes \"finite B\" \"A \\<subset> B\" \"0 \\<notin> B\"\n  shows \"\\<Sum> A < \\<Sum> B\"", "lemma sum_image_eq:\n  assumes \"inj_on f A\"\n  shows \"\\<Sum> (f ` A) = (\\<Sum> i \\<in> A. f i)\"", "lemma coprime_dvd_aux:\n  assumes \"gcd m n = Suc 0\" \"na dvd n\" \"ma dvd m\" \"mb dvd m\" \"nb dvd n\" and eq: \"ma * na = mb * nb\"\n  shows \"ma = mb\"", "lemma def_equiv_divisor_set: \"divisor_set (n::nat) = set(divisors_nat n)\"", "lemma example1_divisor: shows \"(2::nat) \\<in> divisor_set (4::nat)\"", "lemma example2_properdiv_set: \"properdiv_set (Suc (Suc (Suc 0))) = {(1::nat)}\"", "lemma divisor_set_not_empty: fixes m::nat assumes \"m \\<ge>1\"\n  shows \"m \\<in> divisor_set m\"", "lemma finite_divisor_set [simp]: \"finite(divisor_set n)\"", "lemma finite_properdiv_set[simp]: shows \"finite(properdiv_set m)\"", "lemma divisor_set_mult:\n  \"divisor_set  (m*n) = {i*j| i j. (i \\<in> divisor_set m)\\<and>(j \\<in> divisor_set n)}\"", "lemma divisor_set_1 [simp]: \"divisor_set (Suc 0) = {Suc 0}\"", "lemma divisor_set_one: shows \"divisor_set 1 ={1}\"", "lemma union_properdiv_set: assumes \"n\\<ge>1\" shows \"divisor_set n =(properdiv_set n)\\<union>{n}\"", "lemma prime_div_set: assumes \"prime n\" shows \"divisor_set n = {n, 1}\"", "lemma div_set_prime:\n  assumes \"prime n\"\n  shows \"properdiv_set n = {1}\"", "lemma prime_gcd: fixes m::nat and n::nat assumes \"prime m\" and \"prime n\"\nand \"m \\<noteq> n\" shows \"gcd m n =1 \"", "lemma example_perfect_6: shows \"perfect_number 6\"", "lemma Esigma_properdiv_set:\n  assumes \"m \\<ge> 1\"\n  shows \"Esigma m = (aliquot_sum m) + m\"", "lemma Esigmanotzero:\n  assumes \"n \\<ge> 1\"\n  shows \"Esigma n \\<ge> 1\"", "lemma prime_sum_div:\n  assumes \"prime n\"\n  shows \" Esigma n = n +(1::nat)\"", "lemma sum_div_is_prime:\n  assumes \"Esigma n = n +(1::nat)\" and \"n \\<ge>1\"\n  shows \"prime n\"", "lemma Esigma_prime_sum:\n  fixes k:: nat assumes \"prime m\" \"k \\<ge>1\"\n  shows \"Esigma (m^k) =( m^(k+(1::nat)) -(1::nat)) /(m-1)\"", "lemma prime_Esigma_mult: assumes \"prime m\" and \"prime n\" and \"m \\<noteq> n\"\n  shows \"Esigma (m*n) = (Esigma n)*(Esigma m)\"", "lemma gcd_Esigma_mult:\n  assumes \"gcd m n = 1\"\n  shows \"Esigma (m*n) = (Esigma m)*(Esigma n)\"", "lemma deficient_Esigma:\n  assumes \"Esigma m < 2*m\" and \"m \\<ge>1\"\n  shows \"deficient_number m\"", "lemma abundant_Esigma:\n  assumes \"Esigma m > 2*m\" and \"m \\<ge>1\" \n  shows \"abundant_number m\"", "lemma perfect_Esigma:\n  assumes \"Esigma m = 2*m\" and \"m \\<ge>1\" \n  shows \"perfect_number m\"", "lemma Amicable_pair_sym: fixes m::nat and n ::nat\n  assumes \"m Amic n \" shows \"n Amic m \"", "lemma Amicable_pair_equiv_def:\n  assumes \"(m Amic n)\" and \"m \\<ge>1\" and \"n \\<ge>1\"\n  shows   \"(Esigma m = Esigma n)\\<and>(Esigma m = m+n)\"", "lemma Amicable_pair_equiv_def_conv:\n  assumes \"m\\<ge>1\" and \"n\\<ge>1\" and \"(Esigma m = Esigma n)\\<and>(Esigma m = m+n)\"\n  shows  \"(m Amic n)\"", "lemma Amicable_pair_deficient: assumes \"m > n\" and  \"m Amic n\"\n  shows \"deficient_number m\"", "lemma Amicable_pair_abundant: assumes \"m > n\" and  \"m Amic n\"\n  shows \"abundant_number n\"", "lemma even_even_amicable: assumes  \"m Amic n\" and \"m \\<ge>1\" and \"n \\<ge>1\" and \"even m\" and \"even n\"\n  shows \"(2*m \\<noteq> n)\"", "lemma regularAmicPair_sym:\n  assumes \"regularAmicPair n m\" shows \"regularAmicPair m n\"", "lemma irregularAmicPair_sym:\n  assumes \"irregularAmicPair n m\"\n  shows \"irregularAmicPair m n\"", "lemma twinAmicPair_sym:\n  assumes \"twinAmicPair n m\"\n  shows \"twinAmicPair m n\"", "lemma isotopic_amicable_pair:\n  fixes m n g h M N :: nat\n  assumes \"m Amic n\" and \"m \\<ge> 1\" and \"n \\<ge> 1\"and \"m= g*M\" and \"n = g*N\"\n      and \"Esigma h = (h/g) * Esigma g\" and \"h \\<noteq> g\" and \"h > 1\" and \"g > 1\"\n      and \"gcd g M = 1\" and \"gcd g N = 1\" and \"gcd h M = 1\" and \"gcd h N = 1\"\n    shows \"(h*M) Amic (h*N)\"", "lemma isotopic_pair_example1:\n  assumes \"(3^3*5*11*17*227) Amic (3^3*5*23*37*53)\"\n  shows  \"(3^2*7*13*11*17*227) Amic (3^2*7*13*23*37*53)\"", "lemma QuasiAmicable_pair_sym :\n  assumes \"m QAmic n \" shows \"n QAmic m \"", "lemma QuasiAmicable_example:\n  shows \"48 QAmic 75\"", "lemma breederAmic:\n  fixes x :: nat\n  assumes \"x > 0\" and \"Esigma n = n + m*x\" and \"Esigma n = Esigma m * (x+1)\" \n      and \"prime x\" and \"\\<not>( x dvd m)\"\n  shows \" n Amic (m*x)\"", "lemma odd_odd_amicable_Euler: \"69615 Amic 87633\"", "lemma Amicable_pair_example_smallest_odd_odd: \"12285 Amic 14595\"", "theorem Euler_Rule_Amicable:\n  fixes k l f p q r m n :: nat\n  assumes \"k > l\" and \"l \\<ge> 1\" and \"f = 2^l+1\" \n      and \"prime p\" and \"prime q\" and \"prime r\"\n      and \"p = 2^(k-l) * f - 1\" and \"q = 2^k * f - 1\" and \"r = 2^(2*k-l) * f^2 - 1\" \n      and \"m = 2^k * p * q\" and \"n = 2^k * r\"\n  shows \"m Amic n\"", "theorem Euler_Rule_Amicable_1:\n  fixes m n a :: nat\n  assumes \"m \\<ge> 1\" and \"n \\<ge> 1\" and \"a \\<ge> 1\" \n      and \"Esigma m = Esigma n\" and \"Esigma a * Esigma m = a*(m+n)\" \n      and \"gcd a m =1\" and \"gcd a n =1\"\n      shows \"(a*m) Amic (a*n)\"", "lemma Amicable_Example_Pythagoras:\n  shows \"220 Amic 284\"", "lemma Amicable_Example_Fermat:\n  shows  \"17296 Amic 18416\"", "lemma Amicable_Example_Descartes:\n  shows \"9363584 Amic 9437056\"", "lemma regularAmicPairExample: \"regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]\"", "lemma abundant220ex: \"abundant_number 220\"", "lemma deficient284ex: \"deficient_number 284\"", "theorem teRiele_Rule_Amicable: \n  fixes a u p r c q :: nat\n  assumes \"a \\<ge> 1\" and \"u \\<ge> 1\"\n      and \"prime p\" and \"prime r\" and \"prime c\" and \"prime q\" and \"r \\<noteq> c\" \n      and \"\\<not>(p dvd a)\" and \"(a*u) Amic (a*p)\" and \"gcd a (r*c)=1\"\n      and \"q = r+c+u\" and \"gcd (a*u) q =1\" and \"r*c = p*(r +c+ u) + p+u\"\n  shows \"(a*u*q) Amic (a*r*c)\"", "theorem Borho_Rule_breeders_Amicable: \n  fixes a u r c q x :: nat \n  assumes \"x \\<ge> 1\" and \"a \\<ge> 1\" and \"u \\<ge> 1\"\n      and \"prime r\" and \"prime c\" and  \"prime q\" and \"r \\<noteq> c\" \n      and \"Esigma (a*u) = a*u + a*x\" \"Esigma (a*u) = (Esigma a)*(x+1)\" and \"gcd a (r * c) =1\"\n      and \"gcd (a*u) q = 1\" and \"r * c = x+u + x*u +r*x +x*c\" and \"q = r+c+u\"\n  shows \"(a*u*q) Amic (a*r*c)\""], "translations": [["", "lemma mult_minus_eq_nat: \n  fixes  x::nat and y ::nat and z::nat\n  assumes \" x+y = z\"\n  shows \" -x-y = -z \""], ["proof (prove)\ngoal (1 subgoal):\n 1. - int x - int y = - int z", "using assms"], ["proof (prove)\nusing this:\n  x + y = z\n\ngoal (1 subgoal):\n 1. - int x - int y = - int z", "by linarith"], ["", "lemma minus_eq_nat_subst: fixes A::nat and B::nat and  C::nat and  D::nat and  E::nat\n  assumes \"A = B-C-D\" and \" -E = -C-D\"\n  shows \" A = B-E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B - E", "using assms"], ["proof (prove)\nusing this:\n  A = B - C - D\n  - int E = - int C - int D\n\ngoal (1 subgoal):\n 1. A = B - E", "by linarith"], ["", "lemma minus_eq_nat_subst_order:  fixes  A::nat and  B::nat  and  C::nat  and  D::nat  and   E::nat\n  assumes \"B-C-D > 0\" and \"A = B-C-D+B\"  shows \"A = 2*B-C-D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = 2 * B - C - D", "using assms"], ["proof (prove)\nusing this:\n  0 < B - C - D\n  A = B - C - D + B\n\ngoal (1 subgoal):\n 1. A = 2 * B - C - D", "by auto"], ["", "lemma auxiliary_ineq: fixes x::nat assumes \"x \\<ge> (2::nat)\"\n  shows \" x+1 < (2::nat)*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + 1 < 2 * x", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. x + 1 < 2 * x", "by linarith"], ["", "(* TODO The following three auxiliary lemmas are by Lawrence Paulson. To be added to the library. *)"], ["", "lemma sum_strict_mono:\n  fixes A :: \"nat set\"\n  assumes \"finite B\" \"A \\<subset> B\" \"0 \\<notin> B\"\n  shows \"\\<Sum> A < \\<Sum> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "have \"B - A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - A \\<noteq> {}", "using assms(2)"], ["proof (prove)\nusing this:\n  A \\<subset> B\n\ngoal (1 subgoal):\n 1. B - A \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  B - A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "with assms DiffE"], ["proof (chain)\npicking this:\n  finite B\n  A \\<subset> B\n  0 \\<notin> B\n  \\<lbrakk>?c \\<in> ?A - ?B;\n   \\<lbrakk>?c \\<in> ?A; ?c \\<notin> ?B\\<rbrakk>\n   \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  B - A \\<noteq> {}", "have \"\\<Sum> (B-A) > 0\""], ["proof (prove)\nusing this:\n  finite B\n  A \\<subset> B\n  0 \\<notin> B\n  \\<lbrakk>?c \\<in> ?A - ?B;\n   \\<lbrakk>?c \\<in> ?A; ?c \\<notin> ?B\\<rbrakk>\n   \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  B - A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < \\<Sum> (B - A)", "by fastforce"], ["proof (state)\nthis:\n  0 < \\<Sum> (B - A)\n\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "moreover"], ["proof (state)\nthis:\n  0 < \\<Sum> (B - A)\n\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "have \"\\<Sum> B = \\<Sum> A + \\<Sum> (B-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> B = \\<Sum> A + \\<Sum> (B - A)", "by (metis add.commute assms(1) assms(2) psubsetE sum.subset_diff)"], ["proof (state)\nthis:\n  \\<Sum> B = \\<Sum> A + \\<Sum> (B - A)\n\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "ultimately"], ["proof (chain)\npicking this:\n  0 < \\<Sum> (B - A)\n  \\<Sum> B = \\<Sum> A + \\<Sum> (B - A)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < \\<Sum> (B - A)\n  \\<Sum> B = \\<Sum> A + \\<Sum> (B - A)\n\ngoal (1 subgoal):\n 1. \\<Sum> A < \\<Sum> B", "by linarith"], ["proof (state)\nthis:\n  \\<Sum> A < \\<Sum> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_image_eq:\n  assumes \"inj_on f A\"\n  shows \"\\<Sum> (f ` A) = (\\<Sum> i \\<in> A. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> (f ` A) = sum f A", "using assms sum.reindex_cong"], ["proof (prove)\nusing this:\n  inj_on f A\n  \\<lbrakk>inj_on ?l ?B; ?A = ?l ` ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g (?l x) = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. \\<Sum> (f ` A) = sum f A", "by fastforce"], ["", "lemma coprime_dvd_aux:\n  assumes \"gcd m n = Suc 0\" \"na dvd n\" \"ma dvd m\" \"mb dvd m\" \"nb dvd n\" and eq: \"ma * na = mb * nb\"\n  shows \"ma = mb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ma = mb", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ma = mb", "have \"gcd na mb = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd na mb = 1", "using assms"], ["proof (prove)\nusing this:\n  gcd m n = Suc 0\n  na dvd n\n  ma dvd m\n  mb dvd m\n  nb dvd n\n  ma * na = mb * nb\n\ngoal (1 subgoal):\n 1. gcd na mb = 1", "by (metis One_nat_def gcd.commute gcd_nat.mono is_unit_gcd_iff)"], ["proof (state)\nthis:\n  gcd na mb = 1\n\ngoal (1 subgoal):\n 1. ma = mb", "moreover"], ["proof (state)\nthis:\n  gcd na mb = 1\n\ngoal (1 subgoal):\n 1. ma = mb", "have \"gcd nb ma = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd nb ma = 1", "using assms"], ["proof (prove)\nusing this:\n  gcd m n = Suc 0\n  na dvd n\n  ma dvd m\n  mb dvd m\n  nb dvd n\n  ma * na = mb * nb\n\ngoal (1 subgoal):\n 1. gcd nb ma = 1", "by (metis One_nat_def gcd.commute gcd_nat.mono is_unit_gcd_iff)"], ["proof (state)\nthis:\n  gcd nb ma = 1\n\ngoal (1 subgoal):\n 1. ma = mb", "ultimately"], ["proof (chain)\npicking this:\n  gcd na mb = 1\n  gcd nb ma = 1", "show \"ma = mb\""], ["proof (prove)\nusing this:\n  gcd na mb = 1\n  gcd nb ma = 1\n\ngoal (1 subgoal):\n 1. ma = mb", "by (metis eq gcd_mult_distrib_nat mult.commute nat_mult_1_right)"], ["proof (state)\nthis:\n  ma = mb\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>Amicable Numbers\\<close>"], ["", "subsection\\<open>Preliminaries\\<close>"], ["", "definition divisor :: \"nat \\<Rightarrow>nat \\<Rightarrow> bool\"  (infixr \"divisor\" 80)\n  where \"n divisor m \\<equiv>(n \\<ge> 1 \\<and> n \\<le> m \\<and> n dvd m)\""], ["", "definition divisor_set: \"divisor_set m = {n. n divisor m}\""], ["", "lemma def_equiv_divisor_set: \"divisor_set (n::nat) = set(divisors_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set n = set (divisors_nat n)", "using  divisors_nat_def divisors_nat divisor_set divisor_def"], ["proof (prove)\nusing this:\n  divisors_nat ?n \\<equiv>\n  if ?n = 0 then []\n  else remdups_adj\n        (sort (map prod_list (subseqs (prime_factorization_nat ?n))))\n  ?n \\<noteq> 0 \\<Longrightarrow> set (divisors_nat ?n) = {p. p dvd ?n}\n  distinct (divisors_nat ?n)\n  divisors_nat 0 = []\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. divisor_set n = set (divisors_nat n)", "by auto"], ["", "definition proper_divisor :: \"nat \\<Rightarrow>nat \\<Rightarrow> bool\"  (infixr \"properdiv\" 80)\n  where \"n properdiv m \\<equiv>(n \\<ge> 1 \\<and> n < m \\<and> n dvd m)\""], ["", "definition properdiv_set: \"properdiv_set m = {n. n properdiv m}\""], ["", "lemma example1_divisor: shows \"(2::nat) \\<in> divisor_set (4::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<in> divisor_set 4", "using  divisor_set divisor_def"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. 2 \\<in> divisor_set 4", "by force"], ["", "lemma example2_properdiv_set: \"properdiv_set (Suc (Suc (Suc 0))) = {(1::nat)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properdiv_set (Suc (Suc (Suc 0))) = {1}", "by (auto simp: properdiv_set proper_divisor_def less_Suc_eq dvd_def; presburger)"], ["", "lemma divisor_set_not_empty: fixes m::nat assumes \"m \\<ge>1\"\n  shows \"m \\<in> divisor_set m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> divisor_set m", "using assms divisor_set divisor_def"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. m \\<in> divisor_set m", "by force"], ["", "lemma finite_divisor_set [simp]: \"finite(divisor_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (divisor_set n)", "using divisor_def divisor_set"], ["proof (prove)\nusing this:\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n  divisor_set ?m = {n. n divisor ?m}\n\ngoal (1 subgoal):\n 1. finite (divisor_set n)", "by simp"], ["", "lemma finite_properdiv_set[simp]: shows \"finite(properdiv_set m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (properdiv_set m)", "using  properdiv_set proper_divisor_def"], ["proof (prove)\nusing this:\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. finite (properdiv_set m)", "by simp"], ["", "lemma divisor_set_mult:\n  \"divisor_set  (m*n) = {i*j| i j. (i \\<in> divisor_set m)\\<and>(j \\<in> divisor_set n)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set (m * n) =\n    {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}", "using divisor_set divisor_def"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. divisor_set (m * n) =\n    {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}", "by (fastforce simp add: divisor_set divisor_def dest: division_decomp)"], ["", "lemma divisor_set_1 [simp]: \"divisor_set (Suc 0) = {Suc 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set (Suc 0) = {Suc 0}", "by (simp add: divisor_set divisor_def cong: conj_cong)"], ["", "lemma divisor_set_one: shows \"divisor_set 1 ={1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 1 = {1}", "using divisor_set  divisor_def"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. divisor_set 1 = {1}", "by auto"], ["", "lemma union_properdiv_set: assumes \"n\\<ge>1\" shows \"divisor_set n =(properdiv_set n)\\<union>{n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set n = properdiv_set n \\<union> {n}", "using divisor_set properdiv_set  proper_divisor_def assms  divisor_def"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n  1 \\<le> n\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. divisor_set n = properdiv_set n \\<union> {n}", "by auto"], ["", "lemma prime_div_set: assumes \"prime n\" shows \"divisor_set n = {n, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set n = {n, 1}", "using divisor_def assms divisor_set  prime_nat_iff"], ["proof (prove)\nusing this:\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n  prime n\n  divisor_set ?m = {n. n divisor ?m}\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n\ngoal (1 subgoal):\n 1. divisor_set n = {n, 1}", "by auto"], ["", "lemma div_set_prime:\n  assumes \"prime n\"\n  shows \"properdiv_set n = {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properdiv_set n = {1}", "using assms properdiv_set prime_nat_iff proper_divisor_def"], ["proof (prove)\nusing this:\n  prime n\n  properdiv_set ?m = {n. n properdiv ?m}\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. properdiv_set n = {1}", "by (metis (no_types, lifting) Collect_cong One_nat_def divisor_def divisor_set divisor_set_one\n dvd_1_left empty_iff insert_iff mem_Collect_eq order_less_irrefl)"], ["", "lemma prime_gcd: fixes m::nat and n::nat assumes \"prime m\" and \"prime n\"\nand \"m \\<noteq> n\" shows \"gcd m n =1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd m n = 1", "using prime_def"], ["proof (prove)\nusing this:\n  prime ?p = (prime_elem ?p \\<and> normalize ?p = ?p)\n\ngoal (1 subgoal):\n 1. gcd m n = 1", "by (simp add: assms primes_coprime)"], ["", "text\\<open>We refer to definitions from \\cite{aliquotwiki}:\\<close>"], ["", "definition aliquot_sum :: \"nat \\<Rightarrow> nat\"\n  where \"aliquot_sum n \\<equiv> \\<Sum>(properdiv_set n)\""], ["", "definition deficient_number :: \"nat \\<Rightarrow> bool\"\n  where \"deficient_number n \\<equiv> (n > aliquot_sum n)\""], ["", "definition abundant_number :: \"nat \\<Rightarrow> bool\"\n  where \"abundant_number n \\<equiv> (n < aliquot_sum n)\""], ["", "definition perfect_number :: \"nat \\<Rightarrow> bool\"\n  where \"perfect_number n \\<equiv> (n = aliquot_sum n)\""], ["", "lemma example_perfect_6: shows \"perfect_number 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perfect_number 6", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. perfect_number 6", "have a: \"set(divisors_nat 6) = {1, 2, 3, 6}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 6) = {1, 2, 3, 6}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 6) = {1, 2, 3, 6}\n\ngoal (1 subgoal):\n 1. perfect_number 6", "have b: \"divisor_set (6) = {1, 2, 3, 6}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 6 = {1, 2, 3, 6}", "using a  def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  set (divisors_nat 6) = {1, 2, 3, 6}\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. divisor_set 6 = {1, 2, 3, 6}", "by simp"], ["proof (state)\nthis:\n  divisor_set 6 = {1, 2, 3, 6}\n\ngoal (1 subgoal):\n 1. perfect_number 6", "have  c: \"properdiv_set (6) = {1, 2, 3}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properdiv_set 6 = {1, 2, 3}", "using b union_properdiv_set properdiv_set proper_divisor_def"], ["proof (prove)\nusing this:\n  divisor_set 6 = {1, 2, 3, 6}\n  1 \\<le> ?n \\<Longrightarrow>\n  divisor_set ?n = properdiv_set ?n \\<union> {?n}\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. properdiv_set 6 = {1, 2, 3}", "by auto"], ["proof (state)\nthis:\n  properdiv_set 6 = {1, 2, 3}\n\ngoal (1 subgoal):\n 1. perfect_number 6", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. perfect_number 6", "using aliquot_sum_def c"], ["proof (prove)\nusing this:\n  aliquot_sum ?n \\<equiv> \\<Sum> (properdiv_set ?n)\n  properdiv_set 6 = {1, 2, 3}\n\ngoal (1 subgoal):\n 1. perfect_number 6", "by (simp add: numeral_3_eq_3 perfect_number_def)"], ["proof (state)\nthis:\n  perfect_number 6\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Euler's sigma function and properties\\<close>"], ["", "text\\<open>The sources of the following useful material on Euler's sigma function are \\cite{garciaetal1},\n\\cite{garciaetal2}, \\cite{sandifer} and \\cite{escott}.\\<close>"], ["", "definition Esigma :: \"nat \\<Rightarrow> nat\"\n  where \"Esigma n \\<equiv> \\<Sum>(divisor_set n)\""], ["", "lemma Esigma_properdiv_set:\n  assumes \"m \\<ge> 1\"\n  shows \"Esigma m = (aliquot_sum m) + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = aliquot_sum m + m", "using assms divisor_set properdiv_set proper_divisor_def union_properdiv_set  Esigma_def\n        aliquot_sum_def"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  divisor_set ?m = {n. n divisor ?m}\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n  1 \\<le> ?n \\<Longrightarrow>\n  divisor_set ?n = properdiv_set ?n \\<union> {?n}\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  aliquot_sum ?n \\<equiv> \\<Sum> (properdiv_set ?n)\n\ngoal (1 subgoal):\n 1. Esigma m = aliquot_sum m + m", "by fastforce"], ["", "lemma Esigmanotzero:\n  assumes \"n \\<ge> 1\"\n  shows \"Esigma n \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> Esigma n", "using Esigma_def assms Esigma_properdiv_set"], ["proof (prove)\nusing this:\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  1 \\<le> n\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n\ngoal (1 subgoal):\n 1. 1 \\<le> Esigma n", "by auto"], ["", "lemma prime_sum_div:\n  assumes \"prime n\"\n  shows \" Esigma n = n +(1::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = n + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma n = n + 1", "have \"1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> n", "using assms prime_ge_1_nat"], ["proof (prove)\nusing this:\n  prime n\n  prime ?p \\<Longrightarrow> 1 \\<le> ?p\n\ngoal (1 subgoal):\n 1. 1 \\<le> n", "by blast"], ["proof (state)\nthis:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. Esigma n = n + 1", "then"], ["proof (chain)\npicking this:\n  1 \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. Esigma n = n + 1", "using Esigma_properdiv_set assms div_set_prime"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n  prime n\n  prime ?n \\<Longrightarrow> properdiv_set ?n = {1}\n\ngoal (1 subgoal):\n 1. Esigma n = n + 1", "by (simp add: Esigma_properdiv_set aliquot_sum_def assms div_set_prime)"], ["proof (state)\nthis:\n  Esigma n = n + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_div_is_prime:\n  assumes \"Esigma n = n +(1::nat)\" and \"n \\<ge>1\"\n  shows \"prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "assume F: \" \\<not> (prime n)\""], ["proof (state)\nthis:\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "have \" n divisor n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n divisor n", "using assms divisor_def"], ["proof (prove)\nusing this:\n  Esigma n = n + 1\n  1 \\<le> n\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. n divisor n", "by simp"], ["proof (state)\nthis:\n  n divisor n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "have \" (1::nat) divisor n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 divisor n", "using assms divisor_def"], ["proof (prove)\nusing this:\n  Esigma n = n + 1\n  1 \\<le> n\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. 1 divisor n", "by simp"], ["proof (state)\nthis:\n  1 divisor n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "have \"n \\<noteq> Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> Suc 0", "using Esigma_def assms(1)"], ["proof (prove)\nusing this:\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  Esigma n = n + 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> Suc 0", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> Suc 0", "have r: \" \\<exists>( m::nat). m \\<in> divisor_set n \\<and> m\\<noteq> (1::nat) \\<and> m \\<noteq> n\""], ["proof (prove)\nusing this:\n  n \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       m \\<in> divisor_set n \\<and> m \\<noteq> 1 \\<and> m \\<noteq> n", "using assms F"], ["proof (prove)\nusing this:\n  n \\<noteq> Suc 0\n  Esigma n = n + 1\n  1 \\<le> n\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       m \\<in> divisor_set n \\<and> m \\<noteq> 1 \\<and> m \\<noteq> n", "apply (clarsimp simp add: Esigma_def divisor_set divisor_def prime_nat_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>n \\<noteq> Suc 0;\n        \\<Sum> {na. Suc 0 \\<le> na \\<and> na \\<le> n \\<and> na dvd n} =\n        Suc n;\n        Suc 0 \\<le> n; m dvd n; m \\<noteq> Suc 0; m \\<noteq> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m\\<ge>Suc 0.\n                            m \\<le> n \\<and>\n                            m dvd n \\<and>\n                            m \\<noteq> Suc 0 \\<and> m \\<noteq> n", "by (meson Suc_le_eq dvd_imp_le dvd_pos_nat)"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> divisor_set n \\<and> m \\<noteq> 1 \\<and> m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "have \"Suc n = \\<Sum>{n,1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n = \\<Sum> {n, 1}", "by (simp add: \\<open>n \\<noteq> Suc 0\\<close>)"], ["proof (state)\nthis:\n  Suc n = \\<Sum> {n, 1}\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Suc n = \\<Sum> {n, 1}\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "have \"divisor_set n \\<supset> {n,1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n, 1} \\<subset> divisor_set n", "using assms divisor_set r \\<open>1 divisor n\\<close> divisor_set_not_empty"], ["proof (prove)\nusing this:\n  Esigma n = n + 1\n  1 \\<le> n\n  divisor_set ?m = {n. n divisor ?m}\n  \\<exists>m. m \\<in> divisor_set n \\<and> m \\<noteq> 1 \\<and> m \\<noteq> n\n  1 divisor n\n  1 \\<le> ?m \\<Longrightarrow> ?m \\<in> divisor_set ?m\n\ngoal (1 subgoal):\n 1. {n, 1} \\<subset> divisor_set n", "by auto"], ["proof (state)\nthis:\n  {n, 1} \\<subset> divisor_set n\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {n, 1} \\<subset> divisor_set n", "have \"\\<Sum>(divisor_set n) > \\<Sum>{n,1}\""], ["proof (prove)\nusing this:\n  {n, 1} \\<subset> divisor_set n\n\ngoal (1 subgoal):\n 1. \\<Sum> {n, 1} < \\<Sum> (divisor_set n)", "apply (rule sum_strict_mono [OF finite_divisor_set])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> divisor_set n", "by (simp add: divisor_def divisor_set)"], ["proof (state)\nthis:\n  \\<Sum> {n, 1} < \\<Sum> (divisor_set n)\n\ngoal (1 subgoal):\n 1. \\<not> prime n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  Suc n = \\<Sum> {n, 1}\n  \\<Sum> {n, 1} < \\<Sum> (divisor_set n)", "show False"], ["proof (prove)\nusing this:\n  Suc n = \\<Sum> {n, 1}\n  \\<Sum> {n, 1} < \\<Sum> (divisor_set n)\n\ngoal (1 subgoal):\n 1. False", "using Esigma_def assms(1)"], ["proof (prove)\nusing this:\n  Suc n = \\<Sum> {n, 1}\n  \\<Sum> {n, 1} < \\<Sum> (divisor_set n)\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  Esigma n = n + 1\n\ngoal (1 subgoal):\n 1. False", "by presburger"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Esigma_prime_sum:\n  fixes k:: nat assumes \"prime m\" \"k \\<ge>1\"\n  shows \"Esigma (m^k) =( m^(k+(1::nat)) -(1::nat)) /(m-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "have \"m > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < m", "using \\<open>prime m\\<close> prime_gt_1_nat"], ["proof (prove)\nusing this:\n  prime m\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. 1 < m", "by blast"], ["proof (state)\nthis:\n  1 < m\n\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "have A: \" Esigma (m^k) =( \\<Sum> j= 0..k.( m^j)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m ^ k) = sum ((^) m) {0..k}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (m ^ k) = sum ((^) m) {0..k}", "have AA: \"divisor_set (m^k) = (\\<lambda>j. m ^ j) ` {0..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set (m ^ k) = (^) m ` {0..k}", "using assms prime_ge_1_nat"], ["proof (prove)\nusing this:\n  prime m\n  1 \\<le> k\n  prime ?p \\<Longrightarrow> 1 \\<le> ?p\n\ngoal (1 subgoal):\n 1. divisor_set (m ^ k) = (^) m ` {0..k}", "by (auto simp add: power_increasing prime_ge_Suc_0_nat divisor_set divisor_def image_iff\n divides_primepow_nat)"], ["proof (state)\nthis:\n  divisor_set (m ^ k) = (^) m ` {0..k}\n\ngoal (1 subgoal):\n 1. Esigma (m ^ k) = sum ((^) m) {0..k}", "have \\<section>: \"\\<Sum> ((\\<lambda>j. m ^ j) ` {..k}) = sum (\\<lambda>j. m ^ j) {0..k}\"  for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k}", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Sum> ((^) m ` {..0}) = sum ((^) m) {0..0}\n 2. \\<And>k.\n       \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k} \\<Longrightarrow>\n       \\<Sum> ((^) m ` {..Suc k}) = sum ((^) m) {0..Suc k}", "case (Suc k)"], ["proof (state)\nthis:\n  \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k}\n\ngoal (2 subgoals):\n 1. \\<Sum> ((^) m ` {..0}) = sum ((^) m) {0..0}\n 2. \\<And>k.\n       \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k} \\<Longrightarrow>\n       \\<Sum> ((^) m ` {..Suc k}) = sum ((^) m) {0..Suc k}", "then"], ["proof (chain)\npicking this:\n  \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k}", "show ?case"], ["proof (prove)\nusing this:\n  \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k}\n\ngoal (1 subgoal):\n 1. \\<Sum> ((^) m ` {..Suc k}) = sum ((^) m) {0..Suc k}", "apply (clarsimp simp: atMost_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> ((^) m ` {..k}) = sum ((^) m) {0..k} \\<Longrightarrow>\n    \\<Sum> (insert (m * m ^ k) ((^) m ` {..k})) =\n    sum ((^) m) {0..k} + m * m ^ k", "by (smt add.commute add_le_same_cancel1 assms(1) atMost_iff finite_atMost finite_imageI\nimage_iff le_zero_eq power_add power_one_right prime_power_inj sum.insert zero_neq_one)"], ["proof (state)\nthis:\n  \\<Sum> ((^) m ` {..Suc k}) = sum ((^) m) {0..Suc k}\n\ngoal (1 subgoal):\n 1. \\<Sum> ((^) m ` {..0}) = sum ((^) m) {0..0}", "qed auto"], ["proof (state)\nthis:\n  \\<Sum> ((^) m ` {..?k}) = sum ((^) m) {0..?k}\n\ngoal (1 subgoal):\n 1. Esigma (m ^ k) = sum ((^) m) {0..k}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m ^ k) = sum ((^) m) {0..k}", "by (metis \"\\<section>\" AA Esigma_def atMost_atLeast0)"], ["proof (state)\nthis:\n  Esigma (m ^ k) = sum ((^) m) {0..k}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (m ^ k) = sum ((^) m) {0..k}\n\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "have B: \"(\\<Sum> i\\<le>k.( m^i)) = ( m^Suc k -(1::nat)) /(m-(1::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (sum ((^) m) {..k}) = real (m ^ Suc k - 1) / real (m - 1)", "using assms \\<open>m > 1\\<close> Set_Interval.geometric_sum  [of m \"Suc k\"]"], ["proof (prove)\nusing this:\n  prime m\n  1 \\<le> k\n  1 < m\n  real m \\<noteq> 1 \\<Longrightarrow>\n  sum ((^) (real m)) {..<Suc k} = (real m ^ Suc k - 1) / (real m - 1)\n\ngoal (1 subgoal):\n 1. real (sum ((^) m) {..k}) = real (m ^ Suc k - 1) / real (m - 1)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime m; Suc 0 \\<le> k; Suc 0 < m;\n     sum ((^) (real m)) {..<k} + real m ^ k =\n     (real m * real m ^ k - 1) / (real m - 1)\\<rbrakk>\n    \\<Longrightarrow> sum ((^) (real m)) {..k} =\n                      real (m * m ^ k - Suc 0) / real (m - Suc 0)", "by (metis One_nat_def lessThan_Suc_atMost nat_one_le_power of_nat_1 of_nat_diff of_nat_mult\nof_nat_power one_le_mult_iff prime_ge_Suc_0_nat sum.lessThan_Suc)"], ["proof (state)\nthis:\n  real (sum ((^) m) {..k}) = real (m ^ Suc k - 1) / real (m - 1)\n\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "using A B assms"], ["proof (prove)\nusing this:\n  Esigma (m ^ k) = sum ((^) m) {0..k}\n  real (sum ((^) m) {..k}) = real (m ^ Suc k - 1) / real (m - 1)\n  prime m\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)", "by (metis Suc_eq_plus1 atMost_atLeast0 of_nat_1 of_nat_diff prime_ge_1_nat)"], ["proof (state)\nthis:\n  real (Esigma (m ^ k)) = real (m ^ (k + 1) - 1) / (real m - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_Esigma_mult: assumes \"prime m\" and \"prime n\" and \"m \\<noteq> n\"\n  shows \"Esigma (m*n) = (Esigma n)*(Esigma m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "have \"m divisor (m*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m divisor (m * n)", "using divisor_def assms"], ["proof (prove)\nusing this:\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n  prime m\n  prime n\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. m divisor (m * n)", "by (simp add: dvd_imp_le prime_gt_0_nat)"], ["proof (state)\nthis:\n  m divisor (m * n)\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "moreover"], ["proof (state)\nthis:\n  m divisor (m * n)\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "have \"\\<not>(\\<exists> k::nat. k divisor (m*n) \\<and> k\\<noteq>(1::nat)\\<and> k \\<noteq> m \\<and> k \\<noteq> n \\<and> k\\<noteq> m*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>k.\n       k divisor (m * n) \\<and>\n       k \\<noteq> 1 \\<and>\n       k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n", "using assms"], ["proof (prove)\nusing this:\n  prime m\n  prime n\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<nexists>k.\n       k divisor (m * n) \\<and>\n       k \\<noteq> 1 \\<and>\n       k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n", "unfolding divisor_def"], ["proof (prove)\nusing this:\n  prime m\n  prime n\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<nexists>k.\n       (1 \\<le> k \\<and> k \\<le> m * n \\<and> k dvd m * n) \\<and>\n       k \\<noteq> 1 \\<and>\n       k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n", "by (metis One_nat_def division_decomp nat_mult_1 nat_mult_1_right prime_nat_iff)"], ["proof (state)\nthis:\n  \\<nexists>k.\n     k divisor (m * n) \\<and>\n     k \\<noteq> 1 \\<and>\n     k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "ultimately"], ["proof (chain)\npicking this:\n  m divisor (m * n)\n  \\<nexists>k.\n     k divisor (m * n) \\<and>\n     k \\<noteq> 1 \\<and>\n     k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n", "have c: \"divisor_set (m*n) = {m, n, m*n, 1}\""], ["proof (prove)\nusing this:\n  m divisor (m * n)\n  \\<nexists>k.\n     k divisor (m * n) \\<and>\n     k \\<noteq> 1 \\<and>\n     k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n\n\ngoal (1 subgoal):\n 1. divisor_set (m * n) = {m, n, m * n, 1}", "using divisor_set assms  divisor_def"], ["proof (prove)\nusing this:\n  m divisor (m * n)\n  \\<nexists>k.\n     k divisor (m * n) \\<and>\n     k \\<noteq> 1 \\<and>\n     k \\<noteq> m \\<and> k \\<noteq> n \\<and> k \\<noteq> m * n\n  divisor_set ?m = {n. n divisor ?m}\n  prime m\n  prime n\n  m \\<noteq> n\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. divisor_set (m * n) = {m, n, m * n, 1}", "by auto"], ["proof (state)\nthis:\n  divisor_set (m * n) = {m, n, m * n, 1}\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "obtain \"m\\<noteq>1\" \"n\\<noteq>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>m \\<noteq> 1; n \\<noteq> 1\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms not_prime_1"], ["proof (prove)\nusing this:\n  prime m\n  prime n\n  m \\<noteq> n\n  \\<not> prime (1::?'a)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>m \\<noteq> 1; n \\<noteq> 1\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m \\<noteq> 1\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 1\n  n \\<noteq> 1", "have dd: \"Esigma (m*n) = m + n +m *n +1\""], ["proof (prove)\nusing this:\n  m \\<noteq> 1\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = m + n + m * n + 1", "using assms"], ["proof (prove)\nusing this:\n  m \\<noteq> 1\n  n \\<noteq> 1\n  prime m\n  prime n\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = m + n + m * n + 1", "by (simp add: Esigma_def c)"], ["proof (state)\nthis:\n  Esigma (m * n) = m + n + m * n + 1\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "then"], ["proof (chain)\npicking this:\n  Esigma (m * n) = m + n + m * n + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  Esigma (m * n) = m + n + m * n + 1\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "using prime_sum_div assms"], ["proof (prove)\nusing this:\n  Esigma (m * n) = m + n + m * n + 1\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime m\n  prime n\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma n * Esigma m", "by simp"], ["proof (state)\nthis:\n  Esigma (m * n) = Esigma n * Esigma m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gcd_Esigma_mult:\n  assumes \"gcd m n = 1\"\n  shows \"Esigma (m*n) = (Esigma m)*(Esigma n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "have \"Esigma (m*n) = \\<Sum> {i*j| i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m * n) =\n    \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}", "by (simp add: divisor_set_mult Esigma_def)"], ["proof (state)\nthis:\n  Esigma (m * n) =\n  \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "also"], ["proof (state)\nthis:\n  Esigma (m * n) =\n  \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "have \"... = (\\<Sum>i \\<in> divisor_set m. \\<Sum>j \\<in> divisor_set n. i*j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "have \"inj_on (\\<lambda>(i,j). i*j) (divisor_set m \\<times> divisor_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)", "using assms"], ["proof (prove)\nusing this:\n  gcd m n = 1\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)", "apply (simp add: inj_on_def divisor_set divisor_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd m n = Suc 0 \\<Longrightarrow>\n    \\<forall>x.\n       Suc 0 \\<le> x \\<and> x \\<le> m \\<and> x dvd m \\<longrightarrow>\n       (\\<forall>y.\n           Suc 0 \\<le> y \\<and> y \\<le> n \\<and> y dvd n \\<longrightarrow>\n           (\\<forall>xa.\n               Suc 0 \\<le> xa \\<and>\n               xa \\<le> m \\<and> xa dvd m \\<longrightarrow>\n               (\\<forall>ya.\n                   Suc 0 \\<le> ya \\<and>\n                   ya \\<le> n \\<and> ya dvd n \\<longrightarrow>\n                   x * y = xa * ya \\<longrightarrow> x = xa \\<and> y = ya)))", "by (metis assms coprime_dvd_aux mult_left_cancel not_one_le_zero)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)\n\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)\n\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "have\n\"{i*j| i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n}= (\\<lambda>(i,j). i*j)`(divisor_set m \\<times> divisor_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<lambda>(i, j). i * j) ` (divisor_set m \\<times> divisor_set n)", "by auto"], ["proof (state)\nthis:\n  {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<lambda>(i, j). i * j) ` (divisor_set m \\<times> divisor_set n)\n\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)\n  {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<lambda>(i, j). i * j) ` (divisor_set m \\<times> divisor_set n)", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>(i, j). i * j) (divisor_set m \\<times> divisor_set n)\n  {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<lambda>(i, j). i * j) ` (divisor_set m \\<times> divisor_set n)\n\ngoal (1 subgoal):\n 1. \\<Sum>\n     {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n    (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))", "by (simp add: sum.cartesian_product sum_image_eq)"], ["proof (state)\nthis:\n  \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "also"], ["proof (state)\nthis:\n  \\<Sum> {i * j |i j. i \\<in> divisor_set m \\<and> j \\<in> divisor_set n} =\n  (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n))\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "have \"... = \\<Sum>( divisor_set m)* \\<Sum>( divisor_set n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n)) =\n    \\<Sum> (divisor_set m) * \\<Sum> (divisor_set n)", "by (simp add: sum_product)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n)) =\n  \\<Sum> (divisor_set m) * \\<Sum> (divisor_set n)\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>divisor_set m. sum ((*) i) (divisor_set n)) =\n  \\<Sum> (divisor_set m) * \\<Sum> (divisor_set n)\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "have \"... = Esigma m * Esigma n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> (divisor_set m) * \\<Sum> (divisor_set n) = Esigma m * Esigma n", "by (simp add: Esigma_def)"], ["proof (state)\nthis:\n  \\<Sum> (divisor_set m) * \\<Sum> (divisor_set n) = Esigma m * Esigma n\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "finally"], ["proof (chain)\npicking this:\n  Esigma (m * n) = Esigma m * Esigma n", "show ?thesis"], ["proof (prove)\nusing this:\n  Esigma (m * n) = Esigma m * Esigma n\n\ngoal (1 subgoal):\n 1. Esigma (m * n) = Esigma m * Esigma n", "."], ["proof (state)\nthis:\n  Esigma (m * n) = Esigma m * Esigma n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deficient_Esigma:\n  assumes \"Esigma m < 2*m\" and \"m \\<ge>1\"\n  shows \"deficient_number m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deficient_number m", "using Esigma_properdiv_set assms deficient_number_def"], ["proof (prove)\nusing this:\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n  Esigma m < 2 * m\n  1 \\<le> m\n  deficient_number ?n \\<equiv> aliquot_sum ?n < ?n\n\ngoal (1 subgoal):\n 1. deficient_number m", "by auto"], ["", "lemma abundant_Esigma:\n  assumes \"Esigma m > 2*m\" and \"m \\<ge>1\" \n  shows \"abundant_number m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abundant_number m", "using Esigma_properdiv_set assms abundant_number_def"], ["proof (prove)\nusing this:\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n  2 * m < Esigma m\n  1 \\<le> m\n  abundant_number ?n \\<equiv> ?n < aliquot_sum ?n\n\ngoal (1 subgoal):\n 1. abundant_number m", "by auto"], ["", "lemma perfect_Esigma:\n  assumes \"Esigma m = 2*m\" and \"m \\<ge>1\" \n  shows \"perfect_number m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perfect_number m", "using Esigma_properdiv_set assms perfect_number_def"], ["proof (prove)\nusing this:\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n  Esigma m = 2 * m\n  1 \\<le> m\n  perfect_number ?n \\<equiv> ?n = aliquot_sum ?n\n\ngoal (1 subgoal):\n 1. perfect_number m", "by auto"], ["", "subsection\\<open>Amicable Numbers; definitions, some lemmas and examples\\<close>"], ["", "definition Amicable_pair :: \"nat \\<Rightarrow>nat \\<Rightarrow> bool\"  (infixr \"Amic\" 80)\n  where \"m Amic n \\<equiv> ((m = aliquot_sum n) \\<and> (n = aliquot_sum m)) \""], ["", "lemma Amicable_pair_sym: fixes m::nat and n ::nat\n  assumes \"m Amic n \" shows \"n Amic m \""], ["proof (prove)\ngoal (1 subgoal):\n 1. n Amic m", "using  Amicable_pair_def assms"], ["proof (prove)\nusing this:\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  m Amic n\n\ngoal (1 subgoal):\n 1. n Amic m", "by blast"], ["", "lemma Amicable_pair_equiv_def:\n  assumes \"(m Amic n)\" and \"m \\<ge>1\" and \"n \\<ge>1\"\n  shows   \"(Esigma m = Esigma n)\\<and>(Esigma m = m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = Esigma n \\<and> Esigma m = m + n", "using assms Amicable_pair_def"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n\ngoal (1 subgoal):\n 1. Esigma m = Esigma n \\<and> Esigma m = m + n", "by (metis Esigma_properdiv_set add.commute)"], ["", "lemma Amicable_pair_equiv_def_conv:\n  assumes \"m\\<ge>1\" and \"n\\<ge>1\" and \"(Esigma m = Esigma n)\\<and>(Esigma m = m+n)\"\n  shows  \"(m Amic n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m Amic n", "using assms Amicable_pair_def Esigma_properdiv_set"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  1 \\<le> n\n  Esigma m = Esigma n \\<and> Esigma m = m + n\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  1 \\<le> ?m \\<Longrightarrow> Esigma ?m = aliquot_sum ?m + ?m\n\ngoal (1 subgoal):\n 1. m Amic n", "by (metis add_right_imp_eq add.commute )"], ["", "definition typeAmic :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat list\"\n  where \"typeAmic n m =\n    [(card {i. \\<exists> N. n = N*(gcd n m) \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd (gcd n m)}),\n     (card {j. \\<exists> M. m = M*(gcd n m) \\<and> prime j \\<and> j dvd M \\<and> \\<not> j dvd (gcd n m)})]\""], ["", "lemma Amicable_pair_deficient: assumes \"m > n\" and  \"m Amic n\"\n  shows \"deficient_number m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deficient_number m", "using assms deficient_number_def Amicable_pair_def"], ["proof (prove)\nusing this:\n  n < m\n  m Amic n\n  deficient_number ?n \\<equiv> aliquot_sum ?n < ?n\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n\ngoal (1 subgoal):\n 1. deficient_number m", "by metis"], ["", "lemma Amicable_pair_abundant: assumes \"m > n\" and  \"m Amic n\"\n  shows \"abundant_number n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abundant_number n", "using assms abundant_number_def Amicable_pair_def"], ["proof (prove)\nusing this:\n  n < m\n  m Amic n\n  abundant_number ?n \\<equiv> ?n < aliquot_sum ?n\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n\ngoal (1 subgoal):\n 1. abundant_number n", "by metis"], ["", "lemma even_even_amicable: assumes  \"m Amic n\" and \"m \\<ge>1\" and \"n \\<ge>1\" and \"even m\" and \"even n\"\n  shows \"(2*m \\<noteq> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * m \\<noteq> n", "proof( rule ccontr )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 * m \\<noteq> n \\<Longrightarrow> False", "have a: \"Esigma m  = Esigma n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = Esigma n", "using \\<open>m Amic n\\<close> Amicable_pair_equiv_def Amicable_pair_def\n     assms"], ["proof (prove)\nusing this:\n  m Amic n\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  even m\n  even n\n\ngoal (1 subgoal):\n 1. Esigma m = Esigma n", "by blast"], ["proof (state)\nthis:\n  Esigma m = Esigma n\n\ngoal (1 subgoal):\n 1. \\<not> 2 * m \\<noteq> n \\<Longrightarrow> False", "assume \"\\<not> (2*m \\<noteq> n)\""], ["proof (state)\nthis:\n  \\<not> 2 * m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<not> 2 * m \\<noteq> n \\<Longrightarrow> False", "have \"(2*m = n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * m = n", "using \\<open>\\<not> (2*m \\<noteq> n)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 2 * m \\<noteq> n\n\ngoal (1 subgoal):\n 1. 2 * m = n", "by simp"], ["proof (state)\nthis:\n  2 * m = n\n\ngoal (1 subgoal):\n 1. \\<not> 2 * m \\<noteq> n \\<Longrightarrow> False", "have d:\"Esigma n = Esigma (2*m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m)", "using  \\<open>\\<not> (2*m \\<noteq> n)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 2 * m \\<noteq> n\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m)", "by simp"], ["proof (state)\nthis:\n  Esigma n = Esigma (2 * m)\n\ngoal (1 subgoal):\n 1. \\<not> 2 * m \\<noteq> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Esigma n = Esigma (2 * m)", "show False"], ["proof (prove)\nusing this:\n  Esigma n = Esigma (2 * m)\n\ngoal (1 subgoal):\n 1. False", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "have w: \"2*m \\<in> divisor_set (2*m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * m \\<in> divisor_set (2 * m)", "using divisor_set assms divisor_set_not_empty"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  even m\n  even n\n  1 \\<le> ?m \\<Longrightarrow> ?m \\<in> divisor_set ?m\n\ngoal (1 subgoal):\n 1. 2 * m \\<in> divisor_set (2 * m)", "by auto"], ["proof (state)\nthis:\n  2 * m \\<in> divisor_set (2 * m)\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "have w1: \"2*m \\<notin> divisor_set (m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * m \\<notin> divisor_set m", "using divisor_set assms"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  even m\n  even n\n\ngoal (1 subgoal):\n 1. 2 * m \\<notin> divisor_set m", "by (simp add: divisor_def)"], ["proof (state)\nthis:\n  2 * m \\<notin> divisor_set m\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "have w2: \"\\<forall> n::nat. n divisor m \\<longrightarrow> n divisor (2*m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. n divisor m \\<longrightarrow> n divisor (2 * m)", "using assms divisor_def"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  even m\n  even n\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. \\<forall>n. n divisor m \\<longrightarrow> n divisor (2 * m)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. n divisor m \\<longrightarrow> n divisor (2 * m)\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "have w3: \"divisor_set (2*m) \\<supset> divisor_set m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set m \\<subset> divisor_set (2 * m)", "using divisor_set divisor_def assms w w1 w2"], ["proof (prove)\nusing this:\n  divisor_set ?m = {n. n divisor ?m}\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  even m\n  even n\n  2 * m \\<in> divisor_set (2 * m)\n  2 * m \\<notin> divisor_set m\n  \\<forall>n. n divisor m \\<longrightarrow> n divisor (2 * m)\n\ngoal (1 subgoal):\n 1. divisor_set m \\<subset> divisor_set (2 * m)", "by blast"], ["proof (state)\nthis:\n  divisor_set m \\<subset> divisor_set (2 * m)\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "have v: \"( \\<Sum> i \\<in> ( divisor_set (2*m)).i)> ( \\<Sum> i \\<in> ( divisor_set m).i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum> (divisor_set m) < \\<Sum> (divisor_set (2 * m))", "using w3  sum_strict_mono"], ["proof (prove)\nusing this:\n  divisor_set m \\<subset> divisor_set (2 * m)\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B; 0 \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> \\<Sum> ?A < \\<Sum> ?B\n\ngoal (1 subgoal):\n 1. \\<Sum> (divisor_set m) < \\<Sum> (divisor_set (2 * m))", "by (simp add: divisor_def divisor_set)"], ["proof (state)\nthis:\n  \\<Sum> (divisor_set m) < \\<Sum> (divisor_set (2 * m))\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (2 * m) \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using v d Esigma_def a"], ["proof (prove)\nusing this:\n  \\<Sum> (divisor_set m) < \\<Sum> (divisor_set (2 * m))\n  Esigma n = Esigma (2 * m)\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  Esigma m = Esigma n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Regular Amicable Pairs\\<close>"], ["", "definition regularAmicPair :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"regularAmicPair n m \\<longleftrightarrow> (n Amic m \\<and>\n     (\\<exists>M N g. g = gcd m n \\<and> m = M*g \\<and> n = N*g \\<and> squarefree M \\<and>\n              squarefree N \\<and> gcd g M = 1 \\<and> gcd g N = 1))\""], ["", "lemma regularAmicPair_sym:\n  assumes \"regularAmicPair n m\" shows \"regularAmicPair m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regularAmicPair m n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. regularAmicPair m n", "have \"gcd m n = gcd n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd m n = gcd n m", "by (metis (no_types) gcd.commute)"], ["proof (state)\nthis:\n  gcd m n = gcd n m\n\ngoal (1 subgoal):\n 1. regularAmicPair m n", "then"], ["proof (chain)\npicking this:\n  gcd m n = gcd n m", "show ?thesis"], ["proof (prove)\nusing this:\n  gcd m n = gcd n m\n\ngoal (1 subgoal):\n 1. regularAmicPair m n", "using Amicable_pair_sym assms regularAmicPair_def"], ["proof (prove)\nusing this:\n  gcd m n = gcd n m\n  ?m Amic ?n \\<Longrightarrow> ?n Amic ?m\n  regularAmicPair n m\n  regularAmicPair ?n ?m =\n  (?n Amic ?m \\<and>\n   (\\<exists>M N g.\n       g = gcd ?m ?n \\<and>\n       ?m = M * g \\<and>\n       ?n = N * g \\<and>\n       squarefree M \\<and>\n       squarefree N \\<and> gcd g M = 1 \\<and> gcd g N = 1))\n\ngoal (1 subgoal):\n 1. regularAmicPair m n", "by auto"], ["proof (state)\nthis:\n  regularAmicPair m n\n\ngoal:\nNo subgoals!", "qed"], ["", "definition irregularAmicPair :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"irregularAmicPair n m \\<longleftrightarrow> (( n Amic m) \\<and> \\<not> regularAmicPair n m)\""], ["", "lemma irregularAmicPair_sym:\n  assumes \"irregularAmicPair n m\"\n  shows \"irregularAmicPair m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irregularAmicPair m n", "using  irregularAmicPair_def regularAmicPair_sym Amicable_pair_sym assms"], ["proof (prove)\nusing this:\n  irregularAmicPair ?n ?m = (?n Amic ?m \\<and> \\<not> regularAmicPair ?n ?m)\n  regularAmicPair ?n ?m \\<Longrightarrow> regularAmicPair ?m ?n\n  ?m Amic ?n \\<Longrightarrow> ?n Amic ?m\n  irregularAmicPair n m\n\ngoal (1 subgoal):\n 1. irregularAmicPair m n", "by blast"], ["", "subsubsection\\<open>Twin Amicable Pairs\\<close>"], ["", "text \\<open>We refer to the definition in \\cite{amicwiki}:\\<close>"], ["", "definition twinAmicPair :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"twinAmicPair n m \\<longleftrightarrow>\n     (n Amic m) \\<and> (\\<not>(\\<exists>k l. k > Min {n, m} \\<and> k < Max {n, m}\\<and> k Amic l))\""], ["", "lemma twinAmicPair_sym:\n  assumes \"twinAmicPair n m\"\n  shows \"twinAmicPair m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. twinAmicPair m n", "using assms twinAmicPair_def Amicable_pair_sym assms"], ["proof (prove)\nusing this:\n  twinAmicPair n m\n  twinAmicPair ?n ?m =\n  (?n Amic ?m \\<and>\n   (\\<nexists>k l.\n       Min {?n, ?m} < k \\<and> k < Max {?n, ?m} \\<and> k Amic l))\n  ?m Amic ?n \\<Longrightarrow> ?n Amic ?m\n  twinAmicPair n m\n\ngoal (1 subgoal):\n 1. twinAmicPair m n", "by auto"], ["", "subsubsection\\<open>Isotopic Amicable Pairs\\<close>"], ["", "text\\<open>A way of generating an amicable pair from a given amicable pair under certain conditions is \ngiven below. Such amicable pairs are called Isotopic \\cite{garciaetal1}.\\<close>"], ["", "lemma isotopic_amicable_pair:\n  fixes m n g h M N :: nat\n  assumes \"m Amic n\" and \"m \\<ge> 1\" and \"n \\<ge> 1\"and \"m= g*M\" and \"n = g*N\"\n      and \"Esigma h = (h/g) * Esigma g\" and \"h \\<noteq> g\" and \"h > 1\" and \"g > 1\"\n      and \"gcd g M = 1\" and \"gcd g N = 1\" and \"gcd h M = 1\" and \"gcd h N = 1\"\n    shows \"(h*M) Amic (h*N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have a: \"Esigma m = Esigma n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = Esigma n", "using \\<open> m Amic n\\<close>  Amicable_pair_equiv_def assms"], ["proof (prove)\nusing this:\n  m Amic n\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma m = Esigma n", "by blast"], ["proof (state)\nthis:\n  Esigma m = Esigma n\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have b: \"Esigma m = m + n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = m + n", "using \\<open> m Amic n\\<close> Amicable_pair_equiv_def assms"], ["proof (prove)\nusing this:\n  m Amic n\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma m = m + n", "by blast"], ["proof (state)\nthis:\n  Esigma m = m + n\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have c: \"Esigma (h*M) = (Esigma h)*(Esigma M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma h * Esigma M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma h * Esigma M", "have  \"h \\<noteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<noteq> M", "using assms Esigmanotzero gcd_Esigma_mult gcd_nat.idem b mult_eq_self_implies_10"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  1 \\<le> ?n \\<Longrightarrow> 1 \\<le> Esigma ?n\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  gcd ?a ?a = ?a\n  Esigma m = m + n\n  ?m = ?m * ?n \\<Longrightarrow> ?n = 1 \\<or> ?m = 0\n\ngoal (1 subgoal):\n 1. h \\<noteq> M", "by (metis less_irrefl)"], ["proof (state)\nthis:\n  h \\<noteq> M\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma h * Esigma M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma h * Esigma M", "using  \\<open>h \\<noteq> M\\<close>  gcd_Esigma_mult assms"], ["proof (prove)\nusing this:\n  h \\<noteq> M\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma h * Esigma M", "by auto"], ["proof (state)\nthis:\n  Esigma (h * M) = Esigma h * Esigma M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (h * M) = Esigma h * Esigma M\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have d: \"Esigma (g*M) = (Esigma g)*(Esigma M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (g * M) = Esigma g * Esigma M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (g * M) = Esigma g * Esigma M", "have  \"g\\<noteq>M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<noteq> M", "using assms gcd_nat.idem"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  gcd ?a ?a = ?a\n\ngoal (1 subgoal):\n 1. g \\<noteq> M", "by (metis less_irrefl)"], ["proof (state)\nthis:\n  g \\<noteq> M\n\ngoal (1 subgoal):\n 1. Esigma (g * M) = Esigma g * Esigma M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (g * M) = Esigma g * Esigma M", "using  \\<open>g\\<noteq>M\\<close>  gcd_Esigma_mult assms"], ["proof (prove)\nusing this:\n  g \\<noteq> M\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (g * M) = Esigma g * Esigma M", "by auto"], ["proof (state)\nthis:\n  Esigma (g * M) = Esigma g * Esigma M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (g * M) = Esigma g * Esigma M\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have e: \"Esigma (g*N) = (Esigma g)*(Esigma N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (g * N) = Esigma g * Esigma N", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (g * N) = Esigma g * Esigma N", "have  \"g\\<noteq>N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<noteq> N", "using assms"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. g \\<noteq> N", "by auto"], ["proof (state)\nthis:\n  g \\<noteq> N\n\ngoal (1 subgoal):\n 1. Esigma (g * N) = Esigma g * Esigma N", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (g * N) = Esigma g * Esigma N", "using  \\<open>g\\<noteq>N\\<close>  gcd_Esigma_mult assms"], ["proof (prove)\nusing this:\n  g \\<noteq> N\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (g * N) = Esigma g * Esigma N", "by auto"], ["proof (state)\nthis:\n  Esigma (g * N) = Esigma g * Esigma N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (g * N) = Esigma g * Esigma N\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have p1: \"Esigma m = (Esigma g)*(Esigma M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma m = Esigma g * Esigma M", "using assms d"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  Esigma (g * M) = Esigma g * Esigma M\n\ngoal (1 subgoal):\n 1. Esigma m = Esigma g * Esigma M", "by simp"], ["proof (state)\nthis:\n  Esigma m = Esigma g * Esigma M\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have p2: \"Esigma n = (Esigma g)*(Esigma N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = Esigma g * Esigma N", "using assms e"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  Esigma (g * N) = Esigma g * Esigma N\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma g * Esigma N", "by simp"], ["proof (state)\nthis:\n  Esigma n = Esigma g * Esigma N\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have p3: \"Esigma (h*N) = (Esigma h)*(Esigma N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * N) = Esigma h * Esigma N", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (h * N) = Esigma h * Esigma N", "have  \"h\\<noteq>N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<noteq> N", "using assms \\<open> gcd h N =1\\<close>  a b p2"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  gcd h N = 1\n  Esigma m = Esigma n\n  Esigma m = m + n\n  Esigma n = Esigma g * Esigma N\n\ngoal (1 subgoal):\n 1. h \\<noteq> N", "by fastforce"], ["proof (state)\nthis:\n  h \\<noteq> N\n\ngoal (1 subgoal):\n 1. Esigma (h * N) = Esigma h * Esigma N", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * N) = Esigma h * Esigma N", "using  \\<open>h \\<noteq> N\\<close>  gcd_Esigma_mult  assms"], ["proof (prove)\nusing this:\n  h \\<noteq> N\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (h * N) = Esigma h * Esigma N", "by auto"], ["proof (state)\nthis:\n  Esigma (h * N) = Esigma h * Esigma N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (h * N) = Esigma h * Esigma N\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have A: \"Esigma (h*M) = Esigma (h*N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma (h * N)", "using c p3 d e p1 p2 a assms Esigmanotzero"], ["proof (prove)\nusing this:\n  Esigma (h * M) = Esigma h * Esigma M\n  Esigma (h * N) = Esigma h * Esigma N\n  Esigma (g * M) = Esigma g * Esigma M\n  Esigma (g * N) = Esigma g * Esigma N\n  Esigma m = Esigma g * Esigma M\n  Esigma n = Esigma g * Esigma N\n  Esigma m = Esigma n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  1 \\<le> ?n \\<Longrightarrow> 1 \\<le> Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = Esigma (h * N)", "by fastforce"], ["proof (state)\nthis:\n  Esigma (h * M) = Esigma (h * N)\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "have B:  \"Esigma (h*M)=(h*M)+(h*N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "have s: \"Esigma (h*M) = (h/g)*(m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma (h * M)) = real h / real g * real (m + n)", "using b c p1 Esigmanotzero assms"], ["proof (prove)\nusing this:\n  Esigma m = m + n\n  Esigma (h * M) = Esigma h * Esigma M\n  Esigma m = Esigma g * Esigma M\n  1 \\<le> ?n \\<Longrightarrow> 1 \\<le> Esigma ?n\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. real (Esigma (h * M)) = real h / real g * real (m + n)", "by simp"], ["proof (state)\nthis:\n  real (Esigma (h * M)) = real h / real g * real (m + n)\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "have s1: \"Esigma (h*M) = h*(m/g+n/g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma (h * M)) = real h * (real m / real g + real n / real g)", "using  s assms"], ["proof (prove)\nusing this:\n  real (Esigma (h * M)) = real h / real g * real (m + n)\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. real (Esigma (h * M)) = real h * (real m / real g + real n / real g)", "by (metis add_divide_distrib b of_nat_add semiring_normalization_rules(7)\n times_divide_eq_left times_divide_eq_right)"], ["proof (state)\nthis:\n  real (Esigma (h * M)) = real h * (real m / real g + real n / real g)\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "have s2: \" Esigma (h*M) = h*(M+N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "have v: \"m/g = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real m / real g = real M", "using assms"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. real m / real g = real M", "by simp"], ["proof (state)\nthis:\n  real m / real g = real M\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "have v1:\"n/g = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n / real g = real N", "using assms"], ["proof (prove)\nusing this:\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. real n / real g = real N", "by simp"], ["proof (state)\nthis:\n  real n / real g = real N\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "using s1 v v1 assms"], ["proof (prove)\nusing this:\n  real (Esigma (h * M)) = real h * (real m / real g + real n / real g)\n  real m / real g = real M\n  real n / real g = real N\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "using of_nat_eq_iff"], ["proof (prove)\nusing this:\n  real (Esigma (h * M)) = real h * (real m / real g + real n / real g)\n  real m / real g = real M\n  real n / real g = real N\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  (of_nat ?m = of_nat ?n) = (?m = ?n)\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * (M + N)", "by fastforce"], ["proof (state)\nthis:\n  Esigma (h * M) = h * (M + N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (h * M) = h * (M + N)\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "using s2 assms"], ["proof (prove)\nusing this:\n  Esigma (h * M) = h * (M + N)\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. Esigma (h * M) = h * M + h * N", "by (simp add: add_mult_distrib2)"], ["proof (state)\nthis:\n  Esigma (h * M) = h * M + h * N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (h * M) = h * M + h * N\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "using Amicable_pair_equiv_def_conv A B assms one_le_mult_iff  One_nat_def Suc_leI"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  Esigma (h * M) = Esigma (h * N)\n  Esigma (h * M) = h * M + h * N\n  m Amic n\n  1 \\<le> m\n  1 \\<le> n\n  m = g * M\n  n = g * N\n  real (Esigma h) = real h / real g * real (Esigma g)\n  h \\<noteq> g\n  1 < h\n  1 < g\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n  1 = Suc 0\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "by (metis (no_types, hide_lams)  nat_less_le)"], ["proof (state)\nthis:\n  (h * M) Amic (h * N)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isotopic_pair_example1:\n  assumes \"(3^3*5*11*17*227) Amic (3^3*5*23*37*53)\"\n  shows  \"(3^2*7*13*11*17*227) Amic (3^2*7*13*23*37*53)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain m where o1: \"m = (3::nat)^3*5*11*17*227\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m = 3 ^ 3 * 5 * 11 * 17 * 227 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  m = 3 ^ 3 * 5 * 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain n where o2: \"n = (3::nat)^3*5*23*37*53\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        n = 3 ^ 3 * 5 * 23 * 37 * 53 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  n = 3 ^ 3 * 5 * 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain g where o3: \"g = (3::nat)^3*5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g. g = 3 ^ 3 * 5 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  g = 3 ^ 3 * 5\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain h where o4: \"h = (3::nat)^2*7*13\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h = 3\\<^sup>2 * 7 * 13 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  h = 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain M where o5: \"M = (11::nat)*17*227\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M. M = 11 * 17 * 227 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "obtain N where o6: \"N = (23::nat)*37*53\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N. N = 23 * 37 * 53 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"prime(3::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 3", "by simp"], ["proof (state)\nthis:\n  prime 3\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"prime(5::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 5", "by simp"], ["proof (state)\nthis:\n  prime 5\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"prime(7::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 7", "by simp"], ["proof (state)\nthis:\n  prime 7\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"prime(13::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 13", "by simp"], ["proof (state)\nthis:\n  prime 13\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have v: \"m Amic n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m Amic n", "using o1 o2 assms"], ["proof (prove)\nusing this:\n  m = 3 ^ 3 * 5 * 11 * 17 * 227\n  n = 3 ^ 3 * 5 * 23 * 37 * 53\n  (3 ^ 3 * 5 * 11 * 17 * 227) Amic (3 ^ 3 * 5 * 23 * 37 * 53)\n\ngoal (1 subgoal):\n 1. m Amic n", "by simp"], ["proof (state)\nthis:\n  m Amic n\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have v1: \"m = g*M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = g * M", "using o1 o3 o5"], ["proof (prove)\nusing this:\n  m = 3 ^ 3 * 5 * 11 * 17 * 227\n  g = 3 ^ 3 * 5\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. m = g * M", "by simp"], ["proof (state)\nthis:\n  m = g * M\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have v2: \"n = g*N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = g * N", "using o2 o3 o6"], ["proof (prove)\nusing this:\n  n = 3 ^ 3 * 5 * 23 * 37 * 53\n  g = 3 ^ 3 * 5\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. n = g * N", "by simp"], ["proof (state)\nthis:\n  n = g * N\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have v3: \"h >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < h", "using o4"], ["proof (prove)\nusing this:\n  h = 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. 0 < h", "by simp"], ["proof (state)\nthis:\n  0 < h\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have w: \"g >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < g", "using o3"], ["proof (prove)\nusing this:\n  g = 3 ^ 3 * 5\n\ngoal (1 subgoal):\n 1. 0 < g", "by simp"], ["proof (state)\nthis:\n  0 < g\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have w1: \"h \\<noteq> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<noteq> g", "using o4 o3"], ["proof (prove)\nusing this:\n  h = 3\\<^sup>2 * 7 * 13\n  g = 3 ^ 3 * 5\n\ngoal (1 subgoal):\n 1. h \\<noteq> g", "by simp"], ["proof (state)\nthis:\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"h = 819\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h = 819", "using o4"], ["proof (prove)\nusing this:\n  h = 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. h = 819", "by simp"], ["proof (state)\nthis:\n  h = 819\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have \"g = 135\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = 135", "using o3"], ["proof (prove)\nusing this:\n  g = 3 ^ 3 * 5\n\ngoal (1 subgoal):\n 1. g = 135", "by simp"], ["proof (state)\nthis:\n  g = 135\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have w2: \"Esigma h = (h/g)*Esigma g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "have B: \"Esigma h = 1456\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma h = 1456", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma h = 1456", "have R: \"set(divisors_nat 819) ={1, 3, 7, 9, 13, 21, 39, 63, 91, 117, 273, 819}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 819) = {1, 3, 7, 9, 13, 21, 39, 63, 91, 117, 273, 819}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 819) = {1, 3, 7, 9, 13, 21, 39, 63, 91, 117, 273, 819}\n\ngoal (1 subgoal):\n 1. Esigma h = 1456", "have RR: \"set( divisors_nat(819)) = divisor_set (819)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 819) = divisor_set 819", "using def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. set (divisors_nat 819) = divisor_set 819", "by simp"], ["proof (state)\nthis:\n  set (divisors_nat 819) = divisor_set 819\n\ngoal (1 subgoal):\n 1. Esigma h = 1456", "show?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma h = 1456", "using Esigma_def RR R \\<open> h = 819\\<close> divisor_def divisors_nat divisors_nat_def"], ["proof (prove)\nusing this:\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  set (divisors_nat 819) = divisor_set 819\n  set (divisors_nat 819) = {1, 3, 7, 9, 13, 21, 39, 63, 91, 117, 273, 819}\n  h = 819\n  ?n divisor ?m \\<equiv> 1 \\<le> ?n \\<and> ?n \\<le> ?m \\<and> ?n dvd ?m\n  ?n \\<noteq> 0 \\<Longrightarrow> set (divisors_nat ?n) = {p. p dvd ?n}\n  distinct (divisors_nat ?n)\n  divisors_nat 0 = []\n  divisors_nat ?n \\<equiv>\n  if ?n = 0 then []\n  else remdups_adj\n        (sort (map prod_list (subseqs (prime_factorization_nat ?n))))\n\ngoal (1 subgoal):\n 1. Esigma h = 1456", "by auto"], ["proof (state)\nthis:\n  Esigma h = 1456\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma h = 1456\n\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "have C: \"Esigma g = 240\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma g = 240", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma g = 240", "have G: \"set(divisors_nat 135) = {1, 3, 5, 9, 15, 27, 45, 135}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 135) = {1, 3, 5, 9, 15, 27, 45, 135}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 135) = {1, 3, 5, 9, 15, 27, 45, 135}\n\ngoal (1 subgoal):\n 1. Esigma g = 240", "have GG:  \"set(divisors_nat 135) = divisor_set 135\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 135) = divisor_set 135", "using  def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. set (divisors_nat 135) = divisor_set 135", "by simp"], ["proof (state)\nthis:\n  set (divisors_nat 135) = divisor_set 135\n\ngoal (1 subgoal):\n 1. Esigma g = 240", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma g = 240", "using G GG Esigma_def  \\<open> g = 135\\<close>\n      properdiv_set proper_divisor_def"], ["proof (prove)\nusing this:\n  set (divisors_nat 135) = {1, 3, 5, 9, 15, 27, 45, 135}\n  set (divisors_nat 135) = divisor_set 135\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n  g = 135\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. Esigma g = 240", "by simp"], ["proof (state)\nthis:\n  Esigma g = 240\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma g = 240\n\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "have D: \"(Esigma h) * g = (Esigma g) * h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "have A: \"(Esigma h) * g = 196560\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma h * g = 196560", "using B o3"], ["proof (prove)\nusing this:\n  Esigma h = 1456\n  g = 3 ^ 3 * 5\n\ngoal (1 subgoal):\n 1. Esigma h * g = 196560", "by simp"], ["proof (state)\nthis:\n  Esigma h * g = 196560\n\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "have AA: \"(Esigma g) * h = 196560\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma g * h = 196560", "using C o4"], ["proof (prove)\nusing this:\n  Esigma g = 240\n  h = 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. Esigma g * h = 196560", "by simp"], ["proof (state)\nthis:\n  Esigma g * h = 196560\n\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "using A AA"], ["proof (prove)\nusing this:\n  Esigma h * g = 196560\n  Esigma g * h = 196560\n\ngoal (1 subgoal):\n 1. Esigma h * g = Esigma g * h", "by simp"], ["proof (state)\nthis:\n  Esigma h * g = Esigma g * h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma h * g = Esigma g * h\n\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "using D"], ["proof (prove)\nusing this:\n  Esigma h * g = Esigma g * h\n\ngoal (1 subgoal):\n 1. real (Esigma h) = real h / real g * real (Esigma g)", "by (metis mult.commute nat_neq_iff nonzero_mult_div_cancel_right\nof_nat_eq_0_iff of_nat_mult times_divide_eq_left w)"], ["proof (state)\nthis:\n  real (Esigma h) = real h / real g * real (Esigma g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (Esigma h) = real h / real g * real (Esigma g)\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have w4: \"gcd g M =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd g M = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gcd g M = 1", "have \"coprime g M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime g M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime g M", "have \"\\<not> g dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> g dvd M", "using o3 o5"], ["proof (prove)\nusing this:\n  g = 3 ^ 3 * 5\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> g dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> g dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "moreover"], ["proof (state)\nthis:\n  \\<not> g dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "have  \"\\<not> 3 dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 3 dvd M", "using o5"], ["proof (prove)\nusing this:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> 3 dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> 3 dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "moreover"], ["proof (state)\nthis:\n  \\<not> 3 dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "have  \"\\<not> 5 dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 5 dvd M", "using o5"], ["proof (prove)\nusing this:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> 5 dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> 5 dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> g dvd M\n  \\<not> 3 dvd M\n  \\<not> 5 dvd M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> g dvd M\n  \\<not> 3 dvd M\n  \\<not> 5 dvd M\n\ngoal (1 subgoal):\n 1. coprime g M", "using o5 o3\n     gcd_nat.absorb_iff2 prime_nat_iff \\<open> prime(3::nat)\\<close> \\<open> prime(5::nat)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> g dvd M\n  \\<not> 3 dvd M\n  \\<not> 5 dvd M\n  M = 11 * 17 * 227\n  g = 3 ^ 3 * 5\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  prime 3\n  prime 5\n\ngoal (1 subgoal):\n 1. coprime g M", "by (metis coprime_commute\ncoprime_mult_left_iff prime_imp_coprime_nat prime_imp_power_coprime_nat)"], ["proof (state)\nthis:\n  coprime g M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime g M\n\ngoal (1 subgoal):\n 1. gcd g M = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd g M = 1", "using \\<open>coprime g M\\<close>"], ["proof (prove)\nusing this:\n  coprime g M\n\ngoal (1 subgoal):\n 1. gcd g M = 1", "by simp"], ["proof (state)\nthis:\n  gcd g M = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd g M = 1\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have s: \" gcd g N =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd g N = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gcd g N = 1", "have \"coprime g N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime g N", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime g N", "have \"\\<not> g dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> g dvd N", "using o3 o6"], ["proof (prove)\nusing this:\n  g = 3 ^ 3 * 5\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> g dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> g dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "moreover"], ["proof (state)\nthis:\n  \\<not> g dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "have \"\\<not> 3 dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 3 dvd N", "using o6"], ["proof (prove)\nusing this:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> 3 dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> 3 dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "moreover"], ["proof (state)\nthis:\n  \\<not> 3 dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "have \"\\<not> 5 dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 5 dvd N", "using o6"], ["proof (prove)\nusing this:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> 5 dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> 5 dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> g dvd N\n  \\<not> 3 dvd N\n  \\<not> 5 dvd N", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> g dvd N\n  \\<not> 3 dvd N\n  \\<not> 5 dvd N\n\ngoal (1 subgoal):\n 1. coprime g N", "using o3 gcd_nat.absorb_iff2 prime_nat_iff \\<open> prime(3::nat)\\<close>\n \\<open> prime(5::nat)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> g dvd N\n  \\<not> 3 dvd N\n  \\<not> 5 dvd N\n  g = 3 ^ 3 * 5\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  prime 3\n  prime 5\n\ngoal (1 subgoal):\n 1. coprime g N", "by (metis coprime_commute\ncoprime_mult_left_iff prime_imp_coprime_nat prime_imp_power_coprime_nat)"], ["proof (state)\nthis:\n  coprime g N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime g N\n\ngoal (1 subgoal):\n 1. gcd g N = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd g N = 1", "using \\<open>coprime g N\\<close>"], ["proof (prove)\nusing this:\n  coprime g N\n\ngoal (1 subgoal):\n 1. gcd g N = 1", "by simp"], ["proof (state)\nthis:\n  gcd g N = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd g N = 1\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have s1: \"gcd h M =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd h M = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gcd h M = 1", "have \"coprime h M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime h M", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime h M", "have \"\\<not> h dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> h dvd M", "using o4 o5"], ["proof (prove)\nusing this:\n  h = 3\\<^sup>2 * 7 * 13\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> h dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> h dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "moreover"], ["proof (state)\nthis:\n  \\<not> h dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "have \"\\<not> 3 dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 3 dvd M", "using o5"], ["proof (prove)\nusing this:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> 3 dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> 3 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "moreover"], ["proof (state)\nthis:\n  \\<not> 3 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "have \"\\<not> 7 dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 7 dvd M", "using o5"], ["proof (prove)\nusing this:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> 7 dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> 7 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "moreover"], ["proof (state)\nthis:\n  \\<not> 7 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "have \"\\<not> 13 dvd M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 13 dvd M", "using o5"], ["proof (prove)\nusing this:\n  M = 11 * 17 * 227\n\ngoal (1 subgoal):\n 1. \\<not> 13 dvd M", "by auto"], ["proof (state)\nthis:\n  \\<not> 13 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> h dvd M\n  \\<not> 3 dvd M\n  \\<not> 7 dvd M\n  \\<not> 13 dvd M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> h dvd M\n  \\<not> 3 dvd M\n  \\<not> 7 dvd M\n  \\<not> 13 dvd M\n\ngoal (1 subgoal):\n 1. coprime h M", "using o4  gcd_nat.absorb_iff2 prime_nat_iff \\<open> prime(3::nat)\\<close>\n\\<open> prime(13::nat)\\<close> \\<open> prime(7::nat)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> h dvd M\n  \\<not> 3 dvd M\n  \\<not> 7 dvd M\n  \\<not> 13 dvd M\n  h = 3\\<^sup>2 * 7 * 13\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  prime 3\n  prime 13\n  prime 7\n\ngoal (1 subgoal):\n 1. coprime h M", "by (metis coprime_commute\ncoprime_mult_left_iff prime_imp_coprime_nat prime_imp_power_coprime_nat)"], ["proof (state)\nthis:\n  coprime h M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime h M\n\ngoal (1 subgoal):\n 1. gcd h M = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd h M = 1", "using \\<open>coprime h M\\<close>"], ["proof (prove)\nusing this:\n  coprime h M\n\ngoal (1 subgoal):\n 1. gcd h M = 1", "by simp"], ["proof (state)\nthis:\n  gcd h M = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd h M = 1\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have s2: \"gcd h N =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd h N = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. gcd h N = 1", "have \"coprime h N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime h N", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime h N", "have \"\\<not> h dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> h dvd N", "using o4 o6"], ["proof (prove)\nusing this:\n  h = 3\\<^sup>2 * 7 * 13\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> h dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> h dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "moreover"], ["proof (state)\nthis:\n  \\<not> h dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "have \"\\<not> 3 dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 3 dvd N", "using o6"], ["proof (prove)\nusing this:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> 3 dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> 3 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "moreover"], ["proof (state)\nthis:\n  \\<not> 3 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "have \"\\<not> 7 dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 7 dvd N", "using o6"], ["proof (prove)\nusing this:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> 7 dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> 7 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "moreover"], ["proof (state)\nthis:\n  \\<not> 7 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "have \"\\<not> 13 dvd N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 13 dvd N", "using o6"], ["proof (prove)\nusing this:\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. \\<not> 13 dvd N", "by auto"], ["proof (state)\nthis:\n  \\<not> 13 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> h dvd N\n  \\<not> 3 dvd N\n  \\<not> 7 dvd N\n  \\<not> 13 dvd N", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> h dvd N\n  \\<not> 3 dvd N\n  \\<not> 7 dvd N\n  \\<not> 13 dvd N\n\ngoal (1 subgoal):\n 1. coprime h N", "using o4\n     gcd_nat.absorb_iff2 prime_nat_iff \\<open> prime(3::nat)\\<close>\\<open> prime(13::nat)\\<close> \\<open> prime(7::nat)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> h dvd N\n  \\<not> 3 dvd N\n  \\<not> 7 dvd N\n  \\<not> 13 dvd N\n  h = 3\\<^sup>2 * 7 * 13\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  prime 3\n  prime 13\n  prime 7\n\ngoal (1 subgoal):\n 1. coprime h N", "by (metis coprime_commute\ncoprime_mult_left_iff prime_imp_coprime_nat prime_imp_power_coprime_nat)"], ["proof (state)\nthis:\n  coprime h N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime h N\n\ngoal (1 subgoal):\n 1. gcd h N = 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd h N = 1", "using \\<open>coprime h N\\<close>"], ["proof (prove)\nusing this:\n  coprime h N\n\ngoal (1 subgoal):\n 1. gcd h N = 1", "by simp"], ["proof (state)\nthis:\n  gcd h N = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd h N = 1\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "have s4: \"(h*M) Amic (h*N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "using isotopic_amicable_pair v v1 v2 v3 w4 s s1 s2 w w1 w2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n; ?m = ?g * ?M; ?n = ?g * ?N;\n   real (Esigma ?h) = real ?h / real ?g * real (Esigma ?g); ?h \\<noteq> ?g;\n   1 < ?h; 1 < ?g; gcd ?g ?M = 1; gcd ?g ?N = 1; gcd ?h ?M = 1;\n   gcd ?h ?N = 1\\<rbrakk>\n  \\<Longrightarrow> (?h * ?M) Amic (?h * ?N)\n  m Amic n\n  m = g * M\n  n = g * N\n  0 < h\n  gcd g M = 1\n  gcd g N = 1\n  gcd h M = 1\n  gcd h N = 1\n  0 < g\n  h \\<noteq> g\n  real (Esigma h) = real h / real g * real (Esigma g)\n\ngoal (1 subgoal):\n 1. (h * M) Amic (h * N)", "by (metis One_nat_def Suc_leI le_eq_less_or_eq nat_1_eq_mult_iff\nnum.distinct(3) numeral_eq_one_iff one_le_mult_iff one_le_numeral o3 o4 o5 o6)"], ["proof (state)\nthis:\n  (h * M) Amic (h * N)\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "using s4 o4 o5 o6"], ["proof (prove)\nusing this:\n  (h * M) Amic (h * N)\n  h = 3\\<^sup>2 * 7 * 13\n  M = 11 * 17 * 227\n  N = 23 * 37 * 53\n\ngoal (1 subgoal):\n 1. (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n    (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)", "by simp"], ["proof (state)\nthis:\n  (3\\<^sup>2 * 7 * 13 * 11 * 17 * 227) Amic\n  (3\\<^sup>2 * 7 * 13 * 23 * 37 * 53)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Betrothed (Quasi-Amicable) Pairs\\<close>"], ["", "text\\<open>We refer to the definition in \\cite{betrothedwiki}:\\<close>"], ["", "definition QuasiAmicable_pair :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\"  (infixr \"QAmic\" 80)\n  where \"m QAmic n \\<longleftrightarrow> (m + 1 = aliquot_sum n) \\<and> (n + 1 = aliquot_sum m)\""], ["", "lemma QuasiAmicable_pair_sym :\n  assumes \"m QAmic n \" shows \"n QAmic m \""], ["proof (prove)\ngoal (1 subgoal):\n 1. n QAmic m", "using  QuasiAmicable_pair_def assms"], ["proof (prove)\nusing this:\n  ?m QAmic ?n = (?m + 1 = aliquot_sum ?n \\<and> ?n + 1 = aliquot_sum ?m)\n  m QAmic n\n\ngoal (1 subgoal):\n 1. n QAmic m", "by blast"], ["", "lemma QuasiAmicable_example:\n  shows \"48 QAmic 75\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 48 QAmic 75", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have a: \"set(divisors_nat 48) = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 48) = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 48) = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have b: \"divisor_set (48) = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}", "using a  def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  set (divisors_nat 48) = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. divisor_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}", "by simp"], ["proof (state)\nthis:\n  divisor_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have c: \"properdiv_set (48) = {1, 2, 3, 4, 6, 8, 12, 16, 24}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properdiv_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24}", "using b union_properdiv_set properdiv_set proper_divisor_def"], ["proof (prove)\nusing this:\n  divisor_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24, 48}\n  1 \\<le> ?n \\<Longrightarrow>\n  divisor_set ?n = properdiv_set ?n \\<union> {?n}\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. properdiv_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24}", "by auto"], ["proof (state)\nthis:\n  properdiv_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have e: \"aliquot_sum (48) = 75+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aliquot_sum 48 = 75 + 1", "using aliquot_sum_def c"], ["proof (prove)\nusing this:\n  aliquot_sum ?n \\<equiv> \\<Sum> (properdiv_set ?n)\n  properdiv_set 48 = {1, 2, 3, 4, 6, 8, 12, 16, 24}\n\ngoal (1 subgoal):\n 1. aliquot_sum 48 = 75 + 1", "by simp"], ["proof (state)\nthis:\n  aliquot_sum 48 = 75 + 1\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have i: \"set(divisors_nat 75) = {1, 3, 5, 15, 25, 75}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 75) = {1, 3, 5, 15, 25, 75}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 75) = {1, 3, 5, 15, 25, 75}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have ii: \"divisor_set (75) = {1, 3, 5, 15, 25, 75}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 75 = {1, 3, 5, 15, 25, 75}", "using i  def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  set (divisors_nat 75) = {1, 3, 5, 15, 25, 75}\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. divisor_set 75 = {1, 3, 5, 15, 25, 75}", "by simp"], ["proof (state)\nthis:\n  divisor_set 75 = {1, 3, 5, 15, 25, 75}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have iii: \"properdiv_set (75) = {1, 3, 5, 15, 25}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. properdiv_set 75 = {1, 3, 5, 15, 25}", "using ii union_properdiv_set properdiv_set proper_divisor_def"], ["proof (prove)\nusing this:\n  divisor_set 75 = {1, 3, 5, 15, 25, 75}\n  1 \\<le> ?n \\<Longrightarrow>\n  divisor_set ?n = properdiv_set ?n \\<union> {?n}\n  properdiv_set ?m = {n. n properdiv ?m}\n  ?n properdiv ?m \\<equiv> 1 \\<le> ?n \\<and> ?n < ?m \\<and> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. properdiv_set 75 = {1, 3, 5, 15, 25}", "by auto"], ["proof (state)\nthis:\n  properdiv_set 75 = {1, 3, 5, 15, 25}\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "have iv: \"aliquot_sum (75) = 48+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aliquot_sum 75 = 48 + 1", "using aliquot_sum_def iii"], ["proof (prove)\nusing this:\n  aliquot_sum ?n \\<equiv> \\<Sum> (properdiv_set ?n)\n  properdiv_set 75 = {1, 3, 5, 15, 25}\n\ngoal (1 subgoal):\n 1. aliquot_sum 75 = 48 + 1", "by simp"], ["proof (state)\nthis:\n  aliquot_sum 75 = 48 + 1\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 48 QAmic 75", "using e iv QuasiAmicable_pair_def"], ["proof (prove)\nusing this:\n  aliquot_sum 48 = 75 + 1\n  aliquot_sum 75 = 48 + 1\n  ?m QAmic ?n = (?m + 1 = aliquot_sum ?n \\<and> ?n + 1 = aliquot_sum ?m)\n\ngoal (1 subgoal):\n 1. 48 QAmic 75", "by simp"], ["proof (state)\nthis:\n  48 QAmic 75\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Breeders\\<close>"], ["", "definition breeder_pair :: \"nat \\<Rightarrow>nat \\<Rightarrow> bool\"  (infixr \"breeder\" 80)\n  where \"m breeder n \\<equiv> (\\<exists>x\\<in>\\<nat>. x > 0 \\<and> Esigma m = m + n*x \\<and> Esigma m = (Esigma n)*(x+1))\""], ["", "lemma breederAmic:\n  fixes x :: nat\n  assumes \"x > 0\" and \"Esigma n = n + m*x\" and \"Esigma n = Esigma m * (x+1)\" \n      and \"prime x\" and \"\\<not>( x dvd m)\"\n  shows \" n Amic (m*x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n Amic (m * x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. n Amic (m * x)", "have A: \"Esigma n = Esigma (m*x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "have \"gcd m x =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd m x = 1", "using assms  gcd_nat.absorb_iff2 prime_nat_iff"], ["proof (prove)\nusing this:\n  0 < x\n  Esigma n = n + m * x\n  Esigma n = Esigma m * (x + 1)\n  prime x\n  \\<not> x dvd m\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n\ngoal (1 subgoal):\n 1. gcd m x = 1", "by blast"], ["proof (state)\nthis:\n  gcd m x = 1\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "have A1: \"Esigma (m*x) = (Esigma m)*(Esigma x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m * x) = Esigma m * Esigma x", "using \\<open>gcd m x =1\\<close> gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  gcd m x = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (m * x) = Esigma m * Esigma x", "by simp"], ["proof (state)\nthis:\n  Esigma (m * x) = Esigma m * Esigma x\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "have A2: \"Esigma (m*x) = (Esigma m)*(x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (m * x) = Esigma m * (x + 1)", "using \\<open>prime x\\<close>  prime_Esigma_mult A1"], ["proof (prove)\nusing this:\n  prime x\n  \\<lbrakk>prime ?m; prime ?n; ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?n * Esigma ?m\n  Esigma (m * x) = Esigma m * Esigma x\n\ngoal (1 subgoal):\n 1. Esigma (m * x) = Esigma m * (x + 1)", "by (simp add: prime_sum_div)"], ["proof (state)\nthis:\n  Esigma (m * x) = Esigma m * (x + 1)\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "using A2 assms"], ["proof (prove)\nusing this:\n  Esigma (m * x) = Esigma m * (x + 1)\n  0 < x\n  Esigma n = n + m * x\n  Esigma n = Esigma m * (x + 1)\n  prime x\n  \\<not> x dvd m\n\ngoal (1 subgoal):\n 1. Esigma n = Esigma (m * x)", "by simp"], ["proof (state)\nthis:\n  Esigma n = Esigma (m * x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma n = Esigma (m * x)\n\ngoal (1 subgoal):\n 1. n Amic (m * x)", "have B: \"Esigma n = n+m*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma n = n + m * x", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  Esigma n = n + m * x\n  Esigma n = Esigma m * (x + 1)\n  prime x\n  \\<not> x dvd m\n\ngoal (1 subgoal):\n 1. Esigma n = n + m * x", "by simp"], ["proof (state)\nthis:\n  Esigma n = n + m * x\n\ngoal (1 subgoal):\n 1. n Amic (m * x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. n Amic (m * x)", "using A B Amicable_pair_equiv_def"], ["proof (prove)\nusing this:\n  Esigma n = Esigma (m * x)\n  Esigma n = n + m * x\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n\ngoal (1 subgoal):\n 1. n Amic (m * x)", "by (smt Amicable_pair_equiv_def_conv Esigma_properdiv_set\nOne_nat_def Suc_leI add_cancel_left_left add_le_same_cancel1 add_mult_distrib2 assms\n dvd_triv_right le_add2 nat_0_less_mult_iff not_gr_zero not_le semiring_normalization_rules(1))"], ["proof (state)\nthis:\n  n Amic (m * x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>More examples\\<close>"], ["", "text\\<open>The first odd-odd amicable pair was discovered by Euler \\cite{garciaetal1}. In the following \nproof, amicability is shown using the properties of Euler's sigma function.\\<close>"], ["", "lemma odd_odd_amicable_Euler: \"69615 Amic 87633\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime(5::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 5", "by simp"], ["proof (state)\nthis:\n  prime 5\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime(17::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 17", "by simp"], ["proof (state)\nthis:\n  prime 17\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"\\<not> (5*17)dvd((3::nat)^2*7*13)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 5 * 17 dvd 3\\<^sup>2 * 7 * 13", "by auto"], ["proof (state)\nthis:\n  \\<not> 5 * 17 dvd 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"\\<not> 5 dvd((3::nat)^2*7*13)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 5 dvd 3\\<^sup>2 * 7 * 13", "by auto"], ["proof (state)\nthis:\n  \\<not> 5 dvd 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"\\<not> 17 dvd((3::nat)^2*7*13)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 17 dvd 3\\<^sup>2 * 7 * 13", "by auto"], ["proof (state)\nthis:\n  \\<not> 17 dvd 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A1: \"Esigma(69615) = Esigma(3^2*7*13*5*17)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 69615 = Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17)", "by simp"], ["proof (state)\nthis:\n  Esigma 69615 = Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17)\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A2: \"Esigma(3^2*7*13*5*17) =  Esigma(3^2*7*13)*Esigma(5*17)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "have A111: \"coprime  ((3::nat)^2*7*13) ((5::nat)*17)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (3\\<^sup>2 * 7 * 13) (5 * 17)", "using \\<open>\\<not> 17 dvd((3::nat)^2*7*13)\\<close> \\<open>\\<not> 5 dvd((3::nat)^2*7*13)\\<close> \\<open>prime (17::nat)\\<close>\n        \\<open>prime (5::nat)\\<close> coprime_commute coprime_mult_left_iff prime_imp_coprime_nat"], ["proof (prove)\nusing this:\n  \\<not> 17 dvd 3\\<^sup>2 * 7 * 13\n  \\<not> 5 dvd 3\\<^sup>2 * 7 * 13\n  prime 17\n  prime 5\n  coprime ?b ?a = coprime ?a ?b\n  coprime (?a * ?b) ?c = (coprime ?a ?c \\<and> coprime ?b ?c)\n  \\<lbrakk>prime ?p; \\<not> ?p dvd ?n\\<rbrakk>\n  \\<Longrightarrow> coprime ?p ?n\n\ngoal (1 subgoal):\n 1. coprime (3\\<^sup>2 * 7 * 13) (5 * 17)", "by blast"], ["proof (state)\nthis:\n  coprime (3\\<^sup>2 * 7 * 13) (5 * 17)\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "have \"gcd (3^2*7*13)((5::nat)*17) =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7 * 13) (5 * 17) = 1", "using A111  coprime_imp_gcd_eq_1"], ["proof (prove)\nusing this:\n  coprime (3\\<^sup>2 * 7 * 13) (5 * 17)\n  coprime ?a ?b \\<Longrightarrow> gcd ?a ?b = (1::?'a)\n\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7 * 13) (5 * 17) = 1", "by blast"], ["proof (state)\nthis:\n  gcd (3\\<^sup>2 * 7 * 13) (5 * 17) = 1\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "using \\<open>gcd (3^2*7*13)((5::nat)*17) =1 \\<close>\n        gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  gcd (3\\<^sup>2 * 7 * 13) (5 * 17) = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)", "by (smt semiring_normalization_rules(18) semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime (7::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 7", "by simp"], ["proof (state)\nthis:\n  prime 7\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"\\<not> 7 dvd ((3::nat)^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 7 dvd 3\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<not> 7 dvd 3\\<^sup>2\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime (13::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 13", "by simp"], ["proof (state)\nthis:\n  prime 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \" \\<not> 13 dvd ((3::nat)^2*7)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 13 dvd 3\\<^sup>2 * 7", "by simp"], ["proof (state)\nthis:\n  \\<not> 13 dvd 3\\<^sup>2 * 7\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have  \"gcd ((3::nat)^2*7) 13 =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7) 13 = 1", "using \\<open>prime (13::nat)\\<close> \\<open>\\<not> 13 dvd ((3::nat)^2*7)\\<close> gcd_nat.absorb_iff2 prime_nat_iff"], ["proof (prove)\nusing this:\n  prime 13\n  \\<not> 13 dvd 3\\<^sup>2 * 7\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7) 13 = 1", "by blast"], ["proof (state)\nthis:\n  gcd (3\\<^sup>2 * 7) 13 = 1\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A3: \" Esigma(3^2 * 7*13) = Esigma(3^2*7)*Esigma(13)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13", "using  \\<open>gcd  (3^2 *7) 13 =1\\<close>  gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  gcd (3\\<^sup>2 * 7) 13 = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13", "by (smt semiring_normalization_rules(18) semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have  \"gcd ((3::nat)^2) 7 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2) 7 = 1", "using \\<open>prime (7::nat)\\<close> \\<open> \\<not> 7 dvd ((3::nat)^2 )\\<close> gcd_nat.absorb_iff2 prime_nat_iff"], ["proof (prove)\nusing this:\n  prime 7\n  \\<not> 7 dvd 3\\<^sup>2\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2) 7 = 1", "by blast"], ["proof (state)\nthis:\n  gcd (3\\<^sup>2) 7 = 1\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A4: \" Esigma(3^2*7) = Esigma(3^2)* Esigma (7)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7", "using  \\<open>gcd ((3::nat)^2) 7 =1\\<close>  gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  gcd (3\\<^sup>2) 7 = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7", "by (smt semiring_normalization_rules(18) semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A5: \"Esigma(3^2) = 13\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "have  \"(3::nat)^2 =9\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3\\<^sup>2 = 9", "by auto"], ["proof (state)\nthis:\n  3\\<^sup>2 = 9\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "have A55:\"divisor_set 9 = {1, 3, 9}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 9 = {1, 3, 9}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. divisor_set 9 = {1, 3, 9}", "have A555: \"set(divisors_nat (9)) = {1, 3, 9}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 9) = {1, 3, 9}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 9) = {1, 3, 9}\n\ngoal (1 subgoal):\n 1. divisor_set 9 = {1, 3, 9}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_set 9 = {1, 3, 9}", "using def_equiv_divisor_set A555"], ["proof (prove)\nusing this:\n  divisor_set ?n = set (divisors_nat ?n)\n  set (divisors_nat 9) = {1, 3, 9}\n\ngoal (1 subgoal):\n 1. divisor_set 9 = {1, 3, 9}", "by simp"], ["proof (state)\nthis:\n  divisor_set 9 = {1, 3, 9}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  divisor_set 9 = {1, 3, 9}\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "using A55 \\<open>(3::nat)^2 =9\\<close> Esigma_def"], ["proof (prove)\nusing this:\n  divisor_set 9 = {1, 3, 9}\n  3\\<^sup>2 = 9\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2) = 13", "by simp"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2) = 13\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2) = 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime( 13::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 13", "by simp"], ["proof (state)\nthis:\n  prime 13\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A6: \"Esigma (13) = 14\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 13 = 14", "using prime_sum_div \\<open>prime( 13::nat)\\<close>"], ["proof (prove)\nusing this:\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime 13\n\ngoal (1 subgoal):\n 1. Esigma 13 = 14", "by auto"], ["proof (state)\nthis:\n  Esigma 13 = 14\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime( 7::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 7", "by simp"], ["proof (state)\nthis:\n  prime 7\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A7: \"Esigma (7) = 8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 7 = 8", "using prime_sum_div \\<open>prime( 7::nat)\\<close>"], ["proof (prove)\nusing this:\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime 7\n\ngoal (1 subgoal):\n 1. Esigma 7 = 8", "by auto"], ["proof (state)\nthis:\n  Esigma 7 = 8\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime (5::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 5", "by simp"], ["proof (state)\nthis:\n  prime 5\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime (17::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 17", "by simp"], ["proof (state)\nthis:\n  prime 17\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A8: \"Esigma(5*17) = Esigma(5) * Esigma (17)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (5 * 17) = Esigma 5 * Esigma 17", "using prime_Esigma_mult \\<open>prime (5::nat)\\<close> \\<open>prime (17::nat)\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?m; prime ?n; ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?n * Esigma ?m\n  prime 5\n  prime 17\n\ngoal (1 subgoal):\n 1. Esigma (5 * 17) = Esigma 5 * Esigma 17", "by (metis arith_simps(2) mult.commute num.inject(2) numeral_eq_iff semiring_norm(83))"], ["proof (state)\nthis:\n  Esigma (5 * 17) = Esigma 5 * Esigma 17\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A9: \"Esigma(69615) = Esigma(3^2)*Esigma (7) *Esigma (13) * Esigma(5) * Esigma (17)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 69615 =\n    Esigma (3\\<^sup>2) * Esigma 7 * Esigma 13 * Esigma 5 * Esigma 17", "using A1 A2 A3 A4 A5 A6 A7 A8"], ["proof (prove)\nusing this:\n  Esigma 69615 = Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17)\n  Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)\n  Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13\n  Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7\n  Esigma (3\\<^sup>2) = 13\n  Esigma 13 = 14\n  Esigma 7 = 8\n  Esigma (5 * 17) = Esigma 5 * Esigma 17\n\ngoal (1 subgoal):\n 1. Esigma 69615 =\n    Esigma (3\\<^sup>2) * Esigma 7 * Esigma 13 * Esigma 5 * Esigma 17", "by (metis mult.assoc)"], ["proof (state)\nthis:\n  Esigma 69615 =\n  Esigma (3\\<^sup>2) * Esigma 7 * Esigma 13 * Esigma 5 * Esigma 17\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A10: \"Esigma (5)=6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 5 = 6", "using prime_sum_div \\<open>prime(5::nat)\\<close>"], ["proof (prove)\nusing this:\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime 5\n\ngoal (1 subgoal):\n 1. Esigma 5 = 6", "by auto"], ["proof (state)\nthis:\n  Esigma 5 = 6\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A11: \"Esigma (17)=18\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 17 = 18", "using prime_sum_div \\<open>prime(17::nat)\\<close>"], ["proof (prove)\nusing this:\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime 17\n\ngoal (1 subgoal):\n 1. Esigma 17 = 18", "by auto"], ["proof (state)\nthis:\n  Esigma 17 = 18\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA:  \"Esigma(69615)=13*8*14*6*18\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 69615 = 13 * 8 * 14 * 6 * 18", "using A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11"], ["proof (prove)\nusing this:\n  Esigma 69615 = Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17)\n  Esigma (3\\<^sup>2 * 7 * 13 * 5 * 17) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma (5 * 17)\n  Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13\n  Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7\n  Esigma (3\\<^sup>2) = 13\n  Esigma 13 = 14\n  Esigma 7 = 8\n  Esigma (5 * 17) = Esigma 5 * Esigma 17\n  Esigma 69615 =\n  Esigma (3\\<^sup>2) * Esigma 7 * Esigma 13 * Esigma 5 * Esigma 17\n  Esigma 5 = 6\n  Esigma 17 = 18\n\ngoal (1 subgoal):\n 1. Esigma 69615 = 13 * 8 * 14 * 6 * 18", "by simp"], ["proof (state)\nthis:\n  Esigma 69615 = 13 * 8 * 14 * 6 * 18\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AAA: \"Esigma(69615) =157248\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 69615 = 157248", "using AA"], ["proof (prove)\nusing this:\n  Esigma 69615 = 13 * 8 * 14 * 6 * 18\n\ngoal (1 subgoal):\n 1. Esigma 69615 = 157248", "by simp"], ["proof (state)\nthis:\n  Esigma 69615 = 157248\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA1: \"Esigma(87633) = Esigma (3^2*7*13*107)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 87633 = Esigma (3\\<^sup>2 * 7 * 13 * 107)", "by simp"], ["proof (state)\nthis:\n  Esigma 87633 = Esigma (3\\<^sup>2 * 7 * 13 * 107)\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have \"prime (107::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 107", "by simp"], ["proof (state)\nthis:\n  prime 107\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA2: \"Esigma (3^2*7*13*107) = Esigma (3^2*7*13)*Esigma(107)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "have \"\\<not> (107::nat) dvd  (3^2*7*13)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 107 dvd 3\\<^sup>2 * 7 * 13", "by auto"], ["proof (state)\nthis:\n  \\<not> 107 dvd 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "have \"gcd  ((3::nat)^2*7*13) 107 =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7 * 13) 107 = 1", "using \\<open>prime (107::nat)\\<close>\n        \\<open> \\<not> (107::nat) dvd  (3^2*7*13)\\<close>"], ["proof (prove)\nusing this:\n  prime 107\n  \\<not> 107 dvd 3\\<^sup>2 * 7 * 13\n\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7 * 13) 107 = 1", "using gcd_nat.absorb_iff2 prime_nat_iff"], ["proof (prove)\nusing this:\n  prime 107\n  \\<not> 107 dvd 3\\<^sup>2 * 7 * 13\n  (?b dvd ?a) = (gcd ?a ?b = ?b)\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n\ngoal (1 subgoal):\n 1. gcd (3\\<^sup>2 * 7 * 13) 107 = 1", "by blast"], ["proof (state)\nthis:\n  gcd (3\\<^sup>2 * 7 * 13) 107 = 1\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "using \\<open>gcd  (3^2 *7*13) 107 =1\\<close> gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  gcd (3\\<^sup>2 * 7 * 13) 107 = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n    Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107", "by (smt mult.commute)"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA3:  \"Esigma (107) =108\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 107 = 108", "using prime_sum_div \\<open>prime(107::nat)\\<close>"], ["proof (prove)\nusing this:\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  prime 107\n\ngoal (1 subgoal):\n 1. Esigma 107 = 108", "by auto"], ["proof (state)\nthis:\n  Esigma 107 = 108\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA4: \"Esigma(3^2*7*13) = 13*8*14\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13) = 13 * 8 * 14", "using A3 A4 A5 A6 A7"], ["proof (prove)\nusing this:\n  Esigma (3\\<^sup>2 * 7 * 13) = Esigma (3\\<^sup>2 * 7) * Esigma 13\n  Esigma (3\\<^sup>2 * 7) = Esigma (3\\<^sup>2) * Esigma 7\n  Esigma (3\\<^sup>2) = 13\n  Esigma 13 = 14\n  Esigma 7 = 8\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13) = 13 * 8 * 14", "by auto"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13) = 13 * 8 * 14\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA5 : \"Esigma (3^2*7*13*107) = 13*8*14*108\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) = 13 * 8 * 14 * 108", "using AA2 AA3 AA4"], ["proof (prove)\nusing this:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) =\n  Esigma (3\\<^sup>2 * 7 * 13) * Esigma 107\n  Esigma 107 = 108\n  Esigma (3\\<^sup>2 * 7 * 13) = 13 * 8 * 14\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) = 13 * 8 * 14 * 108", "by auto"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) = 13 * 8 * 14 * 108\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have AA6: \"Esigma (3^2*7*13*107) = 157248\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) = 157248", "using AA5"], ["proof (prove)\nusing this:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) = 13 * 8 * 14 * 108\n\ngoal (1 subgoal):\n 1. Esigma (3\\<^sup>2 * 7 * 13 * 107) = 157248", "by simp"], ["proof (state)\nthis:\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) = 157248\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have A:\"Esigma(69615) = Esigma(87633)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 69615 = Esigma 87633", "using  AAA AA6 AA5 AA1"], ["proof (prove)\nusing this:\n  Esigma 69615 = 157248\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) = 157248\n  Esigma (3\\<^sup>2 * 7 * 13 * 107) = 13 * 8 * 14 * 108\n  Esigma 87633 = Esigma (3\\<^sup>2 * 7 * 13 * 107)\n\ngoal (1 subgoal):\n 1. Esigma 69615 = Esigma 87633", "by linarith"], ["proof (state)\nthis:\n  Esigma 69615 = Esigma 87633\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "have B: \" Esigma(87633) = 69615 + 87633\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 87633 = 69615 + 87633", "using AAA \\<open>Esigma 69615 = Esigma 87633\\<close>"], ["proof (prove)\nusing this:\n  Esigma 69615 = 157248\n  Esigma 69615 = Esigma 87633\n\ngoal (1 subgoal):\n 1. Esigma 87633 = 69615 + 87633", "by linarith"], ["proof (state)\nthis:\n  Esigma 87633 = 69615 + 87633\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "using A B Amicable_pair_def Amicable_pair_equiv_def_conv"], ["proof (prove)\nusing this:\n  Esigma 69615 = Esigma 87633\n  Esigma 87633 = 69615 + 87633\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n\ngoal (1 subgoal):\n 1. 69615 Amic 87633", "by auto"], ["proof (state)\nthis:\n  69615 Amic 87633\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The following is the smallest odd-odd amicable pair \\cite{garciaetal1}. In the following proof, \namicability is shown directly by evaluating the sets of divisors.\\<close>"], ["", "lemma Amicable_pair_example_smallest_odd_odd: \"12285 Amic 14595\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have A: \"set(divisors_nat (12285)) = {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91,\n105, 117, 135, 189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095, 12285}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 12285) =\n    {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n     189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n     12285}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 12285) =\n  {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n   189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n   12285}\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have A1: \"set(divisors_nat (12285)) = divisor_set 12285\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 12285) = divisor_set 12285", "using def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. set (divisors_nat 12285) = divisor_set 12285", "by simp"], ["proof (state)\nthis:\n  set (divisors_nat 12285) = divisor_set 12285\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have A2: \"\\<Sum>{1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135, 189, 195, 273, \n315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095, 12285} = (26880::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\n     {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n      189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n      12285} =\n    26880", "by eval"], ["proof (state)\nthis:\n  \\<Sum>\n   {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n    189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n    12285} =\n  26880\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have  A3: \"Esigma 12285 = 26880\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 12285 = 26880", "using A A1 A2 Esigma_def"], ["proof (prove)\nusing this:\n  set (divisors_nat 12285) =\n  {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n   189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n   12285}\n  set (divisors_nat 12285) = divisor_set 12285\n  \\<Sum>\n   {1, 3, 5, 7, 9, 13, 15, 21, 27, 35, 39, 45, 63, 65, 91, 105, 117, 135,\n    189, 195, 273, 315, 351, 455, 585, 819, 945, 1365, 1755, 2457, 4095,\n    12285} =\n  26880\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n\ngoal (1 subgoal):\n 1. Esigma 12285 = 26880", "by simp"], ["proof (state)\nthis:\n  Esigma 12285 = 26880\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have Q:\"Esigma 12285 = Esigma 14595\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "have N: \"set(divisors_nat (14595)) =\n               { 1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865, 14595}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 14595) =\n    {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865,\n     14595}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 14595) =\n  {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865, 14595}\n\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "have N1: \"set(divisors_nat (14595)) = divisor_set 14595\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 14595) = divisor_set 14595", "using def_equiv_divisor_set"], ["proof (prove)\nusing this:\n  divisor_set ?n = set (divisors_nat ?n)\n\ngoal (1 subgoal):\n 1. set (divisors_nat 14595) = divisor_set 14595", "by simp"], ["proof (state)\nthis:\n  set (divisors_nat 14595) = divisor_set 14595\n\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "have N2:\n      \"\\<Sum>{ 1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865, 14595} = (26880::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\n     {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865,\n      14595} =\n    26880", "by eval"], ["proof (state)\nthis:\n  \\<Sum>\n   {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865,\n    14595} =\n  26880\n\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "using A3 N N1 N2 Esigma_def"], ["proof (prove)\nusing this:\n  Esigma 12285 = 26880\n  set (divisors_nat 14595) =\n  {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865, 14595}\n  set (divisors_nat 14595) = divisor_set 14595\n  \\<Sum>\n   {1, 3, 5, 7, 15, 21, 35, 105, 139, 417, 695, 973, 2085, 2919, 4865,\n    14595} =\n  26880\n  Esigma ?n \\<equiv> \\<Sum> (divisor_set ?n)\n\ngoal (1 subgoal):\n 1. Esigma 12285 = Esigma 14595", "by simp"], ["proof (state)\nthis:\n  Esigma 12285 = Esigma 14595\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma 12285 = Esigma 14595\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "have B:\"Esigma (12285) = 12285 + 14595\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma 12285 = 12285 + 14595", "using A3"], ["proof (prove)\nusing this:\n  Esigma 12285 = 26880\n\ngoal (1 subgoal):\n 1. Esigma 12285 = 12285 + 14595", "by auto"], ["proof (state)\nthis:\n  Esigma 12285 = 12285 + 14595\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "using B Q Amicable_pair_def"], ["proof (prove)\nusing this:\n  Esigma 12285 = 12285 + 14595\n  Esigma 12285 = Esigma 14595\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "using Amicable_pair_equiv_def_conv one_le_numeral"], ["proof (prove)\nusing this:\n  Esigma 12285 = 12285 + 14595\n  Esigma 12285 = Esigma 14595\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  (1::?'a) \\<le> numeral ?n\n\ngoal (1 subgoal):\n 1. 12285 Amic 14595", "by blast"], ["proof (state)\nthis:\n  12285 Amic 14595\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>Euler's Rule\\<close>"], ["", "text\\<open>We present Euler's Rule as in \\cite{garciaetal1}. The proof has been reconstructed.\\<close>"], ["", "theorem Euler_Rule_Amicable:\n  fixes k l f p q r m n :: nat\n  assumes \"k > l\" and \"l \\<ge> 1\" and \"f = 2^l+1\" \n      and \"prime p\" and \"prime q\" and \"prime r\"\n      and \"p = 2^(k-l) * f - 1\" and \"q = 2^k * f - 1\" and \"r = 2^(2*k-l) * f^2 - 1\" \n      and \"m = 2^k * p * q\" and \"n = 2^k * r\"\n  shows \"m Amic n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m Amic n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m Amic n", "note [[linarith_split_limit = 50]]"], ["proof (state)\nthis:\n  TERM _\n\ngoal (1 subgoal):\n 1. m Amic n", "have A1: \"(p+1)*(q+1) = (r+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "have a: \"p+1 = (2^(k-l))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p + 1 = 2 ^ (k - l) * f", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. p + 1 = 2 ^ (k - l) * f", "by simp"], ["proof (state)\nthis:\n  p + 1 = 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "have b: \"q+1 = (2^(k))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q + 1 = 2 ^ k * f", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. q + 1 = 2 ^ k * f", "by simp"], ["proof (state)\nthis:\n  q + 1 = 2 ^ k * f\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "have c: \"r+1 = (2^(2*k-l))*(f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r + 1 = 2 ^ (2 * k - l) * f\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. r + 1 = 2 ^ (2 * k - l) * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  r + 1 = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "have d: \"(p+1)*(q+1) = (2^(k-l))*(2^(k))*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "using a b"], ["proof (prove)\nusing this:\n  p + 1 = 2 ^ (k - l) * f\n  q + 1 = 2 ^ k * f\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (p + 1) * (q + 1) = 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "using d c"], ["proof (prove)\nusing this:\n  (p + 1) * (q + 1) = 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n  r + 1 = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. (p + 1) * (q + 1) = r + 1", "by (metis Nat.add_diff_assoc add.commute assms(1) less_imp_le_nat mult_2 power_add)"], ["proof (state)\nthis:\n  (p + 1) * (q + 1) = r + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p + 1) * (q + 1) = r + 1\n\ngoal (1 subgoal):\n 1. m Amic n", "have aa: \"Esigma p = p+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma p = p + 1", "using assms \\<open>prime p\\<close> prime_sum_div"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  prime p\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n\ngoal (1 subgoal):\n 1. Esigma p = p + 1", "by simp"], ["proof (state)\nthis:\n  Esigma p = p + 1\n\ngoal (1 subgoal):\n 1. m Amic n", "have bb: \"Esigma q = q+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma q = q + 1", "using \\<open>prime q\\<close> prime_sum_div assms"], ["proof (prove)\nusing this:\n  prime q\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. Esigma q = q + 1", "by simp"], ["proof (state)\nthis:\n  Esigma q = q + 1\n\ngoal (1 subgoal):\n 1. m Amic n", "have cc: \"Esigma r = r+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma r = r + 1", "using \\<open>prime r\\<close> prime_sum_div assms"], ["proof (prove)\nusing this:\n  prime r\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. Esigma r = r + 1", "by simp"], ["proof (state)\nthis:\n  Esigma r = r + 1\n\ngoal (1 subgoal):\n 1. m Amic n", "have A2: \"(Esigma p)*(Esigma q) = Esigma r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma p * Esigma q = Esigma r", "using aa bb cc A1"], ["proof (prove)\nusing this:\n  Esigma p = p + 1\n  Esigma q = q + 1\n  Esigma r = r + 1\n  (p + 1) * (q + 1) = r + 1\n\ngoal (1 subgoal):\n 1. Esigma p * Esigma q = Esigma r", "by simp"], ["proof (state)\nthis:\n  Esigma p * Esigma q = Esigma r\n\ngoal (1 subgoal):\n 1. m Amic n", "have A3: \"Esigma (2^k)*(Esigma p)*(Esigma q) = Esigma(2^k)*(Esigma r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) * Esigma p * Esigma q = Esigma (2 ^ k) * Esigma r", "using A2"], ["proof (prove)\nusing this:\n  Esigma p * Esigma q = Esigma r\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) * Esigma p * Esigma q = Esigma (2 ^ k) * Esigma r", "by simp"], ["proof (state)\nthis:\n  Esigma (2 ^ k) * Esigma p * Esigma q = Esigma (2 ^ k) * Esigma r\n\ngoal (1 subgoal):\n 1. m Amic n", "have A4: \"Esigma(( 2^k)*r) = (Esigma(2^k))*(Esigma r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "have Z0: \"gcd ((2::nat)^k)r =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (2 ^ k) r = 1", "using assms \\<open>prime r\\<close>"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  prime r\n\ngoal (1 subgoal):\n 1. gcd (2 ^ k) r = 1", "by simp"], ["proof (state)\nthis:\n  gcd (2 ^ k) r = 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "have A: \"(2::nat)^k \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 2 ^ k", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 1 \\<le> 2 ^ k", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 2 ^ k\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "have Ab: \"(2::nat)^k \\<noteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k \\<noteq> r", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ k \\<noteq> r", "by (metis gcd_nat.idem numeral_le_one_iff prime_ge_2_nat semiring_norm(69) Z0)"], ["proof (state)\nthis:\n  2 ^ k \\<noteq> r\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "using Z0 gcd_Esigma_mult assms A Ab"], ["proof (prove)\nusing this:\n  gcd (2 ^ k) r = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  1 \\<le> 2 ^ k\n  2 ^ k \\<noteq> r\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r", "by metis"], ["proof (state)\nthis:\n  Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r\n\ngoal (1 subgoal):\n 1. m Amic n", "have A5: \"Esigma((2^k)*p*q) =(Esigma(2^k))*(Esigma p)*(Esigma q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have \"(2::nat)^k \\<ge>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 2 ^ k", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 1 \\<le> 2 ^ k", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 2 ^ k\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have A:  \"gcd (2^k) p =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (2 ^ k) p = 1", "using assms \\<open>prime p\\<close>"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  prime p\n\ngoal (1 subgoal):\n 1. gcd (2 ^ k) p = 1", "by simp"], ["proof (state)\nthis:\n  gcd (2 ^ k) p = 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have B:  \"gcd (2^k) q =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (2 ^ k) q = 1", "using assms \\<open>prime q\\<close>"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  prime q\n\ngoal (1 subgoal):\n 1. gcd (2 ^ k) q = 1", "by simp"], ["proof (state)\nthis:\n  gcd (2 ^ k) q = 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have BB: \"gcd (2^k) (p*q) =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (2 ^ k) (p * q) = 1", "using assms A B"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  gcd (2 ^ k) p = 1\n  gcd (2 ^ k) q = 1\n\ngoal (1 subgoal):\n 1. gcd (2 ^ k) (p * q) = 1", "by fastforce"], ["proof (state)\nthis:\n  gcd (2 ^ k) (p * q) = 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have C:  \"p*q \\<ge>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> p * q", "using assms One_nat_def one_le_mult_iff prime_ge_1_nat"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  1 = Suc 0\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n  prime ?p \\<Longrightarrow> 1 \\<le> ?p\n\ngoal (1 subgoal):\n 1. 1 \\<le> p * q", "by metis"], ["proof (state)\nthis:\n  1 \\<le> p * q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have A6: \" Esigma((2^k)*(p*q))=( Esigma(2^k))*(Esigma(p*q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)", "have \"(( 2::nat)^k) \\<noteq> (p*q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k \\<noteq> p * q", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ k \\<noteq> p * q", "by (metis BB Nat.add_0_right gcd_idem_nat less_add_eq_less\n            not_add_less1 power_inject_exp prime_gt_1_nat semiring_normalization_rules(32)\n            two_is_prime_nat )"], ["proof (state)\nthis:\n  2 ^ k \\<noteq> p * q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)", "using \\<open>(( 2::nat)^k) \\<noteq> (p*q)\\<close>\n          \\<open>( 2::nat)^k \\<ge>1\\<close>  gcd_Esigma_mult assms C BB"], ["proof (prove)\nusing this:\n  2 ^ k \\<noteq> p * q\n  1 \\<le> 2 ^ k\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  1 \\<le> p * q\n  gcd (2 ^ k) (p * q) = 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)", "by metis"], ["proof (state)\nthis:\n  Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma (p * q)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have A7:\"Esigma(p*q) = (Esigma p)*(Esigma q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (p * q) = Esigma p * Esigma q", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (p * q) = Esigma p * Esigma q", "have \"p \\<noteq> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> q", "using assms One_nat_def Suc_pred add_gr_0 add_is_0 diff_commute diff_diff_cancel\n          diff_is_0_eq nat_0_less_mult_iff nat_mult_eq_cancel_disj\n          numeral_One prime_gt_1_nat power_inject_exp\n          semiring_normalization_rules(7) two_is_prime_nat zero_less_numeral zero_less_power\nzero_neq_numeral"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  1 = Suc 0\n  0 < ?n \\<Longrightarrow> Suc (?n - Suc 0) = ?n\n  (0 < ?m + ?n) = (0 < ?m \\<or> 0 < ?n)\n  (?m + ?n = 0) = (?m = 0 \\<and> ?n = 0)\n  ?i - ?j - ?k = ?i - ?k - ?j\n  ?i \\<le> ?n \\<Longrightarrow> ?n - (?n - ?i) = ?i\n  (?m - ?n = 0) = (?m \\<le> ?n)\n  (0 < ?m * ?n) = (0 < ?m \\<and> 0 < ?n)\n  (?k * ?m = ?k * ?n) = (?k = 0 \\<or> ?m = ?n)\n  Numeral1 = (1::?'a)\n  prime ?p \\<Longrightarrow> 1 < ?p\n  (1::?'a) < ?a \\<Longrightarrow> (?a ^ ?m = ?a ^ ?n) = (?m = ?n)\n  ?a * ?b = ?b * ?a\n  prime 2\n  (0::?'a) < numeral ?n\n  (0::?'a) < ?a \\<Longrightarrow> (0::?'a) < ?a ^ ?n\n  (0::?'a) \\<noteq> numeral ?n\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "by (smt less_imp_le_nat)"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. Esigma (p * q) = Esigma p * Esigma q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (p * q) = Esigma p * Esigma q", "using \\<open>p \\<noteq> q\\<close>\n          \\<open>prime p\\<close>  \\<open>prime q\\<close> C  prime_Esigma_mult assms"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  prime p\n  prime q\n  1 \\<le> p * q\n  \\<lbrakk>prime ?m; prime ?n; ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?n * Esigma ?m\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. Esigma (p * q) = Esigma p * Esigma q", "by (metis mult.commute)"], ["proof (state)\nthis:\n  Esigma (p * q) = Esigma p * Esigma q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (p * q) = Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "have A8: \"Esigma((2^k)*( p*q))=(Esigma(2^k))*(Esigma p)*(Esigma q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma p * Esigma q", "by (simp add: A6 A7)"], ["proof (state)\nthis:\n  Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "using A8"], ["proof (prove)\nusing this:\n  Esigma (2 ^ k * (p * q)) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "by (simp add: mult.assoc)"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. m Amic n", "have Z: \"Esigma((2^k)*p*q) = Esigma ((2^k)*r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k * r)", "using A1 A2 A3 A4 A5"], ["proof (prove)\nusing this:\n  (p + 1) * (q + 1) = r + 1\n  Esigma p * Esigma q = Esigma r\n  Esigma (2 ^ k) * Esigma p * Esigma q = Esigma (2 ^ k) * Esigma r\n  Esigma (2 ^ k * r) = Esigma (2 ^ k) * Esigma r\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k * r)", "by simp"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k * r)\n\ngoal (1 subgoal):\n 1. m Amic n", "have Z1: \"Esigma ((2^k)*p*q) = 2^k *p*q + 2^k*r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"prime (2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 2", "by simp"], ["proof (state)\nthis:\n  prime 2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have s: \"Esigma (2^k) =((2::nat)^(k+1)-1)/(2-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma (2 ^ k)) = real (2 ^ (k + 1) - 1) / (2 - 1)", "using  \\<open>prime (2::nat)\\<close> assms Esigma_prime_sum"], ["proof (prove)\nusing this:\n  prime 2\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  \\<lbrakk>prime ?m; 1 \\<le> ?k\\<rbrakk>\n  \\<Longrightarrow> real (Esigma (?m ^ ?k)) =\n                    real (?m ^ (?k + 1) - 1) / (real ?m - 1)\n\ngoal (1 subgoal):\n 1. real (Esigma (2 ^ k)) = real (2 ^ (k + 1) - 1) / (2 - 1)", "by auto"], ["proof (state)\nthis:\n  real (Esigma (2 ^ k)) = real (2 ^ (k + 1) - 1) / (2 - 1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have ss: \"Esigma (2^k) =(2^(k+1)-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) = 2 ^ (k + 1) - 1", "using s"], ["proof (prove)\nusing this:\n  real (Esigma (2 ^ k)) = real (2 ^ (k + 1) - 1) / (2 - 1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) = 2 ^ (k + 1) - 1", "by simp"], ["proof (state)\nthis:\n  Esigma (2 ^ k) = 2 ^ (k + 1) - 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have J: \"(k+1+k-l+k)= 3*k +1-l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + 1 + k - l + k = 3 * k + 1 - l", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. k + 1 + k - l + k = 3 * k + 1 - l", "by linarith"], ["proof (state)\nthis:\n  k + 1 + k - l + k = 3 * k + 1 - l\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have JJ: \"(2^(k-l))*(2^k) = (2::nat)^(2*k-l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * 2 ^ k = 2 ^ (2 * k - l)", "apply (simp add: algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * 2 ^ (k - l) = 2 ^ (k * 2 - l)", "by (metis Nat.add_diff_assoc assms(1) less_imp_le_nat mult_2_right power_add)"], ["proof (state)\nthis:\n  2 ^ (k - l) * 2 ^ k = 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"Esigma((2^k)*p*q)= (Esigma(2^k))*(Esigma p)*(Esigma q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "using A5"], ["proof (prove)\nusing this:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q", "by simp"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k) * Esigma p * Esigma q\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(k+1)-1)*(p+1)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) * Esigma p * Esigma q =\n    (2 ^ (k + 1) - 1) * (p + 1) * (q + 1)", "using assms ss aa bb"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  Esigma (2 ^ k) = 2 ^ (k + 1) - 1\n  Esigma p = p + 1\n  Esigma q = q + 1\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k) * Esigma p * Esigma q =\n    (2 ^ (k + 1) - 1) * (p + 1) * (q + 1)", "by metis"], ["proof (state)\nthis:\n  Esigma (2 ^ k) * Esigma p * Esigma q =\n  (2 ^ (k + 1) - 1) * (p + 1) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  Esigma (2 ^ k) * Esigma p * Esigma q =\n  (2 ^ (k + 1) - 1) * (p + 1) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(k+1)-1)*((2^(k-l))*f)*((2^k)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ (k + 1) - 1) * (p + 1) * (q + 1) =\n    (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f)", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. (2 ^ (k + 1) - 1) * (p + 1) * (q + 1) =\n    (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f)", "by simp"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * (p + 1) * (q + 1) =\n  (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * (p + 1) * (q + 1) =\n  (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(k+1)-1)*(2^(k-l))*(2^k)*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f) =\n    (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f) =\n  (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * (2 ^ (k - l) * f) * (2 ^ k * f) =\n  (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(k+1))*(2^(k-l))*(2^k)*f^2-(2^(k-l))*(2^k)*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n    2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "by (smt left_diff_distrib' mult.commute mult_numeral_1_right numeral_One)"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n  2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  (2 ^ (k + 1) - 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n  2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(k+1+k-l+k))*f^2-(2^(k-l))*(2^k)*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n    2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "by (metis Nat.add_diff_assoc assms(1) less_imp_le_nat power_add)"], ["proof (state)\nthis:\n  2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n  2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  2 ^ (k + 1) * 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 -\n  2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(3*k+1-l))*f^2-(2^(k-l))*(2^k)*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "using J"], ["proof (prove)\nusing this:\n  k + 1 + k - l + k = 3 * k + 1 - l\n\ngoal (1 subgoal):\n 1. 2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "also"], ["proof (state)\nthis:\n  2 ^ (k + 1 + k - l + k) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have \"\\<dots> = (2^(3*k+1-l))*f^2-(2^(2*k-l))*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "using JJ"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * 2 ^ k = 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (k - l) * 2 ^ k * f\\<^sup>2 =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "finally"], ["proof (chain)\npicking this:\n  Esigma (2 ^ k * p * q) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have YY:\" Esigma((2^k)*p*q)= (2^(3*k+1-l))*f^2-(2^(2*k-l))*f^2\""], ["proof (prove)\nusing this:\n  Esigma (2 ^ k * p * q) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "."], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have auxicalc: \"(2^(2*k-l))*(f^2)=(2^(2*k-l))*f +(2^(2*k))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "have i: \"(2^(2*k-l))*f = (2^(2*k-l))*(2^l+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * (2 ^ l + 1)", "using assms \\<open>f = 2^l+1\\<close>"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  f = 2 ^ l + 1\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * (2 ^ l + 1)", "by simp"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * (2 ^ l + 1)\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "have ii: \"( 2^(2*k-l))*f = (2^(2*k-l))*( 2^l)+(2^(2*k-l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * 2 ^ l + 2 ^ (2 * k - l)", "using i"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * (2 ^ l + 1)\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * 2 ^ l + 2 ^ (2 * k - l)", "by simp"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * 2 ^ l + 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "have iii: \"(2^(2*k-l))*f = (2^(2*k-l+l))+(2^(2*k-l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l + l) + 2 ^ (2 * k - l)", "using ii"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l) * 2 ^ l + 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ (2 * k - l + l) + 2 ^ (2 * k - l)", "by (simp add: power_add)"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l + l) + 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "have iv: \"( 2^(2*k-l))*f*f =(((2^(2*k))+(2^(2*k-l))))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f * f = (2 ^ (2 * k) + 2 ^ (2 * k - l)) * f", "using iii assms"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f = 2 ^ (2 * k - l + l) + 2 ^ (2 * k - l)\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f * f = (2 ^ (2 * k) + 2 ^ (2 * k - l)) * f", "by simp"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f * f = (2 ^ (2 * k) + 2 ^ (2 * k - l)) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "have v:  \"(2^(2*k-l))*f *f =((2^(2*k)))*f+((2^(2*k-l)))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f * f = 2 ^ (2 * k) * f + 2 ^ (2 * k - l) * f", "using iv assms comm_monoid_mult_axioms  power2_eq_square semiring_normalization_rules(18)\n          semiring_normalization_rules"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f * f = (2 ^ (2 * k) + 2 ^ (2 * k - l)) * f\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  class.comm_monoid_mult (*) (1::?'a)\n  ?a\\<^sup>2 = ?a * ?a\n  ?lx * (?rx * ?ry) = ?lx * ?rx * ?ry\n  ?a * ?m + ?b * ?m = (?a + ?b) * ?m\n  ?a * ?m + ?m = (?a + (1::?'a)) * ?m\n  ?m + ?a * ?m = (?a + (1::?'a)) * ?m\n  ?m + ?m = ((1::?'a) + (1::?'a)) * ?m\n  (0::?'a) + ?a = ?a\n  ?a + (0::?'a) = ?a\n  ?a * ?b = ?b * ?a\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  (0::?'a) * ?a = (0::?'a)\n  ?a * (0::?'a) = (0::?'a)\n  (1::?'a) * ?a = ?a\n  ?a * (1::?'a) = ?a\n  ?lx * ?ly * (?rx * ?ry) = ?lx * ?rx * (?ly * ?ry)\n  ?lx * ?ly * (?rx * ?ry) = ?lx * (?ly * (?rx * ?ry))\n  ?lx * ?ly * (?rx * ?ry) = ?rx * (?lx * ?ly * ?ry)\n  ?lx * ?ly * ?rx = ?lx * ?rx * ?ly\n  ?lx * ?ly * ?rx = ?lx * (?ly * ?rx)\n  ?lx * (?rx * ?ry) = ?lx * ?rx * ?ry\n  ?lx * (?rx * ?ry) = ?rx * (?lx * ?ry)\n  ?a + ?b + (?c + ?d) = ?a + ?c + (?b + ?d)\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + (?c + ?d) = ?c + (?a + ?d)\n  ?a + ?b + ?c = ?a + ?c + ?b\n  ?a + ?c = ?c + ?a\n  ?a + (?c + ?d) = ?a + ?c + ?d\n  ?x ^ ?p * ?x ^ ?q = ?x ^ (?p + ?q)\n  ?x * ?x ^ ?q = ?x ^ Suc ?q\n  ?x ^ ?q * ?x = ?x ^ Suc ?q\n  ?x * ?x = ?x\\<^sup>2\n  (?x * ?y) ^ ?q = ?x ^ ?q * ?y ^ ?q\n  (?x ^ ?p) ^ ?q = ?x ^ (?p * ?q)\n  ?x ^ 0 = (1::?'a)\n  ?x ^ 1 = ?x\n  ?x * (?y + ?z) = ?x * ?y + ?x * ?z\n  ?x ^ Suc ?q = ?x * ?x ^ ?q\n  ?x ^ (2 * ?n) = ?x ^ ?n * ?x ^ ?n\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f * f = 2 ^ (2 * k) * f + 2 ^ (2 * k - l) * f", "by (simp add: add_mult_distrib assms)"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f * f = 2 ^ (2 * k) * f + 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "(*slow*)"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f * f = 2 ^ (2 * k) * f + 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "using v"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f * f = 2 ^ (2 * k) * f + 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f", "by (simp add: power2_eq_square semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W1: \"2^k*p*q + 2^k*r = 2^k *(p*q +r) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * p * q + 2 ^ k * r = 2 ^ k * (p * q + r)", "by (simp add: add_mult_distrib2)"], ["proof (state)\nthis:\n  2 ^ k * p * q + 2 ^ k * r = 2 ^ k * (p * q + r)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W2: \"2^k*(p*q +r)= 2^k *((2^(k-l)*f-1)*((2^k)*f-1)+(2^(2*k-l))*f^2-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * (p * q + r) =\n    2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ k * (p * q + r) =\n    2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "by simp"], ["proof (state)\nthis:\n  2 ^ k * (p * q + r) =\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W3: \"2^k*((2^(k-l)*f-1)*((2^k)*f-1)+(2^(2*k-l))*f^2-1)=\n2^k*((2^(k-l)*f-1)*((2^k)*f)-(2^(k-l)*f-1)+(2^(2*k-l))*f^2-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "by (simp add: right_diff_distrib')"], ["proof (state)\nthis:\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W4: \"2^k*((2^(k-l)*f-1)*((2^k)*f)-(2^(k-l)*f-1)+(2^(2*k-l))*f^2-1) =\n2^k*((2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f-1)+(2^(2*k-l))*f^2-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "by (simp add: diff_mult_distrib)"], ["proof (state)\nthis:\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W5: \" 2^k*((2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f-1)+(2^(2*k-l))*f^2-1) =\n2^k *(( 2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f)+1 +(2^(2*k-l))*f^2-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "using assms  less_imp_le_nat less_imp_le_nat  prime_ge_1_nat"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  prime ?p \\<Longrightarrow> 1 \\<le> ?p\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1)", "by (smt Nat.add_diff_assoc2 Nat.diff_diff_right One_nat_def Suc_leI Suc_pred W3 W4\n          add_diff_cancel_right' add_gr_0 le_Suc_ex less_numeral_extra(1) mult_cancel1\n          nat_0_less_mult_iff zero_less_diff zero_less_numeral zero_less_power)"], ["proof (state)\nthis:\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W6: \"2^k*((2^(k-l)* f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f)+1+(2^(2*k-l))*f^2-1 ) =\n 2^k*((2^(k-l)*f)*((2^k)*f)-((2^k )*f)-(2^(k-l)*f)+(2^(2*k-l))*f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n     2 ^ (2 * k - l) * f\\<^sup>2 -\n     1) =\n    2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n   2 ^ (2 * k - l) * f\\<^sup>2)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W7: \"2^k*((2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f)+(2^(2*k-l))*f^2) =\n   2^k *((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)* f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have a: \"(2^(k-l)*f)*(2^k * f) = (2^(k-l)*f*(f*(2^k))) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) = 2 ^ (k - l) * f * (f * 2 ^ k)", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) = 2 ^ (k - l) * f * (f * 2 ^ k)", "by simp"], ["proof (state)\nthis:\n  2 ^ (k - l) * f * (2 ^ k * f) = 2 ^ (k - l) * f * (f * 2 ^ k)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have b: \"(2^(k-l)*f)*(f*(2^k)) = 2^(k-l)*(f*f)*(2^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (f * 2 ^ k) = 2 ^ (k - l) * (f * f) * 2 ^ k", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (f * 2 ^ k) = 2 ^ (k - l) * (f * f) * 2 ^ k", "by linarith"], ["proof (state)\nthis:\n  2 ^ (k - l) * f * (f * 2 ^ k) = 2 ^ (k - l) * (f * f) * 2 ^ k\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have c: \"2^(k-l)*(f*f)*(2^k) = 2^(k-l+k)*(f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * (f * f) * 2 ^ k = 2 ^ (k - l + k) * f\\<^sup>2", "using Semiring_Normalization.comm_semiring_1_class.semiring_normalization_rules(16)\n          Semiring_Normalization.comm_semiring_1_class.semiring_normalization_rules(29)"], ["proof (prove)\nusing this:\n  ?lx * ?ly * ?rx = ?lx * ?rx * ?ly\n  ?x * ?x = ?x\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * (f * f) * 2 ^ k = 2 ^ (k - l + k) * f\\<^sup>2", "by  (simp add:  power_add)"], ["proof (state)\nthis:\n  2 ^ (k - l) * (f * f) * 2 ^ k = 2 ^ (k - l + k) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have d: \"2^(k-l+k) *(f^2) = 2^(2*k-l) *(f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l + k) * f\\<^sup>2 = 2 ^ (2 * k - l) * f\\<^sup>2", "by (simp add: JJ power_add)"], ["proof (state)\nthis:\n  2 ^ (k - l + k) * f\\<^sup>2 = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have e: \"(2^(2*k-l))*f^2 + (2^(2*k-l))*f^2 =  2^(2*k-l +1)*(f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 + 2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f\\<^sup>2 + 2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l + 1) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have f1: \"((2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f)+(2^(2*k-l))*f^2) =\n    (2^(2*k-l)*(f^2)-((2^k)*f)-(2^(k-l)*f)+(2^(2*k-l))*f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2", "using a b c d e"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * f * (2 ^ k * f) = 2 ^ (k - l) * f * (f * 2 ^ k)\n  2 ^ (k - l) * f * (f * 2 ^ k) = 2 ^ (k - l) * (f * f) * 2 ^ k\n  2 ^ (k - l) * (f * f) * 2 ^ k = 2 ^ (k - l + k) * f\\<^sup>2\n  2 ^ (k - l + k) * f\\<^sup>2 = 2 ^ (2 * k - l) * f\\<^sup>2\n  2 ^ (2 * k - l) * f\\<^sup>2 + 2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l + 1) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "have f2:\"((2^(k-l)*f)*((2^k)*f)-((2^k)*f)-(2^(k-l)*f))+(2^(2*k-l))*f^2\n       = ((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)*f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "have aa: \"f > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < f", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 1 < f", "by simp"], ["proof (state)\nthis:\n  1 < f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "have a: \"((2::nat)^(2*k-l))*f^2-((2::nat)^(k-l)*f)>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "have b: \"(2::nat)^(2*k-l) > 2^(k-l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) < 2 ^ (2 * k - l)", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) < 2 ^ (2 * k - l)", "by simp"], ["proof (state)\nthis:\n  2 ^ (k - l) < 2 ^ (2 * k - l)\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "have c: \"(2::nat)^(2*k-l)*f > 2^(k-l)*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f < 2 ^ (2 * k - l) * f", "using a assms"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * f * (2 ^ k * f) = 2 ^ (k - l) * f * (f * 2 ^ k)\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f < 2 ^ (2 * k - l) * f", "by (metis One_nat_def add_gr_0 b lessI mult_less_mono1)"], ["proof (state)\nthis:\n  2 ^ (k - l) * f < 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "using c auxicalc"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * f < 2 ^ (2 * k - l) * f\n  2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f", "by linarith"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "have aaa: \"(2^(2*k-l))*f^2 -(2^(k-l)*f)-((2^k)*f) >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f", "have A: \"(2^(2*k-l))*f-(2^(k-l))-(( 2^k)) >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "have A_1 : \"(2^(2*k-l))*f  > (2^(k-l))+((2^k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "have A_2: \"(2^(2*k-l))*f = 2^(k)*2^(k-l)*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f = 2 ^ k * 2 ^ (k - l) * f", "by (metis JJ semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f = 2 ^ k * 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "have df1: \"(2^(k-l))+((2^k))< ((2::nat)^(2*k-l))+((2^k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) + 2 ^ k", "using \\<open>l < k\\<close>"], ["proof (prove)\nusing this:\n  l < k\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) + 2 ^ k", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) + 2 ^ k\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "have df2: \"((2::nat)^(2*k-l))+((2^k)) < ((2::nat)^(2*k-l))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "have \"k >1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < k", "using assms"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 1 < k", "by simp"], ["proof (state)\nthis:\n  1 < k\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "have df: \"((2::nat)^(k-l))+(1::nat) < ((2::nat)^(k-l))*f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "obtain x::nat where xx: \"x=(2::nat)^(k-l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x = 2 ^ (k - l) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  x = 2 ^ (k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "have xxx: \"x \\<ge>( 2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> x", "using assms xx"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  x = 2 ^ (k - l)\n\ngoal (1 subgoal):\n 1. 2 \\<le> x", "by (metis One_nat_def Suc_leI one_le_numeral power_increasing\n                        semiring_normalization_rules(33) zero_less_diff)"], ["proof (state)\nthis:\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "have c: \"x*f \\<ge> x*(2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 2 \\<le> x * f", "using aa"], ["proof (prove)\nusing this:\n  1 < f\n\ngoal (1 subgoal):\n 1. x * 2 \\<le> x * f", "by simp"], ["proof (state)\nthis:\n  x * 2 \\<le> x * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "have c1: \"x+(1::nat) < x*(2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + 1 < x * 2", "using auxiliary_ineq  xxx"], ["proof (prove)\nusing this:\n  2 \\<le> ?x \\<Longrightarrow> ?x + 1 < 2 * ?x\n  2 \\<le> x\n\ngoal (1 subgoal):\n 1. x + 1 < x * 2", "by linarith"], ["proof (state)\nthis:\n  x + 1 < x * 2\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "have c2: \"((2::nat)^(k-l))+(1::nat) < ((2::nat)^(k-l))*(2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * 2", "using c1 xx"], ["proof (prove)\nusing this:\n  x + 1 < x * 2\n  x = 2 ^ (k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * 2", "by blast"], ["proof (state)\nthis:\n  2 ^ (k - l) + 1 < 2 ^ (k - l) * 2\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "using c2 c xx"], ["proof (prove)\nusing this:\n  2 ^ (k - l) + 1 < 2 ^ (k - l) * 2\n  x * 2 \\<le> x * f\n  x = 2 ^ (k - l)\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 1 < 2 ^ (k - l) * f", "by (metis diff_is_0_eq' le_trans nat_less_le zero_less_diff)"], ["proof (state)\nthis:\n  2 ^ (k - l) + 1 < 2 ^ (k - l) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (k - l) + 1 < 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "using df aa assms"], ["proof (prove)\nusing this:\n  2 ^ (k - l) + 1 < 2 ^ (k - l) * f\n  1 < f\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "by (smt JJ add.commute mult_less_cancel2 semiring_normalization_rules\n                      zero_less_numeral zero_less_power)"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "using A_2 df1 df2"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f = 2 ^ k * 2 ^ (k - l) * f\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) + 2 ^ k\n  2 ^ (2 * k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f", "by linarith"], ["proof (state)\nthis:\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "using assms A_1"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "using diff_diff_left zero_less_diff"], ["proof (prove)\nusing this:\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  2 ^ (k - l) + 2 ^ k < 2 ^ (2 * k - l) * f\n  ?i - ?j - ?k = ?i - (?j + ?k)\n  (0 < ?n - ?m) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k", "by presburger"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f", "using A aa assms"], ["proof (prove)\nusing this:\n  0 < 2 ^ (2 * k - l) * f - 2 ^ (k - l) - 2 ^ k\n  1 < f\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f", "by (metis (no_types, hide_lams)  a nat_0_less_mult_iff right_diff_distrib'\n                semiring_normalization_rules(18) semiring_normalization_rules(29)\n               semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f - 2 ^ k * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "have b3: \"((2^(2*k-l)*(f^2))-((2^k)*f)-(2^(k-l)*f)+(2^(2*k-l))*f^2) =\n                  (2*(2^(2*k-l)*(f^2))-((2^k)*f)-(2^(k-l)*f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 * (2 ^ (2 * k - l) * f\\<^sup>2) - 2 ^ k * f - 2 ^ (k - l) * f", "using a aa assms  minus_eq_nat_subst_order"], ["proof (prove)\nusing this:\n  0 < 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ (k - l) * f\n  1 < f\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  \\<lbrakk>0 < ?B - ?C - ?D; ?A = ?B - ?C - ?D + ?B\\<rbrakk>\n  \\<Longrightarrow> ?A = 2 * ?B - ?C - ?D\n\ngoal (1 subgoal):\n 1. 2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 * (2 ^ (2 * k - l) * f\\<^sup>2) - 2 ^ k * f - 2 ^ (k - l) * f", "by (smt aaa diff_commute)"], ["proof (state)\nthis:\n  2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 * (2 ^ (2 * k - l) * f\\<^sup>2) - 2 ^ k * f - 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "using f1"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n    2 ^ (2 * k - l) * f\\<^sup>2 =\n    2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f", "by (metis b3 e mult_2)"], ["proof (state)\nthis:\n  2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "using f2"], ["proof (prove)\nusing this:\n  2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n  2 ^ (2 * k - l) * f\\<^sup>2 =\n  2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n     2 ^ (2 * k - l) * f\\<^sup>2) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)", "by simp"], ["proof (state)\nthis:\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n   2 ^ (2 * k - l) * f\\<^sup>2) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n   2 ^ (2 * k - l) * f\\<^sup>2) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have W8: \"2^k*((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)*f)) = (2^(3*k+1-l))*f^2-(2^(2*k-l))*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have a: \"2^k*(2^(2*k-l+1)*f^2-2^k*f-2^(k-l)*f) = 2^k*(2^(2*k-l+1)*f^2)-2^k*(2^k*f)-2^k*(2^(k-l)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have b: \"2^k*(2^(2*k-l+1)*f^2)-2^k*(2^k*f)-2^k*(2^(k-l)*f) =\n2^k*(2^(2*k-l+1)*f^2)-2^k*(2^k*f)-2^k*(2^(k-l)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f) =\n    2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have c: \"2^k*(2^(2*k-l+1)*f^2)-2^k*(2^k*f)-2^k*(2^(k-l)*f) =\n2^(2*k+1-l+k)*f^2-2^k*(2^k*f)-2^k*(2^(k-l)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f) =\n    2 ^ (2 * k + 1 - l + k) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f)", "apply (simp add: algebra_simps power_add)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (f\\<^sup>2 * (2 ^ k * 2 ^ (k * 2 - l))) -\n    (f * (2 ^ k * 2 ^ k) + f * (2 ^ k * 2 ^ (k - l))) =\n    f\\<^sup>2 * (2 ^ k * 2 ^ (Suc (k * 2) - l)) -\n    (f * (2 ^ k * 2 ^ k) + f * (2 ^ k * 2 ^ (k - l)))", "by (smt Groups.mult_ac(1) Groups.mult_ac(2) Nat.diff_add_assoc assms(1) le_simps(1)\nmult_2_right plus_nat.simps(2) power.simps(2))"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f) =\n  2 ^ (2 * k + 1 - l + k) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have d: \"2^k*(2^(2*k-l+1)*(f^2))= (2^(3*k+1-l))*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2", "using power_add   Nat.add_diff_assoc assms(1) less_imp_le_nat mult_2\n          semiring_normalization_rules(18) semiring_normalization_rules(23)"], ["proof (prove)\nusing this:\n  ?a ^ (?m + ?n) = ?a ^ ?m * ?a ^ ?n\n  ?k \\<le> ?j \\<Longrightarrow> ?i + (?j - ?k) = ?i + ?j - ?k\n  l < k\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  (2::?'a) * ?z = ?z + ?z\n  ?lx * (?rx * ?ry) = ?lx * ?rx * ?ry\n  ?a + ?b + ?c = ?a + ?c + ?b\n\ngoal (1 subgoal):\n 1. 2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2", "by (smt J)"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have e: \"2^k*((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)*f)) =\n(2^(3*k+1-l))*f^2-(2^k)*((2^k)*f)-(2^k)*(2^(k-l)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f)", "using a b c d  One_nat_def  one_le_mult_iff\n          Nat.add_diff_assoc assms(1) less_imp_le_nat"], ["proof (prove)\nusing this:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f) =\n  2 ^ (2 * k + 1 - l + k) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2\n  1 = Suc 0\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n  ?k \\<le> ?j \\<Longrightarrow> ?i + (?j - ?k) = ?i + ?j - ?k\n  l < k\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n    2 ^ k * (2 ^ (k - l) * f)", "by metis"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have ee: \"2^k*((2^(2*k-l+1)*(f^2))-((2^k)*f)-((2::nat)^(k-l)*f))\n= (2^(3*k+1-l))*f^2-( 2^k)*((2^k)*f)-(2^(2*k-l)*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n    2 ^ (2 * k - l) * f", "using e  power_add  Nat.add_diff_assoc assms(1) less_imp_le_nat mult_2\n          semiring_normalization_rules"], ["proof (prove)\nusing this:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ k * (2 ^ (k - l) * f)\n  ?a ^ (?m + ?n) = ?a ^ ?m * ?a ^ ?n\n  ?k \\<le> ?j \\<Longrightarrow> ?i + (?j - ?k) = ?i + ?j - ?k\n  l < k\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  (2::?'a) * ?z = ?z + ?z\n  ?a * ?m + ?b * ?m = (?a + ?b) * ?m\n  ?a * ?m + ?m = (?a + (1::?'a)) * ?m\n  ?m + ?a * ?m = (?a + (1::?'a)) * ?m\n  ?m + ?m = ((1::?'a) + (1::?'a)) * ?m\n  (0::?'a) + ?a = ?a\n  ?a + (0::?'a) = ?a\n  ?a * ?b = ?b * ?a\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  (0::?'a) * ?a = (0::?'a)\n  ?a * (0::?'a) = (0::?'a)\n  (1::?'a) * ?a = ?a\n  ?a * (1::?'a) = ?a\n  ?lx * ?ly * (?rx * ?ry) = ?lx * ?rx * (?ly * ?ry)\n  ?lx * ?ly * (?rx * ?ry) = ?lx * (?ly * (?rx * ?ry))\n  ?lx * ?ly * (?rx * ?ry) = ?rx * (?lx * ?ly * ?ry)\n  ?lx * ?ly * ?rx = ?lx * ?rx * ?ly\n  ?lx * ?ly * ?rx = ?lx * (?ly * ?rx)\n  ?lx * (?rx * ?ry) = ?lx * ?rx * ?ry\n  ?lx * (?rx * ?ry) = ?rx * (?lx * ?ry)\n  ?a + ?b + (?c + ?d) = ?a + ?c + (?b + ?d)\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + (?c + ?d) = ?c + (?a + ?d)\n  ?a + ?b + ?c = ?a + ?c + ?b\n  ?a + ?c = ?c + ?a\n  ?a + (?c + ?d) = ?a + ?c + ?d\n  ?x ^ ?p * ?x ^ ?q = ?x ^ (?p + ?q)\n  ?x * ?x ^ ?q = ?x ^ Suc ?q\n  ?x ^ ?q * ?x = ?x ^ Suc ?q\n  ?x * ?x = ?x\\<^sup>2\n  (?x * ?y) ^ ?q = ?x ^ ?q * ?y ^ ?q\n  (?x ^ ?p) ^ ?q = ?x ^ (?p * ?q)\n  ?x ^ 0 = (1::?'a)\n  ?x ^ 1 = ?x\n  ?x * (?y + ?z) = ?x * ?y + ?x * ?z\n  ?x ^ Suc ?q = ?x * ?x ^ ?q\n  ?x ^ (2 * ?n) = ?x ^ ?n * ?x ^ ?n\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n    2 ^ (2 * k - l) * f", "by (smt J)"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have eee :\n        \"-(( 2::nat)^(2*k-l))*(f^(2::nat)) =(-(( 2::nat)^(2*k))*f-(( 2::nat)^(2*k-l))*f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - int (2 ^ (2 * k - l)) * int (f\\<^sup>2) =\n    - int (2 ^ (2 * k)) * int f - int (2 ^ (2 * k - l) * f)", "using auxicalc mult_minus_eq_nat mult_minus_left of_nat_mult"], ["proof (prove)\nusing this:\n  2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f\n  ?x + ?y = ?z \\<Longrightarrow> - int ?x - int ?y = - int ?z\n  - ?a * ?b = - (?a * ?b)\n  of_nat (?m * ?n) = of_nat ?m * of_nat ?n\n\ngoal (1 subgoal):\n 1. - int (2 ^ (2 * k - l)) * int (f\\<^sup>2) =\n    - int (2 ^ (2 * k)) * int f - int (2 ^ (2 * k - l) * f)", "by smt"], ["proof (state)\nthis:\n  - int (2 ^ (2 * k - l)) * int (f\\<^sup>2) =\n  - int (2 ^ (2 * k)) * int f - int (2 ^ (2 * k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have e4: \"2^k*((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)*f))=(2^(3*k+1-l))*f^2-(2^(2*k-l))*(f^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "define A where A: \"A = 2^k*((2^(2*k-l+1)*(f^2))-((2^k)*f)-(2^(k-l)*f))\""], ["proof (state)\nthis:\n  A =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "define B where B: \"B = (2^(3*k+(1::nat)-l))*f^2\""], ["proof (state)\nthis:\n  B = 2 ^ (3 * k + 1 - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "define C where C: \"C = (2^k)*((2^k)*f)\""], ["proof (state)\nthis:\n  C = 2 ^ k * (2 ^ k * f)\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "define D where D: \"D = (2^(2*k-l)*f)\""], ["proof (state)\nthis:\n  D = 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "define E where E: \"E = (2^(2*k-l))*(f^2)\""], ["proof (state)\nthis:\n  E = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have wq: \"A = B-C-D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B - C - D", "using ee A B C D"], ["proof (prove)\nusing this:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ k * (2 ^ k * f) -\n  2 ^ (2 * k - l) * f\n  A =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n  B = 2 ^ (3 * k + 1 - l) * f\\<^sup>2\n  C = 2 ^ k * (2 ^ k * f)\n  D = 2 ^ (2 * k - l) * f\n\ngoal (1 subgoal):\n 1. A = B - C - D", "by simp"], ["proof (state)\nthis:\n  A = B - C - D\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have wq1: \"-E = -C-D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - int E = - int C - int D", "using eee C D E"], ["proof (prove)\nusing this:\n  - int (2 ^ (2 * k - l)) * int (f\\<^sup>2) =\n  - int (2 ^ (2 * k)) * int f - int (2 ^ (2 * k - l) * f)\n  C = 2 ^ k * (2 ^ k * f)\n  D = 2 ^ (2 * k - l) * f\n  E = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. - int E = - int C - int D", "by (simp add: semiring_normalization_rules(36))"], ["proof (state)\nthis:\n  - int E = - int C - int D\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "have wq2: \"A = B-E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B - E", "using wq wq1  minus_eq_nat_subst"], ["proof (prove)\nusing this:\n  A = B - C - D\n  - int E = - int C - int D\n  \\<lbrakk>?A = ?B - ?C - ?D; - int ?E = - int ?C - int ?D\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B - ?E\n\ngoal (1 subgoal):\n 1. A = B - E", "by blast"], ["proof (state)\nthis:\n  A = B - E\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "using wq2 A B E"], ["proof (prove)\nusing this:\n  A = B - E\n  A =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n  B = 2 ^ (3 * k + 1 - l) * f\\<^sup>2\n  E = 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "by metis"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "using e4"], ["proof (prove)\nusing this:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k *\n    (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "have Y: \"2^k*p*q+2^k*r = (2^(3*k+1-l))*f^2-(2^(2*k-l))*f^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ k * p * q + 2 ^ k * r =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "using W1 W2 W3 W4 W5 W6 W7 W8"], ["proof (prove)\nusing this:\n  2 ^ k * p * q + 2 ^ k * r = 2 ^ k * (p * q + r)\n  2 ^ k * (p * q + r) =\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f - 1) + 2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n  2 ^ k *\n  ((2 ^ (k - l) * f - 1) * (2 ^ k * f) - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - (2 ^ (k - l) * f - 1) +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1)\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f + 1 +\n   2 ^ (2 * k - l) * f\\<^sup>2 -\n   1) =\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n   2 ^ (2 * k - l) * f\\<^sup>2)\n  2 ^ k *\n  (2 ^ (k - l) * f * (2 ^ k * f) - 2 ^ k * f - 2 ^ (k - l) * f +\n   2 ^ (2 * k - l) * f\\<^sup>2) =\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f)\n  2 ^ k * (2 ^ (2 * k - l + 1) * f\\<^sup>2 - 2 ^ k * f - 2 ^ (k - l) * f) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ k * p * q + 2 ^ k * r =\n    2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2", "by linarith"], ["proof (state)\nthis:\n  2 ^ k * p * q + 2 ^ k * r =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "using Y YY  auxicalc"], ["proof (prove)\nusing this:\n  2 ^ k * p * q + 2 ^ k * r =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n  Esigma (2 ^ k * p * q) =\n  2 ^ (3 * k + 1 - l) * f\\<^sup>2 - 2 ^ (2 * k - l) * f\\<^sup>2\n  2 ^ (2 * k - l) * f\\<^sup>2 = 2 ^ (2 * k - l) * f + 2 ^ (2 * k) * f\n\ngoal (1 subgoal):\n 1. Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r", "by simp"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r\n\ngoal (1 subgoal):\n 1. m Amic n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. m Amic n", "using Z Z1 Amicable_pair_equiv_def_conv assms One_nat_def  one_le_mult_iff\n         one_le_numeral less_imp_le_nat one_le_power"], ["proof (prove)\nusing this:\n  Esigma (2 ^ k * p * q) = Esigma (2 ^ k * r)\n  Esigma (2 ^ k * p * q) = 2 ^ k * p * q + 2 ^ k * r\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  l < k\n  1 \\<le> l\n  f = 2 ^ l + 1\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - l) * f - 1\n  q = 2 ^ k * f - 1\n  r = 2 ^ (2 * k - l) * f\\<^sup>2 - 1\n  m = 2 ^ k * p * q\n  n = 2 ^ k * r\n  1 = Suc 0\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n  (1::?'a) \\<le> numeral ?n\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n  (1::?'a) \\<le> ?a \\<Longrightarrow> (1::?'a) \\<le> ?a ^ ?n\n\ngoal (1 subgoal):\n 1. m Amic n", "by (metis prime_ge_1_nat)"], ["proof (state)\nthis:\n  m Amic n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Another approach by Euler \\cite{garciaetal1}:\\<close>"], ["", "theorem Euler_Rule_Amicable_1:\n  fixes m n a :: nat\n  assumes \"m \\<ge> 1\" and \"n \\<ge> 1\" and \"a \\<ge> 1\" \n      and \"Esigma m = Esigma n\" and \"Esigma a * Esigma m = a*(m+n)\" \n      and \"gcd a m =1\" and \"gcd a n =1\"\n      shows \"(a*m) Amic (a*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "have a: \"Esigma (a*m) =(Esigma a)*(Esigma m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma a * Esigma m", "using assms  gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  1 \\<le> n\n  1 \\<le> a\n  Esigma m = Esigma n\n  Esigma a * Esigma m = a * (m + n)\n  gcd a m = 1\n  gcd a n = 1\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma a * Esigma m", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  Esigma (a * m) = Esigma a * Esigma m\n\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "have b: \"Esigma (a*m) = Esigma (a*n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma (a * n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma (a * n)", "have c: \"Esigma (a*n) = (Esigma a)*(Esigma n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * n) = Esigma a * Esigma n", "using gcd_Esigma_mult \\<open>gcd a n =1\\<close>"], ["proof (prove)\nusing this:\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  gcd a n = 1\n\ngoal (1 subgoal):\n 1. Esigma (a * n) = Esigma a * Esigma n", "by (metis assms(4) a )"], ["proof (state)\nthis:\n  Esigma (a * n) = Esigma a * Esigma n\n\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma (a * n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma (a * n)", "using c a assms"], ["proof (prove)\nusing this:\n  Esigma (a * n) = Esigma a * Esigma n\n  Esigma (a * m) = Esigma a * Esigma m\n  1 \\<le> m\n  1 \\<le> n\n  1 \\<le> a\n  Esigma m = Esigma n\n  Esigma a * Esigma m = a * (m + n)\n  gcd a m = 1\n  gcd a n = 1\n\ngoal (1 subgoal):\n 1. Esigma (a * m) = Esigma (a * n)", "by simp"], ["proof (state)\nthis:\n  Esigma (a * m) = Esigma (a * n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * m) = Esigma (a * n)\n\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "have d: \" Esigma (a*m) = a*m + a*n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * m) = a * m + a * n", "using a assms"], ["proof (prove)\nusing this:\n  Esigma (a * m) = Esigma a * Esigma m\n  1 \\<le> m\n  1 \\<le> n\n  1 \\<le> a\n  Esigma m = Esigma n\n  Esigma a * Esigma m = a * (m + n)\n  gcd a m = 1\n  gcd a n = 1\n\ngoal (1 subgoal):\n 1. Esigma (a * m) = a * m + a * n", "by (simp add: add_mult_distrib2)"], ["proof (state)\nthis:\n  Esigma (a * m) = a * m + a * n\n\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "using a b d Amicable_pair_equiv_def_conv assms"], ["proof (prove)\nusing this:\n  Esigma (a * m) = Esigma a * Esigma m\n  Esigma (a * m) = Esigma (a * n)\n  Esigma (a * m) = a * m + a * n\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  1 \\<le> m\n  1 \\<le> n\n  1 \\<le> a\n  Esigma m = Esigma n\n  Esigma a * Esigma m = a * (m + n)\n  gcd a m = 1\n  gcd a n = 1\n\ngoal (1 subgoal):\n 1. (a * m) Amic (a * n)", "by (simp add: Suc_leI)"], ["proof (state)\nthis:\n  (a * m) Amic (a * n)\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>Th\\={a}bit ibn Qurra's Rule and more examples\\<close>"], ["", "text\\<open>Euler's Rule (theorem Euler\\_Rule\\_Amicable) is actually a generalisation of the following \nrule by Th\\={a}bit ibn Qurra from the 9th century \\cite{garciaetal1}. Th\\={a}bit ibn Qurra's Rule is \nthe special case for $l=1$ thus $f=3$.\\<close>"], ["", "corollary Thabit_ibn_Qurra_Rule_Amicable:\n  fixes k l f p q r :: nat\n  assumes \"k > 1\" and \"prime p\" and \"prime q\"  and \"prime r\"\n  and \"p = 2^(k-1) * 3 - 1\" and \"q = 2^k * 3 - 1\" and \"r = 2^(2*k-1) * 9 - 1\"\n  shows \"((2^k)*p*q) Amic ((2^k)*r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "obtain l where l:\"l = (1::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l. l = 1 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by simp"], ["proof (state)\nthis:\n  l = 1\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "obtain f where f:\"f = (3::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f. f = 3 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by simp"], ["proof (state)\nthis:\n  f = 3\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "have \"k >l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l < k", "using l assms"], ["proof (prove)\nusing this:\n  l = 1\n  1 < k\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - 1) * 3 - 1\n  q = 2 ^ k * 3 - 1\n  r = 2 ^ (2 * k - 1) * 9 - 1\n\ngoal (1 subgoal):\n 1. l < k", "by simp"], ["proof (state)\nthis:\n  l < k\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "have  \"f =2^1+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = 2 ^ 1 + 1", "using f"], ["proof (prove)\nusing this:\n  f = 3\n\ngoal (1 subgoal):\n 1. f = 2 ^ 1 + 1", "by simp"], ["proof (state)\nthis:\n  f = 2 ^ 1 + 1\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "have \" r =(2^(2*k-1))*(3^2)-1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = 2 ^ (2 * k - 1) * 3\\<^sup>2 - 1", "using assms"], ["proof (prove)\nusing this:\n  1 < k\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - 1) * 3 - 1\n  q = 2 ^ k * 3 - 1\n  r = 2 ^ (2 * k - 1) * 9 - 1\n\ngoal (1 subgoal):\n 1. r = 2 ^ (2 * k - 1) * 3\\<^sup>2 - 1", "by simp"], ["proof (state)\nthis:\n  r = 2 ^ (2 * k - 1) * 3\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "using assms Euler_Rule_Amicable  \\<open>f =2^1 +1\\<close>\n     \\<open> r =(2^(2*k -1))*(3^2) -1\\<close> l f"], ["proof (prove)\nusing this:\n  1 < k\n  prime p\n  prime q\n  prime r\n  p = 2 ^ (k - 1) * 3 - 1\n  q = 2 ^ k * 3 - 1\n  r = 2 ^ (2 * k - 1) * 9 - 1\n  \\<lbrakk>?l < ?k; 1 \\<le> ?l; ?f = 2 ^ ?l + 1; prime ?p; prime ?q;\n   prime ?r; ?p = 2 ^ (?k - ?l) * ?f - 1; ?q = 2 ^ ?k * ?f - 1;\n   ?r = 2 ^ (2 * ?k - ?l) * ?f\\<^sup>2 - 1; ?m = 2 ^ ?k * ?p * ?q;\n   ?n = 2 ^ ?k * ?r\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  f = 2 ^ 1 + 1\n  r = 2 ^ (2 * k - 1) * 3\\<^sup>2 - 1\n  l = 1\n  f = 3\n\ngoal (1 subgoal):\n 1. (2 ^ k * p * q) Amic (2 ^ k * r)", "by (metis le_numeral_extra(4))"], ["proof (state)\nthis:\n  (2 ^ k * p * q) Amic (2 ^ k * r)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>In the following three example of amicable pairs, instead of evaluating the sum of the divisors \nor using the properties of Euler's sigma function as it was done in the previous examples, we \nprove amicability more directly as we can apply Th\\={a}bit ibn Qurra's Rule.\\<close>"], ["", "text\\<open>The following is the first example of an amicable pair known to the Pythagoreans and can be\nderived from Th\\={a}bit ibn Qurra's Rule with $k=2$ \\cite{garciaetal1}.\\<close>"], ["", "lemma Amicable_Example_Pythagoras:\n  shows \"220 Amic 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 Amic 284", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 220 Amic 284", "have a: \"(2::nat)>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 2", "by simp"], ["proof (state)\nthis:\n  1 < 2\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have b: \"prime((3::nat)*(2^(2-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ (2 - 1) - 1)", "by simp"], ["proof (state)\nthis:\n  prime (3 * 2 ^ (2 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have c: \"prime((3::nat)*(2^2)-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  prime (3 * 2\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have d: \"prime((9::nat)*(2^(2*2-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (9 * 2 ^ (2 * 2 - 1) - 1)", "by simp"], ["proof (state)\nthis:\n  prime (9 * 2 ^ (2 * 2 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have e: \"((2^2)*(3*(2^(2-1))-1)*(3*(2^2)-1))Amic((2^2)*(9*(2^(2*2-1))-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2\\<^sup>2 * (3 * 2 ^ (2 - 1) - 1) * (3 * 2\\<^sup>2 - 1)) Amic\n    (2\\<^sup>2 * (9 * 2 ^ (2 * 2 - 1) - 1))", "using Thabit_ibn_Qurra_Rule_Amicable a b c d"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < ?k; prime ?p; prime ?q; prime ?r; ?p = 2 ^ (?k - 1) * 3 - 1;\n   ?q = 2 ^ ?k * 3 - 1; ?r = 2 ^ (2 * ?k - 1) * 9 - 1\\<rbrakk>\n  \\<Longrightarrow> (2 ^ ?k * ?p * ?q) Amic (2 ^ ?k * ?r)\n  1 < 2\n  prime (3 * 2 ^ (2 - 1) - 1)\n  prime (3 * 2\\<^sup>2 - 1)\n  prime (9 * 2 ^ (2 * 2 - 1) - 1)\n\ngoal (1 subgoal):\n 1. (2\\<^sup>2 * (3 * 2 ^ (2 - 1) - 1) * (3 * 2\\<^sup>2 - 1)) Amic\n    (2\\<^sup>2 * (9 * 2 ^ (2 * 2 - 1) - 1))", "by (metis mult.commute)"], ["proof (state)\nthis:\n  (2\\<^sup>2 * (3 * 2 ^ (2 - 1) - 1) * (3 * 2\\<^sup>2 - 1)) Amic\n  (2\\<^sup>2 * (9 * 2 ^ (2 * 2 - 1) - 1))\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have f: \"((2::nat)^2)*5*11 = 220\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sup>2 * 5 * 11 = 220", "by simp"], ["proof (state)\nthis:\n  2\\<^sup>2 * 5 * 11 = 220\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "have g: \"((2::nat)^2)*71 = 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sup>2 * 71 = 284", "by simp"], ["proof (state)\nthis:\n  2\\<^sup>2 * 71 = 284\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 Amic 284", "using  e f g"], ["proof (prove)\nusing this:\n  (2\\<^sup>2 * (3 * 2 ^ (2 - 1) - 1) * (3 * 2\\<^sup>2 - 1)) Amic\n  (2\\<^sup>2 * (9 * 2 ^ (2 * 2 - 1) - 1))\n  2\\<^sup>2 * 5 * 11 = 220\n  2\\<^sup>2 * 71 = 284\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "by simp"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The following example of an amicable pair was (re)discovered by Fermat and can be derived from\nTh\\={a}bit ibn Qurra's Rule with $k=4$ \\cite{garciaetal1}.\\<close>"], ["", "lemma Amicable_Example_Fermat:\n  shows  \"17296 Amic 18416\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have a: \"(4::nat)>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 4", "by simp"], ["proof (state)\nthis:\n  1 < 4\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have b: \"prime((3::nat)*(2^(4-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ (4 - 1) - 1)", "by simp"], ["proof (state)\nthis:\n  prime (3 * 2 ^ (4 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have c: \"prime((3::nat)*(2^4)-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ 4 - 1)", "by simp"], ["proof (state)\nthis:\n  prime (3 * 2 ^ 4 - 1)\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have d: \"prime (1151::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 1151", "by (pratt (code))"], ["proof (state)\nthis:\n  prime 1151\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have e: \"(1151::nat) = 9*(2^(2*4-1))-1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1151 = 9 * 2 ^ (2 * 4 - 1) - 1", "by simp"], ["proof (state)\nthis:\n  1151 = 9 * 2 ^ (2 * 4 - 1) - 1\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have f: \"prime((9::nat)*(2^(2*4-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (9 * 2 ^ (2 * 4 - 1) - 1)", "using d e"], ["proof (prove)\nusing this:\n  prime 1151\n  1151 = 9 * 2 ^ (2 * 4 - 1) - 1\n\ngoal (1 subgoal):\n 1. prime (9 * 2 ^ (2 * 4 - 1) - 1)", "by metis"], ["proof (state)\nthis:\n  prime (9 * 2 ^ (2 * 4 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have g: \"((2^4)*(3*(2^(4-1))-1)*(3*(2^4)-1)) Amic((2^4)*(9*(2^(2*4-1))-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ 4 * (3 * 2 ^ (4 - 1) - 1) * (3 * 2 ^ 4 - 1)) Amic\n    (2 ^ 4 * (9 * 2 ^ (2 * 4 - 1) - 1))", "using  Thabit_ibn_Qurra_Rule_Amicable a b c f"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < ?k; prime ?p; prime ?q; prime ?r; ?p = 2 ^ (?k - 1) * 3 - 1;\n   ?q = 2 ^ ?k * 3 - 1; ?r = 2 ^ (2 * ?k - 1) * 9 - 1\\<rbrakk>\n  \\<Longrightarrow> (2 ^ ?k * ?p * ?q) Amic (2 ^ ?k * ?r)\n  1 < 4\n  prime (3 * 2 ^ (4 - 1) - 1)\n  prime (3 * 2 ^ 4 - 1)\n  prime (9 * 2 ^ (2 * 4 - 1) - 1)\n\ngoal (1 subgoal):\n 1. (2 ^ 4 * (3 * 2 ^ (4 - 1) - 1) * (3 * 2 ^ 4 - 1)) Amic\n    (2 ^ 4 * (9 * 2 ^ (2 * 4 - 1) - 1))", "by (metis mult.commute)"], ["proof (state)\nthis:\n  (2 ^ 4 * (3 * 2 ^ (4 - 1) - 1) * (3 * 2 ^ 4 - 1)) Amic\n  (2 ^ 4 * (9 * 2 ^ (2 * 4 - 1) - 1))\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have h: \"((2::nat)^4)*23*47 = 17296\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 4 * 23 * 47 = 17296", "by simp"], ["proof (state)\nthis:\n  2 ^ 4 * 23 * 47 = 17296\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "have i: \"(((2::nat)^4)*1151) = 18416\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 4 * 1151 = 18416", "by simp"], ["proof (state)\nthis:\n  2 ^ 4 * 1151 = 18416\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "using g h i"], ["proof (prove)\nusing this:\n  (2 ^ 4 * (3 * 2 ^ (4 - 1) - 1) * (3 * 2 ^ 4 - 1)) Amic\n  (2 ^ 4 * (9 * 2 ^ (2 * 4 - 1) - 1))\n  2 ^ 4 * 23 * 47 = 17296\n  2 ^ 4 * 1151 = 18416\n\ngoal (1 subgoal):\n 1. 17296 Amic 18416", "by simp"], ["proof (state)\nthis:\n  17296 Amic 18416\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The following example of an amicable pair was (re)discovered by Descartes and can be derived \nfrom Th\\={a}bit ibn Qurra's Rule with $k=7$ \\cite{garciaetal1}.\\<close>"], ["", "lemma Amicable_Example_Descartes:\n  shows \"9363584 Amic 9437056\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have a: \"(7::nat)>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 7", "by simp"], ["proof (state)\nthis:\n  1 < 7\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have b: \"prime (191::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 191", "by (pratt (code))"], ["proof (state)\nthis:\n  prime 191\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have c: \"((3::nat)* (2^(7-1))-1) =191\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * 2 ^ (7 - 1) - 1 = 191", "by simp"], ["proof (state)\nthis:\n  3 * 2 ^ (7 - 1) - 1 = 191\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have d: \"prime((3::nat)* (2^(7-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ (7 - 1) - 1)", "using b c"], ["proof (prove)\nusing this:\n  prime 191\n  3 * 2 ^ (7 - 1) - 1 = 191\n\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ (7 - 1) - 1)", "by metis"], ["proof (state)\nthis:\n  prime (3 * 2 ^ (7 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have e: \"prime (383::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 383", "by (pratt (code))"], ["proof (state)\nthis:\n  prime 383\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have f: \"(3::nat)*(2^7)-1 = 383\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * 2 ^ 7 - 1 = 383", "by simp"], ["proof (state)\nthis:\n  3 * 2 ^ 7 - 1 = 383\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have g: \"prime ((3::nat)*(2^7)-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ 7 - 1)", "using e f"], ["proof (prove)\nusing this:\n  prime 383\n  3 * 2 ^ 7 - 1 = 383\n\ngoal (1 subgoal):\n 1. prime (3 * 2 ^ 7 - 1)", "by metis"], ["proof (state)\nthis:\n  prime (3 * 2 ^ 7 - 1)\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have h: \"prime (73727::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 73727", "by (pratt (code))"], ["proof (state)\nthis:\n  prime 73727\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have i: \"(9::nat)*(2^(2*7-1))-1 = 73727\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 9 * 2 ^ (2 * 7 - 1) - 1 = 73727", "by simp"], ["proof (state)\nthis:\n  9 * 2 ^ (2 * 7 - 1) - 1 = 73727\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have j: \"prime ((9::nat)*(2^(2*7-1))-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (9 * 2 ^ (2 * 7 - 1) - 1)", "using i h"], ["proof (prove)\nusing this:\n  9 * 2 ^ (2 * 7 - 1) - 1 = 73727\n  prime 73727\n\ngoal (1 subgoal):\n 1. prime (9 * 2 ^ (2 * 7 - 1) - 1)", "by metis"], ["proof (state)\nthis:\n  prime (9 * 2 ^ (2 * 7 - 1) - 1)\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have k: \"((2^7)*(3*(2^(7-1))-1)*(3*(2^7)-1))Amic((2^7)*(9*(2^(2*7-1))-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ 7 * (3 * 2 ^ (7 - 1) - 1) * (3 * 2 ^ 7 - 1)) Amic\n    (2 ^ 7 * (9 * 2 ^ (2 * 7 - 1) - 1))", "using  Thabit_ibn_Qurra_Rule_Amicable a d g j"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < ?k; prime ?p; prime ?q; prime ?r; ?p = 2 ^ (?k - 1) * 3 - 1;\n   ?q = 2 ^ ?k * 3 - 1; ?r = 2 ^ (2 * ?k - 1) * 9 - 1\\<rbrakk>\n  \\<Longrightarrow> (2 ^ ?k * ?p * ?q) Amic (2 ^ ?k * ?r)\n  1 < 7\n  prime (3 * 2 ^ (7 - 1) - 1)\n  prime (3 * 2 ^ 7 - 1)\n  prime (9 * 2 ^ (2 * 7 - 1) - 1)\n\ngoal (1 subgoal):\n 1. (2 ^ 7 * (3 * 2 ^ (7 - 1) - 1) * (3 * 2 ^ 7 - 1)) Amic\n    (2 ^ 7 * (9 * 2 ^ (2 * 7 - 1) - 1))", "by (metis mult.commute)"], ["proof (state)\nthis:\n  (2 ^ 7 * (3 * 2 ^ (7 - 1) - 1) * (3 * 2 ^ 7 - 1)) Amic\n  (2 ^ 7 * (9 * 2 ^ (2 * 7 - 1) - 1))\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have l: \"((2::nat)^7)* 191* 383 = 9363584\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 7 * 191 * 383 = 9363584", "by simp"], ["proof (state)\nthis:\n  2 ^ 7 * 191 * 383 = 9363584\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "have m: \"(((2::nat)^7)* 73727) = 9437056\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 7 * 73727 = 9437056", "by simp"], ["proof (state)\nthis:\n  2 ^ 7 * 73727 = 9437056\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "using a k l"], ["proof (prove)\nusing this:\n  1 < 7\n  (2 ^ 7 * (3 * 2 ^ (7 - 1) - 1) * (3 * 2 ^ 7 - 1)) Amic\n  (2 ^ 7 * (9 * 2 ^ (2 * 7 - 1) - 1))\n  2 ^ 7 * 191 * 383 = 9363584\n\ngoal (1 subgoal):\n 1. 9363584 Amic 9437056", "by simp"], ["proof (state)\nthis:\n  9363584 Amic 9437056\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>In fact, the Amicable Pair (220, 284) is Regular and of type (2,1):\\<close>"], ["", "lemma regularAmicPairExample: \"regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have a: \"220 Amic 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 Amic 284", "using Amicable_Example_Pythagoras"], ["proof (prove)\nusing this:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "by simp"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have b: \"gcd (220::nat) (284::nat) = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd 220 284 = 4", "by eval"], ["proof (state)\nthis:\n  gcd 220 284 = 4\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have c: \"(220::nat) = 55*4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 = 55 * 4", "by simp"], ["proof (state)\nthis:\n  220 = 55 * 4\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have d: \"(284::nat) = 71*4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 284 = 71 * 4", "by simp"], ["proof (state)\nthis:\n  284 = 71 * 4\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have e: \"squarefree (55::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree 55", "using squarefree_def"], ["proof (prove)\nusing this:\n  squarefree ?n =\n  (\\<forall>x. x\\<^sup>2 dvd ?n \\<longrightarrow> x dvd (1::?'a))\n\ngoal (1 subgoal):\n 1. squarefree 55", "by eval"], ["proof (state)\nthis:\n  squarefree 55\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have f: \"squarefree (71::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree 71", "using squarefree_def"], ["proof (prove)\nusing this:\n  squarefree ?n =\n  (\\<forall>x. x\\<^sup>2 dvd ?n \\<longrightarrow> x dvd (1::?'a))\n\ngoal (1 subgoal):\n 1. squarefree 71", "by eval"], ["proof (state)\nthis:\n  squarefree 71\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have g: \"gcd (4::nat) (55::nat) =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd 4 55 = 1", "by eval"], ["proof (state)\nthis:\n  gcd 4 55 = 1\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have h: \"gcd (4::nat) (71::nat) =1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd 4 71 = 1", "by eval"], ["proof (state)\nthis:\n  gcd 4 71 = 1\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have A: \"regularAmicPair 220 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regularAmicPair 220 284", "by (simp add: a b e g f h gcd.commute regularAmicPair_def)"], ["proof (state)\nthis:\n  regularAmicPair 220 284\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have B: \"(card {i.\\<exists> N. ( 220::nat) = N*(4::nat) \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4}) = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "obtain N::nat where N: \"(220::nat) = N* 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N. 220 = N * 4 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis  c)"], ["proof (state)\nthis:\n  220 = N * 4\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have NN:\"N=55\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = 55", "using N"], ["proof (prove)\nusing this:\n  220 = N * 4\n\ngoal (1 subgoal):\n 1. N = 55", "by simp"], ["proof (state)\nthis:\n  N = 55\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K1: \"prime(5::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 5", "by simp"], ["proof (state)\nthis:\n  prime 5\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K2: \"prime(11::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 11", "by simp"], ["proof (state)\nthis:\n  prime 11\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have KK2: \" \\<not> prime (55::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime 55", "by simp"], ["proof (state)\nthis:\n  \\<not> prime 55\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have KK3: \" \\<not> prime (1::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime 1", "by simp"], ["proof (state)\nthis:\n  \\<not> prime 1\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K: \"set(divisors_nat 55 ) = {1, 5, 11, 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 55) = {1, 5, 11, 55}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 55) = {1, 5, 11, 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have KK: \"{i. i dvd (55::nat)} = {1, 5, 11, 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i dvd 55} = {1, 5, 11, 55}", "using K divisors_nat  divisors_nat_def"], ["proof (prove)\nusing this:\n  set (divisors_nat 55) = {1, 5, 11, 55}\n  ?n \\<noteq> 0 \\<Longrightarrow> set (divisors_nat ?n) = {p. p dvd ?n}\n  distinct (divisors_nat ?n)\n  divisors_nat 0 = []\n  divisors_nat ?n \\<equiv>\n  if ?n = 0 then []\n  else remdups_adj\n        (sort (map prod_list (subseqs (prime_factorization_nat ?n))))\n\ngoal (1 subgoal):\n 1. {i. i dvd 55} = {1, 5, 11, 55}", "by auto"], ["proof (state)\nthis:\n  {i. i dvd 55} = {1, 5, 11, 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K3 : \"\\<not> (5::nat) dvd 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 5 dvd 4", "by simp"], ["proof (state)\nthis:\n  \\<not> 5 dvd 4\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K4 : \"\\<not> (11::nat) dvd 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 11 dvd 4", "by simp"], ["proof (state)\nthis:\n  \\<not> 11 dvd 4\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K55: \"(1::nat) \\<notin> {i. prime i \\<and> i dvd 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> {i. prime i \\<and> i dvd 55}", "using KK3"], ["proof (prove)\nusing this:\n  \\<not> prime 1\n\ngoal (1 subgoal):\n 1. 1 \\<notin> {i. prime i \\<and> i dvd 55}", "by simp"], ["proof (state)\nthis:\n  1 \\<notin> {i. prime i \\<and> i dvd 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K56: \"(55::nat) \\<notin> {i. prime i \\<and> i dvd 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 55 \\<notin> {i. prime i \\<and> i dvd 55}", "using KK2"], ["proof (prove)\nusing this:\n  \\<not> prime 55\n\ngoal (1 subgoal):\n 1. 55 \\<notin> {i. prime i \\<and> i dvd 55}", "by simp"], ["proof (state)\nthis:\n  55 \\<notin> {i. prime i \\<and> i dvd 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K57: \"(5::nat) \\<in> {i. prime i \\<and> i dvd 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5 \\<in> {i. prime i \\<and> i dvd 55}", "using K1"], ["proof (prove)\nusing this:\n  prime 5\n\ngoal (1 subgoal):\n 1. 5 \\<in> {i. prime i \\<and> i dvd 55}", "by simp"], ["proof (state)\nthis:\n  5 \\<in> {i. prime i \\<and> i dvd 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K58: \"(11::nat) \\<in> {i. prime i \\<and> i dvd 55}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 11 \\<in> {i. prime i \\<and> i dvd 55}", "using K2"], ["proof (prove)\nusing this:\n  prime 11\n\ngoal (1 subgoal):\n 1. 11 \\<in> {i. prime i \\<and> i dvd 55}", "by simp"], ["proof (state)\nthis:\n  11 \\<in> {i. prime i \\<and> i dvd 55}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K5:  \"{i.( prime i \\<and> i dvd (55::nat) \\<and> \\<not> i dvd 4)} = {5, 11}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}", "have K66: \"{i.(prime i \\<and> i dvd (55::nat) \\<and> \\<not> i dvd 4)}=\n{i. prime i} \\<inter> {i. i dvd 55} \\<inter> { i. \\<not> i dvd 4}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} =\n    {i. prime i} \\<inter> {i. i dvd 55} \\<inter> {i. \\<not> i dvd 4}", "by blast"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} =\n  {i. prime i} \\<inter> {i. i dvd 55} \\<inter> {i. \\<not> i dvd 4}\n\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}", "using K66  K K1 K2 KK2 KK3  K3 K4 KK K55 K56 K57 K58 divisors_nat_def\n          divisors_nat"], ["proof (prove)\nusing this:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} =\n  {i. prime i} \\<inter> {i. i dvd 55} \\<inter> {i. \\<not> i dvd 4}\n  set (divisors_nat 55) = {1, 5, 11, 55}\n  prime 5\n  prime 11\n  \\<not> prime 55\n  \\<not> prime 1\n  \\<not> 5 dvd 4\n  \\<not> 11 dvd 4\n  {i. i dvd 55} = {1, 5, 11, 55}\n  1 \\<notin> {i. prime i \\<and> i dvd 55}\n  55 \\<notin> {i. prime i \\<and> i dvd 55}\n  5 \\<in> {i. prime i \\<and> i dvd 55}\n  11 \\<in> {i. prime i \\<and> i dvd 55}\n  divisors_nat ?n \\<equiv>\n  if ?n = 0 then []\n  else remdups_adj\n        (sort (map prod_list (subseqs (prime_factorization_nat ?n))))\n  ?n \\<noteq> 0 \\<Longrightarrow> set (divisors_nat ?n) = {p. p dvd ?n}\n  distinct (divisors_nat ?n)\n  divisors_nat 0 = []\n\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}", "by auto"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}\n\ngoal:\nNo subgoals!", "(*slow*)"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "have K6:  \"card ({(5::nat), (11::nat)}) = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {5, 11} = 2", "by simp"], ["proof (state)\nthis:\n  card {5, 11} = 2\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "using K5 K6"], ["proof (prove)\nusing this:\n  {i. prime i \\<and> i dvd 55 \\<and> \\<not> i dvd 4} = {5, 11}\n  card {5, 11} = 2\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            220 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    2", "by simp"], ["proof (state)\nthis:\n  card\n   {i. \\<exists>N.\n          220 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {i. \\<exists>N.\n          220 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  2\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "have C: \"(card {i. \\<exists>N. (284::nat) = N*4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} ) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "obtain N::nat where N: \"284 = N*4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N. 284 = N * 4 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis d)"], ["proof (state)\nthis:\n  284 = N * 4\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have NN: \"N= 71\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = 71", "using N"], ["proof (prove)\nusing this:\n  284 = N * 4\n\ngoal (1 subgoal):\n 1. N = 71", "by simp"], ["proof (state)\nthis:\n  N = 71\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have K: \"set(divisors_nat 71 ) = {1, 71 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (divisors_nat 71) = {1, 71}", "by eval"], ["proof (state)\nthis:\n  set (divisors_nat 71) = {1, 71}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have KK: \"{i. i dvd (71::nat)} = {1, 71}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i dvd 71} = {1, 71}", "using K divisors_nat  divisors_nat_def"], ["proof (prove)\nusing this:\n  set (divisors_nat 71) = {1, 71}\n  ?n \\<noteq> 0 \\<Longrightarrow> set (divisors_nat ?n) = {p. p dvd ?n}\n  distinct (divisors_nat ?n)\n  divisors_nat 0 = []\n  divisors_nat ?n \\<equiv>\n  if ?n = 0 then []\n  else remdups_adj\n        (sort (map prod_list (subseqs (prime_factorization_nat ?n))))\n\ngoal (1 subgoal):\n 1. {i. i dvd 71} = {1, 71}", "by auto"], ["proof (state)\nthis:\n  {i. i dvd 71} = {1, 71}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have K55:\"(1::nat) \\<notin> {i. prime i \\<and> i dvd 71}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<notin> {i. prime i \\<and> i dvd 71}", "by simp"], ["proof (state)\nthis:\n  1 \\<notin> {i. prime i \\<and> i dvd 71}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have K58: \"(71::nat) \\<in> {i. prime i \\<and> i dvd 71}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 71 \\<in> {i. prime i \\<and> i dvd 71}", "by simp"], ["proof (state)\nthis:\n  71 \\<in> {i. prime i \\<and> i dvd 71}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have K5: \"{i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {(71::nat)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}", "have K66: \"{i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4}= \n{i. prime i} \\<inter> {i. i dvd 71} \\<inter> { i. \\<not> i dvd 4}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd (71::'a) \\<and> \\<not> i dvd (4::'a)} =\n    {i. prime i} \\<inter> {i. i dvd (71::'a)} \\<inter>\n    {i. \\<not> i dvd (4::'a)}", "by blast"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd (71::?'a1) \\<and> \\<not> i dvd (4::?'a1)} =\n  {i. prime i} \\<inter> {i. i dvd (71::?'a1)} \\<inter>\n  {i. \\<not> i dvd (4::?'a1)}\n\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}", "using  K KK K55 K58"], ["proof (prove)\nusing this:\n  set (divisors_nat 71) = {1, 71}\n  {i. i dvd 71} = {1, 71}\n  1 \\<notin> {i. prime i \\<and> i dvd 71}\n  71 \\<in> {i. prime i \\<and> i dvd 71}\n\ngoal (1 subgoal):\n 1. {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}", "by (auto simp add: divisors_nat_def K66 divisors_nat)"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "have K6: \"card ({(71::nat)}) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {71} = 1", "by simp"], ["proof (state)\nthis:\n  card {71} = 1\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "using K5 K6"], ["proof (prove)\nusing this:\n  {i. prime i \\<and> i dvd 71 \\<and> \\<not> i dvd 4} = {71}\n  card {71} = 1\n\ngoal (1 subgoal):\n 1. card\n     {i. \\<exists>N.\n            284 = N * 4 \\<and>\n            prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   {i. \\<exists>N.\n          284 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {i. \\<exists>N.\n          284 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  1\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "using A B C"], ["proof (prove)\nusing this:\n  regularAmicPair 220 284\n  card\n   {i. \\<exists>N.\n          220 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  2\n  card\n   {i. \\<exists>N.\n          284 = N * 4 \\<and> prime i \\<and> i dvd N \\<and> \\<not> i dvd 4} =\n  1\n\ngoal (1 subgoal):\n 1. regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]", "by (simp add: typeAmic_def b)"], ["proof (state)\nthis:\n  regularAmicPair 220 284 \\<and> typeAmic 220 284 = [2, 1]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abundant220ex: \"abundant_number 220\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abundant_number 220", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. abundant_number 220", "have \"220 Amic 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 Amic 284", "using Amicable_Example_Pythagoras"], ["proof (prove)\nusing this:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "by simp"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. abundant_number 220", "moreover"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. abundant_number 220", "have \"(220::nat) < 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 < 284", "by simp"], ["proof (state)\nthis:\n  220 < 284\n\ngoal (1 subgoal):\n 1. abundant_number 220", "ultimately"], ["proof (chain)\npicking this:\n  220 Amic 284\n  220 < 284", "show ?thesis"], ["proof (prove)\nusing this:\n  220 Amic 284\n  220 < 284\n\ngoal (1 subgoal):\n 1. abundant_number 220", "using Amicable_pair_abundant Amicable_pair_sym"], ["proof (prove)\nusing this:\n  220 Amic 284\n  220 < 284\n  \\<lbrakk>?n < ?m; ?m Amic ?n\\<rbrakk> \\<Longrightarrow> abundant_number ?n\n  ?m Amic ?n \\<Longrightarrow> ?n Amic ?m\n\ngoal (1 subgoal):\n 1. abundant_number 220", "by blast"], ["proof (state)\nthis:\n  abundant_number 220\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deficient284ex: \"deficient_number 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deficient_number 284", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. deficient_number 284", "have \"220 Amic 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 Amic 284", "using Amicable_Example_Pythagoras"], ["proof (prove)\nusing this:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. 220 Amic 284", "by simp"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. deficient_number 284", "moreover"], ["proof (state)\nthis:\n  220 Amic 284\n\ngoal (1 subgoal):\n 1. deficient_number 284", "have \"(220::nat) < 284\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 220 < 284", "by simp"], ["proof (state)\nthis:\n  220 < 284\n\ngoal (1 subgoal):\n 1. deficient_number 284", "ultimately"], ["proof (chain)\npicking this:\n  220 Amic 284\n  220 < 284", "show ?thesis"], ["proof (prove)\nusing this:\n  220 Amic 284\n  220 < 284\n\ngoal (1 subgoal):\n 1. deficient_number 284", "using Amicable_pair_deficient Amicable_pair_sym"], ["proof (prove)\nusing this:\n  220 Amic 284\n  220 < 284\n  \\<lbrakk>?n < ?m; ?m Amic ?n\\<rbrakk>\n  \\<Longrightarrow> deficient_number ?m\n  ?m Amic ?n \\<Longrightarrow> ?n Amic ?m\n\ngoal (1 subgoal):\n 1. deficient_number 284", "by blast"], ["proof (state)\nthis:\n  deficient_number 284\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>Te Riele's Rule and Borho's Rule with breeders\\<close>"], ["", "text\\<open>With the following rule \\cite{garciaetal1} we can get an amicable pair from a known amicable \npair under certain conditions.\\<close>"], ["", "theorem teRiele_Rule_Amicable: \n  fixes a u p r c q :: nat\n  assumes \"a \\<ge> 1\" and \"u \\<ge> 1\"\n      and \"prime p\" and \"prime r\" and \"prime c\" and \"prime q\" and \"r \\<noteq> c\" \n      and \"\\<not>(p dvd a)\" and \"(a*u) Amic (a*p)\" and \"gcd a (r*c)=1\"\n      and \"q = r+c+u\" and \"gcd (a*u) q =1\" and \"r*c = p*(r +c+ u) + p+u\"\n  shows \"(a*u*q) Amic (a*r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have \"p+1 >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p + 1", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. 0 < p + 1", "by simp"], ["proof (state)\nthis:\n  0 < p + 1\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have Z1: \" r*c = p*q+p+u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * c = p * q + p + u", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. r * c = p * q + p + u", "by auto"], ["proof (state)\nthis:\n  r * c = p * q + p + u\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have Z2: \"(r+1)*(c+1) = (q+1)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "have y: \"(q+1)*(p+1) = q*p + q+ p+1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (q + 1) * (p + 1) = q * p + q + p + 1", "by simp"], ["proof (state)\nthis:\n  (q + 1) * (p + 1) = q * p + q + p + 1\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "have yy: \"(r+1)*(c+1) = r*c + r+ c+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = r * c + r + c + 1", "by simp"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = r * c + r + c + 1\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "using assms y Z1 yy"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  (q + 1) * (p + 1) = q * p + q + p + 1\n  r * c = p * q + p + u\n  (r + 1) * (c + 1) = r * c + r + c + 1\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (q + 1) * (p + 1)", "by simp"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = (q + 1) * (p + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = (q + 1) * (p + 1)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have \"Esigma(a) = (a*(u+p)/(p+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "have d: \"Esigma (a*p) = (Esigma a)*(Esigma p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * p) = Esigma a * Esigma p", "using assms gcd_Esigma_mult \\<open>prime p\\<close> \\<open>\\<not> (p dvd a)\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n  prime p\n  \\<not> p dvd a\n\ngoal (1 subgoal):\n 1. Esigma (a * p) = Esigma a * Esigma p", "by (metis gcd_unique_nat prime_nat_iff)"], ["proof (state)\nthis:\n  Esigma (a * p) = Esigma a * Esigma p\n\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "have dd : \"Esigma (a*p) =(Esigma a)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * p) = Esigma a * (p + 1)", "using d assms  prime_sum_div"], ["proof (prove)\nusing this:\n  Esigma (a * p) = Esigma a * Esigma p\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n\ngoal (1 subgoal):\n 1. Esigma (a * p) = Esigma a * (p + 1)", "by simp"], ["proof (state)\nthis:\n  Esigma (a * p) = Esigma a * (p + 1)\n\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "have ddd: \"Esigma (a*p) = a*(u+p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * p) = a * (u + p)", "using assms Amicable_pair_def\n        Amicable_pair_equiv_def"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  ?m Amic ?n \\<equiv> ?m = aliquot_sum ?n \\<and> ?n = aliquot_sum ?m\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * p) = a * (u + p)", "by (smt One_nat_def add_mult_distrib2 one_le_mult_iff prime_ge_1_nat)"], ["proof (state)\nthis:\n  Esigma (a * p) = a * (u + p)\n\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "using d dd ddd Esigmanotzero assms(3) dvd_triv_right\n        nonzero_mult_div_cancel_right prime_nat_iff prime_sum_div real_of_nat_div"], ["proof (prove)\nusing this:\n  Esigma (a * p) = Esigma a * Esigma p\n  Esigma (a * p) = Esigma a * (p + 1)\n  Esigma (a * p) = a * (u + p)\n  1 \\<le> ?n \\<Longrightarrow> 1 \\<le> Esigma ?n\n  prime p\n  ?a dvd ?b * ?a\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow> ?a * ?b div ?b = ?a\n  prime ?n =\n  (1 < ?n \\<and>\n   (\\<forall>m. m dvd ?n \\<longrightarrow> m = 1 \\<or> m = ?n))\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n  ?d dvd ?n \\<Longrightarrow> real (?n div ?d) = real ?n / real ?d\n\ngoal (1 subgoal):\n 1. real (Esigma a) = real (a * (u + p)) / real (p + 1)", "by (metis \\<open>0 < p + 1\\<close> neq0_conv)"], ["proof (state)\nthis:\n  real (Esigma a) = real (a * (u + p)) / real (p + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (Esigma a) = real (a * (u + p)) / real (p + 1)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have \"Esigma(r) = (r+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma r = r + 1", "using assms prime_sum_div"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n\ngoal (1 subgoal):\n 1. Esigma r = r + 1", "by blast"], ["proof (state)\nthis:\n  Esigma r = r + 1\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have \"Esigma(c) = (c+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma c = c + 1", "using assms prime_sum_div"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  prime ?n \\<Longrightarrow> Esigma ?n = ?n + 1\n\ngoal (1 subgoal):\n 1. Esigma c = c + 1", "by blast"], ["proof (state)\nthis:\n  Esigma c = c + 1\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have \"Esigma (a*r*c) = (Esigma a)*(Esigma r)*(Esigma c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "have h: \"Esigma (a*r*c) = (Esigma a)*(Esigma (r*c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma (r * c)", "using assms gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma (r * c)", "by (metis mult.assoc mult.commute)"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * Esigma (r * c)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "have hh: \" Esigma (r*c) = (Esigma r)*(Esigma c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (r * c) = Esigma r * Esigma c", "using assms prime_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  \\<lbrakk>prime ?m; prime ?n; ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?n * Esigma ?m\n\ngoal (1 subgoal):\n 1. Esigma (r * c) = Esigma r * Esigma c", "by (metis semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  Esigma (r * c) = Esigma r * Esigma c\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "using h hh"], ["proof (prove)\nusing this:\n  Esigma (a * r * c) = Esigma a * Esigma (r * c)\n  Esigma (r * c) = Esigma r * Esigma c\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma r * Esigma c", "by auto"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * Esigma r * Esigma c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * Esigma r * Esigma c\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have A: \"Esigma (a*u*q) = Esigma (a*r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have wk: \"Esigma (a*u*q) = Esigma (a*u)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * (q + 1)", "using assms gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * (q + 1)", "by (simp add: prime_sum_div)"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * u) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have wk1: \"Esigma (a*u) = a*(u+p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u) = a * (u + p)", "using assms Amicable_pair_equiv_def"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  \\<lbrakk>?m Amic ?n; 1 \\<le> ?m; 1 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * u) = a * (u + p)", "by (smt One_nat_def add_mult_distrib2 one_le_mult_iff prime_ge_1_nat)"], ["proof (state)\nthis:\n  Esigma (a * u) = a * (u + p)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have w3: \"Esigma (a*u*q) = a*(u+p)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * (u + p) * (q + 1)", "using wk wk1"], ["proof (prove)\nusing this:\n  Esigma (a * u * q) = Esigma (a * u) * (q + 1)\n  Esigma (a * u) = a * (u + p)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * (u + p) * (q + 1)", "by simp"], ["proof (state)\nthis:\n  Esigma (a * u * q) = a * (u + p) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have w4: \"Esigma (a*r*c) =(Esigma a)*(r+1) * (c+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)", "by (simp add: \\<open>Esigma (a*r*c) = Esigma a * Esigma r * Esigma c\\<close> \\<open>Esigma c = c + 1\\<close> \n           \\<open>Esigma r = r+1\\<close>)"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have we: \"a*(u+p)*(q+1) = (Esigma a)*(r+1)*(c+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "have we1: \"(Esigma a)*(r+1)*(c+1) = (a*(u+p)/(p+1))*(r+1)*(c+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma a * (r + 1) * (c + 1)) =\n    real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1)", "by (metis \\<open>real (Esigma a) = real (a*(u+p))/real(p+1)\\<close> of_nat_mult)"], ["proof (state)\nthis:\n  real (Esigma a * (r + 1) * (c + 1)) =\n  real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1)\n\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "have we12: \" (Esigma a)*(r+1)*(c+1) = (a*(u+p)/(p+1))*(q+1)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (Esigma a * (r + 1) * (c + 1)) =\n    real (a * (u + p)) / real (p + 1) * real (q + 1) * real (p + 1)", "using we1 Z2"], ["proof (prove)\nusing this:\n  real (Esigma a * (r + 1) * (c + 1)) =\n  real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1)\n  (r + 1) * (c + 1) = (q + 1) * (p + 1)\n\ngoal (1 subgoal):\n 1. real (Esigma a * (r + 1) * (c + 1)) =\n    real (a * (u + p)) / real (p + 1) * real (q + 1) * real (p + 1)", "by (metis of_nat_mult semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  real (Esigma a * (r + 1) * (c + 1)) =\n  real (a * (u + p)) / real (p + 1) * real (q + 1) * real (p + 1)\n\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "using we12 assms"], ["proof (prove)\nusing this:\n  real (Esigma a * (r + 1) * (c + 1)) =\n  real (a * (u + p)) / real (p + 1) * real (q + 1) * real (p + 1)\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)", "by (smt  nonzero_mult_div_cancel_right of_nat_1  of_nat_add of_nat_eq_iff of_nat_le_iff\n            of_nat_mult prime_ge_1_nat times_divide_eq_left)"], ["proof (state)\nthis:\n  a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "using we w3 w4"], ["proof (prove)\nusing this:\n  a * (u + p) * (q + 1) = Esigma a * (r + 1) * (c + 1)\n  Esigma (a * u * q) = a * (u + p) * (q + 1)\n  Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "by simp"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * r * c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * r * c)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have B : \"Esigma (a*r*c) = (a*u*q)+(a*r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a1: \"(u+p)*(q+1) = (u*q+p*q+p+u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u + p) * (q + 1) = u * q + p * q + p + u", "using assms add_mult_distrib"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  (?m + ?n) * ?k = ?m * ?k + ?n * ?k\n\ngoal (1 subgoal):\n 1. (u + p) * (q + 1) = u * q + p * q + p + u", "by auto"], ["proof (state)\nthis:\n  (u + p) * (q + 1) = u * q + p * q + p + u\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a2: \"(u+p)*(q+1)*(p+1) = (u*q+p*q+p+u)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u + p) * (q + 1) * (p + 1) = (u * q + p * q + p + u) * (p + 1)", "using a1 assms"], ["proof (prove)\nusing this:\n  (u + p) * (q + 1) = u * q + p * q + p + u\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. (u + p) * (q + 1) * (p + 1) = (u * q + p * q + p + u) * (p + 1)", "by metis"], ["proof (state)\nthis:\n  (u + p) * (q + 1) * (p + 1) = (u * q + p * q + p + u) * (p + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a3: \"(u+p)*(r+1)*(c+1) = (u*q+p*q+p+u)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u + p) * (r + 1) * (c + 1) = (u * q + p * q + p + u) * (p + 1)", "using assms a2 Z2"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  (u + p) * (q + 1) * (p + 1) = (u * q + p * q + p + u) * (p + 1)\n  (r + 1) * (c + 1) = (q + 1) * (p + 1)\n\ngoal (1 subgoal):\n 1. (u + p) * (r + 1) * (c + 1) = (u * q + p * q + p + u) * (p + 1)", "by (metis semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  (u + p) * (r + 1) * (c + 1) = (u * q + p * q + p + u) * (p + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a4: \"a*(u+p)* (r+1)*(c+1) = a*(u*q+ p*q+p+u)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (u + p) * (r + 1) * (c + 1) = a * (u * q + p * q + p + u) * (p + 1)", "using assms a3"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  (u + p) * (r + 1) * (c + 1) = (u * q + p * q + p + u) * (p + 1)\n\ngoal (1 subgoal):\n 1. a * (u + p) * (r + 1) * (c + 1) = a * (u * q + p * q + p + u) * (p + 1)", "by (metis semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  a * (u + p) * (r + 1) * (c + 1) = a * (u * q + p * q + p + u) * (p + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a5: \"a*(u+p)*(r+1)*(c+1) = a*(u*q+r*c)*(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (u + p) * (r + 1) * (c + 1) = a * (u * q + r * c) * (p + 1)", "using assms a4 Z1"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  a * (u + p) * (r + 1) * (c + 1) = a * (u * q + p * q + p + u) * (p + 1)\n  r * c = p * q + p + u\n\ngoal (1 subgoal):\n 1. a * (u + p) * (r + 1) * (c + 1) = a * (u * q + r * c) * (p + 1)", "by (simp add: semiring_normalization_rules(21))"], ["proof (state)\nthis:\n  a * (u + p) * (r + 1) * (c + 1) = a * (u * q + r * c) * (p + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a6: \"(a*(u+p)*(r+1)*(c+1))/(p+1) =(a*(u*q+ r*c)* (p+1))/(p+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n    real (a * (u * q + r * c) * (p + 1)) / real (p + 1)", "using assms a5\n        semiring_normalization_rules(21) \\<open>p+1 >0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  a * (u + p) * (r + 1) * (c + 1) = a * (u * q + r * c) * (p + 1)\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  0 < p + 1\n\ngoal (1 subgoal):\n 1. real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n    real (a * (u * q + r * c) * (p + 1)) / real (p + 1)", "by auto"], ["proof (state)\nthis:\n  real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n  real (a * (u * q + r * c) * (p + 1)) / real (p + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a7: \"(a*(u+p)*(r+1)*(c+1))/(p+1) =(a*(u*q+ r*c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n    real (a * (u * q + r * c))", "using assms a6 \\<open>p+1 >0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n  real (a * (u * q + r * c) * (p + 1)) / real (p + 1)\n  0 < p + 1\n\ngoal (1 subgoal):\n 1. real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n    real (a * (u * q + r * c))", "by (metis neq0_conv nonzero_mult_div_cancel_right of_nat_eq_0_iff of_nat_mult)"], ["proof (state)\nthis:\n  real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n  real (a * (u * q + r * c))\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a8:\"(a*(u+p)/(p+1))*(r+1)*(c+1) = a*(u*q+r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1) =\n    real (a * (u * q + r * c))", "using assms a7  \\<open>p+1 >0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  real (a * (u + p) * (r + 1) * (c + 1)) / real (p + 1) =\n  real (a * (u * q + r * c))\n  0 < p + 1\n\ngoal (1 subgoal):\n 1. real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1) =\n    real (a * (u * q + r * c))", "by (metis of_nat_mult times_divide_eq_left)"], ["proof (state)\nthis:\n  real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1) =\n  real (a * (u * q + r * c))\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a9: \"(Esigma a)* Esigma(r)* Esigma(c) = a*(u*q+ r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma a * Esigma r * Esigma c = a * (u * q + r * c)", "using a8 assms\n        \\<open> Esigma(r) = (r+1)\\<close> \\<open> Esigma(c) = (c+1)\\<close>"], ["proof (prove)\nusing this:\n  real (a * (u + p)) / real (p + 1) * real (r + 1) * real (c + 1) =\n  real (a * (u * q + r * c))\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  Esigma r = r + 1\n  Esigma c = c + 1\n\ngoal (1 subgoal):\n 1. Esigma a * Esigma r * Esigma c = a * (u * q + r * c)", "by (metis \\<open>real (Esigma a) = real (a*(u + p))/real(p + 1)\\<close> of_nat_eq_iff of_nat_mult)"], ["proof (state)\nthis:\n  Esigma a * Esigma r * Esigma c = a * (u * q + r * c)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "have a10: \" Esigma(a*r*c) = a*(u*q+ r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * (u * q + r * c)", "using a9 assms\n        \\<open>Esigma (a*r*c) = (Esigma a)*(Esigma r)*(Esigma c)\\<close>"], ["proof (prove)\nusing this:\n  Esigma a * Esigma r * Esigma c = a * (u * q + r * c)\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  Esigma (a * r * c) = Esigma a * Esigma r * Esigma c\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * (u * q + r * c)", "by simp"], ["proof (state)\nthis:\n  Esigma (a * r * c) = a * (u * q + r * c)\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "using a10 assms"], ["proof (prove)\nusing this:\n  Esigma (a * r * c) = a * (u * q + r * c)\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = a * u * q + a * r * c", "by (simp add: add_mult_distrib2 mult.assoc)"], ["proof (state)\nthis:\n  Esigma (a * r * c) = a * u * q + a * r * c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * r * c) = a * u * q + a * r * c\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "using A B  Amicable_pair_equiv_def_conv assms One_nat_def  one_le_mult_iff"], ["proof (prove)\nusing this:\n  Esigma (a * u * q) = Esigma (a * r * c)\n  Esigma (a * r * c) = a * u * q + a * r * c\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  1 \\<le> a\n  1 \\<le> u\n  prime p\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  \\<not> p dvd a\n  (a * u) Amic (a * p)\n  gcd a (r * c) = 1\n  q = r + c + u\n  gcd (a * u) q = 1\n  r * c = p * (r + c + u) + p + u\n  1 = Suc 0\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "by (smt prime_ge_1_nat)"], ["proof (state)\nthis:\n  (a * u * q) Amic (a * r * c)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>By replacing the assumption that \\<open>(a*u) Amic (a*p)\\<close> in the above rule by te Riele with the \n assumption that \\<open>(a*u) breeder u\\<close>, we obtain Borho's Rule with breeders \\cite{garciaetal1}.\\<close>"], ["", "theorem Borho_Rule_breeders_Amicable: \n  fixes a u r c q x :: nat \n  assumes \"x \\<ge> 1\" and \"a \\<ge> 1\" and \"u \\<ge> 1\"\n      and \"prime r\" and \"prime c\" and  \"prime q\" and \"r \\<noteq> c\" \n      and \"Esigma (a*u) = a*u + a*x\" \"Esigma (a*u) = (Esigma a)*(x+1)\" and \"gcd a (r * c) =1\"\n      and \"gcd (a*u) q = 1\" and \"r * c = x+u + x*u +r*x +x*c\" and \"q = r+c+u\"\n  shows \"(a*u*q) Amic (a*r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have a: \"Esigma(a*u*q) = Esigma(a*u)*Esigma(q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * Esigma q", "using assms gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * Esigma q", "by simp"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * u) * Esigma q\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have a1: \"Esigma(a*r*c) = (Esigma a)*Esigma(r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma (r * c)", "using assms gcd_Esigma_mult"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  gcd ?m ?n = 1 \\<Longrightarrow> Esigma (?m * ?n) = Esigma ?m * Esigma ?n\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * Esigma (r * c)", "by (metis mult.assoc mult.commute)"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * Esigma (r * c)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have a2: \"Esigma(a*r*c) = (Esigma a)*(r+1)*(c+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)", "using a1 assms"], ["proof (prove)\nusing this:\n  Esigma (a * r * c) = Esigma a * Esigma (r * c)\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n\ngoal (1 subgoal):\n 1. Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)", "by (metis mult.commute mult.left_commute prime_Esigma_mult prime_sum_div)"], ["proof (state)\nthis:\n  Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have A: \"Esigma (a*u*q) = Esigma(a*r*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "have d: \"Esigma(a)*(r+1)*(c+1) = Esigma(a*u)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)", "have d1: \"(r+1)*(c+1) =(x+1)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "have ce: \"(r+1)*(c+1) = r*c+r+c+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = r * c + r + c + 1", "by simp"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = r * c + r + c + 1\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "have ce1: \"(r+1)*(c+1) = x+u+x*u+r*x+x*c+r+c+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = x + u + x * u + r * x + x * c + r + c + 1", "using ce assms"], ["proof (prove)\nusing this:\n  (r + 1) * (c + 1) = r * c + r + c + 1\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = x + u + x * u + r * x + x * c + r + c + 1", "by simp"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = x + u + x * u + r * x + x * c + r + c + 1\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "have de: \"(x+1)*(q+1) = x*q +1+x+q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + 1) * (q + 1) = x * q + 1 + x + q", "by simp"], ["proof (state)\nthis:\n  (x + 1) * (q + 1) = x * q + 1 + x + q\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "have de1: \"(x+1)*(q+1) = x*(r+c+u)+1+x+ r+c+u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + 1) * (q + 1) = x * (r + c + u) + 1 + x + r + c + u", "using assms de"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  (x + 1) * (q + 1) = x * q + 1 + x + q\n\ngoal (1 subgoal):\n 1. (x + 1) * (q + 1) = x * (r + c + u) + 1 + x + r + c + u", "by simp"], ["proof (state)\nthis:\n  (x + 1) * (q + 1) = x * (r + c + u) + 1 + x + r + c + u\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "using de1 ce1 add_mult_distrib2"], ["proof (prove)\nusing this:\n  (x + 1) * (q + 1) = x * (r + c + u) + 1 + x + r + c + u\n  (r + 1) * (c + 1) = x + u + x * u + r * x + x * c + r + c + 1\n  ?k * (?m + ?n) = ?k * ?m + ?k * ?n\n\ngoal (1 subgoal):\n 1. (r + 1) * (c + 1) = (x + 1) * (q + 1)", "by auto"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = (x + 1) * (q + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (r + 1) * (c + 1) = (x + 1) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)", "using d1 assms"], ["proof (prove)\nusing this:\n  (r + 1) * (c + 1) = (x + 1) * (q + 1)\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n\ngoal (1 subgoal):\n 1. Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)", "by (metis semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "using d a2"], ["proof (prove)\nusing this:\n  Esigma a * (r + 1) * (c + 1) = Esigma (a * u) * (q + 1)\n  Esigma (a * r * c) = Esigma a * (r + 1) * (c + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * r * c)", "by (simp add: a assms(6) prime_sum_div)"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * r * c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * r * c)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "have B: \"Esigma (a*u*q) = a*u*q + a*r*c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "have i: \"Esigma (a*u*q) = Esigma(a*u)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * (q + 1)", "using a assms"], ["proof (prove)\nusing this:\n  Esigma (a * u * q) = Esigma (a * u) * Esigma q\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = Esigma (a * u) * (q + 1)", "by (simp add: prime_sum_div)"], ["proof (state)\nthis:\n  Esigma (a * u * q) = Esigma (a * u) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "have ii:\"Esigma (a*u*q) = (a*u+ a*x)*(q+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = (a * u + a * x) * (q + 1)", "using assms i"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  Esigma (a * u * q) = Esigma (a * u) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = (a * u + a * x) * (q + 1)", "by auto"], ["proof (state)\nthis:\n  Esigma (a * u * q) = (a * u + a * x) * (q + 1)\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "have iii:\"Esigma (a*u*q) = a*u*q +a*u+ a*x*q+ a*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * u + a * x * q + a * x", "using assms ii add_mult_distrib"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  Esigma (a * u * q) = (a * u + a * x) * (q + 1)\n  (?m + ?n) * ?k = ?m * ?k + ?n * ?k\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * u + a * x * q + a * x", "by simp"], ["proof (state)\nthis:\n  Esigma (a * u * q) = a * u * q + a * u + a * x * q + a * x\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "using iii assms"], ["proof (prove)\nusing this:\n  Esigma (a * u * q) = a * u * q + a * u + a * x * q + a * x\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n\ngoal (1 subgoal):\n 1. Esigma (a * u * q) = a * u * q + a * r * c", "by (smt distrib_left semiring_normalization_rules)"], ["proof (state)\nthis:\n  Esigma (a * u * q) = a * u * q + a * r * c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Esigma (a * u * q) = a * u * q + a * r * c\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "using A B assms Amicable_pair_equiv_def_conv assms  One_nat_def one_le_mult_iff"], ["proof (prove)\nusing this:\n  Esigma (a * u * q) = Esigma (a * r * c)\n  Esigma (a * u * q) = a * u * q + a * r * c\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  \\<lbrakk>1 \\<le> ?m; 1 \\<le> ?n;\n   Esigma ?m = Esigma ?n \\<and> Esigma ?m = ?m + ?n\\<rbrakk>\n  \\<Longrightarrow> ?m Amic ?n\n  1 \\<le> x\n  1 \\<le> a\n  1 \\<le> u\n  prime r\n  prime c\n  prime q\n  r \\<noteq> c\n  Esigma (a * u) = a * u + a * x\n  Esigma (a * u) = Esigma a * (x + 1)\n  gcd a (r * c) = 1\n  gcd (a * u) q = 1\n  r * c = x + u + x * u + r * x + x * c\n  q = r + c + u\n  1 = Suc 0\n  (Suc 0 \\<le> ?m * ?n) = (Suc 0 \\<le> ?m \\<and> Suc 0 \\<le> ?n)\n\ngoal (1 subgoal):\n 1. (a * u * q) Amic (a * r * c)", "by (smt prime_ge_1_nat)"], ["proof (state)\nthis:\n  (a * u * q) Amic (a * r * c)\n\ngoal:\nNo subgoals!", "qed"], ["", "no_notation divisor (infixr \"divisor\" 80)"], ["", "section\\<open>Acknowledgements\\<close>"], ["", "text\n\\<open>The author was supported by the ERC Advanced Grant ALEXANDRIA (Project 742178) funded by the\nEuropean Research Council and led by Professor Lawrence Paulson at the University of Cambridge, UK.\nMany thanks to Lawrence Paulson for his help and suggestions. Number divisors were initially looked\nup on \\<^url>\\<open>https://onlinemathtools.com/find-all-divisors\\<close>.\\<close>"], ["", "end"]]}