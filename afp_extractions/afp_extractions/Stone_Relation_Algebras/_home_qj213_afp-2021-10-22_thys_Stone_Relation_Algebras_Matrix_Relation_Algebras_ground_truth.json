{"file_name": "/home/qj213/afp-2021-10-22/thys/Stone_Relation_Algebras/Matrix_Relation_Algebras.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stone_Relation_Algebras", "problem_names": ["lemma one_sup_induct [case_names one sup]:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes one: \"\\<And>i . P (f i) (g i)\"\n      and sup: \"\\<And>j I . j \\<notin> I \\<Longrightarrow> P (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i) (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i) \\<Longrightarrow> P (f j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i)) (g j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i))\"\n    shows \"P (\\<Squnion>\\<^sub>k f k) (\\<Squnion>\\<^sub>k g k)\"", "lemma bot_sup_induct [case_names bot sup]:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes bot: \"P bot bot\"\n      and sup: \"\\<And>j I . j \\<notin> I \\<Longrightarrow> P (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i) (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i) \\<Longrightarrow> P (f j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i)) (g j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i))\"\n    shows \"P (\\<Squnion>\\<^sub>k f k) (\\<Squnion>\\<^sub>k g k)\"", "lemma comp_right_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k f k * x) = (\\<Squnion>\\<^sub>k f k) * x\"", "lemma comp_left_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k x * f k) = x * (\\<Squnion>\\<^sub>k f k)\"", "lemma leq_sum:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<forall>k . f k \\<le> g k) \\<Longrightarrow> (\\<Squnion>\\<^sub>k f k) \\<le> (\\<Squnion>\\<^sub>k g k)\"", "lemma ub_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"f i \\<le> (\\<Squnion>\\<^sub>k f k)\"", "lemma lub_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes \"\\<forall>k . f k \\<le> x\"\n    shows \"(\\<Squnion>\\<^sub>k f k) \\<le> x\"", "lemma lub_sum_iff:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<forall>k . f k \\<le> x) \\<longleftrightarrow> (\\<Squnion>\\<^sub>k f k) \\<le> x\"", "lemma conv_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k (f k)\\<^sup>T) = (\\<Squnion>\\<^sub>k f k)\\<^sup>T\"", "lemma pp_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k --f k) = --(\\<Squnion>\\<^sub>k f k)\"", "lemma inf_right_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k f k \\<sqinter> x) = (\\<Squnion>\\<^sub>k f k) \\<sqinter> x\""], "translations": [["", "lemma one_sup_induct [case_names one sup]:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes one: \"\\<And>i . P (f i) (g i)\"\n      and sup: \"\\<And>j I . j \\<notin> I \\<Longrightarrow> P (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i) (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i) \\<Longrightarrow> P (f j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i)) (g j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i))\"\n    shows \"P (\\<Squnion>\\<^sub>k f k) (\\<Squnion>\\<^sub>k g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "let ?X = \"{ k::'b . True }\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "have \"finite ?X\" and \"?X \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {k. True} &&& {k. True} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  finite {k. True}\n  {k. True} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite {k. True}\n  {k. True} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "proof (induct rule: finite_ne_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       P (comm_monoid_add.sum (\\<squnion>) bot f {x})\n        (comm_monoid_add.sum (\\<squnion>) bot g {x})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        P (comm_monoid_add.sum (\\<squnion>) bot f F)\n         (comm_monoid_add.sum (\\<squnion>) bot g F)\\<rbrakk>\n       \\<Longrightarrow> P (comm_monoid_add.sum (\\<squnion>) bot f\n                             (insert x F))\n                          (comm_monoid_add.sum (\\<squnion>) bot g\n                            (insert x F))", "case (singleton i)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x.\n       P (comm_monoid_add.sum (\\<squnion>) bot f {x})\n        (comm_monoid_add.sum (\\<squnion>) bot g {x})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        P (comm_monoid_add.sum (\\<squnion>) bot f F)\n         (comm_monoid_add.sum (\\<squnion>) bot g F)\\<rbrakk>\n       \\<Longrightarrow> P (comm_monoid_add.sum (\\<squnion>) bot f\n                             (insert x F))\n                          (comm_monoid_add.sum (\\<squnion>) bot g\n                            (insert x F))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {i})\n     (comm_monoid_add.sum (\\<squnion>) bot g {i})", "using one"], ["proof (prove)\nusing this:\n  P (f ?i1) (g ?i1)\n\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {i})\n     (comm_monoid_add.sum (\\<squnion>) bot g {i})", "by simp"], ["proof (state)\nthis:\n  P (comm_monoid_add.sum (\\<squnion>) bot f {i})\n   (comm_monoid_add.sum (\\<squnion>) bot g {i})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        P (comm_monoid_add.sum (\\<squnion>) bot f F)\n         (comm_monoid_add.sum (\\<squnion>) bot g F)\\<rbrakk>\n       \\<Longrightarrow> P (comm_monoid_add.sum (\\<squnion>) bot f\n                             (insert x F))\n                          (comm_monoid_add.sum (\\<squnion>) bot g\n                            (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        P (comm_monoid_add.sum (\\<squnion>) bot f F)\n         (comm_monoid_add.sum (\\<squnion>) bot g F)\\<rbrakk>\n       \\<Longrightarrow> P (comm_monoid_add.sum (\\<squnion>) bot f\n                             (insert x F))\n                          (comm_monoid_add.sum (\\<squnion>) bot g\n                            (insert x F))", "case (insert j I)"], ["proof (state)\nthis:\n  finite I\n  I \\<noteq> {}\n  j \\<notin> I\n  P (comm_monoid_add.sum (\\<squnion>) bot f I)\n   (comm_monoid_add.sum (\\<squnion>) bot g I)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        P (comm_monoid_add.sum (\\<squnion>) bot f F)\n         (comm_monoid_add.sum (\\<squnion>) bot g F)\\<rbrakk>\n       \\<Longrightarrow> P (comm_monoid_add.sum (\\<squnion>) bot f\n                             (insert x F))\n                          (comm_monoid_add.sum (\\<squnion>) bot g\n                            (insert x F))", "thus ?case"], ["proof (prove)\nusing this:\n  finite I\n  I \\<noteq> {}\n  j \\<notin> I\n  P (comm_monoid_add.sum (\\<squnion>) bot f I)\n   (comm_monoid_add.sum (\\<squnion>) bot g I)\n\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f (insert j I))\n     (comm_monoid_add.sum (\\<squnion>) bot g (insert j I))", "using sup"], ["proof (prove)\nusing this:\n  finite I\n  I \\<noteq> {}\n  j \\<notin> I\n  P (comm_monoid_add.sum (\\<squnion>) bot f I)\n   (comm_monoid_add.sum (\\<squnion>) bot g I)\n  \\<lbrakk>?j1 \\<notin> ?I1;\n   P (comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n    (comm_monoid_add.sum (\\<squnion>) bot g ?I1)\\<rbrakk>\n  \\<Longrightarrow> P (f ?j1 \\<squnion>\n                       comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n                     (g ?j1 \\<squnion>\n                      comm_monoid_add.sum (\\<squnion>) bot g ?I1)\n\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f (insert j I))\n     (comm_monoid_add.sum (\\<squnion>) bot g (insert j I))", "by simp"], ["proof (state)\nthis:\n  P (comm_monoid_add.sum (\\<squnion>) bot f (insert j I))\n   (comm_monoid_add.sum (\\<squnion>) bot g (insert j I))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n   (comm_monoid_add.sum (\\<squnion>) bot g {k. True})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bot_sup_induct [case_names bot sup]:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes bot: \"P bot bot\"\n      and sup: \"\\<And>j I . j \\<notin> I \\<Longrightarrow> P (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i) (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i) \\<Longrightarrow> P (f j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> f i)) (g j \\<squnion> (\\<Squnion>\\<^bsub>i\\<in>I\\<^esub> g i))\"\n    shows \"P (\\<Squnion>\\<^sub>k f k) (\\<Squnion>\\<^sub>k g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (comm_monoid_add.sum (\\<squnion>) bot f {k. True})\n     (comm_monoid_add.sum (\\<squnion>) bot g {k. True})", "apply (induct rule: one_sup_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i. P (f i) (g i)\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        P (comm_monoid_add.sum (\\<squnion>) bot f I)\n         (comm_monoid_add.sum (\\<squnion>) bot g I)\\<rbrakk>\n       \\<Longrightarrow> P (f j \\<squnion>\n                            comm_monoid_add.sum (\\<squnion>) bot f I)\n                          (g j \\<squnion>\n                           comm_monoid_add.sum (\\<squnion>) bot g I)", "using bot sup"], ["proof (prove)\nusing this:\n  P bot bot\n  \\<lbrakk>?j1 \\<notin> ?I1;\n   P (comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n    (comm_monoid_add.sum (\\<squnion>) bot g ?I1)\\<rbrakk>\n  \\<Longrightarrow> P (f ?j1 \\<squnion>\n                       comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n                     (g ?j1 \\<squnion>\n                      comm_monoid_add.sum (\\<squnion>) bot g ?I1)\n\ngoal (2 subgoals):\n 1. \\<And>i. P (f i) (g i)\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        P (comm_monoid_add.sum (\\<squnion>) bot f I)\n         (comm_monoid_add.sum (\\<squnion>) bot g I)\\<rbrakk>\n       \\<Longrightarrow> P (f j \\<squnion>\n                            comm_monoid_add.sum (\\<squnion>) bot f I)\n                          (g j \\<squnion>\n                           comm_monoid_add.sum (\\<squnion>) bot g I)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        P (comm_monoid_add.sum (\\<squnion>) bot f I)\n         (comm_monoid_add.sum (\\<squnion>) bot g I)\\<rbrakk>\n       \\<Longrightarrow> P (f j \\<squnion>\n                            comm_monoid_add.sum (\\<squnion>) bot f I)\n                          (g j \\<squnion>\n                           comm_monoid_add.sum (\\<squnion>) bot g I)", "using sup"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j1 \\<notin> ?I1;\n   P (comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n    (comm_monoid_add.sum (\\<squnion>) bot g ?I1)\\<rbrakk>\n  \\<Longrightarrow> P (f ?j1 \\<squnion>\n                       comm_monoid_add.sum (\\<squnion>) bot f ?I1)\n                     (g ?j1 \\<squnion>\n                      comm_monoid_add.sum (\\<squnion>) bot g ?I1)\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        P (comm_monoid_add.sum (\\<squnion>) bot f I)\n         (comm_monoid_add.sum (\\<squnion>) bot g I)\\<rbrakk>\n       \\<Longrightarrow> P (f j \\<squnion>\n                            comm_monoid_add.sum (\\<squnion>) bot f I)\n                          (g j \\<squnion>\n                           comm_monoid_add.sum (\\<squnion>) bot g I)", "by blast"], ["", "text \\<open>\nNow many properties of finite suprema follow by simple applications of the above induction rules.\nIn particular, we show distributivity of composition, isotonicity and the upper-bound property.\n\\<close>"], ["", "lemma comp_right_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k f k * x) = (\\<Squnion>\\<^sub>k f k) * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>k. f k * x) {k. True} =\n    comm_monoid_add.sum (\\<squnion>) bot f {k. True} * x", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. f i * x = f i * x\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I * x\\<rbrakk>\n       \\<Longrightarrow> f j * x \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i * x) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I) *\n                         x", "case one"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i. f i * x = f i * x\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I * x\\<rbrakk>\n       \\<Longrightarrow> f j * x \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i * x) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I) *\n                         x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i_ * x = f i_ * x", "by simp"], ["proof (state)\nthis:\n  f i_ * x = f i_ * x\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I * x\\<rbrakk>\n       \\<Longrightarrow> f j * x \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i * x) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I) *\n                         x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I * x\\<rbrakk>\n       \\<Longrightarrow> f j * x \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i * x) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I) *\n                         x", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n  comm_monoid_add.sum (\\<squnion>) bot f I * x\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I * x\\<rbrakk>\n       \\<Longrightarrow> f j * x \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i * x) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I) *\n                         x", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n  comm_monoid_add.sum (\\<squnion>) bot f I * x\n\ngoal (1 subgoal):\n 1. f j * x \\<squnion>\n    comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n    (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I) * x", "using mult_right_dist_sup"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n  comm_monoid_add.sum (\\<squnion>) bot f I * x\n  (?x \\<squnion> ?y) * ?z = ?x * ?z \\<squnion> ?y * ?z\n\ngoal (1 subgoal):\n 1. f j * x \\<squnion>\n    comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n    (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I) * x", "by auto"], ["proof (state)\nthis:\n  f j * x \\<squnion>\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i * x) I =\n  (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I) * x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_left_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k x * f k) = x * (\\<Squnion>\\<^sub>k f k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>k. x * f k) {k. True} =\n    x * comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. x * f i = x * f i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n        x * comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> x * f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. x * f i) I =\n                         x *\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)", "case one"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i. x * f i = x * f i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n        x * comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> x * f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. x * f i) I =\n                         x *\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * f i_ = x * f i_", "by simp"], ["proof (state)\nthis:\n  x * f i_ = x * f i_\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n        x * comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> x * f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. x * f i) I =\n                         x *\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n        x * comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> x * f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. x * f i) I =\n                         x *\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n  x * comm_monoid_add.sum (\\<squnion>) bot f I\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n        x * comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> x * f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. x * f i) I =\n                         x *\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n  x * comm_monoid_add.sum (\\<squnion>) bot f I\n\ngoal (1 subgoal):\n 1. x * f j \\<squnion>\n    comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n    x * (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)", "by (simp add: mult_left_dist_sup)"], ["proof (state)\nthis:\n  x * f j \\<squnion>\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. x * f i) I =\n  x * (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma leq_sum:\n  fixes f g :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<forall>k . f k \\<le> g k) \\<Longrightarrow> (\\<Squnion>\\<^sub>k f k) \\<le> (\\<Squnion>\\<^sub>k g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n    comm_monoid_add.sum (\\<squnion>) bot f {k. True}\n    \\<le> comm_monoid_add.sum (\\<squnion>) bot g {k. True}", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. \\<forall>k. f k \\<le> g k \\<Longrightarrow> f i \\<le> g i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n        comm_monoid_add.sum (\\<squnion>) bot f I\n        \\<le> comm_monoid_add.sum (\\<squnion>) bot g I;\n        \\<forall>k. f k \\<le> g k\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> g j \\<squnion>\n                               comm_monoid_add.sum (\\<squnion>) bot g I", "case one"], ["proof (state)\nthis:\n  \\<forall>k. f k \\<le> g k\n\ngoal (2 subgoals):\n 1. \\<And>i. \\<forall>k. f k \\<le> g k \\<Longrightarrow> f i \\<le> g i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n        comm_monoid_add.sum (\\<squnion>) bot f I\n        \\<le> comm_monoid_add.sum (\\<squnion>) bot g I;\n        \\<forall>k. f k \\<le> g k\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> g j \\<squnion>\n                               comm_monoid_add.sum (\\<squnion>) bot g I", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>k. f k \\<le> g k\n\ngoal (1 subgoal):\n 1. f i_ \\<le> g i_", "by simp"], ["proof (state)\nthis:\n  f i_ \\<le> g i_\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n        comm_monoid_add.sum (\\<squnion>) bot f I\n        \\<le> comm_monoid_add.sum (\\<squnion>) bot g I;\n        \\<forall>k. f k \\<le> g k\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> g j \\<squnion>\n                               comm_monoid_add.sum (\\<squnion>) bot g I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n        comm_monoid_add.sum (\\<squnion>) bot f I\n        \\<le> comm_monoid_add.sum (\\<squnion>) bot g I;\n        \\<forall>k. f k \\<le> g k\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> g j \\<squnion>\n                               comm_monoid_add.sum (\\<squnion>) bot g I", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n  comm_monoid_add.sum (\\<squnion>) bot f I\n  \\<le> comm_monoid_add.sum (\\<squnion>) bot g I\n  \\<forall>k. f k \\<le> g k\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n        comm_monoid_add.sum (\\<squnion>) bot f I\n        \\<le> comm_monoid_add.sum (\\<squnion>) bot g I;\n        \\<forall>k. f k \\<le> g k\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> g j \\<squnion>\n                               comm_monoid_add.sum (\\<squnion>) bot g I", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n  comm_monoid_add.sum (\\<squnion>) bot f I\n  \\<le> comm_monoid_add.sum (\\<squnion>) bot g I\n  \\<forall>k. f k \\<le> g k\n\ngoal (1 subgoal):\n 1. f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I\n    \\<le> g j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot g I", "using sup_mono"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  \\<forall>k. f k \\<le> g k \\<Longrightarrow>\n  comm_monoid_add.sum (\\<squnion>) bot f I\n  \\<le> comm_monoid_add.sum (\\<squnion>) bot g I\n  \\<forall>k. f k \\<le> g k\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion> ?b \\<le> ?c \\<squnion> ?d\n\ngoal (1 subgoal):\n 1. f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I\n    \\<le> g j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot g I", "by blast"], ["proof (state)\nthis:\n  f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I\n  \\<le> g j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot g I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ub_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"f i \\<le> (\\<Squnion>\\<^sub>k f k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f i \\<le> comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "have \"i \\<in> { k . True }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {k. True}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {k. True}\n\ngoal (1 subgoal):\n 1. f i \\<le> comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "thus \"f i \\<le> (\\<Squnion>\\<^sub>k f (k::'b))\""], ["proof (prove)\nusing this:\n  i \\<in> {k. True}\n\ngoal (1 subgoal):\n 1. f i \\<le> comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "by (metis finite_code sup_monoid.sum.insert sup_ge1 mk_disjoint_insert)"], ["proof (state)\nthis:\n  f i \\<le> comm_monoid_add.sum (\\<squnion>) bot f {k. True}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lub_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  assumes \"\\<forall>k . f k \\<le> x\"\n    shows \"(\\<Squnion>\\<^sub>k f k) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot f {k. True} \\<le> x", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. f i \\<le> x\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> x", "case one"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i. f i \\<le> x\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i_ \\<le> x", "by (simp add: assms)"], ["proof (state)\nthis:\n  f i_ \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> x", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\\<rbrakk>\n       \\<Longrightarrow> f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot f I\n                         \\<le> x", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\n\ngoal (1 subgoal):\n 1. f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x", "using assms le_supI"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\n  \\<forall>k. f k \\<le> x\n  \\<lbrakk>?a \\<le> ?x; ?b \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?a \\<squnion> ?b \\<le> ?x\n\ngoal (1 subgoal):\n 1. f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x", "by blast"], ["proof (state)\nthis:\n  f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lub_sum_iff:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<forall>k . f k \\<le> x) \\<longleftrightarrow> (\\<Squnion>\\<^sub>k f k) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k. f k \\<le> x) =\n    (comm_monoid_add.sum (\\<squnion>) bot f {k. True} \\<le> x)", "using order.trans ub_sum lub_sum"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  ?f ?i \\<le> comm_monoid_add.sum (\\<squnion>) bot ?f {k. True}\n  \\<forall>k. ?f k \\<le> ?x \\<Longrightarrow>\n  comm_monoid_add.sum (\\<squnion>) bot ?f {k. True} \\<le> ?x\n\ngoal (1 subgoal):\n 1. (\\<forall>k. f k \\<le> x) =\n    (comm_monoid_add.sum (\\<squnion>) bot f {k. True} \\<le> x)", "by blast"], ["", "end"], ["", "context stone_relation_algebra\nbegin"], ["", "text \\<open>\nIn Stone relation algebras, we can also show that converse,  double complement and meet distribute over finite suprema.\n\\<close>"], ["", "lemma conv_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k (f k)\\<^sup>T) = (\\<Squnion>\\<^sub>k f k)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>k. f k\\<^sup>T)\n     {k. True} =\n    comm_monoid_add.sum (\\<squnion>) bot f {k. True}\\<^sup>T", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. f i\\<^sup>T = f i\\<^sup>T\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\\<rbrakk>\n       \\<Longrightarrow> f j\\<^sup>T \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i\\<^sup>T) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "case one"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i. f i\\<^sup>T = f i\\<^sup>T\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\\<rbrakk>\n       \\<Longrightarrow> f j\\<^sup>T \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i\\<^sup>T) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i_\\<^sup>T = f i_\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  f i_\\<^sup>T = f i_\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\\<rbrakk>\n       \\<Longrightarrow> f j\\<^sup>T \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i\\<^sup>T) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\\<rbrakk>\n       \\<Longrightarrow> f j\\<^sup>T \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i\\<^sup>T) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n  comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n        comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\\<rbrakk>\n       \\<Longrightarrow> f j\\<^sup>T \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. f i\\<^sup>T) I =\n                         (f j \\<squnion>\n                          comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n  comm_monoid_add.sum (\\<squnion>) bot f I\\<^sup>T\n\ngoal (1 subgoal):\n 1. f j\\<^sup>T \\<squnion>\n    comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n    (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T", "by (simp add: conv_dist_sup)"], ["proof (state)\nthis:\n  f j\\<^sup>T \\<squnion>\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. f i\\<^sup>T) I =\n  (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)\\<^sup>T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pp_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k --f k) = --(\\<Squnion>\\<^sub>k f k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>k. - - f k) {k. True} =\n    - - comm_monoid_add.sum (\\<squnion>) bot f {k. True}", "proof (induct rule: one_sup_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. - - f i = - - f i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n        - - comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> - - f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. - - f i) I =\n                         - - (f j \\<squnion>\n                              comm_monoid_add.sum (\\<squnion>) bot f I)", "case one"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i. - - f i = - - f i\n 2. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n        - - comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> - - f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. - - f i) I =\n                         - - (f j \\<squnion>\n                              comm_monoid_add.sum (\\<squnion>) bot f I)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. - - f i_ = - - f i_", "by simp"], ["proof (state)\nthis:\n  - - f i_ = - - f i_\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n        - - comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> - - f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. - - f i) I =\n                         - - (f j \\<squnion>\n                              comm_monoid_add.sum (\\<squnion>) bot f I)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n        - - comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> - - f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. - - f i) I =\n                         - - (f j \\<squnion>\n                              comm_monoid_add.sum (\\<squnion>) bot f I)", "case (sup j I)"], ["proof (state)\nthis:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n  - - comm_monoid_add.sum (\\<squnion>) bot f I\n\ngoal (1 subgoal):\n 1. \\<And>j I.\n       \\<lbrakk>j \\<notin> I;\n        comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n        - - comm_monoid_add.sum (\\<squnion>) bot f I\\<rbrakk>\n       \\<Longrightarrow> - - f j \\<squnion>\n                         comm_monoid_add.sum (\\<squnion>) bot\n                          (\\<lambda>i. - - f i) I =\n                         - - (f j \\<squnion>\n                              comm_monoid_add.sum (\\<squnion>) bot f I)", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<notin> I\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n  - - comm_monoid_add.sum (\\<squnion>) bot f I\n\ngoal (1 subgoal):\n 1. - - f j \\<squnion>\n    comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n    - - (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)", "by simp"], ["proof (state)\nthis:\n  - - f j \\<squnion>\n  comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>i. - - f i) I =\n  - - (f j \\<squnion> comm_monoid_add.sum (\\<squnion>) bot f I)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inf_right_dist_sum:\n  fixes f :: \"'b::finite \\<Rightarrow> 'a\"\n  shows \"(\\<Squnion>\\<^sub>k f k \\<sqinter> x) = (\\<Squnion>\\<^sub>k f k) \\<sqinter> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_add.sum (\\<squnion>) bot (\\<lambda>k. f k \\<sqinter> x)\n     {k. True} =\n    comm_monoid_add.sum (\\<squnion>) bot f {k. True} \\<sqinter> x", "by (rule comp_inf.comp_right_dist_sum)"], ["", "end"], ["", "subsection \\<open>Square Matrices\\<close>"], ["", "text \\<open>\nBecause our semiring and relation algebra type classes only work for homogeneous relations, we only look at square matrices.\n\\<close>"], ["", "type_synonym ('a,'b) square = \"'a \\<times> 'a \\<Rightarrow> 'b\""], ["", "text \\<open>\nWe use standard matrix operations.\nThe Stone algebra structure is lifted componentwise.\nComposition is matrix multiplication using given composition and supremum operations.\nIts unit lifts given zero and one elements into an identity matrix.\nConverse is matrix transpose with an additional componentwise transpose.\n\\<close>"], ["", "definition less_eq_matrix :: \"('a,'b::ord) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\"                                           (infix \"\\<preceq>\" 50)   where \"f \\<preceq> g = (\\<forall>e . f e \\<le> g e)\""], ["", "definition less_matrix    :: \"('a,'b::ord) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\"                                           (infix \"\\<prec>\" 50)   where \"f \\<prec> g = (f \\<preceq> g \\<and> \\<not> g \\<preceq> f)\""], ["", "definition sup_matrix     :: \"('a,'b::sup) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> ('a,'b) square\"                                 (infixl \"\\<oplus>\" 65)  where \"f \\<oplus> g = (\\<lambda>e . f e \\<squnion> g e)\""], ["", "definition inf_matrix     :: \"('a,'b::inf) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> ('a,'b) square\"                                 (infixl \"\\<otimes>\" 67)  where \"f \\<otimes> g = (\\<lambda>e . f e \\<sqinter> g e)\""], ["", "definition minus_matrix   :: \"('a,'b::{uminus,inf}) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> ('a,'b) square\"                        (infixl \"\\<ominus>\" 65)  where \"f \\<ominus> g = (\\<lambda>e . f e \\<sqinter> -g e)\""], ["", "definition implies_matrix :: \"('a,'b::implies) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> ('a,'b) square\"                             (infixl \"\\<oslash>\" 65)  where \"f \\<oslash> g = (\\<lambda>e . f e \\<leadsto> g e)\""], ["", "definition times_matrix   :: \"('a,'b::{times,bounded_semilattice_sup_bot}) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> ('a,'b) square\" (infixl \"\\<odot>\" 70)  where \"f \\<odot> g = (\\<lambda>(i,j) . \\<Squnion>\\<^sub>k f (i,k) * g (k,j))\""], ["", "definition uminus_matrix  :: \"('a,'b::uminus) square \\<Rightarrow> ('a,'b) square\"                                                (\"\\<ominus> _\" [80] 80)  where \"\\<ominus>f    = (\\<lambda>e . -f e)\""], ["", "definition conv_matrix    :: \"('a,'b::conv) square \\<Rightarrow> ('a,'b) square\"                                                  (\"_\\<^sup>t\" [100] 100) where \"f\\<^sup>t      = (\\<lambda>(i,j) . (f (j,i))\\<^sup>T)\""], ["", "definition bot_matrix     :: \"('a,'b::bot) square\"                                                                     (\"mbot\")         where \"mbot   = (\\<lambda>e . bot)\""], ["", "definition top_matrix     :: \"('a,'b::top) square\"                                                                     (\"mtop\")         where \"mtop   = (\\<lambda>e . top)\""], ["", "definition one_matrix     :: \"('a,'b::{one,bot}) square\"                                                               (\"mone\")         where \"mone   = (\\<lambda>(i,j) . if i = j then 1 else bot)\""], ["", "subsection \\<open>Stone Algebras\\<close>"], ["", "text \\<open>\nWe first lift the Stone algebra structure.\nBecause all operations are componentwise, this also works for infinite matrices.\n\\<close>"], ["", "interpretation matrix_order: order where less_eq = less_eq_matrix and less = \"less_matrix :: ('a,'b::order) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order (\\<preceq>) (\\<prec>)", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y. (x \\<prec> y) = (x \\<preceq> y \\<and> \\<not> y \\<preceq> x)\n 2. \\<And>x. x \\<preceq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add: less_matrix_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<preceq> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (simp add: less_eq_matrix_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "apply (meson less_eq_matrix_def order_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<preceq> y; y \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "by (meson less_eq_matrix_def antisym ext)"], ["", "interpretation matrix_semilattice_sup: semilattice_sup where sup = sup_matrix and less_eq = less_eq_matrix and less = \"less_matrix :: ('a,'b::semilattice_sup) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semilattice_sup (\\<oplus>) (\\<preceq>) (\\<prec>)", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y. x \\<preceq> x \\<oplus> y\n 2. \\<And>y x. y \\<preceq> x \\<oplus> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<preceq> x; z \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> y \\<oplus> z \\<preceq> x", "apply (simp add: sup_matrix_def less_eq_matrix_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x. y \\<preceq> x \\<oplus> y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<preceq> x; z \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> y \\<oplus> z \\<preceq> x", "apply (simp add: sup_matrix_def less_eq_matrix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<preceq> x; z \\<preceq> x\\<rbrakk>\n       \\<Longrightarrow> y \\<oplus> z \\<preceq> x", "by (simp add: sup_matrix_def less_eq_matrix_def)"], ["", "interpretation matrix_semilattice_inf: semilattice_inf where inf = inf_matrix and less_eq = less_eq_matrix and less = \"less_matrix :: ('a,'b::semilattice_inf) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semilattice_inf (\\<otimes>) (\\<preceq>) (\\<prec>)", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y. x \\<otimes> y \\<preceq> x\n 2. \\<And>x y. x \\<otimes> y \\<preceq> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; x \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> y \\<otimes> z", "apply (simp add: inf_matrix_def less_eq_matrix_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<otimes> y \\<preceq> y\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; x \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> y \\<otimes> z", "apply (simp add: inf_matrix_def less_eq_matrix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<preceq> y; x \\<preceq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<preceq> y \\<otimes> z", "by (simp add: inf_matrix_def less_eq_matrix_def)"], ["", "interpretation matrix_bounded_semilattice_sup_bot: bounded_semilattice_sup_bot where sup = sup_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::bounded_semilattice_sup_bot) square\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_semilattice_sup_bot (\\<oplus>) (\\<preceq>) (\\<prec>) mbot", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. mbot \\<preceq> a", "by (simp add: bot_matrix_def less_eq_matrix_def)"], ["", "interpretation matrix_bounded_semilattice_inf_top: bounded_semilattice_inf_top where inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and top = \"top_matrix :: ('a,'b::bounded_semilattice_inf_top) square\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_semilattice_inf_top (\\<otimes>) (\\<preceq>) (\\<prec>) mtop", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<preceq> mtop", "by (simp add: less_eq_matrix_def top_matrix_def)"], ["", "interpretation matrix_lattice: lattice where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = \"less_matrix :: ('a,'b::lattice) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.lattice (\\<otimes>) (\\<preceq>) (\\<prec>) (\\<oplus>)", ".."], ["", "interpretation matrix_distrib_lattice: distrib_lattice where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = \"less_matrix :: ('a,'b::distrib_lattice) square \\<Rightarrow> ('a,'b) square \\<Rightarrow> bool\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.distrib_lattice (\\<otimes>) (\\<preceq>) (\\<prec>) (\\<oplus>)", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<oplus> y) \\<otimes> (x \\<oplus> z)", "by (simp add: sup_inf_distrib1 sup_matrix_def inf_matrix_def)"], ["", "interpretation matrix_bounded_lattice: bounded_lattice where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::bounded_lattice) square\" and top = top_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_lattice (\\<otimes>) (\\<preceq>) (\\<prec>) (\\<oplus>) mbot\n     mtop", ".."], ["", "interpretation matrix_bounded_distrib_lattice: bounded_distrib_lattice where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::bounded_distrib_lattice) square\" and top = top_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_distrib_lattice (\\<otimes>) (\\<preceq>) (\\<prec>)\n     (\\<oplus>) mbot mtop", ".."], ["", "interpretation matrix_p_algebra: p_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::p_algebra) square\" and top = top_matrix and uminus = uminus_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.p_algebra uminus_matrix (\\<otimes>) (\\<preceq>) (\\<prec>)\n     (\\<oplus>) mbot mtop", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (x \\<otimes> y = mbot) = (x \\<preceq> \\<ominus> y)", "apply (unfold inf_matrix_def bot_matrix_def less_eq_matrix_def uminus_matrix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       ((\\<lambda>e. x e \\<sqinter> y e) = (\\<lambda>e. bot)) =\n       (\\<forall>e. x e \\<le> - y e)", "by (meson pseudo_complement)"], ["", "interpretation matrix_pd_algebra: pd_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::pd_algebra) square\" and top = top_matrix and uminus = uminus_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pd_algebra (\\<otimes>) (\\<preceq>) (\\<prec>) (\\<oplus>) mbot mtop\n     uminus_matrix", ".."], ["", "text \\<open>\nIn particular, matrices over Stone algebras form a Stone algebra.\n\\<close>"], ["", "interpretation matrix_stone_algebra: stone_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::stone_algebra) square\" and top = top_matrix and uminus = uminus_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.stone_algebra (\\<otimes>) (\\<preceq>) (\\<prec>) (\\<oplus>) mbot\n     mtop uminus_matrix", "by unfold_locales (simp add: sup_matrix_def uminus_matrix_def top_matrix_def)"], ["", "interpretation matrix_heyting_stone_algebra: heyting_stone_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::heyting_stone_algebra) square\" and top = top_matrix and uminus = uminus_matrix and implies = implies_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.heyting_stone_algebra uminus_matrix (\\<otimes>) (\\<preceq>)\n     (\\<prec>) (\\<oplus>) mbot mtop (\\<oslash>)", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z. (x \\<otimes> y \\<preceq> z) = (x \\<preceq> y \\<oslash> z)\n 2. \\<And>x. \\<ominus> x = x \\<oslash> mbot\n 3. \\<And>x. \\<ominus> x \\<oplus> \\<ominus> \\<ominus> x = mtop", "apply (unfold inf_matrix_def sup_matrix_def bot_matrix_def top_matrix_def less_eq_matrix_def uminus_matrix_def implies_matrix_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       (\\<forall>e. x e \\<sqinter> y e \\<le> z e) =\n       (\\<forall>e. x e \\<le> y e \\<leadsto> z e)\n 2. \\<And>x. (\\<lambda>e. - x e) = (\\<lambda>e. x e \\<leadsto> bot)\n 3. \\<And>x. (\\<lambda>e. - x e \\<squnion> - - x e) = (\\<lambda>e. top)", "apply (simp add: implies_galois)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. (\\<lambda>e. - x e) = (\\<lambda>e. x e \\<leadsto> bot)\n 2. \\<And>x. (\\<lambda>e. - x e \\<squnion> - - x e) = (\\<lambda>e. top)", "apply (simp add: uminus_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (\\<lambda>e. - x e \\<squnion> - - x e) = (\\<lambda>e. top)", "by simp"], ["", "interpretation matrix_boolean_algebra: boolean_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a,'b::boolean_algebra) square\" and top = top_matrix and uminus = uminus_matrix and minus = minus_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (\\<ominus>) uminus_matrix (\\<otimes>) (\\<preceq>)\n     (\\<prec>) (\\<oplus>) mbot mtop", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<otimes> \\<ominus> x = mbot\n 2. \\<And>x. x \\<oplus> \\<ominus> x = mtop\n 3. \\<And>x y. x \\<ominus> y = x \\<otimes> \\<ominus> y", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<oplus> \\<ominus> x = mtop\n 2. \\<And>x y. x \\<ominus> y = x \\<otimes> \\<ominus> y", "apply (simp add: sup_matrix_def uminus_matrix_def top_matrix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<ominus> y = x \\<otimes> \\<ominus> y", "by (simp add: inf_matrix_def uminus_matrix_def minus_matrix_def)"], ["", "subsection \\<open>Semirings\\<close>"], ["", "text \\<open>\nNext, we lift the semiring structure.\nBecause of composition, this requires a restriction to finite matrices.\n\\<close>"], ["", "interpretation matrix_monoid: monoid_mult where times = times_matrix and one = \"one_matrix :: ('a::finite,'b::idempotent_semiring) square\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.monoid_mult mone (\\<odot>)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b c. a \\<odot> b \\<odot> c = a \\<odot> (b \\<odot> c)\n 2. \\<And>a. mone \\<odot> a = a\n 3. \\<And>a. a \\<odot> mone = a", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b c. a \\<odot> b \\<odot> c = a \\<odot> (b \\<odot> c)\n 2. \\<And>a. mone \\<odot> a = a\n 3. \\<And>a. a \\<odot> mone = a", "show \"(f \\<odot> g) \\<odot> h = f \\<odot> (g \\<odot> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> g \\<odot> h = f \\<odot> (g \\<odot> h)", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"((f \\<odot> g) \\<odot> h) (i,j) = (\\<Squnion>\\<^sub>l (f \\<odot> g) (i,l) * h (l,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<odot> h) (i, j) =\n    sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>l (\\<Squnion>\\<^sub>k f (i,k) * g (k,l)) * h (l,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True} =\n    sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n         h (l, j))\n     {l. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n       h (l, j))\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>l. (f \\<odot> g) (i, l) * h (l, j)) {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n       h (l, j))\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>l \\<Squnion>\\<^sub>k (f (i,k) * g (k,l)) * h (l,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n         h (l, j))\n     {l. True} =\n    sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n          {k. True})\n     {l. True}", "by (metis (no_types) comp_right_dist_sum)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n       h (l, j))\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n        {k. True})\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l)) {k. True} *\n       h (l, j))\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n        {k. True})\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>l \\<Squnion>\\<^sub>k f (i,k) * (g (k,l) * h (l,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n          {k. True})\n     {l. True} =\n    sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n          {k. True})\n     {l. True}", "by (simp add: mult.assoc)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n        {k. True})\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n        {k. True})\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, l) * h (l, j))\n        {k. True})\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n        {k. True})\n   {l. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k \\<Squnion>\\<^sub>l f (i,k) * (g (k,l) * h (l,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n          {k. True})\n     {l. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n          {l. True})\n     {k. True}", "using sup_monoid.sum.swap"], ["proof (prove)\nusing this:\n  sup_monoid.sum (\\<lambda>i. sup_monoid.sum (?g i) ?B) ?A =\n  sup_monoid.sum (\\<lambda>j. sup_monoid.sum (\\<lambda>i. ?g i j) ?A) ?B\n\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>l.\n         sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n          {k. True})\n     {l. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n          {l. True})\n     {k. True}", "by auto"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n        {k. True})\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n        {l. True})\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>l.\n       sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, l) * h (l, j)))\n        {k. True})\n   {l. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n        {l. True})\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (\\<Squnion>\\<^sub>l g (k,l) * h (l,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n          {l. True})\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) *\n         sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n     {k. True}", "by (metis (no_types) comp_left_dist_sum)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n        {l. True})\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       sup_monoid.sum (\\<lambda>l. f (i, k) * (g (k, l) * h (l, j)))\n        {l. True})\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g \\<odot> h) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) *\n         sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<odot> h) (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<odot> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       sup_monoid.sum (\\<lambda>l. g (k, l) * h (l, j)) {l. True})\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<odot> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "have \"... = (f \\<odot> (g \\<odot> h)) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<odot> h) (k, j)) {k. True} =\n    (f \\<odot> (g \\<odot> h)) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<odot> h) (k, j)) {k. True} =\n  (f \\<odot> (g \\<odot> h)) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> g \\<odot> h) (a, b) = (f \\<odot> (g \\<odot> h)) (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> g \\<odot> h) (i, j) = (f \\<odot> (g \\<odot> h)) (i, j)", "show \"((f \\<odot> g) \\<odot> h) (i,j) = (f \\<odot> (g \\<odot> h)) (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> g \\<odot> h) (i, j) = (f \\<odot> (g \\<odot> h)) (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<odot> h) (i, j) = (f \\<odot> (g \\<odot> h)) (i, j)", "."], ["proof (state)\nthis:\n  (f \\<odot> g \\<odot> h) (i, j) = (f \\<odot> (g \\<odot> h)) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> g \\<odot> h = f \\<odot> (g \\<odot> h)\n\ngoal (2 subgoals):\n 1. \\<And>a. mone \\<odot> a = a\n 2. \\<And>a. a \\<odot> mone = a", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. mone \\<odot> a = a\n 2. \\<And>a. a \\<odot> mone = a", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. mone \\<odot> a = a\n 2. \\<And>a. a \\<odot> mone = a", "show \"mone \\<odot> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mone \\<odot> f = f", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "have \"(mone \\<odot> f) (i,j) = (\\<Squnion>\\<^sub>k mone (i,k) * f (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mone \\<odot> f) (i, j) =\n    sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (mone \\<odot> f) (i, j) =\n  sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  (mone \\<odot> f) (i, j) =\n  sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (if i = k then 1 else bot) * f (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True} =\n    sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n     {k. True}", "by (simp add: one_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. mone (i, k) * f (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k if i = k then 1 * f (k,j) else bot * f (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n     {k. True}", "by (metis (full_types, hide_lams))"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (if i = k then 1::'b else bot) * f (k, j))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k if i = k then f (k,j) else bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. if i = k then f (k, j) else bot) {k. True}", "by (meson mult_left_one mult_left_zero)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. if i = k then f (k, j) else bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. if i = k then (1::'b) * f (k, j) else bot * f (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. if i = k then f (k, j) else bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "have \"... = f (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. if i = k then f (k, j) else bot) {k. True} =\n    f (i, j)", "by simp"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. if i = k then f (k, j) else bot) {k. True} =\n  f (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mone \\<odot> f) (a, b) = f (a, b)", "finally"], ["proof (chain)\npicking this:\n  (mone \\<odot> f) (i, j) = f (i, j)", "show \"(mone \\<odot> f) (i,j) = f (i,j)\""], ["proof (prove)\nusing this:\n  (mone \\<odot> f) (i, j) = f (i, j)\n\ngoal (1 subgoal):\n 1. (mone \\<odot> f) (i, j) = f (i, j)", "."], ["proof (state)\nthis:\n  (mone \\<odot> f) (i, j) = f (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mone \\<odot> f = f\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<odot> mone = a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<odot> mone = a", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<odot> mone = a", "show \"f \\<odot> mone = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> mone = f", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "have \"(f \\<odot> mone) (i,j) = (\\<Squnion>\\<^sub>k f (i,k) * mone (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> mone) (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> mone) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> mone) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (if k = j then 1 else bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n     {k. True}", "by (simp add: one_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mone (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k if k = j then f (i,k) * 1 else f (i,k) * bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n     {k. True}", "by (metis (full_types, hide_lams))"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (if k = j then 1::'b else bot))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "have \"... = (\\<Squnion>\\<^sub>k if k = j then f (i,k) else bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. if k = j then f (i, k) else bot) {k. True}", "by (meson mult.right_neutral semiring.mult_zero_right)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. if k = j then f (i, k) else bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. if k = j then f (i, k) * (1::'b) else f (i, k) * bot)\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. if k = j then f (i, k) else bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "have \"... = f (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. if k = j then f (i, k) else bot) {k. True} =\n    f (i, j)", "by simp"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. if k = j then f (i, k) else bot) {k. True} =\n  f (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mone) (a, b) = f (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> mone) (i, j) = f (i, j)", "show \"(f \\<odot> mone) (i,j) = f (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> mone) (i, j) = f (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> mone) (i, j) = f (i, j)", "."], ["proof (state)\nthis:\n  (f \\<odot> mone) (i, j) = f (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> mone = f\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation matrix_idempotent_semiring: idempotent_semiring where sup = sup_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a::finite,'b::idempotent_semiring) square\" and one = one_matrix and times = times_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.idempotent_semiring mone (\\<odot>) (\\<oplus>) (\\<preceq>)\n     (\\<prec>) mbot", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x y z.\n       x \\<odot> y \\<oplus> x \\<odot> z \\<preceq> x \\<odot> (y \\<oplus> z)\n 2. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 3. \\<And>x. mbot \\<odot> x = mbot\n 4. \\<And>x. mone \\<odot> x = x\n 5. \\<And>x. x \\<preceq> x \\<odot> mone\n 6. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 7. \\<And>x. x \\<odot> mbot = mbot", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x y z.\n       x \\<odot> y \\<oplus> x \\<odot> z \\<preceq> x \\<odot> (y \\<oplus> z)\n 2. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 3. \\<And>x. mbot \\<odot> x = mbot\n 4. \\<And>x. mone \\<odot> x = x\n 5. \\<And>x. x \\<preceq> x \\<odot> mone\n 6. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 7. \\<And>x. x \\<odot> mbot = mbot", "show \"f \\<odot> g \\<oplus> f \\<odot> h \\<preceq> f \\<odot> (g \\<oplus> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> g \\<oplus> f \\<odot> h \\<preceq> f \\<odot> (g \\<oplus> h)", "proof (unfold less_eq_matrix_def, rule allI, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"(f \\<odot> g \\<oplus> f \\<odot> h) (i,j) = (f \\<odot> g) (i,j) \\<squnion> (f \\<odot> h) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<oplus> f \\<odot> h) (i, j) =\n    (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j) =\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j) =\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j)) \\<squnion> (\\<Squnion>\\<^sub>k f (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j) \\<squnion> f (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n     {k. True}", "by (simp add: sup_monoid.sum.distrib)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<squnion> h (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n     {k. True}", "by (simp add: mult_left_dist_sup)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g \\<oplus> h) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "have \"... = (f \\<odot> (g \\<oplus> h)) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j))\n     {k. True} =\n    (f \\<odot> (g \\<oplus> h)) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True} =\n  (f \\<odot> (g \\<oplus> h)) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)\n       \\<le> (f \\<odot> (g \\<oplus> h)) (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j) =\n  (f \\<odot> (g \\<oplus> h)) (i, j)", "show \"(f \\<odot> g \\<oplus> f \\<odot> h) (i,j) \\<le> (f \\<odot> (g \\<oplus> h)) (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j) =\n  (f \\<odot> (g \\<oplus> h)) (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)\n    \\<le> (f \\<odot> (g \\<oplus> h)) (i, j)", "by simp"], ["proof (state)\nthis:\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)\n  \\<le> (f \\<odot> (g \\<oplus> h)) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> g \\<oplus> f \\<odot> h \\<preceq> f \\<odot> (g \\<oplus> h)\n\ngoal (6 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x \\<preceq> x \\<odot> mone\n 5. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 6. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x \\<preceq> x \\<odot> mone\n 5. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 6. \\<And>x. x \\<odot> mbot = mbot", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x \\<preceq> x \\<odot> mone\n 5. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 6. \\<And>x. x \\<odot> mbot = mbot", "show \"(f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"((f \\<oplus> g) \\<odot> h) (i,j) = (\\<Squnion>\\<^sub>k (f \\<oplus> g) (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f \\<oplus> g) \\<odot> h) (i, j) =\n    sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  ((f \\<oplus> g) \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  ((f \\<oplus> g) \\<odot> h) (i, j) =\n  sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (f (i,k) \\<squnion> g (i,k)) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n     {k. True}", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f \\<oplus> g) (i, k) * h (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * h (k,j) \\<squnion> g (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n     {k. True}", "by (meson mult_right_dist_sup)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f (i, k) \\<squnion> g (i, k)) * h (k, j))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * h (k,j)) \\<squnion> (\\<Squnion>\\<^sub>k g (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True}", "by (simp add: sup_monoid.sum.distrib)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * h (k, j) \\<squnion> g (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"... = (f \\<odot> h) (i,j) \\<squnion> (g \\<odot> h) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True} =\n    (f \\<odot> h) (i, j) \\<squnion> (g \\<odot> h) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True} =\n  (f \\<odot> h) (i, j) \\<squnion> (g \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. g (i, k) * h (k, j)) {k. True} =\n  (f \\<odot> h) (i, j) \\<squnion> (g \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "have \"... = (f \\<odot> h \\<oplus> g \\<odot> h) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> h) (i, j) \\<squnion> (g \\<odot> h) (i, j) =\n    (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> h) (i, j) \\<squnion> (g \\<odot> h) (i, j) =\n  (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g) \\<odot> h) (a, b) =\n       (f \\<odot> h \\<oplus> g \\<odot> h) (a, b)", "finally"], ["proof (chain)\npicking this:\n  ((f \\<oplus> g) \\<odot> h) (i, j) =\n  (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)", "show \"((f \\<oplus> g) \\<odot> h) (i,j) = (f \\<odot> h \\<oplus> g \\<odot> h) (i,j)\""], ["proof (prove)\nusing this:\n  ((f \\<oplus> g) \\<odot> h) (i, j) =\n  (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. ((f \\<oplus> g) \\<odot> h) (i, j) =\n    (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)", "."], ["proof (state)\nthis:\n  ((f \\<oplus> g) \\<odot> h) (i, j) =\n  (f \\<odot> h \\<oplus> g \\<odot> h) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h\n\ngoal (5 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x \\<preceq> x \\<odot> mone\n 4. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 5. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x \\<preceq> x \\<odot> mone\n 4. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 5. \\<And>x. x \\<odot> mbot = mbot", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x \\<preceq> x \\<odot> mone\n 4. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 5. \\<And>x. x \\<odot> mbot = mbot", "show \"mbot \\<odot> f = mbot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mbot \\<odot> f = mbot", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "have \"(mbot \\<odot> f) (i,j) = (\\<Squnion>\\<^sub>k mbot (i,k) * f (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mbot \\<odot> f) (i, j) =\n    sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (mbot \\<odot> f) (i, j) =\n  sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  (mbot \\<odot> f) (i, j) =\n  sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "have \"... = (\\<Squnion>\\<^sub>k bot * f (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True} =\n    sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True}", "by (simp add: bot_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. mbot (i, k) * f (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "have \"... = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True} = bot", "by simp"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True} = bot\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. bot * f (k, j)) {k. True} = bot\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "have \"... = mbot (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot = mbot (i, j)", "by (simp add: bot_matrix_def)"], ["proof (state)\nthis:\n  bot = mbot (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (mbot \\<odot> f) (a, b) = mbot (a, b)", "finally"], ["proof (chain)\npicking this:\n  (mbot \\<odot> f) (i, j) = mbot (i, j)", "show \"(mbot \\<odot> f) (i,j) = mbot (i,j)\""], ["proof (prove)\nusing this:\n  (mbot \\<odot> f) (i, j) = mbot (i, j)\n\ngoal (1 subgoal):\n 1. (mbot \\<odot> f) (i, j) = mbot (i, j)", "."], ["proof (state)\nthis:\n  (mbot \\<odot> f) (i, j) = mbot (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mbot \\<odot> f = mbot\n\ngoal (4 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x \\<preceq> x \\<odot> mone\n 3. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 4. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x \\<preceq> x \\<odot> mone\n 3. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 4. \\<And>x. x \\<odot> mbot = mbot", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x \\<preceq> x \\<odot> mone\n 3. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 4. \\<And>x. x \\<odot> mbot = mbot", "show \"mone \\<odot> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mone \\<odot> f = f", "by simp"], ["proof (state)\nthis:\n  mone \\<odot> f = f\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<preceq> x \\<odot> mone\n 2. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 3. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<preceq> x \\<odot> mone\n 2. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 3. \\<And>x. x \\<odot> mbot = mbot", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<preceq> x \\<odot> mone\n 2. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 3. \\<And>x. x \\<odot> mbot = mbot", "show \"f \\<preceq> f \\<odot> mone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<preceq> f \\<odot> mone", "by simp"], ["proof (state)\nthis:\n  f \\<preceq> f \\<odot> mone\n\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 2. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 2. \\<And>x. x \\<odot> mbot = mbot", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<odot> (y \\<oplus> z) = x \\<odot> y \\<oplus> x \\<odot> z\n 2. \\<And>x. x \\<odot> mbot = mbot", "show \"f \\<odot> (g \\<oplus> h) = f \\<odot> g \\<oplus> f \\<odot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> (g \\<oplus> h) = f \\<odot> g \\<oplus> f \\<odot> h", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"(f \\<odot> (g \\<oplus> h)) (i,j) = (\\<Squnion>\\<^sub>k f (i,k) * (g \\<oplus> h) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> (g \\<oplus> h)) (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> (g \\<oplus> h)) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> (g \\<oplus> h)) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<squnion> h (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n     {k. True}", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g \\<oplus> h) (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j) \\<squnion> f (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n     {k. True}", "by (meson mult_left_dist_sup)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * (g (k, j) \\<squnion> h (k, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j)) \\<squnion> (\\<Squnion>\\<^sub>k f (i,k) * h (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}", "by (simp add: sup_monoid.sum.distrib)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * g (k, j) \\<squnion> f (i, k) * h (k, j))\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"... = (f \\<odot> g) (i,j) \\<squnion> (f \\<odot> h) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n    sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n    (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<squnion>\n  sup_monoid.sum (\\<lambda>k. f (i, k) * h (k, j)) {k. True} =\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "have \"... = (f \\<odot> g \\<oplus> f \\<odot> h) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j) =\n    (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g) (i, j) \\<squnion> (f \\<odot> h) (i, j) =\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (f \\<odot> (g \\<oplus> h)) (a, b) =\n       (f \\<odot> g \\<oplus> f \\<odot> h) (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> (g \\<oplus> h)) (i, j) =\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)", "show \"(f \\<odot> (g \\<oplus> h)) (i,j) = (f \\<odot> g \\<oplus> f \\<odot> h) (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> (g \\<oplus> h)) (i, j) =\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> (g \\<oplus> h)) (i, j) =\n    (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)", "."], ["proof (state)\nthis:\n  (f \\<odot> (g \\<oplus> h)) (i, j) =\n  (f \\<odot> g \\<oplus> f \\<odot> h) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> (g \\<oplus> h) = f \\<odot> g \\<oplus> f \\<odot> h\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<odot> mbot = mbot", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<odot> mbot = mbot", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<odot> mbot = mbot", "show \"f \\<odot> mbot = mbot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> mbot = mbot", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "have \"(f \\<odot> mbot) (i,j) = (\\<Squnion>\\<^sub>k f (i,k) * mbot (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> mbot) (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> mbot) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> mbot) (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True} =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True}", "by (simp add: bot_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * mbot (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "have \"... = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True} = bot", "by simp"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True} = bot\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * bot) {k. True} = bot\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "have \"... = mbot (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot = mbot (i, j)", "by (simp add: bot_matrix_def)"], ["proof (state)\nthis:\n  bot = mbot (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f \\<odot> mbot) (a, b) = mbot (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> mbot) (i, j) = mbot (i, j)", "show \"(f \\<odot> mbot) (i,j) = mbot (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> mbot) (i, j) = mbot (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> mbot) (i, j) = mbot (i, j)", "."], ["proof (state)\nthis:\n  (f \\<odot> mbot) (i, j) = mbot (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> mbot = mbot\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation matrix_bounded_idempotent_semiring: bounded_idempotent_semiring where sup = sup_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a::finite,'b::bounded_idempotent_semiring) square\" and top = top_matrix and one = one_matrix and times = times_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_idempotent_semiring mtop mone (\\<odot>) (\\<oplus>)\n     (\\<preceq>) (\\<prec>) mbot", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<oplus> mtop = mtop", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<oplus> mtop = mtop", "show \"f \\<oplus> mtop = mtop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<oplus> mtop = mtop", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "have \"(f \\<oplus> mtop) e = f e \\<squnion> mtop e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus> mtop) e = f e \\<squnion> mtop e", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f \\<oplus> mtop) e = f e \\<squnion> mtop e\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "also"], ["proof (state)\nthis:\n  (f \\<oplus> mtop) e = f e \\<squnion> mtop e\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "have \"... = f e \\<squnion> top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f e \\<squnion> mtop e = f e \\<squnion> top", "by (simp add: top_matrix_def)"], ["proof (state)\nthis:\n  f e \\<squnion> mtop e = f e \\<squnion> top\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "also"], ["proof (state)\nthis:\n  f e \\<squnion> mtop e = f e \\<squnion> top\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "have \"... = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_homomorphism ((\\<squnion>) (f e))", "by simp"], ["proof (state)\nthis:\n  top_homomorphism ((\\<squnion>) (f e))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "also"], ["proof (state)\nthis:\n  top_homomorphism ((\\<squnion>) (f e))\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "have \"... = mtop e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top = mtop e", "by (simp add: top_matrix_def)"], ["proof (state)\nthis:\n  top = mtop e\n\ngoal (1 subgoal):\n 1. \\<And>x. (f \\<oplus> mtop) x = mtop x", "finally"], ["proof (chain)\npicking this:\n  (f \\<oplus> mtop) e = mtop e", "show \"(f \\<oplus> mtop) e = mtop e\""], ["proof (prove)\nusing this:\n  (f \\<oplus> mtop) e = mtop e\n\ngoal (1 subgoal):\n 1. (f \\<oplus> mtop) e = mtop e", "."], ["proof (state)\nthis:\n  (f \\<oplus> mtop) e = mtop e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<oplus> mtop = mtop\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stone Relation Algebras\\<close>"], ["", "text \\<open>\nFinally, we show that matrices over Stone relation algebras form a Stone relation algebra.\n\\<close>"], ["", "interpretation matrix_stone_relation_algebra: stone_relation_algebra where sup = sup_matrix and inf = inf_matrix and less_eq = less_eq_matrix and less = less_matrix and bot = \"bot_matrix :: ('a::finite,'b::stone_relation_algebra) square\" and top = top_matrix and uminus = uminus_matrix and one = one_matrix and times = times_matrix and conv = conv_matrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.stone_relation_algebra (\\<otimes>) (\\<preceq>) (\\<prec>)\n     (\\<oplus>) mbot mtop uminus_matrix mone (\\<odot>) conv_matrix", "proof"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x y z. x \\<odot> y \\<odot> z = x \\<odot> (y \\<odot> z)\n 2. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 3. \\<And>x. mbot \\<odot> x = mbot\n 4. \\<And>x. mone \\<odot> x = x\n 5. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 6. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 7. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 8. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 9. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 10. \\<ominus> \\<ominus> mone = mone", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x y z. x \\<odot> y \\<odot> z = x \\<odot> (y \\<odot> z)\n 2. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 3. \\<And>x. mbot \\<odot> x = mbot\n 4. \\<And>x. mone \\<odot> x = x\n 5. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 6. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 7. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 8. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 9. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 10. \\<ominus> \\<ominus> mone = mone", "show \"(f \\<odot> g) \\<odot> h = f \\<odot> (g \\<odot> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> g \\<odot> h = f \\<odot> (g \\<odot> h)", "by (simp add: matrix_monoid.mult_assoc)"], ["proof (state)\nthis:\n  f \\<odot> g \\<odot> h = f \\<odot> (g \\<odot> h)\n\ngoal (9 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 5. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 6. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 7. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 8. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 9. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 5. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 6. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 7. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 8. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 9. \\<ominus> \\<ominus> mone = mone", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x y z. (x \\<oplus> y) \\<odot> z = x \\<odot> z \\<oplus> y \\<odot> z\n 2. \\<And>x. mbot \\<odot> x = mbot\n 3. \\<And>x. mone \\<odot> x = x\n 4. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 5. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 6. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 7. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 8. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 9. \\<ominus> \\<ominus> mone = mone", "show \"(f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h", "by (simp add: matrix_idempotent_semiring.mult_right_dist_sup)"], ["proof (state)\nthis:\n  (f \\<oplus> g) \\<odot> h = f \\<odot> h \\<oplus> g \\<odot> h\n\ngoal (8 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 4. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 5. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 6. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 7. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 8. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 4. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 5. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 6. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 7. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 8. \\<ominus> \\<ominus> mone = mone", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x. mbot \\<odot> x = mbot\n 2. \\<And>x. mone \\<odot> x = x\n 3. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 4. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 5. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 6. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 7. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 8. \\<ominus> \\<ominus> mone = mone", "show \"mbot \\<odot> f = mbot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mbot \\<odot> f = mbot", "by simp"], ["proof (state)\nthis:\n  mbot \\<odot> f = mbot\n\ngoal (7 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 3. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 4. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 5. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 6. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 7. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 3. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 4. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 5. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 6. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 7. \\<ominus> \\<ominus> mone = mone", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x. mone \\<odot> x = x\n 2. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 3. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 4. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 5. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 6. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 7. \\<ominus> \\<ominus> mone = mone", "show \"mone \\<odot> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mone \\<odot> f = f", "by simp"], ["proof (state)\nthis:\n  mone \\<odot> f = f\n\ngoal (6 subgoals):\n 1. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 2. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 3. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 4. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 5. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 6. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 2. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 3. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 4. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 5. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 6. \\<ominus> \\<ominus> mone = mone", "fix f :: \"('a,'b) square\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. x\\<^sup>t\\<^sup>t = x\n 2. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 3. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 4. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 5. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 6. \\<ominus> \\<ominus> mone = mone", "show \"f\\<^sup>t\\<^sup>t = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<^sup>t\\<^sup>t = f", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f\\<^sup>t\\<^sup>t) (a, b) = f (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (f\\<^sup>t\\<^sup>t) (a, b) = f (a, b)", "have \"(f\\<^sup>t\\<^sup>t) (i,j) = ((f\\<^sup>t) (j,i))\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f\\<^sup>t\\<^sup>t) (i, j) = (f\\<^sup>t) (j, i)\\<^sup>T", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  (f\\<^sup>t\\<^sup>t) (i, j) = (f\\<^sup>t) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f\\<^sup>t\\<^sup>t) (a, b) = f (a, b)", "also"], ["proof (state)\nthis:\n  (f\\<^sup>t\\<^sup>t) (i, j) = (f\\<^sup>t) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f\\<^sup>t\\<^sup>t) (a, b) = f (a, b)", "have \"... = f (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f\\<^sup>t) (j, i)\\<^sup>T = f (i, j)", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  (f\\<^sup>t) (j, i)\\<^sup>T = f (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (f\\<^sup>t\\<^sup>t) (a, b) = f (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f\\<^sup>t\\<^sup>t) (i, j) = f (i, j)", "show \"(f\\<^sup>t\\<^sup>t) (i,j) = f (i,j)\""], ["proof (prove)\nusing this:\n  (f\\<^sup>t\\<^sup>t) (i, j) = f (i, j)\n\ngoal (1 subgoal):\n 1. (f\\<^sup>t\\<^sup>t) (i, j) = f (i, j)", "."], ["proof (state)\nthis:\n  (f\\<^sup>t\\<^sup>t) (i, j) = f (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f\\<^sup>t\\<^sup>t = f\n\ngoal (5 subgoals):\n 1. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 2. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 3. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 4. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 5. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 2. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 3. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 4. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 5. \\<ominus> \\<ominus> mone = mone", "fix f g :: \"('a,'b) square\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. (x \\<oplus> y)\\<^sup>t = x\\<^sup>t \\<oplus> y\\<^sup>t\n 2. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 3. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 4. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 5. \\<ominus> \\<ominus> mone = mone", "show \"(f \\<oplus> g)\\<^sup>t = f\\<^sup>t \\<oplus> g\\<^sup>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus> g)\\<^sup>t = f\\<^sup>t \\<oplus> g\\<^sup>t", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "have \"((f \\<oplus> g)\\<^sup>t) (i,j) = ((f \\<oplus> g) (j,i))\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f \\<oplus> g)\\<^sup>t) (i, j) = (f \\<oplus> g) (j, i)\\<^sup>T", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  ((f \\<oplus> g)\\<^sup>t) (i, j) = (f \\<oplus> g) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  ((f \\<oplus> g)\\<^sup>t) (i, j) = (f \\<oplus> g) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "have \"... = (f (j,i) \\<squnion> g (j,i))\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus> g) (j, i)\\<^sup>T = (f (j, i) \\<squnion> g (j, i))\\<^sup>T", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f \\<oplus> g) (j, i)\\<^sup>T = (f (j, i) \\<squnion> g (j, i))\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<oplus> g) (j, i)\\<^sup>T = (f (j, i) \\<squnion> g (j, i))\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "have \"... = (f\\<^sup>t) (i,j) \\<squnion> (g\\<^sup>t) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (j, i) \\<squnion> g (j, i))\\<^sup>T =\n    (f\\<^sup>t) (i, j) \\<squnion> (g\\<^sup>t) (i, j)", "by (simp add: conv_matrix_def conv_dist_sup)"], ["proof (state)\nthis:\n  (f (j, i) \\<squnion> g (j, i))\\<^sup>T =\n  (f\\<^sup>t) (i, j) \\<squnion> (g\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  (f (j, i) \\<squnion> g (j, i))\\<^sup>T =\n  (f\\<^sup>t) (i, j) \\<squnion> (g\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "have \"... = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f\\<^sup>t) (i, j) \\<squnion> (g\\<^sup>t) (i, j) =\n    (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)", "by (simp add: sup_matrix_def)"], ["proof (state)\nthis:\n  (f\\<^sup>t) (i, j) \\<squnion> (g\\<^sup>t) (i, j) =\n  (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<oplus> g)\\<^sup>t) (a, b) =\n       (f\\<^sup>t \\<oplus> g\\<^sup>t) (a, b)", "finally"], ["proof (chain)\npicking this:\n  ((f \\<oplus> g)\\<^sup>t) (i, j) = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)", "show \"((f \\<oplus> g)\\<^sup>t) (i,j) = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i,j)\""], ["proof (prove)\nusing this:\n  ((f \\<oplus> g)\\<^sup>t) (i, j) = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. ((f \\<oplus> g)\\<^sup>t) (i, j) = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)", "."], ["proof (state)\nthis:\n  ((f \\<oplus> g)\\<^sup>t) (i, j) = (f\\<^sup>t \\<oplus> g\\<^sup>t) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<oplus> g)\\<^sup>t = f\\<^sup>t \\<oplus> g\\<^sup>t\n\ngoal (4 subgoals):\n 1. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 2. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 3. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 4. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 2. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 3. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 4. \\<ominus> \\<ominus> mone = mone", "fix f g :: \"('a,'b) square\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. (x \\<odot> y)\\<^sup>t = y\\<^sup>t \\<odot> x\\<^sup>t\n 2. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 3. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 4. \\<ominus> \\<ominus> mone = mone", "show \"(f \\<odot> g)\\<^sup>t = g\\<^sup>t \\<odot> f\\<^sup>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g)\\<^sup>t = g\\<^sup>t \\<odot> f\\<^sup>t", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"((f \\<odot> g)\\<^sup>t) (i,j) = ((f \\<odot> g) (j,i))\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f \\<odot> g)\\<^sup>t) (i, j) = (f \\<odot> g) (j, i)\\<^sup>T", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  ((f \\<odot> g)\\<^sup>t) (i, j) = (f \\<odot> g) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  ((f \\<odot> g)\\<^sup>t) (i, j) = (f \\<odot> g) (j, i)\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (j,k) * g (k,i))\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g) (j, i)\\<^sup>T =\n    sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g) (j, i)\\<^sup>T =\n  sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g) (j, i)\\<^sup>T =\n  sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (f (j,k) * g (k,i))\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T =\n    sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True}", "by (metis (no_types) conv_dist_sum)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T =\n  sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (j, k) * g (k, i)) {k. True}\\<^sup>T =\n  sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (g (k,i))\\<^sup>T * (f (j,k))\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True} =\n    sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T)\n     {k. True}", "by (simp add: conv_dist_comp)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True} =\n  sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (f (j, k) * g (k, i))\\<^sup>T) {k. True} =\n  sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (g\\<^sup>t) (i,k) * (f\\<^sup>t) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T)\n     {k. True} =\n    sup_monoid.sum (\\<lambda>k. (g\\<^sup>t) (i, k) * (f\\<^sup>t) (k, j))\n     {k. True}", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T)\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. (g\\<^sup>t) (i, k) * (f\\<^sup>t) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. g (k, i)\\<^sup>T * f (j, k)\\<^sup>T)\n   {k. True} =\n  sup_monoid.sum (\\<lambda>k. (g\\<^sup>t) (i, k) * (f\\<^sup>t) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "have \"... = (g\\<^sup>t \\<odot> f\\<^sup>t) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. (g\\<^sup>t) (i, k) * (f\\<^sup>t) (k, j))\n     {k. True} =\n    (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. (g\\<^sup>t) (i, k) * (f\\<^sup>t) (k, j))\n   {k. True} =\n  (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       ((f \\<odot> g)\\<^sup>t) (a, b) = (g\\<^sup>t \\<odot> f\\<^sup>t) (a, b)", "finally"], ["proof (chain)\npicking this:\n  ((f \\<odot> g)\\<^sup>t) (i, j) = (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)", "show \"((f \\<odot> g)\\<^sup>t) (i,j) = (g\\<^sup>t \\<odot> f\\<^sup>t) (i,j)\""], ["proof (prove)\nusing this:\n  ((f \\<odot> g)\\<^sup>t) (i, j) = (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)\n\ngoal (1 subgoal):\n 1. ((f \\<odot> g)\\<^sup>t) (i, j) = (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)", "."], ["proof (state)\nthis:\n  ((f \\<odot> g)\\<^sup>t) (i, j) = (g\\<^sup>t \\<odot> f\\<^sup>t) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<odot> g)\\<^sup>t = g\\<^sup>t \\<odot> f\\<^sup>t\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 2. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 3. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 2. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 3. \\<ominus> \\<ominus> mone = mone", "fix f g h :: \"('a,'b) square\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       x \\<odot> y \\<otimes> z \\<preceq>\n       x \\<odot> (y \\<otimes> x\\<^sup>t \\<odot> z)\n 2. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 3. \\<ominus> \\<ominus> mone = mone", "show \"(f \\<odot> g) \\<otimes> h \\<preceq> f \\<odot> (g \\<otimes> (f\\<^sup>t \\<odot> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<odot> g \\<otimes> h \\<preceq>\n    f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)", "proof (unfold less_eq_matrix_def, rule allI, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"((f \\<odot> g) \\<otimes> h) (i,j) = (f \\<odot> g) (i,j) \\<sqinter> h (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<otimes> h) (i, j) =\n    (f \\<odot> g) (i, j) \\<sqinter> h (i, j)", "by (simp add: inf_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g \\<otimes> h) (i, j) =\n  (f \\<odot> g) (i, j) \\<sqinter> h (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g \\<otimes> h) (i, j) =\n  (f \\<odot> g) (i, j) \\<sqinter> h (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j)) \\<sqinter> h (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<odot> g) (i, j) \\<sqinter> h (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n    h (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  (f \\<odot> g) (i, j) \\<sqinter> h (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n  h (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  (f \\<odot> g) (i, j) \\<sqinter> h (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n  h (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * g (k,j) \\<sqinter> h (i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n    h (i, j) =\n    sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n     {k. True}", "by (metis (no_types) inf_right_dist_sum)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n  h (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} \\<sqinter>\n  h (i, j) =\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... \\<le> (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<sqinter> (f (i,k))\\<^sup>T * h (i,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n     {k. True}\n    \\<le> sup_monoid.sum\n           (\\<lambda>k.\n               f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n           {k. True}", "by (rule leq_sum, meson dedekind_1)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n   {k. True}\n  \\<le> sup_monoid.sum\n         (\\<lambda>k.\n             f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n         {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j) \\<sqinter> h (i, j))\n   {k. True}\n  \\<le> sup_monoid.sum\n         (\\<lambda>k.\n             f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n         {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<sqinter> (f\\<^sup>t) (k,i) * h (i,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n     {k. True}", "by (simp add: conv_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> f (i, k)\\<^sup>T * h (i, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... \\<le> (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<sqinter> (\\<Squnion>\\<^sub>l (f\\<^sup>t) (k,l) * h (l,j))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n     {k. True}\n    \\<le> sup_monoid.sum\n           (\\<lambda>k.\n               f (i, k) *\n               (g (k, j) \\<sqinter>\n                sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n                 {l. True}))\n           {k. True}", "by (rule leq_sum, rule allI, rule comp_right_isotone, rule inf.sup_right_isotone, rule ub_sum)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n   {k. True}\n  \\<le> sup_monoid.sum\n         (\\<lambda>k.\n             f (i, k) *\n             (g (k, j) \\<sqinter>\n              sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n               {l. True}))\n         {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t) (k, i) * h (i, j)))\n   {k. True}\n  \\<le> sup_monoid.sum\n         (\\<lambda>k.\n             f (i, k) *\n             (g (k, j) \\<sqinter>\n              sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n               {l. True}))\n         {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g (k,j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) *\n         (g (k, j) \\<sqinter>\n          sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n           {l. True}))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n     {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       (g (k, j) \\<sqinter>\n        sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n         {l. True}))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) *\n       (g (k, j) \\<sqinter>\n        sup_monoid.sum (\\<lambda>l. (f\\<^sup>t) (k, l) * h (l, j))\n         {l. True}))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k f (i,k) * (g \\<otimes> (f\\<^sup>t \\<odot> h)) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n     {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k. f (i, k) * (g \\<otimes> f\\<^sup>t \\<odot> h) (k, j))\n     {k. True}", "by (simp add: inf_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * (g \\<otimes> f\\<^sup>t \\<odot> h) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       f (i, k) * (g (k, j) \\<sqinter> (f\\<^sup>t \\<odot> h) (k, j)))\n   {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * (g \\<otimes> f\\<^sup>t \\<odot> h) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "have \"... = (f \\<odot> (g \\<otimes> (f\\<^sup>t \\<odot> h))) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k. f (i, k) * (g \\<otimes> f\\<^sup>t \\<odot> h) (k, j))\n     {k. True} =\n    (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k. f (i, k) * (g \\<otimes> f\\<^sup>t \\<odot> h) (k, j))\n   {k. True} =\n  (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>e a b.\n       (f \\<odot> g \\<otimes> h) (a, b)\n       \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (a, b)", "finally"], ["proof (chain)\npicking this:\n  (f \\<odot> g \\<otimes> h) (i, j)\n  \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)", "show \"((f \\<odot> g) \\<otimes> h) (i,j) \\<le> (f \\<odot> (g \\<otimes> (f\\<^sup>t \\<odot> h))) (i,j)\""], ["proof (prove)\nusing this:\n  (f \\<odot> g \\<otimes> h) (i, j)\n  \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)\n\ngoal (1 subgoal):\n 1. (f \\<odot> g \\<otimes> h) (i, j)\n    \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)", "."], ["proof (state)\nthis:\n  (f \\<odot> g \\<otimes> h) (i, j)\n  \\<le> (f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<odot> g \\<otimes> h \\<preceq>\n  f \\<odot> (g \\<otimes> f\\<^sup>t \\<odot> h)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 2. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 2. \\<ominus> \\<ominus> mone = mone", "fix f g :: \"('a,'b) square\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<ominus> \\<ominus> (x \\<odot> y) =\n       \\<ominus> \\<ominus> x \\<odot> \\<ominus> \\<ominus> y\n 2. \\<ominus> \\<ominus> mone = mone", "show \"\\<ominus>\\<ominus>(f \\<odot> g) = \\<ominus>\\<ominus>f \\<odot> \\<ominus>\\<ominus>g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus> \\<ominus> (f \\<odot> g) =\n    \\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"(\\<ominus>\\<ominus>(f \\<odot> g)) (i,j) = --((f \\<odot> g) (i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) = - - (f \\<odot> g) (i, j)", "by (simp add: uminus_matrix_def)"], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) = - - (f \\<odot> g) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "also"], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) = - - (f \\<odot> g) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"... = --(\\<Squnion>\\<^sub>k f (i,k) * g (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - (f \\<odot> g) (i, j) =\n    - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True}", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  - - (f \\<odot> g) (i, j) =\n  - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "also"], ["proof (state)\nthis:\n  - - (f \\<odot> g) (i, j) =\n  - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k --(f (i,k) * g (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} =\n    sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True}", "by (metis (no_types) pp_dist_sum)"], ["proof (state)\nthis:\n  - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "also"], ["proof (state)\nthis:\n  - - sup_monoid.sum (\\<lambda>k. f (i, k) * g (k, j)) {k. True} =\n  sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k --(f (i,k)) * --(g (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True} =\n    sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True}", "by (meson pp_dist_comp)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True} =\n  sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. - - (f (i, k) * g (k, j))) {k. True} =\n  sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"... = (\\<Squnion>\\<^sub>k (\\<ominus>\\<ominus>f) (i,k) * (\\<ominus>\\<ominus>g) (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True} =\n    sup_monoid.sum\n     (\\<lambda>k.\n         (\\<ominus> \\<ominus> f) (i, k) * (\\<ominus> \\<ominus> g) (k, j))\n     {k. True}", "by (simp add: uminus_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       (\\<ominus> \\<ominus> f) (i, k) * (\\<ominus> \\<ominus> g) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "also"], ["proof (state)\nthis:\n  sup_monoid.sum (\\<lambda>k. - - f (i, k) * - - g (k, j)) {k. True} =\n  sup_monoid.sum\n   (\\<lambda>k.\n       (\\<ominus> \\<ominus> f) (i, k) * (\\<ominus> \\<ominus> g) (k, j))\n   {k. True}\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "have \"... = (\\<ominus>\\<ominus>f \\<odot> \\<ominus>\\<ominus>g) (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_monoid.sum\n     (\\<lambda>k.\n         (\\<ominus> \\<ominus> f) (i, k) * (\\<ominus> \\<ominus> g) (k, j))\n     {k. True} =\n    (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)", "by (simp add: times_matrix_def)"], ["proof (state)\nthis:\n  sup_monoid.sum\n   (\\<lambda>k.\n       (\\<ominus> \\<ominus> f) (i, k) * (\\<ominus> \\<ominus> g) (k, j))\n   {k. True} =\n  (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (\\<ominus> \\<ominus> (f \\<odot> g)) (a, b) =\n       (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (a, b)", "finally"], ["proof (chain)\npicking this:\n  (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) =\n  (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)", "show \"(\\<ominus>\\<ominus>(f \\<odot> g)) (i,j) = (\\<ominus>\\<ominus>f \\<odot> \\<ominus>\\<ominus>g) (i,j)\""], ["proof (prove)\nusing this:\n  (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) =\n  (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)\n\ngoal (1 subgoal):\n 1. (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) =\n    (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)", "."], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> (f \\<odot> g)) (i, j) =\n  (\\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g) (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<ominus> \\<ominus> (f \\<odot> g) =\n  \\<ominus> \\<ominus> f \\<odot> \\<ominus> \\<ominus> g\n\ngoal (1 subgoal):\n 1. \\<ominus> \\<ominus> mone = mone", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus> \\<ominus> mone = mone", "let ?o = \"mone :: ('a,'b) square\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus> \\<ominus> mone = mone", "show \"\\<ominus>\\<ominus>?o = ?o\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus> \\<ominus> mone = mone", "proof (rule ext, rule prod_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "have \"(\\<ominus>\\<ominus>?o) (i,j) = --(?o (i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus> \\<ominus> mone) (i, j) = - - mone (i, j)", "by (simp add: uminus_matrix_def)"], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> mone) (i, j) = - - mone (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "also"], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> mone) (i, j) = - - mone (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "have \"... = --(if i = j then 1 else bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - mone (i, j) = - - (if i = j then 1::'b else bot)", "by (simp add: one_matrix_def)"], ["proof (state)\nthis:\n  - - mone (i, j) = - - (if i = j then 1::'b else bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "also"], ["proof (state)\nthis:\n  - - mone (i, j) = - - (if i = j then 1::'b else bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "have \"... = (if i = j then --1 else --bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - (if i = j then 1::'b else bot) =\n    (if i = j then - - (1::'b) else - - bot)", "by simp"], ["proof (state)\nthis:\n  - - (if i = j then 1::'b else bot) =\n  (if i = j then - - (1::'b) else - - bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "also"], ["proof (state)\nthis:\n  - - (if i = j then 1::'b else bot) =\n  (if i = j then - - (1::'b) else - - bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "have \"... = (if i = j then 1 else bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i = j then - - (1::'b) else - - bot) =\n    (if i = j then 1::'b else bot)", "by auto"], ["proof (state)\nthis:\n  (if i = j then - - (1::'b) else - - bot) = (if i = j then 1::'b else bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "also"], ["proof (state)\nthis:\n  (if i = j then - - (1::'b) else - - bot) = (if i = j then 1::'b else bot)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "have \"... = ?o (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i = j then 1::'b else bot) = mone (i, j)", "by (simp add: one_matrix_def)"], ["proof (state)\nthis:\n  (if i = j then 1::'b else bot) = mone (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>x a b. (\\<ominus> \\<ominus> mone) (a, b) = mone (a, b)", "finally"], ["proof (chain)\npicking this:\n  (\\<ominus> \\<ominus> mone) (i, j) = mone (i, j)", "show \"(\\<ominus>\\<ominus>?o) (i,j) = ?o (i,j)\""], ["proof (prove)\nusing this:\n  (\\<ominus> \\<ominus> mone) (i, j) = mone (i, j)\n\ngoal (1 subgoal):\n 1. (\\<ominus> \\<ominus> mone) (i, j) = mone (i, j)", "."], ["proof (state)\nthis:\n  (\\<ominus> \\<ominus> mone) (i, j) = mone (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<ominus> \\<ominus> mone = mone\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}