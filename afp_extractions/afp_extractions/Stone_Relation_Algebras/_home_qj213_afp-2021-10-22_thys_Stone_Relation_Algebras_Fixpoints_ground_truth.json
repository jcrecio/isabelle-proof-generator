{"file_name": "/home/qj213/afp-2021-10-22/thys/Stone_Relation_Algebras/Fixpoints.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stone_Relation_Algebras", "problem_names": ["lemma least_fixpoint_unique:\n  \"has_least_fixpoint f \\<Longrightarrow> \\<exists>!x . is_least_fixpoint f x\"", "lemma greatest_fixpoint_unique:\n  \"has_greatest_fixpoint f \\<Longrightarrow> \\<exists>!x . is_greatest_fixpoint f x\"", "lemma least_prefixpoint_unique:\n  \"has_least_prefixpoint f \\<Longrightarrow> \\<exists>!x . is_least_prefixpoint f x\"", "lemma greatest_postfixpoint_unique:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> \\<exists>!x . is_greatest_postfixpoint f x\"", "lemma least_fixpoint:\n  \"has_least_fixpoint f \\<Longrightarrow> is_least_fixpoint f (\\<mu> f)\"", "lemma greatest_fixpoint:\n  \"has_greatest_fixpoint f \\<Longrightarrow> is_greatest_fixpoint f (\\<nu> f)\"", "lemma least_prefixpoint:\n  \"has_least_prefixpoint f \\<Longrightarrow> is_least_prefixpoint f (p\\<mu> f)\"", "lemma greatest_postfixpoint:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> is_greatest_postfixpoint f (p\\<nu> f)\"", "lemma least_fixpoint_same:\n  \"is_least_fixpoint f x \\<Longrightarrow> x = \\<mu> f\"", "lemma greatest_fixpoint_same:\n  \"is_greatest_fixpoint f x \\<Longrightarrow> x = \\<nu> f\"", "lemma least_prefixpoint_same:\n  \"is_least_prefixpoint f x \\<Longrightarrow> x = p\\<mu> f\"", "lemma greatest_postfixpoint_same:\n  \"is_greatest_postfixpoint f x \\<Longrightarrow> x = p\\<nu> f\"", "lemma least_fixpoint_char:\n  \"is_least_fixpoint f x \\<longleftrightarrow> has_least_fixpoint f \\<and> x = \\<mu> f\"", "lemma least_prefixpoint_char:\n  \"is_least_prefixpoint f x \\<longleftrightarrow> has_least_prefixpoint f \\<and> x = p\\<mu> f\"", "lemma greatest_fixpoint_char:\n  \"is_greatest_fixpoint f x \\<longleftrightarrow> has_greatest_fixpoint f \\<and> x = \\<nu> f\"", "lemma greatest_postfixpoint_char:\n  \"is_greatest_postfixpoint f x \\<longleftrightarrow> has_greatest_postfixpoint f \\<and> x = p\\<nu> f\"", "lemma mu_unfold:\n  \"has_least_fixpoint f \\<Longrightarrow> f (\\<mu> f) = \\<mu> f\"", "lemma pmu_unfold:\n  \"has_least_prefixpoint f \\<Longrightarrow> f (p\\<mu> f) \\<le> p\\<mu> f\"", "lemma nu_unfold:\n  \"has_greatest_fixpoint f \\<Longrightarrow> \\<nu> f = f (\\<nu> f)\"", "lemma pnu_unfold:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> p\\<nu> f \\<le> f (p\\<nu> f)\"", "lemma least_prefixpoint_fixpoint:\n  \"has_least_prefixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> is_least_fixpoint f (p\\<mu> f)\"", "lemma pmu_mu:\n  \"has_least_prefixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> p\\<mu> f = \\<mu> f\"", "lemma greatest_postfixpoint_fixpoint:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> is_greatest_fixpoint f (p\\<nu> f)\"", "lemma pnu_nu:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> p\\<nu> f = \\<nu> f\"", "lemma pmu_isotone:\n  \"has_least_prefixpoint f \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> p\\<mu> f \\<le> p\\<mu> g\"", "lemma mu_isotone:\n  \"has_least_prefixpoint f \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> \\<mu> f \\<le> \\<mu> g\"", "lemma pnu_isotone:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> p\\<nu> f \\<le> p\\<nu> g\"", "lemma nu_isotone:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g\"", "lemma mu_square:\n  \"isotone f \\<Longrightarrow> has_least_fixpoint f \\<Longrightarrow> has_least_fixpoint (f \\<circ> f) \\<Longrightarrow> \\<mu> f = \\<mu> (f \\<circ> f)\"", "lemma nu_square:\n  \"isotone f \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> f) \\<Longrightarrow> \\<nu> f = \\<nu> (f \\<circ> f)\"", "lemma mu_roll:\n  assumes \"isotone g\"\n      and \"has_least_fixpoint (f \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> f)\"\n    shows \"\\<mu> (g \\<circ> f) = g (\\<mu> (f \\<circ> g))\"", "lemma nu_roll:\n  assumes \"isotone g\"\n      and \"has_greatest_fixpoint (f \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> f)\"\n    shows \"\\<nu> (g \\<circ> f) = g (\\<nu> (f \\<circ> g))\"", "lemma mu_below_nu:\n  \"has_least_fixpoint f \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> \\<mu> f \\<le> \\<nu> f\"", "lemma pmu_below_pnu_fix:\n  \"has_fixpoint f \\<Longrightarrow> has_least_prefixpoint f \\<Longrightarrow> has_greatest_postfixpoint f \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f\"", "lemma pmu_below_pnu_iso:\n  \"isotone f \\<Longrightarrow> has_least_prefixpoint f \\<Longrightarrow> has_greatest_postfixpoint f \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f\"", "lemma mu_fusion_1:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_fixpoint h\"\n      and \"l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h)))\"\n    shows \"l (p\\<mu> g) \\<le> \\<mu> h\"", "lemma mu_fusion_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_fixpoint h \\<Longrightarrow> l \\<circ> g \\<le>\\<le> h \\<circ> l \\<Longrightarrow> l (p\\<mu> g) \\<le> \\<mu> h\"", "lemma mu_fusion_equal_1:\n  \"galois l u \\<Longrightarrow> isotone g \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_fixpoint h \\<Longrightarrow> l (g (u (\\<mu> h))) \\<le> h(l(u(\\<mu> h))) \\<Longrightarrow> l (g (p\\<mu> g)) = h (l (p\\<mu> g)) \\<Longrightarrow> \\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (\\<mu> g)\"", "lemma mu_fusion_equal_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_prefixpoint h \\<Longrightarrow> l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h))) \\<and> l (g (p\\<mu> g)) = h (l (p\\<mu> g)) \\<longrightarrow> p\\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (p\\<mu> g)\"", "lemma mu_fusion_equal_3:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_fixpoint h\"\n      and \"l \\<circ> g = h \\<circ> l\"\n    shows \"\\<mu> h = l (p\\<mu> g)\"\n      and \"\\<mu> h = l (\\<mu> g)\"", "lemma mu_fusion_equal_4:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_prefixpoint h\"\n      and \"l \\<circ> g = h \\<circ> l\"\n    shows \"p\\<mu> h = l (p\\<mu> g)\"\n      and \"\\<mu> h = l (p\\<mu> g)\"", "lemma nu_fusion_1:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_fixpoint h\"\n      and \"h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h)))\"\n    shows \"\\<nu> h \\<le> u (p\\<nu> g)\"", "lemma nu_fusion_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_fixpoint h \\<Longrightarrow> h \\<circ> u \\<le>\\<le> u \\<circ> g \\<Longrightarrow> \\<nu> h \\<le> u (p\\<nu> g)\"", "lemma nu_fusion_equal_1:\n  \"galois l u \\<Longrightarrow> isotone g \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_fixpoint h \\<Longrightarrow> h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h))) \\<Longrightarrow> h (u (p\\<nu> g)) = u (g (p\\<nu> g)) \\<Longrightarrow> \\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (\\<nu> g)\"", "lemma nu_fusion_equal_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_postfixpoint h \\<Longrightarrow> h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h))) \\<and> h (u (p\\<nu> g)) = u (g (p\\<nu> g)) \\<Longrightarrow> p\\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (p\\<nu> g)\"", "lemma nu_fusion_equal_3:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_fixpoint h\"\n      and \"h \\<circ> u = u \\<circ> g\"\n    shows \"\\<nu> h = u (p\\<nu> g)\"\n      and \"\\<nu> h = u (\\<nu> g)\"", "lemma nu_fusion_equal_4:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_postfixpoint h\"\n      and \"h \\<circ> u = u \\<circ> g\"\n    shows \"p\\<nu> h = u (p\\<nu> g)\"\n      and \"\\<nu> h = u (p\\<nu> g)\"", "lemma mu_exchange_1:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> h)\"\n      and \"l \\<circ> h \\<circ> g \\<le>\\<le> g \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\"", "lemma mu_exchange_2:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> l)\"\n      and \"has_least_prefixpoint (h \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> h)\"\n      and \"has_least_fixpoint (h \\<circ> g)\"\n      and \"l \\<circ> h \\<circ> g \\<le>\\<le> g \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)\"", "lemma mu_exchange_equal:\n  assumes \"galois l u\"\n      and \"galois k t\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> l)\"\n      and \"has_least_prefixpoint (k \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> k)\"\n      and \"l \\<circ> h \\<circ> k = k \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\"\n      and \"\\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)\"", "lemma nu_exchange_1:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> h)\"\n      and \"g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> h \\<circ> g\"\n    shows \"\\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)\"", "lemma nu_exchange_2:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> u)\"\n      and \"has_greatest_postfixpoint (h \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> h)\"\n      and \"has_greatest_fixpoint (h \\<circ> g)\"\n      and \"g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> h \\<circ> g\"\n    shows \"\\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)\"", "lemma nu_exchange_equal:\n  assumes \"galois l u\"\n      and \"galois k t\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> u)\"\n      and \"has_greatest_postfixpoint (t \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> t)\"\n      and \"u \\<circ> h \\<circ> t = t \\<circ> h \\<circ> u\"\n    shows \"\\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\"\n      and \"\\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)\"", "lemma mu_commute_fixpoint_1:\n  \"isotone f \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint f (\\<mu> (f \\<circ> g))\"", "lemma mu_commute_fixpoint_2:\n  \"isotone g \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint g (\\<mu> (f \\<circ> g))\"", "lemma mu_commute_least_fixpoint:\n  \"isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> has_least_fixpoint f \\<Longrightarrow> has_least_fixpoint g \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> \\<mu> (f \\<circ> g) = \\<mu> f \\<Longrightarrow> \\<mu> g \\<le> \\<mu> f\"", "lemma nu_commute_fixpoint_1:\n  \"isotone f \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint f (\\<nu>(f \\<circ> g))\"", "lemma nu_commute_fixpoint_2:\n  \"isotone g \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint g (\\<nu>(f \\<circ> g))\"", "lemma nu_commute_greatest_fixpoint:\n  \"isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> has_greatest_fixpoint g \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> \\<nu> (f \\<circ> g) = \\<nu> f \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g\"", "lemma mu_diagonal_1:\n  assumes \"isotone (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"\n      and \"\\<forall>x . has_least_fixpoint (\\<lambda>y . f x y)\"\n      and \"has_least_prefixpoint (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"\n    shows \"\\<mu> (\\<lambda>x . f x x) = \\<mu> (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"", "lemma mu_diagonal_2:\n  \"\\<forall>x . isotone (\\<lambda>y . f x y) \\<and> isotone (\\<lambda>y . f y x) \\<and> has_least_prefixpoint (\\<lambda>y . f x y) \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x . \\<mu> (\\<lambda>y . f x y)) \\<Longrightarrow> \\<mu> (\\<lambda>x . f x x) = \\<mu> (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"", "lemma nu_diagonal_1:\n  assumes \"isotone (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\"\n      and \"\\<forall>x . has_greatest_fixpoint (\\<lambda>y . f x y)\"\n      and \"has_greatest_postfixpoint (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\"\n    shows \"\\<nu> (\\<lambda>x . f x x) = \\<nu> (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\"", "lemma nu_diagonal_2:\n  \"\\<forall>x . isotone (\\<lambda>y . f x y) \\<and> isotone (\\<lambda>y . f y x) \\<and> has_greatest_postfixpoint (\\<lambda>y . f x y) \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x . \\<nu> (\\<lambda>y . f x y)) \\<Longrightarrow> \\<nu> (\\<lambda>x . f x x) = \\<nu> (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\""], "translations": [["", "lemma least_fixpoint_unique:\n  \"has_least_fixpoint f \\<Longrightarrow> \\<exists>!x . is_least_fixpoint f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_least_fixpoint f x", "using has_least_fixpoint_def is_least_fixpoint_def antisym"], ["proof (prove)\nusing this:\n  has_least_fixpoint ?f \\<equiv> \\<exists>x. is_least_fixpoint ?f x\n  is_least_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> ?x \\<le> y)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. has_least_fixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_least_fixpoint f x", "by auto"], ["", "lemma greatest_fixpoint_unique:\n  \"has_greatest_fixpoint f \\<Longrightarrow> \\<exists>!x . is_greatest_fixpoint f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_greatest_fixpoint f x", "using has_greatest_fixpoint_def is_greatest_fixpoint_def antisym"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint ?f \\<equiv> \\<exists>x. is_greatest_fixpoint ?f x\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_greatest_fixpoint f x", "by auto"], ["", "lemma least_prefixpoint_unique:\n  \"has_least_prefixpoint f \\<Longrightarrow> \\<exists>!x . is_least_prefixpoint f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_prefixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_least_prefixpoint f x", "using has_least_prefixpoint_def is_least_prefixpoint_def antisym"], ["proof (prove)\nusing this:\n  has_least_prefixpoint ?f \\<equiv> \\<exists>x. is_least_prefixpoint ?f x\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. has_least_prefixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_least_prefixpoint f x", "by auto"], ["", "lemma greatest_postfixpoint_unique:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> \\<exists>!x . is_greatest_postfixpoint f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_postfixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_greatest_postfixpoint f x", "using has_greatest_postfixpoint_def is_greatest_postfixpoint_def antisym"], ["proof (prove)\nusing this:\n  has_greatest_postfixpoint ?f \\<equiv>\n  \\<exists>x. is_greatest_postfixpoint ?f x\n  is_greatest_postfixpoint ?f ?x \\<equiv>\n  ?x \\<le> ?f ?x \\<and>\n  (\\<forall>y. y \\<le> ?f y \\<longrightarrow> y \\<le> ?x)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. has_greatest_postfixpoint f \\<Longrightarrow>\n    \\<exists>!x. is_greatest_postfixpoint f x", "by auto"], ["", "lemma least_fixpoint:\n  \"has_least_fixpoint f \\<Longrightarrow> is_least_fixpoint f (\\<mu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint f \\<Longrightarrow> is_least_fixpoint f (\\<mu> f)", "by (simp add: least_fixpoint_unique theI' the_least_fixpoint_def)"], ["", "lemma greatest_fixpoint:\n  \"has_greatest_fixpoint f \\<Longrightarrow> is_greatest_fixpoint f (\\<nu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint f \\<Longrightarrow>\n    is_greatest_fixpoint f (\\<nu> f)", "by (simp add: greatest_fixpoint_unique theI' the_greatest_fixpoint_def)"], ["", "lemma least_prefixpoint:\n  \"has_least_prefixpoint f \\<Longrightarrow> is_least_prefixpoint f (p\\<mu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_prefixpoint f \\<Longrightarrow>\n    is_least_prefixpoint f (p\\<mu> f)", "by (simp add: least_prefixpoint_unique theI' the_least_prefixpoint_def)"], ["", "lemma greatest_postfixpoint:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> is_greatest_postfixpoint f (p\\<nu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_postfixpoint f \\<Longrightarrow>\n    is_greatest_postfixpoint f (p\\<nu> f)", "by (simp add: greatest_postfixpoint_unique theI' the_greatest_postfixpoint_def)"], ["", "lemma least_fixpoint_same:\n  \"is_least_fixpoint f x \\<Longrightarrow> x = \\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_fixpoint f x \\<Longrightarrow> x = \\<mu> f", "by (simp add: is_least_fixpoint_def antisym the_equality the_least_fixpoint_def)"], ["", "lemma greatest_fixpoint_same:\n  \"is_greatest_fixpoint f x \\<Longrightarrow> x = \\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint f x \\<Longrightarrow> x = \\<nu> f", "using greatest_fixpoint greatest_fixpoint_unique has_greatest_fixpoint_def"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint ?f \\<Longrightarrow>\n  is_greatest_fixpoint ?f (\\<nu> ?f)\n  has_greatest_fixpoint ?f \\<Longrightarrow>\n  \\<exists>!x. is_greatest_fixpoint ?f x\n  has_greatest_fixpoint ?f \\<equiv> \\<exists>x. is_greatest_fixpoint ?f x\n\ngoal (1 subgoal):\n 1. is_greatest_fixpoint f x \\<Longrightarrow> x = \\<nu> f", "by auto"], ["", "lemma least_prefixpoint_same:\n  \"is_least_prefixpoint f x \\<Longrightarrow> x = p\\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_prefixpoint f x \\<Longrightarrow> x = p\\<mu> f", "using has_least_prefixpoint_def least_prefixpoint least_prefixpoint_unique"], ["proof (prove)\nusing this:\n  has_least_prefixpoint ?f \\<equiv> \\<exists>x. is_least_prefixpoint ?f x\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  \\<exists>!x. is_least_prefixpoint ?f x\n\ngoal (1 subgoal):\n 1. is_least_prefixpoint f x \\<Longrightarrow> x = p\\<mu> f", "by blast"], ["", "lemma greatest_postfixpoint_same:\n  \"is_greatest_postfixpoint f x \\<Longrightarrow> x = p\\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint f x \\<Longrightarrow> x = p\\<nu> f", "using greatest_postfixpoint greatest_postfixpoint_unique has_greatest_postfixpoint_def"], ["proof (prove)\nusing this:\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  is_greatest_postfixpoint ?f (p\\<nu> ?f)\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  \\<exists>!x. is_greatest_postfixpoint ?f x\n  has_greatest_postfixpoint ?f \\<equiv>\n  \\<exists>x. is_greatest_postfixpoint ?f x\n\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint f x \\<Longrightarrow> x = p\\<nu> f", "by auto"], ["", "lemma least_fixpoint_char:\n  \"is_least_fixpoint f x \\<longleftrightarrow> has_least_fixpoint f \\<and> x = \\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_fixpoint f x = (has_least_fixpoint f \\<and> x = \\<mu> f)", "using has_least_fixpoint_def least_fixpoint_same"], ["proof (prove)\nusing this:\n  has_least_fixpoint ?f \\<equiv> \\<exists>x. is_least_fixpoint ?f x\n  is_least_fixpoint ?f ?x \\<Longrightarrow> ?x = \\<mu> ?f\n\ngoal (1 subgoal):\n 1. is_least_fixpoint f x = (has_least_fixpoint f \\<and> x = \\<mu> f)", "by auto"], ["", "lemma least_prefixpoint_char:\n  \"is_least_prefixpoint f x \\<longleftrightarrow> has_least_prefixpoint f \\<and> x = p\\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_prefixpoint f x = (has_least_prefixpoint f \\<and> x = p\\<mu> f)", "using has_least_prefixpoint_def least_prefixpoint_same"], ["proof (prove)\nusing this:\n  has_least_prefixpoint ?f \\<equiv> \\<exists>x. is_least_prefixpoint ?f x\n  is_least_prefixpoint ?f ?x \\<Longrightarrow> ?x = p\\<mu> ?f\n\ngoal (1 subgoal):\n 1. is_least_prefixpoint f x = (has_least_prefixpoint f \\<and> x = p\\<mu> f)", "by auto"], ["", "lemma greatest_fixpoint_char:\n  \"is_greatest_fixpoint f x \\<longleftrightarrow> has_greatest_fixpoint f \\<and> x = \\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint f x = (has_greatest_fixpoint f \\<and> x = \\<nu> f)", "using greatest_fixpoint_same has_greatest_fixpoint_def"], ["proof (prove)\nusing this:\n  is_greatest_fixpoint ?f ?x \\<Longrightarrow> ?x = \\<nu> ?f\n  has_greatest_fixpoint ?f \\<equiv> \\<exists>x. is_greatest_fixpoint ?f x\n\ngoal (1 subgoal):\n 1. is_greatest_fixpoint f x = (has_greatest_fixpoint f \\<and> x = \\<nu> f)", "by auto"], ["", "lemma greatest_postfixpoint_char:\n  \"is_greatest_postfixpoint f x \\<longleftrightarrow> has_greatest_postfixpoint f \\<and> x = p\\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint f x =\n    (has_greatest_postfixpoint f \\<and> x = p\\<nu> f)", "using greatest_postfixpoint_same has_greatest_postfixpoint_def"], ["proof (prove)\nusing this:\n  is_greatest_postfixpoint ?f ?x \\<Longrightarrow> ?x = p\\<nu> ?f\n  has_greatest_postfixpoint ?f \\<equiv>\n  \\<exists>x. is_greatest_postfixpoint ?f x\n\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint f x =\n    (has_greatest_postfixpoint f \\<and> x = p\\<nu> f)", "by auto"], ["", "text \\<open>\nNext come the unfold rules for least/greatest (pre/post)fixpoints.\n\\<close>"], ["", "lemma mu_unfold:\n  \"has_least_fixpoint f \\<Longrightarrow> f (\\<mu> f) = \\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint f \\<Longrightarrow> f (\\<mu> f) = \\<mu> f", "using is_least_fixpoint_def least_fixpoint"], ["proof (prove)\nusing this:\n  is_least_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> ?x \\<le> y)\n  has_least_fixpoint ?f \\<Longrightarrow> is_least_fixpoint ?f (\\<mu> ?f)\n\ngoal (1 subgoal):\n 1. has_least_fixpoint f \\<Longrightarrow> f (\\<mu> f) = \\<mu> f", "by auto"], ["", "lemma pmu_unfold:\n  \"has_least_prefixpoint f \\<Longrightarrow> f (p\\<mu> f) \\<le> p\\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_prefixpoint f \\<Longrightarrow> f (p\\<mu> f) \\<le> p\\<mu> f", "using is_least_prefixpoint_def least_prefixpoint"], ["proof (prove)\nusing this:\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n\ngoal (1 subgoal):\n 1. has_least_prefixpoint f \\<Longrightarrow> f (p\\<mu> f) \\<le> p\\<mu> f", "by blast"], ["", "lemma nu_unfold:\n  \"has_greatest_fixpoint f \\<Longrightarrow> \\<nu> f = f (\\<nu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint f \\<Longrightarrow> \\<nu> f = f (\\<nu> f)", "by (metis is_greatest_fixpoint_def greatest_fixpoint)"], ["", "lemma pnu_unfold:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> p\\<nu> f \\<le> f (p\\<nu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_postfixpoint f \\<Longrightarrow>\n    p\\<nu> f \\<le> f (p\\<nu> f)", "using greatest_postfixpoint is_greatest_postfixpoint_def"], ["proof (prove)\nusing this:\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  is_greatest_postfixpoint ?f (p\\<nu> ?f)\n  is_greatest_postfixpoint ?f ?x \\<equiv>\n  ?x \\<le> ?f ?x \\<and>\n  (\\<forall>y. y \\<le> ?f y \\<longrightarrow> y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. has_greatest_postfixpoint f \\<Longrightarrow>\n    p\\<nu> f \\<le> f (p\\<nu> f)", "by auto"], ["", "text \\<open>\nPre-/postfixpoints of isotone functions are fixpoints.\n\\<close>"], ["", "lemma least_prefixpoint_fixpoint:\n  \"has_least_prefixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> is_least_fixpoint f (p\\<mu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> is_least_fixpoint f (p\\<mu> f)", "using is_least_fixpoint_def is_least_prefixpoint_def least_prefixpoint antisym isotone_def"], ["proof (prove)\nusing this:\n  is_least_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> ?x \\<le> y)\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> is_least_fixpoint f (p\\<mu> f)", "by auto"], ["", "lemma pmu_mu:\n  \"has_least_prefixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> p\\<mu> f = \\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> p\\<mu> f = \\<mu> f", "by (simp add: least_fixpoint_same least_prefixpoint_fixpoint)"], ["", "lemma greatest_postfixpoint_fixpoint:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> is_greatest_fixpoint f (p\\<nu> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> is_greatest_fixpoint f (p\\<nu> f)", "using greatest_postfixpoint is_greatest_fixpoint_def is_greatest_postfixpoint_def antisym isotone_def"], ["proof (prove)\nusing this:\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  is_greatest_postfixpoint ?f (p\\<nu> ?f)\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  is_greatest_postfixpoint ?f ?x \\<equiv>\n  ?x \\<le> ?f ?x \\<and>\n  (\\<forall>y. y \\<le> ?f y \\<longrightarrow> y \\<le> ?x)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> is_greatest_fixpoint f (p\\<nu> f)", "by auto"], ["", "lemma pnu_nu:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> isotone f \\<Longrightarrow> p\\<nu> f = \\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; isotone f\\<rbrakk>\n    \\<Longrightarrow> p\\<nu> f = \\<nu> f", "by (simp add: greatest_fixpoint_same greatest_postfixpoint_fixpoint)"], ["", "text \\<open>\nThe fixpoint operators preserve isotonicity.\n\\<close>"], ["", "lemma pmu_isotone:\n  \"has_least_prefixpoint f \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> p\\<mu> f \\<le> p\\<mu> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; has_least_prefixpoint g;\n     f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> p\\<mu> f \\<le> p\\<mu> g", "by (metis is_least_prefixpoint_def least_prefixpoint order_trans lifted_less_eq_def)"], ["", "lemma mu_isotone:\n  \"has_least_prefixpoint f \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> \\<mu> f \\<le> \\<mu> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; has_least_prefixpoint g; isotone f;\n     isotone g; f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> \\<mu> f \\<le> \\<mu> g", "using pmu_isotone pmu_mu"], ["proof (prove)\nusing this:\n  \\<lbrakk>has_least_prefixpoint ?f; has_least_prefixpoint ?g;\n   ?f \\<le>\\<le> ?g\\<rbrakk>\n  \\<Longrightarrow> p\\<mu> ?f \\<le> p\\<mu> ?g\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> p\\<mu> ?f = \\<mu> ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_prefixpoint f; has_least_prefixpoint g; isotone f;\n     isotone g; f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> \\<mu> f \\<le> \\<mu> g", "by fastforce"], ["", "lemma pnu_isotone:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> p\\<nu> f \\<le> p\\<nu> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; has_greatest_postfixpoint g;\n     f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> p\\<nu> f \\<le> p\\<nu> g", "by (metis greatest_postfixpoint is_greatest_postfixpoint_def order_trans lifted_less_eq_def)"], ["", "lemma nu_isotone:\n  \"has_greatest_postfixpoint f \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> f \\<le>\\<le> g \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; has_greatest_postfixpoint g;\n     isotone f; isotone g; f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g", "using pnu_isotone pnu_nu"], ["proof (prove)\nusing this:\n  \\<lbrakk>has_greatest_postfixpoint ?f; has_greatest_postfixpoint ?g;\n   ?f \\<le>\\<le> ?g\\<rbrakk>\n  \\<Longrightarrow> p\\<nu> ?f \\<le> p\\<nu> ?g\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> p\\<nu> ?f = \\<nu> ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>has_greatest_postfixpoint f; has_greatest_postfixpoint g;\n     isotone f; isotone g; f \\<le>\\<le> g\\<rbrakk>\n    \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g", "by fastforce"], ["", "text \\<open>\nThe square rule for fixpoints of a function applied twice.\n\\<close>"], ["", "lemma mu_square:\n  \"isotone f \\<Longrightarrow> has_least_fixpoint f \\<Longrightarrow> has_least_fixpoint (f \\<circ> f) \\<Longrightarrow> \\<mu> f = \\<mu> (f \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_least_fixpoint f;\n     has_least_fixpoint (f \\<circ> f)\\<rbrakk>\n    \\<Longrightarrow> \\<mu> f = \\<mu> (f \\<circ> f)", "by (metis (no_types, hide_lams) antisym is_least_fixpoint_def isotone_def least_fixpoint_char least_fixpoint_unique o_apply)"], ["", "lemma nu_square:\n  \"isotone f \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> f) \\<Longrightarrow> \\<nu> f = \\<nu> (f \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_greatest_fixpoint f;\n     has_greatest_fixpoint (f \\<circ> f)\\<rbrakk>\n    \\<Longrightarrow> \\<nu> f = \\<nu> (f \\<circ> f)", "by (metis (no_types, hide_lams) antisym is_greatest_fixpoint_def isotone_def greatest_fixpoint_char greatest_fixpoint_unique o_apply)"], ["", "text \\<open>\nThe rolling rule for fixpoints of the composition of two functions.\n\\<close>"], ["", "lemma mu_roll:\n  assumes \"isotone g\"\n      and \"has_least_fixpoint (f \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> f)\"\n    shows \"\\<mu> (g \\<circ> f) = g (\\<mu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (g \\<circ> f) = g (\\<mu> (f \\<circ> g))", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<mu> (g \\<circ> f) \\<le> g (\\<mu> (f \\<circ> g))\n 2. g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)", "show \"\\<mu> (g \\<circ> f) \\<le> g (\\<mu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (g \\<circ> f) \\<le> g (\\<mu> (f \\<circ> g))", "by (metis assms(2-3) comp_apply is_least_fixpoint_def least_fixpoint)"], ["proof (state)\nthis:\n  \\<mu> (g \\<circ> f) \\<le> g (\\<mu> (f \\<circ> g))\n\ngoal (1 subgoal):\n 1. g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)", "have \"is_least_fixpoint (g \\<circ> f) (\\<mu> (g \\<circ> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_fixpoint (g \\<circ> f) (\\<mu> (g \\<circ> f))", "by (simp add: assms(3) least_fixpoint)"], ["proof (state)\nthis:\n  is_least_fixpoint (g \\<circ> f) (\\<mu> (g \\<circ> f))\n\ngoal (1 subgoal):\n 1. g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)", "thus \"g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)\""], ["proof (prove)\nusing this:\n  is_least_fixpoint (g \\<circ> f) (\\<mu> (g \\<circ> f))\n\ngoal (1 subgoal):\n 1. g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)", "by (metis (no_types) assms(1-2) comp_def is_least_fixpoint_def least_fixpoint isotone_def)"], ["proof (state)\nthis:\n  g (\\<mu> (f \\<circ> g)) \\<le> \\<mu> (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_roll:\n  assumes \"isotone g\"\n      and \"has_greatest_fixpoint (f \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> f)\"\n    shows \"\\<nu> (g \\<circ> f) = g (\\<nu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> f) = g (\\<nu> (f \\<circ> g))", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))\n 2. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "have 1: \"is_greatest_fixpoint (f \\<circ> g) (\\<nu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint (f \\<circ> g) (\\<nu> (f \\<circ> g))", "by (simp add: assms(2) greatest_fixpoint)"], ["proof (state)\nthis:\n  is_greatest_fixpoint (f \\<circ> g) (\\<nu> (f \\<circ> g))\n\ngoal (2 subgoals):\n 1. \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))\n 2. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "have \"is_greatest_fixpoint (g \\<circ> f) (\\<nu> (g \\<circ> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint (g \\<circ> f) (\\<nu> (g \\<circ> f))", "by (simp add: assms(3) greatest_fixpoint)"], ["proof (state)\nthis:\n  is_greatest_fixpoint (g \\<circ> f) (\\<nu> (g \\<circ> f))\n\ngoal (2 subgoals):\n 1. \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))\n 2. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "thus \"\\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))\""], ["proof (prove)\nusing this:\n  is_greatest_fixpoint (g \\<circ> f) (\\<nu> (g \\<circ> f))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))", "using 1"], ["proof (prove)\nusing this:\n  is_greatest_fixpoint (g \\<circ> f) (\\<nu> (g \\<circ> f))\n  is_greatest_fixpoint (f \\<circ> g) (\\<nu> (f \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))", "by (metis (no_types) assms(1) comp_def is_greatest_fixpoint_def isotone_def)"], ["proof (state)\nthis:\n  \\<nu> (g \\<circ> f) \\<le> g (\\<nu> (f \\<circ> g))\n\ngoal (1 subgoal):\n 1. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "show \"g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)", "by (metis assms(2-3) comp_apply greatest_fixpoint is_greatest_fixpoint_def)"], ["proof (state)\nthis:\n  g (\\<nu> (f \\<circ> g)) \\<le> \\<nu> (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nLeast (pre)fixpoints are below greatest (post)fixpoints.\n\\<close>"], ["", "lemma mu_below_nu:\n  \"has_least_fixpoint f \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> \\<mu> f \\<le> \\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_fixpoint f; has_greatest_fixpoint f\\<rbrakk>\n    \\<Longrightarrow> \\<mu> f \\<le> \\<nu> f", "using greatest_fixpoint is_greatest_fixpoint_def mu_unfold"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint ?f \\<Longrightarrow>\n  is_greatest_fixpoint ?f (\\<nu> ?f)\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  has_least_fixpoint ?f \\<Longrightarrow> ?f (\\<mu> ?f) = \\<mu> ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>has_least_fixpoint f; has_greatest_fixpoint f\\<rbrakk>\n    \\<Longrightarrow> \\<mu> f \\<le> \\<nu> f", "by auto"], ["", "lemma pmu_below_pnu_fix:\n  \"has_fixpoint f \\<Longrightarrow> has_least_prefixpoint f \\<Longrightarrow> has_greatest_postfixpoint f \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_fixpoint f; has_least_prefixpoint f;\n     has_greatest_postfixpoint f\\<rbrakk>\n    \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f", "by (metis greatest_postfixpoint has_fixpoint_def is_fixpoint_def is_greatest_postfixpoint_def is_least_prefixpoint_def least_prefixpoint order_refl order_trans)"], ["", "lemma pmu_below_pnu_iso:\n  \"isotone f \\<Longrightarrow> has_least_prefixpoint f \\<Longrightarrow> has_greatest_postfixpoint f \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_least_prefixpoint f;\n     has_greatest_postfixpoint f\\<rbrakk>\n    \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f", "using greatest_postfixpoint_fixpoint is_greatest_fixpoint_def is_least_fixpoint_def least_prefixpoint_fixpoint"], ["proof (prove)\nusing this:\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  is_least_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> ?x \\<le> y)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_least_prefixpoint f;\n     has_greatest_postfixpoint f\\<rbrakk>\n    \\<Longrightarrow> p\\<mu> f \\<le> p\\<nu> f", "by auto"], ["", "text \\<open>\nSeveral variants of the fusion rule for fixpoints follow.\n\\<close>"], ["", "lemma mu_fusion_1:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_fixpoint h\"\n      and \"l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h)))\"\n    shows \"l (p\\<mu> g) \\<le> \\<mu> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l (p\\<mu> g) \\<le> \\<mu> h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l (p\\<mu> g) \\<le> \\<mu> h", "have \"l (g (u (\\<mu> h))) \\<le> \\<mu> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l (g (u (\\<mu> h))) \\<le> \\<mu> h", "by (metis assms(1,2,4,5) galois_char isotone_def order_lesseq_imp mu_unfold)"], ["proof (state)\nthis:\n  l (g (u (\\<mu> h))) \\<le> \\<mu> h\n\ngoal (1 subgoal):\n 1. l (p\\<mu> g) \\<le> \\<mu> h", "thus \"l (p\\<mu> g) \\<le> \\<mu> h\""], ["proof (prove)\nusing this:\n  l (g (u (\\<mu> h))) \\<le> \\<mu> h\n\ngoal (1 subgoal):\n 1. l (p\\<mu> g) \\<le> \\<mu> h", "using assms(1,3) is_least_prefixpoint_def least_prefixpoint galois_def"], ["proof (prove)\nusing this:\n  l (g (u (\\<mu> h))) \\<le> \\<mu> h\n  galois l u\n  has_least_prefixpoint g\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n  galois ?l ?u \\<equiv> \\<forall>x y. (?l x \\<le> y) = (x \\<le> ?u y)\n\ngoal (1 subgoal):\n 1. l (p\\<mu> g) \\<le> \\<mu> h", "by auto"], ["proof (state)\nthis:\n  l (p\\<mu> g) \\<le> \\<mu> h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_fusion_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_fixpoint h \\<Longrightarrow> l \\<circ> g \\<le>\\<le> h \\<circ> l \\<Longrightarrow> l (p\\<mu> g) \\<le> \\<mu> h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone h; has_least_prefixpoint g;\n     has_least_fixpoint h; l \\<circ> g \\<le>\\<le> h \\<circ> l\\<rbrakk>\n    \\<Longrightarrow> l (p\\<mu> g) \\<le> \\<mu> h", "by (simp add: mu_fusion_1 lifted_less_eq_def)"], ["", "lemma mu_fusion_equal_1:\n  \"galois l u \\<Longrightarrow> isotone g \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_fixpoint h \\<Longrightarrow> l (g (u (\\<mu> h))) \\<le> h(l(u(\\<mu> h))) \\<Longrightarrow> l (g (p\\<mu> g)) = h (l (p\\<mu> g)) \\<Longrightarrow> \\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (\\<mu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone g; isotone h; has_least_prefixpoint g;\n     has_least_fixpoint h; l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h)));\n     l (g (p\\<mu> g)) = h (l (p\\<mu> g))\\<rbrakk>\n    \\<Longrightarrow> \\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (\\<mu> g)", "by (metis antisym least_fixpoint least_prefixpoint_fixpoint is_least_fixpoint_def mu_fusion_1 pmu_mu)"], ["", "lemma mu_fusion_equal_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_least_prefixpoint g \\<Longrightarrow> has_least_prefixpoint h \\<Longrightarrow> l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h))) \\<and> l (g (p\\<mu> g)) = h (l (p\\<mu> g)) \\<longrightarrow> p\\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (p\\<mu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone h; has_least_prefixpoint g;\n     has_least_prefixpoint h\\<rbrakk>\n    \\<Longrightarrow> l (g (u (\\<mu> h))) \\<le> h (l (u (\\<mu> h))) \\<and>\n                      l (g (p\\<mu> g)) = h (l (p\\<mu> g)) \\<longrightarrow>\n                      p\\<mu> h = l (p\\<mu> g) \\<and> \\<mu> h = l (p\\<mu> g)", "by (metis is_least_prefixpoint_def least_fixpoint_char least_prefixpoint least_prefixpoint_fixpoint antisym galois_char isotone_def mu_fusion_1)"], ["", "lemma mu_fusion_equal_3:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_fixpoint h\"\n      and \"l \\<circ> g = h \\<circ> l\"\n    shows \"\\<mu> h = l (p\\<mu> g)\"\n      and \"\\<mu> h = l (\\<mu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> h = l (p\\<mu> g) &&& \\<mu> h = l (\\<mu> g)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<mu> h = l (p\\<mu> g)\n 2. \\<mu> h = l (\\<mu> g)", "have \"\\<forall>x . l (g x) = h (l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. l (g x) = h (l x)", "using assms(6) comp_eq_elim"], ["proof (prove)\nusing this:\n  l \\<circ> g = h \\<circ> l\n  \\<lbrakk>?a \\<circ> ?b = ?c \\<circ> ?d;\n   (\\<And>v. ?a (?b v) = ?c (?d v)) \\<Longrightarrow> ?R\\<rbrakk>\n  \\<Longrightarrow> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>x. l (g x) = h (l x)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x. l (g x) = h (l x)\n\ngoal (2 subgoals):\n 1. \\<mu> h = l (p\\<mu> g)\n 2. \\<mu> h = l (\\<mu> g)", "thus \"\\<mu> h = l (p\\<mu> g)\""], ["proof (prove)\nusing this:\n  \\<forall>x. l (g x) = h (l x)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (p\\<mu> g)", "using assms(1-5) mu_fusion_equal_1"], ["proof (prove)\nusing this:\n  \\<forall>x. l (g x) = h (l x)\n  galois l u\n  isotone g\n  isotone h\n  has_least_prefixpoint g\n  has_least_fixpoint h\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h; has_least_prefixpoint ?g;\n   has_least_fixpoint ?h;\n   ?l (?g (?u (\\<mu> ?h))) \\<le> ?h (?l (?u (\\<mu> ?h)));\n   ?l (?g (p\\<mu> ?g)) = ?h (?l (p\\<mu> ?g))\\<rbrakk>\n  \\<Longrightarrow> \\<mu> ?h = ?l (p\\<mu> ?g) \\<and>\n                    \\<mu> ?h = ?l (\\<mu> ?g)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (p\\<mu> g)", "by auto"], ["proof (state)\nthis:\n  \\<mu> h = l (p\\<mu> g)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (\\<mu> g)", "thus \"\\<mu> h = l (\\<mu> g)\""], ["proof (prove)\nusing this:\n  \\<mu> h = l (p\\<mu> g)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (\\<mu> g)", "by (simp add: assms(2,4) pmu_mu)"], ["proof (state)\nthis:\n  \\<mu> h = l (\\<mu> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_fusion_equal_4:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint g\"\n      and \"has_least_prefixpoint h\"\n      and \"l \\<circ> g = h \\<circ> l\"\n    shows \"p\\<mu> h = l (p\\<mu> g)\"\n      and \"\\<mu> h = l (p\\<mu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<mu> h = l (p\\<mu> g) &&& \\<mu> h = l (p\\<mu> g)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. p\\<mu> h = l (p\\<mu> g)\n 2. \\<mu> h = l (p\\<mu> g)", "have \"\\<forall>x . l (g x) = h (l x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. l (g x) = h (l x)", "using assms(5) comp_eq_elim"], ["proof (prove)\nusing this:\n  l \\<circ> g = h \\<circ> l\n  \\<lbrakk>?a \\<circ> ?b = ?c \\<circ> ?d;\n   (\\<And>v. ?a (?b v) = ?c (?d v)) \\<Longrightarrow> ?R\\<rbrakk>\n  \\<Longrightarrow> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>x. l (g x) = h (l x)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x. l (g x) = h (l x)\n\ngoal (2 subgoals):\n 1. p\\<mu> h = l (p\\<mu> g)\n 2. \\<mu> h = l (p\\<mu> g)", "thus \"p\\<mu> h = l (p\\<mu> g)\""], ["proof (prove)\nusing this:\n  \\<forall>x. l (g x) = h (l x)\n\ngoal (1 subgoal):\n 1. p\\<mu> h = l (p\\<mu> g)", "using assms(1-4) mu_fusion_equal_2"], ["proof (prove)\nusing this:\n  \\<forall>x. l (g x) = h (l x)\n  galois l u\n  isotone h\n  has_least_prefixpoint g\n  has_least_prefixpoint h\n  \\<lbrakk>galois ?l ?u; isotone ?h; has_least_prefixpoint ?g;\n   has_least_prefixpoint ?h\\<rbrakk>\n  \\<Longrightarrow> ?l (?g (?u (\\<mu> ?h)))\n                    \\<le> ?h (?l (?u (\\<mu> ?h))) \\<and>\n                    ?l (?g (p\\<mu> ?g)) =\n                    ?h (?l (p\\<mu> ?g)) \\<longrightarrow>\n                    p\\<mu> ?h = ?l (p\\<mu> ?g) \\<and>\n                    \\<mu> ?h = ?l (p\\<mu> ?g)\n\ngoal (1 subgoal):\n 1. p\\<mu> h = l (p\\<mu> g)", "by auto"], ["proof (state)\nthis:\n  p\\<mu> h = l (p\\<mu> g)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (p\\<mu> g)", "thus \"\\<mu> h = l (p\\<mu> g)\""], ["proof (prove)\nusing this:\n  p\\<mu> h = l (p\\<mu> g)\n\ngoal (1 subgoal):\n 1. \\<mu> h = l (p\\<mu> g)", "by (simp add: assms(2,4) pmu_mu)"], ["proof (state)\nthis:\n  \\<mu> h = l (p\\<mu> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_fusion_1:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_fixpoint h\"\n      and \"h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h)))\"\n    shows \"\\<nu> h \\<le> u (p\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> h \\<le> u (p\\<nu> g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nu> h \\<le> u (p\\<nu> g)", "have \"\\<nu> h \\<le> u (g (l (\\<nu> h)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> h \\<le> u (g (l (\\<nu> h)))", "by (metis assms(1,2,4,5) order_trans galois_char isotone_def nu_unfold)"], ["proof (state)\nthis:\n  \\<nu> h \\<le> u (g (l (\\<nu> h)))\n\ngoal (1 subgoal):\n 1. \\<nu> h \\<le> u (p\\<nu> g)", "thus \"\\<nu> h \\<le> u (p\\<nu> g)\""], ["proof (prove)\nusing this:\n  \\<nu> h \\<le> u (g (l (\\<nu> h)))\n\ngoal (1 subgoal):\n 1. \\<nu> h \\<le> u (p\\<nu> g)", "by (metis assms(1,3) greatest_postfixpoint is_greatest_postfixpoint_def ord.galois_def)"], ["proof (state)\nthis:\n  \\<nu> h \\<le> u (p\\<nu> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_fusion_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_fixpoint h \\<Longrightarrow> h \\<circ> u \\<le>\\<le> u \\<circ> g \\<Longrightarrow> \\<nu> h \\<le> u (p\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone h; has_greatest_postfixpoint g;\n     has_greatest_fixpoint h; h \\<circ> u \\<le>\\<le> u \\<circ> g\\<rbrakk>\n    \\<Longrightarrow> \\<nu> h \\<le> u (p\\<nu> g)", "by (simp add: nu_fusion_1 lifted_less_eq_def)"], ["", "lemma nu_fusion_equal_1:\n  \"galois l u \\<Longrightarrow> isotone g \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_fixpoint h \\<Longrightarrow> h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h))) \\<Longrightarrow> h (u (p\\<nu> g)) = u (g (p\\<nu> g)) \\<Longrightarrow> \\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone g; isotone h; has_greatest_postfixpoint g;\n     has_greatest_fixpoint h; h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h)));\n     h (u (p\\<nu> g)) = u (g (p\\<nu> g))\\<rbrakk>\n    \\<Longrightarrow> \\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (\\<nu> g)", "by (metis greatest_fixpoint_char greatest_postfixpoint_fixpoint is_greatest_fixpoint_def antisym nu_fusion_1)"], ["", "lemma nu_fusion_equal_2:\n  \"galois l u \\<Longrightarrow> isotone h \\<Longrightarrow> has_greatest_postfixpoint g \\<Longrightarrow> has_greatest_postfixpoint h \\<Longrightarrow> h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h))) \\<and> h (u (p\\<nu> g)) = u (g (p\\<nu> g)) \\<Longrightarrow> p\\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (p\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>galois l u; isotone h; has_greatest_postfixpoint g;\n     has_greatest_postfixpoint h;\n     h (u (l (\\<nu> h))) \\<le> u (g (l (\\<nu> h))) \\<and>\n     h (u (p\\<nu> g)) = u (g (p\\<nu> g))\\<rbrakk>\n    \\<Longrightarrow> p\\<nu> h = u (p\\<nu> g) \\<and> \\<nu> h = u (p\\<nu> g)", "by (metis greatest_fixpoint_char greatest_postfixpoint greatest_postfixpoint_fixpoint is_greatest_postfixpoint_def antisym galois_char nu_fusion_1 isotone_def)"], ["", "lemma nu_fusion_equal_3:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_fixpoint h\"\n      and \"h \\<circ> u = u \\<circ> g\"\n    shows \"\\<nu> h = u (p\\<nu> g)\"\n      and \"\\<nu> h = u (\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> h = u (p\\<nu> g) &&& \\<nu> h = u (\\<nu> g)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<nu> h = u (p\\<nu> g)\n 2. \\<nu> h = u (\\<nu> g)", "have \"\\<forall>x . u (g x) = h (u x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. u (g x) = h (u x)", "using assms(6) comp_eq_dest"], ["proof (prove)\nusing this:\n  h \\<circ> u = u \\<circ> g\n  ?a \\<circ> ?b = ?c \\<circ> ?d \\<Longrightarrow> ?a (?b ?v) = ?c (?d ?v)\n\ngoal (1 subgoal):\n 1. \\<forall>x. u (g x) = h (u x)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x. u (g x) = h (u x)\n\ngoal (2 subgoals):\n 1. \\<nu> h = u (p\\<nu> g)\n 2. \\<nu> h = u (\\<nu> g)", "thus \"\\<nu> h = u (p\\<nu> g)\""], ["proof (prove)\nusing this:\n  \\<forall>x. u (g x) = h (u x)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (p\\<nu> g)", "using assms(1-5) nu_fusion_equal_1"], ["proof (prove)\nusing this:\n  \\<forall>x. u (g x) = h (u x)\n  galois l u\n  isotone g\n  isotone h\n  has_greatest_postfixpoint g\n  has_greatest_fixpoint h\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_greatest_postfixpoint ?g; has_greatest_fixpoint ?h;\n   ?h (?u (?l (\\<nu> ?h))) \\<le> ?u (?g (?l (\\<nu> ?h)));\n   ?h (?u (p\\<nu> ?g)) = ?u (?g (p\\<nu> ?g))\\<rbrakk>\n  \\<Longrightarrow> \\<nu> ?h = ?u (p\\<nu> ?g) \\<and>\n                    \\<nu> ?h = ?u (\\<nu> ?g)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (p\\<nu> g)", "by auto"], ["proof (state)\nthis:\n  \\<nu> h = u (p\\<nu> g)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (\\<nu> g)", "thus \"\\<nu> h = u (\\<nu> g)\""], ["proof (prove)\nusing this:\n  \\<nu> h = u (p\\<nu> g)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (\\<nu> g)", "by (simp add: assms(2-4) pnu_nu)"], ["proof (state)\nthis:\n  \\<nu> h = u (\\<nu> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_fusion_equal_4:\n  assumes \"galois l u\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint g\"\n      and \"has_greatest_postfixpoint h\"\n      and \"h \\<circ> u = u \\<circ> g\"\n    shows \"p\\<nu> h = u (p\\<nu> g)\"\n      and \"\\<nu> h = u (p\\<nu> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<nu> h = u (p\\<nu> g) &&& \\<nu> h = u (p\\<nu> g)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. p\\<nu> h = u (p\\<nu> g)\n 2. \\<nu> h = u (p\\<nu> g)", "have \"\\<forall>x . u (g x) = h (u x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. u (g x) = h (u x)", "using assms(5) comp_eq_dest"], ["proof (prove)\nusing this:\n  h \\<circ> u = u \\<circ> g\n  ?a \\<circ> ?b = ?c \\<circ> ?d \\<Longrightarrow> ?a (?b ?v) = ?c (?d ?v)\n\ngoal (1 subgoal):\n 1. \\<forall>x. u (g x) = h (u x)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x. u (g x) = h (u x)\n\ngoal (2 subgoals):\n 1. p\\<nu> h = u (p\\<nu> g)\n 2. \\<nu> h = u (p\\<nu> g)", "thus \"p\\<nu> h = u (p\\<nu> g)\""], ["proof (prove)\nusing this:\n  \\<forall>x. u (g x) = h (u x)\n\ngoal (1 subgoal):\n 1. p\\<nu> h = u (p\\<nu> g)", "using assms(1-4) nu_fusion_equal_2"], ["proof (prove)\nusing this:\n  \\<forall>x. u (g x) = h (u x)\n  galois l u\n  isotone h\n  has_greatest_postfixpoint g\n  has_greatest_postfixpoint h\n  \\<lbrakk>galois ?l ?u; isotone ?h; has_greatest_postfixpoint ?g;\n   has_greatest_postfixpoint ?h;\n   ?h (?u (?l (\\<nu> ?h))) \\<le> ?u (?g (?l (\\<nu> ?h))) \\<and>\n   ?h (?u (p\\<nu> ?g)) = ?u (?g (p\\<nu> ?g))\\<rbrakk>\n  \\<Longrightarrow> p\\<nu> ?h = ?u (p\\<nu> ?g) \\<and>\n                    \\<nu> ?h = ?u (p\\<nu> ?g)\n\ngoal (1 subgoal):\n 1. p\\<nu> h = u (p\\<nu> g)", "by auto"], ["proof (state)\nthis:\n  p\\<nu> h = u (p\\<nu> g)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (p\\<nu> g)", "thus \"\\<nu> h = u (p\\<nu> g)\""], ["proof (prove)\nusing this:\n  p\\<nu> h = u (p\\<nu> g)\n\ngoal (1 subgoal):\n 1. \\<nu> h = u (p\\<nu> g)", "by (simp add: assms(2,4) pnu_nu)"], ["proof (state)\nthis:\n  \\<nu> h = u (p\\<nu> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nNext come the exchange rules for replacing the first/second function in a composition.\n\\<close>"], ["", "lemma mu_exchange_1:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> h)\"\n      and \"l \\<circ> h \\<circ> g \\<le>\\<le> g \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "have 1: \"l \\<circ> (h \\<circ> g) \\<le>\\<le> (g \\<circ> h) \\<circ> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<circ> (h \\<circ> g) \\<le>\\<le> g \\<circ> h \\<circ> l", "by (simp add: assms(7) rewriteL_comp_comp)"], ["proof (state)\nthis:\n  l \\<circ> (h \\<circ> g) \\<le>\\<le> g \\<circ> h \\<circ> l\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "have \"(l \\<circ> h) (\\<mu> (g \\<circ> h)) = l (\\<mu> (h \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l \\<circ> h) (\\<mu> (g \\<circ> h)) = l (\\<mu> (h \\<circ> g))", "by (metis assms(2,3,5,6) comp_apply least_fixpoint_char least_prefixpoint_fixpoint isotone_def mu_roll)"], ["proof (state)\nthis:\n  (l \\<circ> h) (\\<mu> (g \\<circ> h)) = l (\\<mu> (h \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "also"], ["proof (state)\nthis:\n  (l \\<circ> h) (\\<mu> (g \\<circ> h)) = l (\\<mu> (h \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "have \"... \\<le> \\<mu> (g \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l (\\<mu> (h \\<circ> g)) \\<le> \\<mu> (g \\<circ> h)", "using 1"], ["proof (prove)\nusing this:\n  l \\<circ> (h \\<circ> g) \\<le>\\<le> g \\<circ> h \\<circ> l\n\ngoal (1 subgoal):\n 1. l (\\<mu> (h \\<circ> g)) \\<le> \\<mu> (g \\<circ> h)", "by (metis assms(1-3,5,6) comp_apply least_fixpoint_char least_prefixpoint_fixpoint isotone_def mu_fusion_2)"], ["proof (state)\nthis:\n  l (\\<mu> (h \\<circ> g)) \\<le> \\<mu> (g \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "finally"], ["proof (chain)\npicking this:\n  (l \\<circ> h) (\\<mu> (g \\<circ> h)) \\<le> \\<mu> (g \\<circ> h)", "have \"p\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\""], ["proof (prove)\nusing this:\n  (l \\<circ> h) (\\<mu> (g \\<circ> h)) \\<le> \\<mu> (g \\<circ> h)\n\ngoal (1 subgoal):\n 1. p\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "using assms(4) is_least_prefixpoint_def least_prefixpoint"], ["proof (prove)\nusing this:\n  (l \\<circ> h) (\\<mu> (g \\<circ> h)) \\<le> \\<mu> (g \\<circ> h)\n  has_least_prefixpoint (l \\<circ> h)\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n\ngoal (1 subgoal):\n 1. p\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "by blast"], ["proof (state)\nthis:\n  p\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "thus \"\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\""], ["proof (prove)\nusing this:\n  p\\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)", "by (metis assms(1,3,4) galois_char isotone_def least_fixpoint_char least_prefixpoint_fixpoint o_apply)"], ["proof (state)\nthis:\n  \\<mu> (l \\<circ> h) \\<le> \\<mu> (g \\<circ> h)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_exchange_2:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> l)\"\n      and \"has_least_prefixpoint (h \\<circ> g)\"\n      and \"has_least_fixpoint (g \\<circ> h)\"\n      and \"has_least_fixpoint (h \\<circ> g)\"\n      and \"l \\<circ> h \\<circ> g \\<le>\\<le> g \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "have \"\\<mu> (h \\<circ> l) = h (\\<mu> (l \\<circ> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) = h (\\<mu> (l \\<circ> h))", "by (metis (no_types, lifting) assms(1,3-5) galois_char isotone_def least_fixpoint_char least_prefixpoint_fixpoint mu_roll o_apply)"], ["proof (state)\nthis:\n  \\<mu> (h \\<circ> l) = h (\\<mu> (l \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "also"], ["proof (state)\nthis:\n  \\<mu> (h \\<circ> l) = h (\\<mu> (l \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "have \"... \\<le> h (\\<mu> (g \\<circ> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (\\<mu> (l \\<circ> h)) \\<le> h (\\<mu> (g \\<circ> h))", "using assms(1-4,6,7,9) isotone_def mu_exchange_1"], ["proof (prove)\nusing this:\n  galois l u\n  isotone g\n  isotone h\n  has_least_prefixpoint (l \\<circ> h)\n  has_least_prefixpoint (h \\<circ> g)\n  has_least_fixpoint (g \\<circ> h)\n  l \\<circ> h \\<circ> g \\<le>\\<le> g \\<circ> h \\<circ> l\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_least_prefixpoint (?l \\<circ> ?h);\n   has_least_prefixpoint (?h \\<circ> ?g);\n   has_least_fixpoint (?g \\<circ> ?h);\n   ?l \\<circ> ?h \\<circ> ?g \\<le>\\<le> ?g \\<circ> ?h \\<circ> ?l\\<rbrakk>\n  \\<Longrightarrow> \\<mu> (?l \\<circ> ?h) \\<le> \\<mu> (?g \\<circ> ?h)\n\ngoal (1 subgoal):\n 1. h (\\<mu> (l \\<circ> h)) \\<le> h (\\<mu> (g \\<circ> h))", "by blast"], ["proof (state)\nthis:\n  h (\\<mu> (l \\<circ> h)) \\<le> h (\\<mu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "also"], ["proof (state)\nthis:\n  h (\\<mu> (l \\<circ> h)) \\<le> h (\\<mu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "have \"... = \\<mu> (h \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (\\<mu> (g \\<circ> h)) = \\<mu> (h \\<circ> g)", "by (simp add: assms(3,7,8) mu_roll)"], ["proof (state)\nthis:\n  h (\\<mu> (g \\<circ> h)) = \\<mu> (h \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "finally"], ["proof (chain)\npicking this:\n  \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)", "."], ["proof (state)\nthis:\n  \\<mu> (h \\<circ> l) \\<le> \\<mu> (h \\<circ> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_exchange_equal:\n  assumes \"galois l u\"\n      and \"galois k t\"\n      and \"isotone h\"\n      and \"has_least_prefixpoint (l \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> l)\"\n      and \"has_least_prefixpoint (k \\<circ> h)\"\n      and \"has_least_prefixpoint (h \\<circ> k)\"\n      and \"l \\<circ> h \\<circ> k = k \\<circ> h \\<circ> l\"\n    shows \"\\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\"\n      and \"\\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h) &&&\n    \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n 2. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "have 1: \"has_least_fixpoint (k \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint (k \\<circ> h)", "using assms(2,3,6) least_fixpoint_char least_prefixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois k t\n  isotone h\n  has_least_prefixpoint (k \\<circ> h)\n  is_least_fixpoint ?f ?x = (has_least_fixpoint ?f \\<and> ?x = \\<mu> ?f)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_least_fixpoint (k \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  has_least_fixpoint (k \\<circ> h)\n\ngoal (2 subgoals):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n 2. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "have 2: \"has_least_fixpoint (h \\<circ> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint (h \\<circ> k)", "using assms(2,3,7) least_fixpoint_char least_prefixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois k t\n  isotone h\n  has_least_prefixpoint (h \\<circ> k)\n  is_least_fixpoint ?f ?x = (has_least_fixpoint ?f \\<and> ?x = \\<mu> ?f)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_least_fixpoint (h \\<circ> k)", "by auto"], ["proof (state)\nthis:\n  has_least_fixpoint (h \\<circ> k)\n\ngoal (2 subgoals):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n 2. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "have 3: \"has_least_fixpoint (l \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint (l \\<circ> h)", "using assms(1,3,4) least_fixpoint_char least_prefixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois l u\n  isotone h\n  has_least_prefixpoint (l \\<circ> h)\n  is_least_fixpoint ?f ?x = (has_least_fixpoint ?f \\<and> ?x = \\<mu> ?f)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_least_fixpoint (l \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  has_least_fixpoint (l \\<circ> h)\n\ngoal (2 subgoals):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n 2. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "have 4: \"has_least_fixpoint (h \\<circ> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_least_fixpoint (h \\<circ> l)", "using assms(1,3,5) least_fixpoint_char least_prefixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois l u\n  isotone h\n  has_least_prefixpoint (h \\<circ> l)\n  is_least_fixpoint ?f ?x = (has_least_fixpoint ?f \\<and> ?x = \\<mu> ?f)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_least_fixpoint (h \\<circ> l)", "by auto"], ["proof (state)\nthis:\n  has_least_fixpoint (h \\<circ> l)\n\ngoal (2 subgoals):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n 2. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "show \"\\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "using 1 2 3 4 assms antisym galois_char lifted_reflexive mu_exchange_2"], ["proof (prove)\nusing this:\n  has_least_fixpoint (k \\<circ> h)\n  has_least_fixpoint (h \\<circ> k)\n  has_least_fixpoint (l \\<circ> h)\n  has_least_fixpoint (h \\<circ> l)\n  galois l u\n  galois k t\n  isotone h\n  has_least_prefixpoint (l \\<circ> h)\n  has_least_prefixpoint (h \\<circ> l)\n  has_least_prefixpoint (k \\<circ> h)\n  has_least_prefixpoint (h \\<circ> k)\n  l \\<circ> h \\<circ> k = k \\<circ> h \\<circ> l\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  ?f = ?g \\<Longrightarrow> ?f \\<le>\\<le> ?g\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_least_prefixpoint (?l \\<circ> ?h);\n   has_least_prefixpoint (?h \\<circ> ?l);\n   has_least_prefixpoint (?h \\<circ> ?g);\n   has_least_fixpoint (?g \\<circ> ?h); has_least_fixpoint (?h \\<circ> ?g);\n   ?l \\<circ> ?h \\<circ> ?g \\<le>\\<le> ?g \\<circ> ?h \\<circ> ?l\\<rbrakk>\n  \\<Longrightarrow> \\<mu> (?h \\<circ> ?l) \\<le> \\<mu> (?h \\<circ> ?g)\n\ngoal (1 subgoal):\n 1. \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)", "by auto"], ["proof (state)\nthis:\n  \\<mu> (h \\<circ> l) = \\<mu> (h \\<circ> k)\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)", "show \"\\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)", "using 1 2 3 4 assms antisym galois_char lifted_reflexive mu_exchange_1"], ["proof (prove)\nusing this:\n  has_least_fixpoint (k \\<circ> h)\n  has_least_fixpoint (h \\<circ> k)\n  has_least_fixpoint (l \\<circ> h)\n  has_least_fixpoint (h \\<circ> l)\n  galois l u\n  galois k t\n  isotone h\n  has_least_prefixpoint (l \\<circ> h)\n  has_least_prefixpoint (h \\<circ> l)\n  has_least_prefixpoint (k \\<circ> h)\n  has_least_prefixpoint (h \\<circ> k)\n  l \\<circ> h \\<circ> k = k \\<circ> h \\<circ> l\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  ?f = ?g \\<Longrightarrow> ?f \\<le>\\<le> ?g\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_least_prefixpoint (?l \\<circ> ?h);\n   has_least_prefixpoint (?h \\<circ> ?g);\n   has_least_fixpoint (?g \\<circ> ?h);\n   ?l \\<circ> ?h \\<circ> ?g \\<le>\\<le> ?g \\<circ> ?h \\<circ> ?l\\<rbrakk>\n  \\<Longrightarrow> \\<mu> (?l \\<circ> ?h) \\<le> \\<mu> (?g \\<circ> ?h)\n\ngoal (1 subgoal):\n 1. \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  \\<mu> (l \\<circ> h) = \\<mu> (k \\<circ> h)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_exchange_1:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> h)\"\n      and \"g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> h \\<circ> g\"\n    shows \"\\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "have \"(g \\<circ> h) \\<circ> u \\<le>\\<le> u \\<circ> (h \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> (h \\<circ> g)", "by (simp add: assms(7) o_assoc)"], ["proof (state)\nthis:\n  g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> (h \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "hence \"\\<nu> (g \\<circ> h) \\<le> u (\\<nu> (h \\<circ> g))\""], ["proof (prove)\nusing this:\n  g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> (h \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> u (\\<nu> (h \\<circ> g))", "by (metis assms(1-3,5,6) greatest_fixpoint_char greatest_postfixpoint_fixpoint isotone_def nu_fusion_2 o_apply)"], ["proof (state)\nthis:\n  \\<nu> (g \\<circ> h) \\<le> u (\\<nu> (h \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "also"], ["proof (state)\nthis:\n  \\<nu> (g \\<circ> h) \\<le> u (\\<nu> (h \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "have \"... = (u \\<circ> h) (\\<nu> (g \\<circ> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u (\\<nu> (h \\<circ> g)) = (u \\<circ> h) (\\<nu> (g \\<circ> h))", "by (metis assms(2,3,5,6) greatest_fixpoint_char greatest_postfixpoint_fixpoint isotone_def nu_roll o_apply)"], ["proof (state)\nthis:\n  u (\\<nu> (h \\<circ> g)) = (u \\<circ> h) (\\<nu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "finally"], ["proof (chain)\npicking this:\n  \\<nu> (g \\<circ> h) \\<le> (u \\<circ> h) (\\<nu> (g \\<circ> h))", "have \"\\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)\""], ["proof (prove)\nusing this:\n  \\<nu> (g \\<circ> h) \\<le> (u \\<circ> h) (\\<nu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)", "using assms(4) greatest_postfixpoint is_greatest_postfixpoint_def"], ["proof (prove)\nusing this:\n  \\<nu> (g \\<circ> h) \\<le> (u \\<circ> h) (\\<nu> (g \\<circ> h))\n  has_greatest_postfixpoint (u \\<circ> h)\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  is_greatest_postfixpoint ?f (p\\<nu> ?f)\n  is_greatest_postfixpoint ?f ?x \\<equiv>\n  ?x \\<le> ?f ?x \\<and>\n  (\\<forall>y. y \\<le> ?f y \\<longrightarrow> y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)", "by blast"], ["proof (state)\nthis:\n  \\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "thus \"\\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)\""], ["proof (prove)\nusing this:\n  \\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "using assms(1,3,4) galois_char greatest_fixpoint_char greatest_postfixpoint_fixpoint isotone_def"], ["proof (prove)\nusing this:\n  \\<nu> (g \\<circ> h) \\<le> p\\<nu> (u \\<circ> h)\n  galois l u\n  isotone h\n  has_greatest_postfixpoint (u \\<circ> h)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  is_greatest_fixpoint ?f ?x =\n  (has_greatest_fixpoint ?f \\<and> ?x = \\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  \\<nu> (g \\<circ> h) \\<le> \\<nu> (u \\<circ> h)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_exchange_2:\n  assumes \"galois l u\"\n      and \"isotone g\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> u)\"\n      and \"has_greatest_postfixpoint (h \\<circ> g)\"\n      and \"has_greatest_fixpoint (g \\<circ> h)\"\n      and \"has_greatest_fixpoint (h \\<circ> g)\"\n      and \"g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> h \\<circ> g\"\n    shows \"\\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "have \"\\<nu> (h \\<circ> g) = h (\\<nu> (g \\<circ> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) = h (\\<nu> (g \\<circ> h))", "by (simp add: assms(3,7,8) nu_roll)"], ["proof (state)\nthis:\n  \\<nu> (h \\<circ> g) = h (\\<nu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "also"], ["proof (state)\nthis:\n  \\<nu> (h \\<circ> g) = h (\\<nu> (g \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "have \"... \\<le> h (\\<nu> (u \\<circ> h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (\\<nu> (g \\<circ> h)) \\<le> h (\\<nu> (u \\<circ> h))", "using assms(1-4,6,7,9) isotone_def nu_exchange_1"], ["proof (prove)\nusing this:\n  galois l u\n  isotone g\n  isotone h\n  has_greatest_postfixpoint (u \\<circ> h)\n  has_greatest_postfixpoint (h \\<circ> g)\n  has_greatest_fixpoint (g \\<circ> h)\n  g \\<circ> h \\<circ> u \\<le>\\<le> u \\<circ> h \\<circ> g\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_greatest_postfixpoint (?u \\<circ> ?h);\n   has_greatest_postfixpoint (?h \\<circ> ?g);\n   has_greatest_fixpoint (?g \\<circ> ?h);\n   ?g \\<circ> ?h \\<circ> ?u \\<le>\\<le> ?u \\<circ> ?h \\<circ> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<nu> (?g \\<circ> ?h) \\<le> \\<nu> (?u \\<circ> ?h)\n\ngoal (1 subgoal):\n 1. h (\\<nu> (g \\<circ> h)) \\<le> h (\\<nu> (u \\<circ> h))", "by blast"], ["proof (state)\nthis:\n  h (\\<nu> (g \\<circ> h)) \\<le> h (\\<nu> (u \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "also"], ["proof (state)\nthis:\n  h (\\<nu> (g \\<circ> h)) \\<le> h (\\<nu> (u \\<circ> h))\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "have \"... = \\<nu> (h \\<circ> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (\\<nu> (u \\<circ> h)) = \\<nu> (h \\<circ> u)", "by (metis (no_types, lifting) assms(1,3-5) galois_char greatest_fixpoint_char greatest_postfixpoint_fixpoint isotone_def nu_roll o_apply)"], ["proof (state)\nthis:\n  h (\\<nu> (u \\<circ> h)) = \\<nu> (h \\<circ> u)\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "finally"], ["proof (chain)\npicking this:\n  \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "show \"\\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)\""], ["proof (prove)\nusing this:\n  \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)", "."], ["proof (state)\nthis:\n  \\<nu> (h \\<circ> g) \\<le> \\<nu> (h \\<circ> u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_exchange_equal:\n  assumes \"galois l u\"\n      and \"galois k t\"\n      and \"isotone h\"\n      and \"has_greatest_postfixpoint (u \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> u)\"\n      and \"has_greatest_postfixpoint (t \\<circ> h)\"\n      and \"has_greatest_postfixpoint (h \\<circ> t)\"\n      and \"u \\<circ> h \\<circ> t = t \\<circ> h \\<circ> u\"\n    shows \"\\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\"\n      and \"\\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h) &&&\n    \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n 2. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "have 1: \"has_greatest_fixpoint (u \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (u \\<circ> h)", "using assms(1,3,4) greatest_fixpoint_char greatest_postfixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois l u\n  isotone h\n  has_greatest_postfixpoint (u \\<circ> h)\n  is_greatest_fixpoint ?f ?x =\n  (has_greatest_fixpoint ?f \\<and> ?x = \\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (u \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  has_greatest_fixpoint (u \\<circ> h)\n\ngoal (2 subgoals):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n 2. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "have 2: \"has_greatest_fixpoint (h \\<circ> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (h \\<circ> u)", "using assms(1,3,5) greatest_fixpoint_char greatest_postfixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois l u\n  isotone h\n  has_greatest_postfixpoint (h \\<circ> u)\n  is_greatest_fixpoint ?f ?x =\n  (has_greatest_fixpoint ?f \\<and> ?x = \\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (h \\<circ> u)", "by auto"], ["proof (state)\nthis:\n  has_greatest_fixpoint (h \\<circ> u)\n\ngoal (2 subgoals):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n 2. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "have 3: \"has_greatest_fixpoint (t \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (t \\<circ> h)", "using assms(2,3,6) greatest_fixpoint_char greatest_postfixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois k t\n  isotone h\n  has_greatest_postfixpoint (t \\<circ> h)\n  is_greatest_fixpoint ?f ?x =\n  (has_greatest_fixpoint ?f \\<and> ?x = \\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (t \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  has_greatest_fixpoint (t \\<circ> h)\n\ngoal (2 subgoals):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n 2. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "have 4: \"has_greatest_fixpoint (h \\<circ> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (h \\<circ> t)", "using assms(2,3,7) greatest_fixpoint_char greatest_postfixpoint_fixpoint galois_char isotone_def"], ["proof (prove)\nusing this:\n  galois k t\n  isotone h\n  has_greatest_postfixpoint (h \\<circ> t)\n  is_greatest_fixpoint ?f ?x =\n  (has_greatest_fixpoint ?f \\<and> ?x = \\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (h \\<circ> t)", "by auto"], ["proof (state)\nthis:\n  has_greatest_fixpoint (h \\<circ> t)\n\ngoal (2 subgoals):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n 2. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "show \"\\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)", "using 1 2 3 4 assms antisym galois_char lifted_reflexive nu_exchange_1"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint (u \\<circ> h)\n  has_greatest_fixpoint (h \\<circ> u)\n  has_greatest_fixpoint (t \\<circ> h)\n  has_greatest_fixpoint (h \\<circ> t)\n  galois l u\n  galois k t\n  isotone h\n  has_greatest_postfixpoint (u \\<circ> h)\n  has_greatest_postfixpoint (h \\<circ> u)\n  has_greatest_postfixpoint (t \\<circ> h)\n  has_greatest_postfixpoint (h \\<circ> t)\n  u \\<circ> h \\<circ> t = t \\<circ> h \\<circ> u\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  ?f = ?g \\<Longrightarrow> ?f \\<le>\\<le> ?g\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_greatest_postfixpoint (?u \\<circ> ?h);\n   has_greatest_postfixpoint (?h \\<circ> ?g);\n   has_greatest_fixpoint (?g \\<circ> ?h);\n   ?g \\<circ> ?h \\<circ> ?u \\<le>\\<le> ?u \\<circ> ?h \\<circ> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<nu> (?g \\<circ> ?h) \\<le> \\<nu> (?u \\<circ> ?h)\n\ngoal (1 subgoal):\n 1. \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)", "by auto"], ["proof (state)\nthis:\n  \\<nu> (u \\<circ> h) = \\<nu> (t \\<circ> h)\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "show \"\\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "using 1 2 3 4 assms antisym galois_char lifted_reflexive nu_exchange_2"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint (u \\<circ> h)\n  has_greatest_fixpoint (h \\<circ> u)\n  has_greatest_fixpoint (t \\<circ> h)\n  has_greatest_fixpoint (h \\<circ> t)\n  galois l u\n  galois k t\n  isotone h\n  has_greatest_postfixpoint (u \\<circ> h)\n  has_greatest_postfixpoint (h \\<circ> u)\n  has_greatest_postfixpoint (t \\<circ> h)\n  has_greatest_postfixpoint (h \\<circ> t)\n  u \\<circ> h \\<circ> t = t \\<circ> h \\<circ> u\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  galois ?l ?u =\n  ((\\<forall>x. x \\<le> ?u (?l x)) \\<and>\n   (\\<forall>x. ?l (?u x) \\<le> x) \\<and> isotone ?l \\<and> isotone ?u)\n  ?f = ?g \\<Longrightarrow> ?f \\<le>\\<le> ?g\n  \\<lbrakk>galois ?l ?u; isotone ?g; isotone ?h;\n   has_greatest_postfixpoint (?u \\<circ> ?h);\n   has_greatest_postfixpoint (?h \\<circ> ?u);\n   has_greatest_postfixpoint (?h \\<circ> ?g);\n   has_greatest_fixpoint (?g \\<circ> ?h);\n   has_greatest_fixpoint (?h \\<circ> ?g);\n   ?g \\<circ> ?h \\<circ> ?u \\<le>\\<le> ?u \\<circ> ?h \\<circ> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<nu> (?h \\<circ> ?g) \\<le> \\<nu> (?h \\<circ> ?u)\n\ngoal (1 subgoal):\n 1. \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)", "by auto"], ["proof (state)\nthis:\n  \\<nu> (h \\<circ> u) = \\<nu> (h \\<circ> t)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following results generalise parts of \\cite[Exercise 8.27]{DaveyPriestley2002} from continuous functions on complete partial orders to the present setting.\n\\<close>"], ["", "lemma mu_commute_fixpoint_1:\n  \"isotone f \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint f (\\<mu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_least_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f\\<rbrakk>\n    \\<Longrightarrow> is_fixpoint f (\\<mu> (f \\<circ> g))", "by (metis is_fixpoint_def mu_roll)"], ["", "lemma mu_commute_fixpoint_2:\n  \"isotone g \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint g (\\<mu> (f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone g; has_least_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f\\<rbrakk>\n    \\<Longrightarrow> is_fixpoint g (\\<mu> (f \\<circ> g))", "by (simp add: mu_commute_fixpoint_1)"], ["", "lemma mu_commute_least_fixpoint:\n  \"isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> has_least_fixpoint f \\<Longrightarrow> has_least_fixpoint g \\<Longrightarrow> has_least_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> \\<mu> (f \\<circ> g) = \\<mu> f \\<Longrightarrow> \\<mu> g \\<le> \\<mu> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; isotone g; has_least_fixpoint f;\n     has_least_fixpoint g; has_least_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f; \\<mu> (f \\<circ> g) = \\<mu> f\\<rbrakk>\n    \\<Longrightarrow> \\<mu> g \\<le> \\<mu> f", "by (metis is_least_fixpoint_def least_fixpoint mu_roll)"], ["", "text \\<open>\nThe converse of the preceding result is claimed for continuous $f$, $g$ on a complete partial order; it is unknown whether it holds without these additional assumptions.\n\\<close>"], ["", "lemma nu_commute_fixpoint_1:\n  \"isotone f \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint f (\\<nu>(f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; has_greatest_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f\\<rbrakk>\n    \\<Longrightarrow> is_fixpoint f (\\<nu> (f \\<circ> g))", "by (metis is_fixpoint_def nu_roll)"], ["", "lemma nu_commute_fixpoint_2:\n  \"isotone g \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> is_fixpoint g (\\<nu>(f \\<circ> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone g; has_greatest_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f\\<rbrakk>\n    \\<Longrightarrow> is_fixpoint g (\\<nu> (f \\<circ> g))", "by (simp add: nu_commute_fixpoint_1)"], ["", "lemma nu_commute_greatest_fixpoint:\n  \"isotone f \\<Longrightarrow> isotone g \\<Longrightarrow> has_greatest_fixpoint f \\<Longrightarrow> has_greatest_fixpoint g \\<Longrightarrow> has_greatest_fixpoint (f \\<circ> g) \\<Longrightarrow> f \\<circ> g = g \\<circ> f \\<Longrightarrow> \\<nu> (f \\<circ> g) = \\<nu> f \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isotone f; isotone g; has_greatest_fixpoint f;\n     has_greatest_fixpoint g; has_greatest_fixpoint (f \\<circ> g);\n     f \\<circ> g = g \\<circ> f; \\<nu> (f \\<circ> g) = \\<nu> f\\<rbrakk>\n    \\<Longrightarrow> \\<nu> f \\<le> \\<nu> g", "by (metis greatest_fixpoint is_greatest_fixpoint_def nu_roll)"], ["", "text \\<open>\nFinally, we show a number of versions of the diagonal rule for functions with two arguments.\n\\<close>"], ["", "lemma mu_diagonal_1:\n  assumes \"isotone (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"\n      and \"\\<forall>x . has_least_fixpoint (\\<lambda>y . f x y)\"\n      and \"has_least_prefixpoint (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\"\n    shows \"\\<mu> (\\<lambda>x . f x x) = \\<mu> (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "let ?g = \"\\<lambda>x . \\<mu> (\\<lambda>y . f x y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "have 1: \"is_least_prefixpoint ?g (\\<mu> ?g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_least_prefixpoint (\\<lambda>x. \\<mu> f x)\n     (\\<mu> (\\<lambda>x. \\<mu> f x))", "using assms(1,3) least_prefixpoint pmu_mu"], ["proof (prove)\nusing this:\n  isotone (\\<lambda>x. \\<mu> f x)\n  has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\n  has_least_prefixpoint ?f \\<Longrightarrow>\n  is_least_prefixpoint ?f (p\\<mu> ?f)\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> p\\<mu> ?f = \\<mu> ?f\n\ngoal (1 subgoal):\n 1. is_least_prefixpoint (\\<lambda>x. \\<mu> f x)\n     (\\<mu> (\\<lambda>x. \\<mu> f x))", "by fastforce"], ["proof (state)\nthis:\n  is_least_prefixpoint (\\<lambda>x. \\<mu> f x)\n   (\\<mu> (\\<lambda>x. \\<mu> f x))\n\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "have \"f (\\<mu> ?g) (\\<mu> ?g) = \\<mu> ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (\\<mu> (\\<lambda>x. \\<mu> f x)) (\\<mu> (\\<lambda>x. \\<mu> f x)) =\n    \\<mu> (\\<lambda>x. \\<mu> f x)", "by (metis (no_types, lifting) assms is_least_fixpoint_def least_fixpoint_char least_prefixpoint_fixpoint)"], ["proof (state)\nthis:\n  f (\\<mu> (\\<lambda>x. \\<mu> f x)) (\\<mu> (\\<lambda>x. \\<mu> f x)) =\n  \\<mu> (\\<lambda>x. \\<mu> f x)\n\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "hence \"is_least_fixpoint (\\<lambda>x . f x x) (\\<mu> ?g)\""], ["proof (prove)\nusing this:\n  f (\\<mu> (\\<lambda>x. \\<mu> f x)) (\\<mu> (\\<lambda>x. \\<mu> f x)) =\n  \\<mu> (\\<lambda>x. \\<mu> f x)\n\ngoal (1 subgoal):\n 1. is_least_fixpoint (\\<lambda>x. f x x) (\\<mu> (\\<lambda>x. \\<mu> f x))", "using 1 assms(2) is_least_fixpoint_def is_least_prefixpoint_def least_fixpoint"], ["proof (prove)\nusing this:\n  f (\\<mu> (\\<lambda>x. \\<mu> f x)) (\\<mu> (\\<lambda>x. \\<mu> f x)) =\n  \\<mu> (\\<lambda>x. \\<mu> f x)\n  is_least_prefixpoint (\\<lambda>x. \\<mu> f x)\n   (\\<mu> (\\<lambda>x. \\<mu> f x))\n  \\<forall>x. has_least_fixpoint (f x)\n  is_least_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> ?x \\<le> y)\n  is_least_prefixpoint ?f ?x \\<equiv>\n  ?f ?x \\<le> ?x \\<and>\n  (\\<forall>y. ?f y \\<le> y \\<longrightarrow> ?x \\<le> y)\n  has_least_fixpoint ?f \\<Longrightarrow> is_least_fixpoint ?f (\\<mu> ?f)\n\ngoal (1 subgoal):\n 1. is_least_fixpoint (\\<lambda>x. f x x) (\\<mu> (\\<lambda>x. \\<mu> f x))", "by auto"], ["proof (state)\nthis:\n  is_least_fixpoint (\\<lambda>x. f x x) (\\<mu> (\\<lambda>x. \\<mu> f x))\n\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_least_fixpoint (\\<lambda>x. f x x) (\\<mu> (\\<lambda>x. \\<mu> f x))\n\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "using least_fixpoint_same"], ["proof (prove)\nusing this:\n  is_least_fixpoint (\\<lambda>x. f x x) (\\<mu> (\\<lambda>x. \\<mu> f x))\n  is_least_fixpoint ?f ?x \\<Longrightarrow> ?x = \\<mu> ?f\n\ngoal (1 subgoal):\n 1. \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)", "by simp"], ["proof (state)\nthis:\n  \\<mu> (\\<lambda>x. f x x) = \\<mu> (\\<lambda>x. \\<mu> f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_diagonal_2:\n  \"\\<forall>x . isotone (\\<lambda>y . f x y) \\<and> isotone (\\<lambda>y . f y x) \\<and> has_least_prefixpoint (\\<lambda>y . f x y) \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x . \\<mu> (\\<lambda>y . f x y)) \\<Longrightarrow> \\<mu> (\\<lambda>x . f x x) = \\<mu> (\\<lambda>x . \\<mu> (\\<lambda>y . f x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<mu> (\\<lambda>x. f x x) =\n                      \\<mu> (\\<lambda>x. \\<mu> f x)", "apply (rule mu_diagonal_1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> isotone (\\<lambda>x. \\<mu> f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_least_fixpoint (f x)\n 3. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x. \\<mu> f x)", "using isotone_def lifted_less_eq_def mu_isotone"], ["proof (prove)\nusing this:\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n  ?f \\<le>\\<le> ?g \\<equiv> \\<forall>x. ?f x \\<le> ?g x\n  \\<lbrakk>has_least_prefixpoint ?f; has_least_prefixpoint ?g; isotone ?f;\n   isotone ?g; ?f \\<le>\\<le> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<mu> ?f \\<le> \\<mu> ?g\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> isotone (\\<lambda>x. \\<mu> f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_least_fixpoint (f x)\n 3. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x. \\<mu> f x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_least_fixpoint (f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x. \\<mu> f x)", "using has_least_fixpoint_def least_prefixpoint_fixpoint"], ["proof (prove)\nusing this:\n  has_least_fixpoint ?f \\<equiv> \\<exists>x. is_least_fixpoint ?f x\n  \\<lbrakk>has_least_prefixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_least_fixpoint ?f (p\\<mu> ?f)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_least_fixpoint (f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x. \\<mu> f x)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_least_prefixpoint (f x);\n     has_least_prefixpoint (\\<lambda>x. \\<mu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_least_prefixpoint (\\<lambda>x. \\<mu> f x)", "by simp"], ["", "lemma nu_diagonal_1:\n  assumes \"isotone (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\"\n      and \"\\<forall>x . has_greatest_fixpoint (\\<lambda>y . f x y)\"\n      and \"has_greatest_postfixpoint (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\"\n    shows \"\\<nu> (\\<lambda>x . f x x) = \\<nu> (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "let ?g = \"\\<lambda>x . \\<nu> (\\<lambda>y . f x y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "have 1: \"is_greatest_postfixpoint ?g (\\<nu> ?g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\n     (\\<nu> (\\<lambda>x. \\<nu> f x))", "using assms(1,3) greatest_postfixpoint pnu_nu"], ["proof (prove)\nusing this:\n  isotone (\\<lambda>x. \\<nu> f x)\n  has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\n  has_greatest_postfixpoint ?f \\<Longrightarrow>\n  is_greatest_postfixpoint ?f (p\\<nu> ?f)\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> p\\<nu> ?f = \\<nu> ?f\n\ngoal (1 subgoal):\n 1. is_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\n     (\\<nu> (\\<lambda>x. \\<nu> f x))", "by fastforce"], ["proof (state)\nthis:\n  is_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\n   (\\<nu> (\\<lambda>x. \\<nu> f x))\n\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "have \"f (\\<nu> ?g) (\\<nu> ?g) = \\<nu> ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (\\<nu> (\\<lambda>x. \\<nu> f x)) (\\<nu> (\\<lambda>x. \\<nu> f x)) =\n    \\<nu> (\\<lambda>x. \\<nu> f x)", "by (metis (no_types, lifting) assms is_greatest_fixpoint_def greatest_fixpoint_char greatest_postfixpoint_fixpoint)"], ["proof (state)\nthis:\n  f (\\<nu> (\\<lambda>x. \\<nu> f x)) (\\<nu> (\\<lambda>x. \\<nu> f x)) =\n  \\<nu> (\\<lambda>x. \\<nu> f x)\n\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "hence \"is_greatest_fixpoint (\\<lambda>x . f x x) (\\<nu> ?g)\""], ["proof (prove)\nusing this:\n  f (\\<nu> (\\<lambda>x. \\<nu> f x)) (\\<nu> (\\<lambda>x. \\<nu> f x)) =\n  \\<nu> (\\<lambda>x. \\<nu> f x)\n\ngoal (1 subgoal):\n 1. is_greatest_fixpoint (\\<lambda>x. f x x) (\\<nu> (\\<lambda>x. \\<nu> f x))", "using 1 assms(2) is_greatest_fixpoint_def is_greatest_postfixpoint_def greatest_fixpoint"], ["proof (prove)\nusing this:\n  f (\\<nu> (\\<lambda>x. \\<nu> f x)) (\\<nu> (\\<lambda>x. \\<nu> f x)) =\n  \\<nu> (\\<lambda>x. \\<nu> f x)\n  is_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\n   (\\<nu> (\\<lambda>x. \\<nu> f x))\n  \\<forall>x. has_greatest_fixpoint (f x)\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  is_greatest_postfixpoint ?f ?x \\<equiv>\n  ?x \\<le> ?f ?x \\<and>\n  (\\<forall>y. y \\<le> ?f y \\<longrightarrow> y \\<le> ?x)\n  has_greatest_fixpoint ?f \\<Longrightarrow>\n  is_greatest_fixpoint ?f (\\<nu> ?f)\n\ngoal (1 subgoal):\n 1. is_greatest_fixpoint (\\<lambda>x. f x x) (\\<nu> (\\<lambda>x. \\<nu> f x))", "by auto"], ["proof (state)\nthis:\n  is_greatest_fixpoint (\\<lambda>x. f x x) (\\<nu> (\\<lambda>x. \\<nu> f x))\n\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_greatest_fixpoint (\\<lambda>x. f x x) (\\<nu> (\\<lambda>x. \\<nu> f x))\n\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "using greatest_fixpoint_same"], ["proof (prove)\nusing this:\n  is_greatest_fixpoint (\\<lambda>x. f x x) (\\<nu> (\\<lambda>x. \\<nu> f x))\n  is_greatest_fixpoint ?f ?x \\<Longrightarrow> ?x = \\<nu> ?f\n\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)", "by simp"], ["proof (state)\nthis:\n  \\<nu> (\\<lambda>x. f x x) = \\<nu> (\\<lambda>x. \\<nu> f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_diagonal_2:\n  \"\\<forall>x . isotone (\\<lambda>y . f x y) \\<and> isotone (\\<lambda>y . f y x) \\<and> has_greatest_postfixpoint (\\<lambda>y . f x y) \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x . \\<nu> (\\<lambda>y . f x y)) \\<Longrightarrow> \\<nu> (\\<lambda>x . f x x) = \\<nu> (\\<lambda>x . \\<nu> (\\<lambda>y . f x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<nu> (\\<lambda>x. f x x) =\n                      \\<nu> (\\<lambda>x. \\<nu> f x)", "apply (rule nu_diagonal_1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> isotone (\\<lambda>x. \\<nu> f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_greatest_fixpoint (f x)\n 3. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)", "using isotone_def lifted_less_eq_def nu_isotone"], ["proof (prove)\nusing this:\n  isotone ?f \\<equiv>\n  \\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y\n  ?f \\<le>\\<le> ?g \\<equiv> \\<forall>x. ?f x \\<le> ?g x\n  \\<lbrakk>has_greatest_postfixpoint ?f; has_greatest_postfixpoint ?g;\n   isotone ?f; isotone ?g; ?f \\<le>\\<le> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<nu> ?f \\<le> \\<nu> ?g\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> isotone (\\<lambda>x. \\<nu> f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_greatest_fixpoint (f x)\n 3. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_greatest_fixpoint (f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)", "using has_greatest_fixpoint_def greatest_postfixpoint_fixpoint"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint ?f \\<equiv> \\<exists>x. is_greatest_fixpoint ?f x\n  \\<lbrakk>has_greatest_postfixpoint ?f; isotone ?f\\<rbrakk>\n  \\<Longrightarrow> is_greatest_fixpoint ?f (p\\<nu> ?f)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. has_greatest_fixpoint (f x)\n 2. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                isotone (f x) \\<and>\n                isotone (\\<lambda>y. f y x) \\<and>\n                has_greatest_postfixpoint (f x);\n     has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)\\<rbrakk>\n    \\<Longrightarrow> has_greatest_postfixpoint (\\<lambda>x. \\<nu> f x)", "by simp"], ["", "end"], ["", "end"]]}