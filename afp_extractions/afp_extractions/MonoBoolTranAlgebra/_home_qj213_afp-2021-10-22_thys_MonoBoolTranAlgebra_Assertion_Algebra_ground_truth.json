{"file_name": "/home/qj213/afp-2021-10-22/thys/MonoBoolTranAlgebra/Assertion_Algebra.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/MonoBoolTranAlgebra", "problem_names": ["lemma [simp]: \"{\\<cdot>p} \\<in> assertion\"", "lemma [simp]: \"abs_wpt ({\\<cdot>p}) = p\"", "lemma [simp]: \"x \\<in> assertion \\<Longrightarrow> {\\<cdot>Abs_Assertion x} = x\"", "lemma [simp]: \"x \\<in> assertion \\<Longrightarrow> {\\<cdot>abs_wpt x} = x\"", "lemma assert_injective: \"{\\<cdot>p} = {\\<cdot>q} \\<Longrightarrow> p = q\"", "lemma assert_image [simp]: \"assert ` A \\<subseteq> assertion\"", "lemma Sup1: \"(x::'a Assertion) \\<in> A \\<Longrightarrow> x \\<le> Sup A\"", "lemma Sup2: \"(\\<And>x::'a Assertion . x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow> Sup A \\<le> z\"", "lemma assert_top [simp]: \"{\\<cdot>\\<top>} = 1\"", "lemma assert_Sup: \"{\\<cdot>Sup A} = Sup (assert ` A)\"", "lemma assert_Inf: \"{\\<cdot>Inf A} = (Inf (assert ` A)) \\<sqinter> 1\"", "lemma assert_Inf_ne: \"A \\<noteq> {} \\<Longrightarrow> {\\<cdot>Inf A} = Inf (assert ` A)\"", "lemma assert_Sup_range: \"{\\<cdot>Sup (range p)} = Sup (range (assert o p))\"", "lemma assert_Sup_less: \"{\\<cdot> Sup_less p w } = Sup_less (assert o p) w\""], "translations": [["", "lemma [simp]: \"{\\<cdot>p} \\<in> assertion\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> p } \\<in> assertion", "by (unfold assert_def, cut_tac x = p in Rep_Assertion, simp)"], ["", "lemma [simp]: \"abs_wpt ({\\<cdot>p}) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_wpt {\\<cdot> p } = p", "apply (simp add: abs_wpt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_Assertion {\\<cdot> p } = p", "by (simp add: assert_def Rep_Assertion_inverse)"], ["", "lemma [simp]: \"x \\<in> assertion \\<Longrightarrow> {\\<cdot>Abs_Assertion x} = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> assertion \\<Longrightarrow> {\\<cdot> Abs_Assertion x } = x", "apply (simp add: assert_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> assertion \\<Longrightarrow> Rep_Assertion (Abs_Assertion x) = x", "by (rule Abs_Assertion_inverse, simp)"], ["", "lemma [simp]: \"x \\<in> assertion \\<Longrightarrow> {\\<cdot>abs_wpt x} = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> assertion \\<Longrightarrow> {\\<cdot> abs_wpt x } = x", "apply (simp add: abs_wpt_def assert_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> assertion \\<Longrightarrow> Rep_Assertion (Abs_Assertion x) = x", "by (rule Abs_Assertion_inverse, simp)"], ["", "lemma assert_injective: \"{\\<cdot>p} = {\\<cdot>q} \\<Longrightarrow> p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "assume A: \"{\\<cdot> p } = {\\<cdot> q } \""], ["proof (state)\nthis:\n  {\\<cdot> p } = {\\<cdot> q }\n\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "have \"p = abs_wpt ({\\<cdot>p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = abs_wpt {\\<cdot> p }", "by simp"], ["proof (state)\nthis:\n  p = abs_wpt {\\<cdot> p }\n\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "also"], ["proof (state)\nthis:\n  p = abs_wpt {\\<cdot> p }\n\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "have \"... = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_wpt {\\<cdot> p } = q", "by (subst A, simp)"], ["proof (state)\nthis:\n  abs_wpt {\\<cdot> p } = q\n\ngoal (1 subgoal):\n 1. {\\<cdot> p } = {\\<cdot> q } \\<Longrightarrow> p = q", "finally"], ["proof (chain)\npicking this:\n  p = q", "show ?thesis"], ["proof (prove)\nusing this:\n  p = q\n\ngoal (1 subgoal):\n 1. p = q", "."], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation Assertion :: (mbt_algebra) boolean_algebra\nbegin"], ["", "definition\n    uminus_Assertion_def: \"- p = abs_wpt(neg_assert {\\<cdot>p})\""], ["", "definition\n    bot_Assertion_def: \"\\<bottom> = abs_wpt \\<bottom>\""], ["", "definition\n    top_Assertion_def: \"\\<top> = abs_wpt 1\""], ["", "definition\n    inf_Assertion_def: \"p \\<sqinter> q = abs_wpt ({\\<cdot>p} \\<sqinter> {\\<cdot>q})\""], ["", "definition\n    sup_Assertion_def: \"p \\<squnion> q = abs_wpt ({\\<cdot>p} \\<squnion> {\\<cdot>q})\""], ["", "definition \n    less_eq_Assertion_def: \"(p \\<le> q) = ({\\<cdot>p} \\<le>  {\\<cdot>q})\""], ["", "definition \n    less_Assertion_def: \"(p < q) = ({\\<cdot>p} < {\\<cdot>q})\""], ["", "definition \n    minus_Assertion_def: \"(p::'a Assertion) - q = p \\<sqinter> - q\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a Assertion, boolean_algebra_class)", "proof"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<sqinter> y \\<le> x\n 6. \\<And>x y. x \\<sqinter> y \\<le> y\n 7. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 8. \\<And>x y. x \\<le> x \\<squnion> y\n 9. \\<And>y x. y \\<le> x \\<squnion> y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y \\<squnion> z \\<le> x\nA total of 16 subgoals...", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<sqinter> y \\<le> x\n 6. \\<And>x y. x \\<sqinter> y \\<le> y\n 7. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 8. \\<And>x y. x \\<le> x \\<squnion> y\n 9. \\<And>y x. y \\<le> x \\<squnion> y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y \\<squnion> z \\<le> x\nA total of 16 subgoals...", "show \"(x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)", "by (simp add: less_Assertion_def less_eq_Assertion_def less_le_not_le)"], ["proof (state)\nthis:\n  (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n\ngoal (15 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<sqinter> y \\<le> x\n 5. \\<And>x y. x \\<sqinter> y \\<le> y\n 6. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 7. \\<And>x y. x \\<le> x \\<squnion> y\n 8. \\<And>y x. y \\<le> x \\<squnion> y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 10. \\<And>a. \\<bottom> \\<le> a\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<sqinter> y \\<le> x\n 5. \\<And>x y. x \\<sqinter> y \\<le> y\n 6. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 7. \\<And>x y. x \\<le> x \\<squnion> y\n 8. \\<And>y x. y \\<le> x \\<squnion> y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 10. \\<And>a. \\<bottom> \\<le> a\nA total of 15 subgoals...", "fix x ::\"'a Assertion\""], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<sqinter> y \\<le> x\n 5. \\<And>x y. x \\<sqinter> y \\<le> y\n 6. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 7. \\<And>x y. x \\<le> x \\<squnion> y\n 8. \\<And>y x. y \\<le> x \\<squnion> y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 10. \\<And>a. \\<bottom> \\<le> a\nA total of 15 subgoals...", "show \"x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (simp add: less_eq_Assertion_def)"], ["proof (state)\nthis:\n  x \\<le> x\n\ngoal (14 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. \\<bottom> \\<le> a\n 10. \\<And>a. a \\<le> \\<top>\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. \\<bottom> \\<le> a\n 10. \\<And>a. a \\<le> \\<top>\nA total of 14 subgoals...", "fix x y z :: \"'a Assertion\""], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. \\<bottom> \\<le> a\n 10. \\<And>a. a \\<le> \\<top>\nA total of 14 subgoals...", "assume A: \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (14 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. \\<bottom> \\<le> a\n 10. \\<And>a. a \\<le> \\<top>\nA total of 14 subgoals...", "assume B: \"y \\<le> z\""], ["proof (state)\nthis:\n  y \\<le> z\n\ngoal (14 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. \\<bottom> \\<le> a\n 10. \\<And>a. a \\<le> \\<top>\nA total of 14 subgoals...", "from A and B"], ["proof (chain)\npicking this:\n  x \\<le> y\n  y \\<le> z", "show \"x \\<le> z\""], ["proof (prove)\nusing this:\n  x \\<le> y\n  y \\<le> z\n\ngoal (1 subgoal):\n 1. x \\<le> z", "by (simp add: less_eq_Assertion_def)"], ["proof (state)\nthis:\n  x \\<le> z\n\ngoal (13 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. \\<bottom> \\<le> a\n 9. \\<And>a. a \\<le> \\<top>\n 10. \\<And>x y z.\n        x \\<squnion> y \\<sqinter> z =\n        (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. \\<bottom> \\<le> a\n 9. \\<And>a. a \\<le> \\<top>\n 10. \\<And>x y z.\n        x \\<squnion> y \\<sqinter> z =\n        (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\nA total of 13 subgoals...", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. \\<bottom> \\<le> a\n 9. \\<And>a. a \\<le> \\<top>\n 10. \\<And>x y z.\n        x \\<squnion> y \\<sqinter> z =\n        (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\nA total of 13 subgoals...", "assume A: \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (13 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. \\<bottom> \\<le> a\n 9. \\<And>a. a \\<le> \\<top>\n 10. \\<And>x y z.\n        x \\<squnion> y \\<sqinter> z =\n        (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\nA total of 13 subgoals...", "assume B: \"y \\<le> x\""], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (13 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. \\<bottom> \\<le> a\n 9. \\<And>a. a \\<le> \\<top>\n 10. \\<And>x y z.\n        x \\<squnion> y \\<sqinter> z =\n        (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\nA total of 13 subgoals...", "from A and B"], ["proof (chain)\npicking this:\n  x \\<le> y\n  y \\<le> x", "show \"x = y\""], ["proof (prove)\nusing this:\n  x \\<le> y\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. x = y", "apply (cut_tac p = x and q = y in assert_injective)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> {\\<cdot> x } = {\\<cdot> y }\n 2. \\<lbrakk>x \\<le> y; y \\<le> x; x = y\\<rbrakk> \\<Longrightarrow> x = y", "by (rule antisym, simp_all add: less_eq_Assertion_def)"], ["proof (state)\nthis:\n  x = y\n\ngoal (12 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> x\n 2. \\<And>x y. x \\<sqinter> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 4. \\<And>x y. x \\<le> x \\<squnion> y\n 5. \\<And>y x. y \\<le> x \\<squnion> y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 7. \\<And>a. \\<bottom> \\<le> a\n 8. \\<And>a. a \\<le> \\<top>\n 9. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 10. \\<And>x. x \\<sqinter> - x = \\<bottom>\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> x\n 2. \\<And>x y. x \\<sqinter> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 4. \\<And>x y. x \\<le> x \\<squnion> y\n 5. \\<And>y x. y \\<le> x \\<squnion> y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 7. \\<And>a. \\<bottom> \\<le> a\n 8. \\<And>a. a \\<le> \\<top>\n 9. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 10. \\<And>x. x \\<sqinter> - x = \\<bottom>\nA total of 12 subgoals...", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> x\n 2. \\<And>x y. x \\<sqinter> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 4. \\<And>x y. x \\<le> x \\<squnion> y\n 5. \\<And>y x. y \\<le> x \\<squnion> y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 7. \\<And>a. \\<bottom> \\<le> a\n 8. \\<And>a. a \\<le> \\<top>\n 9. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 10. \\<And>x. x \\<sqinter> - x = \\<bottom>\nA total of 12 subgoals...", "show \"x \\<sqinter> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> x", "by (simp add: less_eq_Assertion_def inf_Assertion_def)"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<le> x\n\ngoal (11 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> y\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 3. \\<And>x y. x \\<le> x \\<squnion> y\n 4. \\<And>y x. y \\<le> x \\<squnion> y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 6. \\<And>a. \\<bottom> \\<le> a\n 7. \\<And>a. a \\<le> \\<top>\n 8. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 9. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 10. \\<And>x. x \\<squnion> - x = \\<top>\nA total of 11 subgoals...", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> y\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 3. \\<And>x y. x \\<le> x \\<squnion> y\n 4. \\<And>y x. y \\<le> x \\<squnion> y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 6. \\<And>a. \\<bottom> \\<le> a\n 7. \\<And>a. a \\<le> \\<top>\n 8. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 9. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 10. \\<And>x. x \\<squnion> - x = \\<top>\nA total of 11 subgoals...", "show \"x \\<sqinter> y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> y", "by (simp add: less_eq_Assertion_def inf_Assertion_def)"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<le> y\n\ngoal (10 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. \\<bottom> \\<le> a\n 6. \\<And>a. a \\<le> \\<top>\n 7. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 8. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 9. \\<And>x. x \\<squnion> - x = \\<top>\n 10. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. \\<bottom> \\<le> a\n 6. \\<And>a. a \\<le> \\<top>\n 7. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 8. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 9. \\<And>x. x \\<squnion> - x = \\<top>\n 10. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y z :: \"'a Assertion\""], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. \\<bottom> \\<le> a\n 6. \\<And>a. a \\<le> \\<top>\n 7. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 8. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 9. \\<And>x. x \\<squnion> - x = \\<top>\n 10. \\<And>x y. x - y = x \\<sqinter> - y", "assume A: \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (10 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. \\<bottom> \\<le> a\n 6. \\<And>a. a \\<le> \\<top>\n 7. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 8. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 9. \\<And>x. x \\<squnion> - x = \\<top>\n 10. \\<And>x y. x - y = x \\<sqinter> - y", "assume B: \"x \\<le> z\""], ["proof (state)\nthis:\n  x \\<le> z\n\ngoal (10 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. \\<bottom> \\<le> a\n 6. \\<And>a. a \\<le> \\<top>\n 7. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 8. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 9. \\<And>x. x \\<squnion> - x = \\<top>\n 10. \\<And>x y. x - y = x \\<sqinter> - y", "from A and B"], ["proof (chain)\npicking this:\n  x \\<le> y\n  x \\<le> z", "show \"x \\<le> y \\<sqinter> z\""], ["proof (prove)\nusing this:\n  x \\<le> y\n  x \\<le> z\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<sqinter> z", "by (simp add: less_eq_Assertion_def inf_Assertion_def)"], ["proof (state)\nthis:\n  x \\<le> y \\<sqinter> z\n\ngoal (9 subgoals):\n 1. \\<And>x y. x \\<le> x \\<squnion> y\n 2. \\<And>y x. y \\<le> x \\<squnion> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 4. \\<And>a. \\<bottom> \\<le> a\n 5. \\<And>a. a \\<le> \\<top>\n 6. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 7. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 8. \\<And>x. x \\<squnion> - x = \\<top>\n 9. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x y. x \\<le> x \\<squnion> y\n 2. \\<And>y x. y \\<le> x \\<squnion> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 4. \\<And>a. \\<bottom> \\<le> a\n 5. \\<And>a. a \\<le> \\<top>\n 6. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 7. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 8. \\<And>x. x \\<squnion> - x = \\<top>\n 9. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x y. x \\<le> x \\<squnion> y\n 2. \\<And>y x. y \\<le> x \\<squnion> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 4. \\<And>a. \\<bottom> \\<le> a\n 5. \\<And>a. a \\<le> \\<top>\n 6. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 7. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 8. \\<And>x. x \\<squnion> - x = \\<top>\n 9. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x \\<le> x \\<squnion> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x \\<squnion> y", "by (simp add: less_eq_Assertion_def sup_Assertion_def)"], ["proof (state)\nthis:\n  x \\<le> x \\<squnion> y\n\ngoal (8 subgoals):\n 1. \\<And>y x. y \\<le> x \\<squnion> y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 3. \\<And>a. \\<bottom> \\<le> a\n 4. \\<And>a. a \\<le> \\<top>\n 5. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 6. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 7. \\<And>x. x \\<squnion> - x = \\<top>\n 8. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y x. y \\<le> x \\<squnion> y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 3. \\<And>a. \\<bottom> \\<le> a\n 4. \\<And>a. a \\<le> \\<top>\n 5. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 6. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 7. \\<And>x. x \\<squnion> - x = \\<top>\n 8. \\<And>x y. x - y = x \\<sqinter> - y", "show \"y \\<le> x \\<squnion> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x \\<squnion> y", "by (simp add: less_eq_Assertion_def sup_Assertion_def)"], ["proof (state)\nthis:\n  y \\<le> x \\<squnion> y\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. \\<bottom> \\<le> a\n 3. \\<And>a. a \\<le> \\<top>\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 5. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. \\<bottom> \\<le> a\n 3. \\<And>a. a \\<le> \\<top>\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 5. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y z :: \"'a Assertion\""], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. \\<bottom> \\<le> a\n 3. \\<And>a. a \\<le> \\<top>\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 5. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x y. x - y = x \\<sqinter> - y", "assume A: \"y \\<le> x\""], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. \\<bottom> \\<le> a\n 3. \\<And>a. a \\<le> \\<top>\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 5. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x y. x - y = x \\<sqinter> - y", "assume B: \"z \\<le> x\""], ["proof (state)\nthis:\n  z \\<le> x\n\ngoal (7 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. \\<bottom> \\<le> a\n 3. \\<And>a. a \\<le> \\<top>\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 5. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x y. x - y = x \\<sqinter> - y", "from A and B"], ["proof (chain)\npicking this:\n  y \\<le> x\n  z \\<le> x", "show \"y \\<squnion> z \\<le> x\""], ["proof (prove)\nusing this:\n  y \\<le> x\n  z \\<le> x\n\ngoal (1 subgoal):\n 1. y \\<squnion> z \\<le> x", "by (simp add: less_eq_Assertion_def sup_Assertion_def)"], ["proof (state)\nthis:\n  y \\<squnion> z \\<le> x\n\ngoal (6 subgoals):\n 1. \\<And>a. \\<bottom> \\<le> a\n 2. \\<And>a. a \\<le> \\<top>\n 3. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 4. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 5. \\<And>x. x \\<squnion> - x = \\<top>\n 6. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a. \\<bottom> \\<le> a\n 2. \\<And>a. a \\<le> \\<top>\n 3. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 4. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 5. \\<And>x. x \\<squnion> - x = \\<top>\n 6. \\<And>x y. x - y = x \\<sqinter> - y", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a. \\<bottom> \\<le> a\n 2. \\<And>a. a \\<le> \\<top>\n 3. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 4. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 5. \\<And>x. x \\<squnion> - x = \\<top>\n 6. \\<And>x y. x - y = x \\<sqinter> - y", "show \"\\<bottom> \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<le> x", "by (simp add: less_eq_Assertion_def bot_Assertion_def)"], ["proof (state)\nthis:\n  \\<bottom> \\<le> x\n\ngoal (5 subgoals):\n 1. \\<And>a. a \\<le> \\<top>\n 2. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 3. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 4. \\<And>x. x \\<squnion> - x = \\<top>\n 5. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a. a \\<le> \\<top>\n 2. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 3. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 4. \\<And>x. x \\<squnion> - x = \\<top>\n 5. \\<And>x y. x - y = x \\<sqinter> - y", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a. a \\<le> \\<top>\n 2. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 3. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 4. \\<And>x. x \\<squnion> - x = \\<top>\n 5. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x \\<le> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "by (simp add: less_eq_Assertion_def top_Assertion_def)"], ["proof (state)\nthis:\n  x \\<le> \\<top>\n\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 2. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 3. \\<And>x. x \\<squnion> - x = \\<top>\n 4. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 2. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 3. \\<And>x. x \\<squnion> - x = \\<top>\n 4. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y z :: \"'a Assertion\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 2. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 3. \\<And>x. x \\<squnion> - x = \\<top>\n 4. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x \\<squnion> y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "by (simp add: less_eq_Assertion_def sup_Assertion_def inf_Assertion_def sup_inf_distrib)"], ["proof (state)\nthis:\n  x \\<squnion> y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 2. \\<And>x. x \\<squnion> - x = \\<top>\n 3. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 2. \\<And>x. x \\<squnion> - x = \\<top>\n 3. \\<And>x y. x - y = x \\<sqinter> - y", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<sqinter> - x = \\<bottom>\n 2. \\<And>x. x \\<squnion> - x = \\<top>\n 3. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x \\<sqinter> - x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - x = \\<bottom>", "by (simp add: inf_Assertion_def uminus_Assertion_def bot_Assertion_def)"], ["proof (state)\nthis:\n  x \\<sqinter> - x = \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<squnion> - x = \\<top>\n 2. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<squnion> - x = \\<top>\n 2. \\<And>x y. x - y = x \\<sqinter> - y", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<squnion> - x = \\<top>\n 2. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x \\<squnion> - x = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = \\<top>", "by (simp add: sup_Assertion_def uminus_Assertion_def top_Assertion_def)"], ["proof (state)\nthis:\n  x \\<squnion> - x = \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>x y. x - y = x \\<sqinter> - y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x - y = x \\<sqinter> - y", "fix x y :: \"'a Assertion\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x - y = x \\<sqinter> - y", "show \"x - y = x \\<sqinter> - y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - y = x \\<sqinter> - y", "by (simp add: minus_Assertion_def)"], ["proof (state)\nthis:\n  x - y = x \\<sqinter> - y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma assert_image [simp]: \"assert ` A \\<subseteq> assertion\""], ["proof (prove)\ngoal (1 subgoal):\n 1. assert ` A \\<subseteq> assertion", "by auto"], ["", "instantiation Assertion :: (complete_mbt_algebra) complete_lattice\nbegin"], ["", "definition\n    Sup_Assertion_def: \"Sup A = abs_wpt (Sup (assert ` A))\""], ["", "definition\n    Inf_Assertion_def: \"Inf (A::('a Assertion) set) = - (Sup (uminus ` A))\""], ["", "lemma Sup1: \"(x::'a Assertion) \\<in> A \\<Longrightarrow> x \\<le> Sup A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A", "apply (simp add: Sup_Assertion_def less_eq_Assertion_def Abs_Assertion_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> {\\<cdot> x } \\<le> \\<Squnion>(assert ` A)", "by (rule Sup_upper, simp)"], ["", "lemma Sup2: \"(\\<And>x::'a Assertion . x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow> Sup A \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n    \\<Squnion>A \\<le> z", "apply (simp add: Sup_Assertion_def less_eq_Assertion_def Abs_Assertion_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> A \\<Longrightarrow>\n        {\\<cdot> x } \\<le> {\\<cdot> z }) \\<Longrightarrow>\n    \\<Squnion>(assert ` A) \\<le> {\\<cdot> z }", "apply (rule Sup_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x.\n                   x \\<in> A \\<Longrightarrow>\n                   {\\<cdot> x } \\<le> {\\<cdot> z };\n        x \\<in> assert ` A\\<rbrakk>\n       \\<Longrightarrow> x \\<le> {\\<cdot> z }", "by blast"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a Assertion, complete_lattice_class)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> \\<Sqinter>A \\<le> x\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 3. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 4. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 5. \\<Sqinter>{} = \\<top>\n 6. \\<Squnion>{} = \\<bottom>", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> \\<Sqinter>A \\<le> x\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 3. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 4. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 5. \\<Sqinter>{} = \\<top>\n 6. \\<Squnion>{} = \\<bottom>", "fix A"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> \\<Sqinter>A \\<le> x\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 3. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 4. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 5. \\<Sqinter>{} = \\<top>\n 6. \\<Squnion>{} = \\<bottom>", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (6 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> \\<Sqinter>A \\<le> x\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 3. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 4. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 5. \\<Sqinter>{} = \\<top>\n 6. \\<Squnion>{} = \\<bottom>", "from A"], ["proof (chain)\npicking this:\n  x \\<in> A", "show \"Inf A \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<Sqinter>A \\<le> x", "apply (simp add: Inf_Assertion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> - \\<Squnion>(uminus ` A) \\<le> x", "apply (subst compl_le_compl_iff [THEN sym], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A \\<Longrightarrow> - x \\<le> \\<Squnion>(uminus ` A)", "by (rule Sup1, simp)"], ["proof (state)\nthis:\n  \\<Sqinter>A \\<le> x\n\ngoal (5 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 2. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 3. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 4. \\<Sqinter>{} = \\<top>\n 5. \\<Squnion>{} = \\<bottom>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 2. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 3. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 4. \\<Sqinter>{} = \\<top>\n 5. \\<Squnion>{} = \\<bottom>", "fix z :: \"'a Assertion\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 2. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 3. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 4. \\<Sqinter>{} = \\<top>\n 5. \\<Squnion>{} = \\<bottom>", "fix A"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 2. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 3. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 4. \\<Sqinter>{} = \\<top>\n 5. \\<Squnion>{} = \\<bottom>", "assume A: \"\\<And>x . x \\<in> A \\<Longrightarrow> z \\<le> x\""], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> z \\<le> ?x\n\ngoal (5 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n       z \\<le> \\<Sqinter>A\n 2. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 3. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 4. \\<Sqinter>{} = \\<top>\n 5. \\<Squnion>{} = \\<bottom>", "from A"], ["proof (chain)\npicking this:\n  ?x \\<in> A \\<Longrightarrow> z \\<le> ?x", "show \"z \\<le> Inf A\""], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> z \\<le> ?x\n\ngoal (1 subgoal):\n 1. z \\<le> \\<Sqinter>A", "apply (simp add: Inf_Assertion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n    z \\<le> - \\<Squnion>(uminus ` A)", "apply (subst compl_le_compl_iff [THEN sym], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x) \\<Longrightarrow>\n    \\<Squnion>(uminus ` A) \\<le> - z", "apply (rule Sup2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x;\n        x \\<in> uminus ` A\\<rbrakk>\n       \\<Longrightarrow> x \\<le> - z", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<And>x. x \\<in> A \\<Longrightarrow> z \\<le> x;\n        xa \\<in> A\\<rbrakk>\n       \\<Longrightarrow> - xa \\<le> - z", "by simp"], ["proof (state)\nthis:\n  z \\<le> \\<Sqinter>A\n\ngoal (4 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 3. \\<Sqinter>{} = \\<top>\n 4. \\<Squnion>{} = \\<bottom>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 3. \\<Sqinter>{} = \\<top>\n 4. \\<Squnion>{} = \\<bottom>", "fix x :: \"'a Assertion\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 3. \\<Sqinter>{} = \\<top>\n 4. \\<Squnion>{} = \\<bottom>", "fix A"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 3. \\<Sqinter>{} = \\<top>\n 4. \\<Squnion>{} = \\<bottom>", "assume A: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (4 subgoals):\n 1. \\<And>x A. x \\<in> A \\<Longrightarrow> x \\<le> \\<Squnion>A\n 2. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 3. \\<Sqinter>{} = \\<top>\n 4. \\<Squnion>{} = \\<bottom>", "from A"], ["proof (chain)\npicking this:\n  x \\<in> A", "show \"x \\<le> Sup A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> \\<Squnion>A", "by (rule Sup1)"], ["proof (state)\nthis:\n  x \\<le> \\<Squnion>A\n\ngoal (3 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 2. \\<Sqinter>{} = \\<top>\n 3. \\<Squnion>{} = \\<bottom>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 2. \\<Sqinter>{} = \\<top>\n 3. \\<Squnion>{} = \\<bottom>", "fix z :: \"'a Assertion\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 2. \\<Sqinter>{} = \\<top>\n 3. \\<Squnion>{} = \\<bottom>", "fix A"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 2. \\<Sqinter>{} = \\<top>\n 3. \\<Squnion>{} = \\<bottom>", "assume A: \"\\<And>x . x \\<in> A \\<Longrightarrow> x \\<le> z\""], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> ?x \\<le> z\n\ngoal (3 subgoals):\n 1. \\<And>A z.\n       (\\<And>x. x \\<in> A \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       \\<Squnion>A \\<le> z\n 2. \\<Sqinter>{} = \\<top>\n 3. \\<Squnion>{} = \\<bottom>", "from A"], ["proof (chain)\npicking this:\n  ?x \\<in> A \\<Longrightarrow> ?x \\<le> z", "show \"Sup A \\<le> z\""], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> ?x \\<le> z\n\ngoal (1 subgoal):\n 1. \\<Squnion>A \\<le> z", "by (rule Sup2)"], ["proof (state)\nthis:\n  \\<Squnion>A \\<le> z\n\ngoal (2 subgoals):\n 1. \\<Sqinter>{} = \\<top>\n 2. \\<Squnion>{} = \\<bottom>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Sqinter>{} = \\<top>\n 2. \\<Squnion>{} = \\<bottom>", "show \"Inf {} = (\\<top>::'a Assertion)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>{} = \\<top>", "by (auto simp: Inf_Assertion_def Sup_Assertion_def compl_bot_eq [symmetric] bot_Assertion_def)"], ["proof (state)\nthis:\n  \\<Sqinter>{} = \\<top>\n\ngoal (1 subgoal):\n 1. \\<Squnion>{} = \\<bottom>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Squnion>{} = \\<bottom>", "show \"Sup {} = (\\<bottom>::'a Assertion)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{} = \\<bottom>", "by (auto simp: Sup_Assertion_def bot_Assertion_def)"], ["proof (state)\nthis:\n  \\<Squnion>{} = \\<bottom>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma assert_top [simp]: \"{\\<cdot>\\<top>} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> \\<top> } = (1::'a)", "by (simp add: top_Assertion_def)"], ["", "lemma assert_Sup: \"{\\<cdot>Sup A} = Sup (assert ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Squnion>A } = \\<Squnion>(assert ` A)", "by (simp add: Sup_Assertion_def Abs_Assertion_inverse)"], ["", "lemma assert_Inf: \"{\\<cdot>Inf A} = (Inf (assert ` A)) \\<sqinter> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "proof (cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "then"], ["proof (chain)\npicking this:\n  A = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "by simp"], ["proof (state)\nthis:\n  {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "note image_cong_simp [cong del]"], ["proof (state)\nthis:\n  \\<lbrakk>?M = ?N; \\<And>x. x \\<in> ?N =simp=> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "apply (simp add: Inf_Assertion_def uminus_Assertion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    neg_assert {\\<cdot> \\<Squnion>(uminus ` A) } =\n    \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "apply (simp add: neg_assert_def assert_Sup dual_Sup Inf_comp inf_commute inf_Inf comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>((\\<sqinter>) (1::'a) `\n               (\\<lambda>x. x * \\<bottom>) ` dual ` assert ` uminus ` A) =\n    \\<Sqinter>((\\<sqinter>) (1::'a) ` assert ` A)", "apply (rule_tac f = Inf in arg_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    (\\<sqinter>) (1::'a) `\n    (\\<lambda>x. x * \\<bottom>) ` dual ` assert ` uminus ` A =\n    (\\<sqinter>) (1::'a) ` assert ` A", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa xb xc xd xe xf.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xf \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter>\n                         ({\\<cdot> - xf } ^ o * \\<bottom>)\n                         \\<in> (\\<sqinter>) (1::'a) ` assert ` A\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xf.\n       \\<lbrakk>x \\<in> A; xf \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter>\n                         ({\\<cdot> - xf } ^ o * \\<bottom>)\n                         \\<in> (\\<sqinter>) (1::'a) ` assert ` A\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply (subst inf_commute)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xf.\n       \\<lbrakk>x \\<in> A; xf \\<in> A\\<rbrakk>\n       \\<Longrightarrow> {\\<cdot> - xf } ^ o * \\<bottom> \\<sqinter> (1::'a)\n                         \\<in> (\\<sqinter>) (1::'a) ` assert ` A\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply (simp add: image_def uminus_Assertion_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xf.\n       \\<lbrakk>x \\<in> A; xf \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (\\<exists>xa\\<in>A. x = {\\<cdot> xa }) \\<and>\n                            neg_assert {\\<cdot> xf } ^ o *\n                            \\<bottom> \\<sqinter>\n                            (1::'a) =\n                            (1::'a) \\<sqinter> x\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply (simp add: neg_assert_def dual_comp dual_inf sup_comp assertion_prop)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xf.\n       \\<lbrakk>x \\<in> A; xf \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (\\<exists>xa\\<in>A. x = {\\<cdot> xa }) \\<and>\n                            {\\<cdot> xf } = (1::'a) \\<sqinter> x\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply auto [1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa xb xc.\n       \\<lbrakk>x \\<in> A; x \\<notin> {}; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (1::'a) \\<sqinter> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xc.\n       \\<lbrakk>x \\<in> A; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> {\\<cdot> xc }\n                         \\<in> (\\<sqinter>) (1::'a) `\n                               (\\<lambda>x. x * \\<bottom>) `\n                               dual ` assert ` uminus ` A", "apply (subst image_def, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xc.\n       \\<lbrakk>x \\<in> A; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>A.\n                            {\\<cdot> xc } =\n                            (1::'a) \\<sqinter>\n                            ({\\<cdot> - x } ^ o * \\<bottom>)", "apply (simp add: uminus_Assertion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xc.\n       \\<lbrakk>x \\<in> A; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>A.\n                            {\\<cdot> xc } =\n                            (1::'a) \\<sqinter>\n                            (neg_assert {\\<cdot> x } ^ o * \\<bottom>)", "apply (subst inf_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xc.\n       \\<lbrakk>x \\<in> A; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>A.\n                            {\\<cdot> xc } =\n                            neg_assert {\\<cdot> x } ^ o *\n                            \\<bottom> \\<sqinter>\n                            (1::'a)", "apply (simp add: neg_assert_def dual_comp dual_inf sup_comp assertion_prop)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xc.\n       \\<lbrakk>x \\<in> A; xc \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>A. {\\<cdot> xc } = {\\<cdot> x }", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assert_Inf_ne: \"A \\<noteq> {} \\<Longrightarrow> {\\<cdot>Inf A} = Inf (assert ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    {\\<cdot> \\<Sqinter>A } = \\<Sqinter>(assert ` A)", "apply (unfold assert_Inf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>(assert ` A) \\<sqinter> (1::'a) = \\<Sqinter>(assert ` A)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>(assert ` A) \\<sqinter> (1::'a) \\<le> \\<Sqinter>(assert ` A)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter>(assert ` A) \\<le> \\<Sqinter>(assert ` A) \\<sqinter> (1::'a)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow> \\<Sqinter>(assert ` A) \\<le> (1::'a)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<not> \\<Sqinter>(assert ` A) \\<le> (1::'a);\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (erule notE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> \\<Sqinter>(assert ` A) \\<le> (1::'a)", "apply (rule_tac y = \"{\\<cdot>x}\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> \\<Sqinter>(assert ` A) \\<le> {\\<cdot> x }\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> {\\<cdot> x } \\<le> (1::'a)", "by (simp_all add: INF_lower)"], ["", "lemma assert_Sup_range: \"{\\<cdot>Sup (range p)} = Sup (range (assert o p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Squnion>range p } = \\<Squnion>range (assert \\<circ> p)", "apply (subst assert_Sup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(assert ` range p) = \\<Squnion>range (assert \\<circ> p)", "by (rule_tac f = \"Sup\" in arg_cong, auto)"], ["", "lemma assert_Sup_less: \"{\\<cdot> Sup_less p w } = Sup_less (assert o p) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> Sup_less p w } = Sup_less (assert \\<circ> p) w", "apply (simp add: Sup_less_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<cdot> \\<Squnion>{y. \\<exists>v<w. y = p v} } =\n    \\<Squnion>{y. \\<exists>v<w. y = {\\<cdot> p v }}", "apply (subst assert_Sup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(assert ` {y. \\<exists>v<w. y = p v}) =\n    \\<Squnion>{y. \\<exists>v<w. y = {\\<cdot> p v }}", "by (rule_tac f = \"Sup\" in arg_cong, auto)"], ["", "end"]]}