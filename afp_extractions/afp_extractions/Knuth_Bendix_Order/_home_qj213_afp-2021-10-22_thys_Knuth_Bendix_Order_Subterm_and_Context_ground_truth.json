{"file_name": "/home/qj213/afp-2021-10-22/thys/Knuth_Bendix_Order/Subterm_and_Context.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Knuth_Bendix_Order", "problem_names": ["lemma supt_trans [trans]:\n  \"s \\<rhd> t \\<Longrightarrow> t \\<rhd> u \\<Longrightarrow> s \\<rhd> u\"", "lemma trans_supt: \"trans {\\<rhd>}\"", "lemma supteq_trans [trans]:\n  \"s \\<unrhd> t \\<Longrightarrow> t \\<unrhd> u \\<Longrightarrow> s \\<unrhd> u\"", "lemma size_simp5:\n  \"s \\<in> set ss \\<Longrightarrow> s \\<rhd> t \\<Longrightarrow> size t < size s \\<Longrightarrow> size t < Suc (size_list size ss)\"", "lemma size_simp6:\n  \"s \\<in> set ss \\<Longrightarrow> s \\<unrhd> t \\<Longrightarrow> size t \\<le> size s \\<Longrightarrow> size t \\<le> Suc (size_list size ss)\"", "lemma size_simp1:\n  \"t \\<in> set ts \\<Longrightarrow> size t < Suc (size_list size ts)\"", "lemma size_simp2:\n  \"t \\<in> set ts \\<Longrightarrow> size t < Suc (Suc (size s + size_list size ts))\"", "lemma size_simp3:\n  assumes \"(x, y) \\<in> set (zip xs ys)\"\n  shows \"size x < Suc (size_list size xs)\"", "lemma size_simp4:\n  assumes \"(x, y) \\<in> set (zip xs ys)\"\n  shows \"size y < Suc (size_list size ys)\"", "lemmas size_simps =\n  size_simp1 size_simp2 size_simp3 size_simp4 size_simp5 size_simp6", "lemma supt_size:\n  \"s \\<rhd> t \\<Longrightarrow> size s > size t\"", "lemma supteq_size:\n  \"s \\<unrhd> t \\<Longrightarrow> size s \\<ge> size t\"", "lemma reflcl_supteq [simp]:\n  \"supteq\\<^sup>= = supteq\"", "lemma trancl_supteq [simp]:\n  \"supteq\\<^sup>+ = supteq\"", "lemma rtrancl_supteq [simp]:\n  \"supteq\\<^sup>* = supteq\"", "lemma eq_supteq: \"s = t \\<Longrightarrow> s \\<unrhd> t\"", "lemma supt_neqD: \"s \\<rhd> t \\<Longrightarrow> s \\<noteq> t\"", "lemma supteq_Var [simp]:\n  \"x \\<in> vars_term t \\<Longrightarrow> t \\<unrhd> Var x\"", "lemmas vars_term_supteq = supteq_Var", "lemma term_not_arg [iff]:\n  \"Fun f ss \\<notin> set ss\" (is \"?t \\<notin> set ss\")", "lemma supt_Fun [simp]:\n  assumes \"s \\<rhd> Fun f ss\" (is \"s \\<rhd> ?t\") and \"s \\<in> set ss\"\n  shows \"False\"", "lemma supt_supteq_conv: \"s \\<rhd> t = (s \\<unrhd> t \\<and> s \\<noteq> t)\"", "lemma supt_not_sym: \"s \\<rhd> t \\<Longrightarrow> \\<not> (t \\<rhd> s)\"", "lemma supt_irrefl[iff]: \"\\<not> t \\<rhd> t\"", "lemma irrefl_subt: \"irrefl {\\<lhd>}\"", "lemma supt_imp_supteq: \"s \\<rhd> t \\<Longrightarrow> s \\<unrhd> t\"", "lemma supt_supteq_not_supteq: \"s \\<rhd> t = (s \\<unrhd> t \\<and> \\<not> (t \\<unrhd> s))\"", "lemma supteq_supt_conv: \"(s \\<unrhd> t) = (s \\<rhd> t \\<or> s = t)\"", "lemma supteq_antisym:\n  assumes \"s \\<unrhd> t\" and \"t \\<unrhd> s\" shows \"s = t\"", "lemma supt_supteq_trans[trans]:\n  \"s \\<rhd> t \\<Longrightarrow> t \\<unrhd> u \\<Longrightarrow> s \\<rhd> u\"", "lemma supteq_supt_trans[trans]:\n  \"s \\<unrhd> t \\<Longrightarrow> t \\<rhd> u \\<Longrightarrow> s \\<rhd> u\"", "lemma suptE [elim]: \"s \\<rhd> t \\<Longrightarrow> (s \\<unrhd> t \\<Longrightarrow> P) \\<Longrightarrow> (s \\<noteq> t \\<Longrightarrow> P) \\<Longrightarrow> P\"", "lemmas suptI [intro] =\n  subterm.dual_order.not_eq_order_implies_strict", "lemma supt_supteq_set_conv:\n  \"{\\<rhd>} = {\\<unrhd>} - Id\"", "lemma supteq_supt_set_conv:\n  \"{\\<unrhd>} = {\\<rhd>}\\<^sup>=\"", "lemma supteq_imp_vars_term_subset:\n  \"s \\<unrhd> t \\<Longrightarrow> vars_term t \\<subseteq> vars_term s\"", "lemma set_supteq_into_supt [simp]:\n  assumes \"t \\<in> set ts\" and \"t \\<unrhd> s\"\n  shows \"Fun f ts \\<rhd> s\"", "lemma SN_supt:\n  \"SN {\\<rhd>}\"", "lemma supt_not_refl[elim!]:\n  assumes \"t \\<rhd> t\" shows False", "lemma supteq_not_supt [elim]:\n  assumes \"s \\<unrhd> t\" and \"\\<not> (s \\<rhd> t)\"\n  shows \"s = t\"", "lemma supteq_not_supt_conv [simp]:\n  \"{\\<unrhd>} - {\\<rhd>} = Id\"", "lemma supteq_subst [simp, intro]:\n  assumes \"s \\<unrhd> t\" shows \"s \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\"", "lemma supt_subst [simp, intro]:\n  assumes \"s \\<rhd> t\" shows \"s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\"", "lemma subterm_induct:\n  assumes \"\\<And>t. \\<forall>s\\<lhd>t. P s \\<Longrightarrow> P t\"\n  shows [case_names subterm]: \"P t\"", "lemma ctxt_eq [simp]:\n  \"(C\\<langle>s\\<rangle> = C\\<langle>t\\<rangle>) = (s = t)\"", "lemma ctxt_ctxt_compose [simp]: \"(C \\<circ>\\<^sub>c D)\\<langle>t\\<rangle> = C\\<langle>D\\<langle>t\\<rangle>\\<rangle>\"", "lemmas ctxt_ctxt = ctxt_ctxt_compose [symmetric]", "lemma subst_apply_term_ctxt_apply_distrib [simp]:\n  \"C\\<langle>t\\<rangle> \\<cdot> \\<mu> = (C \\<cdot>\\<^sub>c \\<mu>)\\<langle>t \\<cdot> \\<mu>\\<rangle>\"", "lemma subst_compose_ctxt_compose_distrib [simp]:\n  \"(C \\<circ>\\<^sub>c D) \\<cdot>\\<^sub>c \\<sigma> = (C \\<cdot>\\<^sub>c \\<sigma>) \\<circ>\\<^sub>c (D \\<cdot>\\<^sub>c \\<sigma>)\"", "lemma ctxt_compose_subst_compose_distrib [simp]:\n  \"C \\<cdot>\\<^sub>c (\\<sigma> \\<circ>\\<^sub>s \\<tau>) = (C \\<cdot>\\<^sub>c \\<sigma>) \\<cdot>\\<^sub>c \\<tau>\"", "lemma ctxt_imp_supteq [simp]:\n  shows \"C\\<langle>t\\<rangle> \\<unrhd> t\"", "lemma supteq_ctxtE[elim]:\n  assumes \"s \\<unrhd> t\" obtains C where \"s = C\\<langle>t\\<rangle>\"", "lemma ctxt_supteq[intro]:\n  assumes \"s = C\\<langle>t\\<rangle>\" shows \"s \\<unrhd> t\"", "lemma supteq_ctxt_conv: \"(s \\<unrhd> t) = (\\<exists>C. s = C\\<langle>t\\<rangle>)\"", "lemma supt_ctxtE[elim]:\n  assumes \"s \\<rhd> t\" obtains C where \"C \\<noteq> \\<box>\" and \"s = C\\<langle>t\\<rangle>\"", "lemma ctxt_supt[intro 2]:\n  assumes \"C \\<noteq> \\<box>\" and \"s = C\\<langle>t\\<rangle>\" shows \"s \\<rhd> t\"", "lemma supt_ctxt_conv: \"(s \\<rhd> t) = (\\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>)\" (is \"_ = ?rhs\")", "lemma nectxt_imp_supt_ctxt: \"C \\<noteq> \\<box> \\<Longrightarrow> C\\<langle>t\\<rangle> \\<rhd> t\"", "lemma supt_var: \"\\<not> (Var x \\<rhd> u)\"", "lemma supt_const: \"\\<not> (Fun f [] \\<rhd> u)\"", "lemma supteq_var_imp_eq:\n  \"(Var x \\<unrhd> t) = (t = Var x)\" (is \"_ = (_ = ?x)\")", "lemma Var_supt [elim!]:\n  assumes \"Var x \\<rhd> t\" shows P", "lemma Fun_supt [elim]:\n  assumes \"Fun f ts \\<rhd> s\" obtains t where \"t \\<in> set ts\" and \"t \\<unrhd> s\"", "lemma inj_ctxt_apply_term: \"inj (ctxt_apply_term C)\"", "lemma ctxt_subst_eq: \"(\\<And>x. x \\<in> vars_ctxt C \\<Longrightarrow> \\<sigma> x = \\<tau> x) \\<Longrightarrow> C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\""], "translations": [["", "lemma supt_trans [trans]:\n  \"s \\<rhd> t \\<Longrightarrow> t \\<rhd> u \\<Longrightarrow> s \\<rhd> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; t \\<rhd> u\\<rbrakk> \\<Longrightarrow> s \\<rhd> u", "by (induct s t rule: supt.induct) auto"], ["", "lemma trans_supt: \"trans {\\<rhd>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans {\\<rhd>}", "by (auto simp: trans_def dest: supt_trans)"], ["", "lemma supteq_trans [trans]:\n  \"s \\<unrhd> t \\<Longrightarrow> t \\<unrhd> u \\<Longrightarrow> s \\<unrhd> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<unrhd> t; t \\<unrhd> u\\<rbrakk>\n    \\<Longrightarrow> s \\<unrhd> u", "by (induct s t rule: supteq.induct) (auto)"], ["", "text \\<open>Auxiliary lemmas about term size.\\<close>"], ["", "lemma size_simp5:\n  \"s \\<in> set ss \\<Longrightarrow> s \\<rhd> t \\<Longrightarrow> size t < size s \\<Longrightarrow> size t < Suc (size_list size ss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> set ss; s \\<rhd> t; size t < size s\\<rbrakk>\n    \\<Longrightarrow> size t < Suc (size_list size ss)", "by (induct ss) auto"], ["", "lemma size_simp6:\n  \"s \\<in> set ss \\<Longrightarrow> s \\<unrhd> t \\<Longrightarrow> size t \\<le> size s \\<Longrightarrow> size t \\<le> Suc (size_list size ss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> set ss; s \\<unrhd> t; size t \\<le> size s\\<rbrakk>\n    \\<Longrightarrow> size t \\<le> Suc (size_list size ss)", "by (induct ss) auto"], ["", "lemma size_simp1:\n  \"t \\<in> set ts \\<Longrightarrow> size t < Suc (size_list size ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> set ts \\<Longrightarrow> size t < Suc (size_list size ts)", "by (induct ts) auto"], ["", "lemma size_simp2:\n  \"t \\<in> set ts \\<Longrightarrow> size t < Suc (Suc (size s + size_list size ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> set ts \\<Longrightarrow>\n    size t < Suc (Suc (size s + size_list size ts))", "by (induct ts) auto"], ["", "lemma size_simp3:\n  assumes \"(x, y) \\<in> set (zip xs ys)\"\n  shows \"size x < Suc (size_list size xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size x < Suc (size_list size xs)", "using set_zip_leftD [OF assms]  size_simp1"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  ?t \\<in> set ?ts \\<Longrightarrow> size ?t < Suc (size_list size ?ts)\n\ngoal (1 subgoal):\n 1. size x < Suc (size_list size xs)", "by auto"], ["", "lemma size_simp4:\n  assumes \"(x, y) \\<in> set (zip xs ys)\"\n  shows \"size y < Suc (size_list size ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size y < Suc (size_list size ys)", "using set_zip_rightD [OF assms]"], ["proof (prove)\nusing this:\n  y \\<in> set ys\n\ngoal (1 subgoal):\n 1. size y < Suc (size_list size ys)", "using size_simp1"], ["proof (prove)\nusing this:\n  y \\<in> set ys\n  ?t \\<in> set ?ts \\<Longrightarrow> size ?t < Suc (size_list size ?ts)\n\ngoal (1 subgoal):\n 1. size y < Suc (size_list size ys)", "by auto"], ["", "lemmas size_simps =\n  size_simp1 size_simp2 size_simp3 size_simp4 size_simp5 size_simp6"], ["", "declare size_simps [termination_simp]"], ["", "lemma supt_size:\n  \"s \\<rhd> t \\<Longrightarrow> size s > size t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t \\<Longrightarrow> size t < size s", "by (induct rule: supt.induct) (auto simp: size_simps)"], ["", "lemma supteq_size:\n  \"s \\<unrhd> t \\<Longrightarrow> size s \\<ge> size t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<Longrightarrow> size t \\<le> size s", "by (induct rule: supteq.induct) (auto simp: size_simps)"], ["", "text \\<open>Reflexivity and Asymmetry.\\<close>"], ["", "lemma reflcl_supteq [simp]:\n  \"supteq\\<^sup>= = supteq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>}\\<^sup>= = {\\<unrhd>}", "by auto"], ["", "lemma trancl_supteq [simp]:\n  \"supteq\\<^sup>+ = supteq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>}\\<^sup>+ = {\\<unrhd>}", "by (rule trancl_id) (auto simp: trans_def intro: supteq_trans)"], ["", "lemma rtrancl_supteq [simp]:\n  \"supteq\\<^sup>* = supteq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>}\\<^sup>* = {\\<unrhd>}", "unfolding trancl_reflcl[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({\\<unrhd>}\\<^sup>=)\\<^sup>+ = {\\<unrhd>}", "by auto"], ["", "lemma eq_supteq: \"s = t \\<Longrightarrow> s \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t \\<Longrightarrow> s \\<unrhd> t", "by auto"], ["", "lemma supt_neqD: \"s \\<rhd> t \\<Longrightarrow> s \\<noteq> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t \\<Longrightarrow> s \\<noteq> t", "using supt_size"], ["proof (prove)\nusing this:\n  ?s \\<rhd> ?t \\<Longrightarrow> size ?t < size ?s\n\ngoal (1 subgoal):\n 1. s \\<rhd> t \\<Longrightarrow> s \\<noteq> t", "by auto"], ["", "lemma supteq_Var [simp]:\n  \"x \\<in> vars_term t \\<Longrightarrow> t \\<unrhd> Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> vars_term t \\<Longrightarrow> t \\<unrhd> Var x", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<in> vars_term (Var xa) \\<Longrightarrow> Var xa \\<unrhd> Var x\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; x \\<in> vars_term x2a\\<rbrakk>\n                   \\<Longrightarrow> x2a \\<unrhd> Var x;\n        x \\<in> vars_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> Fun x1a x2 \\<unrhd> Var x", "case (Var y)"], ["proof (state)\nthis:\n  x \\<in> vars_term (Var y)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<in> vars_term (Var xa) \\<Longrightarrow> Var xa \\<unrhd> Var x\n 2. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; x \\<in> vars_term x2a\\<rbrakk>\n                   \\<Longrightarrow> x2a \\<unrhd> Var x;\n        x \\<in> vars_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> Fun x1a x2 \\<unrhd> Var x", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_term (Var y)", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_term (Var y)\n\ngoal (1 subgoal):\n 1. Var y \\<unrhd> Var x", "by (cases \"x = y\") auto"], ["proof (state)\nthis:\n  Var y \\<unrhd> Var x\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; x \\<in> vars_term x2a\\<rbrakk>\n                   \\<Longrightarrow> x2a \\<unrhd> Var x;\n        x \\<in> vars_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> Fun x1a x2 \\<unrhd> Var x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; x \\<in> vars_term x2a\\<rbrakk>\n                   \\<Longrightarrow> x2a \\<unrhd> Var x;\n        x \\<in> vars_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> Fun x1a x2 \\<unrhd> Var x", "case (Fun f ss)"], ["proof (state)\nthis:\n  \\<lbrakk>?x2a \\<in> set ss; x \\<in> vars_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> ?x2a \\<unrhd> Var x\n  x \\<in> vars_term (Fun f ss)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>\\<And>x2a.\n                   \\<lbrakk>x2a \\<in> set x2; x \\<in> vars_term x2a\\<rbrakk>\n                   \\<Longrightarrow> x2a \\<unrhd> Var x;\n        x \\<in> vars_term (Fun x1a x2)\\<rbrakk>\n       \\<Longrightarrow> Fun x1a x2 \\<unrhd> Var x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x2a \\<in> set ss; x \\<in> vars_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> ?x2a \\<unrhd> Var x\n  x \\<in> vars_term (Fun f ss)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2a \\<in> set ss; x \\<in> vars_term ?x2a\\<rbrakk>\n  \\<Longrightarrow> ?x2a \\<unrhd> Var x\n  x \\<in> vars_term (Fun f ss)\n\ngoal (1 subgoal):\n 1. Fun f ss \\<unrhd> Var x", "by (auto)"], ["proof (state)\nthis:\n  Fun f ss \\<unrhd> Var x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas vars_term_supteq = supteq_Var"], ["", "lemma term_not_arg [iff]:\n  \"Fun f ss \\<notin> set ss\" (is \"?t \\<notin> set ss\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f ss \\<notin> set ss", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Fun f ss \\<in> set ss \\<Longrightarrow> False", "assume \"?t \\<in> set ss\""], ["proof (state)\nthis:\n  Fun f ss \\<in> set ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<in> set ss \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Fun f ss \\<in> set ss", "have \"?t \\<rhd> ?t\""], ["proof (prove)\nusing this:\n  Fun f ss \\<in> set ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<rhd> Fun f ss", "by (auto)"], ["proof (state)\nthis:\n  Fun f ss \\<rhd> Fun f ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<in> set ss \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Fun f ss \\<rhd> Fun f ss", "have \"?t \\<noteq> ?t\""], ["proof (prove)\nusing this:\n  Fun f ss \\<rhd> Fun f ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<noteq> Fun f ss", "by (auto dest: supt_neqD)"], ["proof (state)\nthis:\n  Fun f ss \\<noteq> Fun f ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<in> set ss \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Fun f ss \\<noteq> Fun f ss", "show False"], ["proof (prove)\nusing this:\n  Fun f ss \\<noteq> Fun f ss\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_Fun [simp]:\n  assumes \"s \\<rhd> Fun f ss\" (is \"s \\<rhd> ?t\") and \"s \\<in> set ss\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "from \\<open>s \\<in> set ss\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> set ss", "have \"?t \\<rhd> s\""], ["proof (prove)\nusing this:\n  s \\<in> set ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<rhd> s", "by (auto)"], ["proof (state)\nthis:\n  Fun f ss \\<rhd> s\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  Fun f ss \\<rhd> s", "have \"size ?t > size s\""], ["proof (prove)\nusing this:\n  Fun f ss \\<rhd> s\n\ngoal (1 subgoal):\n 1. size s < size (Fun f ss)", "by (rule supt_size)"], ["proof (state)\nthis:\n  size s < size (Fun f ss)\n\ngoal (1 subgoal):\n 1. False", "from \\<open>s \\<rhd> ?t\\<close>"], ["proof (chain)\npicking this:\n  s \\<rhd> Fun f ss", "have \"size s > size ?t\""], ["proof (prove)\nusing this:\n  s \\<rhd> Fun f ss\n\ngoal (1 subgoal):\n 1. size (Fun f ss) < size s", "by (rule supt_size)"], ["proof (state)\nthis:\n  size (Fun f ss) < size s\n\ngoal (1 subgoal):\n 1. False", "with \\<open>size ?t > size s\\<close>"], ["proof (chain)\npicking this:\n  size s < size (Fun f ss)\n  size (Fun f ss) < size s", "show False"], ["proof (prove)\nusing this:\n  size s < size (Fun f ss)\n  size (Fun f ss) < size s\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_supteq_conv: \"s \\<rhd> t = (s \\<unrhd> t \\<and> s \\<noteq> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t = (s \\<unrhd> t \\<and> s \\<noteq> t)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow> s \\<unrhd> t \\<and> s \\<noteq> t\n 2. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "assume \"s \\<rhd> t\""], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow> s \\<unrhd> t \\<and> s \\<noteq> t\n 2. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  s \\<rhd> t", "show \"s \\<unrhd> t \\<and> s \\<noteq> t\""], ["proof (prove)\nusing this:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t", "proof (induct rule: supt.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "case (subt s ss t f)"], ["proof (state)\nthis:\n  s \\<in> set ss\n  s \\<rhd> t\n  s \\<unrhd> t \\<and> s \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "have \"s \\<unrhd> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> s", ".."], ["proof (state)\nthis:\n  s \\<unrhd> s\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "from \\<open>s \\<in> set ss\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> set ss", "have \"Fun f ss \\<unrhd> s\""], ["proof (prove)\nusing this:\n  s \\<in> set ss\n\ngoal (1 subgoal):\n 1. Fun f ss \\<unrhd> s", "by (auto)"], ["proof (state)\nthis:\n  Fun f ss \\<unrhd> s\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "from \\<open>s \\<unrhd> t \\<and> s \\<noteq> t\\<close>"], ["proof (chain)\npicking this:\n  s \\<unrhd> t \\<and> s \\<noteq> t", "have \"s \\<unrhd> t\""], ["proof (prove)\nusing this:\n  s \\<unrhd> t \\<and> s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t", ".."], ["proof (state)\nthis:\n  s \\<unrhd> t\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "with \\<open>Fun f ss \\<unrhd> s\\<close>"], ["proof (chain)\npicking this:\n  Fun f ss \\<unrhd> s\n  s \\<unrhd> t", "have first: \"Fun f ss \\<unrhd> t\""], ["proof (prove)\nusing this:\n  Fun f ss \\<unrhd> s\n  s \\<unrhd> t\n\ngoal (1 subgoal):\n 1. Fun f ss \\<unrhd> t", "by (rule supteq_trans)"], ["proof (state)\nthis:\n  Fun f ss \\<unrhd> t\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "from \\<open>s \\<in> set ss\\<close> and \\<open>s \\<rhd> t\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> set ss\n  s \\<rhd> t", "have \"Fun f ss \\<rhd> t\""], ["proof (prove)\nusing this:\n  s \\<in> set ss\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. Fun f ss \\<rhd> t", ".."], ["proof (state)\nthis:\n  Fun f ss \\<rhd> t\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "then"], ["proof (chain)\npicking this:\n  Fun f ss \\<rhd> t", "have second: \"Fun f ss \\<noteq> t\""], ["proof (prove)\nusing this:\n  Fun f ss \\<rhd> t\n\ngoal (1 subgoal):\n 1. Fun f ss \\<noteq> t", "by (auto dest: supt_neqD)"], ["proof (state)\nthis:\n  Fun f ss \\<noteq> t\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<unrhd> t \\<and> s \\<noteq> t\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "from first and second"], ["proof (chain)\npicking this:\n  Fun f ss \\<unrhd> t\n  Fun f ss \\<noteq> t", "show \"Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t\""], ["proof (prove)\nusing this:\n  Fun f ss \\<unrhd> t\n  Fun f ss \\<noteq> t\n\ngoal (1 subgoal):\n 1. Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t", "by auto"], ["proof (state)\nthis:\n  Fun f ss \\<unrhd> t \\<and> Fun f ss \\<noteq> t\n\ngoal (1 subgoal):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<unrhd> s \\<and> Fun f ss \\<noteq> s", "qed (auto simp: size_simps)"], ["proof (state)\nthis:\n  s \\<unrhd> t \\<and> s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "assume \"s \\<unrhd> t \\<and> s \\<noteq> t\""], ["proof (state)\nthis:\n  s \\<unrhd> t \\<and> s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  s \\<unrhd> t \\<and> s \\<noteq> t", "have \"s \\<unrhd> t\" and \"s \\<noteq> t\""], ["proof (prove)\nusing this:\n  s \\<unrhd> t \\<and> s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t &&& s \\<noteq> t", "by auto"], ["proof (state)\nthis:\n  s \\<unrhd> t\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  s \\<unrhd> t\n  s \\<noteq> t", "show \"s \\<rhd> t\""], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. s \\<rhd> t", "by (induct) (auto)"], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_not_sym: \"s \\<rhd> t \\<Longrightarrow> \\<not> (t \\<rhd> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t \\<Longrightarrow> (t, s) \\<notin> {\\<rhd>}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; t \\<rhd> s\\<rbrakk> \\<Longrightarrow> False", "assume \"s \\<rhd> t\" and \"t \\<rhd> s\""], ["proof (state)\nthis:\n  s \\<rhd> t\n  t \\<rhd> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; t \\<rhd> s\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<rhd> t\n  t \\<rhd> s", "have \"s \\<rhd> s\""], ["proof (prove)\nusing this:\n  s \\<rhd> t\n  t \\<rhd> s\n\ngoal (1 subgoal):\n 1. s \\<rhd> s", "by (rule supt_trans)"], ["proof (state)\nthis:\n  s \\<rhd> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; t \\<rhd> s\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<rhd> s", "show False"], ["proof (prove)\nusing this:\n  s \\<rhd> s\n\ngoal (1 subgoal):\n 1. False", "unfolding supt_supteq_conv"], ["proof (prove)\nusing this:\n  s \\<unrhd> s \\<and> s \\<noteq> s\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_irrefl[iff]: \"\\<not> t \\<rhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t, t) \\<notin> {\\<rhd>}", "using supt_not_sym[of t t]"], ["proof (prove)\nusing this:\n  t \\<rhd> t \\<Longrightarrow> (t, t) \\<notin> {\\<rhd>}\n\ngoal (1 subgoal):\n 1. (t, t) \\<notin> {\\<rhd>}", "by auto"], ["", "lemma irrefl_subt: \"irrefl {\\<lhd>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irrefl {\\<lhd>}", "by (auto simp: irrefl_def)"], ["", "lemma supt_imp_supteq: \"s \\<rhd> t \\<Longrightarrow> s \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t \\<Longrightarrow> s \\<unrhd> t", "unfolding supt_supteq_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<and> s \\<noteq> t \\<Longrightarrow> s \\<unrhd> t", "by auto"], ["", "lemma supt_supteq_not_supteq: \"s \\<rhd> t = (s \\<unrhd> t \\<and> \\<not> (t \\<unrhd> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t = (s \\<unrhd> t \\<and> (t, s) \\<notin> {\\<unrhd>})", "using supt_not_sym"], ["proof (prove)\nusing this:\n  ?s \\<rhd> ?t \\<Longrightarrow> (?t, ?s) \\<notin> {\\<rhd>}\n\ngoal (1 subgoal):\n 1. s \\<rhd> t = (s \\<unrhd> t \\<and> (t, s) \\<notin> {\\<unrhd>})", "unfolding supt_supteq_conv"], ["proof (prove)\nusing this:\n  ?s \\<unrhd> ?t \\<and> ?s \\<noteq> ?t \\<Longrightarrow>\n  \\<not> (?t \\<unrhd> ?s \\<and> ?t \\<noteq> ?s)\n\ngoal (1 subgoal):\n 1. (s \\<unrhd> t \\<and> s \\<noteq> t) =\n    (s \\<unrhd> t \\<and> (t, s) \\<notin> {\\<unrhd>})", "by auto"], ["", "lemma supteq_supt_conv: \"(s \\<unrhd> t) = (s \\<rhd> t \\<or> s = t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t = (s \\<rhd> t \\<or> s = t)", "by (auto simp: supt_supteq_conv)"], ["", "lemma supteq_antisym:\n  assumes \"s \\<unrhd> t\" and \"t \\<unrhd> s\" shows \"s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t", "using assms"], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n  t \\<unrhd> s\n\ngoal (1 subgoal):\n 1. s = t", "unfolding supteq_supt_conv"], ["proof (prove)\nusing this:\n  s \\<rhd> t \\<or> s = t\n  t \\<rhd> s \\<or> t = s\n\ngoal (1 subgoal):\n 1. s = t", "by (auto simp: supt_not_sym)"], ["", "text \\<open>The subterm relation is an order on terms.\\<close>"], ["", "interpretation subterm: order \"(\\<unlhd>)\" \"(\\<lhd>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order (\\<lambda>s t. t \\<unrhd> s) (\\<lambda>s t. t \\<rhd> s)", "by (unfold_locales)\n    (rule supt_supteq_not_supteq, auto intro: supteq_trans supteq_antisym supt_supteq_not_supteq)"], ["", "text \\<open>More transitivity rules.\\<close>"], ["", "lemma supt_supteq_trans[trans]:\n  \"s \\<rhd> t \\<Longrightarrow> t \\<unrhd> u \\<Longrightarrow> s \\<rhd> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; t \\<unrhd> u\\<rbrakk> \\<Longrightarrow> s \\<rhd> u", "by (metis subterm.le_less_trans)"], ["", "lemma supteq_supt_trans[trans]:\n  \"s \\<unrhd> t \\<Longrightarrow> t \\<rhd> u \\<Longrightarrow> s \\<rhd> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<unrhd> t; t \\<rhd> u\\<rbrakk> \\<Longrightarrow> s \\<rhd> u", "by (metis subterm.less_le_trans)"], ["", "declare subterm.le_less_trans[trans]"], ["", "declare subterm.less_le_trans[trans]"], ["", "lemma suptE [elim]: \"s \\<rhd> t \\<Longrightarrow> (s \\<unrhd> t \\<Longrightarrow> P) \\<Longrightarrow> (s \\<noteq> t \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<rhd> t; s \\<unrhd> t \\<Longrightarrow> P;\n     s \\<noteq> t \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp: supt_supteq_conv)"], ["", "lemmas suptI [intro] =\n  subterm.dual_order.not_eq_order_implies_strict"], ["", "lemma supt_supteq_set_conv:\n  \"{\\<rhd>} = {\\<unrhd>} - Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<rhd>} = {\\<unrhd>} - Id", "using supt_supteq_conv [to_set]"], ["proof (prove)\nusing this:\n  ?s \\<rhd> ?t = (?s \\<unrhd> ?t \\<and> ?s \\<noteq> ?t)\n\ngoal (1 subgoal):\n 1. {\\<rhd>} = {\\<unrhd>} - Id", "by auto"], ["", "lemma supteq_supt_set_conv:\n  \"{\\<unrhd>} = {\\<rhd>}\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>} = {\\<rhd>}\\<^sup>=", "by (auto simp: supt_supteq_conv)"], ["", "lemma supteq_imp_vars_term_subset:\n  \"s \\<unrhd> t \\<Longrightarrow> vars_term t \\<subseteq> vars_term s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t \\<Longrightarrow> vars_term t \\<subseteq> vars_term s", "by (induct rule: supteq.induct) auto"], ["", "lemma set_supteq_into_supt [simp]:\n  assumes \"t \\<in> set ts\" and \"t \\<unrhd> s\"\n  shows \"Fun f ts \\<rhd> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "from \\<open>t \\<unrhd> s\\<close>"], ["proof (chain)\npicking this:\n  t \\<unrhd> s", "have \"t = s \\<or> t \\<rhd> s\""], ["proof (prove)\nusing this:\n  t \\<unrhd> s\n\ngoal (1 subgoal):\n 1. t = s \\<or> t \\<rhd> s", "by auto"], ["proof (state)\nthis:\n  t = s \\<or> t \\<rhd> s\n\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "then"], ["proof (chain)\npicking this:\n  t = s \\<or> t \\<rhd> s", "show ?thesis"], ["proof (prove)\nusing this:\n  t = s \\<or> t \\<rhd> s\n\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t = s \\<Longrightarrow> Fun f ts \\<rhd> s\n 2. t \\<rhd> s \\<Longrightarrow> Fun f ts \\<rhd> s", "assume \"t = s\""], ["proof (state)\nthis:\n  t = s\n\ngoal (2 subgoals):\n 1. t = s \\<Longrightarrow> Fun f ts \\<rhd> s\n 2. t \\<rhd> s \\<Longrightarrow> Fun f ts \\<rhd> s", "with \\<open>t \\<in> set ts\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> set ts\n  t = s", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> set ts\n  t = s\n\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "by auto"], ["proof (state)\nthis:\n  Fun f ts \\<rhd> s\n\ngoal (1 subgoal):\n 1. t \\<rhd> s \\<Longrightarrow> Fun f ts \\<rhd> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<rhd> s \\<Longrightarrow> Fun f ts \\<rhd> s", "assume \"t \\<rhd> s\""], ["proof (state)\nthis:\n  t \\<rhd> s\n\ngoal (1 subgoal):\n 1. t \\<rhd> s \\<Longrightarrow> Fun f ts \\<rhd> s", "from supt.subt[OF \\<open>t \\<in> set ts\\<close> this]"], ["proof (chain)\npicking this:\n  Fun ?f ts \\<rhd> s", "show ?thesis"], ["proof (prove)\nusing this:\n  Fun ?f ts \\<rhd> s\n\ngoal (1 subgoal):\n 1. Fun f ts \\<rhd> s", "."], ["proof (state)\nthis:\n  Fun f ts \\<rhd> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fun f ts \\<rhd> s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The superterm relation is strongly normalizing.\\<close>"], ["", "lemma SN_supt:\n  \"SN {\\<rhd>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN {\\<rhd>}", "unfolding SN_iff_wf"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {\\<lhd>}", "by (rule wf_subset) (auto intro: supt_size)"], ["", "lemma supt_not_refl[elim!]:\n  assumes \"t \\<rhd> t\" shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "from assms"], ["proof (chain)\npicking this:\n  t \\<rhd> t", "have \"t \\<noteq> t\""], ["proof (prove)\nusing this:\n  t \\<rhd> t\n\ngoal (1 subgoal):\n 1. t \\<noteq> t", "by auto"], ["proof (state)\nthis:\n  t \\<noteq> t\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  t \\<noteq> t", "show False"], ["proof (prove)\nusing this:\n  t \\<noteq> t\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supteq_not_supt [elim]:\n  assumes \"s \\<unrhd> t\" and \"\\<not> (s \\<rhd> t)\"\n  shows \"s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t", "using assms"], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n  (s, t) \\<notin> {\\<rhd>}\n\ngoal (1 subgoal):\n 1. s = t", "by (induct) auto"], ["", "lemma supteq_not_supt_conv [simp]:\n  \"{\\<unrhd>} - {\\<rhd>} = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<unrhd>} - {\\<rhd>} = Id", "by auto"], ["", "lemma supteq_subst [simp, intro]:\n  assumes \"s \\<unrhd> t\" shows \"s \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n\ngoal (1 subgoal):\n 1. s \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>", "proof (induct rule: supteq.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n 2. \\<And>u ss t f.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma>\n                         \\<unrhd> t \\<cdot> \\<sigma>", "case (subt u ss t f)"], ["proof (state)\nthis:\n  u \\<in> set ss\n  u \\<unrhd> t\n  u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n 2. \\<And>u ss t f.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma>\n                         \\<unrhd> t \\<cdot> \\<sigma>", "from \\<open>u \\<in> set ss\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> set ss", "have \"u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\" \"u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\""], ["proof (prove)\nusing this:\n  u \\<in> set ss\n\ngoal (1 subgoal):\n 1. u \\<cdot> \\<sigma>\n    \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss) &&&\n    u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n  u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n 2. \\<And>u ss t f.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma>\n                         \\<unrhd> t \\<cdot> \\<sigma>", "then"], ["proof (chain)\npicking this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n  u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>", "have \"Fun f ss \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\""], ["proof (prove)\nusing this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n  u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. Fun f ss \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>", "unfolding subst_apply_term.simps"], ["proof (prove)\nusing this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n  u \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. Fun f (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n    \\<unrhd> u \\<cdot> \\<sigma>", "by blast"], ["proof (state)\nthis:\n  Fun f ss \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n 2. \\<And>u ss t f.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma>\n                         \\<unrhd> t \\<cdot> \\<sigma>", "from this and \\<open>u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  Fun f ss \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n  u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>", "show ?case"], ["proof (prove)\nusing this:\n  Fun f ss \\<cdot> \\<sigma> \\<unrhd> u \\<cdot> \\<sigma>\n  u \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. Fun f ss \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>", "by (rule supteq_trans)"], ["proof (state)\nthis:\n  Fun f ss \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<cdot> \\<sigma> \\<unrhd> t \\<cdot> \\<sigma>", "qed auto"], ["", "lemma supt_subst [simp, intro]:\n  assumes \"s \\<rhd> t\" shows \"s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "proof (induct rule: supt.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<cdot> \\<sigma> \\<rhd> s \\<cdot> \\<sigma>\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "case (arg s ss f)"], ["proof (state)\nthis:\n  s \\<in> set ss\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<cdot> \\<sigma> \\<rhd> s \\<cdot> \\<sigma>\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "then"], ["proof (chain)\npicking this:\n  s \\<in> set ss", "have \"s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\""], ["proof (prove)\nusing this:\n  s \\<in> set ss\n\ngoal (1 subgoal):\n 1. s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)", "by simp"], ["proof (state)\nthis:\n  s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (2 subgoals):\n 1. \\<And>s ss f.\n       s \\<in> set ss \\<Longrightarrow>\n       Fun f ss \\<cdot> \\<sigma> \\<rhd> s \\<cdot> \\<sigma>\n 2. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "then"], ["proof (chain)\npicking this:\n  s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)", "show ?case"], ["proof (prove)\nusing this:\n  s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (1 subgoal):\n 1. Fun f ss \\<cdot> \\<sigma> \\<rhd> s \\<cdot> \\<sigma>", "unfolding subst_apply_term.simps"], ["proof (prove)\nusing this:\n  s \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (1 subgoal):\n 1. Fun f (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n    \\<rhd> s \\<cdot> \\<sigma>", "by (rule supt.arg)"], ["proof (state)\nthis:\n  Fun f ss \\<cdot> \\<sigma> \\<rhd> s \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "case (subt u ss t f)"], ["proof (state)\nthis:\n  u \\<in> set ss\n  u \\<rhd> t\n  u \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "from \\<open>u \\<in> set ss\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> set ss", "have \"u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\""], ["proof (prove)\nusing this:\n  u \\<in> set ss\n\ngoal (1 subgoal):\n 1. u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)", "by simp"], ["proof (state)\nthis:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "then"], ["proof (chain)\npicking this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)", "have \"Fun f ss \\<cdot> \\<sigma> \\<rhd> u \\<cdot> \\<sigma>\""], ["proof (prove)\nusing this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (1 subgoal):\n 1. Fun f ss \\<cdot> \\<sigma> \\<rhd> u \\<cdot> \\<sigma>", "unfolding subst_apply_term.simps"], ["proof (prove)\nusing this:\n  u \\<cdot> \\<sigma> \\<in> set (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n\ngoal (1 subgoal):\n 1. Fun f (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss)\n    \\<rhd> u \\<cdot> \\<sigma>", "by (rule supt.arg)"], ["proof (state)\nthis:\n  Fun f ss \\<cdot> \\<sigma> \\<rhd> u \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        s \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "with \\<open>u \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  u \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\n  Fun f ss \\<cdot> \\<sigma> \\<rhd> u \\<cdot> \\<sigma>", "show ?case"], ["proof (prove)\nusing this:\n  u \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\n  Fun f ss \\<cdot> \\<sigma> \\<rhd> u \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>", "by (metis supt_trans)"], ["proof (state)\nthis:\n  Fun f ss \\<cdot> \\<sigma> \\<rhd> t \\<cdot> \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subterm_induct:\n  assumes \"\\<And>t. \\<forall>s\\<lhd>t. P s \\<Longrightarrow> P t\"\n  shows [case_names subterm]: \"P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t", "by (rule wf_induct[OF wf_measure[of size], of P t], rule assms, insert supt_size, auto)"], ["", "subsection \\<open>Contexts\\<close>"], ["", "text \\<open>A \\<^emph>\\<open>context\\<close> is a term containing exactly one \\<^emph>\\<open>hole\\<close>.\\<close>"], ["", "datatype (funs_ctxt: 'f, vars_ctxt: 'v) ctxt =\n  Hole (\"\\<box>\") |\n  More 'f \"('f, 'v) term list\" \"('f, 'v) ctxt\" \"('f, 'v) term list\""], ["", "text \\<open>\n  We also say that we apply a context~@{term C} to a term~@{term t} when we\n  replace the hole in a @{term C} by @{term t}.\n\\<close>"], ["", "fun ctxt_apply_term :: \"('f, 'v) ctxt \\<Rightarrow> ('f, 'v) term \\<Rightarrow> ('f, 'v) term\" (\"_\\<langle>_\\<rangle>\" [1000, 0] 1000)\n  where\n    \"\\<box>\\<langle>s\\<rangle> = s\" |\n    \"(More f ss1 C ss2)\\<langle>s\\<rangle> = Fun f (ss1 @ C\\<langle>s\\<rangle> # ss2)\""], ["", "lemma ctxt_eq [simp]:\n  \"(C\\<langle>s\\<rangle> = C\\<langle>t\\<rangle>) = (s = t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<langle>s\\<rangle> = C\\<langle>t\\<rangle>) = (s = t)", "by (induct C) auto"], ["", "fun ctxt_compose :: \"('f, 'v) ctxt \\<Rightarrow> ('f, 'v) ctxt \\<Rightarrow> ('f, 'v) ctxt\" (infixl \"\\<circ>\\<^sub>c\" 75)\n  where\n    \"\\<box> \\<circ>\\<^sub>c D = D\" |\n    \"(More f ss1 C ss2) \\<circ>\\<^sub>c D = More f ss1 (C \\<circ>\\<^sub>c D) ss2\""], ["", "interpretation ctxt_monoid_mult: monoid_mult \"\\<box>\" \"(\\<circ>\\<^sub>c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.monoid_mult \\<box> (\\<circ>\\<^sub>c)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b c.\n       a \\<circ>\\<^sub>c b \\<circ>\\<^sub>c c =\n       a \\<circ>\\<^sub>c (b \\<circ>\\<^sub>c c)\n 2. \\<And>a. \\<box> \\<circ>\\<^sub>c a = a\n 3. \\<And>a. a \\<circ>\\<^sub>c \\<box> = a", "fix C D E :: \"('f, 'v) ctxt\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b c.\n       a \\<circ>\\<^sub>c b \\<circ>\\<^sub>c c =\n       a \\<circ>\\<^sub>c (b \\<circ>\\<^sub>c c)\n 2. \\<And>a. \\<box> \\<circ>\\<^sub>c a = a\n 3. \\<And>a. a \\<circ>\\<^sub>c \\<box> = a", "show \"C \\<circ>\\<^sub>c D \\<circ>\\<^sub>c E = C \\<circ>\\<^sub>c (D \\<circ>\\<^sub>c E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<circ>\\<^sub>c D \\<circ>\\<^sub>c E =\n    C \\<circ>\\<^sub>c (D \\<circ>\\<^sub>c E)", "by (induct C) simp_all"], ["proof (state)\nthis:\n  C \\<circ>\\<^sub>c D \\<circ>\\<^sub>c E =\n  C \\<circ>\\<^sub>c (D \\<circ>\\<^sub>c E)\n\ngoal (2 subgoals):\n 1. \\<And>a. \\<box> \\<circ>\\<^sub>c a = a\n 2. \\<And>a. a \\<circ>\\<^sub>c \\<box> = a", "show \"\\<box> \\<circ>\\<^sub>c C = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> \\<circ>\\<^sub>c C = C", "by simp"], ["proof (state)\nthis:\n  \\<box> \\<circ>\\<^sub>c C = C\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<circ>\\<^sub>c \\<box> = a", "show \"C \\<circ>\\<^sub>c \\<box> = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<circ>\\<^sub>c \\<box> = C", "by (induct C) simp_all"], ["proof (state)\nthis:\n  C \\<circ>\\<^sub>c \\<box> = C\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation ctxt :: (type, type) monoid_mult\nbegin"], ["", "definition [simp]: \"1 = \\<box>\""], ["", "definition [simp]: \"(*) = (\\<circ>\\<^sub>c)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(('a, 'b) ctxt, monoid_mult_class)", "by (intro_classes) (simp_all add: ac_simps)"], ["", "end"], ["", "lemma ctxt_ctxt_compose [simp]: \"(C \\<circ>\\<^sub>c D)\\<langle>t\\<rangle> = C\\<langle>D\\<langle>t\\<rangle>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C \\<circ>\\<^sub>c D)\\<langle>t\\<rangle> =\n    C\\<langle>D\\<langle>t\\<rangle>\\<rangle>", "by (induct C) simp_all"], ["", "lemmas ctxt_ctxt = ctxt_ctxt_compose [symmetric]"], ["", "text \\<open>Applying substitutions to contexts.\\<close>"], ["", "fun subst_apply_ctxt :: \"('f, 'v) ctxt \\<Rightarrow> ('f, 'v, 'w) gsubst \\<Rightarrow> ('f, 'w) ctxt\" (infixl \"\\<cdot>\\<^sub>c\" 67)\n  where\n    \"\\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box>\" |\n    \"(More f ss1 D ss2) \\<cdot>\\<^sub>c \\<sigma> = More f (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss1) (D \\<cdot>\\<^sub>c \\<sigma>) (map (\\<lambda>t. t \\<cdot> \\<sigma>) ss2)\""], ["", "lemma subst_apply_term_ctxt_apply_distrib [simp]:\n  \"C\\<langle>t\\<rangle> \\<cdot> \\<mu> = (C \\<cdot>\\<^sub>c \\<mu>)\\<langle>t \\<cdot> \\<mu>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<langle>t\\<rangle> \\<cdot> \\<mu> =\n    (C \\<cdot>\\<^sub>c \\<mu>)\\<langle>t \\<cdot> \\<mu>\\<rangle>", "by (induct C) auto"], ["", "lemma subst_compose_ctxt_compose_distrib [simp]:\n  \"(C \\<circ>\\<^sub>c D) \\<cdot>\\<^sub>c \\<sigma> = (C \\<cdot>\\<^sub>c \\<sigma>) \\<circ>\\<^sub>c (D \\<cdot>\\<^sub>c \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<circ>\\<^sub>c D \\<cdot>\\<^sub>c \\<sigma> =\n    (C \\<cdot>\\<^sub>c \\<sigma>) \\<circ>\\<^sub>c\n    (D \\<cdot>\\<^sub>c \\<sigma>)", "by (induct C) auto"], ["", "lemma ctxt_compose_subst_compose_distrib [simp]:\n  \"C \\<cdot>\\<^sub>c (\\<sigma> \\<circ>\\<^sub>s \\<tau>) = (C \\<cdot>\\<^sub>c \\<sigma>) \\<cdot>\\<^sub>c \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<cdot>\\<^sub>c \\<sigma> \\<circ>\\<^sub>s \\<tau> =\n    C \\<cdot>\\<^sub>c \\<sigma> \\<cdot>\\<^sub>c \\<tau>", "by (induct C) (auto)"], ["", "subsection \\<open>The Connection between Contexts and the Superterm Relation\\<close>"], ["", "lemma ctxt_imp_supteq [simp]:\n  shows \"C\\<langle>t\\<rangle> \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<langle>t\\<rangle> \\<unrhd> t", "by (induct C) auto"], ["", "lemma supteq_ctxtE[elim]:\n  assumes \"s \\<unrhd> t\" obtains C where \"s = C\\<langle>t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        s = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        s = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct arbitrary: thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t thesis.\n       (\\<And>C.\n           t = C\\<langle>t\\<rangle> \\<Longrightarrow>\n           thesis) \\<Longrightarrow>\n       thesis\n 2. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (refl s)"], ["proof (state)\nthis:\n  s = ?C\\<langle>s\\<rangle> \\<Longrightarrow> thesis\n\ngoal (2 subgoals):\n 1. \\<And>t thesis.\n       (\\<And>C.\n           t = C\\<langle>t\\<rangle> \\<Longrightarrow>\n           thesis) \\<Longrightarrow>\n       thesis\n 2. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"s = \\<box>\\<langle>s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = \\<box>\\<langle>s\\<rangle>", "by simp"], ["proof (state)\nthis:\n  s = \\<box>\\<langle>s\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>t thesis.\n       (\\<And>C.\n           t = C\\<langle>t\\<rangle> \\<Longrightarrow>\n           thesis) \\<Longrightarrow>\n       thesis\n 2. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "from refl[OF this]"], ["proof (chain)\npicking this:\n  thesis", "show ?case"], ["proof (prove)\nusing this:\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (subt u ss t f)"], ["proof (state)\nthis:\n  u \\<in> set ss\n  u \\<unrhd> t\n  (\\<And>C.\n      u = C\\<langle>t\\<rangle> \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  Fun f ss = ?C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  u \\<in> set ss\n  u \\<unrhd> t\n  (\\<And>C.\n      u = C\\<langle>t\\<rangle> \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  Fun f ss = ?C\\<langle>t\\<rangle> \\<Longrightarrow> thesis", "obtain C where \"u = C\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  u \\<in> set ss\n  u \\<unrhd> t\n  (\\<And>C.\n      u = C\\<langle>t\\<rangle> \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  Fun f ss = ?C\\<langle>t\\<rangle> \\<Longrightarrow> thesisa__\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        u = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "from split_list[OF \\<open>u \\<in> set ss\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. ss = ys @ u # zs", "obtain ss1 and ss2 where \"ss = ss1 @ u # ss2\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. ss = ys @ u # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ss1 ss2.\n        ss = ss1 @ u # ss2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ss = ss1 @ u # ss2\n\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  ss = ss1 @ u # ss2", "have \"Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  ss = ss1 @ u # ss2\n\ngoal (1 subgoal):\n 1. Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "using \\<open>u = C\\<langle>t\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  ss = ss1 @ u # ss2\n  u = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "by simp"], ["proof (state)\nthis:\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>u ss t f thesis.\n       \\<lbrakk>u \\<in> set ss; u \\<unrhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               u = C\\<langle>t\\<rangle> \\<Longrightarrow>\n               thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           Fun f ss = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "with subt"], ["proof (chain)\npicking this:\n  u \\<in> set ss\n  u \\<unrhd> t\n  (\\<And>C.\n      u = C\\<langle>t\\<rangle> \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  Fun f ss = ?C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  u \\<in> set ss\n  u \\<unrhd> t\n  (\\<And>C.\n      u = C\\<langle>t\\<rangle> \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  Fun f ss = ?C\\<langle>t\\<rangle> \\<Longrightarrow> thesis\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by best"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ctxt_supteq[intro]:\n  assumes \"s = C\\<langle>t\\<rangle>\" shows \"s \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t", "proof (cases C)"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<box> \\<Longrightarrow> s \\<unrhd> t\n 2. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "case Hole"], ["proof (state)\nthis:\n  C = \\<box>\n\ngoal (2 subgoals):\n 1. C = \\<box> \\<Longrightarrow> s \\<unrhd> t\n 2. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "then"], ["proof (chain)\npicking this:\n  C = \\<box>", "show ?thesis"], ["proof (prove)\nusing this:\n  C = \\<box>\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t", "using assms"], ["proof (prove)\nusing this:\n  C = \\<box>\n  s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t", "by auto"], ["proof (state)\nthis:\n  s \\<unrhd> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "case (More f ss1 D ss2)"], ["proof (state)\nthis:\n  C = More f ss1 D ss2\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "with assms"], ["proof (chain)\npicking this:\n  s = C\\<langle>t\\<rangle>\n  C = More f ss1 D ss2", "have s: \"s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)\" (is \"_ = Fun _ ?ss\")"], ["proof (prove)\nusing this:\n  s = C\\<langle>t\\<rangle>\n  C = More f ss1 D ss2\n\ngoal (1 subgoal):\n 1. s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)", "by simp"], ["proof (state)\nthis:\n  s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "have \"D\\<langle>t\\<rangle> \\<in> set ?ss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)", "by simp"], ["proof (state)\nthis:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "moreover"], ["proof (state)\nthis:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "have \"D\\<langle>t\\<rangle> \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D\\<langle>t\\<rangle> \\<unrhd> t", "by (induct D) auto"], ["proof (state)\nthis:\n  D\\<langle>t\\<rangle> \\<unrhd> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<unrhd> t", "ultimately"], ["proof (chain)\npicking this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n  D\\<langle>t\\<rangle> \\<unrhd> t", "show ?thesis"], ["proof (prove)\nusing this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n  D\\<langle>t\\<rangle> \\<unrhd> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t", "unfolding s"], ["proof (prove)\nusing this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n  D\\<langle>t\\<rangle> \\<unrhd> t\n\ngoal (1 subgoal):\n 1. Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2) \\<unrhd> t", ".."], ["proof (state)\nthis:\n  s \\<unrhd> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supteq_ctxt_conv: \"(s \\<unrhd> t) = (\\<exists>C. s = C\\<langle>t\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<unrhd> t = (\\<exists>C. s = C\\<langle>t\\<rangle>)", "by auto"], ["", "lemma supt_ctxtE[elim]:\n  assumes \"s \\<rhd> t\" obtains C where \"C \\<noteq> \\<box>\" and \"s = C\\<langle>t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct arbitrary: thesis)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (arg s ss f)"], ["proof (state)\nthis:\n  s \\<in> set ss\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>s\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "from split_list[OF \\<open>s \\<in> set ss\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. ss = ys @ s # zs", "obtain ss1 and ss2 where ss: \"ss = ss1 @ s # ss2\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. ss = ys @ s # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ss1 ss2.\n        ss = ss1 @ s # ss2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ss = ss1 @ s # ss2\n\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "let ?C = \"More f ss1 \\<box> ss2\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"?C \\<noteq> \\<box>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. More f ss1 \\<box> ss2 \\<noteq> \\<box>", "by simp"], ["proof (state)\nthis:\n  More f ss1 \\<box> ss2 \\<noteq> \\<box>\n\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  More f ss1 \\<box> ss2 \\<noteq> \\<box>\n\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"Fun f ss = ?C\\<langle>s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f ss = (More f ss1 \\<box> ss2)\\<langle>s\\<rangle>", "by (simp add: ss)"], ["proof (state)\nthis:\n  Fun f ss = (More f ss1 \\<box> ss2)\\<langle>s\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>s ss f thesis.\n       \\<lbrakk>s \\<in> set ss;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>s\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  More f ss1 \\<box> ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 \\<box> ss2)\\<langle>s\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  More f ss1 \\<box> ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 \\<box> ss2)\\<langle>s\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "using arg"], ["proof (prove)\nusing this:\n  More f ss1 \\<box> ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 \\<box> ss2)\\<langle>s\\<rangle>\n  s \\<in> set ss\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>s\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by best"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (subt s ss t f)"], ["proof (state)\nthis:\n  s \\<in> set ss\n  s \\<rhd> t\n  (\\<And>C.\n      \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>t\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  s \\<in> set ss\n  s \\<rhd> t\n  (\\<And>C.\n      \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>t\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis", "obtain C where \"C \\<noteq> \\<box>\" and \"s = C\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  s \\<in> set ss\n  s \\<rhd> t\n  (\\<And>C.\n      \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>t\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesisa__\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<noteq> \\<box>\n  s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "from split_list[OF \\<open>s \\<in> set ss\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. ss = ys @ s # zs", "obtain ss1 and ss2 where ss: \"ss = ss1 @ s # ss2\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. ss = ys @ s # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ss1 ss2.\n        ss = ss1 @ s # ss2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ss = ss1 @ s # ss2\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"More f ss1 C ss2 \\<noteq> \\<box>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. More f ss1 C ss2 \\<noteq> \\<box>", "by simp"], ["proof (state)\nthis:\n  More f ss1 C ss2 \\<noteq> \\<box>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  More f ss1 C ss2 \\<noteq> \\<box>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "have \"Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "using \\<open>s = C\\<langle>t\\<rangle>\\<close>"], ["proof (prove)\nusing this:\n  s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "by (simp add: ss)"], ["proof (state)\nthis:\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>s ss t f thesis.\n       \\<lbrakk>s \\<in> set ss; s \\<rhd> t;\n        \\<And>thesis.\n           (\\<And>C.\n               \\<lbrakk>C \\<noteq> \\<box>; s = C\\<langle>t\\<rangle>\\<rbrakk>\n               \\<Longrightarrow> thesis) \\<Longrightarrow>\n           thesis;\n        \\<And>C.\n           \\<lbrakk>C \\<noteq> \\<box>;\n            Fun f ss = C\\<langle>t\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  More f ss1 C ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  More f ss1 C ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "using subt(4)"], ["proof (prove)\nusing this:\n  More f ss1 C ss2 \\<noteq> \\<box>\n  Fun f ss = (More f ss1 C ss2)\\<langle>t\\<rangle>\n  \\<lbrakk>?C \\<noteq> \\<box>; Fun f ss = ?C\\<langle>t\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by best"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ctxt_supt[intro 2]:\n  assumes \"C \\<noteq> \\<box>\" and \"s = C\\<langle>t\\<rangle>\" shows \"s \\<rhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t", "proof (cases C)"], ["proof (state)\ngoal (2 subgoals):\n 1. C = \\<box> \\<Longrightarrow> s \\<rhd> t\n 2. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "case Hole"], ["proof (state)\nthis:\n  C = \\<box>\n\ngoal (2 subgoals):\n 1. C = \\<box> \\<Longrightarrow> s \\<rhd> t\n 2. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "with assms"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<box>\n  s = C\\<langle>t\\<rangle>\n  C = \\<box>", "show ?thesis"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<box>\n  s = C\\<langle>t\\<rangle>\n  C = \\<box>\n\ngoal (1 subgoal):\n 1. s \\<rhd> t", "by simp"], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "case (More f ss1 D ss2)"], ["proof (state)\nthis:\n  C = More f ss1 D ss2\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "with assms"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<box>\n  s = C\\<langle>t\\<rangle>\n  C = More f ss1 D ss2", "have s: \"s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)\""], ["proof (prove)\nusing this:\n  C \\<noteq> \\<box>\n  s = C\\<langle>t\\<rangle>\n  C = More f ss1 D ss2\n\ngoal (1 subgoal):\n 1. s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)", "by simp"], ["proof (state)\nthis:\n  s = Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "have \"D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)", "by simp"], ["proof (state)\nthis:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)", "have \"s \\<rhd> D\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. s \\<rhd> D\\<langle>t\\<rangle>", "unfolding s"], ["proof (prove)\nusing this:\n  D\\<langle>t\\<rangle> \\<in> set (ss1 @ D\\<langle>t\\<rangle> # ss2)\n\ngoal (1 subgoal):\n 1. Fun f (ss1 @ D\\<langle>t\\<rangle> # ss2) \\<rhd> D\\<langle>t\\<rangle>", ".."], ["proof (state)\nthis:\n  s \\<rhd> D\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "also"], ["proof (state)\nthis:\n  s \\<rhd> D\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "have \"D\\<langle>t\\<rangle> \\<unrhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D\\<langle>t\\<rangle> \\<unrhd> t", "by (induct D) auto"], ["proof (state)\nthis:\n  D\\<langle>t\\<rangle> \\<unrhd> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x24.\n       C = More x21 x22 x23 x24 \\<Longrightarrow> s \\<rhd> t", "finally"], ["proof (chain)\npicking this:\n  s \\<rhd> t", "show \"s \\<rhd> t\""], ["proof (prove)\nusing this:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. s \\<rhd> t", "."], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_ctxt_conv: \"(s \\<rhd> t) = (\\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>)\" (is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rhd> t =\n    (\\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow>\n    \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n 2. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "assume \"s \\<rhd> t\""], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow>\n    \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n 2. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  s \\<rhd> t", "have \"s \\<unrhd> t\" and \"s \\<noteq> t\""], ["proof (prove)\nusing this:\n  s \\<rhd> t\n\ngoal (1 subgoal):\n 1. s \\<unrhd> t &&& s \\<noteq> t", "by auto"], ["proof (state)\nthis:\n  s \\<unrhd> t\n  s \\<noteq> t\n\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow>\n    \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n 2. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "from \\<open>s \\<unrhd> t\\<close>"], ["proof (chain)\npicking this:\n  s \\<unrhd> t", "obtain C where \"s = C\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  s \\<unrhd> t\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        s = C\\<langle>t\\<rangle> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s = C\\<langle>t\\<rangle>\n\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow>\n    \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n 2. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "with \\<open>s \\<noteq> t\\<close>"], ["proof (chain)\npicking this:\n  s \\<noteq> t\n  s = C\\<langle>t\\<rangle>", "have \"C \\<noteq> \\<box>\""], ["proof (prove)\nusing this:\n  s \\<noteq> t\n  s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. C \\<noteq> \\<box>", "by auto"], ["proof (state)\nthis:\n  C \\<noteq> \\<box>\n\ngoal (2 subgoals):\n 1. s \\<rhd> t \\<Longrightarrow>\n    \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n 2. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "with \\<open>s = C\\<langle>t\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  s = C\\<langle>t\\<rangle>\n  C \\<noteq> \\<box>", "show \"?rhs\""], ["proof (prove)\nusing this:\n  s = C\\<langle>t\\<rangle>\n  C \\<noteq> \\<box>\n\ngoal (1 subgoal):\n 1. \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "assume \"?rhs\""], ["proof (state)\nthis:\n  \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle> \\<Longrightarrow>\n    s \\<rhd> t", "then"], ["proof (chain)\npicking this:\n  \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>", "show \"s \\<rhd> t\""], ["proof (prove)\nusing this:\n  \\<exists>C. C \\<noteq> \\<box> \\<and> s = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. s \\<rhd> t", "by auto"], ["proof (state)\nthis:\n  s \\<rhd> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nectxt_imp_supt_ctxt: \"C \\<noteq> \\<box> \\<Longrightarrow> C\\<langle>t\\<rangle> \\<rhd> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<noteq> \\<box> \\<Longrightarrow> C\\<langle>t\\<rangle> \\<rhd> t", "by auto"], ["", "lemma supt_var: \"\\<not> (Var x \\<rhd> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Var x, u) \\<notin> {\\<rhd>}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Var x \\<rhd> u \\<Longrightarrow> False", "assume \"Var x \\<rhd> u\""], ["proof (state)\nthis:\n  Var x \\<rhd> u\n\ngoal (1 subgoal):\n 1. Var x \\<rhd> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Var x \\<rhd> u", "obtain C where \"C \\<noteq> \\<box>\" and \"Var x = C\\<langle>u\\<rangle>\""], ["proof (prove)\nusing this:\n  Var x \\<rhd> u\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<noteq> \\<box>; Var x = C\\<langle>u\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  C \\<noteq> \\<box>\n  Var x = C\\<langle>u\\<rangle>\n\ngoal (1 subgoal):\n 1. Var x \\<rhd> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<box>\n  Var x = C\\<langle>u\\<rangle>", "show False"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<box>\n  Var x = C\\<langle>u\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by (cases C) auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supt_const: \"\\<not> (Fun f [] \\<rhd> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Fun f [], u) \\<notin> {\\<rhd>}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Fun f [] \\<rhd> u \\<Longrightarrow> False", "assume \"Fun f [] \\<rhd> u\""], ["proof (state)\nthis:\n  Fun f [] \\<rhd> u\n\ngoal (1 subgoal):\n 1. Fun f [] \\<rhd> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Fun f [] \\<rhd> u", "obtain C where \"C \\<noteq> \\<box>\" and \"Fun f [] = C\\<langle>u\\<rangle>\""], ["proof (prove)\nusing this:\n  Fun f [] \\<rhd> u\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<noteq> \\<box>; Fun f [] = C\\<langle>u\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  C \\<noteq> \\<box>\n  Fun f [] = C\\<langle>u\\<rangle>\n\ngoal (1 subgoal):\n 1. Fun f [] \\<rhd> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> \\<box>\n  Fun f [] = C\\<langle>u\\<rangle>", "show False"], ["proof (prove)\nusing this:\n  C \\<noteq> \\<box>\n  Fun f [] = C\\<langle>u\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by (cases C) auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supteq_var_imp_eq:\n  \"(Var x \\<unrhd> t) = (t = Var x)\" (is \"_ = (_ = ?x)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t = (t = Var x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x\n 2. t = Var x \\<Longrightarrow> Var x \\<unrhd> t", "assume \"t = Var x\""], ["proof (state)\nthis:\n  t = Var x\n\ngoal (2 subgoals):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x\n 2. t = Var x \\<Longrightarrow> Var x \\<unrhd> t", "then"], ["proof (chain)\npicking this:\n  t = Var x", "show \"Var x \\<unrhd> t\""], ["proof (prove)\nusing this:\n  t = Var x\n\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t", "by auto"], ["proof (state)\nthis:\n  Var x \\<unrhd> t\n\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x", "assume st: \"?x \\<unrhd> t\""], ["proof (state)\nthis:\n  Var x \\<unrhd> t\n\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x", "from st"], ["proof (chain)\npicking this:\n  Var x \\<unrhd> t", "obtain C where \"?x = C\\<langle>t\\<rangle>\""], ["proof (prove)\nusing this:\n  Var x \\<unrhd> t\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        Var x = C\\<langle>t\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  Var x = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. Var x \\<unrhd> t \\<Longrightarrow> t = Var x", "then"], ["proof (chain)\npicking this:\n  Var x = C\\<langle>t\\<rangle>", "show \"t = ?x\""], ["proof (prove)\nusing this:\n  Var x = C\\<langle>t\\<rangle>\n\ngoal (1 subgoal):\n 1. t = Var x", "by (cases C) auto"], ["proof (state)\nthis:\n  t = Var x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Var_supt [elim!]:\n  assumes \"Var x \\<rhd> t\" shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms supt_var[of x t]"], ["proof (prove)\nusing this:\n  Var x \\<rhd> t\n  (Var x, t) \\<notin> {\\<rhd>}\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["", "lemma Fun_supt [elim]:\n  assumes \"Fun f ts \\<rhd> s\" obtains t where \"t \\<in> set ts\" and \"t \\<unrhd> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> set ts; t \\<unrhd> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  Fun f ts \\<rhd> s\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> set ts; t \\<unrhd> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases) (auto simp: supt_supteq_conv)"], ["", "lemma inj_ctxt_apply_term: \"inj (ctxt_apply_term C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (ctxt_apply_term C)", "by (auto simp: inj_on_def)"], ["", "lemma ctxt_subst_eq: \"(\\<And>x. x \\<in> vars_ctxt C \\<Longrightarrow> \\<sigma> x = \\<tau> x) \\<Longrightarrow> C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt C \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>", "proof (induct C)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "case (More f bef C aft)"], ["proof (state)\nthis:\n  (\\<And>x.\n      x \\<in> vars_ctxt C \\<Longrightarrow>\n      \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\n  ?x \\<in> vars_ctxt (More f bef C aft) \\<Longrightarrow>\n  \\<sigma> ?x = \\<tau> ?x\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "{"], ["proof (state)\nthis:\n  (\\<And>x.\n      x \\<in> vars_ctxt C \\<Longrightarrow>\n      \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\n  ?x \\<in> vars_ctxt (More f bef C aft) \\<Longrightarrow>\n  \\<sigma> ?x = \\<tau> ?x\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "assume t:\"t \\<in> set bef\""], ["proof (state)\nthis:\n  t \\<in> set bef\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "have \"t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>", "using t More(2)"], ["proof (prove)\nusing this:\n  t \\<in> set bef\n  ?x \\<in> vars_ctxt (More f bef C aft) \\<Longrightarrow>\n  \\<sigma> ?x = \\<tau> ?x\n\ngoal (1 subgoal):\n 1. t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>", "by (auto intro: term_subst_eq)"], ["proof (state)\nthis:\n  t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> set bef \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "moreover"], ["proof (state)\nthis:\n  ?t2 \\<in> set bef \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "{"], ["proof (state)\nthis:\n  ?t2 \\<in> set bef \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "assume t:\"t \\<in> set aft\""], ["proof (state)\nthis:\n  t \\<in> set aft\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "have \"t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>", "using t More(2)"], ["proof (prove)\nusing this:\n  t \\<in> set aft\n  ?x \\<in> vars_ctxt (More f bef C aft) \\<Longrightarrow>\n  \\<sigma> ?x = \\<tau> ?x\n\ngoal (1 subgoal):\n 1. t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>", "by (auto intro: term_subst_eq)"], ["proof (state)\nthis:\n  t \\<cdot> \\<sigma> = t \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> set aft \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "moreover"], ["proof (state)\nthis:\n  ?t2 \\<in> set aft \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "have \"C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>", "using More"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x \\<in> vars_ctxt C \\<Longrightarrow>\n      \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\n  ?x \\<in> vars_ctxt (More f bef C aft) \\<Longrightarrow>\n  \\<sigma> ?x = \\<tau> ?x\n\ngoal (1 subgoal):\n 1. C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>", "by auto"], ["proof (state)\nthis:\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>\n 2. \\<And>x1 x2 C x4.\n       \\<lbrakk>(\\<And>x.\n                    x \\<in> vars_ctxt C \\<Longrightarrow>\n                    \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n                C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>;\n        \\<And>x.\n           x \\<in> vars_ctxt (More x1 x2 C x4) \\<Longrightarrow>\n           \\<sigma> x = \\<tau> x\\<rbrakk>\n       \\<Longrightarrow> More x1 x2 C x4 \\<cdot>\\<^sub>c \\<sigma> =\n                         More x1 x2 C x4 \\<cdot>\\<^sub>c \\<tau>", "ultimately"], ["proof (chain)\npicking this:\n  ?t2 \\<in> set bef \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n  ?t2 \\<in> set aft \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  ?t2 \\<in> set bef \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n  ?t2 \\<in> set aft \\<Longrightarrow>\n  ?t2 \\<cdot> \\<sigma> = ?t2 \\<cdot> \\<tau>\n  C \\<cdot>\\<^sub>c \\<sigma> = C \\<cdot>\\<^sub>c \\<tau>\n\ngoal (1 subgoal):\n 1. More f bef C aft \\<cdot>\\<^sub>c \\<sigma> =\n    More f bef C aft \\<cdot>\\<^sub>c \\<tau>", "by auto"], ["proof (state)\nthis:\n  More f bef C aft \\<cdot>\\<^sub>c \\<sigma> =\n  More f bef C aft \\<cdot>\\<^sub>c \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> vars_ctxt \\<box> \\<Longrightarrow>\n        \\<sigma> x = \\<tau> x) \\<Longrightarrow>\n    \\<box> \\<cdot>\\<^sub>c \\<sigma> = \\<box> \\<cdot>\\<^sub>c \\<tau>", "qed auto"], ["", "end"]]}