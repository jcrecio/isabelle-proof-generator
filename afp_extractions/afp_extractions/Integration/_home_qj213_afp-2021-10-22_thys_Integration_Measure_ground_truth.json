{"file_name": "/home/qj213/afp-2021-10-22/thys/Integration/Measure.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Integration", "problem_names": ["theorem assumes sig: \"sigma_algebra a\" and meas: \"f \\<in> measurable a b\" shows \n  measurable_lift: \"f \\<in> measurable a (sigma b)\"", "lemma mkdisjoint_un: \n  assumes up: \"\\<And>n. A n \\<subseteq> A (Suc n)\"\n  shows \"A n = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\"", "lemma mkdisjoint_disj: \n  assumes up: \"\\<And>n. A n \\<subseteq> A (Suc n)\" and ne: \"m \\<noteq> n\"\n  shows \"mkdisjoint A m \\<inter> mkdisjoint A n = {}\"", "lemma mkdisjoint_mon_conv:\n  assumes mc: \"A\\<up>B\" \n  shows \"(\\<Union>i. mkdisjoint A i) = B\"", "theorem measure_mon_conv: \n  assumes ms: \"measure_space M\" and \n  Ams: \"\\<And>n. A n \\<in> measurable_sets M\" and AB: \"A\\<up>B\" \n  shows \"(\\<lambda>n. measure M (A n)) \\<longlonglongrightarrow> measure M B\"", "lemma measure_additive: assumes ms: \"measure_space M\"\n  and disj: \"a \\<inter> b = {}\" and a: \"a \\<in> measurable_sets M\"\n  and b:\"b \\<in> measurable_sets M\"\n  shows \"measure M (a \\<union> b) = measure M a + measure M b\""], "translations": [["", "theorem assumes sig: \"sigma_algebra a\" and meas: \"f \\<in> measurable a b\" shows \n  measurable_lift: \"f \\<in> measurable a (sigma b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "define Q where \"Q = {q. f -` q \\<in> a}\""], ["proof (state)\nthis:\n  Q = {q. f -` q \\<in> a}\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "with meas"], ["proof (chain)\npicking this:\n  f \\<in> measurable a b\n  Q = {q. f -` q \\<in> a}", "have 1: \"b \\<subseteq> Q\""], ["proof (prove)\nusing this:\n  f \\<in> measurable a b\n  Q = {q. f -` q \\<in> a}\n\ngoal (1 subgoal):\n 1. b \\<subseteq> Q", "by (auto simp add: measurable_def)"], ["proof (state)\nthis:\n  b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "{"], ["proof (state)\nthis:\n  b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "assume \"x\\<in>sigma b\""], ["proof (state)\nthis:\n  x \\<in> sigma b\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "hence \"x\\<in>Q\""], ["proof (prove)\nusing this:\n  x \\<in> sigma b\n\ngoal (1 subgoal):\n 1. x \\<in> Q", "proof (induct rule: sigma.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> b \\<Longrightarrow> a \\<in> Q\n 2. {} \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "case basic"], ["proof (state)\nthis:\n  a_ \\<in> b\n\ngoal (4 subgoals):\n 1. \\<And>a. a \\<in> b \\<Longrightarrow> a \\<in> Q\n 2. {} \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 4. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "from 1"], ["proof (chain)\npicking this:\n  b \\<subseteq> Q", "show \" \\<And>a. a \\<in> b \\<Longrightarrow> a \\<in> Q\""], ["proof (prove)\nusing this:\n  b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> b \\<Longrightarrow> a \\<in> Q", ".."], ["proof (state)\nthis:\n  ?a \\<in> b \\<Longrightarrow> ?a \\<in> Q\n\ngoal (3 subgoals):\n 1. {} \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. {} \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. {} \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "from sig"], ["proof (chain)\npicking this:\n  sigma_algebra a", "have \"{}\\<in>a\""], ["proof (prove)\nusing this:\n  sigma_algebra a\n\ngoal (1 subgoal):\n 1. {} \\<in> a", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  {} \\<in> a\n\ngoal (3 subgoals):\n 1. {} \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 3. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "thus \"{} \\<in> Q\""], ["proof (prove)\nusing this:\n  {} \\<in> a\n\ngoal (1 subgoal):\n 1. {} \\<in> Q", "by (simp add: Q_def)"], ["proof (state)\nthis:\n  {} \\<in> Q\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "case complement"], ["proof (state)\nthis:\n  a_ \\<in> sigma b\n  a_ \\<in> Q\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "fix r"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "assume \"r \\<in> Q\""], ["proof (state)\nthis:\n  r \\<in> Q\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "then"], ["proof (chain)\npicking this:\n  r \\<in> Q", "obtain r1 where im: \"r1 = f -` r\" and a: \"r1 \\<in> a\""], ["proof (prove)\nusing this:\n  r \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>r1.\n        \\<lbrakk>r1 = f -` r; r1 \\<in> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Q_def)"], ["proof (state)\nthis:\n  r1 = f -` r\n  r1 \\<in> a\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "with sig"], ["proof (chain)\npicking this:\n  sigma_algebra a\n  r1 = f -` r\n  r1 \\<in> a", "have \"-r1 \\<in> a\""], ["proof (prove)\nusing this:\n  sigma_algebra a\n  r1 = f -` r\n  r1 \\<in> a\n\ngoal (1 subgoal):\n 1. - r1 \\<in> a", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  - r1 \\<in> a\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> sigma b; a \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> - a \\<in> Q\n 2. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "with im Q_def"], ["proof (chain)\npicking this:\n  r1 = f -` r\n  Q = {q. f -` q \\<in> a}\n  - r1 \\<in> a", "show \"-r \\<in> Q\""], ["proof (prove)\nusing this:\n  r1 = f -` r\n  Q = {q. f -` q \\<in> a}\n  - r1 \\<in> a\n\ngoal (1 subgoal):\n 1. - r \\<in> Q", "by (simp add: vimage_Compl)"], ["proof (state)\nthis:\n  - r \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "case Union"], ["proof (state)\nthis:\n  a_ ?i \\<in> sigma b\n  a_ ?i \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "assume \"\\<And>i::nat. r i \\<in> Q\""], ["proof (state)\nthis:\n  r ?i \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "then"], ["proof (chain)\npicking this:\n  r ?i \\<in> Q", "obtain r1 where im: \"\\<And>i. r1 i =  f -` r i\" and a: \"\\<And>i. r1 i \\<in>        a\""], ["proof (prove)\nusing this:\n  r ?i \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>r1.\n        \\<lbrakk>\\<And>i. r1 i = f -` r i; \\<And>i. r1 i \\<in> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Q_def)"], ["proof (state)\nthis:\n  r1 ?i = f -` r ?i\n  r1 ?i \\<in> a\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "from a sig"], ["proof (chain)\npicking this:\n  r1 ?i \\<in> a\n  sigma_algebra a", "have \"\\<Union>(r1 ` UNIV) \\<in> a\""], ["proof (prove)\nusing this:\n  r1 ?i \\<in> a\n  sigma_algebra a\n\ngoal (1 subgoal):\n 1. \\<Union> (range r1) \\<in> a", "by (auto simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  \\<Union> (range r1) \\<in> a\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>i. a i \\<in> sigma b; \\<And>i. a i \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (range a) \\<in> Q", "with im Q_def"], ["proof (chain)\npicking this:\n  r1 ?i = f -` r ?i\n  Q = {q. f -` q \\<in> a}\n  \\<Union> (range r1) \\<in> a", "show \"\\<Union>(r ` UNIV) \\<in> Q\""], ["proof (prove)\nusing this:\n  r1 ?i = f -` r ?i\n  Q = {q. f -` q \\<in> a}\n  \\<Union> (range r1) \\<in> a\n\ngoal (1 subgoal):\n 1. \\<Union> (range r) \\<in> Q", "by (auto simp add: vimage_UN)"], ["proof (state)\nthis:\n  \\<Union> (range r) \\<in> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> sigma b \\<Longrightarrow> ?x2 \\<in> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "hence \"(sigma b) \\<subseteq> Q\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> sigma b \\<Longrightarrow> ?x2 \\<in> Q\n\ngoal (1 subgoal):\n 1. sigma b \\<subseteq> Q", ".."], ["proof (state)\nthis:\n  sigma b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "thus \"f \\<in> measurable a (sigma b)\""], ["proof (prove)\nusing this:\n  sigma b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. f \\<in> measurable a (sigma b)", "by (auto simp add: measurable_def Q_def)"], ["proof (state)\nthis:\n  f \\<in> measurable a (sigma b)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The case is different for the second theorem. It is only five\n  lines in the book (ibid.), but almost 200 in formal text. Precision\n  still pays here, gaining a detailed view of a technique that\n  is often employed in measure theory --- making a sequence of sets\n  disjoint. Moreover, the necessity for the above-mentioned change in the\n  definition of countably additive was detected only in the\n  formalization of this proof. \n\n  To enable application of the additivity of measures, the following construction\n  yields disjoint sets. We skip the justification of the lemmata for\n  brevity.\\<close>"], ["", "primrec mkdisjoint:: \"(nat \\<Rightarrow> 'a set) \\<Rightarrow> (nat \\<Rightarrow> 'a set)\"\nwhere\n  \"mkdisjoint A 0 = A 0\"\n| \"mkdisjoint A (Suc n) = A (Suc n) - A n\""], ["", "lemma mkdisjoint_un: \n  assumes up: \"\\<And>n. A n \\<subseteq> A (Suc n)\"\n  shows \"A n = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A n = \\<Union> (mkdisjoint A ` {..n})", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A n = \\<Union> (mkdisjoint A ` {..n})", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. A 0 = \\<Union> (mkdisjoint A ` {..0})\n 2. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. A 0 = \\<Union> (mkdisjoint A ` {..0})\n 2. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. A 0 = \\<Union> (mkdisjoint A ` {..0})", "by simp"], ["proof (state)\nthis:\n  A 0 = \\<Union> (mkdisjoint A ` {..0})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "case (Suc n)"], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "hence \"A n = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. A n = \\<Union> (mkdisjoint A ` {..n})", "."], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "moreover"], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "have \"(\\<Union>i\\<in>{..(Suc n)}. mkdisjoint A i) = mkdisjoint A (Suc n) \\<union>\n    (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..Suc n}) =\n    mkdisjoint A (Suc n) \\<union> \\<Union> (mkdisjoint A ` {..n})", "by (simp add: atMost_Suc)"], ["proof (state)\nthis:\n  \\<Union> (mkdisjoint A ` {..Suc n}) =\n  mkdisjoint A (Suc n) \\<union> \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "moreover"], ["proof (state)\nthis:\n  \\<Union> (mkdisjoint A ` {..Suc n}) =\n  mkdisjoint A (Suc n) \\<union> \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "have \"mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n", "by simp"], ["proof (state)\nthis:\n  mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "moreover"], ["proof (state)\nthis:\n  mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "from up"], ["proof (chain)\npicking this:\n  A ?n \\<subseteq> A (Suc ?n)", "have \"\\<dots> = A (Suc n)\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. A (Suc n) \\<union> A n = A (Suc n)", "by auto"], ["proof (state)\nthis:\n  A (Suc n) \\<union> A n = A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       A n = \\<Union> (mkdisjoint A ` {..n}) \\<Longrightarrow>\n       A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "ultimately"], ["proof (chain)\npicking this:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n  \\<Union> (mkdisjoint A ` {..Suc n}) =\n  mkdisjoint A (Suc n) \\<union> \\<Union> (mkdisjoint A ` {..n})\n  mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n\n  A (Suc n) \\<union> A n = A (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n  \\<Union> (mkdisjoint A ` {..Suc n}) =\n  mkdisjoint A (Suc n) \\<union> \\<Union> (mkdisjoint A ` {..n})\n  mkdisjoint A (Suc n) \\<union> A n = A (Suc n) \\<union> A n\n  A (Suc n) \\<union> A n = A (Suc n)\n\ngoal (1 subgoal):\n 1. A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})", "by simp"], ["proof (state)\nthis:\n  A (Suc n) = \\<Union> (mkdisjoint A ` {..Suc n})\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma mkdisjoint_disj: \n  assumes up: \"\\<And>n. A n \\<subseteq> A (Suc n)\" and ne: \"m \\<noteq> n\"\n  shows \"mkdisjoint A m \\<inter> mkdisjoint A n = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "fix m1 m2::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "assume less: \"m1 < m2\""], ["proof (state)\nthis:\n  m1 < m2\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "hence \"0 < m2\""], ["proof (prove)\nusing this:\n  m1 < m2\n\ngoal (1 subgoal):\n 1. 0 < m2", "by simp"], ["proof (state)\nthis:\n  0 < m2\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "then"], ["proof (chain)\npicking this:\n  0 < m2", "obtain n where eq: \"m2 = Suc n\""], ["proof (prove)\nusing this:\n  0 < m2\n\ngoal (1 subgoal):\n 1. (\\<And>n. m2 = Suc n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp add: gr0_conv_Suc)"], ["proof (state)\nthis:\n  m2 = Suc n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "with less"], ["proof (chain)\npicking this:\n  m1 < m2\n  m2 = Suc n", "have less2: \"m1 < Suc n\""], ["proof (prove)\nusing this:\n  m1 < m2\n  m2 = Suc n\n\ngoal (1 subgoal):\n 1. m1 < Suc n", "by simp"], ["proof (state)\nthis:\n  m1 < Suc n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "{"], ["proof (state)\nthis:\n  m1 < Suc n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "assume y: \"y \\<in> mkdisjoint A m1\""], ["proof (state)\nthis:\n  y \\<in> mkdisjoint A m1\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "assume x: \"x \\<in> mkdisjoint A m2\""], ["proof (state)\nthis:\n  x \\<in> mkdisjoint A m2\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "with eq"], ["proof (chain)\npicking this:\n  m2 = Suc n\n  x \\<in> mkdisjoint A m2", "have\"x \\<notin> A n\""], ["proof (prove)\nusing this:\n  m2 = Suc n\n  x \\<in> mkdisjoint A m2\n\ngoal (1 subgoal):\n 1. x \\<notin> A n", "by simp"], ["proof (state)\nthis:\n  x \\<notin> A n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "also"], ["proof (state)\nthis:\n  x \\<notin> A n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "from up"], ["proof (chain)\npicking this:\n  A ?n \\<subseteq> A (Suc ?n)", "have \"A n = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. A n = \\<Union> (mkdisjoint A ` {..n})", "by (rule mkdisjoint_un)"], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "also"], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "from less2"], ["proof (chain)\npicking this:\n  m1 < Suc n", "have \"m1 \\<in> {..n}\""], ["proof (prove)\nusing this:\n  m1 < Suc n\n\ngoal (1 subgoal):\n 1. m1 \\<in> {..n}", "by simp"], ["proof (state)\nthis:\n  m1 \\<in> {..n}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "hence \"mkdisjoint A m1 \\<subseteq> (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  m1 \\<in> {..n}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m1 \\<subseteq> \\<Union> (mkdisjoint A ` {..n})", "by auto"], ["proof (state)\nthis:\n  mkdisjoint A m1 \\<subseteq> \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> \\<Union> (mkdisjoint A ` {..n})\n  mkdisjoint A m1 \\<subseteq> \\<Union> (mkdisjoint A ` {..n})", "have \"x \\<notin> mkdisjoint A m1\""], ["proof (prove)\nusing this:\n  x \\<notin> \\<Union> (mkdisjoint A ` {..n})\n  mkdisjoint A m1 \\<subseteq> \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. x \\<notin> mkdisjoint A m1", "by auto"], ["proof (state)\nthis:\n  x \\<notin> mkdisjoint A m1\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "with y"], ["proof (chain)\npicking this:\n  y \\<in> mkdisjoint A m1\n  x \\<notin> mkdisjoint A m1", "have \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<in> mkdisjoint A m1\n  x \\<notin> mkdisjoint A m1\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by fast"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?y2 \\<in> mkdisjoint A m1; ?x2 \\<in> mkdisjoint A m2\\<rbrakk>\n  \\<Longrightarrow> ?y2 \\<noteq> ?x2\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "hence \"mkdisjoint A m1 \\<inter> mkdisjoint A m2 = {}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y2 \\<in> mkdisjoint A m1; ?x2 \\<in> mkdisjoint A m2\\<rbrakk>\n  \\<Longrightarrow> ?y2 \\<noteq> ?x2\n\ngoal (1 subgoal):\n 1. mkdisjoint A m1 \\<inter> mkdisjoint A m2 = {}", "by (simp add: disjoint_iff_not_equal)"], ["proof (state)\nthis:\n  mkdisjoint A m1 \\<inter> mkdisjoint A m2 = {}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "}"], ["proof (state)\nthis:\n  ?m1.2 < ?m2.2 \\<Longrightarrow>\n  mkdisjoint A ?m1.2 \\<inter> mkdisjoint A ?m2.2 = {}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "hence 1: \"\\<And>m1 m2. m1 < m2 \\<Longrightarrow>  mkdisjoint A m1 \\<inter> mkdisjoint A m2 = {}\""], ["proof (prove)\nusing this:\n  ?m1.2 < ?m2.2 \\<Longrightarrow>\n  mkdisjoint A ?m1.2 \\<inter> mkdisjoint A ?m2.2 = {}\n\ngoal (1 subgoal):\n 1. \\<And>m1 m2.\n       m1 < m2 \\<Longrightarrow>\n       mkdisjoint A m1 \\<inter> mkdisjoint A m2 = {}", "."], ["proof (state)\nthis:\n  ?m1.0 < ?m2.0 \\<Longrightarrow>\n  mkdisjoint A ?m1.0 \\<inter> mkdisjoint A ?m2.0 = {}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "proof (cases \"m < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow> mkdisjoint A m \\<inter> mkdisjoint A n = {}\n 2. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "case True"], ["proof (state)\nthis:\n  m < n\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow> mkdisjoint A m \\<inter> mkdisjoint A n = {}\n 2. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "by (rule 1)"], ["proof (state)\nthis:\n  mkdisjoint A m \\<inter> mkdisjoint A n = {}\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "case False"], ["proof (state)\nthis:\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "with ne"], ["proof (chain)\npicking this:\n  m \\<noteq> n\n  \\<not> m < n", "have \"n < m\""], ["proof (prove)\nusing this:\n  m \\<noteq> n\n  \\<not> m < n\n\ngoal (1 subgoal):\n 1. n < m", "by arith"], ["proof (state)\nthis:\n  n < m\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "hence \"mkdisjoint A n \\<inter> mkdisjoint A m = {}\""], ["proof (prove)\nusing this:\n  n < m\n\ngoal (1 subgoal):\n 1. mkdisjoint A n \\<inter> mkdisjoint A m = {}", "by (rule 1)"], ["proof (state)\nthis:\n  mkdisjoint A n \\<inter> mkdisjoint A m = {}\n\ngoal (1 subgoal):\n 1. \\<not> m < n \\<Longrightarrow>\n    mkdisjoint A m \\<inter> mkdisjoint A n = {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  mkdisjoint A n \\<inter> mkdisjoint A m = {}\n\ngoal (1 subgoal):\n 1. mkdisjoint A m \\<inter> mkdisjoint A n = {}", "by fast"], ["proof (state)\nthis:\n  mkdisjoint A m \\<inter> mkdisjoint A n = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mkdisjoint A m \\<inter> mkdisjoint A n = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma mkdisjoint_mon_conv:\n  assumes mc: \"A\\<up>B\" \n  shows \"(\\<Union>i. mkdisjoint A i) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range (mkdisjoint A)) = B", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range (mkdisjoint A)) = B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "assume \"x \\<in> (\\<Union>i. mkdisjoint A i)\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (range (mkdisjoint A))", "obtain i where \"x \\<in> mkdisjoint A i\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        x \\<in> mkdisjoint A i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> mkdisjoint A i\n\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "hence \"x \\<in> A i\""], ["proof (prove)\nusing this:\n  x \\<in> mkdisjoint A i\n\ngoal (1 subgoal):\n 1. x \\<in> A i", "by (cases i) simp_all"], ["proof (state)\nthis:\n  x \\<in> A i\n\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "with mc"], ["proof (chain)\npicking this:\n  A\\<up>B\n  x \\<in> A i", "have \"x \\<in> B\""], ["proof (prove)\nusing this:\n  A\\<up>B\n  x \\<in> A i\n\ngoal (1 subgoal):\n 1. x \\<in> B", "by (auto simp add: mon_conv_set_def)"], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> \\<Union> (range (mkdisjoint A)) \\<Longrightarrow> ?x2 \\<in> B\n\ngoal (2 subgoals):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n 2. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "thus \"(\\<Union>i. mkdisjoint A i) \\<subseteq> B\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> \\<Union> (range (mkdisjoint A)) \\<Longrightarrow> ?x2 \\<in> B\n\ngoal (1 subgoal):\n 1. \\<Union> (range (mkdisjoint A)) \\<subseteq> B", "by fast"], ["proof (state)\nthis:\n  \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "{"], ["proof (state)\nthis:\n  \\<Union> (range (mkdisjoint A)) \\<subseteq> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "with mc"], ["proof (chain)\npicking this:\n  A\\<up>B\n  x \\<in> B", "obtain i where \"x \\<in> A i\""], ["proof (prove)\nusing this:\n  A\\<up>B\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. (\\<And>i. x \\<in> A i \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp add: mon_conv_set_def)"], ["proof (state)\nthis:\n  x \\<in> A i\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "also"], ["proof (state)\nthis:\n  x \\<in> A i\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "from mc"], ["proof (chain)\npicking this:\n  A\\<up>B", "have \"\\<And>n. A n \\<subseteq> A (Suc n)\""], ["proof (prove)\nusing this:\n  A\\<up>B\n\ngoal (1 subgoal):\n 1. \\<And>n. A n \\<subseteq> A (Suc n)", "by (simp only: mon_conv_set_def)"], ["proof (state)\nthis:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "hence \"A i = (\\<Union>r\\<in>{..i}. mkdisjoint A r)\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. A i = \\<Union> (mkdisjoint A ` {..i})", "by (rule mkdisjoint_un)"], ["proof (state)\nthis:\n  A i = \\<Union> (mkdisjoint A ` {..i})\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "also"], ["proof (state)\nthis:\n  A i = \\<Union> (mkdisjoint A ` {..i})\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "have \"\\<dots> \\<subseteq> (\\<Union>r. mkdisjoint A r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..i})\n    \\<subseteq> \\<Union> (range (mkdisjoint A))", "by auto"], ["proof (state)\nthis:\n  \\<Union> (mkdisjoint A ` {..i})\n  \\<subseteq> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "finally"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (range (mkdisjoint A))", "have \"x \\<in> (\\<Union>i. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (range (mkdisjoint A))", "."], ["proof (state)\nthis:\n  x \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> B \\<Longrightarrow> ?x2 \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "thus \"B \\<subseteq> (\\<Union>i. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> B \\<Longrightarrow> ?x2 \\<in> \\<Union> (range (mkdisjoint A))\n\ngoal (1 subgoal):\n 1. B \\<subseteq> \\<Union> (range (mkdisjoint A))", "by fast"], ["proof (state)\nthis:\n  B \\<subseteq> \\<Union> (range (mkdisjoint A))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)\n\n  \n(*This is in Joe Hurd's Thesis (p. 35) as Monotone Convergence theorem. Check the real name \\<dots> . \n    Also, it's not as strong as it could be,\n    but we need no more.*)"], ["", "text \\<open>Joe Hurd calls the following the Monotone Convergence Theorem,\n  though in mathematical literature this name is often reserved for a\n  similar fact\n  about integrals that we will prove in \\ref{nnfis}, which depends on this\n  one. The claim made here is that the measures of monotonically convergent sets\n  approach the measure of their limit. A strengthened version would\n  imply monotone convergence of the measures, but is not needed in the\n  development.\n\\<close>"], ["", "theorem measure_mon_conv: \n  assumes ms: \"measure_space M\" and \n  Ams: \"\\<And>n. A n \\<in> measurable_sets M\" and AB: \"A\\<up>B\" \n  shows \"(\\<lambda>n. measure M (A n)) \\<longlonglongrightarrow> measure M B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from AB"], ["proof (chain)\npicking this:\n  A\\<up>B", "have up: \"\\<And>n. A n \\<subseteq> A (Suc n)\""], ["proof (prove)\nusing this:\n  A\\<up>B\n\ngoal (1 subgoal):\n 1. \\<And>n. A n \\<subseteq> A (Suc n)", "by (simp only: mon_conv_set_def)"], ["proof (state)\nthis:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "{"], ["proof (state)\nthis:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "have \"mkdisjoint A i \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mkdisjoint A i \\<in> measurable_sets M", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M", "with Ams"], ["proof (chain)\npicking this:\n  A ?n \\<in> measurable_sets M\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  A ?n \\<in> measurable_sets M\n  i = 0\n\ngoal (1 subgoal):\n 1. mkdisjoint A i \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  mkdisjoint A i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i = Suc nat \\<Longrightarrow> mkdisjoint A i \\<in> measurable_sets M", "case (Suc i)"], ["proof (state)\nthis:\n  i__ = Suc i\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i__ = Suc nat \\<Longrightarrow>\n       mkdisjoint A i__ \\<in> measurable_sets M", "have \"A (Suc i) - A i = A (Suc i) \\<inter> - A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A (Suc i) - A i = A (Suc i) \\<inter> - A i", "by blast"], ["proof (state)\nthis:\n  A (Suc i) - A i = A (Suc i) \\<inter> - A i\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i__ = Suc nat \\<Longrightarrow>\n       mkdisjoint A i__ \\<in> measurable_sets M", "with Suc ms Ams"], ["proof (chain)\npicking this:\n  i__ = Suc i\n  measure_space M\n  A ?n \\<in> measurable_sets M\n  A (Suc i) - A i = A (Suc i) \\<inter> - A i", "show ?thesis"], ["proof (prove)\nusing this:\n  i__ = Suc i\n  measure_space M\n  A ?n \\<in> measurable_sets M\n  A (Suc i) - A i = A (Suc i) \\<inter> - A i\n\ngoal (1 subgoal):\n 1. mkdisjoint A i__ \\<in> measurable_sets M", "by (auto simp add: measure_space_def sigma_algebra_def sigma_algebra_inter)"], ["proof (state)\nthis:\n  mkdisjoint A i__ \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mkdisjoint A i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "}"], ["proof (state)\nthis:\n  mkdisjoint A ?i2 \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence i: \"\\<And>i. mkdisjoint A i \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  mkdisjoint A ?i2 \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>i. mkdisjoint A i \\<in> measurable_sets M", "."], ["proof (state)\nthis:\n  mkdisjoint A ?i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  mkdisjoint A ?i \\<in> measurable_sets M", "have un: \"(\\<Union>i. mkdisjoint A i) \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  mkdisjoint A ?i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<Union> (range (mkdisjoint A)) \\<in> measurable_sets M", "by (simp add: measure_space_def sigma_algebra_def)"], ["proof (state)\nthis:\n  \\<Union> (range (mkdisjoint A)) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  \\<Union> (range (mkdisjoint A)) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from i"], ["proof (chain)\npicking this:\n  mkdisjoint A ?i \\<in> measurable_sets M", "have range: \"range (mkdisjoint A) \\<subseteq> measurable_sets M\""], ["proof (prove)\nusing this:\n  mkdisjoint A ?i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. range (mkdisjoint A) \\<subseteq> measurable_sets M", "by fast"], ["proof (state)\nthis:\n  range (mkdisjoint A) \\<subseteq> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  range (mkdisjoint A) \\<subseteq> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from up"], ["proof (chain)\npicking this:\n  A ?n \\<subseteq> A (Suc ?n)", "have \"\\<forall>i j. i \\<noteq> j \\<longrightarrow>  mkdisjoint A i \\<inter> mkdisjoint A j = {}\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i \\<noteq> j \\<longrightarrow>\n       mkdisjoint A i \\<inter> mkdisjoint A j = {}", "by (simp add: mkdisjoint_disj)"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     mkdisjoint A i \\<inter> mkdisjoint A j = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     mkdisjoint A i \\<inter> mkdisjoint A j = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "note ms"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union> (range (mkdisjoint A)) \\<in> measurable_sets M\n  range (mkdisjoint A) \\<subseteq> measurable_sets M\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     mkdisjoint A i \\<inter> mkdisjoint A j = {}\n  measure_space M", "have sums:\n    \"(\\<lambda>i. measure M (mkdisjoint A i)) sums (measure M (\\<Union>i. mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  \\<Union> (range (mkdisjoint A)) \\<in> measurable_sets M\n  range (mkdisjoint A) \\<subseteq> measurable_sets M\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     mkdisjoint A i \\<inter> mkdisjoint A j = {}\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. Measure.measure M (mkdisjoint A i)) sums\n    Measure.measure M (\\<Union> (range (mkdisjoint A)))", "by (simp add: measure_space_def countably_additive_def)"], ["proof (state)\nthis:\n  (\\<lambda>i. Measure.measure M (mkdisjoint A i)) sums\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"(\\<Sum>i. measure M (mkdisjoint A i)) = (measure M (\\<Union>i. mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. Measure.measure M (mkdisjoint A i)) sums\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. Measure.measure M (mkdisjoint A i)) =\n    Measure.measure M (\\<Union> (range (mkdisjoint A)))", "by (rule sums_unique[THEN sym])"], ["proof (state)\nthis:\n  (\\<Sum>i. Measure.measure M (mkdisjoint A i)) =\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i. Measure.measure M (mkdisjoint A i)) =\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from sums"], ["proof (chain)\npicking this:\n  (\\<lambda>i. Measure.measure M (mkdisjoint A i)) sums\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))", "have \"summable (\\<lambda>i. measure M (mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. Measure.measure M (mkdisjoint A i)) sums\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>i. Measure.measure M (mkdisjoint A i))", "by (rule sums_summable)"], ["proof (state)\nthis:\n  summable (\\<lambda>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"(\\<lambda>n. \\<Sum>i<n. measure M (mkdisjoint A i))\n    \\<longlonglongrightarrow> (\\<Sum>i. measure M (mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<n. Measure.measure M (mkdisjoint A i))\n    \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))", "by (rule summable_LIMSEQ)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"(\\<lambda>n. \\<Sum>i<Suc n. measure M (mkdisjoint A i)) \\<longlonglongrightarrow> (\\<Sum>i. measure M (mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n    \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))", "by (rule LIMSEQ_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i. Measure.measure M (mkdisjoint A i)) =\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))", "have \"(\\<lambda>n. \\<Sum>i<Suc n. measure M (mkdisjoint A i))\n    \\<longlonglongrightarrow> (measure M (\\<Union>i. mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  (\\<Sum>i. Measure.measure M (mkdisjoint A i)) =\n  Measure.measure M (\\<Union> (range (mkdisjoint A)))\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> (\\<Sum>i. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n    \\<longlonglongrightarrow> Measure.measure M\n                               (\\<Union> (range (mkdisjoint A)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "{"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from up"], ["proof (chain)\npicking this:\n  A ?n \\<subseteq> A (Suc ?n)", "have \"A n = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. A n = \\<Union> (mkdisjoint A ` {..n})", "by (rule mkdisjoint_un)"], ["proof (state)\nthis:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"measure M (A n) = measure M (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  A n = \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. Measure.measure M (A n) =\n    Measure.measure M (\\<Union> (mkdisjoint A ` {..n}))", "by simp"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union> (mkdisjoint A ` {..n}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union> (mkdisjoint A ` {..n}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "have \n      \"(\\<Union>i\\<in>{..n}. mkdisjoint A i) = (\\<Union>i. if i\\<le>n then mkdisjoint A i else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "have \"UNIV = {..n} \\<union> {n<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = {..n} \\<union> {n<..}", "by auto"], ["proof (state)\nthis:\n  UNIV = {..n} \\<union> {n<..}\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "hence \"(\\<Union>i. if i\\<le>n then mkdisjoint A i else {}) = \n        (\\<Union>i\\<in>{..n}. if i\\<le>n then mkdisjoint A i else {}) \n        \\<union>  (\\<Union>i\\<in>{n<..}. if i\\<le>n then mkdisjoint A i else {})\""], ["proof (prove)\nusing this:\n  UNIV = {..n} \\<union> {n<..}\n\ngoal (1 subgoal):\n 1. (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n    (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n    (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "moreover"], ["proof (state)\nthis:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "{"], ["proof (state)\nthis:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "have \"(\\<Union>i\\<in>{n<..}. if i\\<le>n then mkdisjoint A i else {}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) = {}", "by force"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "}"], ["proof (state)\nthis:\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "hence \"\\<dots> = (\\<Union>i\\<in>{..n}. mkdisjoint A i)\""], ["proof (prove)\nusing this:\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) = {}\n\ngoal (1 subgoal):\n 1. (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n    (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) =\n    \\<Union> (mkdisjoint A ` {..n})", "by auto"], ["proof (state)\nthis:\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) =\n  \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) =\n  \\<Union> (mkdisjoint A ` {..n})", "show \n        \"(\\<Union>i\\<in>{..n}. mkdisjoint A i) = (\\<Union>i. if i\\<le>n then mkdisjoint A i else {})\""], ["proof (prove)\nusing this:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {}) =\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {})\n  (\\<Union>i\\<le>n. if i \\<le> n then mkdisjoint A i else {}) \\<union>\n  (\\<Union>i\\<in>{n<..}. if i \\<le> n then mkdisjoint A i else {}) =\n  \\<Union> (mkdisjoint A ` {..n})\n\ngoal (1 subgoal):\n 1. \\<Union> (mkdisjoint A ` {..n}) =\n    (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "by simp"], ["proof (state)\nthis:\n  \\<Union> (mkdisjoint A ` {..n}) =\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> (mkdisjoint A ` {..n}) =\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "ultimately"], ["proof (chain)\npicking this:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union> (mkdisjoint A ` {..n}))\n  \\<Union> (mkdisjoint A ` {..n}) =\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "have \n      \"measure M (A n) = measure M (\\<Union>i. if i\\<le>n then mkdisjoint A i else {})\""], ["proof (prove)\nusing this:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union> (mkdisjoint A ` {..n}))\n  \\<Union> (mkdisjoint A ` {..n}) =\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. Measure.measure M (A n) =\n    Measure.measure M (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})", "by simp"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from i ms"], ["proof (chain)\npicking this:\n  mkdisjoint A ?i \\<in> measurable_sets M\n  measure_space M", "have \n      un: \"(\\<Union>i. if i\\<le>n then mkdisjoint A i else {}) \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  mkdisjoint A ?i \\<in> measurable_sets M\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n    \\<in> measurable_sets M", "by (simp add: measure_space_def sigma_algebra_def cong add: SUP_cong_simp)"], ["proof (state)\nthis:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from i ms"], ["proof (chain)\npicking this:\n  mkdisjoint A ?i \\<in> measurable_sets M\n  measure_space M", "have \n      \"range (\\<lambda>i. if i\\<le>n then mkdisjoint A i else {}) \\<subseteq> measurable_sets M\""], ["proof (prove)\nusing this:\n  mkdisjoint A ?i \\<in> measurable_sets M\n  measure_space M\n\ngoal (1 subgoal):\n 1. range (\\<lambda>i. if i \\<le> n then mkdisjoint A i else {})\n    \\<subseteq> measurable_sets M", "by (auto simp add: measure_space_def sigma_algebra_def)"], ["proof (state)\nthis:\n  range (\\<lambda>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<subseteq> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  range (\\<lambda>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<subseteq> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from up"], ["proof (chain)\npicking this:\n  A ?n \\<subseteq> A (Suc ?n)", "have \"\\<forall>i j. i \\<noteq> j \\<longrightarrow> \n      (if i\\<le>n then mkdisjoint A i else {}) \\<inter> \n      (if j\\<le>n then mkdisjoint A j else {}) = {}\""], ["proof (prove)\nusing this:\n  A ?n \\<subseteq> A (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i \\<noteq> j \\<longrightarrow>\n       (if i \\<le> n then mkdisjoint A i else {}) \\<inter>\n       (if j \\<le> n then mkdisjoint A j else {}) =\n       {}", "by (simp add: mkdisjoint_disj)"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     (if i \\<le> n then mkdisjoint A i else {}) \\<inter>\n     (if j \\<le> n then mkdisjoint A j else {}) =\n     {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "moreover"], ["proof (state)\nthis:\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     (if i \\<le> n then mkdisjoint A i else {}) \\<inter>\n     (if j \\<le> n then mkdisjoint A j else {}) =\n     {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "note ms"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "ultimately"], ["proof (chain)\npicking this:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<in> measurable_sets M\n  range (\\<lambda>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<subseteq> measurable_sets M\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     (if i \\<le> n then mkdisjoint A i else {}) \\<inter>\n     (if j \\<le> n then mkdisjoint A j else {}) =\n     {}\n  measure_space M", "have \n      \"measure M (A n) = (\\<Sum>i. measure M (if i \\<le> n then mkdisjoint A i else {}))\""], ["proof (prove)\nusing this:\n  Measure.measure M (A n) =\n  Measure.measure M (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  (\\<Union>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<in> measurable_sets M\n  range (\\<lambda>i. if i \\<le> n then mkdisjoint A i else {})\n  \\<subseteq> measurable_sets M\n  \\<forall>i j.\n     i \\<noteq> j \\<longrightarrow>\n     (if i \\<le> n then mkdisjoint A i else {}) \\<inter>\n     (if j \\<le> n then mkdisjoint A j else {}) =\n     {}\n  measure_space M\n\ngoal (1 subgoal):\n 1. Measure.measure M (A n) =\n    (\\<Sum>i. Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))", "by (simp add: measure_space_def countably_additive_def sums_unique cong add: SUP_cong_simp)"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  (\\<Sum>i. Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  (\\<Sum>i. Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \n      \"\\<forall>i. (Suc n)\\<le>i \\<longrightarrow> measure M (if i \\<le> n then mkdisjoint A i else {}) = 0\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<ge>Suc n.\n       Measure.measure M (if i \\<le> n then mkdisjoint A i else {}) = 0", "by (simp add: measure_space_def positive_def)"], ["proof (state)\nthis:\n  \\<forall>i\\<ge>Suc n.\n     Measure.measure M (if i \\<le> n then mkdisjoint A i else {}) = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"(\\<lambda>i. measure M (if i \\<le> n then mkdisjoint A i else {})) sums\n      (\\<Sum>i<Suc n. measure M (if i \\<le> n then mkdisjoint A i else {}))\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<ge>Suc n.\n     Measure.measure M (if i \\<le> n then mkdisjoint A i else {}) = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) sums\n    (\\<Sum>i<Suc n.\n        Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))", "by (intro sums_finite) auto"], ["proof (state)\nthis:\n  (\\<lambda>i.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) sums\n  (\\<Sum>i<Suc n.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "hence \"(\\<Sum>i. measure M (if i \\<le> n then mkdisjoint A i else {})) = \n      (\\<Sum>i<Suc n. measure M (if i \\<le> n then mkdisjoint A i else {}))\""], ["proof (prove)\nusing this:\n  (\\<lambda>i.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) sums\n  (\\<Sum>i<Suc n.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i.\n        Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) =\n    (\\<Sum>i<Suc n.\n        Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))", "by (rule sums_unique[THEN sym])"], ["proof (state)\nthis:\n  (\\<Sum>i. Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) =\n  (\\<Sum>i<Suc n.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i. Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) =\n  (\\<Sum>i<Suc n.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "have \"\\<dots> = (\\<Sum>i<Suc n. measure M (mkdisjoint A i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n.\n        Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) =\n    (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc n.\n      Measure.measure M (if i \\<le> n then mkdisjoint A i else {})) =\n  (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "finally"], ["proof (chain)\npicking this:\n  Measure.measure M (A n) =\n  (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))", "have \n      \"measure M (A n) = (\\<Sum>i<Suc n. measure M (mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  Measure.measure M (A n) =\n  (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. Measure.measure M (A n) =\n    (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))", "."], ["proof (state)\nthis:\n  Measure.measure M (A n) =\n  (\\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "}"], ["proof (state)\nthis:\n  Measure.measure M (A ?n2) =\n  (\\<Sum>i<Suc ?n2. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n  Measure.measure M (A ?n2) =\n  (\\<Sum>i<Suc ?n2. Measure.measure M (mkdisjoint A i))", "have \n    \"(\\<lambda>n. measure M (A n)) \\<longlonglongrightarrow> (measure M (\\<Union>i. mkdisjoint A i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<Suc n. Measure.measure M (mkdisjoint A i))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n  Measure.measure M (A ?n2) =\n  (\\<Sum>i<Suc ?n2. Measure.measure M (mkdisjoint A i))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M\n                               (\\<Union> (range (mkdisjoint A)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (A n))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "with AB"], ["proof (chain)\npicking this:\n  A\\<up>B\n  (\\<lambda>n. Measure.measure M (A n))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))", "show ?thesis"], ["proof (prove)\nusing this:\n  A\\<up>B\n  (\\<lambda>n. Measure.measure M (A n))\n  \\<longlonglongrightarrow> Measure.measure M\n                             (\\<Union> (range (mkdisjoint A)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (A n))\n    \\<longlonglongrightarrow> Measure.measure M B", "by (simp add: mkdisjoint_mon_conv)"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (A n))\n  \\<longlonglongrightarrow> Measure.measure M B\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)\n\n\n(*<*)"], ["", "primrec trivial_series2:: \"'a set \\<Rightarrow> 'a set \\<Rightarrow> (nat \\<Rightarrow> 'a set)\"\nwhere\n  \"trivial_series2 a b 0 = a\"\n| \"trivial_series2 a b (Suc n) = (if (n=0) then b else {})\""], ["", "lemma measure_additive: assumes ms: \"measure_space M\"\n  and disj: \"a \\<inter> b = {}\" and a: \"a \\<in> measurable_sets M\"\n  and b:\"b \\<in> measurable_sets M\"\n  shows \"measure M (a \\<union> b) = measure M a + measure M b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "have \"(a \\<union> b) = (\\<Union>i. trivial_series2 a b i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<union> b = \\<Union> (range (trivial_series2 a b))", "proof (rule set_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "assume \"x \\<in> a \\<union> b\""], ["proof (state)\nthis:\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "hence \"\\<exists>i. x \\<in> trivial_series2 a b i\""], ["proof (prove)\nusing this:\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> trivial_series2 a b i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> a \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i\n 2. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "assume \"x \\<in> a\""], ["proof (state)\nthis:\n  x \\<in> a\n\ngoal (2 subgoals):\n 1. x \\<in> a \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i\n 2. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "hence \"x \\<in> trivial_series2 a b 0\""], ["proof (prove)\nusing this:\n  x \\<in> a\n\ngoal (1 subgoal):\n 1. x \\<in> trivial_series2 a b 0", "by simp"], ["proof (state)\nthis:\n  x \\<in> trivial_series2 a b 0\n\ngoal (2 subgoals):\n 1. x \\<in> a \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i\n 2. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "thus \"\\<exists>i. x \\<in> trivial_series2 a b i\""], ["proof (prove)\nusing this:\n  x \\<in> trivial_series2 a b 0\n\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> trivial_series2 a b i", "by fast"], ["proof (state)\nthis:\n  \\<exists>i. x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "assume \"x \\<in> b\""], ["proof (state)\nthis:\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "hence \"x \\<in> trivial_series2 a b 1\""], ["proof (prove)\nusing this:\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. x \\<in> trivial_series2 a b 1", "by simp"], ["proof (state)\nthis:\n  x \\<in> trivial_series2 a b 1\n\ngoal (1 subgoal):\n 1. x \\<in> b \\<Longrightarrow> \\<exists>i. x \\<in> trivial_series2 a b i", "thus \"\\<exists>i. x \\<in> trivial_series2 a b i\""], ["proof (prove)\nusing this:\n  x \\<in> trivial_series2 a b 1\n\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> trivial_series2 a b i", "by fast"], ["proof (state)\nthis:\n  \\<exists>i. x \\<in> trivial_series2 a b i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i. x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "}"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  \\<exists>i. x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "hence \"(x \\<in> a \\<union> b) \\<Longrightarrow> (x \\<in> (\\<Union>i. trivial_series2 a b i))\""], ["proof (prove)\nusing this:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  \\<exists>i. x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. x \\<in> a \\<union> b \\<Longrightarrow>\n    x \\<in> \\<Union> (range (trivial_series2 a b))", "by simp"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "also"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "{"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "assume \"x \\<in> (\\<Union>i. trivial_series2 a b i)\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (range (trivial_series2 a b))", "obtain i where x: \"x \\<in> trivial_series2 a b i\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        x \\<in> trivial_series2 a b i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "hence \"x \\<in> a \\<union> b\""], ["proof (prove)\nusing this:\n  x \\<in> trivial_series2 a b i\n\ngoal (1 subgoal):\n 1. x \\<in> a \\<union> b", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> trivial_series2 a b i; i = 0\\<rbrakk>\n    \\<Longrightarrow> x \\<in> a \\<union> b\n 2. \\<And>nat.\n       \\<lbrakk>x \\<in> trivial_series2 a b i; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> a \\<union> b", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> trivial_series2 a b i; i = 0\\<rbrakk>\n    \\<Longrightarrow> x \\<in> a \\<union> b\n 2. \\<And>nat.\n       \\<lbrakk>x \\<in> trivial_series2 a b i; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> a \\<union> b", "with x"], ["proof (chain)\npicking this:\n  x \\<in> trivial_series2 a b i\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> trivial_series2 a b i\n  i = 0\n\ngoal (1 subgoal):\n 1. x \\<in> a \\<union> b", "by simp"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>x \\<in> trivial_series2 a b i; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> a \\<union> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>x \\<in> trivial_series2 a b i; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> a \\<union> b", "case (Suc n)"], ["proof (state)\nthis:\n  i = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>x \\<in> trivial_series2 a b i; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> a \\<union> b", "with x"], ["proof (chain)\npicking this:\n  x \\<in> trivial_series2 a b i\n  i = Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> trivial_series2 a b i\n  i = Suc n\n\ngoal (1 subgoal):\n 1. x \\<in> a \\<union> b", "by (cases n) auto"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "}"], ["proof (state)\nthis:\n  x \\<in> \\<Union> (range (trivial_series2 a b)) \\<Longrightarrow>\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> a \\<union> b) =\n       (x \\<in> \\<Union> (range (trivial_series2 a b)))", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n  x \\<in> \\<Union> (range (trivial_series2 a b)) \\<Longrightarrow>\n  x \\<in> a \\<union> b", "show \"(x \\<in> a \\<union> b) = (x \\<in> (\\<Union>i. trivial_series2 a b i))\""], ["proof (prove)\nusing this:\n  x \\<in> a \\<union> b \\<Longrightarrow>\n  x \\<in> \\<Union> (range (trivial_series2 a b))\n  x \\<in> \\<Union> (range (trivial_series2 a b)) \\<Longrightarrow>\n  x \\<in> a \\<union> b\n\ngoal (1 subgoal):\n 1. (x \\<in> a \\<union> b) =\n    (x \\<in> \\<Union> (range (trivial_series2 a b)))", "by fast"], ["proof (state)\nthis:\n  (x \\<in> a \\<union> b) = (x \\<in> \\<Union> (range (trivial_series2 a b)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<union> b = \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "also"], ["proof (state)\nthis:\n  a \\<union> b = \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "{"], ["proof (state)\nthis:\n  a \\<union> b = \\<Union> (range (trivial_series2 a b))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "from a b ms"], ["proof (chain)\npicking this:\n  a \\<in> measurable_sets M\n  b \\<in> measurable_sets M\n  measure_space M", "have \"trivial_series2 a b i \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  a \\<in> measurable_sets M\n  b \\<in> measurable_sets M\n  measure_space M\n\ngoal (1 subgoal):\n 1. trivial_series2 a b i \\<in> measurable_sets M", "by (cases i) (auto simp add: measure_space_def sigma_algebra_def)"], ["proof (state)\nthis:\n  trivial_series2 a b i \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "}"], ["proof (state)\nthis:\n  trivial_series2 a b ?i2 \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "hence m1: \"range (trivial_series2 a b) \\<subseteq> measurable_sets M\"\n    and m2: \"(\\<Union>i. trivial_series2 a b i) \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  trivial_series2 a b ?i2 \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. range (trivial_series2 a b) \\<subseteq> measurable_sets M &&&\n    \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M", "using ms"], ["proof (prove)\nusing this:\n  trivial_series2 a b ?i2 \\<in> measurable_sets M\n  measure_space M\n\ngoal (1 subgoal):\n 1. range (trivial_series2 a b) \\<subseteq> measurable_sets M &&&\n    \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M", "by (auto simp add: measure_space_def sigma_algebra_def)"], ["proof (state)\nthis:\n  range (trivial_series2 a b) \\<subseteq> measurable_sets M\n  \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "{"], ["proof (state)\nthis:\n  range (trivial_series2 a b) \\<subseteq> measurable_sets M\n  \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "assume \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "hence \"trivial_series2 a b i \\<inter> trivial_series2 a b j = {}\""], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. trivial_series2 a b i \\<inter> trivial_series2 a b j = {}", "using disj"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  a \\<inter> b = {}\n\ngoal (1 subgoal):\n 1. trivial_series2 a b i \\<inter> trivial_series2 a b j = {}", "by (cases i, cases j, auto)(cases j, auto)"], ["proof (state)\nthis:\n  trivial_series2 a b i \\<inter> trivial_series2 a b j = {}\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "}"], ["proof (state)\nthis:\n  ?i2 \\<noteq> ?j2 \\<Longrightarrow>\n  trivial_series2 a b ?i2 \\<inter> trivial_series2 a b ?j2 = {}\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "with m1 m2"], ["proof (chain)\npicking this:\n  range (trivial_series2 a b) \\<subseteq> measurable_sets M\n  \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M\n  ?i2 \\<noteq> ?j2 \\<Longrightarrow>\n  trivial_series2 a b ?i2 \\<inter> trivial_series2 a b ?j2 = {}", "have \"(\\<lambda>n. measure M (trivial_series2 a b n)) sums  measure M (\\<Union>i. trivial_series2 a b i)\""], ["proof (prove)\nusing this:\n  range (trivial_series2 a b) \\<subseteq> measurable_sets M\n  \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M\n  ?i2 \\<noteq> ?j2 \\<Longrightarrow>\n  trivial_series2 a b ?i2 \\<inter> trivial_series2 a b ?j2 = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n    Measure.measure M (\\<Union> (range (trivial_series2 a b)))", "using ms"], ["proof (prove)\nusing this:\n  range (trivial_series2 a b) \\<subseteq> measurable_sets M\n  \\<Union> (range (trivial_series2 a b)) \\<in> measurable_sets M\n  ?i2 \\<noteq> ?j2 \\<Longrightarrow>\n  trivial_series2 a b ?i2 \\<inter> trivial_series2 a b ?j2 = {}\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n    Measure.measure M (\\<Union> (range (trivial_series2 a b)))", "by (simp add: measure_space_def countably_additive_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  Measure.measure M (\\<Union> (range (trivial_series2 a b)))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  Measure.measure M (\\<Union> (range (trivial_series2 a b)))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"\\<forall>m. Suc(Suc 0) \\<le> m \\<longrightarrow> measure M (trivial_series2 a b m) = 0\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>Suc (Suc 0).\n       Measure.measure M (trivial_series2 a b m) = 0", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>measure_space M; Suc (Suc 0) \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Measure.measure M (trivial_series2 a b m) = 0", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>measure_space M; Suc (Suc 0) \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Measure.measure M (trivial_series2 a b m) = 0", "assume \"Suc (Suc 0) \\<le> m\""], ["proof (state)\nthis:\n  Suc (Suc 0) \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>measure_space M; Suc (Suc 0) \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Measure.measure M (trivial_series2 a b m) = 0", "thus \"measure M (trivial_series2 a b m) = 0\""], ["proof (prove)\nusing this:\n  Suc (Suc 0) \\<le> m\n\ngoal (1 subgoal):\n 1. Measure.measure M (trivial_series2 a b m) = 0", "using ms"], ["proof (prove)\nusing this:\n  Suc (Suc 0) \\<le> m\n  measure_space M\n\ngoal (1 subgoal):\n 1. Measure.measure M (trivial_series2 a b m) = 0", "by (cases m) (auto simp add: measure_space_def positive_def)"], ["proof (state)\nthis:\n  Measure.measure M (trivial_series2 a b m) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>Suc (Suc 0). Measure.measure M (trivial_series2 a b m) = 0\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "hence \"(\\<lambda>n. measure M (trivial_series2 a b n)) sums (\\<Sum>n<Suc(Suc 0). measure M (trivial_series2 a b n))\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<ge>Suc (Suc 0). Measure.measure M (trivial_series2 a b m) = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n    (\\<Sum>n<Suc (Suc 0). Measure.measure M (trivial_series2 a b n))", "by (intro sums_finite) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  (\\<Sum>n<Suc (Suc 0). Measure.measure M (trivial_series2 a b n))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  (\\<Sum>n<Suc (Suc 0). Measure.measure M (trivial_series2 a b n))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "have \"(\\<Sum>n=0..<Suc(Suc 0). measure M (trivial_series2 a b n)) =\n    measure M a + measure M b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 0..<Suc (Suc 0). Measure.measure M (trivial_series2 a b n)) =\n    Measure.measure M a + Measure.measure M b", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n = 0..<Suc (Suc 0). Measure.measure M (trivial_series2 a b n)) =\n  Measure.measure M a + Measure.measure M b\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "ultimately"], ["proof (chain)\npicking this:\n  a \\<union> b = \\<Union> (range (trivial_series2 a b))\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  Measure.measure M (\\<Union> (range (trivial_series2 a b)))\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  (\\<Sum>n<Suc (Suc 0). Measure.measure M (trivial_series2 a b n))\n  (\\<Sum>n = 0..<Suc (Suc 0). Measure.measure M (trivial_series2 a b n)) =\n  Measure.measure M a + Measure.measure M b", "have \"measure M (a \\<union> b) = (\\<Sum>n. measure M (trivial_series2 a b n))\"\n    and \"Measure.measure M a + Measure.measure M b = (\\<Sum>n. measure M (trivial_series2 a b n))\""], ["proof (prove)\nusing this:\n  a \\<union> b = \\<Union> (range (trivial_series2 a b))\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  Measure.measure M (\\<Union> (range (trivial_series2 a b)))\n  (\\<lambda>n. Measure.measure M (trivial_series2 a b n)) sums\n  (\\<Sum>n<Suc (Suc 0). Measure.measure M (trivial_series2 a b n))\n  (\\<Sum>n = 0..<Suc (Suc 0). Measure.measure M (trivial_series2 a b n)) =\n  Measure.measure M a + Measure.measure M b\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    (\\<Sum>n. Measure.measure M (trivial_series2 a b n)) &&&\n    Measure.measure M a + Measure.measure M b =\n    (\\<Sum>n. Measure.measure M (trivial_series2 a b n))", "by (simp_all add: sums_unique)"], ["proof (state)\nthis:\n  Measure.measure M (a \\<union> b) =\n  (\\<Sum>n. Measure.measure M (trivial_series2 a b n))\n  Measure.measure M a + Measure.measure M b =\n  (\\<Sum>n. Measure.measure M (trivial_series2 a b n))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "thus ?thesis"], ["proof (prove)\nusing this:\n  Measure.measure M (a \\<union> b) =\n  (\\<Sum>n. Measure.measure M (trivial_series2 a b n))\n  Measure.measure M a + Measure.measure M b =\n  (\\<Sum>n. Measure.measure M (trivial_series2 a b n))\n\ngoal (1 subgoal):\n 1. Measure.measure M (a \\<union> b) =\n    Measure.measure M a + Measure.measure M b", "by simp"], ["proof (state)\nthis:\n  Measure.measure M (a \\<union> b) =\n  Measure.measure M a + Measure.measure M b\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "end"]]}