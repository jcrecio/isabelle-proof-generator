{"file_name": "/home/qj213/afp-2021-10-22/thys/Integration/RealRandVar.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Integration", "problem_names": ["lemma char_empty: \"\\<chi> {} = (\\<lambda>t. 0)\"", "lemma assumes sigma: \"sigma_algebra S\"\n  shows const_measurable: \"(\\<lambda>x. (c::real)) \\<in> measurable S X\"", "theorem assumes ms: \"measure_space M\"\n  shows const_rv: \"(\\<lambda>x. c) \\<in> rv M\"", "lemma assumes a: \"a \\<in> S\" and sigma: \"sigma_algebra S\" shows \nchar_measurable : \"\\<chi> a \\<in> measurable S x\"", "theorem assumes ms: \"measure_space M\" and A: \"A \\<in> measurable_sets M\"\n  shows char_rv: \"\\<chi> A \\<in> rv M\"", "theorem assumes ms: \"measure_space M\" shows \n  rv_le_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\"", "lemma assumes sigma: \"sigma_algebra A\" and le: \"\\<forall>a. {w. f w \\<le> a} \\<in> A\" \n  shows le_less: \"\\<forall>a. {w. f w < (a::real)} \\<in> A\"", "lemma assumes sigma: \"sigma_algebra A\" and less: \"\\<forall>a. {w. f w < a} \\<in> A\" \n  shows less_ge: \"\\<forall>a. {w. (a::real) \\<le> f w} \\<in> A\"", "lemma assumes sigma: \"sigma_algebra A\" and ge: \"\\<forall>a. {w. a \\<le> f w} \\<in> A\" \n  shows ge_gr: \"\\<forall>a. {w. (a::real) < f w} \\<in> A\"", "lemma assumes sigma: \"sigma_algebra A\" and gr: \"\\<forall>a. {w. a < f w} \\<in> A\" \n  shows gr_le: \"\\<forall>a. {w. f w \\<le> (a::real)} \\<in> A\"", "theorem assumes ms: \"measure_space M\" shows \n  rv_ge_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\"", "theorem assumes ms: \"measure_space M\" shows \n  rv_gr_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\"", "theorem assumes ms: \"measure_space M\" shows \n  rv_less_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\"", "lemma assumes g: \"g \\<in> rv M\" \n  shows affine_rv: \"(\\<lambda>x. (a::real) + (g x) * b) \\<in> rv M\"", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows rv_less_rv_measurable: \"{w. f w < g w} \\<in> measurable_sets M\"", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows rv_le_rv_measurable: \"{w. f w \\<le> g w} \\<in> measurable_sets M\" (is \"?a \\<in> ?M\")", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows f_eq_g_measurable: \"{w. f w = g w} \\<in> measurable_sets M\" (*<*)(is \"?a \\<in> ?M\")", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows f_noteq_g_measurable: \"{w. f w \\<noteq> g w} \\<in> measurable_sets M\" (*<*)(is \"?a \\<in> ?M\")", "theorem assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows rv_plus_rv: \"(\\<lambda>w. f w + g w) \\<in> rv M\"", "lemma pow2_le_abs: \"(a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b::real\\<bar>)\"", "lemma assumes f: \"f \\<in> rv M\" \n  shows rv_square: \"(\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M\"", "lemma realpow_two_binomial_iff: \"(f+g::real)\\<^sup>2 = f\\<^sup>2 + 2*(f*g) + g\\<^sup>2\"", "lemma times_iff_sum_squares: \"f*g = (f+g)\\<^sup>2/4 - (f-g)\\<^sup>2/(4::real)\"", "theorem assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows rv_times_rv: \"(\\<lambda>w. f w * g w) \\<in> rv M\"", "theorem rv_minus_rv:\n  assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows \"(\\<lambda>t. f t - g t) \\<in> rv M\"", "theorem assumes u: \"\\<And>n. u n \\<in> rv M\" and mon_conv: \"u\\<up>f\"\n  shows mon_conv_rv: \"f \\<in> rv M\"", "lemma f_plus_minus: \"((f x)::real) = pp f x - np f x\"", "lemma f_plus_minus2: \"(f::'a \\<Rightarrow> real) = (\\<lambda>t. pp f t - np f t)\"", "lemma f_abs_plus_minus: \"(\\<bar>f x\\<bar>::real) = pp f x + np f x\"", "lemma nn_pp_np: assumes \"nonnegative f\"\n  shows \"pp f = f\" and \"np f = (\\<lambda>t. 0)\"", "lemma pos_pp_np_help: \"\\<And>x. 0\\<le>f x \\<Longrightarrow> pp f x = f x \\<and> np f x = 0\"", "lemma real_neg_pp_np_help: \"\\<And>x. f x \\<le> (0::real) \\<Longrightarrow> np f x = -f x \\<and> pp f x = 0\"", "lemma real_neg_pp_np: assumes \"f \\<le> (\\<lambda>t. (0::real))\"\n shows \"np f = (\\<lambda>t. -f t)\" and \"pp f = (\\<lambda>t. 0)\"", "lemma assumes a: \"0\\<le>(a::real)\" \n  shows real_pp_np_pos_times: \n  \"pp (\\<lambda>t. a*f t) = (\\<lambda>t. a*pp f t) \\<and>  np (\\<lambda>t. a*f t) = (\\<lambda>t. a*np f t)\"", "lemma assumes a: \"(a::real)\\<le>0\" \n  shows real_pp_np_neg_times: \n  \"pp (\\<lambda>t. a*f t) = (\\<lambda>t. -a*np f t) \\<and>  np (\\<lambda>t. a*f t) = (\\<lambda>t. -a*pp f t)\"", "lemma pp_np_rv:\n  assumes f: \"f \\<in> rv M\" \n  shows \"pp f \\<in> rv M\" and \"np f \\<in> rv M\"", "theorem pp_np_rv_iff: \"(f::'a \\<Rightarrow> real) \\<in> rv M = (pp f \\<in> rv M \\<and> np f \\<in> rv M)\""], "translations": [["", "lemma char_empty: \"\\<chi> {} = (\\<lambda>t. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> {} = (\\<lambda>t. 0)", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. \\<chi> {} t = 0", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. \\<chi> {} t = 0", "show \"\\<chi> {} t = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> {} t = 0", "by (simp add: characteristic_function_def)"], ["proof (state)\nthis:\n  \\<chi> {} t = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now that random variables are defined, we aim to show that a\n  broad class of functions belongs to them. For a constant function\n  this is easy, as there are only two possible preimages.\\<close>"], ["", "(*measurability lemmata*)"], ["", "lemma assumes sigma: \"sigma_algebra S\"\n  shows const_measurable: \"(\\<lambda>x. (c::real)) \\<in> measurable S X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) \\<in> measurable S X", "proof (unfold measurable_def, rule, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> X \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> X \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "show \"(\\<lambda>x. c) -` g \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) -` g \\<in> S", "proof (cases \"c \\<in> g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<in> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S\n 2. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "case True"], ["proof (state)\nthis:\n  c \\<in> g\n\ngoal (2 subgoals):\n 1. c \\<in> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S\n 2. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "hence \"(\\<lambda>x::'a. c) -` g = UNIV\""], ["proof (prove)\nusing this:\n  c \\<in> g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) -` g = UNIV", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g = UNIV\n\ngoal (2 subgoals):\n 1. c \\<in> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S\n 2. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g = UNIV\n\ngoal (2 subgoals):\n 1. c \\<in> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S\n 2. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "from sigma"], ["proof (chain)\npicking this:\n  sigma_algebra S", "have \"UNIV \\<in> S\""], ["proof (prove)\nusing this:\n  sigma_algebra S\n\ngoal (1 subgoal):\n 1. UNIV \\<in> S", "by (rule sigma_algebra_UNIV)"], ["proof (state)\nthis:\n  UNIV \\<in> S\n\ngoal (2 subgoals):\n 1. c \\<in> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S\n 2. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. c) -` g = UNIV\n  UNIV \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. c) -` g = UNIV\n  UNIV \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) -` g \\<in> S", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g \\<in> S\n\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "case False"], ["proof (state)\nthis:\n  c \\<notin> g\n\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "hence \"(\\<lambda>x::'a. c) -` g = {}\""], ["proof (prove)\nusing this:\n  c \\<notin> g\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) -` g = {}", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g = {}\n\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g = {}\n\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "from sigma"], ["proof (chain)\npicking this:\n  sigma_algebra S", "have \"{} \\<in> S\""], ["proof (prove)\nusing this:\n  sigma_algebra S\n\ngoal (1 subgoal):\n 1. {} \\<in> S", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  {} \\<in> S\n\ngoal (1 subgoal):\n 1. c \\<notin> g \\<Longrightarrow> (\\<lambda>x. c) -` g \\<in> S", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. c) -` g = {}\n  {} \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. c) -` g = {}\n  {} \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) -` g \\<in> S", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g \\<in> S\n\ngoal:\nNo subgoals!", "txt\\<open>\\nopagebreak\\<close>"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. c) -` g \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem assumes ms: \"measure_space M\"\n  shows const_rv: \"(\\<lambda>x. c) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) \\<in> rv M", "using ms"], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c) \\<in> rv M", "by (auto simp only: measure_space_def const_measurable rv_def)"], ["", "text\\<open>Characteristic functions produce four cases already, so the\n  details are glossed over.\\<close>"], ["", "lemma assumes a: \"a \\<in> S\" and sigma: \"sigma_algebra S\" shows \nchar_measurable : \"\\<chi> a \\<in> measurable S x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "have \"\\<chi> a -` g \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "proof (cases \"1 \\<in> g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 1 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case True"], ["proof (state)\nthis:\n  1 \\<in> g\n\ngoal (2 subgoals):\n 1. 1 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 1 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "proof (cases \"0 \\<in> g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case True"], ["proof (state)\nthis:\n  0 \\<in> g\n\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with \\<open>1 \\<in> g\\<close>"], ["proof (chain)\npicking this:\n  1 \\<in> g\n  0 \\<in> g", "have \"\\<chi> a -` g = UNIV\""], ["proof (prove)\nusing this:\n  1 \\<in> g\n  0 \\<in> g\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g = UNIV", "by (auto simp add: vimage_def characteristic_function_def)"], ["proof (state)\nthis:\n  \\<chi> a -` g = UNIV\n\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with sigma"], ["proof (chain)\npicking this:\n  sigma_algebra S\n  \\<chi> a -` g = UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  sigma_algebra S\n  \\<chi> a -` g = UNIV\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "by (auto simp add: sigma_algebra_UNIV)"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case False"], ["proof (state)\nthis:\n  0 \\<notin> g\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with \\<open>1 \\<in> g\\<close>"], ["proof (chain)\npicking this:\n  1 \\<in> g\n  0 \\<notin> g", "have \"\\<chi> a -` g = a\""], ["proof (prove)\nusing this:\n  1 \\<in> g\n  0 \\<notin> g\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g = a", "by (auto simp add: vimage_def characteristic_function_def)"], ["proof (state)\nthis:\n  \\<chi> a -` g = a\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with a"], ["proof (chain)\npicking this:\n  a \\<in> S\n  \\<chi> a -` g = a", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> S\n  \\<chi> a -` g = a\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "by simp"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal (1 subgoal):\n 1. 1 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case False"], ["proof (state)\nthis:\n  1 \\<notin> g\n\ngoal (1 subgoal):\n 1. 1 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "proof (cases \"0 \\<in> g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case True"], ["proof (state)\nthis:\n  0 \\<in> g\n\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with \\<open>1 \\<notin> g\\<close>"], ["proof (chain)\npicking this:\n  1 \\<notin> g\n  0 \\<in> g", "have \"\\<chi> a -` g = -a\""], ["proof (prove)\nusing this:\n  1 \\<notin> g\n  0 \\<in> g\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g = - a", "by (auto simp add: vimage_def characteristic_function_def)"], ["proof (state)\nthis:\n  \\<chi> a -` g = - a\n\ngoal (2 subgoals):\n 1. 0 \\<in> g \\<Longrightarrow> \\<chi> a -` g \\<in> S\n 2. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with a sigma"], ["proof (chain)\npicking this:\n  a \\<in> S\n  sigma_algebra S\n  \\<chi> a -` g = - a", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> S\n  sigma_algebra S\n  \\<chi> a -` g = - a\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "by (simp add: sigma_algebra_def)"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "case False"], ["proof (state)\nthis:\n  0 \\<notin> g\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "with \\<open>1 \\<notin> g\\<close>"], ["proof (chain)\npicking this:\n  1 \\<notin> g\n  0 \\<notin> g", "have \"\\<chi> a -` g = {}\""], ["proof (prove)\nusing this:\n  1 \\<notin> g\n  0 \\<notin> g\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g = {}", "by (auto simp add: vimage_def characteristic_function_def)"], ["proof (state)\nthis:\n  \\<chi> a -` g = {}\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "moreover"], ["proof (state)\nthis:\n  \\<chi> a -` g = {}\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "from sigma"], ["proof (chain)\npicking this:\n  sigma_algebra S", "have \"{} \\<in> S\""], ["proof (prove)\nusing this:\n  sigma_algebra S\n\ngoal (1 subgoal):\n 1. {} \\<in> S", "by  (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  {} \\<in> S\n\ngoal (1 subgoal):\n 1. 0 \\<notin> g \\<Longrightarrow> \\<chi> a -` g \\<in> S", "ultimately"], ["proof (chain)\npicking this:\n  \\<chi> a -` g = {}\n  {} \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<chi> a -` g = {}\n  {} \\<in> S\n\ngoal (1 subgoal):\n 1. \\<chi> a -` g \\<in> S", "by simp"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<chi> a -` g \\<in> S\n\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "}"], ["proof (state)\nthis:\n  \\<chi> a -` ?g2 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<chi> a -` ?g2 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<chi> a \\<in> measurable S x", "by (unfold measurable_def) blast"], ["proof (state)\nthis:\n  \\<chi> a \\<in> measurable S x\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem assumes ms: \"measure_space M\" and A: \"A \\<in> measurable_sets M\"\n  shows char_rv: \"\\<chi> A \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> A \\<in> rv M", "using ms A"], ["proof (prove)\nusing this:\n  measure_space M\n  A \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<chi> A \\<in> rv M", "by (auto simp only: measure_space_def char_measurable rv_def)"], ["", "text \\<open>For more intricate functions, the following application of the\n  measurability lifting theorem from \\ref{sec:measure-spaces} gives a\n  useful characterization.\\<close>"], ["", "theorem assumes ms: \"measure_space M\" shows \n  rv_le_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "have \"f \\<in> rv M \\<Longrightarrow> \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> rv M \\<Longrightarrow>\n    \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "assume \"f \\<in> measurable (measurable_sets M) \\<bool>\""], ["proof (state)\nthis:\n  f \\<in> measurable (measurable_sets M) \\<bool>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "hence \"\\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  f \\<in> measurable (measurable_sets M) \\<bool>\n\ngoal (1 subgoal):\n 1. \\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M", "by (unfold measurable_def) blast"], ["proof (state)\nthis:\n  \\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  \\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "have \"{..a} \\<in> \\<bool>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..a} \\<in> \\<bool>", "by (simp only: Borelsets_def) (rule sigma.basic, blast)"], ["proof (state)\nthis:\n  {..a} \\<in> \\<bool>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M\n  {..a} \\<in> \\<bool>", "have \"{w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>\\<bool>. f -` b \\<in> measurable_sets M\n  {..a} \\<in> \\<bool>\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> a} \\<in> measurable_sets M", "by (auto simp add: vimage_def)"], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "}"], ["proof (state)\nthis:\n  f \\<in> measurable (measurable_sets M) \\<bool> \\<Longrightarrow>\n  {w. f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "thus \"\\<And>a. f \\<in> rv M \\<Longrightarrow> {w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  f \\<in> measurable (measurable_sets M) \\<bool> \\<Longrightarrow>\n  {w. f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       f \\<in> rv M \\<Longrightarrow>\n       {w. f w \\<le> a} \\<in> measurable_sets M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  f \\<in> rv M \\<Longrightarrow> {w. f w \\<le> ?a} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<in> rv M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  f \\<in> rv M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "have \"\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow> f \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    f \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    f \\<in> rv M", "assume \"\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (state)\nthis:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    f \\<in> rv M", "hence \"f \\<in> measurable (measurable_sets M){S. \\<exists>u. S={..u}}\""], ["proof (prove)\nusing this:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. f \\<in> measurable (measurable_sets M) {S. \\<exists>u. S = {..u}}", "by (auto simp add: measurable_def vimage_def)"], ["proof (state)\nthis:\n  f \\<in> measurable (measurable_sets M) {S. \\<exists>u. S = {..u}}\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    f \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> measurable (measurable_sets M) {S. \\<exists>u. S = {..u}}", "have \"f \\<in> measurable (measurable_sets M) \\<bool>\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> measurable (measurable_sets M) {S. \\<exists>u. S = {..u}}\n\ngoal (1 subgoal):\n 1. f \\<in> measurable (measurable_sets M) \\<bool>", "by (simp only: Borelsets_def measure_space_def measurable_lift)"], ["proof (state)\nthis:\n  f \\<in> measurable (measurable_sets M) \\<bool>\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    f \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> measurable (measurable_sets M) \\<bool>", "show ?thesis"], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> measurable (measurable_sets M) \\<bool>\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "by (auto simp add: rv_def)"], ["proof (state)\nthis:\n  f \\<in> rv M\n\ngoal:\nNo subgoals!", "txt\\<open>\\nopagebreak\\<close>"], ["proof (state)\nthis:\n  f \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> rv M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  f \\<in> rv M", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> rv M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "by rule"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next four lemmata allow for a ring deduction that helps establish\n  this fact for all of the signs \\<open><\\<close>, \\<open>>\\<close> and \\<open>\\<ge>\\<close> as well.\\<close>"], ["", "lemma assumes sigma: \"sigma_algebra A\" and le: \"\\<forall>a. {w. f w \\<le> a} \\<in> A\" \n  shows le_less: \"\\<forall>a. {w. f w < (a::real)} \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w < a} \\<in> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w < a} \\<in> A", "fix a::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w < a} \\<in> A", "from le sigma"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. f w \\<le> a} \\<in> A\n  sigma_algebra A", "have \"(\\<Union>n::nat. {w. f w \\<le> a - inverse (real (Suc n))}) \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>a. {w. f w \\<le> a} \\<in> A\n  sigma_algebra A\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) \\<in> A", "by (simp add: sigma_algebra_def)"], ["proof (state)\nthis:\n  (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w < a} \\<in> A", "also"], ["proof (state)\nthis:\n  (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w < a} \\<in> A", "have \"(\\<Union>n::nat. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "fix w n"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "have \"0 < inverse (real (Suc (n::nat)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < inverse (real (Suc n))", "by simp"], ["proof (state)\nthis:\n  0 < inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "hence \"f w \\<le> a - inverse (real (Suc n)) \\<Longrightarrow> f w < a\""], ["proof (prove)\nusing this:\n  0 < inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. f w \\<le> a - inverse (real (Suc n)) \\<Longrightarrow> f w < a", "by arith"], ["proof (state)\nthis:\n  f w \\<le> a - inverse (real (Suc n)) \\<Longrightarrow> f w < a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "}"], ["proof (state)\nthis:\n  f ?w2 \\<le> a - inverse (real (Suc ?n2)) \\<Longrightarrow> f ?w2 < a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "also"], ["proof (state)\nthis:\n  f ?w2 \\<le> a - inverse (real (Suc ?n2)) \\<Longrightarrow> f ?w2 < a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "{"], ["proof (state)\nthis:\n  f ?w2 \\<le> a - inverse (real (Suc ?n2)) \\<Longrightarrow> f ?w2 < a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "have \"(\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0", "by (rule LIMSEQ_inverse_real_of_nat)"], ["proof (state)\nthis:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "assume \"f w < a\""], ["proof (state)\nthis:\n  f w < a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "hence \"0 < a - f w\""], ["proof (prove)\nusing this:\n  f w < a\n\ngoal (1 subgoal):\n 1. 0 < a - f w", "by simp"], ["proof (state)\nthis:\n  0 < a - f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n  0 < a - f w", "have \n        \"\\<exists>n0. \\<forall>n. n0 \\<le> n \\<longrightarrow> abs (inverse (real (Suc n))) < a - f w\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n  0 < a - f w\n\ngoal (1 subgoal):\n 1. \\<exists>n0.\n       \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < a - f w", "by (auto simp add: lim_sequentially dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < a - f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "then"], ["proof (chain)\npicking this:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < a - f w", "obtain n where  \"abs (inverse (real (Suc n))) < a - f w\""], ["proof (prove)\nusing this:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < a - f w\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<bar>inverse (real (Suc n))\\<bar> < a - f w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<bar>inverse (real (Suc n))\\<bar> < a - f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "hence \"f w \\<le> a - inverse (real (Suc n))\""], ["proof (prove)\nusing this:\n  \\<bar>inverse (real (Suc n))\\<bar> < a - f w\n\ngoal (1 subgoal):\n 1. f w \\<le> a - inverse (real (Suc n))", "by arith"], ["proof (state)\nthis:\n  f w \\<le> a - inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "hence \"\\<exists>n. f w \\<le> a - inverse (real (Suc n))\""], ["proof (prove)\nusing this:\n  f w \\<le> a - inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. \\<exists>n. f w \\<le> a - inverse (real (Suc n))", ".."], ["proof (state)\nthis:\n  \\<exists>n. f w \\<le> a - inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "}"], ["proof (state)\nthis:\n  f ?w2 < a \\<Longrightarrow>\n  \\<exists>n. f ?w2 \\<le> a - inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "ultimately"], ["proof (chain)\npicking this:\n  f ?w2 \\<le> a - inverse (real (Suc ?n2)) \\<Longrightarrow> f ?w2 < a\n  f ?w2 < a \\<Longrightarrow>\n  \\<exists>n. f ?w2 \\<le> a - inverse (real (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  f ?w2 \\<le> a - inverse (real (Suc ?n2)) \\<Longrightarrow> f ?w2 < a\n  f ?w2 < a \\<Longrightarrow>\n  \\<exists>n. f ?w2 \\<le> a - inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>n. {w. f w \\<le> a - inverse (real (Suc n))}) = {w. f w < a}\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w < a} \\<in> A", "finally"], ["proof (chain)\npicking this:\n  {w. f w < a} \\<in> A", "show \"{w. f w < a} \\<in> A\""], ["proof (prove)\nusing this:\n  {w. f w < a} \\<in> A\n\ngoal (1 subgoal):\n 1. {w. f w < a} \\<in> A", "."], ["proof (state)\nthis:\n  {w. f w < a} \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assumes sigma: \"sigma_algebra A\" and less: \"\\<forall>a. {w. f w < a} \\<in> A\" \n  shows less_ge: \"\\<forall>a. {w. (a::real) \\<le> f w} \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a \\<le> f w} \\<in> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. a \\<le> f w} \\<in> A", "fix a::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. a \\<le> f w} \\<in> A", "from less sigma"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. f w < a} \\<in> A\n  sigma_algebra A", "have \"-{w. f w < a} \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>a. {w. f w < a} \\<in> A\n  sigma_algebra A\n\ngoal (1 subgoal):\n 1. - {w. f w < a} \\<in> A", "by (simp add: sigma_algebra_def)"], ["proof (state)\nthis:\n  - {w. f w < a} \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a \\<le> f w} \\<in> A", "also"], ["proof (state)\nthis:\n  - {w. f w < a} \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a \\<le> f w} \\<in> A", "have \"-{w. f w < a} = {w. a \\<le> f w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - {w. f w < a} = {w. a \\<le> f w}", "by auto"], ["proof (state)\nthis:\n  - {w. f w < a} = {w. a \\<le> f w}\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a \\<le> f w} \\<in> A", "finally"], ["proof (chain)\npicking this:\n  {w. a \\<le> f w} \\<in> A", "show \"{w. a \\<le> f w} \\<in> A\""], ["proof (prove)\nusing this:\n  {w. a \\<le> f w} \\<in> A\n\ngoal (1 subgoal):\n 1. {w. a \\<le> f w} \\<in> A", "."], ["proof (state)\nthis:\n  {w. a \\<le> f w} \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assumes sigma: \"sigma_algebra A\" and ge: \"\\<forall>a. {w. a \\<le> f w} \\<in> A\" \n  shows ge_gr: \"\\<forall>a. {w. (a::real) < f w} \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a < f w} \\<in> A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a < f w} \\<in> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. a < f w} \\<in> A", "fix a::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. a < f w} \\<in> A", "from ge sigma"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> A\n  sigma_algebra A", "have \"(\\<Union>n::nat. {w. a + inverse (real (Suc n)) \\<le> f w}) \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> A\n  sigma_algebra A\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) \\<in> A", "by (simp add: sigma_algebra_def)"], ["proof (state)\nthis:\n  (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a < f w} \\<in> A", "also"], ["proof (state)\nthis:\n  (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a < f w} \\<in> A", "have \"(\\<Union>n::nat. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "fix w n"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "have \"0 < inverse (real (Suc (n::nat)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < inverse (real (Suc n))", "by simp"], ["proof (state)\nthis:\n  0 < inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "hence \"a + inverse (real (Suc n)) \\<le> f w \\<Longrightarrow> a < f w\""], ["proof (prove)\nusing this:\n  0 < inverse (real (Suc n))\n\ngoal (1 subgoal):\n 1. a + inverse (real (Suc n)) \\<le> f w \\<Longrightarrow> a < f w", "by arith"], ["proof (state)\nthis:\n  a + inverse (real (Suc n)) \\<le> f w \\<Longrightarrow> a < f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "}"], ["proof (state)\nthis:\n  a + inverse (real (Suc ?n2)) \\<le> f ?w2 \\<Longrightarrow> a < f ?w2\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "also"], ["proof (state)\nthis:\n  a + inverse (real (Suc ?n2)) \\<le> f ?w2 \\<Longrightarrow> a < f ?w2\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "{"], ["proof (state)\nthis:\n  a + inverse (real (Suc ?n2)) \\<le> f ?w2 \\<Longrightarrow> a < f ?w2\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "have \"(\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0", "by (rule LIMSEQ_inverse_real_of_nat)"], ["proof (state)\nthis:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "assume \"a < f w\""], ["proof (state)\nthis:\n  a < f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "hence \"0 < f w - a\""], ["proof (prove)\nusing this:\n  a < f w\n\ngoal (1 subgoal):\n 1. 0 < f w - a", "by simp"], ["proof (state)\nthis:\n  0 < f w - a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n  0 < f w - a", "have \"\\<exists>n0. \\<forall>n. n0 \\<le> n \\<longrightarrow> abs (inverse (real (Suc n))) < f w - a\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. inverse (real (Suc n))) \\<longlonglongrightarrow> 0\n  0 < f w - a\n\ngoal (1 subgoal):\n 1. \\<exists>n0.\n       \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < f w - a", "by (auto simp add: lim_sequentially dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < f w - a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "then"], ["proof (chain)\npicking this:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < f w - a", "obtain n where  \"abs (inverse (real (Suc n))) < f w - a\""], ["proof (prove)\nusing this:\n  \\<exists>n0.\n     \\<forall>n\\<ge>n0. \\<bar>inverse (real (Suc n))\\<bar> < f w - a\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<bar>inverse (real (Suc n))\\<bar> < f w - a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<bar>inverse (real (Suc n))\\<bar> < f w - a\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "hence \"a + inverse (real (Suc n)) \\<le> f w\""], ["proof (prove)\nusing this:\n  \\<bar>inverse (real (Suc n))\\<bar> < f w - a\n\ngoal (1 subgoal):\n 1. a + inverse (real (Suc n)) \\<le> f w", "by arith"], ["proof (state)\nthis:\n  a + inverse (real (Suc n)) \\<le> f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "hence \"\\<exists>n. a + inverse (real (Suc n)) \\<le> f w\""], ["proof (prove)\nusing this:\n  a + inverse (real (Suc n)) \\<le> f w\n\ngoal (1 subgoal):\n 1. \\<exists>n. a + inverse (real (Suc n)) \\<le> f w", ".."], ["proof (state)\nthis:\n  \\<exists>n. a + inverse (real (Suc n)) \\<le> f w\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "}"], ["proof (state)\nthis:\n  a < f ?w2 \\<Longrightarrow>\n  \\<exists>n. a + inverse (real (Suc n)) \\<le> f ?w2\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "ultimately"], ["proof (chain)\npicking this:\n  a + inverse (real (Suc ?n2)) \\<le> f ?w2 \\<Longrightarrow> a < f ?w2\n  a < f ?w2 \\<Longrightarrow>\n  \\<exists>n. a + inverse (real (Suc n)) \\<le> f ?w2", "show ?thesis"], ["proof (prove)\nusing this:\n  a + inverse (real (Suc ?n2)) \\<le> f ?w2 \\<Longrightarrow> a < f ?w2\n  a < f ?w2 \\<Longrightarrow>\n  \\<exists>n. a + inverse (real (Suc n)) \\<le> f ?w2\n\ngoal (1 subgoal):\n 1. (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}", "by auto"], ["proof (state)\nthis:\n  (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>n. {w. a + inverse (real (Suc n)) \\<le> f w}) = {w. a < f w}\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. a < f w} \\<in> A", "finally"], ["proof (chain)\npicking this:\n  {w. a < f w} \\<in> A", "show \"{w. a < f w} \\<in> A\""], ["proof (prove)\nusing this:\n  {w. a < f w} \\<in> A\n\ngoal (1 subgoal):\n 1. {w. a < f w} \\<in> A", "."], ["proof (state)\nthis:\n  {w. a < f w} \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma assumes sigma: \"sigma_algebra A\" and gr: \"\\<forall>a. {w. a < f w} \\<in> A\" \n  shows gr_le: \"\\<forall>a. {w. f w \\<le> (a::real)} \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w \\<le> a} \\<in> A", "fix a::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w \\<le> a} \\<in> A", "from gr sigma"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. a < f w} \\<in> A\n  sigma_algebra A", "have \"-{w. a < f w} \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>a. {w. a < f w} \\<in> A\n  sigma_algebra A\n\ngoal (1 subgoal):\n 1. - {w. a < f w} \\<in> A", "by (simp add: sigma_algebra_def)"], ["proof (state)\nthis:\n  - {w. a < f w} \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w \\<le> a} \\<in> A", "also"], ["proof (state)\nthis:\n  - {w. a < f w} \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w \\<le> a} \\<in> A", "have \"-{w. a < f w} = {w. f w \\<le> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - {w. a < f w} = {w. f w \\<le> a}", "by auto"], ["proof (state)\nthis:\n  - {w. a < f w} = {w. f w \\<le> a}\n\ngoal (1 subgoal):\n 1. \\<And>a. {w. f w \\<le> a} \\<in> A", "finally"], ["proof (chain)\npicking this:\n  {w. f w \\<le> a} \\<in> A", "show \"{w. f w \\<le> a} \\<in> A\""], ["proof (prove)\nusing this:\n  {w. f w \\<le> a} \\<in> A\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> a} \\<in> A", "."], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem assumes ms: \"measure_space M\" shows \n  rv_ge_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"(f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)", "by (rule rv_le_iff)"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "have \"\\<dots> = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have sigma: \"sigma_algebra (measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "note less_ge le_less"], ["proof (state)\nthis:\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A", "have \"?lhs \\<Longrightarrow> ?rhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "from sigma gr_le ge_gr"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A", "have \"?rhs \\<Longrightarrow> ?lhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", ".."], ["proof (state)\nthis:\n  (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>a. {w. f w \\<le> a} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "finally"], ["proof (chain)\npicking this:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "."], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem assumes ms: \"measure_space M\" shows \n  rv_gr_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"(f \\<in> rv M) = (\\<forall>a. {w.  a \\<le> f w} \\<in> measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "by (rule rv_ge_iff)"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "have \"\\<dots> = (\\<forall>a. {w.  a < f w} \\<in> measurable_sets M)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have sigma: \"sigma_algebra (measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "note ge_gr"], ["proof (state)\nthis:\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A", "have \"?lhs \\<Longrightarrow> ?rhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. a < f w} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "from sigma less_ge le_less gr_le"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A", "have \"?rhs \\<Longrightarrow> ?lhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a < f w} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M\n  \\<forall>a. {w. a < f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", ".."], ["proof (state)\nthis:\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "finally"], ["proof (chain)\npicking this:\n  (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)", "."], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a < f w} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem assumes ms: \"measure_space M\" shows \n  rv_less_iff: \"(f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"(f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)", "by (rule rv_ge_iff)"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "have \"\\<dots> = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have sigma: \"sigma_algebra (measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "note le_less gr_le ge_gr"], ["proof (state)\nthis:\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A", "have \"?lhs \\<Longrightarrow> ?rhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w < a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a < ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. ?f w \\<le> a} \\<in> ?A\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a < ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. f w < a} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "also"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "from sigma less_ge"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A", "have \"?rhs \\<Longrightarrow> ?lhs\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<lbrakk>sigma_algebra ?A; \\<forall>a. {w. ?f w < a} \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a. {w. a \\<le> ?f w} \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. f w < a} \\<in> measurable_sets M \\<Longrightarrow>\n    \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M\n  \\<forall>a. {w. f w < a} \\<in> measurable_sets M \\<Longrightarrow>\n  \\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n    (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", ".."], ["proof (state)\nthis:\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>a. {w. a \\<le> f w} \\<in> measurable_sets M) =\n  (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "finally"], ["proof (chain)\npicking this:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "show ?thesis"], ["proof (prove)\nusing this:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)", "."], ["proof (state)\nthis:\n  (f \\<in> rv M) = (\\<forall>a. {w. f w < a} \\<in> measurable_sets M)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text \\<open>As a first application we show that addition and multiplication\n  with constants preserve measurability. This is a precursor to the\n  more general addition and multiplication theorems later on. You can see that\n  quite a few properties of the real numbers are employed.\\<close>"], ["", "lemma assumes g: \"g \\<in> rv M\" \n  shows affine_rv: \"(\\<lambda>x. (a::real) + (g x) * b) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. a + g x * b) \\<in> rv M", "proof (cases \"b=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "case True"], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "hence \"(\\<lambda>x. a + (g x) * b) = (\\<lambda>x. a)\""], ["proof (prove)\nusing this:\n  b = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a + g x * b) = (\\<lambda>x. a)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. a + g x * b) = (\\<lambda>x. a)\n\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. a + g x * b) = (\\<lambda>x. a)\n\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have \"(\\<lambda>x. a) \\<in> rv M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> rv M", "by (simp add: const_measurable rv_def measure_space_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. a) \\<in> rv M\n\ngoal (2 subgoals):\n 1. b = 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M\n 2. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. a + g x * b) = (\\<lambda>x. a)\n  (\\<lambda>x. a) \\<in> rv M", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. a + g x * b) = (\\<lambda>x. a)\n  (\\<lambda>x. a) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a + g x * b) \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. a + g x * b) \\<in> rv M\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "case False"], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "have calc: \"\\<And>x c. (a + g x * b \\<le> c) = (g x * b  \\<le> c - a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x c. (a + g x * b \\<le> c) = (g x * b \\<le> c - a)", "by arith"], ["proof (state)\nthis:\n  (a + g ?x * b \\<le> ?c) = (g ?x * b \\<le> ?c - a)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "have \"\\<forall>c. {w.  a + g w * b \\<le> c} \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "proof (cases \"b<0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "case False"], ["proof (state)\nthis:\n  \\<not> b < 0\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "with \\<open>b \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  b \\<noteq> 0\n  \\<not> b < 0", "have \"0<b\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  \\<not> b < 0\n\ngoal (1 subgoal):\n 1. 0 < b", "by arith"], ["proof (state)\nthis:\n  0 < b\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "hence \"\\<And>x c.  (g x * b  \\<le> c - a) = (g x \\<le> (c - a) / b)\""], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<And>x c. (g x * b \\<le> c - a) = (g x \\<le> (c - a) / b)", "by (rule pos_le_divide_eq [THEN sym])"], ["proof (state)\nthis:\n  (g ?x * b \\<le> ?c - a) = (g ?x \\<le> (?c - a) / b)\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "with calc"], ["proof (chain)\npicking this:\n  (a + g ?x * b \\<le> ?c) = (g ?x * b \\<le> ?c - a)\n  (g ?x * b \\<le> ?c - a) = (g ?x \\<le> (?c - a) / b)", "have \"\\<And>c. {w.  a + g w * b \\<le> c} = {w. g w \\<le> (c - a) / b}\""], ["proof (prove)\nusing this:\n  (a + g ?x * b \\<le> ?c) = (g ?x * b \\<le> ?c - a)\n  (g ?x * b \\<le> ?c - a) = (g ?x \\<le> (?c - a) / b)\n\ngoal (1 subgoal):\n 1. \\<And>c. {w. a + g w * b \\<le> c} = {w. g w \\<le> (c - a) / b}", "by simp"], ["proof (state)\nthis:\n  {w. a + g w * b \\<le> ?c} = {w. g w \\<le> (?c - a) / b}\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. a + g w * b \\<le> ?c} = {w. g w \\<le> (?c - a) / b}\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "from ms g"], ["proof (chain)\npicking this:\n  measure_space M\n  g \\<in> rv M", "have \"\\<forall>a. {w. g w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. g w \\<le> a} \\<in> measurable_sets M", "by (simp add: rv_le_iff)"], ["proof (state)\nthis:\n  \\<forall>a. {w. g w \\<le> a} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n 2. \\<not> b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. a + g w * b \\<le> ?c} = {w. g w \\<le> (?c - a) / b}\n  \\<forall>a. {w. g w \\<le> a} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. a + g w * b \\<le> ?c} = {w. g w \\<le> (?c - a) / b}\n  \\<forall>a. {w. g w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "case True"], ["proof (state)\nthis:\n  b < 0\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "hence \"\\<And>x c. (g x * b \\<le> c-a) = ((c-a)/b \\<le> g x)\""], ["proof (prove)\nusing this:\n  b < 0\n\ngoal (1 subgoal):\n 1. \\<And>x c. (g x * b \\<le> c - a) = ((c - a) / b \\<le> g x)", "by (rule neg_divide_le_eq [THEN sym])"], ["proof (state)\nthis:\n  (g ?x * b \\<le> ?c - a) = ((?c - a) / b \\<le> g ?x)\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "with calc"], ["proof (chain)\npicking this:\n  (a + g ?x * b \\<le> ?c) = (g ?x * b \\<le> ?c - a)\n  (g ?x * b \\<le> ?c - a) = ((?c - a) / b \\<le> g ?x)", "have \"\\<And>c. {w.  a + g w * b \\<le> c} = {w. (c-a)/b \\<le> g w}\""], ["proof (prove)\nusing this:\n  (a + g ?x * b \\<le> ?c) = (g ?x * b \\<le> ?c - a)\n  (g ?x * b \\<le> ?c - a) = ((?c - a) / b \\<le> g ?x)\n\ngoal (1 subgoal):\n 1. \\<And>c. {w. a + g w * b \\<le> c} = {w. (c - a) / b \\<le> g w}", "by simp"], ["proof (state)\nthis:\n  {w. a + g w * b \\<le> ?c} = {w. (?c - a) / b \\<le> g w}\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. a + g w * b \\<le> ?c} = {w. (?c - a) / b \\<le> g w}\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "from ms g"], ["proof (chain)\npicking this:\n  measure_space M\n  g \\<in> rv M", "have \"\\<forall>a. {w. a \\<le> g w } \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<forall>a. {w. a \\<le> g w} \\<in> measurable_sets M", "by (simp add: rv_ge_iff)"], ["proof (state)\nthis:\n  \\<forall>a. {w. a \\<le> g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. b < 0 \\<Longrightarrow>\n    \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. a + g w * b \\<le> ?c} = {w. (?c - a) / b \\<le> g w}\n  \\<forall>a. {w. a \\<le> g w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. a + g w * b \\<le> ?c} = {w. (?c - a) / b \\<le> g w}\n  \\<forall>a. {w. a \\<le> g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> (\\<lambda>x. a + g x * b) \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  measure_space M\n  \\<forall>c. {w. a + g w * b \\<le> c} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. a + g x * b) \\<in> rv M", "by (simp only: rv_le_iff [THEN sym])"], ["proof (state)\nthis:\n  (\\<lambda>x. a + g x * b) \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For the general case of addition, we need one more set to be\n  measurable, namely \\<open>{w. f w \\<le> g w}\\<close>. This follows from a\n  like statement for $<$. A dense and countable\n  subset of the reals is needed to establish it. \n\n  Of course, the rationals come to\n  mind. They were not available in Isabelle/HOL\\footnote{At least not\n  as a subset of the reals, to the definition of which a type of\n  positive rational numbers contributed \\cite{Fleuriot:2000:MNR}.}, so\n  I built a theory with the necessary properties on my own. [Meanwhile\n  Isabelle has proper rationals and SR's development of the rationals has been\n  moved to and merged with Isabelle's rationals.\\<close>"], ["", "(*For this theorem, we need some properties of the rational numbers\n(or any other dense and countable set in the reals - so why not use\nthe rationals?).*)"], ["", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows rv_less_rv_measurable: \"{w. f w < g w} \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "let \"?I i\" = \"let s::real = of_rat(nat_to_rat_surj i) in {w. f w < s} \\<inter> {w. s < g w}\""], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "have \"{w. f w < g w} = (\\<Union>i. ?I i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w < g w} =\n    (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "assume \"w \\<in> {w. f w < g w}\""], ["proof (state)\nthis:\n  w \\<in> {w. f w < g w}\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "hence \"f w < g w\""], ["proof (prove)\nusing this:\n  w \\<in> {w. f w < g w}\n\ngoal (1 subgoal):\n 1. f w < g w", ".."], ["proof (state)\nthis:\n  f w < g w\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "hence \"\\<exists>s\\<in>\\<rat>. f w < s \\<and> s < g w\""], ["proof (prove)\nusing this:\n  f w < g w\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>\\<rat>. f w < s \\<and> s < g w", "by (rule Rats_dense_in_real)"], ["proof (state)\nthis:\n  \\<exists>s\\<in>\\<rat>. f w < s \\<and> s < g w\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "hence \"\\<exists>s\\<in>\\<rat>. w \\<in> {w. f w < s} \\<inter> {w. s < g w}\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>\\<rat>. f w < s \\<and> s < g w\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>\\<rat>. w \\<in> {w. f w < s} \\<inter> {w. s < g w}", "by simp"], ["proof (state)\nthis:\n  \\<exists>s\\<in>\\<rat>. w \\<in> {w. f w < s} \\<inter> {w. s < g w}\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "hence \"\\<exists>i. w \\<in> ?I i\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>\\<rat>. w \\<in> {w. f w < s} \\<inter> {w. s < g w}\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       w \\<in> (let s = real_of_rat (nat_to_rat_surj i)\n                in {w. f w < s} \\<inter> {w. s < g w})", "by(simp add:Let_def)(metis surj_of_rat_nat_to_rat_surj)"], ["proof (state)\nthis:\n  \\<exists>i.\n     w \\<in> (let s = real_of_rat (nat_to_rat_surj i)\n              in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "hence \"w \\<in> (\\<Union>i. ?I i)\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     w \\<in> (let s = real_of_rat (nat_to_rat_surj i)\n              in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (1 subgoal):\n 1. w \\<in> (\\<Union>i.\n                let s = real_of_rat (nat_to_rat_surj i)\n                in {w. f w < s} \\<inter> {w. s < g w})", "by simp"], ["proof (state)\nthis:\n  w \\<in> (\\<Union>i.\n              let s = real_of_rat (nat_to_rat_surj i)\n              in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "}"], ["proof (state)\nthis:\n  ?w2 \\<in> {w. f w < g w} \\<Longrightarrow>\n  ?w2\n  \\<in> (\\<Union>i.\n            let s = real_of_rat (nat_to_rat_surj i)\n            in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (2 subgoals):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})\n 2. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "thus \"{w. f w < g w} \\<subseteq> (\\<Union>i. ?I i)\""], ["proof (prove)\nusing this:\n  ?w2 \\<in> {w. f w < g w} \\<Longrightarrow>\n  ?w2\n  \\<in> (\\<Union>i.\n            let s = real_of_rat (nat_to_rat_surj i)\n            in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (1 subgoal):\n 1. {w. f w < g w}\n    \\<subseteq> (\\<Union>i.\n                    let s = real_of_rat (nat_to_rat_surj i)\n                    in {w. f w < s} \\<inter> {w. s < g w})", ".."], ["proof (state)\nthis:\n  {w. f w < g w}\n  \\<subseteq> (\\<Union>i.\n                  let s = real_of_rat (nat_to_rat_surj i)\n                  in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "show \"(\\<Union>i. ?I i) \\<subseteq> {w. f w < g w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<subseteq> {w. f w < g w}", "by (force simp add: Let_def)"], ["proof (state)\nthis:\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  \\<subseteq> {w. f w < g w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. f w < g w} =\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. f w < g w} =\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "have \"(\\<Union>i. ?I i) \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have sig: \"sigma_algebra (measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "{"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "note sig"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"{w. f w < s} \\<in> measurable_sets M\" (is \"?a\\<in>?M\")"], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. f w < s} \\<in> measurable_sets M", "by (simp add: rv_less_iff)"], ["proof (state)\nthis:\n  {w. f w < s} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. f w < s} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "from ms g"], ["proof (chain)\npicking this:\n  measure_space M\n  g \\<in> rv M", "have \"{w. s < g w} \\<in> ?M\" (is \"?b \\<in> ?M\")"], ["proof (prove)\nusing this:\n  measure_space M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. s < g w} \\<in> measurable_sets M", "by (simp add: rv_gr_iff)"], ["proof (state)\nthis:\n  {w. s < g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  {w. f w < s} \\<in> measurable_sets M\n  {w. s < g w} \\<in> measurable_sets M", "have \"?a \\<inter> ?b \\<in> ?M\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  {w. f w < s} \\<in> measurable_sets M\n  {w. s < g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w < s} \\<inter> {w. s < g w} \\<in> measurable_sets M", "by (rule sigma_algebra_inter)"], ["proof (state)\nthis:\n  {w. f w < s} \\<inter> {w. s < g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "}"], ["proof (state)\nthis:\n  {w. f w < ?s2} \\<inter> {w. ?s2 < g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "hence \"\\<forall>i. ?I i \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  {w. f w < ?s2} \\<inter> {w. ?s2 < g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n       \\<in> measurable_sets M", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  \\<forall>i.\n     (let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n     \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "with sig"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  \\<forall>i.\n     (let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n     \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  \\<forall>i.\n     (let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n     \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<Union>i.\n        let s = real_of_rat (nat_to_rat_surj i)\n        in {w. f w < s} \\<inter> {w. s < g w})\n    \\<in> measurable_sets M", "by (auto simp only: sigma_algebra_def Let_def)"], ["proof (state)\nthis:\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. f w < g w} =\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w < g w} =\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  (\\<Union>i.\n      let s = real_of_rat (nat_to_rat_surj i)\n      in {w. f w < s} \\<inter> {w. s < g w})\n  \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w < g w} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. f w < g w} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*The preceding theorem took me about 1 month to establish through its deep dependencies*)"], ["", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows rv_le_rv_measurable: \"{w. f w \\<le> g w} \\<in> measurable_sets M\" (is \"?a \\<in> ?M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "from g f"], ["proof (chain)\npicking this:\n  g \\<in> rv M\n  f \\<in> rv M", "have \"{w. g w < f w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. g w < f w} \\<in> measurable_sets M", "by (rule rv_less_rv_measurable)"], ["proof (state)\nthis:\n  {w. g w < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. g w < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"sigma_algebra ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. g w < f w} \\<in> measurable_sets M\n  sigma_algebra (measurable_sets M)", "have \"-{w. g w < f w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  {w. g w < f w} \\<in> measurable_sets M\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. - {w. g w < f w} \\<in> measurable_sets M", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  - {w. g w < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  - {w. g w < f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "have \"-{w. g w < f w} = ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - {w. g w < f w} = {w. f w \\<le> g w}", "by auto"], ["proof (state)\nthis:\n  - {w. g w < f w} = {w. f w \\<le> g w}\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "txt\\<open>\\nopagebreak\\<close>"], ["proof (state)\nthis:\n  - {w. g w < f w} = {w. f w \\<le> g w}\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "finally"], ["proof (chain)\npicking this:\n  {w. f w \\<le> g w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w \\<le> g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M", "."], ["proof (state)\nthis:\n  {w. f w \\<le> g w} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows f_eq_g_measurable: \"{w. f w = g w} \\<in> measurable_sets M\" (*<*)(is \"?a \\<in> ?M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "hence \"sigma_algebra ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "from f g ms"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  g \\<in> rv M\n  measure_space M", "have \"{w. f w \\<le> g w} \\<in> ?M\" and \"{w. g w \\<le> f w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  g \\<in> rv M\n  measure_space M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<in> measurable_sets M &&&\n    {w. g w \\<le> f w} \\<in> measurable_sets M", "by (auto simp only: rv_le_rv_measurable)"], ["proof (state)\nthis:\n  {w. f w \\<le> g w} \\<in> measurable_sets M\n  {w. g w \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  {w. f w \\<le> g w} \\<in> measurable_sets M\n  {w. g w \\<le> f w} \\<in> measurable_sets M", "have \"{w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} \\<in> ?M\" (is \"?b \\<in> ?M\")"], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  {w. f w \\<le> g w} \\<in> measurable_sets M\n  {w. g w \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} \\<in> measurable_sets M", "by (rule sigma_algebra_inter)"], ["proof (state)\nthis:\n  {w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "have \"?b = ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} = {w. f w = g w}", "by auto"], ["proof (state)\nthis:\n  {w. f w \\<le> g w} \\<inter> {w. g w \\<le> f w} = {w. f w = g w}\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "finally"], ["proof (chain)\npicking this:\n  {w. f w = g w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w = g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "."], ["proof (state)\nthis:\n  {w. f w = g w} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows f_noteq_g_measurable: \"{w. f w \\<noteq> g w} \\<in> measurable_sets M\" (*<*)(is \"?a \\<in> ?M\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "hence \"sigma_algebra ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "from f g"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  g \\<in> rv M", "have \"{w. f w = g w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. f w = g w} \\<in> measurable_sets M", "by (rule f_eq_g_measurable)"], ["proof (state)\nthis:\n  {w. f w = g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  sigma_algebra (measurable_sets M)\n  {w. f w = g w} \\<in> measurable_sets M", "have \"-{w. f w = g w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  sigma_algebra (measurable_sets M)\n  {w. f w = g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. - {w. f w = g w} \\<in> measurable_sets M", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  - {w. f w = g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  - {w. f w = g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "have \"-{w. f w = g w} = ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - {w. f w = g w} = {w. f w \\<noteq> g w}", "by auto"], ["proof (state)\nthis:\n  - {w. f w = g w} = {w. f w \\<noteq> g w}\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "finally"], ["proof (chain)\npicking this:\n  {w. f w \\<noteq> g w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w \\<noteq> g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<noteq> g w} \\<in> measurable_sets M", "."], ["proof (state)\nthis:\n  {w. f w \\<noteq> g w} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text \\<open>With these tools, a short proof for the addition theorem is\n  possible.\\<close>"], ["", "theorem assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows rv_plus_rv: \"(\\<lambda>w. f w + g w) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "{"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "have \"{w. a \\<le> f w + g w} = {w. a + (g w)*(-1) \\<le> f w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. a \\<le> f w + g w} = {w. a + g w * - 1 \\<le> f w}", "by auto"], ["proof (state)\nthis:\n  {w. a \\<le> f w + g w} = {w. a + g w * - 1 \\<le> f w}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "moreover"], ["proof (state)\nthis:\n  {w. a \\<le> f w + g w} = {w. a + g w * - 1 \\<le> f w}\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have \"(\\<lambda>w. a + (g w)*(-1)) \\<in> rv M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. a + g w * - 1) \\<in> rv M", "by (rule affine_rv)"], ["proof (state)\nthis:\n  (\\<lambda>w. a + g w * - 1) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "with f"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  (\\<lambda>w. a + g w * - 1) \\<in> rv M", "have \"{w. a + (g w)*(-1) \\<le> f w} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  (\\<lambda>w. a + g w * - 1) \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. a + g w * - 1 \\<le> f w} \\<in> measurable_sets M", "by (simp add: rv_le_rv_measurable)"], ["proof (state)\nthis:\n  {w. a + g w * - 1 \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  {w. a \\<le> f w + g w} = {w. a + g w * - 1 \\<le> f w}\n  {w. a + g w * - 1 \\<le> f w} \\<in> measurable_sets M", "have \"{w. a \\<le> f w + g w} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  {w. a \\<le> f w + g w} = {w. a + g w * - 1 \\<le> f w}\n  {w. a + g w * - 1 \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. a \\<le> f w + g w} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. a \\<le> f w + g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "}"], ["proof (state)\nthis:\n  {w. ?a2 \\<le> f w + g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  {w. ?a2 \\<le> f w + g w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  measure_space M\n  {w. ?a2 \\<le> f w + g w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w + g w) \\<in> rv M", "by (simp add: rv_ge_iff)"], ["proof (state)\nthis:\n  (\\<lambda>w. f w + g w) \\<in> rv M\n\ngoal:\nNo subgoals!", "thm rv_ge_iff"], ["proof (state)\nthis:\n  (\\<lambda>w. f w + g w) \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>To show preservation of measurability by multiplication, it is\n  expressed by addition and squaring. This requires a few technical\n  lemmata including the one stating measurability for squares, the proof of which is skipped.\\<close>"], ["", "(*This lemma should probably be in the RealPow Theory or a special Sqroot-Theory*)"], ["", "lemma pow2_le_abs: \"(a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b::real\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "have \"(a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) =\n    (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2)", "by (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  (a\\<^sup>2 \\<le> b\\<^sup>2) =\n  (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 \\<le> b\\<^sup>2) =\n  (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "have \"\\<dots> = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2) =\n    (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\n 2. \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2", "assume \"\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (state)\nthis:\n  \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\n\ngoal (2 subgoals):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\n 2. \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2", "thus \"\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2", "by (rule power_mono) simp"], ["proof (state)\nthis:\n  \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "assume \"\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2\""], ["proof (state)\nthis:\n  \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "hence \"\\<bar>a\\<bar>^(Suc 1) \\<le> \\<bar>b\\<bar>^(Suc 1)\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> ^ Suc 1 \\<le> \\<bar>b\\<bar> ^ Suc 1", "by (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> ^ Suc 1 \\<le> \\<bar>b\\<bar> ^ Suc 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "moreover"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> ^ Suc 1 \\<le> \\<bar>b\\<bar> ^ Suc 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "have \"0 \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<bar>b\\<bar>", "by auto"], ["proof (state)\nthis:\n  0 \\<le> \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2 \\<Longrightarrow>\n    \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>a\\<bar> ^ Suc 1 \\<le> \\<bar>b\\<bar> ^ Suc 1\n  0 \\<le> \\<bar>b\\<bar>", "show \"\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> ^ Suc 1 \\<le> \\<bar>b\\<bar> ^ Suc 1\n  0 \\<le> \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>", "by (rule power_le_imp_le_base)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<bar>a\\<bar>\\<^sup>2 \\<le> \\<bar>b\\<bar>\\<^sup>2) =\n  (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "finally"], ["proof (chain)\npicking this:\n  (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "."], ["proof (state)\nthis:\n  (a\\<^sup>2 \\<le> b\\<^sup>2) = (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma assumes f: \"f \\<in> rv M\" \n  shows rv_square: \"(\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "from f"], ["proof (chain)\npicking this:\n  f \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "hence \"?thesis = (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\" (is \"_ = (\\<forall>a. ?F a \\<in> ?M)\")"], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n    (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)", "by (rule rv_le_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n  (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "also"], ["proof (state)\nthis:\n  ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n  (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "{"], ["proof (state)\nthis:\n  ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n  (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have sig: \"sigma_algebra ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. sigma_algebra (measurable_sets M)", "by (simp only: measure_space_def)"], ["proof (state)\nthis:\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "have \"?F a \\<in> ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "proof (cases \"a < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "case True"], ["proof (state)\nthis:\n  a < 0\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "{"], ["proof (state)\nthis:\n  a < 0\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "note True"], ["proof (state)\nthis:\n  a < 0\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  a < 0\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"0 \\<le> (f w)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (f w)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (f w)\\<^sup>2\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "finally"], ["proof (chain)\npicking this:\n  a < (f w)\\<^sup>2", "have \"((f w)\\<^sup>2 \\<le> a) = False\""], ["proof (prove)\nusing this:\n  a < (f w)\\<^sup>2\n\ngoal (1 subgoal):\n 1. ((f w)\\<^sup>2 \\<le> a) = False", "by simp"], ["proof (state)\nthis:\n  ((f w)\\<^sup>2 \\<le> a) = False\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "}"], ["proof (state)\nthis:\n  ((f ?w2)\\<^sup>2 \\<le> a) = False\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "hence \"?F a = {}\""], ["proof (prove)\nusing this:\n  ((f ?w2)\\<^sup>2 \\<le> a) = False\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} = {}", "by simp"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} = {}\n\ngoal (2 subgoals):\n 1. a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "thus ?thesis"], ["proof (prove)\nusing this:\n  {w. (f w)\\<^sup>2 \\<le> a} = {}\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "using sig"], ["proof (prove)\nusing this:\n  {w. (f w)\\<^sup>2 \\<le> a} = {}\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "by (simp only: sigma_algebra_def)"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "case False"], ["proof (state)\nthis:\n  \\<not> a < 0\n\ngoal (1 subgoal):\n 1. \\<not> a < 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "proof (cases \"a = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "case True"], ["proof (state)\nthis:\n  a = 0\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  a = 0\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "{"], ["proof (state)\nthis:\n  a = 0\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"0 \\<le> (f w)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (f w)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (f w)\\<^sup>2\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "hence \"((f w)\\<^sup>2 \\<le> 0) \\<Longrightarrow> ((f w)\\<^sup>2 = 0)\""], ["proof (prove)\nusing this:\n  0 \\<le> (f w)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (f w)\\<^sup>2 \\<le> 0 \\<Longrightarrow> (f w)\\<^sup>2 = 0", "by (simp only: order_antisym)"], ["proof (state)\nthis:\n  (f w)\\<^sup>2 \\<le> 0 \\<Longrightarrow> (f w)\\<^sup>2 = 0\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "hence \"((f w)\\<^sup>2 \\<le> 0) = ((f w)\\<^sup>2 = 0)\""], ["proof (prove)\nusing this:\n  (f w)\\<^sup>2 \\<le> 0 \\<Longrightarrow> (f w)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. ((f w)\\<^sup>2 \\<le> 0) = ((f w)\\<^sup>2 = 0)", "by (force simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  ((f w)\\<^sup>2 \\<le> 0) = ((f w)\\<^sup>2 = 0)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  ((f w)\\<^sup>2 \\<le> 0) = ((f w)\\<^sup>2 = 0)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"\\<dots> = (f w = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f w)\\<^sup>2 = 0) = (f w = 0)", "by simp"], ["proof (state)\nthis:\n  ((f w)\\<^sup>2 = 0) = (f w = 0)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "finally"], ["proof (chain)\npicking this:\n  ((f w)\\<^sup>2 \\<le> 0) = (f w = 0)", "have \"((f w)\\<^sup>2 \\<le> 0) = \\<dots>\""], ["proof (prove)\nusing this:\n  ((f w)\\<^sup>2 \\<le> 0) = (f w = 0)\n\ngoal (1 subgoal):\n 1. ((f w)\\<^sup>2 \\<le> 0) = (f w = 0)", "."], ["proof (state)\nthis:\n  ((f w)\\<^sup>2 \\<le> 0) = (f w = 0)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "}"], ["proof (state)\nthis:\n  ((f ?w2)\\<^sup>2 \\<le> 0) = (f ?w2 = 0)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  a = 0\n  ((f ?w2)\\<^sup>2 \\<le> 0) = (f ?w2 = 0)", "have \"?F a = {w. f w = 0}\""], ["proof (prove)\nusing this:\n  a = 0\n  ((f ?w2)\\<^sup>2 \\<le> 0) = (f ?w2 = 0)\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} = {w. f w = 0}", "by simp"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} = {w. f w = 0}\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} = {w. f w = 0}\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"\\<dots> = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w = 0} = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}", "by auto"], ["proof (state)\nthis:\n  {w. f w = 0} = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. f w = 0} = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"\\<dots> \\<in> ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"{w. f w \\<le> 0} \\<in> ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<in> measurable_sets M", "by (simp only: rv_le_iff)"], ["proof (state)\nthis:\n  {w. f w \\<le> 0} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. f w \\<le> 0} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"{w. 0 \\<le> f w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. 0 \\<le> f w} \\<in> measurable_sets M", "by (simp only: rv_ge_iff)"], ["proof (state)\nthis:\n  {w. 0 \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. f w \\<le> 0} \\<in> measurable_sets M\n  {w. 0 \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w \\<le> 0} \\<in> measurable_sets M\n  {w. 0 \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "using sig"], ["proof (prove)\nusing this:\n  {w. f w \\<le> 0} \\<in> measurable_sets M\n  {w. 0 \\<le> f w} \\<in> measurable_sets M\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "by (simp only: sigma_algebra_inter)"], ["proof (state)\nthis:\n  {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n 2. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. (f w)\\<^sup>2 \\<le> a} = {w. f w = 0}\n  {w. f w = 0} = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}\n  {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. (f w)\\<^sup>2 \\<le> a} = {w. f w = 0}\n  {w. f w = 0} = {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w}\n  {w. f w \\<le> 0} \\<inter> {w. 0 \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "case False"], ["proof (state)\nthis:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "with \\<open>\\<not> a < 0\\<close>"], ["proof (chain)\npicking this:\n  \\<not> a < 0\n  a \\<noteq> 0", "have \"0<a\""], ["proof (prove)\nusing this:\n  \\<not> a < 0\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < a", "by (simp add: order_less_le)"], ["proof (state)\nthis:\n  0 < a\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "then"], ["proof (chain)\npicking this:\n  0 < a", "have \"\\<exists> sqra. 0<sqra \\<and> sqra\\<^sup>2 = a\""], ["proof (prove)\nusing this:\n  0 < a\n\ngoal (1 subgoal):\n 1. \\<exists>sqra>0. sqra\\<^sup>2 = a", "by (simp only: realpow_pos_nth2 numeral_2_eq_2)"], ["proof (state)\nthis:\n  \\<exists>sqra>0. sqra\\<^sup>2 = a\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "then"], ["proof (chain)\npicking this:\n  \\<exists>sqra>0. sqra\\<^sup>2 = a", "have \"\\<And>w. \\<exists> sqra. ?F a = {w. -sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\""], ["proof (prove)\nusing this:\n  \\<exists>sqra>0. sqra\\<^sup>2 = a\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<exists>sqra.\n          {w. (f w)\\<^sup>2 \\<le> a} =\n          {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}", "by (force simp only: pow2_le_abs abs_le_iff)"], ["proof (state)\nthis:\n  \\<exists>sqra.\n     {w. (f w)\\<^sup>2 \\<le> a} =\n     {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "then"], ["proof (chain)\npicking this:\n  \\<exists>sqra.\n     {w. (f w)\\<^sup>2 \\<le> a} =\n     {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}", "obtain sqra where \"?F a = {w. -sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\""], ["proof (prove)\nusing this:\n  \\<exists>sqra.\n     {w. (f w)\\<^sup>2 \\<le> a} =\n     {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n\ngoal (1 subgoal):\n 1. (\\<And>sqra.\n        {w. (f w)\\<^sup>2 \\<le> a} =\n        {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} =\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} =\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "have \"\\<dots> \\<in> ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"{w. f w \\<le> sqra} \\<in> ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> sqra} \\<in> measurable_sets M", "by (simp only: rv_le_iff)"], ["proof (state)\nthis:\n  {w. f w \\<le> sqra} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. f w \\<le> sqra} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"{w. -sqra \\<le> f w} \\<in> ?M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<in> measurable_sets M", "by (simp only: rv_ge_iff)"], ["proof (state)\nthis:\n  {w. - sqra \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. f w \\<le> sqra} \\<in> measurable_sets M\n  {w. - sqra \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. f w \\<le> sqra} \\<in> measurable_sets M\n  {w. - sqra \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "using sig"], ["proof (prove)\nusing this:\n  {w. f w \\<le> sqra} \\<in> measurable_sets M\n  {w. - sqra \\<le> f w} \\<in> measurable_sets M\n  sigma_algebra (measurable_sets M)\n\ngoal (1 subgoal):\n 1. {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n    \\<in> measurable_sets M", "by (simp only: sigma_algebra_inter)"], ["proof (state)\nthis:\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow>\n    {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. (f w)\\<^sup>2 \\<le> a} =\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. (f w)\\<^sup>2 \\<le> a} =\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra}\n  {w. - sqra \\<le> f w} \\<inter> {w. f w \\<le> sqra} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "}"], ["proof (state)\nthis:\n  {w. (f w)\\<^sup>2 \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n  (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\n  {w. (f w)\\<^sup>2 \\<le> ?a2} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M) =\n  (\\<forall>a. {w. (f w)\\<^sup>2 \\<le> a} \\<in> measurable_sets M)\n  {w. (f w)\\<^sup>2 \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (f w)\\<^sup>2) \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma realpow_two_binomial_iff: \"(f+g::real)\\<^sup>2 = f\\<^sup>2 + 2*(f*g) + g\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f + g)\\<^sup>2 = f\\<^sup>2 + 2 * (f * g) + g\\<^sup>2", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f + g)\\<^sup>2 = f\\<^sup>2 + 2 * (f * g) + g\\<^sup>2", "by (simp add: power2_eq_square distrib_right distrib_left)"], ["", "(*>*)"], ["", "lemma times_iff_sum_squares: \"f*g = (f+g)\\<^sup>2/4 - (f-g)\\<^sup>2/(4::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f * g = (f + g)\\<^sup>2 / 4 - (f - g)\\<^sup>2 / 4", "by (simp add: power2_eq_square field_simps)"], ["", "theorem assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\" \n  shows rv_times_rv: \"(\\<lambda>w. f w * g w) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "have \"(\\<lambda>w. f w * g w) = (\\<lambda>w. (f w + g w)\\<^sup>2/4 - (f w - g w)\\<^sup>2/4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) =\n    (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4)", "by (simp only: times_iff_sum_squares)"], ["proof (state)\nthis:\n  (\\<lambda>w. f w * g w) =\n  (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. f w * g w) =\n  (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "have \"\\<dots> = (\\<lambda>w. (f w + g w)\\<^sup>2*inverse 4 - (f w + - g w)\\<^sup>2*inverse 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4) =\n    (\\<lambda>w.\n        (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4) =\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. (f w + g w)\\<^sup>2 / 4 - (f w - g w)\\<^sup>2 / 4) =\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "from f g"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  g \\<in> rv M", "have \"\\<dots> \\<in> rv M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n    \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "from f g"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  g \\<in> rv M", "have \"(\\<lambda>w. (f w + g w)\\<^sup>2)  \\<in> rv M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w + g w)\\<^sup>2) \\<in> rv M", "by (simp add: rv_plus_rv rv_square)"], ["proof (state)\nthis:\n  (\\<lambda>w. (f w + g w)\\<^sup>2) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "hence \"(\\<lambda>w. 0+(f w + g w)\\<^sup>2*inverse 4) \\<in> rv M\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. (f w + g w)\\<^sup>2) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. 0 + (f w + g w)\\<^sup>2 * inverse 4) \\<in> rv M", "by (rule affine_rv)"], ["proof (state)\nthis:\n  (\\<lambda>w. 0 + (f w + g w)\\<^sup>2 * inverse 4) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "also"], ["proof (state)\nthis:\n  (\\<lambda>w. 0 + (f w + g w)\\<^sup>2 * inverse 4) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "from g"], ["proof (chain)\npicking this:\n  g \\<in> rv M", "have \"(\\<lambda>w. 0 + (g w)*-1 ) \\<in> rv M\""], ["proof (prove)\nusing this:\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. 0 + g w * - 1) \\<in> rv M", "by (rule affine_rv)"], ["proof (state)\nthis:\n  (\\<lambda>w. 0 + g w * - 1) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "with f"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  (\\<lambda>w. 0 + g w * - 1) \\<in> rv M", "have \"(\\<lambda>w. (f w - g w)\\<^sup>2)  \\<in> rv M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  (\\<lambda>w. 0 + g w * - 1) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. (f w - g w)\\<^sup>2) \\<in> rv M", "by (simp add: rv_plus_rv rv_square diff_conv_add_uminus del: add_uminus_conv_diff)"], ["proof (state)\nthis:\n  (\\<lambda>w. (f w - g w)\\<^sup>2) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "hence \"(\\<lambda>w. 0+(f w - g w)\\<^sup>2*-inverse 4) \\<in> rv M\""], ["proof (prove)\nusing this:\n  (\\<lambda>w. (f w - g w)\\<^sup>2) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. 0 + (f w - g w)\\<^sup>2 * - inverse 4) \\<in> rv M", "by (rule affine_rv)"], ["proof (state)\nthis:\n  (\\<lambda>w. 0 + (f w - g w)\\<^sup>2 * - inverse 4) \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> rv M; g \\<in> rv M\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>w.\n                          (f w + g w)\\<^sup>2 * inverse 4 -\n                          (f w + - g w)\\<^sup>2 * inverse 4)\n                      \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. 0 + (f w + g w)\\<^sup>2 * inverse 4) \\<in> rv M\n  (\\<lambda>w. 0 + (f w - g w)\\<^sup>2 * - inverse 4) \\<in> rv M", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. 0 + (f w + g w)\\<^sup>2 * inverse 4) \\<in> rv M\n  (\\<lambda>w. 0 + (f w - g w)\\<^sup>2 * - inverse 4) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w.\n        (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n    \\<in> rv M", "by (simp add: rv_plus_rv diff_conv_add_uminus del: add_uminus_conv_diff)"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "txt\\<open>\\nopagebreak\\<close>"], ["proof (state)\nthis:\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>w. f w * g w) =\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  \\<in> rv M", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>w. f w * g w) =\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  (\\<lambda>w.\n      (f w + g w)\\<^sup>2 * inverse 4 - (f w + - g w)\\<^sup>2 * inverse 4)\n  \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>w. f w * g w) \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>w. f w * g w) \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The case of substraction is an easy consequence of \\<open>rv_plus_rv\\<close> and\n  \\<open>rv_times_rv\\<close>.\\<close>"], ["", "theorem rv_minus_rv:\n  assumes f: \"f \\<in> rv M\" and g: \"g \\<in> rv M\"\n  shows \"(\\<lambda>t. f t - g t) \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "from f"], ["proof (chain)\npicking this:\n  f \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "hence \"(\\<lambda>t. -1) \\<in> rv M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. - 1) \\<in> rv M", "by (simp add: const_rv)"], ["proof (state)\nthis:\n  (\\<lambda>t. - 1) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "from this g"], ["proof (chain)\npicking this:\n  (\\<lambda>t. - 1) \\<in> rv M\n  g \\<in> rv M", "have \"(\\<lambda>t. -1*g t) \\<in> rv M\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. - 1) \\<in> rv M\n  g \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. - 1 * g t) \\<in> rv M", "by (rule rv_times_rv)"], ["proof (state)\nthis:\n  (\\<lambda>t. - 1 * g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "hence \"(\\<lambda>t. -g t) \\<in> rv M\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. - 1 * g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. - g t) \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. - g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "with f"], ["proof (chain)\npicking this:\n  f \\<in> rv M\n  (\\<lambda>t. - g t) \\<in> rv M", "have \"(\\<lambda>t. f t +-g t) \\<in> rv M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n  (\\<lambda>t. - g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t + - g t) \\<in> rv M", "by (rule rv_plus_rv)"], ["proof (state)\nthis:\n  (\\<lambda>t. f t + - g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>t. f t + - g t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. f t - g t) \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. f t - g t) \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>Measurability for limit functions of\n    monotone convergent series is also surprisingly straightforward.\\<close>"], ["", "theorem assumes u: \"\\<And>n. u n \\<in> rv M\" and mon_conv: \"u\\<up>f\"\n  shows mon_conv_rv: \"f \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "from u"], ["proof (chain)\npicking this:\n  u ?n \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  u ?n \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "{"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "from mon_conv"], ["proof (chain)\npicking this:\n  u\\<up>f", "have up: \"(\\<lambda>n. u n w)\\<up>f w\""], ["proof (prove)\nusing this:\n  u\\<up>f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. u n w)\\<up>f w", "by (simp only: realfun_mon_conv_iff)"], ["proof (state)\nthis:\n  (\\<lambda>n. u n w)\\<up>f w\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "{"], ["proof (state)\nthis:\n  (\\<lambda>n. u n w)\\<up>f w\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> rv M", "from up"], ["proof (chain)\npicking this:\n  (\\<lambda>n. u n w)\\<up>f w", "have \"u i w \\<le> f w\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. u n w)\\<up>f w\n\ngoal (1 subgoal):\n 1. u i w \\<le> f w", "by (rule real_mon_conv_le)"], ["proof (state)\nthis:\n  u i w \\<le> f w\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "also"], ["proof (state)\nthis:\n  u i w \\<le> f w\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "assume \"f w \\<le> a\""], ["proof (state)\nthis:\n  f w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "finally"], ["proof (chain)\npicking this:\n  u i w \\<le> a", "have  \"u i w \\<le> a\""], ["proof (prove)\nusing this:\n  u i w \\<le> a\n\ngoal (1 subgoal):\n 1. u i w \\<le> a", "."], ["proof (state)\nthis:\n  u i w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "}"], ["proof (state)\nthis:\n  f w \\<le> a \\<Longrightarrow> u ?i2 w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "also"], ["proof (state)\nthis:\n  f w \\<le> a \\<Longrightarrow> u ?i2 w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "{"], ["proof (state)\nthis:\n  f w \\<le> a \\<Longrightarrow> u ?i2 w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "assume \"\\<And>i. u i w \\<le> a\""], ["proof (state)\nthis:\n  u ?i w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "also"], ["proof (state)\nthis:\n  u ?i w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "from up"], ["proof (chain)\npicking this:\n  (\\<lambda>n. u n w)\\<up>f w", "have \"(\\<lambda>n. u n w) \\<longlonglongrightarrow> f w\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. u n w)\\<up>f w\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. u n w) \\<longlonglongrightarrow> f w", "by (simp only: mon_conv_real_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. u n w) \\<longlonglongrightarrow> f w\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  u ?i w \\<le> a\n  (\\<lambda>n. u n w) \\<longlonglongrightarrow> f w", "have \"f w \\<le> a\""], ["proof (prove)\nusing this:\n  u ?i w \\<le> a\n  (\\<lambda>n. u n w) \\<longlonglongrightarrow> f w\n\ngoal (1 subgoal):\n 1. f w \\<le> a", "by (simp add: LIMSEQ_le_const2)"], ["proof (state)\nthis:\n  f w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "}"], ["proof (state)\nthis:\n  (\\<And>i. u i w \\<le> a) \\<Longrightarrow> f w \\<le> a\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  f w \\<le> a \\<Longrightarrow> u ?i2 w \\<le> a\n  (\\<And>i. u i w \\<le> a) \\<Longrightarrow> f w \\<le> a", "have \"(f w \\<le> a) = (\\<forall>i. u i w \\<le> a)\""], ["proof (prove)\nusing this:\n  f w \\<le> a \\<Longrightarrow> u ?i2 w \\<le> a\n  (\\<And>i. u i w \\<le> a) \\<Longrightarrow> f w \\<le> a\n\ngoal (1 subgoal):\n 1. (f w \\<le> a) = (\\<forall>i. u i w \\<le> a)", "by fast"], ["proof (state)\nthis:\n  (f w \\<le> a) = (\\<forall>i. u i w \\<le> a)\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "}"], ["proof (state)\nthis:\n  (f ?w2 \\<le> a) = (\\<forall>i. u i ?w2 \\<le> a)\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "hence \"{w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})\""], ["proof (prove)\nusing this:\n  (f ?w2 \\<le> a) = (\\<forall>i. u i ?w2 \\<le> a)\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})", "by fast"], ["proof (state)\nthis:\n  {w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "moreover"], ["proof (state)\nthis:\n  {w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "from ms u"], ["proof (chain)\npicking this:\n  measure_space M\n  u ?n \\<in> rv M", "have \"\\<And>i. {w. u i w \\<le> a} \\<in> sigma(measurable_sets M)\""], ["proof (prove)\nusing this:\n  measure_space M\n  u ?n \\<in> rv M\n\ngoal (1 subgoal):\n 1. \\<And>i. {w. u i w \\<le> a} \\<in> sigma (measurable_sets M)", "by (simp add: rv_le_iff sigma.intros)"], ["proof (state)\nthis:\n  {w. u ?i w \\<le> a} \\<in> sigma (measurable_sets M)\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "hence \"(\\<Inter>i. {w. u i w \\<le> a}) \\<in> sigma(measurable_sets M)\""], ["proof (prove)\nusing this:\n  {w. u ?i w \\<le> a} \\<in> sigma (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Inter>i. {w. u i w \\<le> a}) \\<in> sigma (measurable_sets M)", "by (rule sigma_Inter)"], ["proof (state)\nthis:\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> sigma (measurable_sets M)\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> sigma (measurable_sets M)", "have \"(\\<Inter>i. {w. u i w \\<le> a}) \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> sigma (measurable_sets M)\n\ngoal (1 subgoal):\n 1. (\\<Inter>i. {w. u i w \\<le> a}) \\<in> measurable_sets M", "by (simp only: measure_space_def sigma_sigma_algebra)"], ["proof (state)\nthis:\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "ultimately"], ["proof (chain)\npicking this:\n  {w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> measurable_sets M", "have \"{w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  {w. f w \\<le> a} = (\\<Inter>i. {w. u i w \\<le> a})\n  (\\<Inter>i. {w. u i w \\<le> a}) \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> a} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "}"], ["proof (state)\nthis:\n  {w. f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  {w. f w \\<le> ?a2} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  measure_space M\n  {w. f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "by (simp add: rv_le_iff)"], ["proof (state)\nthis:\n  f \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Before we end this chapter to start the formalization of the\n  integral proper, there is one more concept missing: The\n  positive and negative part of a function. Their definition is quite intuitive,\n  and some useful properties are given right away, including the fact\n  that they are random variables, provided that their argument\n  functions are measurable.\\<close>"], ["", "definition\n  nonnegative:: \"('a \\<Rightarrow> ('b::{ord,zero})) \\<Rightarrow> bool\" where\n  \"nonnegative f \\<longleftrightarrow> (\\<forall>x. 0 \\<le> f x)\""], ["", "definition\n  positive_part:: \"('a \\<Rightarrow> ('b::{ord,zero})) \\<Rightarrow> ('a \\<Rightarrow> 'b)\" (\"pp\") where\n  \"pp f x = (if 0\\<le>f(x) then f x else 0)\""], ["", "definition\n  negative_part:: \"('a \\<Rightarrow> ('b::{ord,zero,uminus,minus})) \\<Rightarrow> ('a \\<Rightarrow> 'b)\" (\"np\") where\n  \"np f x = (if 0\\<le>f(x) then 0 else -f(x))\""], ["", "(*useful lemmata about positive and negative parts*)"], ["", "lemma f_plus_minus: \"((f x)::real) = pp f x - np f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = pp f x - np f x", "by (simp add:positive_part_def negative_part_def)"], ["", "lemma f_plus_minus2: \"(f::'a \\<Rightarrow> real) = (\\<lambda>t. pp f t - np f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>t. pp f t - np f t)", "using f_plus_minus"], ["proof (prove)\nusing this:\n  ?f ?x = pp ?f ?x - np ?f ?x\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>t. pp f t - np f t)", "by (rule ext)"], ["", "lemma f_abs_plus_minus: \"(\\<bar>f x\\<bar>::real) = pp f x + np f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f x\\<bar> = pp f x + np f x", "by  (auto simp add:positive_part_def negative_part_def)"], ["", "lemma nn_pp_np: assumes \"nonnegative f\"\n  shows \"pp f = f\" and \"np f = (\\<lambda>t. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp f = f &&& np f = (\\<lambda>t. 0::'b)", "using assms"], ["proof (prove)\nusing this:\n  nonnegative f\n\ngoal (1 subgoal):\n 1. pp f = f &&& np f = (\\<lambda>t. 0::'b)", "by (auto simp add: positive_part_def negative_part_def nonnegative_def ext)"], ["", "lemma pos_pp_np_help: \"\\<And>x. 0\\<le>f x \\<Longrightarrow> pp f x = f x \\<and> np f x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'b) \\<le> f x \\<Longrightarrow>\n       pp f x = f x \\<and> np f x = (0::'b)", "by (simp add: positive_part_def negative_part_def)"], ["", "lemma real_neg_pp_np_help: \"\\<And>x. f x \\<le> (0::real) \\<Longrightarrow> np f x = -f x \\<and> pp f x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "assume le: \"f x \\<le> 0\""], ["proof (state)\nthis:\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "hence \"pp f x = 0 \""], ["proof (prove)\nusing this:\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. pp f x = 0", "by (cases \"f x < 0\") (auto simp add: positive_part_def)"], ["proof (state)\nthis:\n  pp f x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "also"], ["proof (state)\nthis:\n  pp f x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "from le"], ["proof (chain)\npicking this:\n  f x \\<le> 0", "have \"np f x = -f x\""], ["proof (prove)\nusing this:\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. np f x = - f x", "by (cases \"f x < 0\") (auto simp add: negative_part_def)"], ["proof (state)\nthis:\n  np f x = - f x\n\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<le> 0 \\<Longrightarrow> np f x = - f x \\<and> pp f x = 0", "ultimately"], ["proof (chain)\npicking this:\n  pp f x = 0\n  np f x = - f x", "show \"np f x = -f x \\<and> pp f x = 0\""], ["proof (prove)\nusing this:\n  pp f x = 0\n  np f x = - f x\n\ngoal (1 subgoal):\n 1. np f x = - f x \\<and> pp f x = 0", "by fast"], ["proof (state)\nthis:\n  np f x = - f x \\<and> pp f x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma real_neg_pp_np: assumes \"f \\<le> (\\<lambda>t. (0::real))\"\n shows \"np f = (\\<lambda>t. -f t)\" and \"pp f = (\\<lambda>t. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. np f = (\\<lambda>t. - f t) &&& pp f = (\\<lambda>t. 0)", "using assms"], ["proof (prove)\nusing this:\n  f \\<le> (\\<lambda>t. 0)\n\ngoal (1 subgoal):\n 1. np f = (\\<lambda>t. - f t) &&& pp f = (\\<lambda>t. 0)", "by (auto simp add: real_neg_pp_np_help ext le_fun_def)"], ["", "lemma assumes a: \"0\\<le>(a::real)\" \n  shows real_pp_np_pos_times: \n  \"pp (\\<lambda>t. a*f t) = (\\<lambda>t. a*pp f t) \\<and>  np (\\<lambda>t. a*f t) = (\\<lambda>t. a*np f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "have \"pp (\\<lambda>t. a*f t) t = a*pp f t \\<and> np (\\<lambda>t. a*f t) t = a*np f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "proof (cases \"0 \\<le> f t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "case True"], ["proof (state)\nthis:\n  0 \\<le> f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from a this a order_refl[of 0]"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 \\<le> f t\n  0 \\<le> a\n  (0::?'b1) \\<le> (0::?'b1)", "have le: \"0*0\\<le>a*f t\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 \\<le> f t\n  0 \\<le> a\n  (0::?'b1) \\<le> (0::?'b1)\n\ngoal (1 subgoal):\n 1. 0 * 0 \\<le> a * f t", "by (rule mult_mono)"], ["proof (state)\nthis:\n  0 * 0 \\<le> a * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "hence \"pp (\\<lambda>t. a*f t) t = a*f t\""], ["proof (prove)\nusing this:\n  0 * 0 \\<le> a * f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "also"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from True"], ["proof (chain)\npicking this:\n  0 \\<le> f t", "have \"\\<dots> = a*pp f t\""], ["proof (prove)\nusing this:\n  0 \\<le> f t\n\ngoal (1 subgoal):\n 1. a * f t = a * pp f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  a * f t = a * pp f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "finally"], ["proof (chain)\npicking this:\n  pp (\\<lambda>t. a * f t) t = a * pp f t", "have 1: \"pp (\\<lambda>t. a*f t) t = a*pp f t\""], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t", "."], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from le"], ["proof (chain)\npicking this:\n  0 * 0 \\<le> a * f t", "have \"np (\\<lambda>t. a*f t) t = 0\""], ["proof (prove)\nusing this:\n  0 * 0 \\<le> a * f t\n\ngoal (1 subgoal):\n 1. np (\\<lambda>t. a * f t) t = 0", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = 0\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "also"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = 0\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from True"], ["proof (chain)\npicking this:\n  0 \\<le> f t", "have \"\\<dots> = a*np f t\""], ["proof (prove)\nusing this:\n  0 \\<le> f t\n\ngoal (1 subgoal):\n 1. 0 = a * np f t", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  0 = a * np f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "finally"], ["proof (chain)\npicking this:\n  np (\\<lambda>t. a * f t) t = a * np f t", "show ?thesis"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "using 1"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = a * np f t\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "by fast"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n  np (\\<lambda>t. a * f t) t = a * np f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "hence \"f t \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. f t \\<le> 0", "by simp"], ["proof (state)\nthis:\n  f t \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from this a"], ["proof (chain)\npicking this:\n  f t \\<le> 0\n  0 \\<le> a", "have \"(f t)*a \\<le> 0*a\""], ["proof (prove)\nusing this:\n  f t \\<le> 0\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. f t * a \\<le> 0 * a", "by (rule mult_right_mono)"], ["proof (state)\nthis:\n  f t * a \\<le> 0 * a\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "hence le: \"a*f t \\<le> 0\""], ["proof (prove)\nusing this:\n  f t * a \\<le> 0 * a\n\ngoal (1 subgoal):\n 1. a * f t \\<le> 0", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  a * f t \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "hence \"pp (\\<lambda>t. a*f t) t = 0\""], ["proof (prove)\nusing this:\n  a * f t \\<le> 0\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = 0", "by (cases \"a*f t<0\") (auto simp add: positive_part_def order_le_less )"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "also"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> f t", "have \"\\<dots> = a*pp f t\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. 0 = a * pp f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  0 = a * pp f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "finally"], ["proof (chain)\npicking this:\n  pp (\\<lambda>t. a * f t) t = a * pp f t", "have 1: \"pp (\\<lambda>t. a*f t) t = a*pp f t\""], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t", "."], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from le"], ["proof (chain)\npicking this:\n  a * f t \\<le> 0", "have \"np (\\<lambda>t. a*f t) t = -a*f t\""], ["proof (prove)\nusing this:\n  a * f t \\<le> 0\n\ngoal (1 subgoal):\n 1. np (\\<lambda>t. a * f t) t = - a * f t", "by (cases \"a*f t=0\") (auto simp add: negative_part_def order_le_less)"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = - a * f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "also"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = - a * f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "from False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> f t", "have \"\\<dots> = a*np f t\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. - a * f t = a * np f t", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  - a * f t = a * np f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "finally"], ["proof (chain)\npicking this:\n  np (\\<lambda>t. a * f t) t = a * np f t", "show ?thesis"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "using 1"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = a * np f t\n  pp (\\<lambda>t. a * f t) t = a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n    np (\\<lambda>t. a * f t) t = a * np f t", "by fast"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n  np (\\<lambda>t. a * f t) t = a * np f t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * pp f t \\<and>\n  np (\\<lambda>t. a * f t) t = a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "}"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) ?t2 = a * pp f ?t2 \\<and>\n  np (\\<lambda>t. a * f t) ?t2 = a * np f ?t2\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) ?t2 = a * pp f ?t2 \\<and>\n  np (\\<lambda>t. a * f t) ?t2 = a * np f ?t2\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)", "by (simp add: ext)"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) = (\\<lambda>t. a * pp f t) \\<and>\n  np (\\<lambda>t. a * f t) = (\\<lambda>t. a * np f t)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma assumes a: \"(a::real)\\<le>0\" \n  shows real_pp_np_neg_times: \n  \"pp (\\<lambda>t. a*f t) = (\\<lambda>t. -a*np f t) \\<and>  np (\\<lambda>t. a*f t) = (\\<lambda>t. -a*pp f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "have \"pp (\\<lambda>t. a*f t) t = -a*np f t \\<and> np (\\<lambda>t. a*f t) t = -a*pp f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "proof (cases \"0 \\<le> f t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "case True"], ["proof (state)\nthis:\n  0 \\<le> f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "with a"], ["proof (chain)\npicking this:\n  a \\<le> 0\n  0 \\<le> f t", "have le: \"a*f t\\<le>0*f t\""], ["proof (prove)\nusing this:\n  a \\<le> 0\n  0 \\<le> f t\n\ngoal (1 subgoal):\n 1. a * f t \\<le> 0 * f t", "by (rule mult_right_mono)"], ["proof (state)\nthis:\n  a * f t \\<le> 0 * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "hence \"pp (\\<lambda>t. a*f t) t = 0\""], ["proof (prove)\nusing this:\n  a * f t \\<le> 0 * f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = 0", "by (simp add: real_neg_pp_np_help)"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = 0\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "also"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = 0\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from True"], ["proof (chain)\npicking this:\n  0 \\<le> f t", "have \"\\<dots> = -a*np f t\""], ["proof (prove)\nusing this:\n  0 \\<le> f t\n\ngoal (1 subgoal):\n 1. 0 = - a * np f t", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  0 = - a * np f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "finally"], ["proof (chain)\npicking this:\n  pp (\\<lambda>t. a * f t) t = - a * np f t", "have 1: \"pp (\\<lambda>t. a*f t) t = -a*np f t\""], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t", "."], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from le"], ["proof (chain)\npicking this:\n  a * f t \\<le> 0 * f t", "have \"np (\\<lambda>t. a*f t) t = -a*f t\""], ["proof (prove)\nusing this:\n  a * f t \\<le> 0 * f t\n\ngoal (1 subgoal):\n 1. np (\\<lambda>t. a * f t) t = - a * f t", "by (simp add: real_neg_pp_np_help)"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = - a * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "also"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = - a * f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from True"], ["proof (chain)\npicking this:\n  0 \\<le> f t", "have \"\\<dots> = -a*pp f t\""], ["proof (prove)\nusing this:\n  0 \\<le> f t\n\ngoal (1 subgoal):\n 1. - a * f t = - a * pp f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  - a * f t = - a * pp f t\n\ngoal (2 subgoals):\n 1. 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t\n 2. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "finally"], ["proof (chain)\npicking this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t", "show ?thesis"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "using 1"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "by fast"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "hence \"f t \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. f t \\<le> 0", "by simp"], ["proof (state)\nthis:\n  f t \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "with a"], ["proof (chain)\npicking this:\n  a \\<le> 0\n  f t \\<le> 0", "have le: \"0\\<le>a*(f t)\""], ["proof (prove)\nusing this:\n  a \\<le> 0\n  f t \\<le> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> a * f t", "by (simp add: zero_le_mult_iff)"], ["proof (state)\nthis:\n  0 \\<le> a * f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "hence \"pp (\\<lambda>t. a*f t) t = a*f t\""], ["proof (prove)\nusing this:\n  0 \\<le> a * f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = a * f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "also"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = a * f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> f t", "have \"\\<dots> = -a*np f t\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. a * f t = - a * np f t", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  a * f t = - a * np f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "finally"], ["proof (chain)\npicking this:\n  pp (\\<lambda>t. a * f t) t = - a * np f t", "have 1: \"pp (\\<lambda>t. a*f t) t = -a*np f t\""], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t", "."], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from le"], ["proof (chain)\npicking this:\n  0 \\<le> a * f t", "have \"np (\\<lambda>t. a*f t) t = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> a * f t\n\ngoal (1 subgoal):\n 1. np (\\<lambda>t. a * f t) t = 0", "by (simp add: negative_part_def)"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "also"], ["proof (state)\nthis:\n  np (\\<lambda>t. a * f t) t = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "from False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> f t", "have \"\\<dots> = -a*pp f t\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> f t\n\ngoal (1 subgoal):\n 1. 0 = - a * pp f t", "by (simp add: positive_part_def)"], ["proof (state)\nthis:\n  0 = - a * pp f t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> f t \\<Longrightarrow>\n    pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "finally"], ["proof (chain)\npicking this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t", "show ?thesis"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "using 1"], ["proof (prove)\nusing this:\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n  pp (\\<lambda>t. a * f t) t = - a * np f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n    np (\\<lambda>t. a * f t) t = - a * pp f t", "by fast"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) t = - a * np f t \\<and>\n  np (\\<lambda>t. a * f t) t = - a * pp f t\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "}"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) ?t2 = - a * np f ?t2 \\<and>\n  np (\\<lambda>t. a * f t) ?t2 = - a * pp f ?t2\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  pp (\\<lambda>t. a * f t) ?t2 = - a * np f ?t2 \\<and>\n  np (\\<lambda>t. a * f t) ?t2 = - a * pp f ?t2\n\ngoal (1 subgoal):\n 1. pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n    np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)", "by (simp add: ext)"], ["proof (state)\nthis:\n  pp (\\<lambda>t. a * f t) = (\\<lambda>t. - a * np f t) \\<and>\n  np (\\<lambda>t. a * f t) = (\\<lambda>t. - a * pp f t)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma pp_np_rv:\n  assumes f: \"f \\<in> rv M\" \n  shows \"pp f \\<in> rv M\" and \"np f \\<in> rv M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp f \\<in> rv M &&& np f \\<in> rv M", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "from f"], ["proof (chain)\npicking this:\n  f \\<in> rv M", "have ms: \"measure_space M\""], ["proof (prove)\nusing this:\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. measure_space M", "by (simp add: rv_def)"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "{"], ["proof (state)\nthis:\n  measure_space M\n\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have fm: \"{w. f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. f w \\<le> a} \\<in> measurable_sets M", "by (simp add: rv_le_iff)"], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "have \n      \"{w. pp f w \\<le> a} \\<in> measurable_sets M \\<and> \n      {w. np f w \\<le> a} \\<in> measurable_sets M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "proof (cases \"0\\<le>a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "case True"], ["proof (state)\nthis:\n  0 \\<le> a\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "hence \"{w. pp f w \\<le> a} = {w. f w \\<le> a}\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. {w. pp f w \\<le> a} = {w. f w \\<le> a}", "by (auto simp add: positive_part_def)"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} = {w. f w \\<le> a}\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} = {w. f w \\<le> a}\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "note fm"], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. f w \\<le> a} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "from True"], ["proof (chain)\npicking this:\n  0 \\<le> a", "have \"{w. np f w \\<le> a} = {w. -a \\<le> f w}\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. {w. np f w \\<le> a} = {w. - a \\<le> f w}", "by (auto simp add: negative_part_def)"], ["proof (state)\nthis:\n  {w. np f w \\<le> a} = {w. - a \\<le> f w}\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. np f w \\<le> a} = {w. - a \\<le> f w}\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "from ms f"], ["proof (chain)\npicking this:\n  measure_space M\n  f \\<in> rv M", "have \"\\<dots> \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. {w. - a \\<le> f w} \\<in> measurable_sets M", "by (simp add: rv_ge_iff)"], ["proof (state)\nthis:\n  {w. - a \\<le> f w} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M\n 2. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. pp f w \\<le> a} = {w. f w \\<le> a}\n  {w. f w \\<le> a} \\<in> measurable_sets M\n  {w. np f w \\<le> a} = {w. - a \\<le> f w}\n  {w. - a \\<le> f w} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. pp f w \\<le> a} = {w. f w \\<le> a}\n  {w. f w \\<le> a} \\<in> measurable_sets M\n  {w. np f w \\<le> a} = {w. - a \\<le> f w}\n  {w. - a \\<le> f w} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> a} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> a\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "hence \"{w. pp f w \\<le> a} = {}\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> a\n\ngoal (1 subgoal):\n 1. {w. pp f w \\<le> a} = {}", "by (auto simp add: positive_part_def)"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} = {}\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "also"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} = {}\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "from False"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> a", "have \"{w. np f w \\<le> a} = {}\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> a\n\ngoal (1 subgoal):\n 1. {w. np f w \\<le> a} = {}", "by (auto simp add: negative_part_def)"], ["proof (state)\nthis:\n  {w. np f w \\<le> a} = {}\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "moreover"], ["proof (state)\nthis:\n  {w. np f w \\<le> a} = {}\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "from ms"], ["proof (chain)\npicking this:\n  measure_space M", "have \"{} \\<in> measurable_sets M\""], ["proof (prove)\nusing this:\n  measure_space M\n\ngoal (1 subgoal):\n 1. {} \\<in> measurable_sets M", "by (simp add: measure_space_def sigma_algebra_def)"], ["proof (state)\nthis:\n  {} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> a \\<Longrightarrow>\n    {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "ultimately"], ["proof (chain)\npicking this:\n  {w. pp f w \\<le> a} = {}\n  {w. np f w \\<le> a} = {}\n  {} \\<in> measurable_sets M", "show ?thesis"], ["proof (prove)\nusing this:\n  {w. pp f w \\<le> a} = {}\n  {w. np f w \\<le> a} = {}\n  {} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n    {w. np f w \\<le> a} \\<in> measurable_sets M", "by simp"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> a} \\<in> measurable_sets M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {w. pp f w \\<le> a} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> a} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "}"], ["proof (state)\nthis:\n  {w. pp f w \\<le> ?a2} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (2 subgoals):\n 1. pp f \\<in> rv M\n 2. np f \\<in> rv M", "with ms"], ["proof (chain)\npicking this:\n  measure_space M\n  {w. pp f w \\<le> ?a2} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> ?a2} \\<in> measurable_sets M", "show \"pp f \\<in> rv M\" and \"np f \\<in> rv M\""], ["proof (prove)\nusing this:\n  measure_space M\n  {w. pp f w \\<le> ?a2} \\<in> measurable_sets M \\<and>\n  {w. np f w \\<le> ?a2} \\<in> measurable_sets M\n\ngoal (1 subgoal):\n 1. pp f \\<in> rv M &&& np f \\<in> rv M", "by (auto simp add: rv_le_iff)"], ["proof (state)\nthis:\n  pp f \\<in> rv M\n  np f \\<in> rv M\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pp_np_rv_iff: \"(f::'a \\<Rightarrow> real) \\<in> rv M = (pp f \\<in> rv M \\<and> np f \\<in> rv M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "assume \"pp f \\<in> rv M\" and \"np f \\<in> rv M\""], ["proof (state)\nthis:\n  pp f \\<in> rv M\n  np f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "hence \"(\\<lambda>t. pp f t - np f t) \\<in> rv M\""], ["proof (prove)\nusing this:\n  pp f \\<in> rv M\n  np f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pp f t - np f t) \\<in> rv M", "by (rule rv_minus_rv)"], ["proof (state)\nthis:\n  (\\<lambda>t. pp f t - np f t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "also"], ["proof (state)\nthis:\n  (\\<lambda>t. pp f t - np f t) \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "have \"f = (\\<lambda>t. pp f t - np f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>t. pp f t - np f t)", "by (rule f_plus_minus2)"], ["proof (state)\nthis:\n  f = (\\<lambda>t. pp f t - np f t)\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>t. pp f t - np f t) \\<in> rv M\n  f = (\\<lambda>t. pp f t - np f t)", "have \"f \\<in> rv M\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. pp f t - np f t) \\<in> rv M\n  f = (\\<lambda>t. pp f t - np f t)\n\ngoal (1 subgoal):\n 1. f \\<in> rv M", "by simp"], ["proof (state)\nthis:\n  f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>pp f \\<in> rv M; np f \\<in> rv M\\<rbrakk>\n  \\<Longrightarrow> f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "also"], ["proof (state)\nthis:\n  \\<lbrakk>pp f \\<in> rv M; np f \\<in> rv M\\<rbrakk>\n  \\<Longrightarrow> f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "have \"f \\<in> rv M \\<Longrightarrow> (pp f \\<in> rv M \\<and> np f \\<in> rv M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> rv M \\<Longrightarrow> pp f \\<in> rv M \\<and> np f \\<in> rv M", "by (simp add: pp_np_rv)"], ["proof (state)\nthis:\n  f \\<in> rv M \\<Longrightarrow> pp f \\<in> rv M \\<and> np f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>pp f \\<in> rv M; np f \\<in> rv M\\<rbrakk>\n  \\<Longrightarrow> f \\<in> rv M\n  f \\<in> rv M \\<Longrightarrow> pp f \\<in> rv M \\<and> np f \\<in> rv M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>pp f \\<in> rv M; np f \\<in> rv M\\<rbrakk>\n  \\<Longrightarrow> f \\<in> rv M\n  f \\<in> rv M \\<Longrightarrow> pp f \\<in> rv M \\<and> np f \\<in> rv M\n\ngoal (1 subgoal):\n 1. (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)", "by fast"], ["proof (state)\nthis:\n  (f \\<in> rv M) = (pp f \\<in> rv M \\<and> np f \\<in> rv M)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>This completes the chapter about measurable functions. As we\n  will see in the next one, measurability is the prime condition on\n  Lebesgue integrable functions; and the theorems and lemmata\n  established here suffice --- at least in principle --- to show it holds for any\n  function that is to be integrated there.\\<close>"], ["", "end"]]}