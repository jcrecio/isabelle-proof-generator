{"file_name": "/home/qj213/afp-2021-10-22/thys/Regular-Sets/Regular_Set.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regular-Sets", "problem_names": ["lemma [code]:\n  \"lang_pow (Suc n) A = A @@ (lang_pow n A)\"\n  \"lang_pow 0 A = {[]}\"", "lemma concI[simp,intro]: \"u : A \\<Longrightarrow> v : B \\<Longrightarrow> u@v : A @@ B\"", "lemma concE[elim]: \nassumes \"w \\<in> A @@ B\"\nobtains u v where \"u \\<in> A\" \"v \\<in> B\" \"w = u@v\"", "lemma conc_mono: \"A \\<subseteq> C \\<Longrightarrow> B \\<subseteq> D \\<Longrightarrow> A @@ B \\<subseteq> C @@ D\"", "lemma conc_empty[simp]: shows \"{} @@ A = {}\" and \"A @@ {} = {}\"", "lemma conc_epsilon[simp]: shows \"{[]} @@ A = A\" and \"A @@ {[]} = A\"", "lemma conc_assoc: \"(A @@ B) @@ C = A @@ (B @@ C)\"", "lemma conc_Un_distrib:\nshows \"A @@ (B \\<union> C) = A @@ B \\<union> A @@ C\"\nand   \"(A \\<union> B) @@ C = A @@ C \\<union> B @@ C\"", "lemma conc_UNION_distrib:\nshows \"A @@ \\<Union>(M ` I) = \\<Union>((%i. A @@ M i) ` I)\"\nand   \"\\<Union>(M ` I) @@ A = \\<Union>((%i. M i @@ A) ` I)\"", "lemma conc_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> B \\<subseteq> lists S \\<Longrightarrow> A @@ B \\<subseteq> lists S\"", "lemma Nil_in_conc[simp]: \"[] \\<in> A @@ B \\<longleftrightarrow> [] \\<in> A \\<and> [] \\<in> B\"", "lemma concI_if_Nil1: \"[] \\<in> A \\<Longrightarrow> xs : B \\<Longrightarrow> xs \\<in> A @@ B\"", "lemma conc_Diff_if_Nil1: \"[] \\<in> A \\<Longrightarrow> A @@ B = (A - {[]}) @@ B \\<union> B\"", "lemma concI_if_Nil2: \"[] \\<in> B \\<Longrightarrow> xs : A \\<Longrightarrow> xs \\<in> A @@ B\"", "lemma conc_Diff_if_Nil2: \"[] \\<in> B \\<Longrightarrow> A @@ B = A @@ (B - {[]}) \\<union> A\"", "lemma singleton_in_conc:\n  \"[x] : A @@ B \\<longleftrightarrow> [x] : A \\<and> [] : B \\<or> [] : A \\<and> [x] : B\"", "lemma lang_pow_add: \"A ^^ (n + m) = A ^^ n @@ A ^^ m\"", "lemma lang_pow_empty: \"{} ^^ n = (if n = 0 then {[]} else {})\"", "lemma lang_pow_empty_Suc[simp]: \"({}::'a lang) ^^ Suc n = {}\"", "lemma conc_pow_comm:\n  shows \"A @@ (A ^^ n) = (A ^^ n) @@ A\"", "lemma length_lang_pow_ub:\n  \"\\<forall>w \\<in> A. length w \\<le> k \\<Longrightarrow> w : A^^n \\<Longrightarrow> length w \\<le> k*n\"", "lemma length_lang_pow_lb:\n  \"\\<forall>w \\<in> A. length w \\<ge> k \\<Longrightarrow> w : A^^n \\<Longrightarrow> length w \\<ge> k*n\"", "lemma lang_pow_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> A ^^ n \\<subseteq> lists S\"", "lemma star_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> star A \\<subseteq> lists S\"", "lemma star_if_lang_pow[simp]: \"w : A ^^ n \\<Longrightarrow> w : star A\"", "lemma Nil_in_star[iff]: \"[] : star A\"", "lemma star_if_lang[simp]: assumes \"w : A\" shows \"w : star A\"", "lemma append_in_starI[simp]:\nassumes \"u : star A\" and \"v : star A\" shows \"u@v : star A\"", "lemma conc_star_star: \"star A @@ star A = star A\"", "lemma conc_star_comm:\n  shows \"A @@ star A = star A @@ A\"", "lemma star_induct[consumes 1, case_names Nil append, induct set: star]:\nassumes \"w : star A\"\n  and \"P []\"\n  and step: \"!!u v. u : A \\<Longrightarrow> v : star A \\<Longrightarrow> P v \\<Longrightarrow> P (u@v)\"\nshows \"P w\"", "lemma star_empty[simp]: \"star {} = {[]}\"", "lemma star_epsilon[simp]: \"star {[]} = {[]}\"", "lemma star_idemp[simp]: \"star (star A) = star A\"", "lemma star_unfold_left: \"star A = A @@ star A \\<union> {[]}\" (is \"?L = ?R\")", "lemma concat_in_star: \"set ws \\<subseteq> A \\<Longrightarrow> concat ws : star A\"", "lemma in_star_iff_concat:\n  \"w \\<in> star A = (\\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws)\"\n  (is \"_ = (\\<exists>ws. ?R w ws)\")", "lemma star_conv_concat: \"star A = {concat ws|ws. set ws \\<subseteq> A}\"", "lemma star_insert_eps[simp]: \"star (insert [] A) = star(A)\"", "lemma star_unfold_left_Nil: \"star A = (A - {[]}) @@ (star A) \\<union> {[]}\"", "lemma star_Diff_Nil_fold: \"(A - {[]}) @@ star A = star A - {[]}\"", "lemma star_decom: \n  assumes a: \"x \\<in> star A\" \"x \\<noteq> []\"\n  shows \"\\<exists>a b. x = a @ b \\<and> a \\<noteq> [] \\<and> a \\<in> A \\<and> b \\<in> star A\"", "lemma Deriv_empty[simp]:   \"Deriv a {} = {}\"\n  and Deriv_epsilon[simp]: \"Deriv a {[]} = {}\"\n  and Deriv_char[simp]:    \"Deriv a {[b]} = (if a = b then {[]} else {})\"\n  and Deriv_union[simp]:   \"Deriv a (A \\<union> B) = Deriv a A \\<union> Deriv a B\"\n  and Deriv_inter[simp]:   \"Deriv a (A \\<inter> B) = Deriv a A \\<inter> Deriv a B\"\n  and Deriv_compl[simp]:   \"Deriv a (-A) = - Deriv a A\"\n  and Deriv_Union[simp]:   \"Deriv a (Union M) = Union(Deriv a ` M)\"\n  and Deriv_UN[simp]:      \"Deriv a (UN x:I. S x) = (UN x:I. Deriv a (S x))\"", "lemma Der_conc [simp]: \n  shows \"Deriv c (A @@ B) = (Deriv c A) @@ B \\<union> (if [] \\<in> A then Deriv c B else {})\"", "lemma Deriv_star [simp]: \n  shows \"Deriv c (star A) = (Deriv c A) @@ star A\"", "lemma Deriv_diff[simp]:   \n  shows \"Deriv c (A - B) = Deriv c A - Deriv c B\"", "lemma Deriv_lists[simp]: \"c : S \\<Longrightarrow> Deriv c (lists S) = lists S\"", "lemma Derivs_simps [simp]:\n  shows \"Derivs [] A = A\"\n  and   \"Derivs (c # s) A = Derivs s (Deriv c A)\"\n  and   \"Derivs (s1 @ s2) A = Derivs s2 (Derivs s1 A)\"", "lemma in_fold_Deriv: \"v \\<in> fold Deriv w L \\<longleftrightarrow> w @ v \\<in> L\"", "lemma Derivs_alt_def [code]: \"Derivs w L = fold Deriv w L\"", "lemma Deriv_code [code]: \n  \"Deriv x A = tl ` Set.filter (\\<lambda>xs. case xs of x' # _ \\<Rightarrow> x = x' | _ \\<Rightarrow> False) A\"", "lemma Deriv_Shuffle[simp]:\n  \"Deriv a (A \\<parallel> B) = Deriv a A \\<parallel> B \\<union> A \\<parallel> Deriv a B\"", "lemma shuffle_subset_lists:\n  assumes \"A \\<subseteq> lists S\" \"B \\<subseteq> lists S\"\n  shows \"A \\<parallel> B \\<subseteq> lists S\"", "lemma Nil_in_Shuffle[simp]: \"[] \\<in> A \\<parallel> B \\<longleftrightarrow> [] \\<in> A \\<and> [] \\<in> B\"", "lemma shuffle_Un_distrib:\nshows \"A \\<parallel> (B \\<union> C) = A \\<parallel> B \\<union> A \\<parallel> C\"\nand   \"A \\<parallel> (B \\<union> C) = A \\<parallel> B \\<union> A \\<parallel> C\"", "lemma shuffle_UNION_distrib:\nshows \"A \\<parallel> \\<Union>(M ` I) = \\<Union>((%i. A \\<parallel> M i) ` I)\"\nand   \"\\<Union>(M ` I) \\<parallel> A = \\<Union>((%i. M i \\<parallel> A) ` I)\"", "lemma Shuffle_empty[simp]:\n  \"A \\<parallel> {} = {}\"\n  \"{} \\<parallel> B = {}\"", "lemma Shuffle_eps[simp]:\n  \"A \\<parallel> {[]} = A\"\n  \"{[]} \\<parallel> B = B\"", "lemma arden_helper:\n  assumes eq: \"X = A @@ X \\<union> B\"\n  shows \"X = (A ^^ Suc n) @@ X \\<union> (\\<Union>m\\<le>n. (A ^^ m) @@ B)\"", "lemma Arden:\n  assumes \"[] \\<notin> A\" \n  shows \"X = A @@ X \\<union> B \\<longleftrightarrow> X = star A @@ B\"", "lemma reversed_arden_helper:\n  assumes eq: \"X = X @@ A \\<union> B\"\n  shows \"X = X @@ (A ^^ Suc n) \\<union> (\\<Union>m\\<le>n. B @@ (A ^^ m))\"", "theorem reversed_Arden:\n  assumes nemp: \"[] \\<notin> A\"\n  shows \"X = X @@ A \\<union> B \\<longleftrightarrow> X = B @@ star A\""], "translations": [["", "lemma [code]:\n  \"lang_pow (Suc n) A = A @@ (lang_pow n A)\"\n  \"lang_pow 0 A = {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang_pow (Suc n) A = A @@ lang_pow n A &&& lang_pow 0 A = {[]}", "by (simp_all add: lang_pow_code_def)"], ["", "hide_const (open) lang_pow"], ["", "definition star :: \"'a lang \\<Rightarrow> 'a lang\" where\n\"star A = (\\<Union>n. A ^^ n)\""], ["", "subsection\\<open>@{term \"(@@)\"}\\<close>"], ["", "lemma concI[simp,intro]: \"u : A \\<Longrightarrow> v : B \\<Longrightarrow> u@v : A @@ B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> A; v \\<in> B\\<rbrakk>\n    \\<Longrightarrow> u @ v \\<in> A @@ B", "by (auto simp add: conc_def)"], ["", "lemma concE[elim]: \nassumes \"w \\<in> A @@ B\"\nobtains u v where \"u \\<in> A\" \"v \\<in> B\" \"w = u@v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<in> A; v \\<in> B; w = u @ v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  w \\<in> A @@ B\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<in> A; v \\<in> B; w = u @ v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: conc_def)"], ["", "lemma conc_mono: \"A \\<subseteq> C \\<Longrightarrow> B \\<subseteq> D \\<Longrightarrow> A @@ B \\<subseteq> C @@ D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> C; B \\<subseteq> D\\<rbrakk>\n    \\<Longrightarrow> A @@ B \\<subseteq> C @@ D", "by (auto simp: conc_def)"], ["", "lemma conc_empty[simp]: shows \"{} @@ A = {}\" and \"A @@ {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} @@ A = {} &&& A @@ {} = {}", "by auto"], ["", "lemma conc_epsilon[simp]: shows \"{[]} @@ A = A\" and \"A @@ {[]} = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[]} @@ A = A &&& A @@ {[]} = A", "by (simp_all add:conc_def)"], ["", "lemma conc_assoc: \"(A @@ B) @@ C = A @@ (B @@ C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @@ B) @@ C = A @@ B @@ C", "by (auto elim!: concE) (simp only: append_assoc[symmetric] concI)"], ["", "lemma conc_Un_distrib:\nshows \"A @@ (B \\<union> C) = A @@ B \\<union> A @@ C\"\nand   \"(A \\<union> B) @@ C = A @@ C \\<union> B @@ C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A @@ (B \\<union> C) = A @@ B \\<union> A @@ C &&&\n    (A \\<union> B) @@ C = A @@ C \\<union> B @@ C", "by auto"], ["", "lemma conc_UNION_distrib:\nshows \"A @@ \\<Union>(M ` I) = \\<Union>((%i. A @@ M i) ` I)\"\nand   \"\\<Union>(M ` I) @@ A = \\<Union>((%i. M i @@ A) ` I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A @@ \\<Union> (M ` I) = (\\<Union>i\\<in>I. A @@ M i) &&&\n    \\<Union> (M ` I) @@ A = (\\<Union>i\\<in>I. M i @@ A)", "by auto"], ["", "lemma conc_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> B \\<subseteq> lists S \\<Longrightarrow> A @@ B \\<subseteq> lists S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> lists S; B \\<subseteq> lists S\\<rbrakk>\n    \\<Longrightarrow> A @@ B \\<subseteq> lists S", "by(fastforce simp: conc_def in_lists_conv_set)"], ["", "lemma Nil_in_conc[simp]: \"[] \\<in> A @@ B \\<longleftrightarrow> [] \\<in> A \\<and> [] \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] \\<in> A @@ B) = ([] \\<in> A \\<and> [] \\<in> B)", "by (metis append_is_Nil_conv concE concI)"], ["", "lemma concI_if_Nil1: \"[] \\<in> A \\<Longrightarrow> xs : B \\<Longrightarrow> xs \\<in> A @@ B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[] \\<in> A; xs \\<in> B\\<rbrakk>\n    \\<Longrightarrow> xs \\<in> A @@ B", "by (metis append_Nil concI)"], ["", "lemma conc_Diff_if_Nil1: \"[] \\<in> A \\<Longrightarrow> A @@ B = (A - {[]}) @@ B \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> A \\<Longrightarrow> A @@ B = (A - {[]}) @@ B \\<union> B", "by (fastforce elim: concI_if_Nil1)"], ["", "lemma concI_if_Nil2: \"[] \\<in> B \\<Longrightarrow> xs : A \\<Longrightarrow> xs \\<in> A @@ B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[] \\<in> B; xs \\<in> A\\<rbrakk>\n    \\<Longrightarrow> xs \\<in> A @@ B", "by (metis append_Nil2 concI)"], ["", "lemma conc_Diff_if_Nil2: \"[] \\<in> B \\<Longrightarrow> A @@ B = A @@ (B - {[]}) \\<union> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> B \\<Longrightarrow> A @@ B = A @@ (B - {[]}) \\<union> A", "by (fastforce elim: concI_if_Nil2)"], ["", "lemma singleton_in_conc:\n  \"[x] : A @@ B \\<longleftrightarrow> [x] : A \\<and> [] : B \\<or> [] : A \\<and> [x] : B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([x] \\<in> A @@ B) =\n    ([x] \\<in> A \\<and> [] \\<in> B \\<or> [] \\<in> A \\<and> [x] \\<in> B)", "by (fastforce simp: Cons_eq_append_conv append_eq_Cons_conv\n       conc_Diff_if_Nil1 conc_Diff_if_Nil2)"], ["", "subsection\\<open>@{term \"A ^^ n\"}\\<close>"], ["", "lemma lang_pow_add: \"A ^^ (n + m) = A ^^ n @@ A ^^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^^ (n + m) = A ^^ n @@ A ^^ m", "by (induct n) (auto simp: conc_assoc)"], ["", "lemma lang_pow_empty: \"{} ^^ n = (if n = 0 then {[]} else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} ^^ n = (if n = 0 then {[]} else {})", "by (induct n) auto"], ["", "lemma lang_pow_empty_Suc[simp]: \"({}::'a lang) ^^ Suc n = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} ^^ Suc n = {}", "by (simp add: lang_pow_empty)"], ["", "lemma conc_pow_comm:\n  shows \"A @@ (A ^^ n) = (A ^^ n) @@ A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A @@ A ^^ n = A ^^ n @@ A", "by (induct n) (simp_all add: conc_assoc[symmetric])"], ["", "lemma length_lang_pow_ub:\n  \"\\<forall>w \\<in> A. length w \\<le> k \\<Longrightarrow> w : A^^n \\<Longrightarrow> length w \\<le> k*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>w\\<in>A. length w \\<le> k; w \\<in> A ^^ n\\<rbrakk>\n    \\<Longrightarrow> length w \\<le> k * n", "by(induct n arbitrary: w) (fastforce simp: conc_def)+"], ["", "lemma length_lang_pow_lb:\n  \"\\<forall>w \\<in> A. length w \\<ge> k \\<Longrightarrow> w : A^^n \\<Longrightarrow> length w \\<ge> k*n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>w\\<in>A. k \\<le> length w; w \\<in> A ^^ n\\<rbrakk>\n    \\<Longrightarrow> k * n \\<le> length w", "by(induct n arbitrary: w) (fastforce simp: conc_def)+"], ["", "lemma lang_pow_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> A ^^ n \\<subseteq> lists S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> lists S \\<Longrightarrow> A ^^ n \\<subseteq> lists S", "by(induct n)(auto simp: conc_subset_lists)"], ["", "subsection\\<open>@{const star}\\<close>"], ["", "lemma star_subset_lists: \"A \\<subseteq> lists S \\<Longrightarrow> star A \\<subseteq> lists S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> lists S \\<Longrightarrow> star A \\<subseteq> lists S", "unfolding star_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> lists S \\<Longrightarrow>\n    \\<Union> (range ((^^) A)) \\<subseteq> lists S", "by(blast dest: lang_pow_subset_lists)"], ["", "lemma star_if_lang_pow[simp]: \"w : A ^^ n \\<Longrightarrow> w : star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> A ^^ n \\<Longrightarrow> w \\<in> star A", "by (auto simp: star_def)"], ["", "lemma Nil_in_star[iff]: \"[] : star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> star A", "proof (rule star_if_lang_pow)"], ["proof (state)\ngoal (1 subgoal):\n 1. [] \\<in> A ^^ ?n", "show \"[] : A ^^ 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> A ^^ 0", "by simp"], ["proof (state)\nthis:\n  [] \\<in> A ^^ 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_if_lang[simp]: assumes \"w : A\" shows \"w : star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> star A", "proof (rule star_if_lang_pow)"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> A ^^ ?n", "show \"w : A ^^ 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> A ^^ 1", "using \\<open>w : A\\<close>"], ["proof (prove)\nusing this:\n  w \\<in> A\n\ngoal (1 subgoal):\n 1. w \\<in> A ^^ 1", "by simp"], ["proof (state)\nthis:\n  w \\<in> A ^^ 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_in_starI[simp]:\nassumes \"u : star A\" and \"v : star A\" shows \"u@v : star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "from \\<open>u : star A\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> star A", "obtain m where \"u : A ^^ m\""], ["proof (prove)\nusing this:\n  u \\<in> star A\n\ngoal (1 subgoal):\n 1. (\\<And>m. u \\<in> A ^^ m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: star_def)"], ["proof (state)\nthis:\n  u \\<in> A ^^ m\n\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "moreover"], ["proof (state)\nthis:\n  u \\<in> A ^^ m\n\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "from \\<open>v : star A\\<close>"], ["proof (chain)\npicking this:\n  v \\<in> star A", "obtain n where \"v : A ^^ n\""], ["proof (prove)\nusing this:\n  v \\<in> star A\n\ngoal (1 subgoal):\n 1. (\\<And>n. v \\<in> A ^^ n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: star_def)"], ["proof (state)\nthis:\n  v \\<in> A ^^ n\n\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "ultimately"], ["proof (chain)\npicking this:\n  u \\<in> A ^^ m\n  v \\<in> A ^^ n", "have \"u@v : A ^^ (m+n)\""], ["proof (prove)\nusing this:\n  u \\<in> A ^^ m\n  v \\<in> A ^^ n\n\ngoal (1 subgoal):\n 1. u @ v \\<in> A ^^ (m + n)", "by (simp add: lang_pow_add)"], ["proof (state)\nthis:\n  u @ v \\<in> A ^^ (m + n)\n\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "thus ?thesis"], ["proof (prove)\nusing this:\n  u @ v \\<in> A ^^ (m + n)\n\ngoal (1 subgoal):\n 1. u @ v \\<in> star A", "by simp"], ["proof (state)\nthis:\n  u @ v \\<in> star A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conc_star_star: \"star A @@ star A = star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A @@ star A = star A", "by (auto simp: conc_def)"], ["", "lemma conc_star_comm:\n  shows \"A @@ star A = star A @@ A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A @@ star A = star A @@ A", "unfolding star_def conc_pow_comm conc_UNION_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>i. A ^^ i @@ A) = (\\<Union>i. A ^^ i @@ A)", "by simp"], ["", "lemma star_induct[consumes 1, case_names Nil append, induct set: star]:\nassumes \"w : star A\"\n  and \"P []\"\n  and step: \"!!u v. u : A \\<Longrightarrow> v : star A \\<Longrightarrow> P v \\<Longrightarrow> P (u@v)\"\nshows \"P w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P w", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. P w", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. P w", "have \"w : A ^^ n \\<Longrightarrow> P w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> A ^^ n \\<Longrightarrow> P w", "by (induct n arbitrary: w) (auto intro: \\<open>P []\\<close> step star_if_lang_pow)"], ["proof (state)\nthis:\n  w \\<in> A ^^ n \\<Longrightarrow> P w\n\ngoal (1 subgoal):\n 1. P w", "}"], ["proof (state)\nthis:\n  w \\<in> A ^^ ?n2 \\<Longrightarrow> P w\n\ngoal (1 subgoal):\n 1. P w", "with \\<open>w : star A\\<close>"], ["proof (chain)\npicking this:\n  w \\<in> star A\n  w \\<in> A ^^ ?n2 \\<Longrightarrow> P w", "show \"P w\""], ["proof (prove)\nusing this:\n  w \\<in> star A\n  w \\<in> A ^^ ?n2 \\<Longrightarrow> P w\n\ngoal (1 subgoal):\n 1. P w", "by (auto simp: star_def)"], ["proof (state)\nthis:\n  P w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_empty[simp]: \"star {} = {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star {} = {[]}", "by (auto elim: star_induct)"], ["", "lemma star_epsilon[simp]: \"star {[]} = {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star {[]} = {[]}", "by (auto elim: star_induct)"], ["", "lemma star_idemp[simp]: \"star (star A) = star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star (star A) = star A", "by (auto elim: star_induct)"], ["", "lemma star_unfold_left: \"star A = A @@ star A \\<union> {[]}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = A @@ star A \\<union> {[]}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. star A \\<subseteq> A @@ star A \\<union> {[]}\n 2. A @@ star A \\<union> {[]} \\<subseteq> star A", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A \\<subseteq> A @@ star A \\<union> {[]}", "by (rule, erule star_induct) auto"], ["proof (state)\nthis:\n  star A \\<subseteq> A @@ star A \\<union> {[]}\n\ngoal (1 subgoal):\n 1. A @@ star A \\<union> {[]} \\<subseteq> star A", "qed auto"], ["", "lemma concat_in_star: \"set ws \\<subseteq> A \\<Longrightarrow> concat ws : star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ws \\<subseteq> A \\<Longrightarrow> concat ws \\<in> star A", "by (induct ws) simp_all"], ["", "lemma in_star_iff_concat:\n  \"w \\<in> star A = (\\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws)\"\n  (is \"_ = (\\<exists>ws. ?R w ws)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<in> star A) =\n    (\\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<in> star A \\<Longrightarrow>\n    \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws\n 2. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws \\<Longrightarrow>\n    w \\<in> star A", "assume \"w : star A\""], ["proof (state)\nthis:\n  w \\<in> star A\n\ngoal (2 subgoals):\n 1. w \\<in> star A \\<Longrightarrow>\n    \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws\n 2. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws \\<Longrightarrow>\n    w \\<in> star A", "thus \"\\<exists>ws. ?R w ws\""], ["proof (prove)\nusing this:\n  w \\<in> star A\n\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> [] = concat ws\n 2. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> [] = concat ws\n 2. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "have \"?R [] []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set [] \\<subseteq> A \\<and> [] = concat []", "by simp"], ["proof (state)\nthis:\n  set [] \\<subseteq> A \\<and> [] = concat []\n\ngoal (2 subgoals):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> [] = concat ws\n 2. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "thus ?case"], ["proof (prove)\nusing this:\n  set [] \\<subseteq> A \\<and> [] = concat []\n\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> [] = concat ws", ".."], ["proof (state)\nthis:\n  \\<exists>ws. set ws \\<subseteq> A \\<and> [] = concat ws\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "case (append u v)"], ["proof (state)\nthis:\n  u \\<in> A\n  v \\<in> star A\n  \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "then"], ["proof (chain)\npicking this:\n  u \\<in> A\n  v \\<in> star A\n  \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws", "obtain ws where \"set ws \\<subseteq> A \\<and> v = concat ws\""], ["proof (prove)\nusing this:\n  u \\<in> A\n  v \\<in> star A\n  \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        set ws \\<subseteq> A \\<and> v = concat ws \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  set ws \\<subseteq> A \\<and> v = concat ws\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "with append"], ["proof (chain)\npicking this:\n  u \\<in> A\n  v \\<in> star A\n  \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\n  set ws \\<subseteq> A \\<and> v = concat ws", "have \"?R (u@v) (u#ws)\""], ["proof (prove)\nusing this:\n  u \\<in> A\n  v \\<in> star A\n  \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\n  set ws \\<subseteq> A \\<and> v = concat ws\n\ngoal (1 subgoal):\n 1. set (u # ws) \\<subseteq> A \\<and> u @ v = concat (u # ws)", "by auto"], ["proof (state)\nthis:\n  set (u # ws) \\<subseteq> A \\<and> u @ v = concat (u # ws)\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> A; v \\<in> star A;\n        \\<exists>ws. set ws \\<subseteq> A \\<and> v = concat ws\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ws.\n                            set ws \\<subseteq> A \\<and> u @ v = concat ws", "thus ?case"], ["proof (prove)\nusing this:\n  set (u # ws) \\<subseteq> A \\<and> u @ v = concat (u # ws)\n\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> u @ v = concat ws", ".."], ["proof (state)\nthis:\n  \\<exists>ws. set ws \\<subseteq> A \\<and> u @ v = concat ws\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws\n\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws \\<Longrightarrow>\n    w \\<in> star A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws \\<Longrightarrow>\n    w \\<in> star A", "assume \"\\<exists>us. ?R w us\""], ["proof (state)\nthis:\n  \\<exists>us. set us \\<subseteq> A \\<and> w = concat us\n\ngoal (1 subgoal):\n 1. \\<exists>ws. set ws \\<subseteq> A \\<and> w = concat ws \\<Longrightarrow>\n    w \\<in> star A", "thus \"w : star A\""], ["proof (prove)\nusing this:\n  \\<exists>us. set us \\<subseteq> A \\<and> w = concat us\n\ngoal (1 subgoal):\n 1. w \\<in> star A", "by (auto simp: concat_in_star)"], ["proof (state)\nthis:\n  w \\<in> star A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_conv_concat: \"star A = {concat ws|ws. set ws \\<subseteq> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = {concat ws |ws. set ws \\<subseteq> A}", "by (fastforce simp: in_star_iff_concat)"], ["", "lemma star_insert_eps[simp]: \"star (insert [] A) = star(A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "fix us"], ["proof (state)\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "have \"set us \\<subseteq> insert [] A \\<Longrightarrow> \\<exists>vs. concat us = concat vs \\<and> set vs \\<subseteq> A\"\n      (is \"?P \\<Longrightarrow> \\<exists>vs. ?Q vs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. set us \\<subseteq> insert [] A \\<Longrightarrow>\n    \\<exists>vs. concat us = concat vs \\<and> set vs \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. set us \\<subseteq> insert [] A \\<Longrightarrow>\n    concat us = concat ?vs \\<and> set ?vs \\<subseteq> A", "let ?vs = \"filter (%u. u \\<noteq> []) us\""], ["proof (state)\ngoal (1 subgoal):\n 1. set us \\<subseteq> insert [] A \\<Longrightarrow>\n    concat us = concat ?vs \\<and> set ?vs \\<subseteq> A", "show \"?P \\<Longrightarrow> ?Q ?vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set us \\<subseteq> insert [] A \\<Longrightarrow>\n    concat us = concat (filter (\\<lambda>u. u \\<noteq> []) us) \\<and>\n    set (filter (\\<lambda>u. u \\<noteq> []) us) \\<subseteq> A", "by (induct us) auto"], ["proof (state)\nthis:\n  set us \\<subseteq> insert [] A \\<Longrightarrow>\n  concat us = concat (filter (\\<lambda>u. u \\<noteq> []) us) \\<and>\n  set (filter (\\<lambda>u. u \\<noteq> []) us) \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set us \\<subseteq> insert [] A \\<Longrightarrow>\n  \\<exists>vs. concat us = concat vs \\<and> set vs \\<subseteq> A\n\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "}"], ["proof (state)\nthis:\n  set ?us2 \\<subseteq> insert [] A \\<Longrightarrow>\n  \\<exists>vs. concat ?us2 = concat vs \\<and> set vs \\<subseteq> A\n\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "thus ?thesis"], ["proof (prove)\nusing this:\n  set ?us2 \\<subseteq> insert [] A \\<Longrightarrow>\n  \\<exists>vs. concat ?us2 = concat vs \\<and> set vs \\<subseteq> A\n\ngoal (1 subgoal):\n 1. star (insert [] A) = star A", "by (auto simp: star_conv_concat)"], ["proof (state)\nthis:\n  star (insert [] A) = star A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_unfold_left_Nil: \"star A = (A - {[]}) @@ (star A) \\<union> {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = (A - {[]}) @@ star A \\<union> {[]}", "by (metis insert_Diff_single star_insert_eps star_unfold_left)"], ["", "lemma star_Diff_Nil_fold: \"(A - {[]}) @@ star A = star A - {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A - {[]}) @@ star A = star A - {[]}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A - {[]}) @@ star A = star A - {[]}", "have \"[] \\<notin> (A - {[]}) @@ star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<notin> (A - {[]}) @@ star A", "by simp"], ["proof (state)\nthis:\n  [] \\<notin> (A - {[]}) @@ star A\n\ngoal (1 subgoal):\n 1. (A - {[]}) @@ star A = star A - {[]}", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] \\<notin> (A - {[]}) @@ star A\n\ngoal (1 subgoal):\n 1. (A - {[]}) @@ star A = star A - {[]}", "using star_unfold_left_Nil"], ["proof (prove)\nusing this:\n  [] \\<notin> (A - {[]}) @@ star A\n  star ?A = (?A - {[]}) @@ star ?A \\<union> {[]}\n\ngoal (1 subgoal):\n 1. (A - {[]}) @@ star A = star A - {[]}", "by blast"], ["proof (state)\nthis:\n  (A - {[]}) @@ star A = star A - {[]}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_decom: \n  assumes a: \"x \\<in> star A\" \"x \\<noteq> []\"\n  shows \"\\<exists>a b. x = a @ b \\<and> a \\<noteq> [] \\<and> a \\<in> A \\<and> b \\<in> star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       x = a @ b \\<and> a \\<noteq> [] \\<and> a \\<in> A \\<and> b \\<in> star A", "using a"], ["proof (prove)\nusing this:\n  x \\<in> star A\n  x \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       x = a @ b \\<and> a \\<noteq> [] \\<and> a \\<in> A \\<and> b \\<in> star A", "by (induct rule: star_induct) (blast)+"], ["", "subsection \\<open>Left-Quotients of languages\\<close>"], ["", "definition Deriv :: \"'a \\<Rightarrow> 'a lang \\<Rightarrow> 'a lang\"\n  where \"Deriv x A = { xs. x#xs \\<in> A }\""], ["", "definition Derivs :: \"'a list \\<Rightarrow> 'a lang \\<Rightarrow> 'a lang\"\nwhere \"Derivs xs A = { ys. xs @ ys \\<in> A }\""], ["", "abbreviation \n  Derivss :: \"'a list \\<Rightarrow> 'a lang set \\<Rightarrow> 'a lang\"\nwhere\n  \"Derivss s As \\<equiv> \\<Union> (Derivs s ` As)\""], ["", "lemma Deriv_empty[simp]:   \"Deriv a {} = {}\"\n  and Deriv_epsilon[simp]: \"Deriv a {[]} = {}\"\n  and Deriv_char[simp]:    \"Deriv a {[b]} = (if a = b then {[]} else {})\"\n  and Deriv_union[simp]:   \"Deriv a (A \\<union> B) = Deriv a A \\<union> Deriv a B\"\n  and Deriv_inter[simp]:   \"Deriv a (A \\<inter> B) = Deriv a A \\<inter> Deriv a B\"\n  and Deriv_compl[simp]:   \"Deriv a (-A) = - Deriv a A\"\n  and Deriv_Union[simp]:   \"Deriv a (Union M) = Union(Deriv a ` M)\"\n  and Deriv_UN[simp]:      \"Deriv a (UN x:I. S x) = (UN x:I. Deriv a (S x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Deriv a {} = {} &&& Deriv a {[]} = {}) &&&\n     Deriv a {[b]} = (if a = b then {[]} else {}) &&&\n     Deriv a (A \\<union> B) = Deriv a A \\<union> Deriv a B) &&&\n    (Deriv a (A \\<inter> B) = Deriv a A \\<inter> Deriv a B &&&\n     Deriv a (- A) = - Deriv a A) &&&\n    Deriv a (\\<Union> M) = \\<Union> (Deriv a ` M) &&&\n    Deriv a (\\<Union> (S ` I)) = (\\<Union>x\\<in>I. Deriv a (S x))", "by (auto simp: Deriv_def)"], ["", "lemma Der_conc [simp]: \n  shows \"Deriv c (A @@ B) = (Deriv c A) @@ B \\<union> (if [] \\<in> A then Deriv c B else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (A @@ B) =\n    Deriv c A @@ B \\<union> (if [] \\<in> A then Deriv c B else {})", "unfolding Deriv_def conc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {xs. c # xs \\<in> {xs @ ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}} =\n    {xs @ ys |xs ys.\n     xs \\<in> {xs. c # xs \\<in> A} \\<and> ys \\<in> B} \\<union>\n    (if [] \\<in> A then {xs. c # xs \\<in> B} else {})", "by (auto simp add: Cons_eq_append_conv)"], ["", "lemma Deriv_star [simp]: \n  shows \"Deriv c (star A) = (Deriv c A) @@ star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "have \"Deriv c (star A) = Deriv c ({[]} \\<union> A @@ star A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c ({[]} \\<union> A @@ star A)", "by (metis star_unfold_left sup.commute)"], ["proof (state)\nthis:\n  Deriv c (star A) = Deriv c ({[]} \\<union> A @@ star A)\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "also"], ["proof (state)\nthis:\n  Deriv c (star A) = Deriv c ({[]} \\<union> A @@ star A)\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "have \"... = Deriv c (A @@ star A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c ({[]} \\<union> A @@ star A) = Deriv c (A @@ star A)", "unfolding Deriv_union"], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c {[]} \\<union> Deriv c (A @@ star A) = Deriv c (A @@ star A)", "by (simp)"], ["proof (state)\nthis:\n  Deriv c ({[]} \\<union> A @@ star A) = Deriv c (A @@ star A)\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "also"], ["proof (state)\nthis:\n  Deriv c ({[]} \\<union> A @@ star A) = Deriv c (A @@ star A)\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "have \"... = (Deriv c A) @@ (star A) \\<union> (if [] \\<in> A then Deriv c (star A) else {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (A @@ star A) =\n    Deriv c A @@ star A \\<union>\n    (if [] \\<in> A then Deriv c (star A) else {})", "by simp"], ["proof (state)\nthis:\n  Deriv c (A @@ star A) =\n  Deriv c A @@ star A \\<union> (if [] \\<in> A then Deriv c (star A) else {})\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "also"], ["proof (state)\nthis:\n  Deriv c (A @@ star A) =\n  Deriv c A @@ star A \\<union> (if [] \\<in> A then Deriv c (star A) else {})\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "have \"... =  (Deriv c A) @@ star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c A @@ star A \\<union>\n    (if [] \\<in> A then Deriv c (star A) else {}) =\n    Deriv c A @@ star A", "unfolding conc_def Deriv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {xs @ ys |xs ys.\n     xs \\<in> {xs. c # xs \\<in> A} \\<and> ys \\<in> star A} \\<union>\n    (if [] \\<in> A then {xs. c # xs \\<in> star A} else {}) =\n    {xs @ ys |xs ys. xs \\<in> {xs. c # xs \\<in> A} \\<and> ys \\<in> star A}", "using star_decom"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> star ?A; ?x \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a b.\n                       ?x = a @ b \\<and>\n                       a \\<noteq> [] \\<and>\n                       a \\<in> ?A \\<and> b \\<in> star ?A\n\ngoal (1 subgoal):\n 1. {xs @ ys |xs ys.\n     xs \\<in> {xs. c # xs \\<in> A} \\<and> ys \\<in> star A} \\<union>\n    (if [] \\<in> A then {xs. c # xs \\<in> star A} else {}) =\n    {xs @ ys |xs ys. xs \\<in> {xs. c # xs \\<in> A} \\<and> ys \\<in> star A}", "by (force simp add: Cons_eq_append_conv)"], ["proof (state)\nthis:\n  Deriv c A @@ star A \\<union>\n  (if [] \\<in> A then Deriv c (star A) else {}) =\n  Deriv c A @@ star A\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "finally"], ["proof (chain)\npicking this:\n  Deriv c (star A) = Deriv c A @@ star A", "show \"Deriv c (star A) = (Deriv c A) @@ star A\""], ["proof (prove)\nusing this:\n  Deriv c (star A) = Deriv c A @@ star A\n\ngoal (1 subgoal):\n 1. Deriv c (star A) = Deriv c A @@ star A", "."], ["proof (state)\nthis:\n  Deriv c (star A) = Deriv c A @@ star A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Deriv_diff[simp]:   \n  shows \"Deriv c (A - B) = Deriv c A - Deriv c B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (A - B) = Deriv c A - Deriv c B", "by(auto simp add: Deriv_def)"], ["", "lemma Deriv_lists[simp]: \"c : S \\<Longrightarrow> Deriv c (lists S) = lists S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> S \\<Longrightarrow> Deriv c (lists S) = lists S", "by(auto simp add: Deriv_def)"], ["", "lemma Derivs_simps [simp]:\n  shows \"Derivs [] A = A\"\n  and   \"Derivs (c # s) A = Derivs s (Deriv c A)\"\n  and   \"Derivs (s1 @ s2) A = Derivs s2 (Derivs s1 A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs [] A = A &&&\n    Derivs (c # s) A = Derivs s (Deriv c A) &&&\n    Derivs (s1 @ s2) A = Derivs s2 (Derivs s1 A)", "unfolding Derivs_def Deriv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {ys. [] @ ys \\<in> A} = A &&&\n    {ys. (c # s) @ ys \\<in> A} = {ys. s @ ys \\<in> {xs. c # xs \\<in> A}} &&&\n    {ys. (s1 @ s2) @ ys \\<in> A} = {ys. s2 @ ys \\<in> {ys. s1 @ ys \\<in> A}}", "by auto"], ["", "lemma in_fold_Deriv: \"v \\<in> fold Deriv w L \\<longleftrightarrow> w @ v \\<in> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<in> fold Deriv w L) = (w @ v \\<in> L)", "by (induct w arbitrary: L) (simp_all add: Deriv_def)"], ["", "lemma Derivs_alt_def [code]: \"Derivs w L = fold Deriv w L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs w L = fold Deriv w L", "by (induct w arbitrary: L) simp_all"], ["", "lemma Deriv_code [code]: \n  \"Deriv x A = tl ` Set.filter (\\<lambda>xs. case xs of x' # _ \\<Rightarrow> x = x' | _ \\<Rightarrow> False) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv x A =\n    tl `\n    Set.filter\n     (\\<lambda>xs.\n         case xs of [] \\<Rightarrow> False | x' # xa \\<Rightarrow> x = x')\n     A", "by (auto simp: Deriv_def Set.filter_def image_iff tl_def split: list.splits)"], ["", "subsection \\<open>Shuffle product\\<close>"], ["", "definition Shuffle (infixr \"\\<parallel>\" 80) where\n  \"Shuffle A B = \\<Union>{shuffles xs ys | xs ys. xs \\<in> A \\<and> ys \\<in> B}\""], ["", "lemma Deriv_Shuffle[simp]:\n  \"Deriv a (A \\<parallel> B) = Deriv a A \\<parallel> B \\<union> A \\<parallel> Deriv a B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv a (A \\<parallel> B) =\n    Deriv a A \\<parallel> B \\<union> A \\<parallel> Deriv a B", "unfolding Shuffle_def Deriv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {xs.\n     a # xs\n     \\<in> \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}} =\n    \\<Union>\n     {shuffles xs ys |xs ys.\n      xs \\<in> {xs. a # xs \\<in> A} \\<and> ys \\<in> B} \\<union>\n    \\<Union>\n     {shuffles xs ys |xs ys.\n      xs \\<in> A \\<and> ys \\<in> {xs. a # xs \\<in> B}}", "by (fastforce simp: Cons_in_shuffles_iff neq_Nil_conv)"], ["", "lemma shuffle_subset_lists:\n  assumes \"A \\<subseteq> lists S\" \"B \\<subseteq> lists S\"\n  shows \"A \\<parallel> B \\<subseteq> lists S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<parallel> B \\<subseteq> lists S", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}\n    \\<subseteq> lists S", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X xa xs ys.\n       \\<lbrakk>x \\<in> shuffles xs ys; xa \\<in> set x; xs \\<in> A;\n        ys \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> S", "fix x and zs xs ys :: \"'a list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X xa xs ys.\n       \\<lbrakk>x \\<in> shuffles xs ys; xa \\<in> set x; xs \\<in> A;\n        ys \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> S", "assume zs: \"zs \\<in> shuffles xs ys\" \"x \\<in> set zs\" and \"xs \\<in> A\" \"ys \\<in> B\""], ["proof (state)\nthis:\n  zs \\<in> shuffles xs ys\n  x \\<in> set zs\n  xs \\<in> A\n  ys \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x X xa xs ys.\n       \\<lbrakk>x \\<in> shuffles xs ys; xa \\<in> set x; xs \\<in> A;\n        ys \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> S", "with assms"], ["proof (chain)\npicking this:\n  A \\<subseteq> lists S\n  B \\<subseteq> lists S\n  zs \\<in> shuffles xs ys\n  x \\<in> set zs\n  xs \\<in> A\n  ys \\<in> B", "have \"xs \\<in> lists S\" \"ys \\<in> lists S\""], ["proof (prove)\nusing this:\n  A \\<subseteq> lists S\n  B \\<subseteq> lists S\n  zs \\<in> shuffles xs ys\n  x \\<in> set zs\n  xs \\<in> A\n  ys \\<in> B\n\ngoal (1 subgoal):\n 1. xs \\<in> lists S &&& ys \\<in> lists S", "by auto"], ["proof (state)\nthis:\n  xs \\<in> lists S\n  ys \\<in> lists S\n\ngoal (1 subgoal):\n 1. \\<And>x X xa xs ys.\n       \\<lbrakk>x \\<in> shuffles xs ys; xa \\<in> set x; xs \\<in> A;\n        ys \\<in> B\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> S", "with zs"], ["proof (chain)\npicking this:\n  zs \\<in> shuffles xs ys\n  x \\<in> set zs\n  xs \\<in> lists S\n  ys \\<in> lists S", "show \"x \\<in> S\""], ["proof (prove)\nusing this:\n  zs \\<in> shuffles xs ys\n  x \\<in> set zs\n  xs \\<in> lists S\n  ys \\<in> lists S\n\ngoal (1 subgoal):\n 1. x \\<in> S", "by (induct xs ys arbitrary: zs rule: shuffles.induct) auto"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Nil_in_Shuffle[simp]: \"[] \\<in> A \\<parallel> B \\<longleftrightarrow> [] \\<in> A \\<and> [] \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] \\<in> A \\<parallel> B) = ([] \\<in> A \\<and> [] \\<in> B)", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] \\<in> \\<Union>\n               {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B}) =\n    ([] \\<in> A \\<and> [] \\<in> B)", "by force"], ["", "lemma shuffle_Un_distrib:\nshows \"A \\<parallel> (B \\<union> C) = A \\<parallel> B \\<union> A \\<parallel> C\"\nand   \"A \\<parallel> (B \\<union> C) = A \\<parallel> B \\<union> A \\<parallel> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<parallel> (B \\<union> C) =\n    A \\<parallel> B \\<union> A \\<parallel> C &&&\n    A \\<parallel> (B \\<union> C) = A \\<parallel> B \\<union> A \\<parallel> C", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B \\<union> C} =\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B} \\<union>\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> C} &&&\n    \\<Union>\n     {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B \\<union> C} =\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> B} \\<union>\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> C}", "by fast+"], ["", "lemma shuffle_UNION_distrib:\nshows \"A \\<parallel> \\<Union>(M ` I) = \\<Union>((%i. A \\<parallel> M i) ` I)\"\nand   \"\\<Union>(M ` I) \\<parallel> A = \\<Union>((%i. M i \\<parallel> A) ` I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<parallel> \\<Union> (M ` I) =\n    (\\<Union>i\\<in>I. A \\<parallel> M i) &&&\n    \\<Union> (M ` I) \\<parallel> A = (\\<Union>i\\<in>I. M i \\<parallel> A)", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> \\<Union> (M ` I)} =\n    (\\<Union>i\\<in>I.\n        \\<Union>\n         {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> M i}) &&&\n    \\<Union>\n     {shuffles xs ys |xs ys. xs \\<in> \\<Union> (M ` I) \\<and> ys \\<in> A} =\n    (\\<Union>i\\<in>I.\n        \\<Union> {shuffles xs ys |xs ys. xs \\<in> M i \\<and> ys \\<in> A})", "by fast+"], ["", "lemma Shuffle_empty[simp]:\n  \"A \\<parallel> {} = {}\"\n  \"{} \\<parallel> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<parallel> {} = {} &&& {} \\<parallel> B = {}", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> {}} = {} &&&\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> {} \\<and> ys \\<in> B} = {}", "by auto"], ["", "lemma Shuffle_eps[simp]:\n  \"A \\<parallel> {[]} = A\"\n  \"{[]} \\<parallel> B = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<parallel> {[]} = A &&& {[]} \\<parallel> B = B", "unfolding Shuffle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {shuffles xs ys |xs ys. xs \\<in> A \\<and> ys \\<in> {[]}} =\n    A &&&\n    \\<Union> {shuffles xs ys |xs ys. xs \\<in> {[]} \\<and> ys \\<in> B} = B", "by auto"], ["", "subsection \\<open>Arden's Lemma\\<close>"], ["", "lemma arden_helper:\n  assumes eq: \"X = A @@ X \\<union> B\"\n  shows \"X = (A ^^ Suc n) @@ X \\<union> (\\<Union>m\\<le>n. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. X = A ^^ Suc 0 @@ X \\<union> (\\<Union>m\\<le>0. A ^^ m @@ B)\n 2. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. X = A ^^ Suc 0 @@ X \\<union> (\\<Union>m\\<le>0. A ^^ m @@ B)\n 2. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "show \"X = (A ^^ Suc 0) @@ X \\<union> (\\<Union>m\\<le>0. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = A ^^ Suc 0 @@ X \\<union> (\\<Union>m\\<le>0. A ^^ m @@ B)", "using eq"], ["proof (prove)\nusing this:\n  X = A @@ X \\<union> B\n\ngoal (1 subgoal):\n 1. X = A ^^ Suc 0 @@ X \\<union> (\\<Union>m\\<le>0. A ^^ m @@ B)", "by simp"], ["proof (state)\nthis:\n  X = A ^^ Suc 0 @@ X \\<union> (\\<Union>m\\<le>0. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "case (Suc n)"], ["proof (state)\nthis:\n  X = A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "have ih: \"X = (A ^^ Suc n) @@ X \\<union> (\\<Union>m\\<le>n. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)", "by fact"], ["proof (state)\nthis:\n  X = A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "also"], ["proof (state)\nthis:\n  X = A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "have \"\\<dots> = (A ^^ Suc n) @@ (A @@ X \\<union> B) \\<union> (\\<Union>m\\<le>n. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B) =\n    A ^^ Suc n @@ (A @@ X \\<union> B) \\<union>\n    (\\<Union>m\\<le>n. A ^^ m @@ B)", "using eq"], ["proof (prove)\nusing this:\n  X = A @@ X \\<union> B\n\ngoal (1 subgoal):\n 1. A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B) =\n    A ^^ Suc n @@ (A @@ X \\<union> B) \\<union>\n    (\\<Union>m\\<le>n. A ^^ m @@ B)", "by simp"], ["proof (state)\nthis:\n  A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B) =\n  A ^^ Suc n @@ (A @@ X \\<union> B) \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "also"], ["proof (state)\nthis:\n  A ^^ Suc n @@ X \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B) =\n  A ^^ Suc n @@ (A @@ X \\<union> B) \\<union> (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "have \"\\<dots> = (A ^^ Suc (Suc n)) @@ X \\<union> ((A ^^ Suc n) @@ B) \\<union> (\\<Union>m\\<le>n. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^^ Suc n @@ (A @@ X \\<union> B) \\<union>\n    (\\<Union>m\\<le>n. A ^^ m @@ B) =\n    A ^^ Suc (Suc n) @@ X \\<union> A ^^ Suc n @@ B \\<union>\n    (\\<Union>m\\<le>n. A ^^ m @@ B)", "by (simp add: conc_Un_distrib conc_assoc[symmetric] conc_pow_comm)"], ["proof (state)\nthis:\n  A ^^ Suc n @@ (A @@ X \\<union> B) \\<union>\n  (\\<Union>m\\<le>n. A ^^ m @@ B) =\n  A ^^ Suc (Suc n) @@ X \\<union> A ^^ Suc n @@ B \\<union>\n  (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "also"], ["proof (state)\nthis:\n  A ^^ Suc n @@ (A @@ X \\<union> B) \\<union>\n  (\\<Union>m\\<le>n. A ^^ m @@ B) =\n  A ^^ Suc (Suc n) @@ X \\<union> A ^^ Suc n @@ B \\<union>\n  (\\<Union>m\\<le>n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "have \"\\<dots> = (A ^^ Suc (Suc n)) @@ X \\<union> (\\<Union>m\\<le>Suc n. (A ^^ m) @@ B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^^ Suc (Suc n) @@ X \\<union> A ^^ Suc n @@ B \\<union>\n    (\\<Union>m\\<le>n. A ^^ m @@ B) =\n    A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "by (auto simp add: atMost_Suc)"], ["proof (state)\nthis:\n  A ^^ Suc (Suc n) @@ X \\<union> A ^^ Suc n @@ B \\<union>\n  (\\<Union>m\\<le>n. A ^^ m @@ B) =\n  A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       A ^^ Suc n @@ X \\<union>\n       (\\<Union>m\\<le>n. A ^^ m @@ B) \\<Longrightarrow>\n       X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "finally"], ["proof (chain)\npicking this:\n  X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "show \"X = (A ^^ Suc (Suc n)) @@ X \\<union> (\\<Union>m\\<le>Suc n. (A ^^ m) @@ B)\""], ["proof (prove)\nusing this:\n  X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)", "."], ["proof (state)\nthis:\n  X = A ^^ Suc (Suc n) @@ X \\<union> (\\<Union>m\\<le>Suc n. A ^^ m @@ B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Arden:\n  assumes \"[] \\<notin> A\" \n  shows \"X = A @@ X \\<union> B \\<longleftrightarrow> X = star A @@ B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X = A @@ X \\<union> B) = (X = star A @@ B)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "assume eq: \"X = A @@ X \\<union> B\""], ["proof (state)\nthis:\n  X = A @@ X \\<union> B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "{"], ["proof (state)\nthis:\n  X = A @@ X \\<union> B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "assume \"w : X\""], ["proof (state)\nthis:\n  w \\<in> X\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "let ?n = \"size w\""], ["proof (state)\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "from \\<open>[] \\<notin> A\\<close>"], ["proof (chain)\npicking this:\n  [] \\<notin> A", "have \"\\<forall>u \\<in> A. length u \\<ge> 1\""], ["proof (prove)\nusing this:\n  [] \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>A. 1 \\<le> length u", "by (metis Suc_eq_plus1 add_leD2 le_0_eq length_0_conv not_less_eq_eq)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>A. 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"\\<forall>u \\<in> A^^(?n+1). length u \\<ge> ?n+1\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>A. 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u", "by (metis length_lang_pow_lb nat_mult_1)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"\\<forall>u \\<in> A^^(?n+1)@@X. length u \\<ge> ?n+1\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>A ^^ (length w + 1) @@ X. length w + 1 \\<le> length u", "by(auto simp only: conc_def length_append)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>A ^^ (length w + 1) @@ X. length w + 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"w \\<notin> A^^(?n+1)@@X\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>A ^^ (length w + 1) @@ X. length w + 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. w \\<notin> A ^^ (length w + 1) @@ X", "by auto"], ["proof (state)\nthis:\n  w \\<notin> A ^^ (length w + 1) @@ X\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"w : star A @@ B\""], ["proof (prove)\nusing this:\n  w \\<notin> A ^^ (length w + 1) @@ X\n\ngoal (1 subgoal):\n 1. w \\<in> star A @@ B", "using \\<open>w : X\\<close>"], ["proof (prove)\nusing this:\n  w \\<notin> A ^^ (length w + 1) @@ X\n  w \\<in> X\n\ngoal (1 subgoal):\n 1. w \\<in> star A @@ B", "using arden_helper[OF eq, where n=\"?n\"]"], ["proof (prove)\nusing this:\n  w \\<notin> A ^^ (length w + 1) @@ X\n  w \\<in> X\n  X =\n  A ^^ Suc (length w) @@ X \\<union> (\\<Union>m\\<le>length w. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. w \\<in> star A @@ B", "by (auto simp add: star_def conc_UNION_distrib)"], ["proof (state)\nthis:\n  w \\<in> star A @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "}"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> star A @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "moreover"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> star A @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "{"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> star A @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "assume \"w : star A @@ B\""], ["proof (state)\nthis:\n  w \\<in> star A @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"\\<exists>n. w \\<in> A^^n @@ B\""], ["proof (prove)\nusing this:\n  w \\<in> star A @@ B\n\ngoal (1 subgoal):\n 1. \\<exists>n. w \\<in> A ^^ n @@ B", "by(auto simp: conc_def star_def)"], ["proof (state)\nthis:\n  \\<exists>n. w \\<in> A ^^ n @@ B\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "hence \"w : X\""], ["proof (prove)\nusing this:\n  \\<exists>n. w \\<in> A ^^ n @@ B\n\ngoal (1 subgoal):\n 1. w \\<in> X", "using arden_helper[OF eq]"], ["proof (prove)\nusing this:\n  \\<exists>n. w \\<in> A ^^ n @@ B\n  X = A ^^ Suc ?n @@ X \\<union> (\\<Union>m\\<le>?n. A ^^ m @@ B)\n\ngoal (1 subgoal):\n 1. w \\<in> X", "by blast"], ["proof (state)\nthis:\n  w \\<in> X\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "}"], ["proof (state)\nthis:\n  ?w2 \\<in> star A @@ B \\<Longrightarrow> ?w2 \\<in> X\n\ngoal (2 subgoals):\n 1. X = A @@ X \\<union> B \\<Longrightarrow> X = star A @@ B\n 2. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "ultimately"], ["proof (chain)\npicking this:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> star A @@ B\n  ?w2 \\<in> star A @@ B \\<Longrightarrow> ?w2 \\<in> X", "show \"X = star A @@ B\""], ["proof (prove)\nusing this:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> star A @@ B\n  ?w2 \\<in> star A @@ B \\<Longrightarrow> ?w2 \\<in> X\n\ngoal (1 subgoal):\n 1. X = star A @@ B", "by blast"], ["proof (state)\nthis:\n  X = star A @@ B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "assume eq: \"X = star A @@ B\""], ["proof (state)\nthis:\n  X = star A @@ B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "have \"star A = A @@ star A \\<union> {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = A @@ star A \\<union> {[]}", "by (rule star_unfold_left)"], ["proof (state)\nthis:\n  star A = A @@ star A \\<union> {[]}\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "then"], ["proof (chain)\npicking this:\n  star A = A @@ star A \\<union> {[]}", "have \"star A @@ B = (A @@ star A \\<union> {[]}) @@ B\""], ["proof (prove)\nusing this:\n  star A = A @@ star A \\<union> {[]}\n\ngoal (1 subgoal):\n 1. star A @@ B = (A @@ star A \\<union> {[]}) @@ B", "by metis"], ["proof (state)\nthis:\n  star A @@ B = (A @@ star A \\<union> {[]}) @@ B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "also"], ["proof (state)\nthis:\n  star A @@ B = (A @@ star A \\<union> {[]}) @@ B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "have \"\\<dots> = (A @@ star A) @@ B \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @@ star A \\<union> {[]}) @@ B = (A @@ star A) @@ B \\<union> B", "unfolding conc_Un_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @@ star A) @@ B \\<union> {[]} @@ B = (A @@ star A) @@ B \\<union> B", "by simp"], ["proof (state)\nthis:\n  (A @@ star A \\<union> {[]}) @@ B = (A @@ star A) @@ B \\<union> B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "also"], ["proof (state)\nthis:\n  (A @@ star A \\<union> {[]}) @@ B = (A @@ star A) @@ B \\<union> B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "have \"\\<dots> = A @@ (star A @@ B) \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @@ star A) @@ B \\<union> B = A @@ star A @@ B \\<union> B", "by (simp only: conc_assoc)"], ["proof (state)\nthis:\n  (A @@ star A) @@ B \\<union> B = A @@ star A @@ B \\<union> B\n\ngoal (1 subgoal):\n 1. X = star A @@ B \\<Longrightarrow> X = A @@ X \\<union> B", "finally"], ["proof (chain)\npicking this:\n  star A @@ B = A @@ star A @@ B \\<union> B", "show \"X = A @@ X \\<union> B\""], ["proof (prove)\nusing this:\n  star A @@ B = A @@ star A @@ B \\<union> B\n\ngoal (1 subgoal):\n 1. X = A @@ X \\<union> B", "using eq"], ["proof (prove)\nusing this:\n  star A @@ B = A @@ star A @@ B \\<union> B\n  X = star A @@ B\n\ngoal (1 subgoal):\n 1. X = A @@ X \\<union> B", "by blast"], ["proof (state)\nthis:\n  X = A @@ X \\<union> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reversed_arden_helper:\n  assumes eq: \"X = X @@ A \\<union> B\"\n  shows \"X = X @@ (A ^^ Suc n) \\<union> (\\<Union>m\\<le>n. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. X = X @@ A ^^ Suc 0 \\<union> (\\<Union>m\\<le>0. B @@ A ^^ m)\n 2. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. X = X @@ A ^^ Suc 0 \\<union> (\\<Union>m\\<le>0. B @@ A ^^ m)\n 2. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "show \"X = X @@ (A ^^ Suc 0) \\<union> (\\<Union>m\\<le>0. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X @@ A ^^ Suc 0 \\<union> (\\<Union>m\\<le>0. B @@ A ^^ m)", "using eq"], ["proof (prove)\nusing this:\n  X = X @@ A \\<union> B\n\ngoal (1 subgoal):\n 1. X = X @@ A ^^ Suc 0 \\<union> (\\<Union>m\\<le>0. B @@ A ^^ m)", "by simp"], ["proof (state)\nthis:\n  X = X @@ A ^^ Suc 0 \\<union> (\\<Union>m\\<le>0. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "case (Suc n)"], ["proof (state)\nthis:\n  X = X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "have ih: \"X = X @@ (A ^^ Suc n) \\<union> (\\<Union>m\\<le>n. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)", "by fact"], ["proof (state)\nthis:\n  X = X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "also"], ["proof (state)\nthis:\n  X = X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "have \"\\<dots> = (X @@ A \\<union> B) @@ (A ^^ Suc n) \\<union> (\\<Union>m\\<le>n. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m) =\n    (X @@ A \\<union> B) @@ A ^^ Suc n \\<union>\n    (\\<Union>m\\<le>n. B @@ A ^^ m)", "using eq"], ["proof (prove)\nusing this:\n  X = X @@ A \\<union> B\n\ngoal (1 subgoal):\n 1. X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m) =\n    (X @@ A \\<union> B) @@ A ^^ Suc n \\<union>\n    (\\<Union>m\\<le>n. B @@ A ^^ m)", "by simp"], ["proof (state)\nthis:\n  X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m) =\n  (X @@ A \\<union> B) @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "also"], ["proof (state)\nthis:\n  X @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m) =\n  (X @@ A \\<union> B) @@ A ^^ Suc n \\<union> (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "have \"\\<dots> = X @@ (A ^^ Suc (Suc n)) \\<union> (B @@ (A ^^ Suc n)) \\<union> (\\<Union>m\\<le>n. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X @@ A \\<union> B) @@ A ^^ Suc n \\<union>\n    (\\<Union>m\\<le>n. B @@ A ^^ m) =\n    X @@ A ^^ Suc (Suc n) \\<union> B @@ A ^^ Suc n \\<union>\n    (\\<Union>m\\<le>n. B @@ A ^^ m)", "by (simp add: conc_Un_distrib conc_assoc)"], ["proof (state)\nthis:\n  (X @@ A \\<union> B) @@ A ^^ Suc n \\<union>\n  (\\<Union>m\\<le>n. B @@ A ^^ m) =\n  X @@ A ^^ Suc (Suc n) \\<union> B @@ A ^^ Suc n \\<union>\n  (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "also"], ["proof (state)\nthis:\n  (X @@ A \\<union> B) @@ A ^^ Suc n \\<union>\n  (\\<Union>m\\<le>n. B @@ A ^^ m) =\n  X @@ A ^^ Suc (Suc n) \\<union> B @@ A ^^ Suc n \\<union>\n  (\\<Union>m\\<le>n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "have \"\\<dots> = X @@ (A ^^ Suc (Suc n)) \\<union> (\\<Union>m\\<le>Suc n. B @@ (A ^^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X @@ A ^^ Suc (Suc n) \\<union> B @@ A ^^ Suc n \\<union>\n    (\\<Union>m\\<le>n. B @@ A ^^ m) =\n    X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "by (auto simp add: atMost_Suc)"], ["proof (state)\nthis:\n  X @@ A ^^ Suc (Suc n) \\<union> B @@ A ^^ Suc n \\<union>\n  (\\<Union>m\\<le>n. B @@ A ^^ m) =\n  X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       X =\n       X @@ A ^^ Suc n \\<union>\n       (\\<Union>m\\<le>n. B @@ A ^^ m) \\<Longrightarrow>\n       X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "finally"], ["proof (chain)\npicking this:\n  X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "show \"X = X @@ (A ^^ Suc (Suc n)) \\<union> (\\<Union>m\\<le>Suc n. B @@ (A ^^ m))\""], ["proof (prove)\nusing this:\n  X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)", "."], ["proof (state)\nthis:\n  X = X @@ A ^^ Suc (Suc n) \\<union> (\\<Union>m\\<le>Suc n. B @@ A ^^ m)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem reversed_Arden:\n  assumes nemp: \"[] \\<notin> A\"\n  shows \"X = X @@ A \\<union> B \\<longleftrightarrow> X = B @@ star A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X = X @@ A \\<union> B) = (X = B @@ star A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "assume eq: \"X = X @@ A \\<union> B\""], ["proof (state)\nthis:\n  X = X @@ A \\<union> B\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "{"], ["proof (state)\nthis:\n  X = X @@ A \\<union> B\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "assume \"w : X\""], ["proof (state)\nthis:\n  w \\<in> X\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "let ?n = \"size w\""], ["proof (state)\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "from \\<open>[] \\<notin> A\\<close>"], ["proof (chain)\npicking this:\n  [] \\<notin> A", "have \"\\<forall>u \\<in> A. length u \\<ge> 1\""], ["proof (prove)\nusing this:\n  [] \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>A. 1 \\<le> length u", "by (metis Suc_eq_plus1 add_leD2 le_0_eq length_0_conv not_less_eq_eq)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>A. 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"\\<forall>u \\<in> A^^(?n+1). length u \\<ge> ?n+1\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>A. 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u", "by (metis length_lang_pow_lb nat_mult_1)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"\\<forall>u \\<in> X @@ A^^(?n+1). length u \\<ge> ?n+1\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>X @@ A ^^ (length w + 1). length w + 1 \\<le> length u", "by(auto simp only: conc_def length_append)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>X @@ A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"w \\<notin> X @@ A^^(?n+1)\""], ["proof (prove)\nusing this:\n  \\<forall>u\\<in>X @@ A ^^ (length w + 1). length w + 1 \\<le> length u\n\ngoal (1 subgoal):\n 1. w \\<notin> X @@ A ^^ (length w + 1)", "by auto"], ["proof (state)\nthis:\n  w \\<notin> X @@ A ^^ (length w + 1)\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"w : B @@ star A\""], ["proof (prove)\nusing this:\n  w \\<notin> X @@ A ^^ (length w + 1)\n\ngoal (1 subgoal):\n 1. w \\<in> B @@ star A", "using \\<open>w : X\\<close>"], ["proof (prove)\nusing this:\n  w \\<notin> X @@ A ^^ (length w + 1)\n  w \\<in> X\n\ngoal (1 subgoal):\n 1. w \\<in> B @@ star A", "using reversed_arden_helper[OF eq, where n=\"?n\"]"], ["proof (prove)\nusing this:\n  w \\<notin> X @@ A ^^ (length w + 1)\n  w \\<in> X\n  X =\n  X @@ A ^^ Suc (length w) \\<union> (\\<Union>m\\<le>length w. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. w \\<in> B @@ star A", "by (auto simp add: star_def conc_UNION_distrib)"], ["proof (state)\nthis:\n  w \\<in> B @@ star A\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "}"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> B @@ star A\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "moreover"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> B @@ star A\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "{"], ["proof (state)\nthis:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> B @@ star A\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "assume \"w : B @@ star A\""], ["proof (state)\nthis:\n  w \\<in> B @@ star A\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"\\<exists>n. w \\<in> B @@ A^^n\""], ["proof (prove)\nusing this:\n  w \\<in> B @@ star A\n\ngoal (1 subgoal):\n 1. \\<exists>n. w \\<in> B @@ A ^^ n", "by (auto simp: conc_def star_def)"], ["proof (state)\nthis:\n  \\<exists>n. w \\<in> B @@ A ^^ n\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "hence \"w : X\""], ["proof (prove)\nusing this:\n  \\<exists>n. w \\<in> B @@ A ^^ n\n\ngoal (1 subgoal):\n 1. w \\<in> X", "using reversed_arden_helper[OF eq]"], ["proof (prove)\nusing this:\n  \\<exists>n. w \\<in> B @@ A ^^ n\n  X = X @@ A ^^ Suc ?n \\<union> (\\<Union>m\\<le>?n. B @@ A ^^ m)\n\ngoal (1 subgoal):\n 1. w \\<in> X", "by blast"], ["proof (state)\nthis:\n  w \\<in> X\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "}"], ["proof (state)\nthis:\n  ?w2 \\<in> B @@ star A \\<Longrightarrow> ?w2 \\<in> X\n\ngoal (2 subgoals):\n 1. X = X @@ A \\<union> B \\<Longrightarrow> X = B @@ star A\n 2. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "ultimately"], ["proof (chain)\npicking this:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> B @@ star A\n  ?w2 \\<in> B @@ star A \\<Longrightarrow> ?w2 \\<in> X", "show \"X = B @@ star A\""], ["proof (prove)\nusing this:\n  ?w2 \\<in> X \\<Longrightarrow> ?w2 \\<in> B @@ star A\n  ?w2 \\<in> B @@ star A \\<Longrightarrow> ?w2 \\<in> X\n\ngoal (1 subgoal):\n 1. X = B @@ star A", "by blast"], ["proof (state)\nthis:\n  X = B @@ star A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "assume eq: \"X = B @@ star A\""], ["proof (state)\nthis:\n  X = B @@ star A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "have \"star A = {[]} \\<union> star A @@ A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = {[]} \\<union> star A @@ A", "unfolding conc_star_comm[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. star A = {[]} \\<union> A @@ star A", "by(metis Un_commute star_unfold_left)"], ["proof (state)\nthis:\n  star A = {[]} \\<union> star A @@ A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "then"], ["proof (chain)\npicking this:\n  star A = {[]} \\<union> star A @@ A", "have \"B @@ star A = B @@ ({[]} \\<union> star A @@ A)\""], ["proof (prove)\nusing this:\n  star A = {[]} \\<union> star A @@ A\n\ngoal (1 subgoal):\n 1. B @@ star A = B @@ ({[]} \\<union> star A @@ A)", "by metis"], ["proof (state)\nthis:\n  B @@ star A = B @@ ({[]} \\<union> star A @@ A)\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "also"], ["proof (state)\nthis:\n  B @@ star A = B @@ ({[]} \\<union> star A @@ A)\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "have \"\\<dots> = B \\<union> B @@ (star A @@ A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B @@ ({[]} \\<union> star A @@ A) = B \\<union> B @@ star A @@ A", "unfolding conc_Un_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. B @@ {[]} \\<union> B @@ star A @@ A = B \\<union> B @@ star A @@ A", "by simp"], ["proof (state)\nthis:\n  B @@ ({[]} \\<union> star A @@ A) = B \\<union> B @@ star A @@ A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "also"], ["proof (state)\nthis:\n  B @@ ({[]} \\<union> star A @@ A) = B \\<union> B @@ star A @@ A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "have \"\\<dots> = B \\<union> (B @@ star A) @@ A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<union> B @@ star A @@ A = B \\<union> (B @@ star A) @@ A", "by (simp only: conc_assoc)"], ["proof (state)\nthis:\n  B \\<union> B @@ star A @@ A = B \\<union> (B @@ star A) @@ A\n\ngoal (1 subgoal):\n 1. X = B @@ star A \\<Longrightarrow> X = X @@ A \\<union> B", "finally"], ["proof (chain)\npicking this:\n  B @@ star A = B \\<union> (B @@ star A) @@ A", "show \"X = X @@ A \\<union> B\""], ["proof (prove)\nusing this:\n  B @@ star A = B \\<union> (B @@ star A) @@ A\n\ngoal (1 subgoal):\n 1. X = X @@ A \\<union> B", "using eq"], ["proof (prove)\nusing this:\n  B @@ star A = B \\<union> (B @@ star A) @@ A\n  X = B @@ star A\n\ngoal (1 subgoal):\n 1. X = X @@ A \\<union> B", "by blast"], ["proof (state)\nthis:\n  X = X @@ A \\<union> B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}