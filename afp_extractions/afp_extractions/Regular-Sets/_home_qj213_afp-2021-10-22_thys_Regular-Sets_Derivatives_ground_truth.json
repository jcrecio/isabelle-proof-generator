{"file_name": "/home/qj213/afp-2021-10-22/thys/Regular-Sets/Derivatives.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regular-Sets", "problem_names": ["lemma atoms_deriv_subset: \"atoms (deriv x r) \\<subseteq> atoms r\"", "lemma atoms_derivs_subset: \"atoms (derivs w r) \\<subseteq> atoms r\"", "lemma lang_deriv: \"lang (deriv c r) = Deriv c (lang r)\"", "lemma lang_derivs: \"lang (derivs s r) = Derivs s (lang r)\"", "lemma matcher_correctness: \"matcher r s \\<longleftrightarrow> s \\<in> lang r\"", "lemma Timess_eq_image:\n  \"Timess rs r = (\\<lambda>r'. Times r' r) ` rs\"", "lemma pderivs_append:\n  \"pderivs (s1 @ s2) r = \\<Union> (pderivs s2 ` pderivs s1 r)\"", "lemma pderivs_snoc:\n  shows \"pderivs (s @ [c]) r = pderiv_set c (pderivs s r)\"", "lemma pderivs_simps [simp]:\n  shows \"pderivs s Zero = (if s = [] then {Zero} else {})\"\n  and   \"pderivs s One = (if s = [] then {One} else {})\"\n  and   \"pderivs s (Plus r1 r2) = (if s = [] then {Plus r1 r2} else (pderivs s r1) \\<union> (pderivs s r2))\"", "lemma pderivs_Atom:\n  shows \"pderivs s (Atom c) \\<subseteq> {Atom c, One}\"", "lemma Deriv_pderiv:\n  shows \"Deriv c (lang r) = \\<Union> (lang ` pderiv c r)\"", "lemma Derivs_pderivs:\n  shows \"Derivs s (lang r) = \\<Union> (lang ` pderivs s r)\"", "lemma deriv_pderiv:\n  shows \"\\<Union> (lang ` (pderiv c r)) = lang (deriv c r)\"", "lemma derivs_pderivs:\n  shows \"\\<Union> (lang ` (pderivs s r)) = lang (derivs s r)\"", "lemma pderivs_lang_subsetI:\n  assumes \"\\<And>s. s \\<in> A \\<Longrightarrow> pderivs s r \\<subseteq> C\"\n  shows \"pderivs_lang A r \\<subseteq> C\"", "lemma pderivs_lang_union:\n  shows \"pderivs_lang (A \\<union> B) r = (pderivs_lang A r \\<union> pderivs_lang B r)\"", "lemma pderivs_lang_subset:\n  shows \"A \\<subseteq> B \\<Longrightarrow> pderivs_lang A r \\<subseteq> pderivs_lang B r\"", "lemma pderivs_lang_Zero [simp]:\n  shows \"pderivs_lang UNIV1 Zero = {}\"", "lemma pderivs_lang_One [simp]:\n  shows \"pderivs_lang UNIV1 One = {}\"", "lemma pderivs_lang_Atom [simp]:\n  shows \"pderivs_lang UNIV1 (Atom c) = {One}\"", "lemma pderivs_lang_Plus [simp]:\n  shows \"pderivs_lang UNIV1 (Plus r1 r2) = pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2\"", "lemma PSuf_snoc:\n  shows \"PSuf (s @ [c]) = (PSuf s) @@ {[c]} \\<union> {[c]}\"", "lemma PSuf_Union:\n  shows \"(\\<Union>v \\<in> PSuf s @@ {[c]}. f v) = (\\<Union>v \\<in> PSuf s. f (v @ [c]))\"", "lemma pderivs_lang_snoc:\n  shows \"pderivs_lang (PSuf s @@ {[c]}) r = (pderiv_set c (pderivs_lang (PSuf s) r))\"", "lemma pderivs_Times:\n  shows \"pderivs s (Times r1 r2) \\<subseteq> Timess (pderivs s r1) r2 \\<union> (pderivs_lang (PSuf s) r2)\"", "lemma pderivs_lang_Times_aux1:\n  assumes a: \"s \\<in> UNIV1\"\n  shows \"pderivs_lang (PSuf s) r \\<subseteq> pderivs_lang UNIV1 r\"", "lemma pderivs_lang_Times_aux2:\n  assumes a: \"s \\<in> UNIV1\"\n  shows \"Timess (pderivs s r1) r2 \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2\"", "lemma pderivs_lang_Times:\n  shows \"pderivs_lang UNIV1 (Times r1 r2) \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2\"", "lemma pderivs_Star:\n  assumes a: \"s \\<noteq> []\"\n  shows \"pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\"", "lemma pderivs_lang_Star:\n  shows \"pderivs_lang UNIV1 (Star r) \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)\"", "lemma finite_Timess [simp]:\n  assumes a: \"finite A\"\n  shows \"finite (Timess A r)\"", "lemma finite_pderivs_lang_UNIV1:\n  shows \"finite (pderivs_lang UNIV1 r)\"", "lemma pderivs_lang_UNIV:\n  shows \"pderivs_lang UNIV r = pderivs [] r \\<union> pderivs_lang UNIV1 r\"", "lemma finite_pderivs_lang_UNIV:\n  shows \"finite (pderivs_lang UNIV r)\"", "lemma finite_pderivs_lang:\n  shows \"finite (pderivs_lang A r)\"", "lemma card_Timess_pderivs_lang_le:\n  \"card (Timess (pderivs_lang A r) s) \\<le> card (pderivs_lang A r)\"", "lemma card_pderivs_lang_UNIV1_le_awidth: \"card (pderivs_lang UNIV1 r) \\<le> awidth r\"", "theorem card_pderivs_lang_UNIV_le_awidth: \"card (pderivs_lang UNIV r) \\<le> awidth r + 1\""], "translations": [["", "lemma atoms_deriv_subset: \"atoms (deriv x r) \\<subseteq> atoms r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (deriv x r) \\<subseteq> atoms r", "by (induction r) (auto)"], ["", "lemma atoms_derivs_subset: \"atoms (derivs w r) \\<subseteq> atoms r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (derivs w r) \\<subseteq> atoms r", "by (induction w arbitrary: r) (auto dest: atoms_deriv_subset[THEN subsetD])"], ["", "lemma lang_deriv: \"lang (deriv c r) = Deriv c (lang r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (deriv c r) = Deriv c (lang r)", "by (induct r) (simp_all add: nullable_iff)"], ["", "lemma lang_derivs: \"lang (derivs s r) = Derivs s (lang r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (derivs s r) = Derivs s (lang r)", "by (induct s arbitrary: r) (simp_all add: lang_deriv)"], ["", "text \\<open>A regular expression matcher:\\<close>"], ["", "definition matcher :: \"'a rexp \\<Rightarrow> 'a list \\<Rightarrow> bool\" where\n\"matcher r s = nullable (derivs s r)\""], ["", "lemma matcher_correctness: \"matcher r s \\<longleftrightarrow> s \\<in> lang r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matcher r s = (s \\<in> lang r)", "by (induct s arbitrary: r)\n   (simp_all add: nullable_iff lang_deriv matcher_def Deriv_def)"], ["", "subsection \\<open>Antimirov's partial derivatives\\<close>"], ["", "abbreviation\n  \"Timess rs r \\<equiv> (\\<Union>r' \\<in> rs. {Times r' r})\""], ["", "lemma Timess_eq_image:\n  \"Timess rs r = (\\<lambda>r'. Times r' r) ` rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess rs r = (\\<lambda>r'. Times r' r) ` rs", "by auto"], ["", "primrec\n  pderiv :: \"'a \\<Rightarrow> 'a rexp \\<Rightarrow> 'a rexp set\"\nwhere\n  \"pderiv c Zero = {}\"\n| \"pderiv c One = {}\"\n| \"pderiv c (Atom c') = (if c = c' then {One} else {})\"\n| \"pderiv c (Plus r1 r2) = (pderiv c r1) \\<union> (pderiv c r2)\"\n| \"pderiv c (Times r1 r2) = \n    (if nullable r1 then Timess (pderiv c r1) r2 \\<union> pderiv c r2 else Timess (pderiv c r1) r2)\"\n| \"pderiv c (Star r) = Timess (pderiv c r) (Star r)\""], ["", "primrec\n  pderivs :: \"'a list \\<Rightarrow> 'a rexp \\<Rightarrow> ('a rexp) set\"\nwhere\n  \"pderivs [] r = {r}\"\n| \"pderivs (c # s) r = \\<Union> (pderivs s ` pderiv c r)\""], ["", "abbreviation\n pderiv_set :: \"'a \\<Rightarrow> 'a rexp set \\<Rightarrow> 'a rexp set\"\nwhere\n  \"pderiv_set c rs \\<equiv> \\<Union> (pderiv c ` rs)\""], ["", "abbreviation\n  pderivs_set :: \"'a list \\<Rightarrow> 'a rexp set \\<Rightarrow> 'a rexp set\"\nwhere\n  \"pderivs_set s rs \\<equiv> \\<Union> (pderivs s ` rs)\""], ["", "lemma pderivs_append:\n  \"pderivs (s1 @ s2) r = \\<Union> (pderivs s2 ` pderivs s1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs (s1 @ s2) r = pderivs_set s2 (pderivs s1 r)", "by (induct s1 arbitrary: r) (simp_all)"], ["", "lemma pderivs_snoc:\n  shows \"pderivs (s @ [c]) r = pderiv_set c (pderivs s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) r = pderiv_set c (pderivs s r)", "by (simp add: pderivs_append)"], ["", "lemma pderivs_simps [simp]:\n  shows \"pderivs s Zero = (if s = [] then {Zero} else {})\"\n  and   \"pderivs s One = (if s = [] then {One} else {})\"\n  and   \"pderivs s (Plus r1 r2) = (if s = [] then {Plus r1 r2} else (pderivs s r1) \\<union> (pderivs s r2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs s Zero = (if s = [] then {Zero} else {}) &&&\n    pderivs s One = (if s = [] then {One} else {}) &&&\n    pderivs s (Plus r1 r2) =\n    (if s = [] then {Plus r1 r2} else pderivs s r1 \\<union> pderivs s r2)", "by (induct s) (simp_all)"], ["", "lemma pderivs_Atom:\n  shows \"pderivs s (Atom c) \\<subseteq> {Atom c, One}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs s (Atom c) \\<subseteq> {Atom c, One}", "by (induct s) (simp_all)"], ["", "subsection \\<open>Relating left-quotients and partial derivatives\\<close>"], ["", "lemma Deriv_pderiv:\n  shows \"Deriv c (lang r) = \\<Union> (lang ` pderiv c r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deriv c (lang r) = \\<Union> (lang ` pderiv c r)", "by (induct r) (auto simp add: nullable_iff conc_UNION_distrib)"], ["", "lemma Derivs_pderivs:\n  shows \"Derivs s (lang r) = \\<Union> (lang ` pderivs s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs s (lang r) = \\<Union> (lang ` pderivs s r)", "proof (induct s arbitrary: r)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "case (Cons c s)"], ["proof (state)\nthis:\n  Derivs s (lang ?r) = \\<Union> (lang ` pderivs s ?r)\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have ih: \"\\<And>r. Derivs s (lang r) = \\<Union> (lang ` pderivs s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r. Derivs s (lang r) = \\<Union> (lang ` pderivs s r)", "by fact"], ["proof (state)\nthis:\n  Derivs s (lang ?r) = \\<Union> (lang ` pderivs s ?r)\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have \"Derivs (c # s) (lang r) = Derivs s (Deriv c (lang r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs (c # s) (lang r) = Derivs s (Deriv c (lang r))", "by simp"], ["proof (state)\nthis:\n  Derivs (c # s) (lang r) = Derivs s (Deriv c (lang r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "also"], ["proof (state)\nthis:\n  Derivs (c # s) (lang r) = Derivs s (Deriv c (lang r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have \"\\<dots> = Derivs s (\\<Union> (lang ` pderiv c r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs s (Deriv c (lang r)) = Derivs s (\\<Union> (lang ` pderiv c r))", "by (simp add: Deriv_pderiv)"], ["proof (state)\nthis:\n  Derivs s (Deriv c (lang r)) = Derivs s (\\<Union> (lang ` pderiv c r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "also"], ["proof (state)\nthis:\n  Derivs s (Deriv c (lang r)) = Derivs s (\\<Union> (lang ` pderiv c r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have \"\\<dots> = Derivss s (lang ` (pderiv c r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivs s (\\<Union> (lang ` pderiv c r)) = Derivss s (lang ` pderiv c r)", "by (auto simp add:  Derivs_def)"], ["proof (state)\nthis:\n  Derivs s (\\<Union> (lang ` pderiv c r)) = Derivss s (lang ` pderiv c r)\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "also"], ["proof (state)\nthis:\n  Derivs s (\\<Union> (lang ` pderiv c r)) = Derivss s (lang ` pderiv c r)\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have \"\\<dots> = \\<Union> (lang ` (pderivs_set s (pderiv c r)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Derivss s (lang ` pderiv c r) =\n    \\<Union> (lang ` pderivs_set s (pderiv c r))", "using ih"], ["proof (prove)\nusing this:\n  Derivs s (lang ?r) = \\<Union> (lang ` pderivs s ?r)\n\ngoal (1 subgoal):\n 1. Derivss s (lang ` pderiv c r) =\n    \\<Union> (lang ` pderivs_set s (pderiv c r))", "by auto"], ["proof (state)\nthis:\n  Derivss s (lang ` pderiv c r) =\n  \\<Union> (lang ` pderivs_set s (pderiv c r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "also"], ["proof (state)\nthis:\n  Derivss s (lang ` pderiv c r) =\n  \\<Union> (lang ` pderivs_set s (pderiv c r))\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "have \"\\<dots> = \\<Union> (lang ` (pderivs (c # s) r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lang ` pderivs_set s (pderiv c r)) =\n    \\<Union> (lang ` pderivs (c # s) r)", "by simp"], ["proof (state)\nthis:\n  \\<Union> (lang ` pderivs_set s (pderiv c r)) =\n  \\<Union> (lang ` pderivs (c # s) r)\n\ngoal (2 subgoals):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)\n 2. \\<And>a s r.\n       (\\<And>r.\n           Derivs s (lang r) =\n           \\<Union> (lang ` pderivs s r)) \\<Longrightarrow>\n       Derivs (a # s) (lang r) = \\<Union> (lang ` pderivs (a # s) r)", "finally"], ["proof (chain)\npicking this:\n  Derivs (c # s) (lang r) = \\<Union> (lang ` pderivs (c # s) r)", "show \"Derivs (c # s) (lang r) = \\<Union> (lang ` pderivs (c # s) r)\""], ["proof (prove)\nusing this:\n  Derivs (c # s) (lang r) = \\<Union> (lang ` pderivs (c # s) r)\n\ngoal (1 subgoal):\n 1. Derivs (c # s) (lang r) = \\<Union> (lang ` pderivs (c # s) r)", "."], ["proof (state)\nthis:\n  Derivs (c # s) (lang r) = \\<Union> (lang ` pderivs (c # s) r)\n\ngoal (1 subgoal):\n 1. \\<And>r. Derivs [] (lang r) = \\<Union> (lang ` pderivs [] r)", "qed (simp add: Derivs_def)"], ["", "subsection \\<open>Relating derivatives and partial derivatives\\<close>"], ["", "lemma deriv_pderiv:\n  shows \"\\<Union> (lang ` (pderiv c r)) = lang (deriv c r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lang ` pderiv c r) = lang (deriv c r)", "unfolding lang_deriv Deriv_pderiv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lang ` pderiv c r) = \\<Union> (lang ` pderiv c r)", "by simp"], ["", "lemma derivs_pderivs:\n  shows \"\\<Union> (lang ` (pderivs s r)) = lang (derivs s r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lang ` pderivs s r) = lang (derivs s r)", "unfolding lang_derivs Derivs_pderivs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (lang ` pderivs s r) = \\<Union> (lang ` pderivs s r)", "by simp"], ["", "subsection \\<open>Finiteness property of partial derivatives\\<close>"], ["", "definition\n  pderivs_lang :: \"'a lang \\<Rightarrow> 'a rexp \\<Rightarrow> 'a rexp set\"\nwhere\n  \"pderivs_lang A r \\<equiv> \\<Union>x \\<in> A. pderivs x r\""], ["", "lemma pderivs_lang_subsetI:\n  assumes \"\\<And>s. s \\<in> A \\<Longrightarrow> pderivs s r \\<subseteq> C\"\n  shows \"pderivs_lang A r \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang A r \\<subseteq> C", "using assms"], ["proof (prove)\nusing this:\n  ?s \\<in> A \\<Longrightarrow> pderivs ?s r \\<subseteq> C\n\ngoal (1 subgoal):\n 1. pderivs_lang A r \\<subseteq> C", "unfolding pderivs_lang_def"], ["proof (prove)\nusing this:\n  ?s \\<in> A \\<Longrightarrow> pderivs ?s r \\<subseteq> C\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>A. pderivs x r) \\<subseteq> C", "by (rule UN_least)"], ["", "lemma pderivs_lang_union:\n  shows \"pderivs_lang (A \\<union> B) r = (pderivs_lang A r \\<union> pderivs_lang B r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang (A \\<union> B) r =\n    pderivs_lang A r \\<union> pderivs_lang B r", "by (simp add: pderivs_lang_def)"], ["", "lemma pderivs_lang_subset:\n  shows \"A \\<subseteq> B \\<Longrightarrow> pderivs_lang A r \\<subseteq> pderivs_lang B r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    pderivs_lang A r \\<subseteq> pderivs_lang B r", "by (auto simp add: pderivs_lang_def)"], ["", "definition\n  \"UNIV1 \\<equiv> UNIV - {[]}\""], ["", "lemma pderivs_lang_Zero [simp]:\n  shows \"pderivs_lang UNIV1 Zero = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 Zero = {}", "unfolding UNIV1_def pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>UNIV - {[]}. pderivs x Zero) = {}", "by auto"], ["", "lemma pderivs_lang_One [simp]:\n  shows \"pderivs_lang UNIV1 One = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 One = {}", "unfolding UNIV1_def pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>UNIV - {[]}. pderivs x One) = {}", "by (auto split: if_splits)"], ["", "lemma pderivs_lang_Atom [simp]:\n  shows \"pderivs_lang UNIV1 (Atom c) = {One}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 (Atom c) = {One}", "unfolding UNIV1_def pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>UNIV - {[]}. pderivs x (Atom c)) = {One}", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> pderivs xa (Atom c); x \\<noteq> One\\<rbrakk>\n       \\<Longrightarrow> xa = []", "apply(frule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> pderivs xa (Atom c); x \\<noteq> One\\<rbrakk>\n       \\<Longrightarrow> pderivs xa (Atom c) \\<subseteq> ?B42 x xa\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> pderivs xa (Atom c); x \\<noteq> One;\n        x \\<in> ?B42 x xa\\<rbrakk>\n       \\<Longrightarrow> xa = []", "apply(rule pderivs_Atom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> pderivs xa (Atom c); x \\<noteq> One;\n        x \\<in> {Atom c, One}\\<rbrakk>\n       \\<Longrightarrow> xa = []", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>Atom c \\<in> pderivs xa (Atom c); x = Atom c\\<rbrakk>\n       \\<Longrightarrow> xa = []", "apply(case_tac xa)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>Atom c \\<in> pderivs xa (Atom c); x = Atom c;\n        xa = []\\<rbrakk>\n       \\<Longrightarrow> xa = []\n 2. \\<And>x xa a list.\n       \\<lbrakk>Atom c \\<in> pderivs xa (Atom c); x = Atom c;\n        xa = a # list\\<rbrakk>\n       \\<Longrightarrow> xa = []", "apply(auto split: if_splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma pderivs_lang_Plus [simp]:\n  shows \"pderivs_lang UNIV1 (Plus r1 r2) = pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 (Plus r1 r2) =\n    pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2", "unfolding UNIV1_def pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>UNIV - {[]}. pderivs x (Plus r1 r2)) =\n    (\\<Union>x\\<in>UNIV - {[]}. pderivs x r1) \\<union>\n    (\\<Union>x\\<in>UNIV - {[]}. pderivs x r2)", "by auto"], ["", "text \\<open>Non-empty suffixes of a string (needed for the cases of @{const Times} and @{const Star} below)\\<close>"], ["", "definition\n  \"PSuf s \\<equiv> {v. v \\<noteq> [] \\<and> (\\<exists>u. u @ v = s)}\""], ["", "lemma PSuf_snoc:\n  shows \"PSuf (s @ [c]) = (PSuf s) @@ {[c]} \\<union> {[c]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PSuf (s @ [c]) = PSuf s @@ {[c]} \\<union> {[c]}", "unfolding PSuf_def conc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. v \\<noteq> [] \\<and> (\\<exists>u. u @ v = s @ [c])} =\n    {xs @ ys |xs ys.\n     xs \\<in> {v. v \\<noteq> [] \\<and> (\\<exists>u. u @ v = s)} \\<and>\n     ys \\<in> {[c]}} \\<union>\n    {[c]}", "by (auto simp add: append_eq_append_conv2 append_eq_Cons_conv)"], ["", "lemma PSuf_Union:\n  shows \"(\\<Union>v \\<in> PSuf s @@ {[c]}. f v) = (\\<Union>v \\<in> PSuf s. f (v @ [c]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (f ` (PSuf s @@ {[c]})) = (\\<Union>v\\<in>PSuf s. f (v @ [c]))", "by (auto simp add: conc_def)"], ["", "lemma pderivs_lang_snoc:\n  shows \"pderivs_lang (PSuf s @@ {[c]}) r = (pderiv_set c (pderivs_lang (PSuf s) r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang (PSuf s @@ {[c]}) r =\n    pderiv_set c (pderivs_lang (PSuf s) r)", "unfolding pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>PSuf s @@ {[c]}. pderivs x r) =\n    pderiv_set c (\\<Union>x\\<in>PSuf s. pderivs x r)", "by (simp add: PSuf_Union pderivs_snoc)"], ["", "lemma pderivs_Times:\n  shows \"pderivs s (Times r1 r2) \\<subseteq> Timess (pderivs s r1) r2 \\<union> (pderivs_lang (PSuf s) r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs s (Times r1 r2)\n    \\<subseteq> Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2", "proof (induct s rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "case (snoc c s)"], ["proof (state)\nthis:\n  pderivs s (Times r1 r2)\n  \\<subseteq> Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have ih: \"pderivs s (Times r1 r2) \\<subseteq> Timess (pderivs s r1) r2 \\<union> (pderivs_lang (PSuf s) r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs s (Times r1 r2)\n    \\<subseteq> Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2", "by fact"], ["proof (state)\nthis:\n  pderivs s (Times r1 r2)\n  \\<subseteq> Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"pderivs (s @ [c]) (Times r1 r2) = pderiv_set c (pderivs s (Times r1 r2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Times r1 r2) = pderiv_set c (pderivs s (Times r1 r2))", "by (simp add: pderivs_snoc)"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Times r1 r2) = pderiv_set c (pderivs s (Times r1 r2))\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Times r1 r2) = pderiv_set c (pderivs s (Times r1 r2))\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> \\<subseteq> pderiv_set c (Timess (pderivs s r1) r2 \\<union> (pderivs_lang (PSuf s) r2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (pderivs s (Times r1 r2))\n    \\<subseteq> pderiv_set c\n                 (Timess (pderivs s r1) r2 \\<union>\n                  pderivs_lang (PSuf s) r2)", "using ih"], ["proof (prove)\nusing this:\n  pderivs s (Times r1 r2)\n  \\<subseteq> Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2\n\ngoal (1 subgoal):\n 1. pderiv_set c (pderivs s (Times r1 r2))\n    \\<subseteq> pderiv_set c\n                 (Timess (pderivs s r1) r2 \\<union>\n                  pderivs_lang (PSuf s) r2)", "by fastforce"], ["proof (state)\nthis:\n  pderiv_set c (pderivs s (Times r1 r2))\n  \\<subseteq> pderiv_set c\n               (Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2)\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderiv_set c (pderivs s (Times r1 r2))\n  \\<subseteq> pderiv_set c\n               (Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2)\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> = pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderiv_set c (pderivs_lang (PSuf s) r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c\n     (Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2) =\n    pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n    pderiv_set c (pderivs_lang (PSuf s) r2)", "by (simp)"], ["proof (state)\nthis:\n  pderiv_set c\n   (Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2) =\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderiv_set c (pderivs_lang (PSuf s) r2)\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderiv_set c\n   (Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2) =\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderiv_set c (pderivs_lang (PSuf s) r2)\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> = pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderivs_lang (PSuf s @@ {[c]}) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n    pderiv_set c (pderivs_lang (PSuf s) r2) =\n    pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2", "by (simp add: pderivs_lang_snoc)"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderiv_set c (pderivs_lang (PSuf s) r2) =\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderiv_set c (pderivs_lang (PSuf s) r2) =\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> \\<subseteq> pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderiv c r2 \\<union> pderivs_lang (PSuf s @@ {[c]}) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2\n    \\<subseteq> pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n                pderiv c r2 \\<union>\n                pderivs_lang (PSuf s @@ {[c]}) r2", "by auto"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n  \\<subseteq> pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n              pderiv c r2 \\<union>\n              pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n  \\<subseteq> pderiv_set c (Timess (pderivs s r1) r2) \\<union>\n              pderiv c r2 \\<union>\n              pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> \\<subseteq> Timess (pderiv_set c (pderivs s r1)) r2 \\<union> pderiv c r2 \\<union> pderivs_lang (PSuf s @@ {[c]}) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderiv c r2 \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2\n    \\<subseteq> Timess (pderiv_set c (pderivs s r1)) r2 \\<union>\n                pderiv c r2 \\<union>\n                pderivs_lang (PSuf s @@ {[c]}) r2", "by (auto simp add: if_splits)"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n  \\<subseteq> Timess (pderiv_set c (pderivs s r1)) r2 \\<union>\n              pderiv c r2 \\<union>\n              pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs s r1) r2) \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n  \\<subseteq> Timess (pderiv_set c (pderivs s r1)) r2 \\<union>\n              pderiv c r2 \\<union>\n              pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> = Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union> pderivs_lang (PSuf s @@ {[c]}) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderiv_set c (pderivs s r1)) r2 \\<union> pderiv c r2 \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2 =\n    Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2", "by (simp add: pderivs_snoc)"], ["proof (state)\nthis:\n  Timess (pderiv_set c (pderivs s r1)) r2 \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2 =\n  Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "also"], ["proof (state)\nthis:\n  Timess (pderiv_set c (pderivs s r1)) r2 \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2 =\n  Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "have \"\\<dots> \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union> pderivs_lang (PSuf (s @ [c])) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n    pderivs_lang (PSuf s @@ {[c]}) r2\n    \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n                pderivs_lang (PSuf (s @ [c])) r2", "unfolding pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n    (\\<Union>x\\<in>PSuf s @@ {[c]}. pderivs x r2)\n    \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n                (\\<Union>x\\<in>PSuf (s @ [c]). pderivs x r2)", "by (auto simp add: PSuf_snoc)"], ["proof (state)\nthis:\n  Timess (pderivs (s @ [c]) r1) r2 \\<union> pderiv c r2 \\<union>\n  pderivs_lang (PSuf s @@ {[c]}) r2\n  \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n              pderivs_lang (PSuf (s @ [c])) r2\n\ngoal (2 subgoals):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2\n 2. \\<And>x xs.\n       pderivs xs (Times r1 r2)\n       \\<subseteq> Timess (pderivs xs r1) r2 \\<union>\n                   pderivs_lang (PSuf xs) r2 \\<Longrightarrow>\n       pderivs (xs @ [x]) (Times r1 r2)\n       \\<subseteq> Timess (pderivs (xs @ [x]) r1) r2 \\<union>\n                   pderivs_lang (PSuf (xs @ [x])) r2", "finally"], ["proof (chain)\npicking this:\n  pderivs (s @ [c]) (Times r1 r2)\n  \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n              pderivs_lang (PSuf (s @ [c])) r2", "show ?case"], ["proof (prove)\nusing this:\n  pderivs (s @ [c]) (Times r1 r2)\n  \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n              pderivs_lang (PSuf (s @ [c])) r2\n\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Times r1 r2)\n    \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n                pderivs_lang (PSuf (s @ [c])) r2", "."], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Times r1 r2)\n  \\<subseteq> Timess (pderivs (s @ [c]) r1) r2 \\<union>\n              pderivs_lang (PSuf (s @ [c])) r2\n\ngoal (1 subgoal):\n 1. pderivs [] (Times r1 r2)\n    \\<subseteq> Timess (pderivs [] r1) r2 \\<union> pderivs_lang (PSuf []) r2", "qed (simp)"], ["", "lemma pderivs_lang_Times_aux1:\n  assumes a: \"s \\<in> UNIV1\"\n  shows \"pderivs_lang (PSuf s) r \\<subseteq> pderivs_lang UNIV1 r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang (PSuf s) r \\<subseteq> pderivs_lang UNIV1 r", "using a"], ["proof (prove)\nusing this:\n  s \\<in> UNIV1\n\ngoal (1 subgoal):\n 1. pderivs_lang (PSuf s) r \\<subseteq> pderivs_lang UNIV1 r", "unfolding UNIV1_def PSuf_def pderivs_lang_def"], ["proof (prove)\nusing this:\n  s \\<in> UNIV - {[]}\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>{v. v \\<noteq> [] \\<and> (\\<exists>u. u @ v = s)}.\n        pderivs x r)\n    \\<subseteq> (\\<Union>x\\<in>UNIV - {[]}. pderivs x r)", "by auto"], ["", "lemma pderivs_lang_Times_aux2:\n  assumes a: \"s \\<in> UNIV1\"\n  shows \"Timess (pderivs s r1) r2 \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderivs s r1) r2 \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2", "using a"], ["proof (prove)\nusing this:\n  s \\<in> UNIV1\n\ngoal (1 subgoal):\n 1. Timess (pderivs s r1) r2 \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2", "unfolding pderivs_lang_def"], ["proof (prove)\nusing this:\n  s \\<in> UNIV1\n\ngoal (1 subgoal):\n 1. Timess (pderivs s r1) r2\n    \\<subseteq> Timess (\\<Union>x\\<in>UNIV1. pderivs x r1) r2", "by auto"], ["", "lemma pderivs_lang_Times:\n  shows \"pderivs_lang UNIV1 (Times r1 r2) \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 (Times r1 r2)\n    \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n                pderivs_lang UNIV1 r2", "apply(rule pderivs_lang_subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       pderivs s (Times r1 r2)\n       \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n                   pderivs_lang UNIV1 r2", "apply(rule subset_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       pderivs s (Times r1 r2) \\<subseteq> ?B2 s\n 2. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       ?B2 s\n       \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n                   pderivs_lang UNIV1 r2", "apply(rule pderivs_Times)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2\n       \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n                   pderivs_lang UNIV1 r2", "using pderivs_lang_Times_aux1 pderivs_lang_Times_aux2"], ["proof (prove)\nusing this:\n  ?s \\<in> UNIV1 \\<Longrightarrow>\n  pderivs_lang (PSuf ?s) ?r \\<subseteq> pderivs_lang UNIV1 ?r\n  ?s \\<in> UNIV1 \\<Longrightarrow>\n  Timess (pderivs ?s ?r1.0) ?r2.0\n  \\<subseteq> Timess (pderivs_lang UNIV1 ?r1.0) ?r2.0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       Timess (pderivs s r1) r2 \\<union> pderivs_lang (PSuf s) r2\n       \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n                   pderivs_lang UNIV1 r2", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r'.\n       \\<lbrakk>s \\<in> UNIV1;\n        \\<And>s r.\n           s \\<in> UNIV1 \\<Longrightarrow>\n           pderivs_lang (PSuf s) r \\<subseteq> pderivs_lang UNIV1 r;\n        \\<And>s r2 r1.\n           s \\<in> UNIV1 \\<Longrightarrow>\n           Timess (pderivs s r1) r2\n           \\<subseteq> Timess (pderivs_lang UNIV1 r1) r2;\n        r' \\<in> pderivs s r1;\n        Times r' r2 \\<notin> pderivs_lang UNIV1 r2\\<rbrakk>\n       \\<Longrightarrow> r' \\<in> pderivs_lang UNIV1 r1", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma pderivs_Star:\n  assumes a: \"s \\<noteq> []\"\n  shows \"pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)", "using a"], ["proof (prove)\nusing this:\n  s \\<noteq> []\n\ngoal (1 subgoal):\n 1. pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)", "proof (induct s rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "case (snoc c s)"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\n  s @ [c] \\<noteq> []\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have ih: \"s \\<noteq> [] \\<Longrightarrow> pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> [] \\<Longrightarrow>\n    pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)", "by fact"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "{"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "assume asm: \"s \\<noteq> []\""], ["proof (state)\nthis:\n  s \\<noteq> []\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have \"pderivs (s @ [c]) (Star r) = pderiv_set c (pderivs s (Star r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Star r) = pderiv_set c (pderivs s (Star r))", "by (simp add: pderivs_snoc)"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Star r) = pderiv_set c (pderivs s (Star r))\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "also"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Star r) = pderiv_set c (pderivs s (Star r))\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have \"\\<dots> \\<subseteq> pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (pderivs s (Star r))\n    \\<subseteq> pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))", "using ih[OF asm]"], ["proof (prove)\nusing this:\n  pderivs s (Star r) \\<subseteq> Timess (pderivs_lang (PSuf s) r) (Star r)\n\ngoal (1 subgoal):\n 1. pderiv_set c (pderivs s (Star r))\n    \\<subseteq> pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))", "by fast"], ["proof (state)\nthis:\n  pderiv_set c (pderivs s (Star r))\n  \\<subseteq> pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "also"], ["proof (state)\nthis:\n  pderiv_set c (pderivs s (Star r))\n  \\<subseteq> pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have \"\\<dots> \\<subseteq> Timess (pderiv_set c (pderivs_lang (PSuf s) r)) (Star r) \\<union> pderiv c (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\n    \\<subseteq> Timess (pderiv_set c (pderivs_lang (PSuf s) r))\n                 (Star r) \\<union>\n                pderiv c (Star r)", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\n  \\<subseteq> Timess (pderiv_set c (pderivs_lang (PSuf s) r))\n               (Star r) \\<union>\n              pderiv c (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "also"], ["proof (state)\nthis:\n  pderiv_set c (Timess (pderivs_lang (PSuf s) r) (Star r))\n  \\<subseteq> Timess (pderiv_set c (pderivs_lang (PSuf s) r))\n               (Star r) \\<union>\n              pderiv c (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have \"\\<dots> \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union> (Timess (pderiv c r) (Star r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderiv_set c (pderivs_lang (PSuf s) r)) (Star r) \\<union>\n    pderiv c (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union>\n                Timess (pderiv c r) (Star r)", "by (simp only: PSuf_snoc pderivs_lang_snoc pderivs_lang_union)\n         (auto simp add: pderivs_lang_def)"], ["proof (state)\nthis:\n  Timess (pderiv_set c (pderivs_lang (PSuf s) r)) (Star r) \\<union>\n  pderiv c (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union>\n              Timess (pderiv c r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "also"], ["proof (state)\nthis:\n  Timess (pderiv_set c (pderivs_lang (PSuf s) r)) (Star r) \\<union>\n  pderiv c (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union>\n              Timess (pderiv c r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "have \"\\<dots> = Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union>\n    Timess (pderiv c r) (Star r) =\n    Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "by (auto simp add: PSuf_snoc PSuf_Union pderivs_snoc pderivs_lang_def)"], ["proof (state)\nthis:\n  Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r) \\<union>\n  Timess (pderiv c r) (Star r) =\n  Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "finally"], ["proof (chain)\npicking this:\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "have ?case"], ["proof (prove)\nusing this:\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "."], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "}"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "moreover"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "{"], ["proof (state)\nthis:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "assume asm: \"s = []\""], ["proof (state)\nthis:\n  s = []\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "then"], ["proof (chain)\npicking this:\n  s = []", "have ?case"], ["proof (prove)\nusing this:\n  s = []\n\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "by (auto simp add: pderivs_lang_def pderivs_snoc PSuf_def)"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "}"], ["proof (state)\nthis:\n  s = [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)\n 2. \\<And>x xs.\n       \\<lbrakk>xs \\<noteq> [] \\<Longrightarrow>\n                pderivs xs (Star r)\n                \\<subseteq> Timess (pderivs_lang (PSuf xs) r) (Star r);\n        xs @ [x] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pderivs (xs @ [x]) (Star r)\n                         \\<subseteq> Timess\n(pderivs_lang (PSuf (xs @ [x])) r) (Star r)", "ultimately"], ["proof (chain)\npicking this:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n  s = [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "show ?case"], ["proof (prove)\nusing this:\n  s \\<noteq> [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n  s = [] \\<Longrightarrow>\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (1 subgoal):\n 1. pderivs (s @ [c]) (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)", "by blast"], ["proof (state)\nthis:\n  pderivs (s @ [c]) (Star r)\n  \\<subseteq> Timess (pderivs_lang (PSuf (s @ [c])) r) (Star r)\n\ngoal (1 subgoal):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pderivs [] (Star r)\n    \\<subseteq> Timess (pderivs_lang (PSuf []) r) (Star r)", "qed (simp)"], ["", "lemma pderivs_lang_Star:\n  shows \"pderivs_lang UNIV1 (Star r) \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV1 (Star r)\n    \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)", "apply(rule pderivs_lang_subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       pderivs s (Star r) \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)", "apply(rule subset_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow> pderivs s (Star r) \\<subseteq> ?B2 s\n 2. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       ?B2 s \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)", "apply(rule pderivs_Star)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> UNIV1 \\<Longrightarrow> s \\<noteq> []\n 2. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       Timess (pderivs_lang (PSuf s) r) (Star r)\n       \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)", "apply(simp add: UNIV1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> UNIV1 \\<Longrightarrow>\n       Timess (pderivs_lang (PSuf s) r) (Star r)\n       \\<subseteq> Timess (pderivs_lang UNIV1 r) (Star r)", "apply(simp add: UNIV1_def PSuf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<noteq> [] \\<Longrightarrow>\n       Timess\n        (pderivs_lang {v. v \\<noteq> [] \\<and> (\\<exists>u. u @ v = s)} r)\n        (Star r)\n       \\<subseteq> Timess (pderivs_lang (UNIV - {[]}) r) (Star r)", "apply(auto simp add: pderivs_lang_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma finite_Timess [simp]:\n  assumes a: \"finite A\"\n  shows \"finite (Timess A r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Timess A r)", "using a"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (Timess A r)", "by auto"], ["", "lemma finite_pderivs_lang_UNIV1:\n  shows \"finite (pderivs_lang UNIV1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pderivs_lang UNIV1 r)", "apply(induct r)"], ["proof (prove)\ngoal (6 subgoals):\n 1. finite (pderivs_lang UNIV1 Zero)\n 2. finite (pderivs_lang UNIV1 One)\n 3. \\<And>x. finite (pderivs_lang UNIV1 (Atom x))\n 4. \\<And>r1 r2.\n       \\<lbrakk>finite (pderivs_lang UNIV1 r1);\n        finite (pderivs_lang UNIV1 r2)\\<rbrakk>\n       \\<Longrightarrow> finite (pderivs_lang UNIV1 (Plus r1 r2))\n 5. \\<And>r1 r2.\n       \\<lbrakk>finite (pderivs_lang UNIV1 r1);\n        finite (pderivs_lang UNIV1 r2)\\<rbrakk>\n       \\<Longrightarrow> finite (pderivs_lang UNIV1 (Times r1 r2))\n 6. \\<And>r.\n       finite (pderivs_lang UNIV1 r) \\<Longrightarrow>\n       finite (pderivs_lang UNIV1 (Star r))", "apply(simp_all add: \n  finite_subset[OF pderivs_lang_Times]\n  finite_subset[OF pderivs_lang_Star])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma pderivs_lang_UNIV:\n  shows \"pderivs_lang UNIV r = pderivs [] r \\<union> pderivs_lang UNIV1 r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pderivs_lang UNIV r = pderivs [] r \\<union> pderivs_lang UNIV1 r", "unfolding UNIV1_def pderivs_lang_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x. pderivs x r) =\n    pderivs [] r \\<union> (\\<Union>x\\<in>UNIV - {[]}. pderivs x r)", "by blast"], ["", "lemma finite_pderivs_lang_UNIV:\n  shows \"finite (pderivs_lang UNIV r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pderivs_lang UNIV r)", "unfolding pderivs_lang_UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pderivs [] r \\<union> pderivs_lang UNIV1 r)", "by (simp add: finite_pderivs_lang_UNIV1)"], ["", "lemma finite_pderivs_lang:\n  shows \"finite (pderivs_lang A r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pderivs_lang A r)", "by (metis finite_pderivs_lang_UNIV pderivs_lang_subset rev_finite_subset subset_UNIV)"], ["", "text\\<open>The following relationship between the alphabetic width of regular expressions\n(called \\<open>awidth\\<close> below) and the number of partial derivatives was proved\nby Antimirov~\\cite{Antimirov95} and formalized by Max Haslbeck.\\<close>"], ["", "fun awidth :: \"'a rexp \\<Rightarrow> nat\" where\n\"awidth Zero = 0\" |\n\"awidth One = 0\" |\n\"awidth (Atom a) = 1\" |\n\"awidth (Plus r1 r2) = awidth r1 + awidth r2\" |\n\"awidth (Times r1 r2) = awidth r1 + awidth r2\" |\n\"awidth (Star r1) = awidth r1\""], ["", "lemma card_Timess_pderivs_lang_le:\n  \"card (Timess (pderivs_lang A r) s) \\<le> card (pderivs_lang A r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Timess (pderivs_lang A r) s) \\<le> card (pderivs_lang A r)", "using finite_pderivs_lang"], ["proof (prove)\nusing this:\n  finite (pderivs_lang ?A ?r)\n\ngoal (1 subgoal):\n 1. card (Timess (pderivs_lang A r) s) \\<le> card (pderivs_lang A r)", "unfolding Timess_eq_image"], ["proof (prove)\nusing this:\n  finite (pderivs_lang ?A ?r)\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>r'. Times r' s) ` pderivs_lang A r)\n    \\<le> card (pderivs_lang A r)", "by (rule card_image_le)"], ["", "lemma card_pderivs_lang_UNIV1_le_awidth: \"card (pderivs_lang UNIV1 r) \\<le> awidth r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r) \\<le> awidth r", "proof (induction r)"], ["proof (state)\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "case (Plus r1 r2)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1) \\<le> awidth r1\n  card (pderivs_lang UNIV1 r2) \\<le> awidth r2\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"card (pderivs_lang UNIV1 (Plus r1 r2)) = card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Plus r1 r2)) =\n    card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)", "by simp"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Plus r1 r2)) =\n  card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Plus r1 r2)) =\n  card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\n    \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)", "by(simp add: card_Un_le)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\n  \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1 \\<union> pderivs_lang UNIV1 r2)\n  \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> awidth (Plus r1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n    \\<le> awidth (Plus r1 r2)", "using Plus.IH"], ["proof (prove)\nusing this:\n  card (pderivs_lang UNIV1 r1) \\<le> awidth r1\n  card (pderivs_lang UNIV1 r2) \\<le> awidth r2\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n    \\<le> awidth (Plus r1 r2)", "by simp"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n  \\<le> awidth (Plus r1 r2)\n\ngoal (6 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Plus r1 r2))\n                         \\<le> awidth (Plus r1 r2)\n 5. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 6. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "finally"], ["proof (chain)\npicking this:\n  card (pderivs_lang UNIV1 (Plus r1 r2)) \\<le> awidth (Plus r1 r2)", "show ?case"], ["proof (prove)\nusing this:\n  card (pderivs_lang UNIV1 (Plus r1 r2)) \\<le> awidth (Plus r1 r2)\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Plus r1 r2)) \\<le> awidth (Plus r1 r2)", "."], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Plus r1 r2)) \\<le> awidth (Plus r1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "case (Times r1 r2)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1) \\<le> awidth r1\n  card (pderivs_lang UNIV1 r2) \\<le> awidth r2\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"card (pderivs_lang UNIV1 (Times r1 r2)) \\<le> card (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Times r1 r2))\n    \\<le> card\n           (Timess (pderivs_lang UNIV1 r1) r2 \\<union>\n            pderivs_lang UNIV1 r2)", "by (simp add: card_mono finite_pderivs_lang pderivs_lang_Times)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Times r1 r2))\n  \\<le> card\n         (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Times r1 r2))\n  \\<le> card\n         (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> card (Timess (pderivs_lang UNIV1 r1) r2) + card (pderivs_lang UNIV1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\n    \\<le> card (Timess (pderivs_lang UNIV1 r1) r2) +\n          card (pderivs_lang UNIV1 r2)", "by (simp add: card_Un_le)"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\n  \\<le> card (Timess (pderivs_lang UNIV1 r1) r2) +\n        card (pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r1) r2 \\<union> pderivs_lang UNIV1 r2)\n  \\<le> card (Timess (pderivs_lang UNIV1 r1) r2) +\n        card (pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Timess (pderivs_lang UNIV1 r1) r2) + card (pderivs_lang UNIV1 r2)\n    \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)", "by (simp add: card_Timess_pderivs_lang_le)"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r1) r2) + card (pderivs_lang UNIV1 r2)\n  \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r1) r2) + card (pderivs_lang UNIV1 r2)\n  \\<le> card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> awidth (Times r1 r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n    \\<le> awidth (Times r1 r2)", "using Times.IH"], ["proof (prove)\nusing this:\n  card (pderivs_lang UNIV1 r1) \\<le> awidth r1\n  card (pderivs_lang UNIV1 r2) \\<le> awidth r2\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n    \\<le> awidth (Times r1 r2)", "by simp"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r1) + card (pderivs_lang UNIV1 r2)\n  \\<le> awidth (Times r1 r2)\n\ngoal (5 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r1 r2.\n       \\<lbrakk>card (pderivs_lang UNIV1 r1) \\<le> awidth r1;\n        card (pderivs_lang UNIV1 r2) \\<le> awidth r2\\<rbrakk>\n       \\<Longrightarrow> card (pderivs_lang UNIV1 (Times r1 r2))\n                         \\<le> awidth (Times r1 r2)\n 5. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "finally"], ["proof (chain)\npicking this:\n  card (pderivs_lang UNIV1 (Times r1 r2)) \\<le> awidth (Times r1 r2)", "show ?case"], ["proof (prove)\nusing this:\n  card (pderivs_lang UNIV1 (Times r1 r2)) \\<le> awidth (Times r1 r2)\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Times r1 r2)) \\<le> awidth (Times r1 r2)", "."], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Times r1 r2)) \\<le> awidth (Times r1 r2)\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "case (Star r)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r) \\<le> awidth r\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"card (pderivs_lang UNIV1 (Star r)) \\<le> card (Timess (pderivs_lang UNIV1 r) (Star r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Star r))\n    \\<le> card (Timess (pderivs_lang UNIV1 r) (Star r))", "by (simp add: card_mono finite_pderivs_lang pderivs_lang_Star)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Star r))\n  \\<le> card (Timess (pderivs_lang UNIV1 r) (Star r))\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Star r))\n  \\<le> card (Timess (pderivs_lang UNIV1 r) (Star r))\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> card (pderivs_lang UNIV1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Timess (pderivs_lang UNIV1 r) (Star r))\n    \\<le> card (pderivs_lang UNIV1 r)", "by (rule card_Timess_pderivs_lang_le)"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r) (Star r))\n  \\<le> card (pderivs_lang UNIV1 r)\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "also"], ["proof (state)\nthis:\n  card (Timess (pderivs_lang UNIV1 r) (Star r))\n  \\<le> card (pderivs_lang UNIV1 r)\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "have \"\\<dots> \\<le> awidth (Star r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 r) \\<le> awidth (Star r)", "by (simp add: Star.IH)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 r) \\<le> awidth (Star r)\n\ngoal (4 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)\n 4. \\<And>r.\n       card (pderivs_lang UNIV1 r) \\<le> awidth r \\<Longrightarrow>\n       card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "finally"], ["proof (chain)\npicking this:\n  card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "show ?case"], ["proof (prove)\nusing this:\n  card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)", "."], ["proof (state)\nthis:\n  card (pderivs_lang UNIV1 (Star r)) \\<le> awidth (Star r)\n\ngoal (3 subgoals):\n 1. card (pderivs_lang UNIV1 Zero) \\<le> awidth Zero\n 2. card (pderivs_lang UNIV1 One) \\<le> awidth One\n 3. \\<And>x. card (pderivs_lang UNIV1 (Atom x)) \\<le> awidth (Atom x)", "qed (auto)"], ["", "text\\<open>Antimirov's Theorem 3.4:\\<close>"], ["", "theorem card_pderivs_lang_UNIV_le_awidth: \"card (pderivs_lang UNIV r) \\<le> awidth r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "have \"card (insert r (pderivs_lang UNIV1 r)) \\<le> Suc (card (pderivs_lang UNIV1 r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert r (pderivs_lang UNIV1 r))\n    \\<le> Suc (card (pderivs_lang UNIV1 r))", "by(auto simp: card_insert_if[OF finite_pderivs_lang_UNIV1])"], ["proof (state)\nthis:\n  card (insert r (pderivs_lang UNIV1 r))\n  \\<le> Suc (card (pderivs_lang UNIV1 r))\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "also"], ["proof (state)\nthis:\n  card (insert r (pderivs_lang UNIV1 r))\n  \\<le> Suc (card (pderivs_lang UNIV1 r))\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "have \"\\<dots> \\<le> Suc (awidth r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (card (pderivs_lang UNIV1 r)) \\<le> Suc (awidth r)", "by(simp add: card_pderivs_lang_UNIV1_le_awidth)"], ["proof (state)\nthis:\n  Suc (card (pderivs_lang UNIV1 r)) \\<le> Suc (awidth r)\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "finally"], ["proof (chain)\npicking this:\n  card (insert r (pderivs_lang UNIV1 r)) \\<le> Suc (awidth r)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (insert r (pderivs_lang UNIV1 r)) \\<le> Suc (awidth r)\n\ngoal (1 subgoal):\n 1. card (pderivs_lang UNIV r) \\<le> awidth r + 1", "by(simp add: pderivs_lang_UNIV)"], ["proof (state)\nthis:\n  card (pderivs_lang UNIV r) \\<le> awidth r + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Antimirov's Corollary 3.5:\\<close>"], ["", "corollary card_pderivs_lang_le_awidth: \"card (pderivs_lang A r) \\<le> awidth r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pderivs_lang A r) \\<le> awidth r + 1", "by(rule order_trans[OF\n  card_mono[OF finite_pderivs_lang_UNIV pderivs_lang_subset[OF subset_UNIV]]\n  card_pderivs_lang_UNIV_le_awidth])"], ["", "end"]]}