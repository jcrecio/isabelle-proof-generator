{"file_name": "/home/qj213/afp-2021-10-22/thys/Regular-Sets/NDerivative.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regular-Sets", "problem_names": ["lemma lang_nPlus[simp]: \"lang (nPlus r s) = lang (Plus r s)\"", "lemma lang_nTimes[simp]: \"lang (nTimes r s) = lang (Times r s)\"", "lemma lang_norm[simp]: \"lang (norm r) = lang r\"", "lemma lang_nderiv: \"lang (nderiv a r) = Deriv a (lang r)\"", "lemma deriv_no_occurrence: \n  \"x \\<notin> atoms r \\<Longrightarrow> nderiv x r = Zero\"", "lemma atoms_nPlus[simp]: \"atoms (nPlus r s) = atoms r \\<union> atoms s\"", "lemma atoms_nTimes: \"atoms (nTimes r s) \\<subseteq> atoms r \\<union> atoms s\"", "lemma atoms_norm: \"atoms (norm r) \\<subseteq> atoms r\"", "lemma atoms_nderiv: \"atoms (nderiv a r) \\<subseteq> atoms r\""], "translations": [["", "lemma lang_nPlus[simp]: \"lang (nPlus r s) = lang (Plus r s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (nPlus r s) = lang (Plus r s)", "by (induction r s rule: nPlus.induct) auto"], ["", "text \\<open>associativity, zero, one\\<close>"], ["", "fun nTimes :: \"'a::order rexp \\<Rightarrow> 'a rexp \\<Rightarrow> 'a rexp\"\nwhere\n  \"nTimes Zero _ = Zero\"\n| \"nTimes _ Zero = Zero\"\n| \"nTimes One r = r\"\n| \"nTimes r One = r\"\n| \"nTimes (Times r s) t = Times r (nTimes s t)\"\n| \"nTimes r s = Times r s\""], ["", "lemma lang_nTimes[simp]: \"lang (nTimes r s) = lang (Times r s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (nTimes r s) = lang (Times r s)", "by (induction r s rule: nTimes.induct) (auto simp: conc_assoc)"], ["", "primrec norm :: \"'a::order rexp \\<Rightarrow> 'a rexp\"\nwhere\n  \"norm Zero = Zero\"\n| \"norm One = One\"\n| \"norm (Atom a) = Atom a\"\n| \"norm (Plus r s) = nPlus (norm r) (norm s)\"\n| \"norm (Times r s) = nTimes (norm r) (norm s)\"\n| \"norm (Star r) = Star (norm r)\""], ["", "lemma lang_norm[simp]: \"lang (norm r) = lang r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (norm r) = lang r", "by (induct r) auto"], ["", "primrec nderiv :: \"'a::order \\<Rightarrow> 'a rexp \\<Rightarrow> 'a rexp\"\nwhere\n  \"nderiv _ Zero = Zero\"\n| \"nderiv _ One = Zero\"\n| \"nderiv a (Atom b) = (if a = b then One else Zero)\"\n| \"nderiv a (Plus r s) = nPlus (nderiv a r) (nderiv a s)\"\n| \"nderiv a (Times r s) =\n    (let r's = nTimes (nderiv a r) s\n     in if nullable r then nPlus r's (nderiv a s) else r's)\"\n| \"nderiv a (Star r) = nTimes (nderiv a r) (Star r)\""], ["", "lemma lang_nderiv: \"lang (nderiv a r) = Deriv a (lang r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lang (nderiv a r) = Deriv a (lang r)", "by (induction r) (auto simp: Let_def nullable_iff)"], ["", "lemma deriv_no_occurrence: \n  \"x \\<notin> atoms r \\<Longrightarrow> nderiv x r = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> atoms r \\<Longrightarrow> nderiv x r = Zero", "by (induction r) auto"], ["", "lemma atoms_nPlus[simp]: \"atoms (nPlus r s) = atoms r \\<union> atoms s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (nPlus r s) = atoms r \\<union> atoms s", "by (induction r s rule: nPlus.induct) auto"], ["", "lemma atoms_nTimes: \"atoms (nTimes r s) \\<subseteq> atoms r \\<union> atoms s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (nTimes r s) \\<subseteq> atoms r \\<union> atoms s", "by (induction r s rule: nTimes.induct) auto"], ["", "lemma atoms_norm: \"atoms (norm r) \\<subseteq> atoms r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (norm r) \\<subseteq> atoms r", "by (induction r) (auto dest!:subsetD[OF atoms_nTimes])"], ["", "lemma atoms_nderiv: \"atoms (nderiv a r) \\<subseteq> atoms r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms (nderiv a r) \\<subseteq> atoms r", "by (induction r) (auto simp: Let_def dest!:subsetD[OF atoms_nTimes])"], ["", "end"]]}