{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinal_Partitions/Partitions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinal_Partitions", "problem_names": ["lemma partn_lst_E:\n  assumes \"partn_lst r B \\<alpha> n\" \"f \\<in> nsets B n \\<rightarrow>  {..<l}\" \"l = length \\<alpha>\"\n  obtains i H where \"i < l\" \"H \\<subseteq> B\"\n                     \"ordertype H r = \\<alpha>!i\" \"f ` (nsets H n) \\<subseteq> {i}\"", "lemma partn_lst_VWF_nontriv:\n  assumes \"partn_lst_VWF \\<beta> \\<alpha> n\" \"l = length \\<alpha>\" \"Ord \\<beta>\" \"l > 0\"\n  obtains i where \"i < l\" \"\\<alpha>!i \\<le> \\<beta>\"", "lemma partn_lst_triv0:\n  assumes \"\\<alpha>!i = 0\" \"i < length \\<alpha>\" \"n \\<noteq> 0\"\n  shows \"partn_lst r B \\<alpha> n\"", "lemma partn_lst_triv1:\n  assumes \"\\<alpha>!i \\<le> 1\" \"i < length \\<alpha>\" \"n > 1\" \"B \\<noteq> {}\" \"wf r\"  \n  shows \"partn_lst r B \\<alpha> n\"", "lemma partn_lst_two_swap:\n  assumes \"partn_lst r B [x,y] n\" shows \"partn_lst r B [y,x] n\"", "lemma partn_lst_greater_resource:\n  assumes M: \"partn_lst r B \\<alpha> n\" and \"B \\<subseteq> C\"\n  shows \"partn_lst r C \\<alpha> n\"", "lemma partn_lst_less:\n  assumes M: \"partn_lst r B \\<alpha> n\" and eq: \"length \\<alpha>' = length \\<alpha>\" and \"List.set \\<alpha>' \\<subseteq> ON\"\n    and le: \"\\<And>i. i < length \\<alpha> \\<Longrightarrow> \\<alpha>'!i \\<le> \\<alpha>!i \"\n    and r: \"wf r\" \"trans r\" \"total_on B r\" and \"small B\"\n  shows \"partn_lst r B \\<alpha>' n\"", "lemma partn_lst_VWF_degenerate:\n  assumes \"k < n\"\n  shows \"partn_lst_VWF \\<omega> (ord_of_nat k # \\<alpha>s) n\"", "lemma partn_lst_VWF_\\<omega>_2:\n  assumes \"Ord \\<alpha>\"\n  shows \"partn_lst_VWF (\\<omega> \\<up> (1+\\<alpha>)) [2, \\<omega> \\<up> (1+\\<alpha>)] 2\" (is  \"partn_lst_VWF ?\\<beta> _ _\")", "lemma partn_lst_imp_partn_lst_VWF_eq:\n  assumes part: \"partn_lst r U \\<alpha> n\" and \\<beta>: \"ordertype U r = \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst_VWF \\<beta> \\<alpha> n\"", "lemma partn_lst_imp_partn_lst_VWF:\n  assumes part: \"partn_lst r U \\<alpha> n\" and \\<beta>: \"ordertype U r \\<le> \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst_VWF \\<beta> \\<alpha> n\"", "lemma partn_lst_VWF_imp_partn_lst_eq:\n  assumes part: \"partn_lst_VWF \\<beta> \\<alpha> n\" and \\<beta>: \"ordertype U r = \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst r U \\<alpha> n\"", "lemma Ramsey_partn: \"partn_lst_VWF \\<omega> [\\<omega>,\\<omega>] 2\"", "lemma ordertype_UNIV_\\<omega>2: \"ordertype UNIV pair_less = \\<omega>\\<up>2\"", "lemma ordertype_UU_ge_\\<omega>2:  \"ordertype UNIV pair_less \\<le> ordertype UU pair_less\"", "lemma ordertype_UU_\\<omega>2: \"ordertype UU pair_less = \\<omega>\\<up>2\"", "lemma lemma_2_3:\n  fixes f :: \"(nat \\<times> nat) set \\<Rightarrow> nat\"\n  assumes \"f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\"\n  obtains N js where \"infinite N\" and \"\\<And>k u. \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k; scheme u \\<subseteq> N\\<rbrakk> \\<Longrightarrow> f u = js!k\"", "lemma lemma_2_4:\n  assumes \"infinite N\" \"k < 4\"\n  obtains M where \"M \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\" \"\\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\"", "lemma lemma_2_5:\n  assumes \"infinite N\"\n  obtains X where \"X \\<subseteq> UU\" \"ordertype X pair_less = \\<omega>\\<up>2\"\n            \"\\<And>u. u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\"", "lemma Specker_aux:\n  assumes \"\\<alpha> \\<in> elts \\<omega>\"\n  shows \"partn_lst pair_less UU [\\<omega>\\<up>2,\\<alpha>] 2\"", "theorem Specker: \"\\<alpha> \\<in> elts \\<omega> \\<Longrightarrow> partn_lst_VWF (\\<omega>\\<up>2) [\\<omega>\\<up>2,\\<alpha>] 2\""], "translations": [["", "lemma partn_lst_E:\n  assumes \"partn_lst r B \\<alpha> n\" \"f \\<in> nsets B n \\<rightarrow>  {..<l}\" \"l = length \\<alpha>\"\n  obtains i H where \"i < l\" \"H \\<subseteq> B\"\n                     \"ordertype H r = \\<alpha>!i\" \"f ` (nsets H n) \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < l; H \\<subseteq> B; ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  Partitions.partn_lst r B \\<alpha> n\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<l}\n  l = length \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < l; H \\<subseteq> B; ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: partn_lst_def)"], ["", "lemma partn_lst_VWF_nontriv:\n  assumes \"partn_lst_VWF \\<beta> \\<alpha> n\" \"l = length \\<alpha>\" \"Ord \\<beta>\" \"l > 0\"\n  obtains i where \"i < l\" \"\\<alpha>!i \\<le> \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"{..<l} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<l} \\<noteq> {}", "by (simp add: \\<open>l > 0\\<close> lessThan_empty_iff)"], ["proof (state)\nthis:\n  {..<l} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  {..<l} \\<noteq> {}", "obtain f where  \"f \\<in> nsets (elts \\<beta>) n  \\<rightarrow>  {..<l}\""], ["proof (prove)\nusing this:\n  {..<l} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n                {..<l} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson Pi_eq_empty equals0I)"], ["proof (state)\nthis:\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<l}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<l}", "obtain i H where \"i < l\" \"H \\<subseteq> elts \\<beta>\" and eq: \"tp H = \\<alpha>!i\""], ["proof (prove)\nusing this:\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<l}\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < l; H \\<subseteq> elts \\<beta>;\n         tp H = \\<alpha> ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<l}\n  partn_lst_VWF \\<beta> \\<alpha> n\n  l = length \\<alpha>\n  Ord \\<beta>\n  0 < l\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < l; H \\<subseteq> elts \\<beta>;\n         tp H = \\<alpha> ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis partn_lst_E)"], ["proof (state)\nthis:\n  i < l\n  H \\<subseteq> elts \\<beta>\n  tp H = \\<alpha> ! i\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  i < l\n  H \\<subseteq> elts \\<beta>\n  tp H = \\<alpha> ! i", "have \"\\<alpha>!i \\<le> \\<beta>\""], ["proof (prove)\nusing this:\n  i < l\n  H \\<subseteq> elts \\<beta>\n  tp H = \\<alpha> ! i\n\ngoal (1 subgoal):\n 1. \\<alpha> ! i \\<le> \\<beta>", "by (metis \\<open>H \\<subseteq> elts \\<beta>\\<close> \\<open>Ord \\<beta>\\<close> eq ordertype_le_Ord)"], ["proof (state)\nthis:\n  \\<alpha> ! i \\<le> \\<beta>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < l; \\<alpha> ! i \\<le> \\<beta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<alpha> ! i \\<le> \\<beta>", "show thesis"], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> \\<beta>\n\ngoal (1 subgoal):\n 1. thesis", "using \\<open>i < l\\<close> that"], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> \\<beta>\n  i < l\n  \\<lbrakk>?i < l; \\<alpha> ! ?i \\<le> \\<beta>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_triv0:\n  assumes \"\\<alpha>!i = 0\" \"i < length \\<alpha>\" \"n \\<noteq> 0\"\n  shows \"partn_lst r B \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B \\<alpha> n", "by (metis partn_lst_def assms bot_least image_empty nsets_empty_iff ordertype_empty)"], ["", "lemma partn_lst_triv1:\n  assumes \"\\<alpha>!i \\<le> 1\" \"i < length \\<alpha>\" \"n > 1\" \"B \\<noteq> {}\" \"wf r\"  \n  shows \"partn_lst r B \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B \\<alpha> n", "unfolding partn_lst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>[B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}.\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "obtain \\<gamma> where \"\\<gamma> \\<in> B\" \"\\<alpha> \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<gamma>.\n        \\<lbrakk>\\<gamma> \\<in> B; \\<alpha> \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms mem_0_Ord"], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  \\<lbrakk>Ord ?k; ?k \\<noteq> 0\\<rbrakk> \\<Longrightarrow> 0 \\<in> elts ?k\n\ngoal (1 subgoal):\n 1. (\\<And>\\<gamma>.\n        \\<lbrakk>\\<gamma> \\<in> B; \\<alpha> \\<noteq> []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<gamma> \\<in> B\n  \\<alpha> \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have 01: \"\\<alpha>!i = 0 \\<or> \\<alpha>!i = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1", "using assms"], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n\ngoal (1 subgoal):\n 1. \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1", "by (fastforce simp: one_V_def)"], ["proof (state)\nthis:\n  \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "assume f: \"f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (state)\nthis:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "with assms"], ["proof (chain)\npicking this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "have \"ordertype {\\<gamma>} r = 1 \\<and> f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\"\n                  \"ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. ordertype {\\<gamma>} r = 1 \\<and>\n    f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i} &&&\n    ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by (auto simp: one_V_def ordertype_insert nsets_eq_empty)"], ["proof (state)\nthis:\n  ordertype {\\<gamma>} r = 1 \\<and>\n  f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "with assms 01"], ["proof (chain)\npicking this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1\n  ordertype {\\<gamma>} r = 1 \\<and>\n  f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i<length \\<alpha>. \\<exists>H\\<subseteq>B. ordertype H r = \\<alpha> ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1\n  ordertype {\\<gamma>} r = 1 \\<and>\n  f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>B.\n          ordertype H r = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using \\<open>\\<gamma> \\<in> B\\<close>"], ["proof (prove)\nusing this:\n  \\<alpha> ! i \\<le> 1\n  i < length \\<alpha>\n  1 < n\n  B \\<noteq> {}\n  wf r\n  \\<alpha> ! i = 0 \\<or> \\<alpha> ! i = 1\n  ordertype {\\<gamma>} r = 1 \\<and>\n  f ` [{\\<gamma>}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  ordertype {} r = 0 \\<and> f ` [{}]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  \\<gamma> \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>B.\n          ordertype H r = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by auto"], ["proof (state)\nthis:\n  \\<exists>i<length \\<alpha>.\n     \\<exists>H\\<subseteq>B.\n        ordertype H r = \\<alpha> ! i \\<and>\n        f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_two_swap:\n  assumes \"partn_lst r B [x,y] n\" shows \"partn_lst r B [y,x] n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "fix f :: \"'a set \\<Rightarrow> nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "assume f: \"f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\""], ["proof (state)\nthis:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "then"], ["proof (chain)\npicking this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}", "have f': \"(\\<lambda>i. 1 - i) \\<circ> f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\""], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\n\ngoal (1 subgoal):\n 1. (-) 1 \\<circ> f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}", "by (auto simp: Pi_def)"], ["proof (state)\nthis:\n  (-) 1 \\<circ> f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "obtain i H where \"i<2\" \"H \\<subseteq> B\" \"ordertype H r = ([x,y]!i)\" \"((\\<lambda>i. 1 - i) \\<circ> f) ` (nsets H n) \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < 2; H \\<subseteq> B; ordertype H r = [x, y] ! i;\n         ((-) 1 \\<circ> f) ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: partn_lst_E [OF assms f'])"], ["proof (state)\nthis:\n  i < 2\n  H \\<subseteq> B\n  ordertype H r = [x, y] ! i\n  ((-) 1 \\<circ> f) ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "moreover"], ["proof (state)\nthis:\n  i < 2\n  H \\<subseteq> B\n  ordertype H r = [x, y] ! i\n  ((-) 1 \\<circ> f) ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "have \"f x = Suc 0\" if \"Suc 0 \\<le> f x\" \"x\\<in>[H]\\<^bsup>n\\<^esup>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = Suc 0", "using f that \\<open>H \\<subseteq> B\\<close> nsets_mono"], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2}\n  Suc 0 \\<le> f x\n  x \\<in> [H]\\<^bsup>n\\<^esup>\n  H \\<subseteq> B\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  [?A]\\<^bsup>?n\\<^esup> \\<subseteq> [?B]\\<^bsup>?n\\<^esup>\n\ngoal (1 subgoal):\n 1. f x = Suc 0", "by (fastforce simp: Pi_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>Suc 0 \\<le> f ?x; ?x \\<in> [H]\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?x = Suc 0\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "ultimately"], ["proof (chain)\npicking this:\n  i < 2\n  H \\<subseteq> B\n  ordertype H r = [x, y] ! i\n  ((-) 1 \\<circ> f) ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  \\<lbrakk>Suc 0 \\<le> f ?x; ?x \\<in> [H]\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?x = Suc 0", "have \"ordertype H r = [y,x] ! (1-i) \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {1-i}\""], ["proof (prove)\nusing this:\n  i < 2\n  H \\<subseteq> B\n  ordertype H r = [x, y] ! i\n  ((-) 1 \\<circ> f) ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  \\<lbrakk>Suc 0 \\<le> f ?x; ?x \\<in> [H]\\<^bsup>n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?x = Suc 0\n\ngoal (1 subgoal):\n 1. ordertype H r = [y, x] ! (1 - i) \\<and>\n    f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {1 - i}", "by (force simp: eval_nat_numeral less_Suc_eq)"], ["proof (state)\nthis:\n  ordertype H r = [y, x] ! (1 - i) \\<and>\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {1 - i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "then"], ["proof (chain)\npicking this:\n  ordertype H r = [y, x] ! (1 - i) \\<and>\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {1 - i}", "have \"\\<exists>i H. i<2 \\<and> H\\<subseteq>B \\<and> ordertype H r = [y,x] ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  ordertype H r = [y, x] ! (1 - i) \\<and>\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {1 - i}\n\ngoal (1 subgoal):\n 1. \\<exists>i H.\n       i < 2 \\<and>\n       H \\<subseteq> B \\<and>\n       ordertype H r = [y, x] ! i \\<and>\n       f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by (metis Suc_1 \\<open>H \\<subseteq> B\\<close> diff_less_Suc)"], ["proof (state)\nthis:\n  \\<exists>i H.\n     i < 2 \\<and>\n     H \\<subseteq> B \\<and>\n     ordertype H r = [y, x] ! i \\<and>\n     f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "}"], ["proof (state)\nthis:\n  ?f2 \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2} \\<Longrightarrow>\n  \\<exists>i H.\n     i < 2 \\<and>\n     H \\<subseteq> B \\<and>\n     ordertype H r = [y, x] ! i \\<and>\n     ?f2 ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "then"], ["proof (chain)\npicking this:\n  ?f2 \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2} \\<Longrightarrow>\n  \\<exists>i H.\n     i < 2 \\<and>\n     H \\<subseteq> B \\<and>\n     ordertype H r = [y, x] ! i \\<and>\n     ?f2 ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?f2 \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<2} \\<Longrightarrow>\n  \\<exists>i H.\n     i < 2 \\<and>\n     H \\<subseteq> B \\<and>\n     ordertype H r = [y, x] ! i \\<and>\n     ?f2 ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B [y, x] n", "by (auto simp: partn_lst_def eval_nat_numeral)"], ["proof (state)\nthis:\n  Partitions.partn_lst r B [y, x] n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_greater_resource:\n  assumes M: \"partn_lst r B \\<alpha> n\" and \"B \\<subseteq> C\"\n  shows \"partn_lst r C \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r C \\<alpha> n", "proof (clarsimp simp: partn_lst_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>C.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>C.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "assume \"f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (state)\nthis:\n  f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>C.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "have \"f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (prove)\nusing this:\n  f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "by (metis \\<open>B \\<subseteq> C\\<close> part_fn_def part_fn_subset)"], ["proof (state)\nthis:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>C.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "obtain i H where \"i < length \\<alpha>\"\n                   and \"H \\<subseteq> B\" \"ordertype H r = (\\<alpha>!i)\"\n                   and \"f ` nsets H n \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < length \\<alpha>; H \\<subseteq> B;\n         ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using M partn_lst_def"], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n  Partitions.partn_lst r B \\<alpha> n\n  Partitions.partn_lst ?r ?B ?\\<alpha> ?n \\<equiv>\n  \\<forall>f\\<in>[?B]\\<^bsup>?n\\<^esup> \\<rightarrow> {..<length ?\\<alpha>}.\n     \\<exists>i<length ?\\<alpha>.\n        \\<exists>H\\<subseteq>?B.\n           ordertype H ?r = ?\\<alpha> ! i \\<and>\n           f ` [H]\\<^bsup>?n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < length \\<alpha>; H \\<subseteq> B;\n         ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [C]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>C.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i<length \\<alpha>. \\<exists>H\\<subseteq>C. ordertype H r = \\<alpha> ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>C.\n          ordertype H r = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using \\<open>B \\<subseteq> C\\<close>"], ["proof (prove)\nusing this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  B \\<subseteq> C\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>C.\n          ordertype H r = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by blast"], ["proof (state)\nthis:\n  \\<exists>i<length \\<alpha>.\n     \\<exists>H\\<subseteq>C.\n        ordertype H r = \\<alpha> ! i \\<and>\n        f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_less:\n  assumes M: \"partn_lst r B \\<alpha> n\" and eq: \"length \\<alpha>' = length \\<alpha>\" and \"List.set \\<alpha>' \\<subseteq> ON\"\n    and le: \"\\<And>i. i < length \\<alpha> \\<Longrightarrow> \\<alpha>'!i \\<le> \\<alpha>!i \"\n    and r: \"wf r\" \"trans r\" \"total_on B r\" and \"small B\"\n  shows \"partn_lst r B \\<alpha>' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r B \\<alpha>' n", "proof (clarsimp simp: partn_lst_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "assume \"f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>'}\""], ["proof (state)\nthis:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>'}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>'}", "obtain i H where \"i < length \\<alpha>\"\n                   and \"H \\<subseteq> B\" \"small H\" and H: \"ordertype H r = (\\<alpha>!i)\"\n                   and fi: \"f ` nsets H n \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>'}\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < length \\<alpha>; H \\<subseteq> B; small H;\n         ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>'}\n  Partitions.partn_lst r B \\<alpha> n\n  length \\<alpha>' = length \\<alpha>\n  list.set \\<alpha>' \\<subseteq> ON\n  ?i < length \\<alpha> \\<Longrightarrow> \\<alpha>' ! ?i \\<le> \\<alpha> ! ?i\n  wf r\n  trans r\n  total_on B r\n  small B\n\ngoal (1 subgoal):\n 1. (\\<And>i H.\n        \\<lbrakk>i < length \\<alpha>; H \\<subseteq> B; small H;\n         ordertype H r = \\<alpha> ! i;\n         f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: partn_lst_def smaller_than_small)"], ["proof (state)\nthis:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  small H\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  small H\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have bij: \"bij_betw (ordermap H r) H (elts (\\<alpha>!i))\""], ["proof (prove)\nusing this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  small H\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. bij_betw (ordermap H r) H (elts (\\<alpha> ! i))", "using ordermap_bij [of r H]"], ["proof (prove)\nusing this:\n  i < length \\<alpha>\n  H \\<subseteq> B\n  small H\n  ordertype H r = \\<alpha> ! i\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  \\<lbrakk>wf r; total_on H r; small H\\<rbrakk>\n  \\<Longrightarrow> bij_betw (ordermap H r) H (elts (ordertype H r))\n\ngoal (1 subgoal):\n 1. bij_betw (ordermap H r) H (elts (\\<alpha> ! i))", "by (smt assms(8) in_mono r(1) r(3) smaller_than_small total_on_def)"], ["proof (state)\nthis:\n  bij_betw (ordermap H r) H (elts (\\<alpha> ! i))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "define H' where \"H' = inv_into H (ordermap H r) ` (elts (\\<alpha>'!i))\""], ["proof (state)\nthis:\n  H' = inv_into H (ordermap H r) ` elts (\\<alpha>' ! i)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have \"H' \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H' \\<subseteq> H", "using bij \\<open>i < length \\<alpha>\\<close> bij_betw_imp_surj_on le"], ["proof (prove)\nusing this:\n  bij_betw (ordermap H r) H (elts (\\<alpha> ! i))\n  i < length \\<alpha>\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n  ?i < length \\<alpha> \\<Longrightarrow> \\<alpha>' ! ?i \\<le> \\<alpha> ! ?i\n\ngoal (1 subgoal):\n 1. H' \\<subseteq> H", "by (force simp: H'_def image_subset_iff intro: inv_into_into)"], ["proof (state)\nthis:\n  H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "moreover"], ["proof (state)\nthis:\n  H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have ot: \"ordertype H' r = (\\<alpha>'!i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype H' r = \\<alpha>' ! i", "proof (subst ordertype_eq_iff)"], ["proof (state)\ngoal (6 subgoals):\n 1. Ord (\\<alpha>' ! i)\n 2. wf r\n 3. small H'\n 4. total_on H' r\n 5. trans r\n 6. \\<exists>f.\n       bij_betw f H' (elts (\\<alpha>' ! i)) \\<and>\n       (\\<forall>x\\<in>H'.\n           \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))", "show \"Ord (\\<alpha>' ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (\\<alpha>' ! i)", "using assms"], ["proof (prove)\nusing this:\n  Partitions.partn_lst r B \\<alpha> n\n  length \\<alpha>' = length \\<alpha>\n  list.set \\<alpha>' \\<subseteq> ON\n  ?i < length \\<alpha> \\<Longrightarrow> \\<alpha>' ! ?i \\<le> \\<alpha> ! ?i\n  wf r\n  trans r\n  total_on B r\n  small B\n\ngoal (1 subgoal):\n 1. Ord (\\<alpha>' ! i)", "by (simp add: \\<open>i < length \\<alpha>\\<close> subset_eq)"], ["proof (state)\nthis:\n  Ord (\\<alpha>' ! i)\n\ngoal (5 subgoals):\n 1. wf r\n 2. small H'\n 3. total_on H' r\n 4. trans r\n 5. \\<exists>f.\n       bij_betw f H' (elts (\\<alpha>' ! i)) \\<and>\n       (\\<forall>x\\<in>H'.\n           \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))", "show \"small H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small H'", "by (simp add: H'_def)"], ["proof (state)\nthis:\n  small H'\n\ngoal (4 subgoals):\n 1. wf r\n 2. total_on H' r\n 3. trans r\n 4. \\<exists>f.\n       bij_betw f H' (elts (\\<alpha>' ! i)) \\<and>\n       (\\<forall>x\\<in>H'.\n           \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))", "show \"\\<exists>f. bij_betw f H' (elts (\\<alpha>' ! i)) \\<and> (\\<forall>x\\<in>H'. \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       bij_betw f H' (elts (\\<alpha>' ! i)) \\<and>\n       (\\<forall>x\\<in>H'.\n           \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))", "proof (intro exI conjI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw ?f H' (elts (\\<alpha>' ! i))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H'; y \\<in> H'\\<rbrakk>\n       \\<Longrightarrow> (?f x < ?f y) = ((x, y) \\<in> r)", "show \"bij_betw (ordermap H r) H' (elts (\\<alpha>' ! i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (ordermap H r) H' (elts (\\<alpha>' ! i))", "using \\<open>H' \\<subseteq> H\\<close>"], ["proof (prove)\nusing this:\n  H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. bij_betw (ordermap H r) H' (elts (\\<alpha>' ! i))", "by (metis H'_def \\<open>i < length \\<alpha>\\<close> bij bij_betw_inv_into_RIGHT bij_betw_subset le less_eq_V_def)"], ["proof (state)\nthis:\n  bij_betw (ordermap H r) H' (elts (\\<alpha>' ! i))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H'; y \\<in> H'\\<rbrakk>\n       \\<Longrightarrow> (ordermap H r x < ordermap H r y) =\n                         ((x, y) \\<in> r)", "show \"(ordermap H r x < ordermap H r y) = ((x, y) \\<in> r)\"\n        if \"x \\<in> H'\" \"y \\<in> H'\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ordermap H r x < ordermap H r y) = ((x, y) \\<in> r)", "proof (intro iffI ordermap_mono_less)"], ["proof (state)\ngoal (7 subgoals):\n 1. ordermap H r x < ordermap H r y \\<Longrightarrow> (x, y) \\<in> r\n 2. (x, y) \\<in> r \\<Longrightarrow> (x, y) \\<in> r\n 3. (x, y) \\<in> r \\<Longrightarrow> wf r\n 4. (x, y) \\<in> r \\<Longrightarrow> trans r\n 5. (x, y) \\<in> r \\<Longrightarrow> x \\<in> H\n 6. (x, y) \\<in> r \\<Longrightarrow> y \\<in> H\n 7. (x, y) \\<in> r \\<Longrightarrow> small H", "assume \"ordermap H r x < ordermap H r y\""], ["proof (state)\nthis:\n  ordermap H r x < ordermap H r y\n\ngoal (7 subgoals):\n 1. ordermap H r x < ordermap H r y \\<Longrightarrow> (x, y) \\<in> r\n 2. (x, y) \\<in> r \\<Longrightarrow> (x, y) \\<in> r\n 3. (x, y) \\<in> r \\<Longrightarrow> wf r\n 4. (x, y) \\<in> r \\<Longrightarrow> trans r\n 5. (x, y) \\<in> r \\<Longrightarrow> x \\<in> H\n 6. (x, y) \\<in> r \\<Longrightarrow> y \\<in> H\n 7. (x, y) \\<in> r \\<Longrightarrow> small H", "then"], ["proof (chain)\npicking this:\n  ordermap H r x < ordermap H r y", "show \"(x, y) \\<in> r\""], ["proof (prove)\nusing this:\n  ordermap H r x < ordermap H r y\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r", "by (metis \\<open>H \\<subseteq> B\\<close> assms(8) calculation in_mono leD ordermap_mono_le r smaller_than_small that total_on_def)"], ["proof (state)\nthis:\n  (x, y) \\<in> r\n\ngoal (6 subgoals):\n 1. (x, y) \\<in> r \\<Longrightarrow> (x, y) \\<in> r\n 2. (x, y) \\<in> r \\<Longrightarrow> wf r\n 3. (x, y) \\<in> r \\<Longrightarrow> trans r\n 4. (x, y) \\<in> r \\<Longrightarrow> x \\<in> H\n 5. (x, y) \\<in> r \\<Longrightarrow> y \\<in> H\n 6. (x, y) \\<in> r \\<Longrightarrow> small H", "qed (use assms that \\<open>H' \\<subseteq> H\\<close> \\<open>small H\\<close> in auto)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> H'; ?y \\<in> H'\\<rbrakk>\n  \\<Longrightarrow> (ordermap H r ?x < ordermap H r ?y) = ((?x, ?y) \\<in> r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>f.\n     bij_betw f H' (elts (\\<alpha>' ! i)) \\<and>\n     (\\<forall>x\\<in>H'. \\<forall>y\\<in>H'. (f x < f y) = ((x, y) \\<in> r))\n\ngoal (3 subgoals):\n 1. wf r\n 2. total_on H' r\n 3. trans r", "show \"total_on H' r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_on H' r", "using r"], ["proof (prove)\nusing this:\n  wf r\n  trans r\n  total_on B r\n\ngoal (1 subgoal):\n 1. total_on H' r", "by (meson \\<open>H \\<subseteq> B\\<close> \\<open>H' \\<subseteq> H\\<close> subsetD total_on_def)"], ["proof (state)\nthis:\n  total_on H' r\n\ngoal (2 subgoals):\n 1. wf r\n 2. trans r", "qed (use r in auto)"], ["proof (state)\nthis:\n  ordertype H' r = \\<alpha>' ! i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [B]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>'} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>'.\n          \\<exists>H\\<subseteq>B.\n             ordertype H r = \\<alpha>' ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "ultimately"], ["proof (chain)\npicking this:\n  H' \\<subseteq> H\n  ordertype H' r = \\<alpha>' ! i", "show \"\\<exists>i<length \\<alpha>'. \\<exists>H\\<subseteq>B. ordertype H r = \\<alpha>' ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  H' \\<subseteq> H\n  ordertype H' r = \\<alpha>' ! i\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>'.\n       \\<exists>H\\<subseteq>B.\n          ordertype H r = \\<alpha>' ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using \\<open>H \\<subseteq> B\\<close> \\<open>i < length \\<alpha>\\<close> fi assms"], ["proof (prove)\nusing this:\n  H' \\<subseteq> H\n  ordertype H' r = \\<alpha>' ! i\n  H \\<subseteq> B\n  i < length \\<alpha>\n  f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  Partitions.partn_lst r B \\<alpha> n\n  length \\<alpha>' = length \\<alpha>\n  list.set \\<alpha>' \\<subseteq> ON\n  ?i < length \\<alpha> \\<Longrightarrow> \\<alpha>' ! ?i \\<le> \\<alpha> ! ?i\n  wf r\n  trans r\n  total_on B r\n  small B\n\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>'.\n       \\<exists>H\\<subseteq>B.\n          ordertype H r = \\<alpha>' ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by (metis image_mono nsets_mono subset_trans)"], ["proof (state)\nthis:\n  \\<exists>i<length \\<alpha>'.\n     \\<exists>H\\<subseteq>B.\n        ordertype H r = \\<alpha>' ! i \\<and>\n        f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Holds because no $n$-sets exist!\\<close>"], ["", "lemma partn_lst_VWF_degenerate:\n  assumes \"k < n\"\n  shows \"partn_lst_VWF \\<omega> (ord_of_nat k # \\<alpha>s) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partn_lst_VWF \\<omega> (ord_of_nat k # \\<alpha>s) n", "proof (clarsimp simp: partn_lst_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<Suc (length \\<alpha>s)} \\<Longrightarrow>\n       \\<exists>i<Suc (length \\<alpha>s).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f :: \"V set \\<Rightarrow> nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<Suc (length \\<alpha>s)} \\<Longrightarrow>\n       \\<exists>i<Suc (length \\<alpha>s).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have \"[elts (ord_of_nat k)]\\<^bsup>n\\<^esup> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> = {}", "by (simp add: nsets_eq_empty assms finite_Ord_omega)"], ["proof (state)\nthis:\n  [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> = {}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<Suc (length \\<alpha>s)} \\<Longrightarrow>\n       \\<exists>i<Suc (length \\<alpha>s).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> = {}", "have \"f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}\""], ["proof (prove)\nusing this:\n  [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> = {}\n\ngoal (1 subgoal):\n 1. f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}", "by auto"], ["proof (state)\nthis:\n  f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<Suc (length \\<alpha>s)} \\<Longrightarrow>\n       \\<exists>i<Suc (length \\<alpha>s).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}", "show \"\\<exists>i < Suc (length \\<alpha>s). \\<exists>H\\<subseteq>elts \\<omega>. tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (length \\<alpha>s).\n       \\<exists>H\\<subseteq>elts \\<omega>.\n          tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using assms ordertype_eq_Ord [of \"ord_of_nat k\"] elts_ord_of_nat less_Suc_eq_0_disj"], ["proof (prove)\nusing this:\n  f ` [elts (ord_of_nat k)]\\<^bsup>n\\<^esup> \\<subseteq> {0}\n  k < n\n  Ord (ord_of_nat k) \\<Longrightarrow>\n  tp (elts (ord_of_nat k)) = ord_of_nat k\n  elts (ord_of_nat ?k) = ord_of_nat ` {..<?k}\n  (?m < Suc ?n) = (?m = 0 \\<or> (\\<exists>j. ?m = Suc j \\<and> j < ?n))\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (length \\<alpha>s).\n       \\<exists>H\\<subseteq>elts \\<omega>.\n          tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i<Suc (length \\<alpha>s).\n     \\<exists>H\\<subseteq>elts \\<omega>.\n        tp H = (ord_of_nat k # \\<alpha>s) ! i \\<and>\n        f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_VWF_\\<omega>_2:\n  assumes \"Ord \\<alpha>\"\n  shows \"partn_lst_VWF (\\<omega> \\<up> (1+\\<alpha>)) [2, \\<omega> \\<up> (1+\\<alpha>)] 2\" (is  \"partn_lst_VWF ?\\<beta> _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. partn_lst_VWF (\\<omega> \\<up> (1 + \\<alpha>))\n     [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] 2", "proof (clarsimp simp: partn_lst_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts\n                 (\\<omega> \\<up>\n                  (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts\n                 (\\<omega> \\<up>\n                  (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "assume f: \"f \\<in> [elts ?\\<beta>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\""], ["proof (state)\nthis:\n  f \\<in> [elts\n            (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n          {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts\n                 (\\<omega> \\<up>\n                  (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i<Suc (Suc 0). \\<exists>H\\<subseteq>elts ?\\<beta>. tp H = [2, ?\\<beta>] ! i \\<and> f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "proof (cases \"\\<exists>x \\<in> elts ?\\<beta>. \\<exists>y \\<in> elts ?\\<beta>. x \\<noteq> y \\<and> f{x,y} = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<and> f {x, y} = 0 \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n 2. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "case True"], ["proof (state)\nthis:\n  \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<and> f {x, y} = 0\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<and> f {x, y} = 0 \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n 2. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<and> f {x, y} = 0", "obtain x y where \"x \\<in> elts ?\\<beta>\" \"y \\<in> elts ?\\<beta>\" \"x \\<noteq> y\" \"f {x, y} = 0\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<and> f {x, y} = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>));\n         y \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>)); x \\<noteq> y;\n         f {x, y} = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  y \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  x \\<noteq> y\n  f {x, y} = 0\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<and> f {x, y} = 0 \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n 2. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  x \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  y \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  x \\<noteq> y\n  f {x, y} = 0", "have \"{x,y} \\<subseteq> elts ?\\<beta>\" \"tp {x,y} = 2\"\n      \"f ` [{x, y}]\\<^bsup>2\\<^esup> \\<subseteq> {0}\""], ["proof (prove)\nusing this:\n  x \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  y \\<in> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  x \\<noteq> y\n  f {x, y} = 0\n\ngoal (1 subgoal):\n 1. {x, y} \\<subseteq> elts (\\<omega> \\<up> (1 + \\<alpha>)) &&&\n    tp {x, y} = ord_of_nat 2 &&&\n    f ` [{x, y}]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "by auto (simp add: eval_nat_numeral ordertype_VWF_finite_nat)"], ["proof (state)\nthis:\n  {x, y} \\<subseteq> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  tp {x, y} = ord_of_nat 2\n  f ` [{x, y}]\\<^bsup>2\\<^esup> \\<subseteq> {0}\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<and> f {x, y} = 0 \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n 2. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "with \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  {x, y} \\<subseteq> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  tp {x, y} = ord_of_nat 2\n  f ` [{x, y}]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  {x, y} \\<subseteq> elts (\\<omega> \\<up> (1 + \\<alpha>))\n  tp {x, y} = ord_of_nat 2\n  f ` [{x, y}]\\<^bsup>2\\<^esup> \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by (metis nth_Cons_0 zero_less_Suc)"], ["proof (state)\nthis:\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                x \\<noteq> y \\<and> f {x, y} = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "with f"], ["proof (chain)\npicking this:\n  f \\<in> [elts\n            (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n          {..<Suc (Suc 0)}\n  \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                x \\<noteq> y \\<and> f {x, y} = 0)", "have \"\\<forall>x\\<in>elts ?\\<beta>. \\<forall>y\\<in>elts ?\\<beta>. x \\<noteq> y \\<longrightarrow> f {x, y} = 1\""], ["proof (prove)\nusing this:\n  f \\<in> [elts\n            (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup> \\<rightarrow>\n          {..<Suc (Suc 0)}\n  \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                x \\<noteq> y \\<and> f {x, y} = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<longrightarrow> f {x, y} = 1", "unfolding Pi_iff"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>[elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>.\n     f i \\<in> {..<Suc (Suc 0)}\n  \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                x \\<noteq> y \\<and> f {x, y} = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<longrightarrow> f {x, y} = 1", "using lessThan_Suc"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>[elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>.\n     f i \\<in> {..<Suc (Suc 0)}\n  \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n             \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                x \\<noteq> y \\<and> f {x, y} = 0)\n  {..<Suc ?k} = insert ?k {..<?k}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n       \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          x \\<noteq> y \\<longrightarrow> f {x, y} = 1", "by force"], ["proof (state)\nthis:\n  \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<longrightarrow> f {x, y} = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<longrightarrow> f {x, y} = 1", "have \"tp (elts ?\\<beta>) = ?\\<beta>\" \"f ` [elts ?\\<beta>]\\<^bsup>2\\<^esup> \\<subseteq> {Suc 0}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n     \\<forall>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        x \\<noteq> y \\<longrightarrow> f {x, y} = 1\n\ngoal (1 subgoal):\n 1. tp (elts (\\<omega> \\<up> (1 + \\<alpha>))) =\n    \\<omega> \\<up> (1 + \\<alpha>) &&&\n    f ` [elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>\n    \\<subseteq> {Suc 0}", "by (auto simp: assms nsets_2_eq)"], ["proof (state)\nthis:\n  tp (elts (\\<omega> \\<up> (1 + \\<alpha>))) = \\<omega> \\<up> (1 + \\<alpha>)\n  f ` [elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>\n  \\<subseteq> {Suc 0}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n               \\<exists>y\\<in>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n                  x \\<noteq> y \\<and> f {x, y} = 0) \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  tp (elts (\\<omega> \\<up> (1 + \\<alpha>))) = \\<omega> \\<up> (1 + \\<alpha>)\n  f ` [elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>\n  \\<subseteq> {Suc 0}", "show ?thesis"], ["proof (prove)\nusing this:\n  tp (elts (\\<omega> \\<up> (1 + \\<alpha>))) = \\<omega> \\<up> (1 + \\<alpha>)\n  f ` [elts (\\<omega> \\<up> (1 + \\<alpha>))]\\<^bsup>2\\<^esup>\n  \\<subseteq> {Suc 0}\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n          tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by (metis lessI nth_Cons_0 nth_Cons_Suc subsetI)"], ["proof (state)\nthis:\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>elts (\\<omega> \\<up> (1 + \\<alpha>)).\n        tp H = [ord_of_nat 2, \\<omega> \\<up> (1 + \\<alpha>)] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Relating partition properties on @{term VWF} to the general case\\<close>"], ["", "text \\<open>Two very similar proofs here!\\<close>"], ["", "lemma partn_lst_imp_partn_lst_VWF_eq:\n  assumes part: \"partn_lst r U \\<alpha> n\" and \\<beta>: \"ordertype U r = \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst_VWF \\<beta> \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partn_lst_VWF \\<beta> \\<alpha> n", "unfolding partn_lst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>[elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n                   {..<length \\<alpha>}.\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "assume f: \"f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (state)\nthis:\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "define cv where \"cv \\<equiv> \\<lambda>X. ordermap U r ` X\""], ["proof (state)\nthis:\n  cv \\<equiv> (`) (ordermap U r)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have bij: \"bij_betw (ordermap U r) U (elts \\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (ordermap U r) U (elts \\<beta>)", "using ordermap_bij [of \"r\" U] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>wf r; total_on U r; small U\\<rbrakk>\n  \\<Longrightarrow> bij_betw (ordermap U r) U (elts (ordertype U r))\n  Partitions.partn_lst r U \\<alpha> n\n  ordertype U r = \\<beta>\n  small U\n  wf r\n  trans r\n  total_on U r\n\ngoal (1 subgoal):\n 1. bij_betw (ordermap U r) U (elts \\<beta>)", "by blast"], ["proof (state)\nthis:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  bij_betw (ordermap U r) U (elts \\<beta>)", "have bij_cv: \"bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)\""], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n\ngoal (1 subgoal):\n 1. bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)", "using bij_betw_nsets cv_def"], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow>\n  bij_betw ((`) ?f) ([?A]\\<^bsup>?n\\<^esup>) ([?B]\\<^bsup>?n\\<^esup>)\n  cv \\<equiv> (`) (ordermap U r)\n\ngoal (1 subgoal):\n 1. bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)", "by blast"], ["proof (state)\nthis:\n  bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)", "have func: \"f \\<circ> cv \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\" and \"inj_on (ordermap U r) U\""], ["proof (prove)\nusing this:\n  bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. f \\<circ> cv\n    \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>} &&&\n    inj_on (ordermap U r) U", "using bij bij_betw_def bij_betw_apply f"], ["proof (prove)\nusing this:\n  bij_betw cv ([U]\\<^bsup>n\\<^esup>) ([elts \\<beta>]\\<^bsup>n\\<^esup>)\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n  \\<lbrakk>bij_betw ?f ?A ?B; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> ?B\n  f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. f \\<circ> cv\n    \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>} &&&\n    inj_on (ordermap U r) U", "by fastforce+"], ["proof (state)\nthis:\n  f \\<circ> cv \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n  inj_on (ordermap U r) U\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f \\<circ> cv \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n  inj_on (ordermap U r) U", "have cv_part: \"\\<lbrakk>\\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>. f (cv x) = i; X \\<subseteq> U; a \\<in> [cv X]\\<^bsup>n\\<^esup>\\<rbrakk> \\<Longrightarrow> f a = i\" for a X i n"], ["proof (prove)\nusing this:\n  f \\<circ> cv \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n  inj_on (ordermap U r) U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>. f (cv x) = i;\n     X \\<subseteq> U; a \\<in> [cv X]\\<^bsup>n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> f a = i", "by (force simp: cv_def nsets_def subset_image_iff inj_on_subset finite_image_iff card_image)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>. f (cv x) = ?i;\n   ?X \\<subseteq> U; ?a \\<in> [cv ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have ot_eq [simp]: \"tp (cv X) = ordertype X r\" if \"X \\<subseteq> U\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. tp (cv X) = ordertype X r", "unfolding cv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. tp (ordermap U r ` X) = ordertype X r", "proof (rule ordertype_inc_eq)"], ["proof (state)\ngoal (5 subgoals):\n 1. small X\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> r\\<rbrakk>\n       \\<Longrightarrow> (ordermap U r x, ordermap U r y) \\<in> VWF\n 3. wf r\n 4. total_on X r\n 5. wf VWF", "fix u v"], ["proof (state)\ngoal (5 subgoals):\n 1. small X\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> r\\<rbrakk>\n       \\<Longrightarrow> (ordermap U r x, ordermap U r y) \\<in> VWF\n 3. wf r\n 4. total_on X r\n 5. wf VWF", "assume \"u \\<in> X\" \"v \\<in> X\" and \"(u,v) \\<in> r\""], ["proof (state)\nthis:\n  u \\<in> X\n  v \\<in> X\n  (u, v) \\<in> r\n\ngoal (5 subgoals):\n 1. small X\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> r\\<rbrakk>\n       \\<Longrightarrow> (ordermap U r x, ordermap U r y) \\<in> VWF\n 3. wf r\n 4. total_on X r\n 5. wf VWF", "with that"], ["proof (chain)\npicking this:\n  X \\<subseteq> U\n  u \\<in> X\n  v \\<in> X\n  (u, v) \\<in> r", "have \"ordermap U r u < ordermap U r v\""], ["proof (prove)\nusing this:\n  X \\<subseteq> U\n  u \\<in> X\n  v \\<in> X\n  (u, v) \\<in> r\n\ngoal (1 subgoal):\n 1. ordermap U r u < ordermap U r v", "by (simp add: assms ordermap_mono_less subset_eq)"], ["proof (state)\nthis:\n  ordermap U r u < ordermap U r v\n\ngoal (5 subgoals):\n 1. small X\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> r\\<rbrakk>\n       \\<Longrightarrow> (ordermap U r x, ordermap U r y) \\<in> VWF\n 3. wf r\n 4. total_on X r\n 5. wf VWF", "then"], ["proof (chain)\npicking this:\n  ordermap U r u < ordermap U r v", "show \"(ordermap U r u, ordermap U r v) \\<in> VWF\""], ["proof (prove)\nusing this:\n  ordermap U r u < ordermap U r v\n\ngoal (1 subgoal):\n 1. (ordermap U r u, ordermap U r v) \\<in> VWF", "by (simp add: r)"], ["proof (state)\nthis:\n  (ordermap U r u, ordermap U r v) \\<in> VWF\n\ngoal (4 subgoals):\n 1. small X\n 2. wf r\n 3. total_on X r\n 4. wf VWF", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. small X\n 2. wf r\n 3. total_on X r\n 4. wf VWF", "show \"total_on X r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_on X r", "using that r"], ["proof (prove)\nusing this:\n  X \\<subseteq> U\n  wf r\n  trans r\n  total_on U r\n\ngoal (1 subgoal):\n 1. total_on X r", "by (auto simp: total_on_def)"], ["proof (state)\nthis:\n  total_on X r\n\ngoal (3 subgoals):\n 1. small X\n 2. wf r\n 3. wf VWF", "show \"small X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small X", "by (meson \\<open>small U\\<close> smaller_than_small that)"], ["proof (state)\nthis:\n  small X\n\ngoal (2 subgoals):\n 1. wf r\n 2. wf VWF", "qed (use assms in auto)"], ["proof (state)\nthis:\n  ?X \\<subseteq> U \\<Longrightarrow> tp (cv ?X) = ordertype ?X r\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "obtain X i where \"X \\<subseteq> U\" and X: \"ordertype X r = \\<alpha>!i\" \"(f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\" \n    and \"i < length \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X i.\n        \\<lbrakk>X \\<subseteq> U; ordertype X r = \\<alpha> ! i;\n         (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i};\n         i < length \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using part func"], ["proof (prove)\nusing this:\n  Partitions.partn_lst r U \\<alpha> n\n  f \\<circ> cv \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. (\\<And>X i.\n        \\<lbrakk>X \\<subseteq> U; ordertype X r = \\<alpha> ! i;\n         (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i};\n         i < length \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: partn_lst_def)"], ["proof (state)\nthis:\n  X \\<subseteq> U\n  ordertype X r = \\<alpha> ! i\n  (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  i < length \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>elts \\<beta>.\n             tp H = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i < length \\<alpha>. \\<exists>H\\<subseteq>elts \\<beta>. tp H = \\<alpha>!i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>elts \\<beta>.\n          tp H = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "proof (intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?i < length \\<alpha>\n 2. ?H2 \\<subseteq> elts \\<beta>\n 3. tp ?H2 = \\<alpha> ! ?i\n 4. f ` [?H2]\\<^bsup>n\\<^esup> \\<subseteq> {?i}", "show \"i < length \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length \\<alpha>", "by (simp add: \\<open>i < length \\<alpha>\\<close>)"], ["proof (state)\nthis:\n  i < length \\<alpha>\n\ngoal (3 subgoals):\n 1. ?H2 \\<subseteq> elts \\<beta>\n 2. tp ?H2 = \\<alpha> ! i\n 3. f ` [?H2]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"cv X \\<subseteq> elts \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cv X \\<subseteq> elts \\<beta>", "using \\<open>X \\<subseteq> U\\<close> bij bij_betw_imp_surj_on cv_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> U\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n  cv \\<equiv> (`) (ordermap U r)\n\ngoal (1 subgoal):\n 1. cv X \\<subseteq> elts \\<beta>", "by blast"], ["proof (state)\nthis:\n  cv X \\<subseteq> elts \\<beta>\n\ngoal (2 subgoals):\n 1. tp (cv X) = \\<alpha> ! i\n 2. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"tp (cv X) = \\<alpha> ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tp (cv X) = \\<alpha> ! i", "by (simp add: X(1) \\<open>X \\<subseteq> U\\<close>)"], ["proof (state)\nthis:\n  tp (cv X) = \\<alpha> ! i\n\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using X \\<open>X \\<subseteq> U\\<close> cv_part"], ["proof (prove)\nusing this:\n  ordertype X r = \\<alpha> ! i\n  (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  X \\<subseteq> U\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>. f (cv x) = ?i;\n   ?X \\<subseteq> U; ?a \\<in> [cv ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "unfolding image_subset_iff cv_def"], ["proof (prove)\nusing this:\n  ordertype X r = \\<alpha> ! i\n  \\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>.\n     (f \\<circ> (`) (ordermap U r)) x \\<in> {i}\n  X \\<subseteq> U\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>. f (ordermap U r ` x) = ?i;\n   ?X \\<subseteq> U; ?a \\<in> [ordermap U r ` ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>[ordermap U r ` X]\\<^bsup>n\\<^esup>. f x \\<in> {i}", "by (metis comp_apply insertCI singletonD)"], ["proof (state)\nthis:\n  f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i<length \\<alpha>.\n     \\<exists>H\\<subseteq>elts \\<beta>.\n        tp H = \\<alpha> ! i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partn_lst_imp_partn_lst_VWF:\n  assumes part: \"partn_lst r U \\<alpha> n\" and \\<beta>: \"ordertype U r \\<le> \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst_VWF \\<beta> \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partn_lst_VWF \\<beta> \\<alpha> n", "by (metis assms less_eq_V_def partn_lst_imp_partn_lst_VWF_eq partn_lst_greater_resource)"], ["", "lemma partn_lst_VWF_imp_partn_lst_eq:\n  assumes part: \"partn_lst_VWF \\<beta> \\<alpha> n\" and \\<beta>: \"ordertype U r = \\<beta>\" \"small U\" \n    and r: \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst r U \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r U \\<alpha> n", "unfolding partn_lst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>[U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}.\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "assume f: \"f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (state)\nthis:\n  f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "define cv where \"cv \\<equiv> \\<lambda>X. inv_into U (ordermap U r) ` X\""], ["proof (state)\nthis:\n  cv \\<equiv> (`) (inv_into U (ordermap U r))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have bij: \"bij_betw (ordermap U r) U (elts \\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (ordermap U r) U (elts \\<beta>)", "using ordermap_bij [of \"r\" U] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>wf r; total_on U r; small U\\<rbrakk>\n  \\<Longrightarrow> bij_betw (ordermap U r) U (elts (ordertype U r))\n  partn_lst_VWF \\<beta> \\<alpha> n\n  ordertype U r = \\<beta>\n  small U\n  wf r\n  trans r\n  total_on U r\n\ngoal (1 subgoal):\n 1. bij_betw (ordermap U r) U (elts \\<beta>)", "by blast"], ["proof (state)\nthis:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  bij_betw (ordermap U r) U (elts \\<beta>)", "have bij_cv: \"bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)\""], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n\ngoal (1 subgoal):\n 1. bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)", "using bij_betw_nsets bij_betw_inv_into"], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow>\n  bij_betw ((`) ?f) ([?A]\\<^bsup>?n\\<^esup>) ([?B]\\<^bsup>?n\\<^esup>)\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)", "unfolding cv_def"], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow>\n  bij_betw ((`) ?f) ([?A]\\<^bsup>?n\\<^esup>) ([?B]\\<^bsup>?n\\<^esup>)\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (inv_into ?A ?f) ?B ?A\n\ngoal (1 subgoal):\n 1. bij_betw ((`) (inv_into U (ordermap U r)))\n     ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)", "by blast"], ["proof (state)\nthis:\n  bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)", "have func: \"f \\<circ> cv \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\""], ["proof (prove)\nusing this:\n  bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)\n\ngoal (1 subgoal):\n 1. f \\<circ> cv\n    \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "using bij_betw_apply f"], ["proof (prove)\nusing this:\n  bij_betw cv ([elts \\<beta>]\\<^bsup>n\\<^esup>) ([U]\\<^bsup>n\\<^esup>)\n  \\<lbrakk>bij_betw ?f ?A ?B; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> ?B\n  f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. f \\<circ> cv\n    \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}", "by fastforce"], ["proof (state)\nthis:\n  f \\<circ> cv\n  \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have \"inj_on (ordermap U r) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (ordermap U r) U", "using bij bij_betw_def"], ["proof (prove)\nusing this:\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n\ngoal (1 subgoal):\n 1. inj_on (ordermap U r) U", "by blast"], ["proof (state)\nthis:\n  inj_on (ordermap U r) U\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  inj_on (ordermap U r) U", "have cv_part: \"\\<lbrakk>\\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>. f (cv x) = i; X \\<subseteq> elts \\<beta>; a \\<in> [cv X]\\<^bsup>n\\<^esup>\\<rbrakk> \\<Longrightarrow> f a = i\" for a X i n"], ["proof (prove)\nusing this:\n  inj_on (ordermap U r) U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>. f (cv x) = i;\n     X \\<subseteq> elts \\<beta>; a \\<in> [cv X]\\<^bsup>n\\<^esup>\\<rbrakk>\n    \\<Longrightarrow> f a = i", "apply ( simp add: cv_def nsets_def subset_image_iff inj_on_subset finite_image_iff card_image)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                x \\<subseteq> X \\<and>\n                finite x \\<and> card x = n \\<longrightarrow>\n                f (inv_into U (ordermap U r) ` x) = i;\n     X \\<subseteq> elts \\<beta>;\n     (\\<exists>AA\\<subseteq>X. a = inv_into U (ordermap U r) ` AA) \\<and>\n     finite a \\<and> card a = n;\n     inj_on (ordermap U r) U\\<rbrakk>\n    \\<Longrightarrow> f a = i", "by (metis bij bij_betw_def card_image inj_on_finite inj_on_inv_into subset_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>. f (cv x) = ?i;\n   ?X \\<subseteq> elts \\<beta>; ?a \\<in> [cv ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "have ot_eq [simp]: \"ordertype (cv X) r = tp X\" if \"X \\<subseteq> elts \\<beta>\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype (cv X) r = tp X", "unfolding cv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype (inv_into U (ordermap U r) ` X) r = tp X", "proof (rule ordertype_inc_eq)"], ["proof (state)\ngoal (5 subgoals):\n 1. small X\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> VWF\\<rbrakk>\n       \\<Longrightarrow> (inv_into U (ordermap U r) x,\n                          inv_into U (ordermap U r) y)\n                         \\<in> r\n 3. wf VWF\n 4. total_on X VWF\n 5. wf r", "show \"small X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small X", "using down that"], ["proof (prove)\nusing this:\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y\n  X \\<subseteq> elts \\<beta>\n\ngoal (1 subgoal):\n 1. small X", "by auto"], ["proof (state)\nthis:\n  small X\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X; (x, y) \\<in> VWF\\<rbrakk>\n       \\<Longrightarrow> (inv_into U (ordermap U r) x,\n                          inv_into U (ordermap U r) y)\n                         \\<in> r\n 2. wf VWF\n 3. total_on X VWF\n 4. wf r", "show \"(inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r\"\n      if \"x \\<in> X\" \"y \\<in> X\" and \"(x,y) \\<in> VWF\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "have xy: \"x \\<in> ordermap U r ` U\" \"y \\<in> ordermap U r ` U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ordermap U r ` U &&& y \\<in> ordermap U r ` U", "using \\<open>X \\<subseteq> elts \\<beta>\\<close> \\<open>x \\<in> X\\<close> \\<open>y \\<in> X\\<close> bij bij_betw_imp_surj_on"], ["proof (prove)\nusing this:\n  X \\<subseteq> elts \\<beta>\n  x \\<in> X\n  y \\<in> X\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. x \\<in> ordermap U r ` U &&& y \\<in> ordermap U r ` U", "by blast+"], ["proof (state)\nthis:\n  x \\<in> ordermap U r ` U\n  y \\<in> ordermap U r ` U\n\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  x \\<in> ordermap U r ` U\n  y \\<in> ordermap U r ` U", "have eq: \"ordermap U r (inv_into U (ordermap U r) x) = x\" \"ordermap U r (inv_into U (ordermap U r) y) = y\""], ["proof (prove)\nusing this:\n  x \\<in> ordermap U r ` U\n  y \\<in> ordermap U r ` U\n\ngoal (1 subgoal):\n 1. ordermap U r (inv_into U (ordermap U r) x) = x &&&\n    ordermap U r (inv_into U (ordermap U r) y) = y", "by (meson f_inv_into_f)+"], ["proof (state)\nthis:\n  ordermap U r (inv_into U (ordermap U r) x) = x\n  ordermap U r (inv_into U (ordermap U r) y) = y\n\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  ordermap U r (inv_into U (ordermap U r) x) = x\n  ordermap U r (inv_into U (ordermap U r) y) = y", "have \"y \\<notin> elts x\""], ["proof (prove)\nusing this:\n  ordermap U r (inv_into U (ordermap U r) x) = x\n  ordermap U r (inv_into U (ordermap U r) y) = y\n\ngoal (1 subgoal):\n 1. y \\<notin> elts x", "by (metis (no_types) VWF_non_refl mem_imp_VWF that(3) trans_VWF trans_def)"], ["proof (state)\nthis:\n  y \\<notin> elts x\n\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "then"], ["proof (chain)\npicking this:\n  y \\<notin> elts x", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<notin> elts x\n\ngoal (1 subgoal):\n 1. (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r", "by (metis (no_types) VWF_non_refl xy eq assms(3) inv_into_into ordermap_mono r(1) r(3) that(3) total_on_def)"], ["proof (state)\nthis:\n  (inv_into U (ordermap U r) x, inv_into U (ordermap U r) y) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X; (?x, ?y) \\<in> VWF\\<rbrakk>\n  \\<Longrightarrow> (inv_into U (ordermap U r) ?x,\n                     inv_into U (ordermap U r) ?y)\n                    \\<in> r\n\ngoal (3 subgoals):\n 1. wf VWF\n 2. total_on X VWF\n 3. wf r", "qed (use r in auto)"], ["proof (state)\nthis:\n  ?X \\<subseteq> elts \\<beta> \\<Longrightarrow> ordertype (cv ?X) r = tp ?X\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "obtain X i where \"X \\<subseteq> elts \\<beta>\" and X: \"tp X = \\<alpha>!i\" \"(f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\" \n    and \"i < length \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X i.\n        \\<lbrakk>X \\<subseteq> elts \\<beta>; tp X = \\<alpha> ! i;\n         (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i};\n         i < length \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using part func"], ["proof (prove)\nusing this:\n  partn_lst_VWF \\<beta> \\<alpha> n\n  f \\<circ> cv\n  \\<in> [elts \\<beta>]\\<^bsup>n\\<^esup> \\<rightarrow> {..<length \\<alpha>}\n\ngoal (1 subgoal):\n 1. (\\<And>X i.\n        \\<lbrakk>X \\<subseteq> elts \\<beta>; tp X = \\<alpha> ! i;\n         (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i};\n         i < length \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: partn_lst_def)"], ["proof (state)\nthis:\n  X \\<subseteq> elts \\<beta>\n  tp X = \\<alpha> ! i\n  (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  i < length \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [U]\\<^bsup>n\\<^esup> \\<rightarrow>\n               {..<length \\<alpha>} \\<Longrightarrow>\n       \\<exists>i<length \\<alpha>.\n          \\<exists>H\\<subseteq>U.\n             ordertype H r = \\<alpha> ! i \\<and>\n             f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i < length \\<alpha>. \\<exists>H\\<subseteq>U. ordertype H r = \\<alpha>!i \\<and> f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i<length \\<alpha>.\n       \\<exists>H\\<subseteq>U.\n          ordertype H r = \\<alpha> ! i \\<and>\n          f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "proof (intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?i < length \\<alpha>\n 2. ?H2 \\<subseteq> U\n 3. ordertype ?H2 r = \\<alpha> ! ?i\n 4. f ` [?H2]\\<^bsup>n\\<^esup> \\<subseteq> {?i}", "show \"i < length \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length \\<alpha>", "by (simp add: \\<open>i < length \\<alpha>\\<close>)"], ["proof (state)\nthis:\n  i < length \\<alpha>\n\ngoal (3 subgoals):\n 1. ?H2 \\<subseteq> U\n 2. ordertype ?H2 r = \\<alpha> ! i\n 3. f ` [?H2]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"cv X \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cv X \\<subseteq> U", "using \\<open>X \\<subseteq> elts \\<beta>\\<close> bij bij_betw_imp_surj_on bij_betw_inv_into cv_def"], ["proof (prove)\nusing this:\n  X \\<subseteq> elts \\<beta>\n  bij_betw (ordermap U r) U (elts \\<beta>)\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (inv_into ?A ?f) ?B ?A\n  cv \\<equiv> (`) (inv_into U (ordermap U r))\n\ngoal (1 subgoal):\n 1. cv X \\<subseteq> U", "by blast"], ["proof (state)\nthis:\n  cv X \\<subseteq> U\n\ngoal (2 subgoals):\n 1. ordertype (cv X) r = \\<alpha> ! i\n 2. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"ordertype (cv X) r = \\<alpha> ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype (cv X) r = \\<alpha> ! i", "by (simp add: X(1) \\<open>X \\<subseteq> elts \\<beta>\\<close>)"], ["proof (state)\nthis:\n  ordertype (cv X) r = \\<alpha> ! i\n\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "show \"f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "using X \\<open>X \\<subseteq> elts \\<beta>\\<close> cv_part"], ["proof (prove)\nusing this:\n  tp X = \\<alpha> ! i\n  (f \\<circ> cv) ` [X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n  X \\<subseteq> elts \\<beta>\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>. f (cv x) = ?i;\n   ?X \\<subseteq> elts \\<beta>; ?a \\<in> [cv ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}", "unfolding image_subset_iff cv_def"], ["proof (prove)\nusing this:\n  tp X = \\<alpha> ! i\n  \\<forall>x\\<in>[X]\\<^bsup>n\\<^esup>.\n     (f \\<circ> (`) (inv_into U (ordermap U r))) x \\<in> {i}\n  X \\<subseteq> elts \\<beta>\n  \\<lbrakk>\\<forall>x\\<in>[?X]\\<^bsup>?n\\<^esup>.\n              f (inv_into U (ordermap U r) ` x) = ?i;\n   ?X \\<subseteq> elts \\<beta>;\n   ?a \\<in> [inv_into U (ordermap U r) ` ?X]\\<^bsup>?n\\<^esup>\\<rbrakk>\n  \\<Longrightarrow> f ?a = ?i\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>[inv_into U (ordermap U r) ` X]\\<^bsup>n\\<^esup>.\n       f x \\<in> {i}", "by (metis comp_apply insertCI singletonD)"], ["proof (state)\nthis:\n  f ` [cv X]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i<length \\<alpha>.\n     \\<exists>H\\<subseteq>U.\n        ordertype H r = \\<alpha> ! i \\<and>\n        f ` [H]\\<^bsup>n\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary partn_lst_VWF_imp_partn_lst:\n  assumes \"partn_lst_VWF \\<beta> \\<alpha> n\" and \\<beta>: \"ordertype U r \\<ge> \\<beta>\" \"small U\" \n          \"wf r\" \"trans r\" \"total_on U r\"\n  shows \"partn_lst r U \\<alpha> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst r U \\<alpha> n", "by (metis assms less_eq_V_def partn_lst_VWF_imp_partn_lst_eq partn_lst_greater_resource)"], ["", "subsection \\<open>Simple consequences of the definitions\\<close>"], ["", "text \\<open>A restatement of the infinite Ramsey theorem using partition notation\\<close>"], ["", "lemma Ramsey_partn: \"partn_lst_VWF \\<omega> [\\<omega>,\\<omega>] 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partn_lst_VWF \\<omega> [\\<omega>, \\<omega>] 2", "proof (clarsimp simp: partn_lst_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "assume \"f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\""], ["proof (state)\nthis:\n  f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}", "have *: \"\\<forall>x\\<in>elts \\<omega>. \\<forall>y\\<in>elts \\<omega>. x \\<noteq> y \\<longrightarrow> f {x, y} < 2\""], ["proof (prove)\nusing this:\n  f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>elts \\<omega>.\n       \\<forall>y\\<in>elts \\<omega>.\n          x \\<noteq> y \\<longrightarrow> f {x, y} < 2", "by (auto simp: nsets_def eval_nat_numeral)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>elts \\<omega>.\n     \\<forall>y\\<in>elts \\<omega>.\n        x \\<noteq> y \\<longrightarrow> f {x, y} < 2\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "obtain H i where H: \"H \\<subseteq> elts \\<omega>\" and \"infinite H\"\n    and t: \"i < Suc (Suc 0)\"\n    and teq: \"\\<forall>x\\<in>H. \\<forall>y\\<in>H. x \\<noteq> y \\<longrightarrow> f {x, y} = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>H i.\n        \\<lbrakk>H \\<subseteq> elts \\<omega>; infinite H; i < Suc (Suc 0);\n         \\<forall>x\\<in>H.\n            \\<forall>y\\<in>H.\n               x \\<noteq> y \\<longrightarrow> f {x, y} = i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Ramsey2 [OF infinite_\\<omega> *]"], ["proof (prove)\nusing this:\n  \\<exists>Y t.\n     Y \\<subseteq> elts \\<omega> \\<and>\n     infinite Y \\<and>\n     t < 2 \\<and>\n     (\\<forall>x\\<in>Y.\n         \\<forall>y\\<in>Y. x \\<noteq> y \\<longrightarrow> f {x, y} = t)\n\ngoal (1 subgoal):\n 1. (\\<And>H i.\n        \\<lbrakk>H \\<subseteq> elts \\<omega>; infinite H; i < Suc (Suc 0);\n         \\<forall>x\\<in>H.\n            \\<forall>y\\<in>H.\n               x \\<noteq> y \\<longrightarrow> f {x, y} = i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eval_nat_numeral)"], ["proof (state)\nthis:\n  H \\<subseteq> elts \\<omega>\n  infinite H\n  i < Suc (Suc 0)\n  \\<forall>x\\<in>H.\n     \\<forall>y\\<in>H. x \\<noteq> y \\<longrightarrow> f {x, y} = i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  H \\<subseteq> elts \\<omega>\n  infinite H\n  i < Suc (Suc 0)\n  \\<forall>x\\<in>H.\n     \\<forall>y\\<in>H. x \\<noteq> y \\<longrightarrow> f {x, y} = i", "have \"tp H = [\\<omega>, \\<omega>] ! i\""], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<omega>\n  infinite H\n  i < Suc (Suc 0)\n  \\<forall>x\\<in>H.\n     \\<forall>y\\<in>H. x \\<noteq> y \\<longrightarrow> f {x, y} = i\n\ngoal (1 subgoal):\n 1. tp H = [\\<omega>, \\<omega>] ! i", "using less_2_cases eval_nat_numeral ordertype_infinite_\\<omega>"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<omega>\n  infinite H\n  i < Suc (Suc 0)\n  \\<forall>x\\<in>H.\n     \\<forall>y\\<in>H. x \\<noteq> y \\<longrightarrow> f {x, y} = i\n  ?n < 2 \\<Longrightarrow> ?n = 0 \\<or> ?n = Suc 0\n  Numeral1 = Suc 0\n  numeral (num.Bit0 ?n) = Suc (numeral (Num.BitM ?n))\n  numeral (num.Bit1 ?n) = Suc (numeral (num.Bit0 ?n))\n  \\<lbrakk>?A \\<subseteq> elts \\<omega>; infinite ?A\\<rbrakk>\n  \\<Longrightarrow> tp ?A = \\<omega>\n\ngoal (1 subgoal):\n 1. tp H = [\\<omega>, \\<omega>] ! i", "by force"], ["proof (state)\nthis:\n  tp H = [\\<omega>, \\<omega>] ! i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "moreover"], ["proof (state)\nthis:\n  tp H = [\\<omega>, \\<omega>] ! i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "have \"f ` {N. N \\<subseteq> H \\<and> finite N \\<and> card N = 2} \\<subseteq> {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {N. N \\<subseteq> H \\<and> finite N \\<and> card N = 2}\n    \\<subseteq> {i}", "by (force simp: teq card_2_iff)"], ["proof (state)\nthis:\n  f ` {N. N \\<subseteq> H \\<and> finite N \\<and> card N = 2} \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "ultimately"], ["proof (chain)\npicking this:\n  tp H = [\\<omega>, \\<omega>] ! i\n  f ` {N. N \\<subseteq> H \\<and> finite N \\<and> card N = 2} \\<subseteq> {i}", "have \"f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  tp H = [\\<omega>, \\<omega>] ! i\n  f ` {N. N \\<subseteq> H \\<and> finite N \\<and> card N = 2} \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by (metis (no_types) nsets_def numeral_2_eq_2)"], ["proof (state)\nthis:\n  f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [elts \\<omega>]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>elts \\<omega>.\n             tp H = [\\<omega>, \\<omega>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "show \"\\<exists>i<Suc (Suc 0). \\<exists>H\\<subseteq>elts \\<omega>. tp H = [\\<omega>,\\<omega>] ! i \\<and> f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts \\<omega>.\n          tp H = [\\<omega>, \\<omega>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "using H \\<open>tp H = [\\<omega>, \\<omega>] ! i\\<close> t"], ["proof (prove)\nusing this:\n  f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n  H \\<subseteq> elts \\<omega>\n  tp H = [\\<omega>, \\<omega>] ! i\n  i < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>elts \\<omega>.\n          tp H = [\\<omega>, \\<omega>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by blast"], ["proof (state)\nthis:\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>elts \\<omega>.\n        tp H = [\\<omega>, \\<omega>] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This is the counterexample sketched in Hajnal and Larson, section 9.1.\\<close>"], ["", "proposition omega_basic_counterexample:\n  assumes \"Ord \\<alpha>\"\n  shows \"\\<not> partn_lst_VWF \\<alpha> [succ (vcard \\<alpha>), \\<omega>] 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "obtain \\<pi> where fun\\<pi>: \"\\<pi> \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>)\" and inj\\<pi>: \"inj_on \\<pi> (elts \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi>\n                 \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>);\n         inj_on \\<pi> (elts \\<alpha>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inj_into_vcard"], ["proof (prove)\nusing this:\n  (\\<And>f.\n      \\<lbrakk>f \\<in> elts ?A \\<rightarrow> elts (vcard ?A);\n       inj_on f (elts ?A)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi>\n                 \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>);\n         inj_on \\<pi> (elts \\<alpha>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi> \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>)\n  inj_on \\<pi> (elts \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "have Ord\\<pi>: \"Ord (\\<pi> x)\" if \"x \\<in> elts \\<alpha>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (\\<pi> x)", "using Ord_in_Ord fun\\<pi> that"], ["proof (prove)\nusing this:\n  \\<lbrakk>Ord ?k; ?m \\<in> elts ?k\\<rbrakk> \\<Longrightarrow> Ord ?m\n  \\<pi> \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>)\n  x \\<in> elts \\<alpha>\n\ngoal (1 subgoal):\n 1. Ord (\\<pi> x)", "by fastforce"], ["proof (state)\nthis:\n  ?x \\<in> elts \\<alpha> \\<Longrightarrow> Ord (\\<pi> ?x)\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "define f where \"f A \\<equiv> @i::nat. \\<exists>x y. A = {x,y} \\<and> x < y \\<and> (\\<pi> x < \\<pi> y \\<and> i=0 \\<or> \\<pi> y < \\<pi> x \\<and> i=1)\" for A"], ["proof (state)\nthis:\n  f ?A \\<equiv>\n  SOME i.\n     \\<exists>x y.\n        ?A = {x, y} \\<and>\n        x < y \\<and>\n        (\\<pi> x < \\<pi> y \\<and> i = 0 \\<or>\n         \\<pi> y < \\<pi> x \\<and> i = 1)\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "have f_Pi: \"f \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       f x \\<in> {..<Suc (Suc 0)}", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       f x \\<in> {..<Suc (Suc 0)}", "assume \"A \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  A \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       f x \\<in> {..<Suc (Suc 0)}", "then"], ["proof (chain)\npicking this:\n  A \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup>", "obtain x y where xy: \"x \\<in> elts \\<alpha>\" \"y \\<in> elts \\<alpha>\" \"x < y\" and A: \"A = {x,y}\""], ["proof (prove)\nusing this:\n  A \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> elts \\<alpha>; y \\<in> elts \\<alpha>; x < y;\n         A = {x, y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (clarsimp simp: nsets_2_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<And>xb y.\n                   \\<lbrakk>xb \\<in> elts \\<alpha>; y \\<in> elts \\<alpha>;\n                    xb < y; {x, xa} = {xb, y}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        x \\<in> elts \\<alpha>; A = {x, xa}; xa \\<in> elts \\<alpha>;\n        \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> xa = x", "by (metis Ord_in_Ord Ord_linear_lt assms insert_commute)"], ["proof (state)\nthis:\n  x \\<in> elts \\<alpha>\n  y \\<in> elts \\<alpha>\n  x < y\n  A = {x, y}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       f x \\<in> {..<Suc (Suc 0)}", "consider \"\\<pi> x < \\<pi> y\" | \"\\<pi> y < \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> thesis;\n     \\<pi> y < \\<pi> x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis Ord\\<pi> Ord_linear_lt inj\\<pi> inj_onD less_imp_not_eq2 xy)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       f x \\<in> {..<Suc (Suc 0)}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"f A \\<in> {..<Suc (Suc 0)}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. f A \\<in> {..<Suc (Suc 0)}", "by (metis A One_nat_def lessI lessThan_iff zero_less_Suc \\<open>x < y\\<close> A exE_some [OF _ f_def])"], ["proof (state)\nthis:\n  f A \\<in> {..<Suc (Suc 0)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<in> [elts \\<alpha>]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "have fiff: \"\\<pi> x < \\<pi> y \\<and> i=0 \\<or> \\<pi> y < \\<pi> x \\<and> i=1\"\n    if f: \"f {x,y} = i\" and xy: \"x \\<in> elts \\<alpha>\" \"y \\<in> elts \\<alpha>\" \"x<y\" for x y i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "consider \"\\<pi> x < \\<pi> y\" | \"\\<pi> y < \\<pi> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> thesis;\n     \\<pi> y < \\<pi> x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using xy"], ["proof (prove)\nusing this:\n  x \\<in> elts \\<alpha>\n  y \\<in> elts \\<alpha>\n  x < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> thesis;\n     \\<pi> y < \\<pi> x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis Ord\\<pi> Ord_linear_lt inj\\<pi> inj_onD less_V_def)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<pi> x < \\<pi> y \\<Longrightarrow> ?thesis;\n   \\<pi> y < \\<pi> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<pi> x < \\<pi> y \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n 2. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "case 1"], ["proof (state)\nthis:\n  \\<pi> x < \\<pi> y\n\ngoal (2 subgoals):\n 1. \\<pi> x < \\<pi> y \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n 2. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "then"], ["proof (chain)\npicking this:\n  \\<pi> x < \\<pi> y", "have \"f{x,y} = 0\""], ["proof (prove)\nusing this:\n  \\<pi> x < \\<pi> y\n\ngoal (1 subgoal):\n 1. f {x, y} = 0", "using \\<open>x<y\\<close>"], ["proof (prove)\nusing this:\n  \\<pi> x < \\<pi> y\n  x < y\n\ngoal (1 subgoal):\n 1. f {x, y} = 0", "by (force simp: f_def Set.doubleton_eq_iff)"], ["proof (state)\nthis:\n  f {x, y} = 0\n\ngoal (2 subgoals):\n 1. \\<pi> x < \\<pi> y \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n 2. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "then"], ["proof (chain)\npicking this:\n  f {x, y} = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f {x, y} = 0\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "using \"1\" f"], ["proof (prove)\nusing this:\n  f {x, y} = 0\n  \\<pi> x < \\<pi> y\n  f {x, y} = i\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "by auto"], ["proof (state)\nthis:\n  \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "case 2"], ["proof (state)\nthis:\n  \\<pi> y < \\<pi> x\n\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "then"], ["proof (chain)\npicking this:\n  \\<pi> y < \\<pi> x", "have \"f{x,y} = 1\""], ["proof (prove)\nusing this:\n  \\<pi> y < \\<pi> x\n\ngoal (1 subgoal):\n 1. f {x, y} = 1", "using \\<open>x<y\\<close>"], ["proof (prove)\nusing this:\n  \\<pi> y < \\<pi> x\n  x < y\n\ngoal (1 subgoal):\n 1. f {x, y} = 1", "by (force simp: f_def Set.doubleton_eq_iff)"], ["proof (state)\nthis:\n  f {x, y} = 1\n\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x \\<Longrightarrow>\n    \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "then"], ["proof (chain)\npicking this:\n  f {x, y} = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  f {x, y} = 1\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "using \"2\" f"], ["proof (prove)\nusing this:\n  f {x, y} = 1\n  \\<pi> y < \\<pi> x\n  f {x, y} = i\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1", "by auto"], ["proof (state)\nthis:\n  \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<pi> x < \\<pi> y \\<and> i = 0 \\<or> \\<pi> y < \\<pi> x \\<and> i = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>f {?x, ?y} = ?i; ?x \\<in> elts \\<alpha>; ?y \\<in> elts \\<alpha>;\n   ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?x < \\<pi> ?y \\<and> ?i = 0 \\<or>\n                    \\<pi> ?y < \\<pi> ?x \\<and> ?i = 1\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "have False\n    if eq: \"tp H = succ (vcard \\<alpha>)\" and H: \"H \\<subseteq> elts \\<alpha>\"\n    and 0: \"\\<And>A. A \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = 0\" for H"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have [simp]: \"small H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small H", "using H down"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<alpha>\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y\n\ngoal (1 subgoal):\n 1. small H", "by auto"], ["proof (state)\nthis:\n  small H\n\ngoal (1 subgoal):\n 1. False", "have OH: \"Ord x\" if \"x \\<in> H\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord x", "using H Ord_in_Ord \\<open>Ord \\<alpha>\\<close> that"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<alpha>\n  \\<lbrakk>Ord ?k; ?m \\<in> elts ?k\\<rbrakk> \\<Longrightarrow> Ord ?m\n  Ord \\<alpha>\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. Ord x", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> H \\<Longrightarrow> Ord ?x\n\ngoal (1 subgoal):\n 1. False", "have \\<pi>: \"\\<pi> x < \\<pi> y\" if \"x\\<in>H\" \"y\\<in>H\" \"x<y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y", "using 0 [of \"{x,y}\"] that H fiff"], ["proof (prove)\nusing this:\n  {x, y} \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f {x, y} = 0\n  x \\<in> H\n  y \\<in> H\n  x < y\n  H \\<subseteq> elts \\<alpha>\n  \\<lbrakk>f {?x, ?y} = ?i; ?x \\<in> elts \\<alpha>; ?y \\<in> elts \\<alpha>;\n   ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?x < \\<pi> ?y \\<and> ?i = 0 \\<or>\n                    \\<pi> ?y < \\<pi> ?x \\<and> ?i = 1\n\ngoal (1 subgoal):\n 1. \\<pi> x < \\<pi> y", "by (fastforce simp: nsets_2_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> H; ?y \\<in> H; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?x < \\<pi> ?y\n\ngoal (1 subgoal):\n 1. False", "have sub_vcard: \"\\<pi> ` H \\<subseteq> elts (vcard \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> ` H \\<subseteq> elts (vcard \\<alpha>)", "using H fun\\<pi>"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<alpha>\n  \\<pi> \\<in> elts \\<alpha> \\<rightarrow> elts (vcard \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<pi> ` H \\<subseteq> elts (vcard \\<alpha>)", "by auto"], ["proof (state)\nthis:\n  \\<pi> ` H \\<subseteq> elts (vcard \\<alpha>)\n\ngoal (1 subgoal):\n 1. False", "have \"tp H = tp (\\<pi> ` H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tp H = tp (\\<pi> ` H)", "proof (rule ordertype_VWF_inc_eq [symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. H \\<subseteq> ON\n 2. \\<pi> ` H \\<subseteq> ON\n 3. small H\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; x < y\\<rbrakk>\n       \\<Longrightarrow> \\<pi> x < \\<pi> y", "show \"\\<pi> ` H \\<subseteq> ON\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> ` H \\<subseteq> ON", "using H Ord\\<pi>"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<alpha>\n  ?x \\<in> elts \\<alpha> \\<Longrightarrow> Ord (\\<pi> ?x)\n\ngoal (1 subgoal):\n 1. \\<pi> ` H \\<subseteq> ON", "by blast"], ["proof (state)\nthis:\n  \\<pi> ` H \\<subseteq> ON\n\ngoal (3 subgoals):\n 1. H \\<subseteq> ON\n 2. small H\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; x < y\\<rbrakk>\n       \\<Longrightarrow> \\<pi> x < \\<pi> y", "qed (auto simp: \\<pi> OH subsetI)"], ["proof (state)\nthis:\n  tp H = tp (\\<pi> ` H)\n\ngoal (1 subgoal):\n 1. False", "also"], ["proof (state)\nthis:\n  tp H = tp (\\<pi> ` H)\n\ngoal (1 subgoal):\n 1. False", "have \"\\<dots> \\<le> vcard \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tp (\\<pi> ` H) \\<le> vcard \\<alpha>", "by (simp add: H sub_vcard assms ordertype_le_Ord)"], ["proof (state)\nthis:\n  tp (\\<pi> ` H) \\<le> vcard \\<alpha>\n\ngoal (1 subgoal):\n 1. False", "finally"], ["proof (chain)\npicking this:\n  tp H \\<le> vcard \\<alpha>", "show False"], ["proof (prove)\nusing this:\n  tp H \\<le> vcard \\<alpha>\n\ngoal (1 subgoal):\n 1. False", "by (simp add: eq succ_le_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>tp ?H = ZFC_in_HOL.succ (vcard \\<alpha>);\n   ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A. A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = 0\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>tp ?H = ZFC_in_HOL.succ (vcard \\<alpha>);\n   ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A. A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = 0\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "have False\n    if eq: \"tp H = \\<omega>\" and H: \"H \\<subseteq> elts \\<alpha>\"\n      and 1: \"\\<And>A. A \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = Suc 0\" for H"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have [simp]: \"small H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small H", "using H down"], ["proof (prove)\nusing this:\n  H \\<subseteq> elts \\<alpha>\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y\n\ngoal (1 subgoal):\n 1. small H", "by auto"], ["proof (state)\nthis:\n  small H\n\ngoal (1 subgoal):\n 1. False", "define \\<eta> where \"\\<eta> \\<equiv> inv_into H (ordermap H VWF) \\<circ> ord_of_nat\""], ["proof (state)\nthis:\n  \\<eta> \\<equiv> inv_into H (ordermap H VWF) \\<circ> ord_of_nat\n\ngoal (1 subgoal):\n 1. False", "have bij: \"bij_betw (ordermap H VWF) H (elts \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (ordermap H VWF) H (elts \\<omega>)", "by (metis ordermap_bij \\<open>small H\\<close> eq total_on_VWF wf_VWF)"], ["proof (state)\nthis:\n  bij_betw (ordermap H VWF) H (elts \\<omega>)\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  bij_betw (ordermap H VWF) H (elts \\<omega>)", "have \"bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H\""], ["proof (prove)\nusing this:\n  bij_betw (ordermap H VWF) H (elts \\<omega>)\n\ngoal (1 subgoal):\n 1. bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H", "by (simp add: bij_betw_inv_into)"], ["proof (state)\nthis:\n  bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H", "have \\<eta>: \"bij_betw \\<eta> UNIV H\""], ["proof (prove)\nusing this:\n  bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H\n\ngoal (1 subgoal):\n 1. bij_betw \\<eta> UNIV H", "unfolding \\<eta>_def"], ["proof (prove)\nusing this:\n  bij_betw (inv_into H (ordermap H VWF)) (elts \\<omega>) H\n\ngoal (1 subgoal):\n 1. bij_betw (inv_into H (ordermap H VWF) \\<circ> ord_of_nat) UNIV H", "by (metis \\<omega>_def bij_betw_comp_iff2 bij_betw_def elts_of_set inf inj_ord_of_nat order_refl)"], ["proof (state)\nthis:\n  bij_betw \\<eta> UNIV H\n\ngoal (1 subgoal):\n 1. False", "have Ord\\<eta>: \"Ord (\\<eta> k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (\\<eta> k)", "by (meson H Ord_in_Ord UNIV_I \\<eta> assms bij_betw_apply subsetD)"], ["proof (state)\nthis:\n  Ord (\\<eta> ?k)\n\ngoal (1 subgoal):\n 1. False", "obtain k where k: \"((\\<pi> \\<circ> \\<eta>)(Suc k), (\\<pi> \\<circ> \\<eta>) k) \\<notin> VWF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        ((\\<pi> \\<circ> \\<eta>) (Suc k), (\\<pi> \\<circ> \\<eta>) k)\n        \\<notin> VWF \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wf_VWF wf_iff_no_infinite_down_chain"], ["proof (prove)\nusing this:\n  wf VWF\n  wf ?r = (\\<nexists>f. \\<forall>i. (f (Suc i), f i) \\<in> ?r)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        ((\\<pi> \\<circ> \\<eta>) (Suc k), (\\<pi> \\<circ> \\<eta>) k)\n        \\<notin> VWF \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ((\\<pi> \\<circ> \\<eta>) (Suc k), (\\<pi> \\<circ> \\<eta>) k) \\<notin> VWF\n\ngoal (1 subgoal):\n 1. False", "have \\<pi>: \"\\<pi> y < \\<pi> x\" if \"x\\<in>H\" \"y\\<in>H\" \"x<y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x", "using 1 [of \"{x,y}\"] that H fiff"], ["proof (prove)\nusing this:\n  {x, y} \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f {x, y} = Suc 0\n  x \\<in> H\n  y \\<in> H\n  x < y\n  H \\<subseteq> elts \\<alpha>\n  \\<lbrakk>f {?x, ?y} = ?i; ?x \\<in> elts \\<alpha>; ?y \\<in> elts \\<alpha>;\n   ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?x < \\<pi> ?y \\<and> ?i = 0 \\<or>\n                    \\<pi> ?y < \\<pi> ?x \\<and> ?i = 1\n\ngoal (1 subgoal):\n 1. \\<pi> y < \\<pi> x", "by (fastforce simp: nsets_2_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> H; ?y \\<in> H; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?y < \\<pi> ?x\n\ngoal (1 subgoal):\n 1. False", "have False if \"\\<eta> (Suc k) \\<le> \\<eta> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"(\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k", "using that Ord\\<eta> Ord_mem_iff_lt"], ["proof (prove)\nusing this:\n  \\<eta> (Suc k) \\<le> \\<eta> k\n  Ord (\\<eta> ?k)\n  \\<lbrakk>Ord ?k; Ord ?l\\<rbrakk>\n  \\<Longrightarrow> (?k \\<in> elts ?l) = (?k < ?l)\n\ngoal (1 subgoal):\n 1. (\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k", "by auto"], ["proof (state)\nthis:\n  (\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  (\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k", "have \"ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)\""], ["proof (prove)\nusing this:\n  (\\<eta> (Suc k), \\<eta> k) \\<in> VWF \\<or> \\<eta> (Suc k) = \\<eta> k\n\ngoal (1 subgoal):\n 1. ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)", "by (metis \\<eta> \\<open>small H\\<close> bij_betw_imp_surj_on ordermap_mono_le rangeI trans_VWF wf_VWF)"], ["proof (state)\nthis:\n  ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)\n\ngoal (1 subgoal):\n 1. False", "have \"ordermap H VWF (\\<eta> (Suc k)) = succ (ord_of_nat k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordermap H VWF (\\<eta> (Suc k)) = ZFC_in_HOL.succ (ord_of_nat k)", "unfolding \\<eta>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordermap H VWF\n     ((inv_into H (ordermap H VWF) \\<circ> ord_of_nat) (Suc k)) =\n    ZFC_in_HOL.succ (ord_of_nat k)", "using bij bij_betw_inv_into_right"], ["proof (prove)\nusing this:\n  bij_betw (ordermap H VWF) H (elts \\<omega>)\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a' \\<in> ?A'\\<rbrakk>\n  \\<Longrightarrow> ?f (inv_into ?A ?f ?a') = ?a'\n\ngoal (1 subgoal):\n 1. ordermap H VWF\n     ((inv_into H (ordermap H VWF) \\<circ> ord_of_nat) (Suc k)) =\n    ZFC_in_HOL.succ (ord_of_nat k)", "by force"], ["proof (state)\nthis:\n  ordermap H VWF (\\<eta> (Suc k)) = ZFC_in_HOL.succ (ord_of_nat k)\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  ordermap H VWF (\\<eta> (Suc k)) = ZFC_in_HOL.succ (ord_of_nat k)\n\ngoal (1 subgoal):\n 1. False", "have \"ordermap H VWF (\\<eta> k) = ord_of_nat k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordermap H VWF (\\<eta> k) = ord_of_nat k", "apply (simp add: \\<eta>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordermap H VWF (inv_into H (ordermap H VWF) (ord_of_nat k)) =\n    ord_of_nat k", "by (meson bij bij_betw_inv_into_right ord_of_nat_\\<omega>)"], ["proof (state)\nthis:\n  ordermap H VWF (\\<eta> k) = ord_of_nat k\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)\n  ordermap H VWF (\\<eta> (Suc k)) = ZFC_in_HOL.succ (ord_of_nat k)\n  ordermap H VWF (\\<eta> k) = ord_of_nat k", "have \"succ (ord_of_nat k) \\<le> ord_of_nat k\""], ["proof (prove)\nusing this:\n  ordermap H VWF (\\<eta> (Suc k)) \\<le> ordermap H VWF (\\<eta> k)\n  ordermap H VWF (\\<eta> (Suc k)) = ZFC_in_HOL.succ (ord_of_nat k)\n  ordermap H VWF (\\<eta> k) = ord_of_nat k\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.succ (ord_of_nat k) \\<le> ord_of_nat k", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.succ (ord_of_nat k) \\<le> ord_of_nat k\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.succ (ord_of_nat k) \\<le> ord_of_nat k", "show False"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ (ord_of_nat k) \\<le> ord_of_nat k\n\ngoal (1 subgoal):\n 1. False", "by (simp add: less_eq_V_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<eta> (Suc k) \\<le> \\<eta> k \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  \\<eta> (Suc k) \\<le> \\<eta> k \\<Longrightarrow> False", "have \"\\<eta> k < \\<eta> (Suc k)\""], ["proof (prove)\nusing this:\n  \\<eta> (Suc k) \\<le> \\<eta> k \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<eta> k < \\<eta> (Suc k)", "by (metis Ord\\<eta> Ord_linear_lt dual_order.strict_implies_order eq_refl)"], ["proof (state)\nthis:\n  \\<eta> k < \\<eta> (Suc k)\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  \\<eta> k < \\<eta> (Suc k)", "have \"(\\<pi> \\<circ> \\<eta>)(Suc k) < (\\<pi> \\<circ> \\<eta>)k\""], ["proof (prove)\nusing this:\n  \\<eta> k < \\<eta> (Suc k)\n\ngoal (1 subgoal):\n 1. (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k", "using \\<pi> \\<eta> bij_betw_apply"], ["proof (prove)\nusing this:\n  \\<eta> k < \\<eta> (Suc k)\n  \\<lbrakk>?x \\<in> H; ?y \\<in> H; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> \\<pi> ?y < \\<pi> ?x\n  bij_betw \\<eta> UNIV H\n  \\<lbrakk>bij_betw ?f ?A ?B; ?a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> ?B\n\ngoal (1 subgoal):\n 1. (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k", "by force"], ["proof (state)\nthis:\n  (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k", "show False"], ["proof (prove)\nusing this:\n  (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k\n\ngoal (1 subgoal):\n 1. False", "using k"], ["proof (prove)\nusing this:\n  (\\<pi> \\<circ> \\<eta>) (Suc k) < (\\<pi> \\<circ> \\<eta>) k\n  ((\\<pi> \\<circ> \\<eta>) (Suc k), (\\<pi> \\<circ> \\<eta>) k) \\<notin> VWF\n\ngoal (1 subgoal):\n 1. False", "apply (simp add: subset_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<pi> (\\<eta> (Suc k)) < \\<pi> (\\<eta> k);\n     (\\<pi> (\\<eta> (Suc k)), \\<pi> (\\<eta> k)) \\<notin> VWF\\<rbrakk>\n    \\<Longrightarrow> False", "by (metis H Ord\\<pi> UNIV_I VWF_iff_Ord_less \\<eta> bij_betw_imp_surj_on image_subset_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>tp ?H = \\<omega>; ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A.\n      A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = Suc 0\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>tp ?H = ZFC_in_HOL.succ (vcard \\<alpha>);\n   ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A. A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = 0\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<lbrakk>tp ?H = \\<omega>; ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A.\n      A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = Suc 0\\<rbrakk>\n  \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>tp ?H = ZFC_in_HOL.succ (vcard \\<alpha>);\n   ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A. A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = 0\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<lbrakk>tp ?H = \\<omega>; ?H \\<subseteq> elts \\<alpha>;\n   \\<And>A.\n      A \\<in> [?H]\\<^bsup>2\\<^esup> \\<Longrightarrow> f A = Suc 0\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> partn_lst_VWF \\<alpha>\n            [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>] 2", "apply (simp add: partn_lst_def image_subset_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>H.\n                \\<lbrakk>tp H = ZFC_in_HOL.succ (vcard \\<alpha>);\n                 H \\<subseteq> elts \\<alpha>;\n                 \\<And>A.\n                    A \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n                    f A = 0\\<rbrakk>\n                \\<Longrightarrow> False;\n     \\<And>H.\n        \\<lbrakk>tp H = \\<omega>; H \\<subseteq> elts \\<alpha>;\n         \\<And>A.\n            A \\<in> [H]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            f A = Suc 0\\<rbrakk>\n        \\<Longrightarrow> False\\<rbrakk>\n    \\<Longrightarrow> \\<exists>f\\<in>[elts\n \\<alpha>]\\<^bsup>2\\<^esup> \\<rightarrow>\n                                     {..<Suc (Suc 0)}.\n                         \\<forall>i<Suc (Suc 0).\n                            \\<forall>H.\n                               tp H =\n                               [ZFC_in_HOL.succ (vcard \\<alpha>),\n                                \\<omega>] !\n                               i \\<longrightarrow>\n                               H \\<subseteq> elts \\<alpha> \\<longrightarrow>\n                               (\\<exists>x\\<in>[H]\\<^bsup>2\\<^esup>.\n                                   f x \\<noteq> i)", "by (metis f_Pi less_2_cases nth_Cons_0 nth_Cons_Suc numeral_2_eq_2)"], ["proof (state)\nthis:\n  \\<not> partn_lst_VWF \\<alpha> [ZFC_in_HOL.succ (vcard \\<alpha>), \\<omega>]\n          2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Specker's theorem\\<close>"], ["", "definition form_split :: \"[nat,nat,nat,nat,nat] \\<Rightarrow> bool\" where\n  \"form_split a b c d i \\<equiv> a \\<le> c \\<and> (i=0 \\<and> a<b \\<and> b<c \\<and> c<d \\<or>\n                                    i=1 \\<and> a<c \\<and> c<b \\<and> b<d \\<or>\n                                    i=2 \\<and> a<c \\<and> c<d \\<and> d<b \\<or>\n                                    i=3 \\<and> a=c \\<and> b\\<noteq>d)\""], ["", "definition form :: \"[(nat*nat)set, nat] \\<Rightarrow> bool\" where\n  \"form u i \\<equiv> \\<exists>a b c d. u = {(a,b),(c,d)} \\<and> form_split a b c d i\""], ["", "definition scheme :: \"[(nat*nat)set] \\<Rightarrow> nat set\" where\n  \"scheme u \\<equiv> fst ` u \\<union> snd ` u\""], ["", "definition UU :: \"(nat*nat) set\"\n  where \"UU \\<equiv> {(a,b). a < b}\""], ["", "lemma ordertype_UNIV_\\<omega>2: \"ordertype UNIV pair_less = \\<omega>\\<up>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype UNIV pair_less = \\<omega> \\<up> ord_of_nat 2", "using ordertype_Times [of concl: UNIV UNIV less_than less_than]"], ["proof (prove)\nusing this:\n  \\<lbrakk>small UNIV; small UNIV; wf less_than; trans less_than;\n   total less_than; wf less_than; trans less_than; total less_than\\<rbrakk>\n  \\<Longrightarrow> ordertype (UNIV \\<times> UNIV)\n                     (less_than <*lex*> less_than) =\n                    ordertype UNIV less_than * ordertype UNIV less_than\n\ngoal (1 subgoal):\n 1. ordertype UNIV pair_less = \\<omega> \\<up> ord_of_nat 2", "by (simp add: total_less_than pair_less_def ordertype_nat_\\<omega> numeral_2_eq_2)"], ["", "lemma ordertype_UU_ge_\\<omega>2:  \"ordertype UNIV pair_less \\<le> ordertype UU pair_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype UNIV pair_less \\<le> ordertype UU pair_less", "proof (rule ordertype_inc_le)"], ["proof (state)\ngoal (8 subgoals):\n 1. small UNIV\n 2. small UU\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; (x, y) \\<in> pair_less\\<rbrakk>\n       \\<Longrightarrow> (?\\<pi> x, ?\\<pi> y) \\<in> pair_less\n 4. wf pair_less\n 5. total pair_less\n 6. wf pair_less\n 7. trans pair_less\n 8. range ?\\<pi> \\<subseteq> UU", "define \\<pi> where \"\\<pi> \\<equiv> \\<lambda>(m,n). (m, Suc (m+n))\""], ["proof (state)\nthis:\n  \\<pi> \\<equiv> \\<lambda>(m, n). (m, Suc (m + n))\n\ngoal (8 subgoals):\n 1. small UNIV\n 2. small UU\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; (x, y) \\<in> pair_less\\<rbrakk>\n       \\<Longrightarrow> (?\\<pi> x, ?\\<pi> y) \\<in> pair_less\n 4. wf pair_less\n 5. total pair_less\n 6. wf pair_less\n 7. trans pair_less\n 8. range ?\\<pi> \\<subseteq> UU", "show \"(\\<pi> (x::nat \\<times> nat), \\<pi> y) \\<in> pair_less\" if \"(x, y) \\<in> pair_less\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> x, \\<pi> y) \\<in> pair_less", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> pair_less\n\ngoal (1 subgoal):\n 1. (\\<pi> x, \\<pi> y) \\<in> pair_less", "by (auto simp: \\<pi>_def pair_less_def split: prod.split)"], ["proof (state)\nthis:\n  (?x, ?y) \\<in> pair_less \\<Longrightarrow>\n  (\\<pi> ?x, \\<pi> ?y) \\<in> pair_less\n\ngoal (7 subgoals):\n 1. small UNIV\n 2. small UU\n 3. wf pair_less\n 4. total pair_less\n 5. wf pair_less\n 6. trans pair_less\n 7. range (\\<lambda>x. case x of (m, n) \\<Rightarrow> (m, Suc (m + n)))\n    \\<subseteq> UU", "show \"range \\<pi> \\<subseteq> UU\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range \\<pi> \\<subseteq> UU", "by (auto simp: \\<pi>_def UU_def)"], ["proof (state)\nthis:\n  range \\<pi> \\<subseteq> UU\n\ngoal (6 subgoals):\n 1. small UNIV\n 2. small UU\n 3. wf pair_less\n 4. total pair_less\n 5. wf pair_less\n 6. trans pair_less", "qed auto"], ["", "lemma ordertype_UU_\\<omega>2: \"ordertype UU pair_less = \\<omega>\\<up>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype UU pair_less = \\<omega> \\<up> ord_of_nat 2", "by (metis eq_iff ordertype_UNIV_\\<omega>2 ordertype_UU_ge_\\<omega>2 ordertype_mono small top_greatest trans_pair_less wf_pair_less)"], ["", "text \\<open>Lemma 2.3 of Jean A. Larson,\n     A short proof of a partition theorem for the ordinal $\\omega^\\omega$.\n     \\emph{Annals of Mathematical Logic}, 6:129?-145, 1973.\\<close>"], ["", "lemma lemma_2_3:\n  fixes f :: \"(nat \\<times> nat) set \\<Rightarrow> nat\"\n  assumes \"f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\"\n  obtains N js where \"infinite N\" and \"\\<And>k u. \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k; scheme u \\<subseteq> N\\<rbrakk> \\<Longrightarrow> f u = js!k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f_less2: \"f {p,q} < Suc (Suc 0)\" if \"p \\<noteq> q\" \"p \\<in> UU\" \"q \\<in> UU\" for p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. f {p, q} < Suc (Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f {p, q} < Suc (Suc 0)", "have \"{p,q} \\<in> [UU]\\<^bsup>2\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>", "using that"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p \\<in> UU\n  q \\<in> UU\n\ngoal (1 subgoal):\n 1. {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>", "by (simp add: nsets_def)"], ["proof (state)\nthis:\n  {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. f {p, q} < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>", "show ?thesis"], ["proof (prove)\nusing this:\n  {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. f {p, q} < Suc (Suc 0)", "using assms"], ["proof (prove)\nusing this:\n  {p, q} \\<in> [UU]\\<^bsup>2\\<^esup>\n  f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. f {p, q} < Suc (Suc 0)", "by (simp add: Pi_iff)"], ["proof (state)\nthis:\n  f {p, q} < Suc (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> UU; ?q \\<in> UU\\<rbrakk>\n  \\<Longrightarrow> f {?p, ?q} < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f0 where \"f0 \\<equiv> (\\<lambda>A::nat set. THE x. \\<exists>a b c d. A = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d \\<and> x = f {(a,b),(c,d)})\""], ["proof (state)\nthis:\n  f0 \\<equiv>\n  \\<lambda>A.\n     THE x.\n        \\<exists>a b c d.\n           A = {a, b, c, d} \\<and>\n           a < b \\<and> b < c \\<and> c < d \\<and> x = f {(a, b), (c, d)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f0: \"f0 {a,b,c,d} = f {(a,b),(c,d)}\" if \"a<b\" \"b<c\" \"c<d\" for a b c d"], ["proof (prove)\ngoal (1 subgoal):\n 1. f0 {a, b, c, d} = f {(a, b), (c, d)}", "unfolding f0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE x.\n        \\<exists>aa ba ca da.\n           {a, b, c, d} = {aa, ba, ca, da} \\<and>\n           aa < ba \\<and>\n           ba < ca \\<and> ca < da \\<and> x = f {(aa, ba), (ca, da)}) =\n    f {(a, b), (c, d)}", "apply (rule theI2 [where a = \"f {(a,b), (c,d)}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, b), (c, d)} = f {(aa, ba), (ca, da)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ba), (ca, da)} \\<Longrightarrow>\n       x = f {(a, b), (c, d)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ba), (ca, da)} \\<Longrightarrow>\n       x = f {(a, b), (c, d)}", "using that"], ["proof (prove)\nusing this:\n  a < b\n  b < c\n  c < d\n\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, b), (c, d)} = f {(aa, ba), (ca, da)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ba), (ca, da)} \\<Longrightarrow>\n       x = f {(a, b), (c, d)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ba), (ca, da)} \\<Longrightarrow>\n       x = f {(a, b), (c, d)}", "by (force simp: insert_eq_iff split: if_split_asm)+"], ["proof (state)\nthis:\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f0 {?a, ?b, ?c, ?d} = f {(?a, ?b), (?c, ?d)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f0 X < Suc (Suc 0)\"\n    if \"finite X\" and \"card X = 4\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "have \"X \\<in> [X]\\<^bsup>4\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "using that"], ["proof (prove)\nusing this:\n  finite X\n  card X = 4\n\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>", "obtain a b c d where \"X = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d\""], ["proof (prove)\nusing this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        X = {a, b, c, d} \\<and>\n        a < b \\<and> b < c \\<and> c < d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: ordered_nsets_4_eq)"], ["proof (state)\nthis:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "using f0 f_less2"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f0 {?a, ?b, ?c, ?d} = f {(?a, ?b), (?c, ?d)}\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> UU; ?q \\<in> UU\\<rbrakk>\n  \\<Longrightarrow> f {?p, ?q} < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. f0 X < Suc (Suc 0)", "by (auto simp: UU_def)"], ["proof (state)\nthis:\n  f0 X < Suc (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f0 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f0 ?X < Suc (Suc 0)", "have \"\\<exists>N t. infinite N \\<and> t < Suc (Suc 0)\n            \\<and> (\\<forall>X. X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow> f0 X = t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f0 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f0 X = t)", "using Ramsey [of UNIV 4 f0 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f0 ?X < Suc (Suc 0)\n  \\<lbrakk>infinite UNIV;\n   \\<forall>X.\n      X \\<subseteq> UNIV \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n      f0 X < 2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y t.\n                       Y \\<subseteq> UNIV \\<and>\n                       infinite Y \\<and>\n                       t < 2 \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y \\<and>\n                           finite X \\<and> card X = 4 \\<longrightarrow>\n                           f0 X = t)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f0 X = t)", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  \\<exists>N t.\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f0 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>N t.\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f0 X = t)", "obtain N0 j0 where \"infinite N0\" and j0: \"j0 < Suc (Suc 0)\" and N0: \"\\<And>A. A \\<in> [N0]\\<^bsup>4\\<^esup> \\<Longrightarrow> f0 A = j0\""], ["proof (prove)\nusing this:\n  \\<exists>N t.\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f0 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N0 j0.\n        \\<lbrakk>infinite N0; j0 < Suc (Suc 0);\n         \\<And>A.\n            A \\<in> [N0]\\<^bsup>4\\<^esup> \\<Longrightarrow>\n            f0 A = j0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  infinite N0\n  j0 < Suc (Suc 0)\n  ?A \\<in> [N0]\\<^bsup>4\\<^esup> \\<Longrightarrow> f0 ?A = j0\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f1 where \"f1 \\<equiv> (\\<lambda>A::nat set. THE x. \\<exists>a b c d. A = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d \\<and> x = f {(a,c),(b,d)})\""], ["proof (state)\nthis:\n  f1 \\<equiv>\n  \\<lambda>A.\n     THE x.\n        \\<exists>a b c d.\n           A = {a, b, c, d} \\<and>\n           a < b \\<and> b < c \\<and> c < d \\<and> x = f {(a, c), (b, d)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f1: \"f1 {a,b,c,d} = f {(a,c),(b,d)}\" if \"a<b\" \"b<c\" \"c<d\" for a b c d"], ["proof (prove)\ngoal (1 subgoal):\n 1. f1 {a, b, c, d} = f {(a, c), (b, d)}", "unfolding f1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE x.\n        \\<exists>aa ba ca da.\n           {a, b, c, d} = {aa, ba, ca, da} \\<and>\n           aa < ba \\<and>\n           ba < ca \\<and> ca < da \\<and> x = f {(aa, ca), (ba, da)}) =\n    f {(a, c), (b, d)}", "apply (rule theI2 [where a = \"f {(a,c), (b,d)}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, c), (b, d)} = f {(aa, ca), (ba, da)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ca), (ba, da)} \\<Longrightarrow>\n       x = f {(a, c), (b, d)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ca), (ba, da)} \\<Longrightarrow>\n       x = f {(a, c), (b, d)}", "using that"], ["proof (prove)\nusing this:\n  a < b\n  b < c\n  c < d\n\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, c), (b, d)} = f {(aa, ca), (ba, da)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ca), (ba, da)} \\<Longrightarrow>\n       x = f {(a, c), (b, d)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, ca), (ba, da)} \\<Longrightarrow>\n       x = f {(a, c), (b, d)}", "by (force simp: insert_eq_iff split: if_split_asm)+"], ["proof (state)\nthis:\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f1 {?a, ?b, ?c, ?d} = f {(?a, ?c), (?b, ?d)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f1 X < Suc (Suc 0)\"\n    if \"finite X\" and \"card X = 4\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "have \"X \\<in> [X]\\<^bsup>4\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "using that"], ["proof (prove)\nusing this:\n  finite X\n  card X = 4\n\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>", "obtain a b c d where \"X = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d\""], ["proof (prove)\nusing this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        X = {a, b, c, d} \\<and>\n        a < b \\<and> b < c \\<and> c < d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: ordered_nsets_4_eq)"], ["proof (state)\nthis:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "using f1 f_less2"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f1 {?a, ?b, ?c, ?d} = f {(?a, ?c), (?b, ?d)}\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> UU; ?q \\<in> UU\\<rbrakk>\n  \\<Longrightarrow> f {?p, ?q} < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. f1 X < Suc (Suc 0)", "by (auto simp: UU_def)"], ["proof (state)\nthis:\n  f1 X < Suc (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f1 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f1 ?X < Suc (Suc 0)", "have \"\\<exists>N t. N \\<subseteq> N0 \\<and> infinite N \\<and> t < Suc (Suc 0)\n            \\<and> (\\<forall>X. X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow> f1 X = t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f1 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N0 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f1 X = t)", "using \\<open>infinite N0\\<close> Ramsey [of N0 4 f1 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f1 ?X < Suc (Suc 0)\n  infinite N0\n  \\<lbrakk>infinite N0;\n   \\<forall>X.\n      X \\<subseteq> N0 \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n      f1 X < 2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y t.\n                       Y \\<subseteq> N0 \\<and>\n                       infinite Y \\<and>\n                       t < 2 \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y \\<and>\n                           finite X \\<and> card X = 4 \\<longrightarrow>\n                           f1 X = t)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N0 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f1 X = t)", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  \\<exists>N t.\n     N \\<subseteq> N0 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f1 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>N t.\n     N \\<subseteq> N0 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f1 X = t)", "obtain N1 j1 where \"N1 \\<subseteq> N0\" \"infinite N1\" and j1: \"j1 < Suc (Suc 0)\" and N1: \"\\<And>A. A \\<in> [N1]\\<^bsup>4\\<^esup> \\<Longrightarrow> f1 A = j1\""], ["proof (prove)\nusing this:\n  \\<exists>N t.\n     N \\<subseteq> N0 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f1 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N1 j1.\n        \\<lbrakk>N1 \\<subseteq> N0; infinite N1; j1 < Suc (Suc 0);\n         \\<And>A.\n            A \\<in> [N1]\\<^bsup>4\\<^esup> \\<Longrightarrow>\n            f1 A = j1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  N1 \\<subseteq> N0\n  infinite N1\n  j1 < Suc (Suc 0)\n  ?A \\<in> [N1]\\<^bsup>4\\<^esup> \\<Longrightarrow> f1 ?A = j1\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f2 where \"f2 \\<equiv> (\\<lambda>A::nat set. THE x. \\<exists>a b c d. A = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d \\<and> x = f {(a,d),(b,c)})\""], ["proof (state)\nthis:\n  f2 \\<equiv>\n  \\<lambda>A.\n     THE x.\n        \\<exists>a b c d.\n           A = {a, b, c, d} \\<and>\n           a < b \\<and> b < c \\<and> c < d \\<and> x = f {(a, d), (b, c)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f2: \"f2 {a,b,c,d} = f {(a,d),(b,c)}\" if \"a<b\" \"b<c\" \"c<d\" for a b c d"], ["proof (prove)\ngoal (1 subgoal):\n 1. f2 {a, b, c, d} = f {(a, d), (b, c)}", "unfolding f2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE x.\n        \\<exists>aa ba ca da.\n           {a, b, c, d} = {aa, ba, ca, da} \\<and>\n           aa < ba \\<and>\n           ba < ca \\<and> ca < da \\<and> x = f {(aa, da), (ba, ca)}) =\n    f {(a, d), (b, c)}", "apply (rule theI2 [where a = \"f {(a,d), (b,c)}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, d), (b, c)} = f {(aa, da), (ba, ca)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, da), (ba, ca)} \\<Longrightarrow>\n       x = f {(a, d), (b, c)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, da), (ba, ca)} \\<Longrightarrow>\n       x = f {(a, d), (b, c)}", "using that"], ["proof (prove)\nusing this:\n  a < b\n  b < c\n  c < d\n\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca da.\n       {a, b, c, d} = {aa, ba, ca, da} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and>\n       ca < da \\<and> f {(a, d), (b, c)} = f {(aa, da), (ba, ca)}\n 2. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, da), (ba, ca)} \\<Longrightarrow>\n       x = f {(a, d), (b, c)}\n 3. \\<And>x.\n       \\<exists>aa ba ca da.\n          {a, b, c, d} = {aa, ba, ca, da} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and>\n          ca < da \\<and> x = f {(aa, da), (ba, ca)} \\<Longrightarrow>\n       x = f {(a, d), (b, c)}", "by (force simp: insert_eq_iff split: if_split_asm)+"], ["proof (state)\nthis:\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f2 {?a, ?b, ?c, ?d} = f {(?a, ?d), (?b, ?c)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f2 X < Suc (Suc 0)\"\n    if \"finite X\" and \"card X = 4\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "have \"X \\<in> [X]\\<^bsup>4\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "using that"], ["proof (prove)\nusing this:\n  finite X\n  card X = 4\n\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>4\\<^esup>", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>", "obtain a b c d where \"X = {a,b,c,d} \\<and> a<b \\<and> b<c \\<and> c<d\""], ["proof (prove)\nusing this:\n  X \\<in> [X]\\<^bsup>4\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        X = {a, b, c, d} \\<and>\n        a < b \\<and> b < c \\<and> c < d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: ordered_nsets_4_eq)"], ["proof (state)\nthis:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "using f2 f_less2"], ["proof (prove)\nusing this:\n  X = {a, b, c, d} \\<and> a < b \\<and> b < c \\<and> c < d\n  \\<lbrakk>?a < ?b; ?b < ?c; ?c < ?d\\<rbrakk>\n  \\<Longrightarrow> f2 {?a, ?b, ?c, ?d} = f {(?a, ?d), (?b, ?c)}\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> UU; ?q \\<in> UU\\<rbrakk>\n  \\<Longrightarrow> f {?p, ?q} < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. f2 X < Suc (Suc 0)", "by (auto simp: UU_def)"], ["proof (state)\nthis:\n  f2 X < Suc (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f2 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f2 ?X < Suc (Suc 0)", "have \"\\<exists>N t. N \\<subseteq> N1 \\<and> infinite N \\<and> t < Suc (Suc 0)\n            \\<and> (\\<forall>X. X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow> f2 X = t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f2 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N1 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f2 X = t)", "using \\<open>infinite N1\\<close> Ramsey [of N1 4 f2 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 4\\<rbrakk>\n  \\<Longrightarrow> f2 ?X < Suc (Suc 0)\n  infinite N1\n  \\<lbrakk>infinite N1;\n   \\<forall>X.\n      X \\<subseteq> N1 \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n      f2 X < 2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y t.\n                       Y \\<subseteq> N1 \\<and>\n                       infinite Y \\<and>\n                       t < 2 \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y \\<and>\n                           finite X \\<and> card X = 4 \\<longrightarrow>\n                           f2 X = t)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N1 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 4 \\<longrightarrow>\n           f2 X = t)", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  \\<exists>N t.\n     N \\<subseteq> N1 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f2 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>N t.\n     N \\<subseteq> N1 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f2 X = t)", "obtain N2 j2 where \"N2 \\<subseteq> N1\" \"infinite N2\" and j2: \"j2 < Suc (Suc 0)\" and N2: \"\\<And>A. A \\<in> [N2]\\<^bsup>4\\<^esup> \\<Longrightarrow> f2 A = j2\""], ["proof (prove)\nusing this:\n  \\<exists>N t.\n     N \\<subseteq> N1 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 4 \\<longrightarrow>\n         f2 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N2 j2.\n        \\<lbrakk>N2 \\<subseteq> N1; infinite N2; j2 < Suc (Suc 0);\n         \\<And>A.\n            A \\<in> [N2]\\<^bsup>4\\<^esup> \\<Longrightarrow>\n            f2 A = j2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  N2 \\<subseteq> N1\n  infinite N2\n  j2 < Suc (Suc 0)\n  ?A \\<in> [N2]\\<^bsup>4\\<^esup> \\<Longrightarrow> f2 ?A = j2\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define f3 where \"f3 \\<equiv> (\\<lambda>A::nat set. THE x. \\<exists>a b c. A = {a,b,c} \\<and> a<b \\<and> b<c \\<and> x = f {(a,b),(a,c)})\""], ["proof (state)\nthis:\n  f3 \\<equiv>\n  \\<lambda>A.\n     THE x.\n        \\<exists>a b c.\n           A = {a, b, c} \\<and>\n           a < b \\<and> b < c \\<and> x = f {(a, b), (a, c)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f3: \"f3 {a,b,c} = f {(a,b),(a,c)}\" if \"a<b\" \"b<c\" for a b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. f3 {a, b, c} = f {(a, b), (a, c)}", "unfolding f3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE x.\n        \\<exists>aa ba ca.\n           {a, b, c} = {aa, ba, ca} \\<and>\n           aa < ba \\<and> ba < ca \\<and> x = f {(aa, ba), (aa, ca)}) =\n    f {(a, b), (a, c)}", "apply (rule theI2 [where a = \"f {(a,b), (a,c)}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca.\n       {a, b, c} = {aa, ba, ca} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and> f {(a, b), (a, c)} = f {(aa, ba), (aa, ca)}\n 2. \\<And>x.\n       \\<exists>aa ba ca.\n          {a, b, c} = {aa, ba, ca} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and> x = f {(aa, ba), (aa, ca)} \\<Longrightarrow>\n       x = f {(a, b), (a, c)}\n 3. \\<And>x.\n       \\<exists>aa ba ca.\n          {a, b, c} = {aa, ba, ca} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and> x = f {(aa, ba), (aa, ca)} \\<Longrightarrow>\n       x = f {(a, b), (a, c)}", "using that"], ["proof (prove)\nusing this:\n  a < b\n  b < c\n\ngoal (3 subgoals):\n 1. \\<exists>aa ba ca.\n       {a, b, c} = {aa, ba, ca} \\<and>\n       aa < ba \\<and>\n       ba < ca \\<and> f {(a, b), (a, c)} = f {(aa, ba), (aa, ca)}\n 2. \\<And>x.\n       \\<exists>aa ba ca.\n          {a, b, c} = {aa, ba, ca} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and> x = f {(aa, ba), (aa, ca)} \\<Longrightarrow>\n       x = f {(a, b), (a, c)}\n 3. \\<And>x.\n       \\<exists>aa ba ca.\n          {a, b, c} = {aa, ba, ca} \\<and>\n          aa < ba \\<and>\n          ba < ca \\<and> x = f {(aa, ba), (aa, ca)} \\<Longrightarrow>\n       x = f {(a, b), (a, c)}", "by (force simp: insert_eq_iff split: if_split_asm)+"], ["proof (state)\nthis:\n  \\<lbrakk>?a < ?b; ?b < ?c\\<rbrakk>\n  \\<Longrightarrow> f3 {?a, ?b, ?c} = f {(?a, ?b), (?a, ?c)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f3': \"f3 {a,b,c} = f {(a,b),(a,c)}\" if \"a<c\" \"c<b\" for a b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. f3 {a, b, c} = f {(a, b), (a, c)}", "using f3 [of a c b] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < c; c < b\\<rbrakk>\n  \\<Longrightarrow> f3 {a, c, b} = f {(a, c), (a, b)}\n  a < c\n  c < b\n\ngoal (1 subgoal):\n 1. f3 {a, b, c} = f {(a, b), (a, c)}", "by (simp add: insert_commute)"], ["proof (state)\nthis:\n  \\<lbrakk>?a < ?c; ?c < ?b\\<rbrakk>\n  \\<Longrightarrow> f3 {?a, ?b, ?c} = f {(?a, ?b), (?a, ?c)}\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f3 X < Suc (Suc 0)\"\n    if \"finite X\" and \"card X = 3\" for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "have \"X \\<in> [X]\\<^bsup>3\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>3\\<^esup>", "using that"], ["proof (prove)\nusing this:\n  finite X\n  card X = 3\n\ngoal (1 subgoal):\n 1. X \\<in> [X]\\<^bsup>3\\<^esup>", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  X \\<in> [X]\\<^bsup>3\\<^esup>\n\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X \\<in> [X]\\<^bsup>3\\<^esup>", "obtain a b c where \"X = {a,b,c} \\<and> a<b \\<and> b<c\""], ["proof (prove)\nusing this:\n  X \\<in> [X]\\<^bsup>3\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c.\n        X = {a, b, c} \\<and> a < b \\<and> b < c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: ordered_nsets_3_eq)"], ["proof (state)\nthis:\n  X = {a, b, c} \\<and> a < b \\<and> b < c\n\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "then"], ["proof (chain)\npicking this:\n  X = {a, b, c} \\<and> a < b \\<and> b < c", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {a, b, c} \\<and> a < b \\<and> b < c\n\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "using f3 f_less2"], ["proof (prove)\nusing this:\n  X = {a, b, c} \\<and> a < b \\<and> b < c\n  \\<lbrakk>?a < ?b; ?b < ?c\\<rbrakk>\n  \\<Longrightarrow> f3 {?a, ?b, ?c} = f {(?a, ?b), (?a, ?c)}\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> UU; ?q \\<in> UU\\<rbrakk>\n  \\<Longrightarrow> f {?p, ?q} < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. f3 X < Suc (Suc 0)", "by (auto simp: UU_def)"], ["proof (state)\nthis:\n  f3 X < Suc (Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; card ?X = 3\\<rbrakk>\n  \\<Longrightarrow> f3 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?X; card ?X = 3\\<rbrakk>\n  \\<Longrightarrow> f3 ?X < Suc (Suc 0)", "have \"\\<exists>N t. N \\<subseteq> N2 \\<and> infinite N \\<and> t < Suc (Suc 0)\n            \\<and> (\\<forall>X. X \\<subseteq> N \\<and> finite X \\<and> card X = 3 \\<longrightarrow> f3 X = t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 3\\<rbrakk>\n  \\<Longrightarrow> f3 ?X < Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N2 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 3 \\<longrightarrow>\n           f3 X = t)", "using \\<open>infinite N2\\<close> Ramsey [of N2 3 f3 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; card ?X = 3\\<rbrakk>\n  \\<Longrightarrow> f3 ?X < Suc (Suc 0)\n  infinite N2\n  \\<lbrakk>infinite N2;\n   \\<forall>X.\n      X \\<subseteq> N2 \\<and> finite X \\<and> card X = 3 \\<longrightarrow>\n      f3 X < 2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Y t.\n                       Y \\<subseteq> N2 \\<and>\n                       infinite Y \\<and>\n                       t < 2 \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y \\<and>\n                           finite X \\<and> card X = 3 \\<longrightarrow>\n                           f3 X = t)\n\ngoal (1 subgoal):\n 1. \\<exists>N t.\n       N \\<subseteq> N2 \\<and>\n       infinite N \\<and>\n       t < Suc (Suc 0) \\<and>\n       (\\<forall>X.\n           X \\<subseteq> N \\<and>\n           finite X \\<and> card X = 3 \\<longrightarrow>\n           f3 X = t)", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  \\<exists>N t.\n     N \\<subseteq> N2 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 3 \\<longrightarrow>\n         f3 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>N t.\n     N \\<subseteq> N2 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 3 \\<longrightarrow>\n         f3 X = t)", "obtain N3 j3 where \"N3 \\<subseteq> N2\" \"infinite N3\" and j3: \"j3 < Suc (Suc 0)\" and N3: \"\\<And>A. A \\<in> [N3]\\<^bsup>3\\<^esup> \\<Longrightarrow> f3 A = j3\""], ["proof (prove)\nusing this:\n  \\<exists>N t.\n     N \\<subseteq> N2 \\<and>\n     infinite N \\<and>\n     t < Suc (Suc 0) \\<and>\n     (\\<forall>X.\n         X \\<subseteq> N \\<and> finite X \\<and> card X = 3 \\<longrightarrow>\n         f3 X = t)\n\ngoal (1 subgoal):\n 1. (\\<And>N3 j3.\n        \\<lbrakk>N3 \\<subseteq> N2; infinite N3; j3 < Suc (Suc 0);\n         \\<And>A.\n            A \\<in> [N3]\\<^bsup>3\\<^esup> \\<Longrightarrow>\n            f3 A = j3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_def)"], ["proof (state)\nthis:\n  N3 \\<subseteq> N2\n  infinite N3\n  j3 < Suc (Suc 0)\n  ?A \\<in> [N3]\\<^bsup>3\\<^esup> \\<Longrightarrow> f3 ?A = j3\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite ?N\n 2. \\<And>k u.\n       \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n        scheme u \\<subseteq> ?N\\<rbrakk>\n       \\<Longrightarrow> f u = ?js ! k", "fix k u"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite ?N\n 2. \\<And>k u.\n       \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n        scheme u \\<subseteq> ?N\\<rbrakk>\n       \\<Longrightarrow> f u = ?js ! k", "assume \"k < 4\"\n      and u: \"form u k\" \"scheme u \\<subseteq> N3\"\n      and UU: \"u \\<in> [UU]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  k < 4\n  form u k\n  scheme u \\<subseteq> N3\n  u \\<in> [UU]\\<^bsup>2\\<^esup>\n\ngoal (2 subgoals):\n 1. infinite ?N\n 2. \\<And>k u.\n       \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n        scheme u \\<subseteq> ?N\\<rbrakk>\n       \\<Longrightarrow> f u = ?js ! k", "then"], ["proof (chain)\npicking this:\n  k < 4\n  form u k\n  scheme u \\<subseteq> N3\n  u \\<in> [UU]\\<^bsup>2\\<^esup>", "consider (0) \"k=0\" | (1) \"k=1\" | (2) \"k=2\" | (3) \"k=3\""], ["proof (prove)\nusing this:\n  k < 4\n  form u k\n  scheme u \\<subseteq> N3\n  u \\<in> [UU]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k = 0 \\<Longrightarrow> thesis; k = 1 \\<Longrightarrow> thesis;\n     k = 2 \\<Longrightarrow> thesis; k = 3 \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. infinite ?N\n 2. \\<And>k u.\n       \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n        scheme u \\<subseteq> ?N\\<rbrakk>\n       \\<Longrightarrow> f u = ?js ! k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"f u = [j0,j1,j2,j3] ! k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. k = 0 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 4. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "case 0"], ["proof (state)\nthis:\n  k = 0\n\ngoal (4 subgoals):\n 1. k = 0 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 4. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "have \"N3 \\<subseteq> N0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N3 \\<subseteq> N0", "using \\<open>N1 \\<subseteq> N0\\<close> \\<open>N2 \\<subseteq> N1\\<close> \\<open>N3 \\<subseteq> N2\\<close>"], ["proof (prove)\nusing this:\n  N1 \\<subseteq> N0\n  N2 \\<subseteq> N1\n  N3 \\<subseteq> N2\n\ngoal (1 subgoal):\n 1. N3 \\<subseteq> N0", "by auto"], ["proof (state)\nthis:\n  N3 \\<subseteq> N0\n\ngoal (4 subgoals):\n 1. k = 0 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 4. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  N3 \\<subseteq> N0", "show ?thesis"], ["proof (prove)\nusing this:\n  N3 \\<subseteq> N0\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "using u 0"], ["proof (prove)\nusing this:\n  N3 \\<subseteq> N0\n  form u k\n  scheme u \\<subseteq> N3\n  k = 0\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "apply (auto simp: form_def form_split_def scheme_def simp flip: f0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>N3 \\<subseteq> N0; k = 0; u = {(a, b), (c, d)}; a < b;\n        b < c; c < d; a \\<in> N3; c \\<in> N3; b \\<in> N3;\n        d \\<in> N3\\<rbrakk>\n       \\<Longrightarrow> f0 {a, b, c, d} = j0", "apply (force simp: nsets_def intro: N0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f u = [j0, j1, j2, j3] ! k\n\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "case 1"], ["proof (state)\nthis:\n  k = 1\n\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "have \"N3 \\<subseteq> N1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N3 \\<subseteq> N1", "using \\<open>N2 \\<subseteq> N1\\<close> \\<open>N3 \\<subseteq> N2\\<close>"], ["proof (prove)\nusing this:\n  N2 \\<subseteq> N1\n  N3 \\<subseteq> N2\n\ngoal (1 subgoal):\n 1. N3 \\<subseteq> N1", "by auto"], ["proof (state)\nthis:\n  N3 \\<subseteq> N1\n\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 3. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  N3 \\<subseteq> N1", "show ?thesis"], ["proof (prove)\nusing this:\n  N3 \\<subseteq> N1\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "using u 1"], ["proof (prove)\nusing this:\n  N3 \\<subseteq> N1\n  form u k\n  scheme u \\<subseteq> N3\n  k = 1\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "apply (auto simp: form_def form_split_def scheme_def simp flip: f1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>N3 \\<subseteq> N1; k = Suc 0; u = {(a, b), (c, d)}; a < c;\n        c < b; b < d; a \\<in> N3; c \\<in> N3; b \\<in> N3;\n        d \\<in> N3\\<rbrakk>\n       \\<Longrightarrow> f1 {a, c, b, d} = j1", "apply (force simp: nsets_def intro: N1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f u = [j0, j1, j2, j3] ! k\n\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "case 2"], ["proof (state)\nthis:\n  k = 2\n\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k\n 2. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  k = 2", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 2\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "using u \\<open>N3 \\<subseteq> N2\\<close>"], ["proof (prove)\nusing this:\n  k = 2\n  form u k\n  scheme u \\<subseteq> N3\n  N3 \\<subseteq> N2\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "apply (auto simp: form_def form_split_def scheme_def nsets_def simp flip: f2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       \\<lbrakk>k = 2; N3 \\<subseteq> N2; u = {(a, b), (c, d)}; a < c;\n        c < d; d < b; a \\<in> N3; c \\<in> N3; b \\<in> N3;\n        d \\<in> N3\\<rbrakk>\n       \\<Longrightarrow> f2 {a, c, d, b} = j2", "apply (force simp: nsets_def intro: N2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f u = [j0, j1, j2, j3] ! k\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "case 3"], ["proof (state)\nthis:\n  k = 3\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "{"], ["proof (state)\nthis:\n  k = 3\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "fix a b d"], ["proof (state)\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "assume \"{(a, b), (a, d)} \\<in> [UU]\\<^bsup>2\\<^esup>\"\n          and *: \"a \\<in> N3\" \"b \\<in> N3\" \"d \\<in> N3\" \"b \\<noteq> d\""], ["proof (state)\nthis:\n  {(a, b), (a, d)} \\<in> [UU]\\<^bsup>2\\<^esup>\n  a \\<in> N3\n  b \\<in> N3\n  d \\<in> N3\n  b \\<noteq> d\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  {(a, b), (a, d)} \\<in> [UU]\\<^bsup>2\\<^esup>\n  a \\<in> N3\n  b \\<in> N3\n  d \\<in> N3\n  b \\<noteq> d", "have \"a<b\" \"a<d\""], ["proof (prove)\nusing this:\n  {(a, b), (a, d)} \\<in> [UU]\\<^bsup>2\\<^esup>\n  a \\<in> N3\n  b \\<in> N3\n  d \\<in> N3\n  b \\<noteq> d\n\ngoal (1 subgoal):\n 1. a < b &&& a < d", "by (auto simp: UU_def nsets_def)"], ["proof (state)\nthis:\n  a < b\n  a < d\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  a < b\n  a < d", "have \"f {(a, b), (a, d)} = j3\""], ["proof (prove)\nusing this:\n  a < b\n  a < d\n\ngoal (1 subgoal):\n 1. f {(a, b), (a, d)} = j3", "using *"], ["proof (prove)\nusing this:\n  a < b\n  a < d\n  a \\<in> N3\n  b \\<in> N3\n  d \\<in> N3\n  b \\<noteq> d\n\ngoal (1 subgoal):\n 1. f {(a, b), (a, d)} = j3", "apply (auto simp: neq_iff simp flip: f3 f3')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; a \\<in> N3; b \\<in> N3; d \\<in> N3; b < d\\<rbrakk>\n    \\<Longrightarrow> f3 {a, b, d} = j3\n 2. \\<lbrakk>a < d; a \\<in> N3; b \\<in> N3; d \\<in> N3; d < b\\<rbrakk>\n    \\<Longrightarrow> f3 {a, b, d} = j3", "apply (force simp: nsets_def intro: N3)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f {(a, b), (a, d)} = j3\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "}"], ["proof (state)\nthis:\n  \\<lbrakk>{(?a2, ?b2), (?a2, ?d2)} \\<in> [UU]\\<^bsup>2\\<^esup>;\n   ?a2 \\<in> N3; ?b2 \\<in> N3; ?d2 \\<in> N3; ?b2 \\<noteq> ?d2\\<rbrakk>\n  \\<Longrightarrow> f {(?a2, ?b2), (?a2, ?d2)} = j3\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> f u = [j0, j1, j2, j3] ! k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>{(?a2, ?b2), (?a2, ?d2)} \\<in> [UU]\\<^bsup>2\\<^esup>;\n   ?a2 \\<in> N3; ?b2 \\<in> N3; ?d2 \\<in> N3; ?b2 \\<noteq> ?d2\\<rbrakk>\n  \\<Longrightarrow> f {(?a2, ?b2), (?a2, ?d2)} = j3", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>{(?a2, ?b2), (?a2, ?d2)} \\<in> [UU]\\<^bsup>2\\<^esup>;\n   ?a2 \\<in> N3; ?b2 \\<in> N3; ?d2 \\<in> N3; ?b2 \\<noteq> ?d2\\<rbrakk>\n  \\<Longrightarrow> f {(?a2, ?b2), (?a2, ?d2)} = j3\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "using u UU 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>{(?a2, ?b2), (?a2, ?d2)} \\<in> [UU]\\<^bsup>2\\<^esup>;\n   ?a2 \\<in> N3; ?b2 \\<in> N3; ?d2 \\<in> N3; ?b2 \\<noteq> ?d2\\<rbrakk>\n  \\<Longrightarrow> f {(?a2, ?b2), (?a2, ?d2)} = j3\n  form u k\n  scheme u \\<subseteq> N3\n  u \\<in> [UU]\\<^bsup>2\\<^esup>\n  k = 3\n\ngoal (1 subgoal):\n 1. f u = [j0, j1, j2, j3] ! k", "by (auto simp: form_def form_split_def scheme_def)"], ["proof (state)\nthis:\n  f u = [j0, j1, j2, j3] ! k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f u = [j0, j1, j2, j3] ! k\n\ngoal (1 subgoal):\n 1. infinite N3", "qed (rule \\<open>infinite N3\\<close>)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Lemma 2.4 of Jean A. Larson, ibid.\\<close>"], ["", "lemma lemma_2_4:\n  assumes \"infinite N\" \"k < 4\"\n  obtains M where \"M \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\" \"\\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain f:: \"nat \\<Rightarrow> nat\" where \"bij_betw f UNIV N\" \"strict_mono f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f UNIV N; strict_mono f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  infinite N\n  k < 4\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f UNIV N; strict_mono f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson bij_enumerate enumerate_mono strict_monoI)"], ["proof (state)\nthis:\n  bij_betw f UNIV N\n  strict_mono f\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  bij_betw f UNIV N\n  strict_mono f", "have iff[simp]: \"f x = f y \\<longleftrightarrow> x=y\" \"f x < f y \\<longleftrightarrow> x<y\" for x y"], ["proof (prove)\nusing this:\n  bij_betw f UNIV N\n  strict_mono f\n\ngoal (1 subgoal):\n 1. (f x = f y) = (x = y) &&& (f x < f y) = (x < y)", "by (simp_all add: strict_mono_eq strict_mono_less)"], ["proof (state)\nthis:\n  (f ?x = f ?y) = (?x = ?y)\n  (f ?x < f ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"f x \\<in> N\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> N", "using bij_betw_apply [OF \\<open>bij_betw f UNIV N\\<close>]"], ["proof (prove)\nusing this:\n  ?a \\<in> UNIV \\<Longrightarrow> f ?a \\<in> N\n\ngoal (1 subgoal):\n 1. f x \\<in> N", "by blast"], ["proof (state)\nthis:\n  f ?x \\<in> N\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define M0 where \"M0 = (\\<lambda>i. (f(2*i), f(Suc(2*i)))) ` {..<m}\""], ["proof (state)\nthis:\n  M0 = (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) ` {..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define M1 where \"M1 = (\\<lambda>i. (f i, f(m+i))) ` {..<m}\""], ["proof (state)\nthis:\n  M1 = (\\<lambda>i. (f i, f (m + i))) ` {..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define M2 where \"M2 = (\\<lambda>i. (f i, f(2*m-i))) ` {..<m}\""], ["proof (state)\nthis:\n  M2 = (\\<lambda>i. (f i, f (2 * m - i))) ` {..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define M3 where \"M3 = (\\<lambda>i. (f 0, f (Suc i))) ` {..<m}\""], ["proof (state)\nthis:\n  M3 = (\\<lambda>i. (f 0, f (Suc i))) ` {..<m}\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "consider (0) \"k=0\" | (1) \"k=1\" | (2) \"k=2\" | (3) \"k=3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k = 0 \\<Longrightarrow> thesis; k = 1 \\<Longrightarrow> thesis;\n     k = 2 \\<Longrightarrow> thesis; k = 3 \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  infinite N\n  k < 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k = 0 \\<Longrightarrow> thesis; k = 1 \\<Longrightarrow> thesis;\n     k = 2 \\<Longrightarrow> thesis; k = 3 \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k;\n         \\<And>u.\n            u \\<in> [M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>k = 0 \\<Longrightarrow> ?thesis; k = 1 \\<Longrightarrow> ?thesis;\n   k = 2 \\<Longrightarrow> ?thesis; k = 3 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. k = 0 \\<Longrightarrow> thesis\n 2. k = 1 \\<Longrightarrow> thesis\n 3. k = 2 \\<Longrightarrow> thesis\n 4. k = 3 \\<Longrightarrow> thesis", "case 0"], ["proof (state)\nthis:\n  k = 0\n\ngoal (4 subgoals):\n 1. k = 0 \\<Longrightarrow> thesis\n 2. k = 1 \\<Longrightarrow> thesis\n 3. k = 2 \\<Longrightarrow> thesis\n 4. k = 3 \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "have \"inj_on (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) {..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) {..<m}", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) {..<m}\n\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) {..<m}", "show \"M0 \\<in> [UU]\\<^bsup>m\\<^esup>\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (f (2 * i), f (Suc (2 * i)))) {..<m}\n\ngoal (1 subgoal):\n 1. M0 \\<in> [UU]\\<^bsup>m\\<^esup>", "by (simp add: M0_def nsets_def card_image UU_def image_subset_iff)"], ["proof (state)\nthis:\n  M0 \\<in> [UU]\\<^bsup>m\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "fix u"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "assume u: \"(u::(nat \\<times> nat) set) \\<in> [M0]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  u \\<in> [M0]\\<^bsup>2\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u \\<in> [M0]\\<^bsup>2\\<^esup>", "obtain x y where \"u = {x,y}\" \"x \\<noteq> y\" \"x \\<in> M0\" \"y \\<in> M0\""], ["proof (prove)\nusing this:\n  u \\<in> [M0]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>u = {x, y}; x \\<noteq> y; x \\<in> M0; y \\<in> M0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_2_eq)"], ["proof (state)\nthis:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M0\n  y \\<in> M0\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M0\n  y \\<in> M0", "obtain i j where \"i<j\" \"j<m\" and ueq: \"u = {(f(2*i), f(Suc(2*i))), (f(2*j), f(Suc(2*j)))}\""], ["proof (prove)\nusing this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M0\n  y \\<in> M0\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < m;\n         u =\n         {(f (2 * i), f (Suc (2 * i))),\n          (f (2 * j), f (Suc (2 * j)))}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (clarsimp simp: M0_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f (2 * i), f (Suc (2 * i))),\n                     (f (2 * ia), f (Suc (2 * ia)))} =\n                    {(f (2 * ib), f (Suc (2 * ib))),\n                     (f (2 * j), f (Suc (2 * j)))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f (2 * i), f (Suc (2 * i))), (f (2 * ia), f (Suc (2 * ia)))};\n        x = (f (2 * i), f (Suc (2 * i))); i < m;\n        y = (f (2 * ia), f (Suc (2 * ia))); ia < m; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> i = ia", "apply (metis (full_types) insert_commute less_linear)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  i < j\n  j < m\n  u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))}\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "moreover"], ["proof (state)\nthis:\n  i < j\n  j < m\n  u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))}\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "have \"f (2 * i) \\<le> f (2 * j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * i) \\<le> f (2 * j)", "by (simp add: \\<open>i<j\\<close> less_imp_le_nat)"], ["proof (state)\nthis:\n  f (2 * i) \\<le> f (2 * j)\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "ultimately"], ["proof (chain)\npicking this:\n  i < j\n  j < m\n  u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))}\n  f (2 * i) \\<le> f (2 * j)", "show \"form u k\""], ["proof (prove)\nusing this:\n  i < j\n  j < m\n  u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))}\n  f (2 * i) \\<le> f (2 * j)\n\ngoal (1 subgoal):\n 1. form u k", "apply (simp add: 0 form_def form_split_def nsets_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))};\n     f (2 * i) \\<le> f (2 * j)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b c d.\n                         {(f (2 * i), f (Suc (2 * i))),\n                          (f (2 * j), f (Suc (2 * j)))} =\n                         {(a, b), (c, d)} \\<and>\n                         a \\<le> c \\<and> a < b \\<and> b < c \\<and> c < d", "apply (rule_tac x=\"f (2 * i)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))};\n     f (2 * i) \\<le> f (2 * j)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b c d.\n                         {(f (2 * i), f (Suc (2 * i))),\n                          (f (2 * j), f (Suc (2 * j)))} =\n                         {(f (2 * i), b), (c, d)} \\<and>\n                         f (2 * i) \\<le> c \\<and>\n                         f (2 * i) < b \\<and> b < c \\<and> c < d", "apply (rule_tac x=\"f (Suc (2 * i))\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))};\n     f (2 * i) \\<le> f (2 * j)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c d.\n                         {(f (2 * i), f (Suc (2 * i))),\n                          (f (2 * j), f (Suc (2 * j)))} =\n                         {(f (2 * i), f (Suc (2 * i))), (c, d)} \\<and>\n                         f (2 * i) \\<le> c \\<and>\n                         f (2 * i) < f (Suc (2 * i)) \\<and>\n                         f (Suc (2 * i)) < c \\<and> c < d", "apply (rule_tac x=\"f (2 * j)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))};\n     f (2 * i) \\<le> f (2 * j)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>d.\n                         {(f (2 * i), f (Suc (2 * i))),\n                          (f (2 * j), f (Suc (2 * j)))} =\n                         {(f (2 * i), f (Suc (2 * i))),\n                          (f (2 * j), d)} \\<and>\n                         f (2 * i) \\<le> f (2 * j) \\<and>\n                         f (2 * i) < f (Suc (2 * i)) \\<and>\n                         f (Suc (2 * i)) < f (2 * j) \\<and> f (2 * j) < d", "apply (rule_tac x=\"f (Suc (2 * j))\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))};\n     f (2 * i) \\<le> f (2 * j)\\<rbrakk>\n    \\<Longrightarrow> {(f (2 * i), f (Suc (2 * i))),\n                       (f (2 * j), f (Suc (2 * j)))} =\n                      {(f (2 * i), f (Suc (2 * i))),\n                       (f (2 * j), f (Suc (2 * j)))} \\<and>\n                      f (2 * i) \\<le> f (2 * j) \\<and>\n                      f (2 * i) < f (Suc (2 * i)) \\<and>\n                      f (Suc (2 * i)) < f (2 * j) \\<and>\n                      f (2 * j) < f (Suc (2 * j))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  form u k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "show \"scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "using ueq"], ["proof (prove)\nusing this:\n  u = {(f (2 * i), f (Suc (2 * i))), (f (2 * j), f (Suc (2 * j)))}\n\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "by (auto simp: scheme_def)"], ["proof (state)\nthis:\n  scheme u \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> thesis\n 2. k = 2 \\<Longrightarrow> thesis\n 3. k = 3 \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> thesis\n 2. k = 2 \\<Longrightarrow> thesis\n 3. k = 3 \\<Longrightarrow> thesis", "case 1"], ["proof (state)\nthis:\n  k = 1\n\ngoal (3 subgoals):\n 1. k = 1 \\<Longrightarrow> thesis\n 2. k = 2 \\<Longrightarrow> thesis\n 3. k = 3 \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "have \"inj_on (\\<lambda>i. (f i, f(m+i))) {..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. (f i, f (m + i))) {..<m}", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (f i, f (m + i))) {..<m}\n\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>i. (f i, f (m + i))) {..<m}", "show \"M1 \\<in> [UU]\\<^bsup>m\\<^esup>\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (f i, f (m + i))) {..<m}\n\ngoal (1 subgoal):\n 1. M1 \\<in> [UU]\\<^bsup>m\\<^esup>", "by (simp add: M1_def nsets_def card_image UU_def image_subset_iff)"], ["proof (state)\nthis:\n  M1 \\<in> [UU]\\<^bsup>m\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "fix u"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "assume u: \"(u::(nat \\<times> nat) set) \\<in> [M1]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  u \\<in> [M1]\\<^bsup>2\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u \\<in> [M1]\\<^bsup>2\\<^esup>", "obtain x y where \"u = {x,y}\" \"x \\<noteq> y\" \"x \\<in> M1\" \"y \\<in> M1\""], ["proof (prove)\nusing this:\n  u \\<in> [M1]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>u = {x, y}; x \\<noteq> y; x \\<in> M1; y \\<in> M1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_2_eq)"], ["proof (state)\nthis:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M1\n  y \\<in> M1\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M1\n  y \\<in> M1", "obtain i j where \"i<j\" \"j<m\" and ueq: \"u = {(f i, f(m+i)), (f j, f(m+j))}\""], ["proof (prove)\nusing this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M1\n  y \\<in> M1\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < m;\n         u = {(f i, f (m + i)), (f j, f (m + j))}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (auto simp: M1_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f i, f (m + i)), (f ia, f (m + ia))} =\n                    {(f ib, f (m + ib)), (f j, f (m + j))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f i, f (m + i)), (f ia, f (m + ia))}; x = (f i, f (m + i));\n        i < m; y = (f ia, f (m + ia)); ia < m; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> i = ia\n 2. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f i, f (m + i)), (f ia, f (m + ia))} =\n                    {(f ib, f (m + ib)), (f j, f (m + j))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f i, f (m + i)), (f ia, f (m + ia))}; x = (f i, f (m + i));\n        i < m; y = (f ia, f (m + ia)); ia < m; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> i = ia", "apply (metis (full_types) insert_commute less_linear)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  i < j\n  j < m\n  u = {(f i, f (m + i)), (f j, f (m + j))}\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  i < j\n  j < m\n  u = {(f i, f (m + i)), (f j, f (m + j))}", "show \"form u k\""], ["proof (prove)\nusing this:\n  i < j\n  j < m\n  u = {(f i, f (m + i)), (f j, f (m + j))}\n\ngoal (1 subgoal):\n 1. form u k", "apply (simp add: 1 form_def form_split_def nsets_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m; u = {(f i, f (m + i)), (f j, f (m + j))}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b c d.\n                         {(f i, f (m + i)), (f j, f (m + j))} =\n                         {(a, b), (c, d)} \\<and>\n                         a \\<le> c \\<and> a < c \\<and> c < b \\<and> b < d", "by (metis iff(2) nat_add_left_cancel_less nat_less_le trans_less_add1)"], ["proof (state)\nthis:\n  form u k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "show \"scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "using ueq"], ["proof (prove)\nusing this:\n  u = {(f i, f (m + i)), (f j, f (m + j))}\n\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "by (auto simp: scheme_def)"], ["proof (state)\nthis:\n  scheme u \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> thesis\n 2. k = 3 \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> thesis\n 2. k = 3 \\<Longrightarrow> thesis", "case 2"], ["proof (state)\nthis:\n  k = 2\n\ngoal (2 subgoals):\n 1. k = 2 \\<Longrightarrow> thesis\n 2. k = 3 \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "have \"inj_on (\\<lambda>i. (f i, f(2*m-i))) {..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. (f i, f (2 * m - i))) {..<m}", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (f i, f (2 * m - i))) {..<m}\n\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>i. (f i, f (2 * m - i))) {..<m}", "show \"M2 \\<in> [UU]\\<^bsup>m\\<^esup>\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (f i, f (2 * m - i))) {..<m}\n\ngoal (1 subgoal):\n 1. M2 \\<in> [UU]\\<^bsup>m\\<^esup>", "by (auto simp: M2_def nsets_def card_image UU_def image_subset_iff)"], ["proof (state)\nthis:\n  M2 \\<in> [UU]\\<^bsup>m\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "fix u"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "assume u: \"(u::(nat \\<times> nat) set) \\<in> [M2]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  u \\<in> [M2]\\<^bsup>2\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u \\<in> [M2]\\<^bsup>2\\<^esup>", "obtain x y where \"u = {x,y}\" \"x \\<noteq> y\" \"x \\<in> M2\" \"y \\<in> M2\""], ["proof (prove)\nusing this:\n  u \\<in> [M2]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>u = {x, y}; x \\<noteq> y; x \\<in> M2; y \\<in> M2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_2_eq)"], ["proof (state)\nthis:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M2\n  y \\<in> M2\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M2\n  y \\<in> M2", "obtain i j where \"i<j\" \"j<m\" and ueq: \"u = {(f i, f(2*m-i)), (f j, f(2*m-j))}\""], ["proof (prove)\nusing this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M2\n  y \\<in> M2\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < m;\n         u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (auto simp: M2_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f i, f (2 * m - i)), (f ia, f (2 * m - ia))} =\n                    {(f ib, f (2 * m - ib)), (f j, f (2 * m - j))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f i, f (2 * m - i)), (f ia, f (2 * m - ia))};\n        x = (f i, f (2 * m - i)); i < m; y = (f ia, f (2 * m - ia)); ia < m;\n        \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> i = ia\n 2. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f i, f (2 * m - i)), (f ia, f (2 * m - ia))} =\n                    {(f ib, f (2 * m - ib)), (f j, f (2 * m - j))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f i, f (2 * m - i)), (f ia, f (2 * m - ia))};\n        x = (f i, f (2 * m - i)); i < m; y = (f ia, f (2 * m - ia)); ia < m;\n        \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> 2 * m - i = 2 * m - ia", "apply (metis (full_types) insert_commute less_linear)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  i < j\n  j < m\n  u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  i < j\n  j < m\n  u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}", "show \"form u k\""], ["proof (prove)\nusing this:\n  i < j\n  j < m\n  u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\n\ngoal (1 subgoal):\n 1. form u k", "apply (simp add: 2 form_def form_split_def nsets_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b c d.\n                         {(f i, f (2 * m - i)), (f j, f (2 * m - j))} =\n                         {(a, b), (c, d)} \\<and>\n                         a \\<le> c \\<and> a < c \\<and> c < d \\<and> d < b", "apply (rule_tac x=\"f i\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b c d.\n                         {(f i, f (2 * m - i)), (f j, f (2 * m - j))} =\n                         {(f i, b), (c, d)} \\<and>\n                         f i \\<le> c \\<and>\n                         f i < c \\<and> c < d \\<and> d < b", "apply (rule_tac x=\"f (2 * m - i)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c d.\n                         {(f i, f (2 * m - i)), (f j, f (2 * m - j))} =\n                         {(f i, f (2 * m - i)), (c, d)} \\<and>\n                         f i \\<le> c \\<and>\n                         f i < c \\<and> c < d \\<and> d < f (2 * m - i)", "apply (rule_tac x=\"f j\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>d.\n                         {(f i, f (2 * m - i)), (f j, f (2 * m - j))} =\n                         {(f i, f (2 * m - i)), (f j, d)} \\<and>\n                         f i \\<le> f j \\<and>\n                         f i < f j \\<and> f j < d \\<and> d < f (2 * m - i)", "apply (rule_tac x=\"f (2 * m - j)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; j < m;\n     u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\\<rbrakk>\n    \\<Longrightarrow> {(f i, f (2 * m - i)), (f j, f (2 * m - j))} =\n                      {(f i, f (2 * m - i)), (f j, f (2 * m - j))} \\<and>\n                      f i \\<le> f j \\<and>\n                      f i < f j \\<and>\n                      f j < f (2 * m - j) \\<and>\n                      f (2 * m - j) < f (2 * m - i)", "apply (auto simp: less_imp_le_nat)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  form u k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "show \"scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "using ueq"], ["proof (prove)\nusing this:\n  u = {(f i, f (2 * m - i)), (f j, f (2 * m - j))}\n\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "by (auto simp: scheme_def)"], ["proof (state)\nthis:\n  scheme u \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> thesis", "case 3"], ["proof (state)\nthis:\n  k = 3\n\ngoal (1 subgoal):\n 1. k = 3 \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "have \"inj_on (\\<lambda>i. (f 0, f (Suc i))) {..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. (f 0, f (Suc i))) {..<m}", "by (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (f 0, f (Suc i))) {..<m}\n\ngoal (3 subgoals):\n 1. ?M \\<in> [UU]\\<^bsup>m\\<^esup>\n 2. \\<And>u. u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 3. \\<And>u.\n       u \\<in> [?M]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>i. (f 0, f (Suc i))) {..<m}", "show \"M3 \\<in> [UU]\\<^bsup>m\\<^esup>\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (f 0, f (Suc i))) {..<m}\n\ngoal (1 subgoal):\n 1. M3 \\<in> [UU]\\<^bsup>m\\<^esup>", "by (auto simp: M3_def nsets_def card_image UU_def image_subset_iff)"], ["proof (state)\nthis:\n  M3 \\<in> [UU]\\<^bsup>m\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "fix u"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "assume u: \"(u::(nat \\<times> nat) set) \\<in> [M3]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  u \\<in> [M3]\\<^bsup>2\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u \\<in> [M3]\\<^bsup>2\\<^esup>", "obtain x y where \"u = {x,y}\" \"x \\<noteq> y\" \"x \\<in> M3\" \"y \\<in> M3\""], ["proof (prove)\nusing this:\n  u \\<in> [M3]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>u = {x, y}; x \\<noteq> y; x \\<in> M3; y \\<in> M3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: nsets_2_eq)"], ["proof (state)\nthis:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M3\n  y \\<in> M3\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M3\n  y \\<in> M3", "obtain i j where \"i<j\" \"j<m\" and ueq: \"u = {(f 0, f(Suc i)), (f 0, f(Suc j))}\""], ["proof (prove)\nusing this:\n  u = {x, y}\n  x \\<noteq> y\n  x \\<in> M3\n  y \\<in> M3\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j; j < m;\n         u = {(f 0, f (Suc i)), (f 0, f (Suc j))}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (auto simp: M3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>\\<And>ib j.\n                   \\<lbrakk>ib < j; j < m;\n                    {(f 0, f (Suc i)), (f 0, f (Suc ia))} =\n                    {(f 0, f (Suc ib)), (f 0, f (Suc j))}\\<rbrakk>\n                   \\<Longrightarrow> False;\n        u = {(f 0, f (Suc i)), (f 0, f (Suc ia))}; x = (f 0, f (Suc i));\n        i < m; y = (f 0, f (Suc ia)); ia < m; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> i = ia", "apply (metis (full_types) insert_commute less_linear)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  i < j\n  j < m\n  u = {(f 0, f (Suc i)), (f 0, f (Suc j))}\n\ngoal (2 subgoals):\n 1. \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u k\n 2. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  i < j\n  j < m\n  u = {(f 0, f (Suc i)), (f 0, f (Suc j))}", "show \"form u k\""], ["proof (prove)\nusing this:\n  i < j\n  j < m\n  u = {(f 0, f (Suc i)), (f 0, f (Suc j))}\n\ngoal (1 subgoal):\n 1. form u k", "by (fastforce simp: 3 form_def form_split_def nsets_def)"], ["proof (state)\nthis:\n  form u k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       scheme u \\<subseteq> N", "show \"scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "using ueq"], ["proof (prove)\nusing this:\n  u = {(f 0, f (Suc i)), (f 0, f (Suc j))}\n\ngoal (1 subgoal):\n 1. scheme u \\<subseteq> N", "by (auto simp: scheme_def)"], ["proof (state)\nthis:\n  scheme u \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Lemma 2.5 of Jean A. Larson, ibid.\\<close>"], ["", "lemma lemma_2_5:\n  assumes \"infinite N\"\n  obtains X where \"X \\<subseteq> UU\" \"ordertype X pair_less = \\<omega>\\<up>2\"\n            \"\\<And>u. u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain C\n    where dis: \"pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV\"\n      and N: \"(\\<Union>i. C i) \\<subseteq> N\" and infC: \"\\<And>i::nat. infinite (C i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV;\n         \\<Union> (range C) \\<subseteq> N; \\<And>i. infinite (C i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms infinite_infinite_partition"], ["proof (prove)\nusing this:\n  infinite N\n  \\<lbrakk>infinite ?A;\n   \\<And>C.\n      \\<lbrakk>pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV;\n       \\<Union> (range C) \\<subseteq> ?A; \\<And>i. infinite (C i)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV;\n         \\<Union> (range C) \\<subseteq> N; \\<And>i. infinite (C i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV\n  \\<Union> (range C) \\<subseteq> N\n  infinite (C ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV\n  \\<Union> (range C) \\<subseteq> N\n  infinite (C ?i)", "have \"\\<exists>\\<phi>::nat \\<Rightarrow> nat. inj \\<phi> \\<and> range \\<phi> = C i \\<and> strict_mono \\<phi>\" for i"], ["proof (prove)\nusing this:\n  pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV\n  \\<Union> (range C) \\<subseteq> N\n  infinite (C ?i)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       inj \\<phi> \\<and> range \\<phi> = C i \\<and> strict_mono \\<phi>", "by (metis bij_betw_imp_inj_on bij_betw_imp_surj_on bij_enumerate enumerate_mono infC strict_mono_def)"], ["proof (state)\nthis:\n  \\<exists>\\<phi>.\n     inj \\<phi> \\<and> range \\<phi> = C ?i \\<and> strict_mono \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<phi>.\n     inj \\<phi> \\<and> range \\<phi> = C ?i \\<and> strict_mono \\<phi>", "obtain \\<phi>:: \"[nat,nat] \\<Rightarrow> nat\"\n      where \\<phi>: \"\\<And>i. inj (\\<phi> i) \\<and> range (\\<phi> i) = C i \\<and> strict_mono (\\<phi> i)\""], ["proof (prove)\nusing this:\n  \\<exists>\\<phi>.\n     inj \\<phi> \\<and> range \\<phi> = C ?i \\<and> strict_mono \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<phi>.\n        (\\<And>i.\n            inj (\\<phi> i) \\<and>\n            range (\\<phi> i) = C i \\<and>\n            strict_mono (\\<phi> i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  inj (\\<phi> ?i) \\<and>\n  range (\\<phi> ?i) = C ?i \\<and> strict_mono (\\<phi> ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  inj (\\<phi> ?i) \\<and>\n  range (\\<phi> ?i) = C ?i \\<and> strict_mono (\\<phi> ?i)", "have \\<pi>_in_C [simp]: \"\\<phi> i j \\<in> C i' \\<longleftrightarrow> i'=i\" for i i' j"], ["proof (prove)\nusing this:\n  inj (\\<phi> ?i) \\<and>\n  range (\\<phi> ?i) = C ?i \\<and> strict_mono (\\<phi> ?i)\n\ngoal (1 subgoal):\n 1. (\\<phi> i j \\<in> C i') = (i' = i)", "using dis"], ["proof (prove)\nusing this:\n  inj (\\<phi> ?i) \\<and>\n  range (\\<phi> ?i) = C ?i \\<and> strict_mono (\\<phi> ?i)\n  pairwise (\\<lambda>i j. disjnt (C i) (C j)) UNIV\n\ngoal (1 subgoal):\n 1. (\\<phi> i j \\<in> C i') = (i' = i)", "by (fastforce simp: pairwise_def disjnt_def)"], ["proof (state)\nthis:\n  (\\<phi> ?i ?j \\<in> C ?i') = (?i' = ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have less_iff [simp]: \"\\<phi> i j' < \\<phi> i j \\<longleftrightarrow> j' < j\" for i j' j"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<phi> i j' < \\<phi> i j) = (j' < j)", "by (simp add: \\<phi> strict_mono_less)"], ["proof (state)\nthis:\n  (\\<phi> ?i ?j' < \\<phi> ?i ?j) = (?j' < ?j)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?a = \"\\<phi> 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define X where \"X \\<equiv> {(?a i, b) | i b. ?a i < b \\<and> b \\<in> C (Suc i)}\""], ["proof (state)\nthis:\n  X \\<equiv> {(\\<phi> 0 i, b) |i b. \\<phi> 0 i < b \\<and> b \\<in> C (Suc i)}\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?X \\<subseteq> UU\n 2. ordertype ?X pair_less = \\<omega> \\<up> ord_of_nat 2\n 3. \\<And>u.\n       u \\<in> [?X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "show \"X \\<subseteq> UU\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> UU", "by (auto simp: X_def UU_def)"], ["proof (state)\nthis:\n  X \\<subseteq> UU\n\ngoal (2 subgoals):\n 1. ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n 2. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "show \"ordertype X pair_less = \\<omega>\\<up>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. ordertype X pair_less \\<le> \\<omega> \\<up> ord_of_nat 2\n 2. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "have \"ordertype X pair_less \\<le> ordertype UU pair_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype X pair_less \\<le> ordertype UU pair_less", "by (simp add: \\<open>X \\<subseteq> UU\\<close> ordertype_mono)"], ["proof (state)\nthis:\n  ordertype X pair_less \\<le> ordertype UU pair_less\n\ngoal (2 subgoals):\n 1. ordertype X pair_less \\<le> \\<omega> \\<up> ord_of_nat 2\n 2. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "then"], ["proof (chain)\npicking this:\n  ordertype X pair_less \\<le> ordertype UU pair_less", "show \"ordertype X pair_less \\<le> \\<omega>\\<up>2\""], ["proof (prove)\nusing this:\n  ordertype X pair_less \\<le> ordertype UU pair_less\n\ngoal (1 subgoal):\n 1. ordertype X pair_less \\<le> \\<omega> \\<up> ord_of_nat 2", "using ordertype_UU_\\<omega>2"], ["proof (prove)\nusing this:\n  ordertype X pair_less \\<le> ordertype UU pair_less\n  ordertype UU pair_less = \\<omega> \\<up> ord_of_nat 2\n\ngoal (1 subgoal):\n 1. ordertype X pair_less \\<le> \\<omega> \\<up> ord_of_nat 2", "by auto"], ["proof (state)\nthis:\n  ordertype X pair_less \\<le> \\<omega> \\<up> ord_of_nat 2\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "define \\<pi> where \"\\<pi> \\<equiv> \\<lambda>(i,j::nat). (?a i, \\<phi> (Suc i) (?a j))\""], ["proof (state)\nthis:\n  \\<pi> \\<equiv> \\<lambda>(i, j). (\\<phi> 0 i, \\<phi> (Suc i) (\\<phi> 0 j))\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "have \"\\<And>i j. i < j \\<Longrightarrow> \\<phi> 0 i < \\<phi> (Suc i) (\\<phi> 0 j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       i < j \\<Longrightarrow> \\<phi> 0 i < \\<phi> (Suc i) (\\<phi> 0 j)", "by (meson \\<phi> le_less_trans less_iff strict_mono_imp_increasing)"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> \\<phi> 0 ?i < \\<phi> (Suc ?i) (\\<phi> 0 ?j)\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "then"], ["proof (chain)\npicking this:\n  ?i < ?j \\<Longrightarrow> \\<phi> 0 ?i < \\<phi> (Suc ?i) (\\<phi> 0 ?j)", "have subX: \"\\<pi> ` UU \\<subseteq> X\""], ["proof (prove)\nusing this:\n  ?i < ?j \\<Longrightarrow> \\<phi> 0 ?i < \\<phi> (Suc ?i) (\\<phi> 0 ?j)\n\ngoal (1 subgoal):\n 1. \\<pi> ` UU \\<subseteq> X", "by (auto simp: UU_def \\<pi>_def X_def)"], ["proof (state)\nthis:\n  \\<pi> ` UU \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "then"], ["proof (chain)\npicking this:\n  \\<pi> ` UU \\<subseteq> X", "have \"ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\""], ["proof (prove)\nusing this:\n  \\<pi> ` UU \\<subseteq> X\n\ngoal (1 subgoal):\n 1. ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less", "by (simp add: ordertype_mono)"], ["proof (state)\nthis:\n  ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "moreover"], ["proof (state)\nthis:\n  ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "have \"ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less", "proof (rule ordertype_inc_eq)"], ["proof (state)\ngoal (5 subgoals):\n 1. small UU\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> UU; y \\<in> UU; (x, y) \\<in> pair_less\\<rbrakk>\n       \\<Longrightarrow> (\\<pi> x, \\<pi> y) \\<in> pair_less\n 3. wf pair_less\n 4. total_on UU pair_less\n 5. wf pair_less", "show \"(\\<pi> x, \\<pi> y) \\<in> pair_less\"\n          if \"x \\<in> UU\" \"y \\<in> UU\" and \"(x, y) \\<in> pair_less\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> x, \\<pi> y) \\<in> pair_less", "using that"], ["proof (prove)\nusing this:\n  x \\<in> UU\n  y \\<in> UU\n  (x, y) \\<in> pair_less\n\ngoal (1 subgoal):\n 1. (\\<pi> x, \\<pi> y) \\<in> pair_less", "by (auto simp: UU_def \\<pi>_def pair_less_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> UU; ?y \\<in> UU; (?x, ?y) \\<in> pair_less\\<rbrakk>\n  \\<Longrightarrow> (\\<pi> ?x, \\<pi> ?y) \\<in> pair_less\n\ngoal (4 subgoals):\n 1. small UU\n 2. wf pair_less\n 3. total_on UU pair_less\n 4. wf pair_less", "qed auto"], ["proof (state)\nthis:\n  ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "ultimately"], ["proof (chain)\npicking this:\n  ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\n  ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less", "show \"\\<omega>\\<up>2 \\<le> ordertype X pair_less\""], ["proof (prove)\nusing this:\n  ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\n  ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "using ordertype_UU_\\<omega>2"], ["proof (prove)\nusing this:\n  ordertype (\\<pi> ` UU) pair_less \\<le> ordertype X pair_less\n  ordertype (\\<pi> ` UU) pair_less = ordertype UU pair_less\n  ordertype UU pair_less = \\<omega> \\<up> ord_of_nat 2\n\ngoal (1 subgoal):\n 1. \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less", "by simp"], ["proof (state)\nthis:\n  \\<omega> \\<up> ord_of_nat 2 \\<le> ordertype X pair_less\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "assume \"U \\<in> [X]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  U \\<in> [X]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "then"], ["proof (chain)\npicking this:\n  U \\<in> [X]\\<^bsup>2\\<^esup>", "obtain a b c d where Ueq: \"U = {(a,b),(c,d)}\" and ne: \"(a,b) \\<noteq> (c,d)\" and inX: \"(a,b) \\<in> X\" \"(c,d) \\<in> X\" and \"a \\<le> c\""], ["proof (prove)\nusing this:\n  U \\<in> [X]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>U = {(a, b), (c, d)}; (a, b) \\<noteq> (c, d);\n         (a, b) \\<in> X; (c, d) \\<in> X; a \\<le> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (auto simp: nsets_def subset_iff eval_nat_numeral card_Suc_eq Set.doubleton_eq_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<And>ab bb c d.\n                   \\<lbrakk>a = ab \\<and>\n                            b = bb \\<and> aa = c \\<and> ba = d \\<or>\n                            a = c \\<and>\n                            b = d \\<and> aa = ab \\<and> ba = bb;\n                    ab = c \\<longrightarrow> bb \\<noteq> d;\n                    ab \\<le> c\\<rbrakk>\n                   \\<Longrightarrow> False;\n        \\<forall>ab bb.\n           (ab = a \\<and> bb = b \\<longrightarrow> (a, b) \\<in> X) \\<and>\n           (ab = aa \\<and> bb = ba \\<longrightarrow> (aa, ba) \\<in> X);\n        U = {(a, b), (aa, ba)}; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<And>ab bb c d.\n                   \\<lbrakk>a = ab \\<and>\n                            b = bb \\<and> aa = c \\<and> ba = d \\<or>\n                            a = c \\<and>\n                            b = d \\<and> aa = ab \\<and> ba = bb;\n                    ab = c \\<longrightarrow> bb \\<noteq> d;\n                    ab \\<le> c\\<rbrakk>\n                   \\<Longrightarrow> False;\n        \\<forall>ab bb.\n           (ab = a \\<and> bb = b \\<longrightarrow> (a, b) \\<in> X) \\<and>\n           (ab = aa \\<and> bb = ba \\<longrightarrow> (aa, ba) \\<in> X);\n        U = {(a, b), (aa, ba)}; \\<not> thesis\\<rbrakk>\n       \\<Longrightarrow> b = ba", "apply (metis  nat_le_linear)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  U = {(a, b), (c, d)}\n  (a, b) \\<noteq> (c, d)\n  (a, b) \\<in> X\n  (c, d) \\<in> X\n  a \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n       (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N", "show \"(\\<exists>k<4. form U k) \\<and> scheme U \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k<4. form U k) \\<and> scheme U \\<subseteq> N", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k<4. form U k\n 2. scheme U \\<subseteq> N", "show \"scheme U \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. scheme U \\<subseteq> N", "using inX N \\<phi>"], ["proof (prove)\nusing this:\n  (a, b) \\<in> X\n  (c, d) \\<in> X\n  \\<Union> (range C) \\<subseteq> N\n  inj (\\<phi> ?i) \\<and>\n  range (\\<phi> ?i) = C ?i \\<and> strict_mono (\\<phi> ?i)\n\ngoal (1 subgoal):\n 1. scheme U \\<subseteq> N", "by (fastforce simp: scheme_def Ueq X_def)"], ["proof (state)\nthis:\n  scheme U \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "consider \"a < c\" | \"a = c \\<and> b \\<noteq> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < c \\<Longrightarrow> thesis;\n     a = c \\<and> b \\<noteq> d \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \\<open>a \\<le> c\\<close> ne nat_less_le"], ["proof (prove)\nusing this:\n  a \\<le> c\n  (a, b) \\<noteq> (c, d)\n  (?m < ?n) = (?m \\<le> ?n \\<and> ?m \\<noteq> ?n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < c \\<Longrightarrow> thesis;\n     a = c \\<and> b \\<noteq> d \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>a < c \\<Longrightarrow> ?thesis;\n   a = c \\<and> b \\<noteq> d \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a < c \\<Longrightarrow> ?thesis;\n   a = c \\<and> b \\<noteq> d \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<exists>k<4. form U k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a < c \\<Longrightarrow> ?thesis;\n   a = c \\<and> b \\<noteq> d \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "case 1"], ["proof (state)\nthis:\n  a < c\n\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "have *: \"a < b\"  \"b \\<noteq> c\" \"c < d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b &&& b \\<noteq> c &&& c < d", "using inX"], ["proof (prove)\nusing this:\n  (a, b) \\<in> X\n  (c, d) \\<in> X\n\ngoal (1 subgoal):\n 1. a < b &&& b \\<noteq> c &&& c < d", "by (auto simp: X_def)"], ["proof (state)\nthis:\n  a < b\n  b \\<noteq> c\n  c < d\n\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "moreover"], ["proof (state)\nthis:\n  a < b\n  b \\<noteq> c\n  c < d\n\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "have \"\\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d", "using inX"], ["proof (prove)\nusing this:\n  (a, b) \\<in> X\n  (c, d) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d", "apply (clarsimp simp: X_def not_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i ia.\n       \\<lbrakk>i < ia; \\<phi> 0 ia < b; b \\<le> d; a = \\<phi> 0 i;\n        c = \\<phi> 0 ia; \\<phi> 0 i < b; b \\<in> C (Suc i);\n        d \\<in> C (Suc ia)\\<rbrakk>\n       \\<Longrightarrow> b < d", "by (metis \\<phi> \\<pi>_in_C imageE nat.inject nat_less_le)"], ["proof (state)\nthis:\n  \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d\n\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "ultimately"], ["proof (chain)\npicking this:\n  a < b\n  b \\<noteq> c\n  c < d\n  \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d", "consider (k0) \"a<b \\<and> b<c \\<and> c<d\" | (k1) \"a<c \\<and> c<b \\<and> b<d\" | (k2) \"a<c \\<and> c<d \\<and> d<b\""], ["proof (prove)\nusing this:\n  a < b\n  b \\<noteq> c\n  c < d\n  \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> thesis;\n     a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> thesis;\n     a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using 1 less_linear"], ["proof (prove)\nusing this:\n  a < b\n  b \\<noteq> c\n  c < d\n  \\<lbrakk>a < c; c < b; \\<not> d < b\\<rbrakk> \\<Longrightarrow> b < d\n  a < c\n  ?x < ?y \\<or> ?x = ?y \\<or> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> thesis;\n     a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> thesis;\n     a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. a < c \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> ?thesis;\n   a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 3. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "case k0"], ["proof (state)\nthis:\n  a < b \\<and> b < c \\<and> c < d\n\ngoal (3 subgoals):\n 1. a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 3. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  a < b \\<and> b < c \\<and> c < d", "have \"form U 0\""], ["proof (prove)\nusing this:\n  a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. form U 0", "unfolding form_def form_split_def"], ["proof (prove)\nusing this:\n  a < b \\<and> b < c \\<and> c < d\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (0 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        0 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        0 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        0 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "using Ueq \\<open>a \\<le> c\\<close>"], ["proof (prove)\nusing this:\n  a < b \\<and> b < c \\<and> c < d\n  U = {(a, b), (c, d)}\n  a \\<le> c\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (0 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        0 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        0 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        0 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "by blast"], ["proof (state)\nthis:\n  form U 0\n\ngoal (3 subgoals):\n 1. a < b \\<and> b < c \\<and> c < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 3. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  form U 0", "show ?thesis"], ["proof (prove)\nusing this:\n  form U 0\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "by force"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal (2 subgoals):\n 1. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "case k1"], ["proof (state)\nthis:\n  a < c \\<and> c < b \\<and> b < d\n\ngoal (2 subgoals):\n 1. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  a < c \\<and> c < b \\<and> b < d", "have \"form U 1\""], ["proof (prove)\nusing this:\n  a < c \\<and> c < b \\<and> b < d\n\ngoal (1 subgoal):\n 1. form U 1", "unfolding form_def form_split_def"], ["proof (prove)\nusing this:\n  a < c \\<and> c < b \\<and> b < d\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (1 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        1 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        1 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        1 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "using Ueq \\<open>a \\<le> c\\<close>"], ["proof (prove)\nusing this:\n  a < c \\<and> c < b \\<and> b < d\n  U = {(a, b), (c, d)}\n  a \\<le> c\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (1 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        1 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        1 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        1 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "by blast"], ["proof (state)\nthis:\n  form U 1\n\ngoal (2 subgoals):\n 1. a < c \\<and> c < b \\<and> b < d \\<Longrightarrow> \\<exists>k<4. form U k\n 2. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  form U 1", "show ?thesis"], ["proof (prove)\nusing this:\n  form U 1\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "by force"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal (1 subgoal):\n 1. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "case k2"], ["proof (state)\nthis:\n  a < c \\<and> c < d \\<and> d < b\n\ngoal (1 subgoal):\n 1. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  a < c \\<and> c < d \\<and> d < b", "have \"form U 2\""], ["proof (prove)\nusing this:\n  a < c \\<and> c < d \\<and> d < b\n\ngoal (1 subgoal):\n 1. form U 2", "unfolding form_def form_split_def"], ["proof (prove)\nusing this:\n  a < c \\<and> c < d \\<and> d < b\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (2 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        2 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        2 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        2 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "using Ueq \\<open>a \\<le> c\\<close>"], ["proof (prove)\nusing this:\n  a < c \\<and> c < d \\<and> d < b\n  U = {(a, b), (c, d)}\n  a \\<le> c\n\ngoal (1 subgoal):\n 1. \\<exists>a b c d.\n       U = {(a, b), (c, d)} \\<and>\n       a \\<le> c \\<and>\n       (2 = 0 \\<and> a < b \\<and> b < c \\<and> c < d \\<or>\n        2 = 1 \\<and> a < c \\<and> c < b \\<and> b < d \\<or>\n        2 = 2 \\<and> a < c \\<and> c < d \\<and> d < b \\<or>\n        2 = 3 \\<and> a = c \\<and> b \\<noteq> d)", "by blast"], ["proof (state)\nthis:\n  form U 2\n\ngoal (1 subgoal):\n 1. a < c \\<and> c < d \\<and> d < b \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  form U 2", "show ?thesis"], ["proof (prove)\nusing this:\n  form U 2\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "by force"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal (1 subgoal):\n 1. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "case 2"], ["proof (state)\nthis:\n  a = c \\<and> b \\<noteq> d\n\ngoal (1 subgoal):\n 1. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  a = c \\<and> b \\<noteq> d", "have \"form_split a b c d 3\""], ["proof (prove)\nusing this:\n  a = c \\<and> b \\<noteq> d\n\ngoal (1 subgoal):\n 1. form_split a b c d 3", "by (auto simp: form_split_def)"], ["proof (state)\nthis:\n  form_split a b c d 3\n\ngoal (1 subgoal):\n 1. a = c \\<and> b \\<noteq> d \\<Longrightarrow> \\<exists>k<4. form U k", "then"], ["proof (chain)\npicking this:\n  form_split a b c d 3", "show ?thesis"], ["proof (prove)\nusing this:\n  form_split a b c d 3\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "using Ueq form_def leI"], ["proof (prove)\nusing this:\n  form_split a b c d 3\n  U = {(a, b), (c, d)}\n  form ?u ?i \\<equiv>\n  \\<exists>a b c d. ?u = {(a, b), (c, d)} \\<and> form_split a b c d ?i\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<exists>k<4. form U k", "by force"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k<4. form U k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>k<4. form U k) \\<and> scheme U \\<subseteq> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 2.1 of Jean A. Larson, ibid.\\<close>"], ["", "lemma Specker_aux:\n  assumes \"\\<alpha> \\<in> elts \\<omega>\"\n  shows \"partn_lst pair_less UU [\\<omega>\\<up>2,\\<alpha>] 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partitions.partn_lst pair_less UU\n     [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] 2", "unfolding partn_lst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>[UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n                   {..<length [\\<omega> \\<up> ord_of_nat 2, \\<alpha>]}.\n       \\<exists>i<length [\\<omega> \\<up> ord_of_nat 2, \\<alpha>].\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "assume f: \"f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\""], ["proof (state)\nthis:\n  f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "let ?P0 = \"\\<exists>X \\<subseteq> UU. ordertype X pair_less = \\<omega>\\<up>2 \\<and> f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "let ?P1 = \"\\<exists>M \\<subseteq> UU. ordertype M pair_less = \\<alpha> \\<and> f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "have \\<dagger>: \"?P0 \\<or> ?P1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>X\\<subseteq>UU.\n        ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n        f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}) \\<or>\n    (\\<exists>M\\<subseteq>UU.\n        ordertype M pair_less = \\<alpha> \\<and>\n        f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})", "proof (rule disjCI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "assume \"\\<not> ?P1\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>M\\<subseteq>UU.\n             ordertype M pair_less = \\<alpha> \\<and>\n             f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>M\\<subseteq>UU.\n             ordertype M pair_less = \\<alpha> \\<and>\n             f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})", "have not1: \"\\<And>M. \\<lbrakk>M \\<subseteq> UU; ordertype M pair_less = \\<alpha>\\<rbrakk> \\<Longrightarrow> \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>. f x \\<noteq> Suc 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>M\\<subseteq>UU.\n             ordertype M pair_less = \\<alpha> \\<and>\n             f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<lbrakk>M \\<subseteq> UU; ordertype M pair_less = \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>.\n                            f x \\<noteq> Suc 0", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?M \\<subseteq> UU; ordertype ?M pair_less = \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>[?M]\\<^bsup>2\\<^esup>. f x \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain m where m: \"\\<alpha> = ord_of_nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<alpha> = ord_of_nat m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms elts_\\<omega>"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> elts \\<omega>\n  elts \\<omega> = {\\<alpha>. \\<exists>n. \\<alpha> = ord_of_nat n}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<alpha> = ord_of_nat m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha> = ord_of_nat m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "then"], ["proof (chain)\npicking this:\n  \\<alpha> = ord_of_nat m", "have f_eq_0: \"M \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow> \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>. f x = 0\" for M"], ["proof (prove)\nusing this:\n  \\<alpha> = ord_of_nat m\n\ngoal (1 subgoal):\n 1. M \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n    \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>. f x = 0", "using not1 [of M] finite_ordertype_eq_card [of M pair_less m] f"], ["proof (prove)\nusing this:\n  \\<alpha> = ord_of_nat m\n  \\<lbrakk>M \\<subseteq> UU; ordertype M pair_less = \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>. f x \\<noteq> Suc 0\n  \\<lbrakk>small M; wf pair_less; trans pair_less;\n   total_on M pair_less\\<rbrakk>\n  \\<Longrightarrow> (ordertype M pair_less = ord_of_nat m) =\n                    (finite M \\<and> card M = m)\n  f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n\ngoal (1 subgoal):\n 1. M \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n    \\<exists>x\\<in>[M]\\<^bsup>2\\<^esup>. f x = 0", "apply (clarsimp simp: nsets_def eval_nat_numeral Pi_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<alpha> = ord_of_nat (card M);\n        ordertype M pair_less = ord_of_nat (card M);\n        \\<forall>x.\n           x \\<subseteq> UU \\<and>\n           finite x \\<and> card x = Suc (Suc 0) \\<longrightarrow>\n           f x < Suc (Suc 0);\n        M \\<subseteq> UU; x \\<subseteq> M; finite M; m = card M; finite x;\n        card x = Suc (Suc 0); f x \\<noteq> Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<subseteq>M.\n                            finite x \\<and>\n                            card x = Suc (Suc 0) \\<and> f x = 0", "by (meson less_Suc0 not_less_less_Suc_eq subset_trans)"], ["proof (state)\nthis:\n  ?M \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n  \\<exists>x\\<in>[?M]\\<^bsup>2\\<^esup>. f x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain N js where \"infinite N\" and N: \"\\<And>k u. \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k; scheme u \\<subseteq> N\\<rbrakk> \\<Longrightarrow> f u = js!k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f lemma_2_3"], ["proof (prove)\nusing this:\n  f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)}\n  \\<lbrakk>?f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow> {..<Suc (Suc 0)};\n   \\<And>N js.\n      \\<lbrakk>infinite N;\n       \\<And>k u.\n          \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n           scheme u \\<subseteq> N\\<rbrakk>\n          \\<Longrightarrow> ?f u = js ! k\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>N js.\n        \\<lbrakk>infinite N;\n         \\<And>k u.\n            \\<lbrakk>k < 4; u \\<in> [UU]\\<^bsup>2\\<^esup>; form u k;\n             scheme u \\<subseteq> N\\<rbrakk>\n            \\<Longrightarrow> f u = js ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  infinite N\n  \\<lbrakk>?k < 4; ?u \\<in> [UU]\\<^bsup>2\\<^esup>; form ?u ?k;\n   scheme ?u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f ?u = js ! ?k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain M0 where M0: \"M0 \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 0\" \"\\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M0.\n        \\<lbrakk>M0 \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 0;\n         \\<And>u.\n            u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule lemma_2_4 [OF \\<open>infinite N\\<close>]) auto"], ["proof (state)\nthis:\n  M0 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 0\n  ?u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain M1 where M1: \"M1 \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 1\" \"\\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M1.\n        \\<lbrakk>M1 \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 1;\n         \\<And>u.\n            u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule lemma_2_4 [OF \\<open>infinite N\\<close>]) auto"], ["proof (state)\nthis:\n  M1 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 1\n  ?u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain M2 where M2: \"M2 \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 2\" \"\\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M2.\n        \\<lbrakk>M2 \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 2;\n         \\<And>u.\n            u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule lemma_2_4 [OF \\<open>infinite N\\<close>]) auto"], ["proof (state)\nthis:\n  M2 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 2\n  ?u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain M3 where M3: \"M3 \\<in> [UU]\\<^bsup>m\\<^esup>\" \"\\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 3\" \"\\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M3.\n        \\<lbrakk>M3 \\<in> [UU]\\<^bsup>m\\<^esup>;\n         \\<And>u. u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form u 3;\n         \\<And>u.\n            u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule lemma_2_4 [OF \\<open>infinite N\\<close>]) auto"], ["proof (state)\nthis:\n  M3 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 3\n  ?u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "have \"js!0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. js ! 0 = 0", "using N [of 0 ] M0 f_eq_0 [of M0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 4; ?u \\<in> [UU]\\<^bsup>2\\<^esup>; form ?u 0;\n   scheme ?u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f ?u = js ! 0\n  M0 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 0\n  ?u \\<in> [M0]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n  M0 \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n  \\<exists>x\\<in>[M0]\\<^bsup>2\\<^esup>. f x = 0\n\ngoal (1 subgoal):\n 1. js ! 0 = 0", "by (force simp: nsets_def eval_nat_numeral)"], ["proof (state)\nthis:\n  js ! 0 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "moreover"], ["proof (state)\nthis:\n  js ! 0 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "have \"js!1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. js ! 1 = 0", "using N [of 1] M1 f_eq_0 [of M1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < 4; ?u \\<in> [UU]\\<^bsup>2\\<^esup>; form ?u 1;\n   scheme ?u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f ?u = js ! 1\n  M1 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 1\n  ?u \\<in> [M1]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n  M1 \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n  \\<exists>x\\<in>[M1]\\<^bsup>2\\<^esup>. f x = 0\n\ngoal (1 subgoal):\n 1. js ! 1 = 0", "by (force simp: nsets_def eval_nat_numeral)"], ["proof (state)\nthis:\n  js ! 1 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "moreover"], ["proof (state)\nthis:\n  js ! 1 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "have \"js!2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. js ! 2 = 0", "using N [of 2 ] M2 f_eq_0 [of M2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 < 4; ?u \\<in> [UU]\\<^bsup>2\\<^esup>; form ?u 2;\n   scheme ?u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f ?u = js ! 2\n  M2 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 2\n  ?u \\<in> [M2]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n  M2 \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n  \\<exists>x\\<in>[M2]\\<^bsup>2\\<^esup>. f x = 0\n\ngoal (1 subgoal):\n 1. js ! 2 = 0", "by (force simp: nsets_def eval_nat_numeral)"], ["proof (state)\nthis:\n  js ! 2 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "moreover"], ["proof (state)\nthis:\n  js ! 2 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "have \"js!3 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. js ! 3 = 0", "using N [of 3 ] M3 f_eq_0 [of M3]"], ["proof (prove)\nusing this:\n  \\<lbrakk>3 < 4; ?u \\<in> [UU]\\<^bsup>2\\<^esup>; form ?u 3;\n   scheme ?u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f ?u = js ! 3\n  M3 \\<in> [UU]\\<^bsup>m\\<^esup>\n  ?u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> form ?u 3\n  ?u \\<in> [M3]\\<^bsup>2\\<^esup> \\<Longrightarrow> scheme ?u \\<subseteq> N\n  M3 \\<in> [UU]\\<^bsup>m\\<^esup> \\<Longrightarrow>\n  \\<exists>x\\<in>[M3]\\<^bsup>2\\<^esup>. f x = 0\n\ngoal (1 subgoal):\n 1. js ! 3 = 0", "by (force simp: nsets_def eval_nat_numeral)"], ["proof (state)\nthis:\n  js ! 3 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "ultimately"], ["proof (chain)\npicking this:\n  js ! 0 = 0\n  js ! 1 = 0\n  js ! 2 = 0\n  js ! 3 = 0", "have js0: \"js!k = 0\" if \"k < 4\" for k"], ["proof (prove)\nusing this:\n  js ! 0 = 0\n  js ! 1 = 0\n  js ! 2 = 0\n  js ! 3 = 0\n\ngoal (1 subgoal):\n 1. js ! k = 0", "using that"], ["proof (prove)\nusing this:\n  js ! 0 = 0\n  js ! 1 = 0\n  js ! 2 = 0\n  js ! 3 = 0\n  k < 4\n\ngoal (1 subgoal):\n 1. js ! k = 0", "by (auto simp: eval_nat_numeral less_Suc_eq)"], ["proof (state)\nthis:\n  ?k < 4 \\<Longrightarrow> js ! ?k = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "obtain X where \"X \\<subseteq> UU\" and otX: \"ordertype X pair_less = \\<omega>\\<up>2\"\n      and X: \"\\<And>u. u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>infinite N\\<close> lemma_2_5"], ["proof (prove)\nusing this:\n  infinite N\n  \\<lbrakk>infinite ?N;\n   \\<And>X.\n      \\<lbrakk>X \\<subseteq> UU;\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n       \\<And>u.\n          u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n          (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> ?N\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>X \\<subseteq> UU;\n         ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2;\n         \\<And>u.\n            u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n            (\\<exists>k<4. form u k) \\<and> scheme u \\<subseteq> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> UU\n  ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n  ?u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n  (\\<exists>k<4. form ?u k) \\<and> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "moreover"], ["proof (state)\nthis:\n  X \\<subseteq> UU\n  ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n  ?u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n  (\\<exists>k<4. form ?u k) \\<and> scheme ?u \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "have \"f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "proof (clarsimp simp: image_subset_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> f x = 0", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> f x = 0", "assume u: \"u \\<in> [X]\\<^bsup>2\\<^esup>\""], ["proof (state)\nthis:\n  u \\<in> [X]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> f x = 0", "then"], ["proof (chain)\npicking this:\n  u \\<in> [X]\\<^bsup>2\\<^esup>", "have u_UU2: \"u \\<in> [UU]\\<^bsup>2\\<^esup>\""], ["proof (prove)\nusing this:\n  u \\<in> [X]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. u \\<in> [UU]\\<^bsup>2\\<^esup>", "using \\<open>X \\<subseteq> UU\\<close> nsets_mono"], ["proof (prove)\nusing this:\n  u \\<in> [X]\\<^bsup>2\\<^esup>\n  X \\<subseteq> UU\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  [?A]\\<^bsup>?n\\<^esup> \\<subseteq> [?B]\\<^bsup>?n\\<^esup>\n\ngoal (1 subgoal):\n 1. u \\<in> [UU]\\<^bsup>2\\<^esup>", "by blast"], ["proof (state)\nthis:\n  u \\<in> [UU]\\<^bsup>2\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow> f x = 0", "show \"f u = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u = 0", "using X u N [OF _ u_UU2] js0"], ["proof (prove)\nusing this:\n  ?u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n  (\\<exists>k<4. form ?u k) \\<and> scheme ?u \\<subseteq> N\n  u \\<in> [X]\\<^bsup>2\\<^esup>\n  \\<lbrakk>?k < 4; form u ?k; scheme u \\<subseteq> N\\<rbrakk>\n  \\<Longrightarrow> f u = js ! ?k\n  ?k < 4 \\<Longrightarrow> js ! ?k = 0\n\ngoal (1 subgoal):\n 1. f u = 0", "by auto"], ["proof (state)\nthis:\n  f u = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>M\\<subseteq>UU.\n               ordertype M pair_less = \\<alpha> \\<and>\n               f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1}) \\<Longrightarrow>\n    \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "ultimately"], ["proof (chain)\npicking this:\n  X \\<subseteq> UU\n  ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n  ?u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n  (\\<exists>k<4. form ?u k) \\<and> scheme ?u \\<subseteq> N\n  f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "show \"\\<exists>X \\<subseteq> UU. ordertype X pair_less = \\<omega>\\<up>2 \\<and> f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\""], ["proof (prove)\nusing this:\n  X \\<subseteq> UU\n  ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2\n  ?u \\<in> [X]\\<^bsup>2\\<^esup> \\<Longrightarrow>\n  (\\<exists>k<4. form ?u k) \\<and> scheme ?u \\<subseteq> N\n  f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}", "by blast"], ["proof (state)\nthis:\n  \\<exists>X\\<subseteq>UU.\n     ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n     f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>X\\<subseteq>UU.\n      ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n      f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}) \\<or>\n  (\\<exists>M\\<subseteq>UU.\n      ordertype M pair_less = \\<alpha> \\<and>\n      f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> [UU]\\<^bsup>2\\<^esup> \\<rightarrow>\n               {..<Suc (Suc 0)} \\<Longrightarrow>\n       \\<exists>i<Suc (Suc 0).\n          \\<exists>H\\<subseteq>UU.\n             ordertype H pair_less =\n             [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n             f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "then"], ["proof (chain)\npicking this:\n  (\\<exists>X\\<subseteq>UU.\n      ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n      f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}) \\<or>\n  (\\<exists>M\\<subseteq>UU.\n      ordertype M pair_less = \\<alpha> \\<and>\n      f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})", "show \"\\<exists>i<Suc (Suc 0). \\<exists>H\\<subseteq>UU. ordertype H pair_less = [\\<omega>\\<up>2, \\<alpha>] ! i \\<and> f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\""], ["proof (prove)\nusing this:\n  (\\<exists>X\\<subseteq>UU.\n      ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n      f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0}) \\<or>\n  (\\<exists>M\\<subseteq>UU.\n      ordertype M pair_less = \\<alpha> \\<and>\n      f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1})\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0} \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n 2. \\<exists>M\\<subseteq>UU.\n       ordertype M pair_less = \\<alpha> \\<and>\n       f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1} \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "show \"?P0 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X\\<subseteq>UU.\n       ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n       f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0} \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by (metis nth_Cons_0 numeral_2_eq_2 pos2)"], ["proof (state)\nthis:\n  \\<exists>X\\<subseteq>UU.\n     ordertype X pair_less = \\<omega> \\<up> ord_of_nat 2 \\<and>\n     f ` [X]\\<^bsup>2\\<^esup> \\<subseteq> {0} \\<Longrightarrow>\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>UU.\n        ordertype H pair_less =\n        [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal (1 subgoal):\n 1. \\<exists>M\\<subseteq>UU.\n       ordertype M pair_less = \\<alpha> \\<and>\n       f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1} \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "show \"?P1 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M\\<subseteq>UU.\n       ordertype M pair_less = \\<alpha> \\<and>\n       f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1} \\<Longrightarrow>\n    \\<exists>i<Suc (Suc 0).\n       \\<exists>H\\<subseteq>UU.\n          ordertype H pair_less =\n          [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n          f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}", "by (metis One_nat_def lessI nth_Cons_0 nth_Cons_Suc)"], ["proof (state)\nthis:\n  \\<exists>M\\<subseteq>UU.\n     ordertype M pair_less = \\<alpha> \\<and>\n     f ` [M]\\<^bsup>2\\<^esup> \\<subseteq> {1} \\<Longrightarrow>\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>UU.\n        ordertype H pair_less =\n        [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i<Suc (Suc 0).\n     \\<exists>H\\<subseteq>UU.\n        ordertype H pair_less =\n        [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] ! i \\<and>\n        f ` [H]\\<^bsup>2\\<^esup> \\<subseteq> {i}\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Specker: \"\\<alpha> \\<in> elts \\<omega> \\<Longrightarrow> partn_lst_VWF (\\<omega>\\<up>2) [\\<omega>\\<up>2,\\<alpha>] 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> elts \\<omega> \\<Longrightarrow>\n    partn_lst_VWF (\\<omega> \\<up> ord_of_nat 2)\n     [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] 2", "using partn_lst_imp_partn_lst_VWF_eq [OF Specker_aux] ordertype_UU_\\<omega>2 wf_pair_less"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<alpha>1 \\<in> elts \\<omega>;\n   ordertype UU pair_less = ?\\<beta>; small UU; wf pair_less;\n   trans pair_less; total_on UU pair_less\\<rbrakk>\n  \\<Longrightarrow> partn_lst_VWF ?\\<beta>\n                     [\\<omega> \\<up> ord_of_nat 2, ?\\<alpha>1] 2\n  ordertype UU pair_less = \\<omega> \\<up> ord_of_nat 2\n  wf pair_less\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> elts \\<omega> \\<Longrightarrow>\n    partn_lst_VWF (\\<omega> \\<up> ord_of_nat 2)\n     [\\<omega> \\<up> ord_of_nat 2, \\<alpha>] 2", "by blast"], ["", "end"]]}