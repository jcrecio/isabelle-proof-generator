{"file_name": "/home/qj213/afp-2021-10-22/thys/Containers/Card_Datatype.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Containers", "problem_names": ["lemma infinite_rangeIt: \n  assumes inj: \"inj f\"\n  and x: \"\\<forall>y. x \\<noteq> f y\"\n  shows \"\\<not> finite (rangeIt x f)\"", "lemma in_rangeC: \"f \\<in> A \\<Longrightarrow> f x \\<in> rangeC A\"", "lemma in_rangeCE: assumes \"y \\<in> rangeC A\"\n  obtains f x where \"f \\<in> A\" \"y = f x\"", "lemma in_rangeC_singleton: \"f x \\<in> rangeC {f}\"", "lemma in_rangeC_singleton_const: \"x \\<in> rangeC {\\<lambda>_. x}\"", "lemma rangeC_rangeC: \"f \\<in> rangeC A \\<Longrightarrow> f x \\<in> rangeC (rangeC A)\"", "lemma rangeC_eq_empty: \"rangeC A = {} \\<longleftrightarrow> A = {}\"", "lemma Ball_rangeC_iff:\n  \"(\\<forall>x \\<in> rangeC A. P x) \\<longleftrightarrow> (\\<forall>f \\<in> A. \\<forall>x. P (f x))\"", "lemma Ball_rangeC_singleton:\n  \"(\\<forall>x \\<in> rangeC {f}. P x) \\<longleftrightarrow> (\\<forall>x. P (f x))\"", "lemma Ball_rangeC_rangeC:\n  \"(\\<forall>x \\<in> rangeC (rangeC A). P x) \\<longleftrightarrow> (\\<forall>f \\<in> rangeC A. \\<forall>x. P (f x))\"", "lemma finite_rangeC:\n  assumes inj: \"\\<forall>f \\<in> A. inj f\"\n  and disjoint: \"\\<forall>f \\<in> A. \\<forall>g \\<in> A. f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\"\n  shows \"finite (rangeC (A :: ('a \\<Rightarrow> 'b) set)) \\<longleftrightarrow> finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite (UNIV :: 'a set))\"\n  (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma finite_rangeC_singleton_const:\n  \"finite (rangeC {\\<lambda>_. x})\"", "lemma card_Un:\n  \"\\<lbrakk> finite A; finite B \\<rbrakk> \\<Longrightarrow> card (A \\<union> B) = card (A) + card (B) - card(A \\<inter> B)\"", "lemma card_rangeC_singleton_const:\n  \"card (rangeC {\\<lambda>_. f}) = 1\"", "lemma card_rangeC:\n  assumes inj: \"\\<forall>f \\<in> A. inj f\"\n  and disjoint: \"\\<forall>f \\<in> A. \\<forall>g \\<in> A. f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\"\n  shows \"card (rangeC (A :: ('a \\<Rightarrow> 'b) set)) = CARD('a) * card A\"\n  (is \"?lhs = ?rhs\")", "lemma rangeC_Int_rangeC:\n  \"\\<lbrakk> \\<forall>f \\<in> A. \\<forall>g \\<in> B. \\<forall>x y. f x \\<noteq> g y \\<rbrakk> \\<Longrightarrow> rangeC A \\<inter> rangeC B = {}\"", "lemmas rangeC_simps =\n  in_rangeC_singleton\n  in_rangeC_singleton_const\n  rangeC_rangeC\n  rangeC_eq_empty\n  Ball_rangeC_singleton\n  Ball_rangeC_rangeC\n  finite_rangeC\n  finite_rangeC_singleton_const\n  card_rangeC_singleton_const\n  card_rangeC\n  rangeC_Int_rangeC", "lemma CARD_fun [card_simps]:\n  \"CARD('a \\<Rightarrow> 'b) = card_fun CARD('a) CARD('b)\"", "lemma CARD_sum [card_simps]:\n  \"CARD('a + 'b) = card_sum CARD('a) CARD('b)\"", "lemma CARD_option [card_simps]:\n  \"CARD('a option) = card_option CARD('a)\"", "lemma CARD_prod [card_simps]:\n  \"CARD('a * 'b) = card_prod CARD('a) CARD('b)\"", "lemma CARD_list [card_simps]: \"CARD('a list) = card_list CARD('a)\""], "translations": [["", "lemma infinite_rangeIt: \n  assumes inj: \"inj f\"\n  and x: \"\\<forall>y. x \\<noteq> f y\"\n  shows \"\\<not> finite (rangeIt x f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (rangeIt x f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (rangeIt x f)", "have \"inj (\\<lambda>n. (f ^^ n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (\\<lambda>n. (f ^^ n) x)", "proof(rule injI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa y. (f ^^ xa) x = (f ^^ y) x \\<Longrightarrow> xa = y", "fix n m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa y. (f ^^ xa) x = (f ^^ y) x \\<Longrightarrow> xa = y", "assume \"(f ^^ n) x = (f ^^ m) x\""], ["proof (state)\nthis:\n  (f ^^ n) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa y. (f ^^ xa) x = (f ^^ y) x \\<Longrightarrow> xa = y", "thus \"n = m\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. n = m", "proof(induct n arbitrary: m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. (f ^^ 0) x = (f ^^ m) x \\<Longrightarrow> 0 = m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m. (f ^^ n) x = (f ^^ m) x \\<Longrightarrow> n = m;\n        (f ^^ Suc n) x = (f ^^ m) x\\<rbrakk>\n       \\<Longrightarrow> Suc n = m", "case 0"], ["proof (state)\nthis:\n  (f ^^ 0) x = (f ^^ m) x\n\ngoal (2 subgoals):\n 1. \\<And>m. (f ^^ 0) x = (f ^^ m) x \\<Longrightarrow> 0 = m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m. (f ^^ n) x = (f ^^ m) x \\<Longrightarrow> n = m;\n        (f ^^ Suc n) x = (f ^^ m) x\\<rbrakk>\n       \\<Longrightarrow> Suc n = m", "thus ?case"], ["proof (prove)\nusing this:\n  (f ^^ 0) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. 0 = m", "using x"], ["proof (prove)\nusing this:\n  (f ^^ 0) x = (f ^^ m) x\n  \\<forall>y. x \\<noteq> f y\n\ngoal (1 subgoal):\n 1. 0 = m", "by(cases m)(auto intro: sym)"], ["proof (state)\nthis:\n  0 = m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. (f ^^ n) x = (f ^^ m) x \\<Longrightarrow> n = m;\n        (f ^^ Suc n) x = (f ^^ m) x\\<rbrakk>\n       \\<Longrightarrow> Suc n = m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. (f ^^ n) x = (f ^^ m) x \\<Longrightarrow> n = m;\n        (f ^^ Suc n) x = (f ^^ m) x\\<rbrakk>\n       \\<Longrightarrow> Suc n = m", "case (Suc n)"], ["proof (state)\nthis:\n  (f ^^ n) x = (f ^^ ?m) x \\<Longrightarrow> n = ?m\n  (f ^^ Suc n) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. (f ^^ n) x = (f ^^ m) x \\<Longrightarrow> n = m;\n        (f ^^ Suc n) x = (f ^^ m) x\\<rbrakk>\n       \\<Longrightarrow> Suc n = m", "thus ?case"], ["proof (prove)\nusing this:\n  (f ^^ n) x = (f ^^ ?m) x \\<Longrightarrow> n = ?m\n  (f ^^ Suc n) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. Suc n = m", "using x"], ["proof (prove)\nusing this:\n  (f ^^ n) x = (f ^^ ?m) x \\<Longrightarrow> n = ?m\n  (f ^^ Suc n) x = (f ^^ m) x\n  \\<forall>y. x \\<noteq> f y\n\ngoal (1 subgoal):\n 1. Suc n = m", "by(cases m)(auto intro: sym dest: injD[OF inj])"], ["proof (state)\nthis:\n  Suc n = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj (\\<lambda>n. (f ^^ n) x)\n\ngoal (1 subgoal):\n 1. infinite (rangeIt x f)", "thus ?thesis"], ["proof (prove)\nusing this:\n  inj (\\<lambda>n. (f ^^ n) x)\n\ngoal (1 subgoal):\n 1. infinite (rangeIt x f)", "by(auto simp add: rangeIt_def dest: finite_imageD)"], ["proof (state)\nthis:\n  infinite (rangeIt x f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_rangeC: \"f \\<in> A \\<Longrightarrow> f x \\<in> rangeC A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> A \\<Longrightarrow> f x \\<in> rangeC A", "by(auto simp add: rangeC_def)"], ["", "lemma in_rangeCE: assumes \"y \\<in> rangeC A\"\n  obtains f x where \"f \\<in> A\" \"y = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f x.\n        \\<lbrakk>f \\<in> A; y = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> rangeC A\n\ngoal (1 subgoal):\n 1. (\\<And>f x.\n        \\<lbrakk>f \\<in> A; y = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: rangeC_def)"], ["", "lemma in_rangeC_singleton: \"f x \\<in> rangeC {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> rangeC {f}", "by(auto simp add: rangeC_def)"], ["", "lemma in_rangeC_singleton_const: \"x \\<in> rangeC {\\<lambda>_. x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> rangeC {\\<lambda>_. x}", "by(rule in_rangeC_singleton)"], ["", "lemma rangeC_rangeC: \"f \\<in> rangeC A \\<Longrightarrow> f x \\<in> rangeC (rangeC A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> rangeC A \\<Longrightarrow> f x \\<in> rangeC (rangeC A)", "by(auto simp add: rangeC_def)"], ["", "lemma rangeC_eq_empty: \"rangeC A = {} \\<longleftrightarrow> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rangeC A = {}) = (A = {})", "by(auto simp add: rangeC_def)"], ["", "lemma Ball_rangeC_iff:\n  \"(\\<forall>x \\<in> rangeC A. P x) \\<longleftrightarrow> (\\<forall>f \\<in> A. \\<forall>x. P (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>rangeC A. P x) = (\\<forall>f\\<in>A. \\<forall>x. P (f x))", "by(auto intro: in_rangeC elim: in_rangeCE)"], ["", "lemma Ball_rangeC_singleton:\n  \"(\\<forall>x \\<in> rangeC {f}. P x) \\<longleftrightarrow> (\\<forall>x. P (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>rangeC {f}. P x) = (\\<forall>x. P (f x))", "by(simp add: Ball_rangeC_iff)"], ["", "lemma Ball_rangeC_rangeC:\n  \"(\\<forall>x \\<in> rangeC (rangeC A). P x) \\<longleftrightarrow> (\\<forall>f \\<in> rangeC A. \\<forall>x. P (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>rangeC (rangeC A). P x) =\n    (\\<forall>f\\<in>rangeC A. \\<forall>x. P (f x))", "by(simp add: Ball_rangeC_iff)"], ["", "lemma finite_rangeC:\n  assumes inj: \"\\<forall>f \\<in> A. inj f\"\n  and disjoint: \"\\<forall>f \\<in> A. \\<forall>g \\<in> A. f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\"\n  shows \"finite (rangeC (A :: ('a \\<Rightarrow> 'b) set)) \\<longleftrightarrow> finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite (UNIV :: 'a set))\"\n  (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (rangeC A) =\n    (finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (rangeC A) \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n 2. finite A \\<and>\n    (A \\<noteq> {} \\<longrightarrow> finite UNIV) \\<Longrightarrow>\n    finite (rangeC A)", "assume ?lhs"], ["proof (state)\nthis:\n  finite (rangeC A)\n\ngoal (2 subgoals):\n 1. finite (rangeC A) \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n 2. finite A \\<and>\n    (A \\<noteq> {} \\<longrightarrow> finite UNIV) \\<Longrightarrow>\n    finite (rangeC A)", "thus ?rhs"], ["proof (prove)\nusing this:\n  finite (rangeC A)\n\ngoal (1 subgoal):\n 1. finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "using inj disjoint"], ["proof (prove)\nusing this:\n  finite (rangeC A)\n  \\<forall>f\\<in>A. inj f\n  \\<forall>f\\<in>A.\n     \\<forall>g\\<in>A.\n        f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\n\ngoal (1 subgoal):\n 1. finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "proof(induct \"rangeC A\" arbitrary: A rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite (rangeC A);\n        \\<And>Aa.\n           \\<lbrakk>rangeC Aa \\<subset> rangeC A; \\<forall>f\\<in>Aa. inj f;\n            \\<forall>f\\<in>Aa.\n               \\<forall>g\\<in>Aa.\n                  f \\<noteq> g \\<longrightarrow>\n                  (\\<forall>x y. f x \\<noteq> g y)\\<rbrakk>\n           \\<Longrightarrow> finite Aa \\<and>\n                             (Aa \\<noteq> {} \\<longrightarrow> finite UNIV);\n        \\<forall>f\\<in>A. inj f;\n        \\<forall>f\\<in>A.\n           \\<forall>g\\<in>A.\n              f \\<noteq> g \\<longrightarrow>\n              (\\<forall>x y. f x \\<noteq> g y)\\<rbrakk>\n       \\<Longrightarrow> finite A \\<and>\n                         (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "case (psubset A)"], ["proof (state)\nthis:\n  finite (rangeC A)\n  \\<lbrakk>rangeC ?A \\<subset> rangeC A; \\<forall>f\\<in>?A. inj f;\n   \\<forall>f\\<in>?A.\n      \\<forall>g\\<in>?A.\n         f \\<noteq> g \\<longrightarrow>\n         (\\<forall>x y. f x \\<noteq> g y)\\<rbrakk>\n  \\<Longrightarrow> finite ?A \\<and>\n                    (?A \\<noteq> {} \\<longrightarrow> finite UNIV)\n  \\<forall>f\\<in>A. inj f\n  \\<forall>f\\<in>A.\n     \\<forall>g\\<in>A.\n        f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite (rangeC A);\n        \\<And>Aa.\n           \\<lbrakk>rangeC Aa \\<subset> rangeC A; \\<forall>f\\<in>Aa. inj f;\n            \\<forall>f\\<in>Aa.\n               \\<forall>g\\<in>Aa.\n                  f \\<noteq> g \\<longrightarrow>\n                  (\\<forall>x y. f x \\<noteq> g y)\\<rbrakk>\n           \\<Longrightarrow> finite Aa \\<and>\n                             (Aa \\<noteq> {} \\<longrightarrow> finite UNIV);\n        \\<forall>f\\<in>A. inj f;\n        \\<forall>f\\<in>A.\n           \\<forall>g\\<in>A.\n              f \\<noteq> g \\<longrightarrow>\n              (\\<forall>x y. f x \\<noteq> g y)\\<rbrakk>\n       \\<Longrightarrow> finite A \\<and>\n                         (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "proof(cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "by simp"], ["proof (state)\nthis:\n  finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "obtain f A' where A: \"A = insert f A'\" and f: \"f \\<in> A\" \"f \\<notin> A'\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>f A'.\n        \\<lbrakk>A = insert f A'; f \\<in> A; f \\<notin> A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce dest: mk_disjoint_insert)"], ["proof (state)\nthis:\n  A = insert f A'\n  f \\<in> A\n  f \\<notin> A'\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "from A"], ["proof (chain)\npicking this:\n  A = insert f A'", "have rA: \"rangeC A = rangeC A' \\<union> range f\""], ["proof (prove)\nusing this:\n  A = insert f A'\n\ngoal (1 subgoal):\n 1. rangeC A = rangeC A' \\<union> range f", "by(auto simp add: rangeC_def)"], ["proof (state)\nthis:\n  rangeC A = rangeC A' \\<union> range f\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "have \"\\<not> range f \\<subseteq> rangeC A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> range f \\<subseteq> rangeC A'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "assume \"range f \\<subseteq> rangeC A'\""], ["proof (state)\nthis:\n  range f \\<subseteq> rangeC A'\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  range f \\<subseteq> rangeC A'\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "obtain x where x: \"x \\<in> range f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> range f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> range f\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  range f \\<subseteq> rangeC A'\n  x \\<in> range f", "have \"x \\<in> rangeC A'\""], ["proof (prove)\nusing this:\n  range f \\<subseteq> rangeC A'\n  x \\<in> range f\n\ngoal (1 subgoal):\n 1. x \\<in> rangeC A'", "by auto"], ["proof (state)\nthis:\n  x \\<in> rangeC A'\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> rangeC A'", "obtain g where \"g \\<in> A'\" \"x \\<in> range g\""], ["proof (prove)\nusing this:\n  x \\<in> rangeC A'\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> A'; x \\<in> range g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: rangeC_def)"], ["proof (state)\nthis:\n  g \\<in> A'\n  x \\<in> range g\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "with \\<open>f \\<notin> A'\\<close> A"], ["proof (chain)\npicking this:\n  f \\<notin> A'\n  A = insert f A'\n  g \\<in> A'\n  x \\<in> range g", "have \"g \\<in> A\" \"f \\<noteq> g\""], ["proof (prove)\nusing this:\n  f \\<notin> A'\n  A = insert f A'\n  g \\<in> A'\n  x \\<in> range g\n\ngoal (1 subgoal):\n 1. g \\<in> A &&& f \\<noteq> g", "by auto"], ["proof (state)\nthis:\n  g \\<in> A\n  f \\<noteq> g\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "with \\<open>f \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> A\n  g \\<in> A\n  f \\<noteq> g", "have \"\\<And>x y. f x \\<noteq> g y\""], ["proof (prove)\nusing this:\n  f \\<in> A\n  g \\<in> A\n  f \\<noteq> g\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x \\<noteq> g y", "by(rule psubset.prems[rule_format])"], ["proof (state)\nthis:\n  f ?x \\<noteq> g ?y\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> rangeC A' \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  f ?x \\<noteq> g ?y\n\ngoal (1 subgoal):\n 1. False", "using x \\<open>x \\<in> range g\\<close>"], ["proof (prove)\nusing this:\n  f ?x \\<noteq> g ?y\n  x \\<in> range f\n  x \\<in> range g\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> range f \\<subseteq> rangeC A'\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "hence \"rangeC A' \\<subset> rangeC A\""], ["proof (prove)\nusing this:\n  \\<not> range f \\<subseteq> rangeC A'\n\ngoal (1 subgoal):\n 1. rangeC A' \\<subset> rangeC A", "unfolding rA"], ["proof (prove)\nusing this:\n  \\<not> range f \\<subseteq> rangeC A'\n\ngoal (1 subgoal):\n 1. rangeC A' \\<subset> rangeC A' \\<union> range f", "by auto"], ["proof (state)\nthis:\n  rangeC A' \\<subset> rangeC A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "hence \"finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite (UNIV :: 'a set))\""], ["proof (prove)\nusing this:\n  rangeC A' \\<subset> rangeC A\n\ngoal (1 subgoal):\n 1. finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite UNIV)", "using psubset.prems"], ["proof (prove)\nusing this:\n  rangeC A' \\<subset> rangeC A\n  \\<forall>f\\<in>A. inj f\n  \\<forall>f\\<in>A.\n     \\<forall>g\\<in>A.\n        f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\n\ngoal (1 subgoal):\n 1. finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite UNIV)", "by -(erule psubset.hyps, auto simp add: A)"], ["proof (state)\nthis:\n  finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "with A"], ["proof (chain)\npicking this:\n  A = insert f A'\n  finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite UNIV)", "have \"finite A\""], ["proof (prove)\nusing this:\n  A = insert f A'\n  finite A' \\<and> (A' \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal (1 subgoal):\n 1. finite A", "by simp"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "moreover"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "with \\<open>finite (rangeC A)\\<close> A \\<open>\\<forall>f \\<in> A. inj f\\<close>"], ["proof (chain)\npicking this:\n  finite (rangeC A)\n  A = insert f A'\n  \\<forall>f\\<in>A. inj f\n  finite A", "have \"finite (UNIV :: 'a set)\""], ["proof (prove)\nusing this:\n  finite (rangeC A)\n  A = insert f A'\n  \\<forall>f\\<in>A. inj f\n  finite A\n\ngoal (1 subgoal):\n 1. finite UNIV", "by(auto simp add: rangeC_def dest: finite_imageD)"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "ultimately"], ["proof (chain)\npicking this:\n  finite A\n  finite UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  finite UNIV\n\ngoal (1 subgoal):\n 1. finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)", "by blast"], ["proof (state)\nthis:\n  finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV)\n\ngoal (1 subgoal):\n 1. finite A \\<and>\n    (A \\<noteq> {} \\<longrightarrow> finite UNIV) \\<Longrightarrow>\n    finite (rangeC A)", "qed(auto simp add: rangeC_def)"], ["", "lemma finite_rangeC_singleton_const:\n  \"finite (rangeC {\\<lambda>_. x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (rangeC {\\<lambda>_. x})", "by(auto simp add: rangeC_def image_def)"], ["", "lemma card_Un:\n  \"\\<lbrakk> finite A; finite B \\<rbrakk> \\<Longrightarrow> card (A \\<union> B) = card (A) + card (B) - card(A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B\\<rbrakk>\n    \\<Longrightarrow> card (A \\<union> B) =\n                      card A + card B - card (A \\<inter> B)", "by(subst card_Un_Int) simp_all"], ["", "lemma card_rangeC_singleton_const:\n  \"card (rangeC {\\<lambda>_. f}) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (rangeC {\\<lambda>_. f}) = 1", "by(simp add: rangeC_def image_def)"], ["", "lemma card_rangeC:\n  assumes inj: \"\\<forall>f \\<in> A. inj f\"\n  and disjoint: \"\\<forall>f \\<in> A. \\<forall>g \\<in> A. f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\"\n  shows \"card (rangeC (A :: ('a \\<Rightarrow> 'b) set)) = CARD('a) * card A\"\n  (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (rangeC A) = CARD('a) * card A", "proof(cases \"finite (UNIV :: 'a set) \\<and> finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A\n 2. \\<not> (finite UNIV \\<and> finite A) \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "case False"], ["proof (state)\nthis:\n  \\<not> (finite UNIV \\<and> finite A)\n\ngoal (2 subgoals):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A\n 2. \\<not> (finite UNIV \\<and> finite A) \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (finite UNIV \\<and> finite A)\n\ngoal (1 subgoal):\n 1. card (rangeC A) = CARD('a) * card A", "using False finite_rangeC[OF assms]"], ["proof (prove)\nusing this:\n  \\<not> (finite UNIV \\<and> finite A)\n  \\<not> (finite UNIV \\<and> finite A)\n  finite (rangeC A) =\n  (finite A \\<and> (A \\<noteq> {} \\<longrightarrow> finite UNIV))\n\ngoal (1 subgoal):\n 1. card (rangeC A) = CARD('a) * card A", "by(auto simp add: card_eq_0_iff rangeC_eq_empty)"], ["proof (state)\nthis:\n  card (rangeC A) = CARD('a) * card A\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "case True"], ["proof (state)\nthis:\n  finite UNIV \\<and> finite A\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "{"], ["proof (state)\nthis:\n  finite UNIV \\<and> finite A\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "assume \"f \\<in> A\""], ["proof (state)\nthis:\n  f \\<in> A\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "hence \"card (range f) = CARD('a)\""], ["proof (prove)\nusing this:\n  f \\<in> A\n\ngoal (1 subgoal):\n 1. card (range f) = CARD('a)", "using inj"], ["proof (prove)\nusing this:\n  f \\<in> A\n  \\<forall>f\\<in>A. inj f\n\ngoal (1 subgoal):\n 1. card (range f) = CARD('a)", "by(simp add: card_image)"], ["proof (state)\nthis:\n  card (range f) = CARD('a)\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "}"], ["proof (state)\nthis:\n  ?f2 \\<in> A \\<Longrightarrow> card (range ?f2) = CARD('a)\n\ngoal (1 subgoal):\n 1. finite UNIV \\<and> finite A \\<Longrightarrow>\n    card (rangeC A) = CARD('a) * card A", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?f2 \\<in> A \\<Longrightarrow> card (range ?f2) = CARD('a)\n\ngoal (1 subgoal):\n 1. card (rangeC A) = CARD('a) * card A", "using disjoint True"], ["proof (prove)\nusing this:\n  ?f2 \\<in> A \\<Longrightarrow> card (range ?f2) = CARD('a)\n  \\<forall>f\\<in>A.\n     \\<forall>g\\<in>A.\n        f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\n  finite UNIV \\<and> finite A\n\ngoal (1 subgoal):\n 1. card (rangeC A) = CARD('a) * card A", "unfolding rangeC_def"], ["proof (prove)\nusing this:\n  ?f2 \\<in> A \\<Longrightarrow> card (range ?f2) = CARD('a)\n  \\<forall>f\\<in>A.\n     \\<forall>g\\<in>A.\n        f \\<noteq> g \\<longrightarrow> (\\<forall>x y. f x \\<noteq> g y)\n  finite UNIV \\<and> finite A\n\ngoal (1 subgoal):\n 1. card (\\<Union> (range ` A)) = CARD('a) * card A", "by(subst card_UN_disjoint) auto"], ["proof (state)\nthis:\n  card (rangeC A) = CARD('a) * card A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rangeC_Int_rangeC:\n  \"\\<lbrakk> \\<forall>f \\<in> A. \\<forall>g \\<in> B. \\<forall>x y. f x \\<noteq> g y \\<rbrakk> \\<Longrightarrow> rangeC A \\<inter> rangeC B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>A.\n       \\<forall>g\\<in>B. \\<forall>x y. f x \\<noteq> g y \\<Longrightarrow>\n    rangeC A \\<inter> rangeC B = {}", "by(auto simp add: rangeC_def)"], ["", "lemmas rangeC_simps =\n  in_rangeC_singleton\n  in_rangeC_singleton_const\n  rangeC_rangeC\n  rangeC_eq_empty\n  Ball_rangeC_singleton\n  Ball_rangeC_rangeC\n  finite_rangeC\n  finite_rangeC_singleton_const\n  card_rangeC_singleton_const\n  card_rangeC\n  rangeC_Int_rangeC"], ["", "bundle card_datatype =\n  rangeC_simps [simp]\n  card_Un [simp]\n  fun_eq_iff [simp]\n  Int_Un_distrib [simp]\n  Int_Un_distrib2 [simp]\n  card_eq_0_iff [simp]\n  imageI [simp] image_eqI [simp del]\n  conj_cong [cong]\n  infinite_rangeIt [simp]"], ["", "subsection \\<open>Cardinality primitives for polymorphic HOL types\\<close>"], ["", "ML \\<open>\nstructure Card_Simp_Rules = Named_Thms\n(\n  val name = @{binding card_simps}\n  val description = \"Simplification rules for cardinality of types\"\n)\n\\<close>"], ["", "setup \\<open>Card_Simp_Rules.setup\\<close>"], ["", "definition card_fun :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nwhere \"card_fun a b = (if a \\<noteq> 0 \\<and> b \\<noteq> 0 \\<or> b = 1 then b ^ a else 0)\""], ["", "lemma CARD_fun [card_simps]:\n  \"CARD('a \\<Rightarrow> 'b) = card_fun CARD('a) CARD('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('a \\<Rightarrow> 'b) = card_fun CARD('a) CARD('b)", "by(simp add: card_fun card_fun_def)"], ["", "definition card_sum :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nwhere \"card_sum a b = (if a = 0 \\<or> b = 0 then 0 else a + b)\""], ["", "lemma CARD_sum [card_simps]:\n  \"CARD('a + 'b) = card_sum CARD('a) CARD('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('a + 'b) = card_sum CARD('a) CARD('b)", "by(simp add: card_UNIV_sum card_sum_def)"], ["", "definition card_option :: \"nat \\<Rightarrow> nat\"\nwhere \"card_option n = (if n = 0 then 0 else Suc n)\""], ["", "lemma CARD_option [card_simps]:\n  \"CARD('a option) = card_option CARD('a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('a option) = card_option CARD('a)", "by(simp add: card_option_def card_UNIV_option)"], ["", "definition card_prod :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nwhere \"card_prod a b = a * b\""], ["", "lemma CARD_prod [card_simps]:\n  \"CARD('a * 'b) = card_prod CARD('a) CARD('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('a \\<times> 'b) = card_prod CARD('a) CARD('b)", "by(simp add: card_prod_def)"], ["", "definition card_list :: \"nat \\<Rightarrow> nat\"\nwhere \"card_list _ = 0\""], ["", "lemma CARD_list [card_simps]: \"CARD('a list) = card_list CARD('a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CARD('a list) = card_list CARD('a)", "by(simp add: card_list_def infinite_UNIV_listI)"], ["", "end"]]}