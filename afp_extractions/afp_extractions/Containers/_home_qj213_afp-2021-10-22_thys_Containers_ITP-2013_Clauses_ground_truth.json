{"file_name": "/home/qj213/afp-2021-10-22/thys/Containers/ITP-2013/Clauses.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Containers", "problem_names": ["lemma cnf_correct: \"\\<Phi> \\<turnstile> cnf b \\<longleftrightarrow> \\<Phi> \\<Turnstile> b\""], "translations": [["", "lemma cnf_correct: \"\\<Phi> \\<turnstile> cnf b \\<longleftrightarrow> \\<Phi> \\<Turnstile> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> \\<turnstile> cnf b = \\<Phi> \\<Turnstile> b", "proof(rule sym, induction b rule: cnf.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b and b' =\n                         \\<Phi> \\<turnstile> cnf (b and b')\n 3. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<And>x.\n           x \\<in> cnf b \\<Longrightarrow>\n           \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b or b' =\n                         \\<Phi> \\<turnstile> cnf (b or b')\n 4. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 5. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 6. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 7. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "case 2"], ["proof (state)\nthis:\n  \\<Phi> \\<Turnstile> b_ = \\<Phi> \\<turnstile> cnf b_\n  \\<Phi> \\<Turnstile> b'_ = \\<Phi> \\<turnstile> cnf b'_\n\ngoal (7 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b and b' =\n                         \\<Phi> \\<turnstile> cnf (b and b')\n 3. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<And>x.\n           x \\<in> cnf b \\<Longrightarrow>\n           \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b or b' =\n                         \\<Phi> \\<turnstile> cnf (b or b')\n 4. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 5. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 6. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 7. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> \\<Turnstile> b_ and b'_ = \\<Phi> \\<turnstile> cnf (b_ and b'_)", "by(simp add: \"2.IH\")(auto simp add: eval_cnf_def)"], ["proof (state)\nthis:\n  \\<Phi> \\<Turnstile> b_ and b'_ = \\<Phi> \\<turnstile> cnf (b_ and b'_)\n\ngoal (6 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<And>x.\n           x \\<in> cnf b \\<Longrightarrow>\n           \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b or b' =\n                         \\<Phi> \\<turnstile> cnf (b or b')\n 3. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 4. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 5. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 6. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<And>x.\n           x \\<in> cnf b \\<Longrightarrow>\n           \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b or b' =\n                         \\<Phi> \\<turnstile> cnf (b or b')\n 3. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 4. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 5. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 6. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "case 3"], ["proof (state)\nthis:\n  \\<Phi> \\<Turnstile> b_ = \\<Phi> \\<turnstile> cnf b_\n  ?x \\<in> cnf b_ \\<Longrightarrow>\n  \\<Phi> \\<Turnstile> b'_ = \\<Phi> \\<turnstile> cnf b'_\n\ngoal (6 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>b b'.\n       \\<lbrakk>\\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b;\n        \\<And>x.\n           x \\<in> cnf b \\<Longrightarrow>\n           \\<Phi> \\<Turnstile> b' = \\<Phi> \\<turnstile> cnf b'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<Turnstile> b or b' =\n                         \\<Phi> \\<turnstile> cnf (b or b')\n 3. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 4. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 5. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 6. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "then"], ["proof (chain)\npicking this:\n  \\<Phi> \\<Turnstile> b_ = \\<Phi> \\<turnstile> cnf b_\n  ?x \\<in> cnf b_ \\<Longrightarrow>\n  \\<Phi> \\<Turnstile> b'_ = \\<Phi> \\<turnstile> cnf b'_", "show ?case"], ["proof (prove)\nusing this:\n  \\<Phi> \\<Turnstile> b_ = \\<Phi> \\<turnstile> cnf b_\n  ?x \\<in> cnf b_ \\<Longrightarrow>\n  \\<Phi> \\<Turnstile> b'_ = \\<Phi> \\<turnstile> cnf b'_\n\ngoal (1 subgoal):\n 1. \\<Phi> \\<Turnstile> b_ or b'_ = \\<Phi> \\<turnstile> cnf (b_ or b'_)", "by (auto simp add: \"3.IH\" eval_cnf_def split_beta) blast+"], ["proof (state)\nthis:\n  \\<Phi> \\<Turnstile> b_ or b'_ = \\<Phi> \\<turnstile> cnf (b_ or b'_)\n\ngoal (5 subgoals):\n 1. \\<And>v. \\<Phi> \\<Turnstile> Var v = \\<Phi> \\<turnstile> cnf (Var v)\n 2. \\<And>v.\n       \\<Phi> \\<Turnstile> not (Var v) =\n       \\<Phi> \\<turnstile> cnf (not (Var v))\n 3. \\<And>b.\n       \\<Phi> \\<Turnstile> b = \\<Phi> \\<turnstile> cnf b \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (not b) =\n       \\<Phi> \\<turnstile> cnf (not (not b))\n 4. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b or not b' =\n       \\<Phi> \\<turnstile> cnf (not b or not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b and b') =\n       \\<Phi> \\<turnstile> cnf (not (b and b'))\n 5. \\<And>b b'.\n       \\<Phi> \\<Turnstile> not b and not b' =\n       \\<Phi> \\<turnstile> cnf (not b and not b') \\<Longrightarrow>\n       \\<Phi> \\<Turnstile> not (b or b') =\n       \\<Phi> \\<turnstile> cnf (not (b or b'))", "qed(auto simp add: eval_cnf_def)"], ["", "end"]]}