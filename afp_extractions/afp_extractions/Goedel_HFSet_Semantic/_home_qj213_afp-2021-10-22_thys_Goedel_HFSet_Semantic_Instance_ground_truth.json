{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_HFSet_Semantic/Instance.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_HFSet_Semantic", "problem_names": ["lemma Fvars_tm_simps[simp]:\n  \"Fvars Zero = {}\"\n  \"Fvars (Var a) = {a}\"\n  \"Fvars (Eats x y) = Fvars x \\<union> Fvars y\"", "lemma finite_Fvars_tm[simp]:\n  fixes t :: tm\n  shows \"finite (Fvars t)\"", "lemma Fvars_fm_simps[simp]:\n  \"Fvars (x IN y) = Fvars x \\<union> Fvars y\"\n  \"Fvars (x EQ y) = Fvars x \\<union> Fvars y\"\n  \"Fvars (A OR B) = Fvars A \\<union> Fvars B\"\n  \"Fvars (A AND B) = Fvars A \\<union> Fvars B\"\n  \"Fvars (A IMP B) = Fvars A \\<union> Fvars B\"\n  \"Fvars Fls = {}\"\n  \"Fvars (Neg A) = Fvars A\"\n  \"Fvars (Ex a A) = Fvars A - {a}\"\n  \"Fvars (All a A) = Fvars A - {a}\"", "lemma finite_Fvars_fm[simp]:\n  fixes A :: fm\n  shows \"finite (Fvars A)\"", "lemma subst_tm_subst_tm[simp]:\n  \"x \\<noteq> y \\<Longrightarrow> atom x \\<sharp> u \\<Longrightarrow> subst y u (subst x t v) = subst x (subst y u t) (subst y u v)\"", "lemma subst_fm_subst_fm[simp]:\n  \"x \\<noteq> y \\<Longrightarrow> atom x \\<sharp> u \\<Longrightarrow> (A(x::=t))(y::=u) = (A(y::=u))(x::=subst y u t)\"", "lemma Fvars_ground_aux: \"Fvars t \\<subseteq> B \\<Longrightarrow> ground_aux t (atom ` B)\"", "lemma ground_Fvars: \"ground t \\<longleftrightarrow> Fvars t = {}\"", "lemma Fvars_ground_fm_aux: \"Fvars A \\<subseteq> B \\<Longrightarrow> ground_fm_aux A (atom ` B)\"", "lemma ground_fm_Fvars: \"ground_fm A \\<longleftrightarrow> Fvars A = {}\"", "lemma coding_tm_Fvars_empty[simp]: \"coding_tm t \\<Longrightarrow> Fvars t = {}\"", "lemma Fvars_empty_ground[simp]: \"Fvars t = {} \\<Longrightarrow> ground t\"", "theorem Goedel_II: \"\\<not> {} \\<turnstile> Fls \\<Longrightarrow> \\<not> {} \\<turnstile> neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\"", "lemma ground_fm_PrfP[simp]:\n  \"ground_fm (PrfP s k t) \\<longleftrightarrow> ground s \\<and> ground k \\<and> ground t\"", "lemma Fvars_HPair[simp]: \"Fvars (HPair t u) = Fvars t \\<union> Fvars u\"", "lemma ground_HPair[simp]: \"ground (HPair t u) \\<longleftrightarrow> ground t \\<and> ground u\"", "lemma neg_Neg:\n  \"{} \\<turnstile> neg \\<phi> IFF Neg \\<phi>\"", "lemma ground_aux_mono: \"A \\<subseteq> B \\<Longrightarrow> ground_aux t A \\<Longrightarrow> ground_aux t B\"", "theorem Goedel_I: \"\\<exists>\\<phi>. \\<not> {} \\<turnstile> \\<phi> \\<and> \\<not> {} \\<turnstile> Neg \\<phi> \\<and> eval_fm e0 \\<phi>\"", "theorem Goedel_I': \"\\<exists>\\<phi>. \\<not> {} \\<turnstile> \\<phi> \\<and> \\<not> {} \\<turnstile> Neg \\<phi> \\<and> isTrue \\<phi>\""], "translations": [["", "lemma Fvars_tm_simps[simp]:\n  \"Fvars Zero = {}\"\n  \"Fvars (Var a) = {a}\"\n  \"Fvars (Eats x y) = Fvars x \\<union> Fvars y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars Zero = {} &&&\n    Fvars (Var a) = {a} &&& Fvars (Eats x y) = Fvars x \\<union> Fvars y", "by (auto simp: Fvars_def fresh_at_base(2))"], ["", "lemma finite_Fvars_tm[simp]:\n  fixes t :: tm\n  shows \"finite (Fvars t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Fvars t)", "by (induct t rule: tm.induct) auto"], ["", "lemma Fvars_fm_simps[simp]:\n  \"Fvars (x IN y) = Fvars x \\<union> Fvars y\"\n  \"Fvars (x EQ y) = Fvars x \\<union> Fvars y\"\n  \"Fvars (A OR B) = Fvars A \\<union> Fvars B\"\n  \"Fvars (A AND B) = Fvars A \\<union> Fvars B\"\n  \"Fvars (A IMP B) = Fvars A \\<union> Fvars B\"\n  \"Fvars Fls = {}\"\n  \"Fvars (Neg A) = Fvars A\"\n  \"Fvars (Ex a A) = Fvars A - {a}\"\n  \"Fvars (All a A) = Fvars A - {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Fvars (x IN y) = Fvars x \\<union> Fvars y &&&\n      Fvars (x EQ y) = Fvars x \\<union> Fvars y) &&&\n     Fvars (A OR B) = Fvars A \\<union> Fvars B &&&\n     Fvars (A AND B) = Fvars A \\<union> Fvars B) &&&\n    (Fvars (A IMP B) = Fvars A \\<union> Fvars B &&& Fvars Fls = {}) &&&\n    Fvars (Neg A) = Fvars A &&&\n    Fvars (SyntaxN.Ex a A) = Fvars A - {a} &&&\n    Fvars (SyntaxN.All a A) = Fvars A - {a}", "by (auto simp: Fvars_def fresh_at_base(2))"], ["", "lemma finite_Fvars_fm[simp]:\n  fixes A :: fm\n  shows \"finite (Fvars A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Fvars A)", "by (induct A rule: fm.induct) auto"], ["", "lemma subst_tm_subst_tm[simp]:\n  \"x \\<noteq> y \\<Longrightarrow> atom x \\<sharp> u \\<Longrightarrow> subst y u (subst x t v) = subst x (subst y u t) (subst y u v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; atom x \\<sharp> u\\<rbrakk>\n    \\<Longrightarrow> subst y u (subst x t v) =\n                      subst x (subst y u t) (subst y u v)", "by (induct v rule: tm.induct) auto"], ["", "lemma subst_fm_subst_fm[simp]:\n  \"x \\<noteq> y \\<Longrightarrow> atom x \\<sharp> u \\<Longrightarrow> (A(x::=t))(y::=u) = (A(y::=u))(x::=subst y u t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; atom x \\<sharp> u\\<rbrakk>\n    \\<Longrightarrow> (A(x::=t))(y::=u) = (A(y::=u))(x::=subst y u t)", "by (nominal_induct A avoiding: x t y u rule: fm.strong_induct) auto"], ["", "lemma Fvars_ground_aux: \"Fvars t \\<subseteq> B \\<Longrightarrow> ground_aux t (atom ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars t \\<subseteq> B \\<Longrightarrow> ground_aux t (atom ` B)", "by (induct t rule: tm.induct) auto"], ["", "lemma ground_Fvars: \"ground t \\<longleftrightarrow> Fvars t = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground t = (Fvars t = {})", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ground t \\<Longrightarrow> Fvars t = {}\n 2. Fvars t = {} \\<Longrightarrow> ground t", "apply (auto simp only: Fvars_def ground_fresh) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars t = {} \\<Longrightarrow> ground t", "apply (auto intro: Fvars_ground_aux[of t \"{}\", simplified])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Fvars_ground_fm_aux: \"Fvars A \\<subseteq> B \\<Longrightarrow> ground_fm_aux A (atom ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars A \\<subseteq> B \\<Longrightarrow> ground_fm_aux A (atom ` B)", "apply (induct A arbitrary: B rule: fm.induct)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 B.\n       Fvars (x1 IN x2) \\<subseteq> B \\<Longrightarrow>\n       ground_fm_aux (x1 IN x2) (atom ` B)\n 2. \\<And>x1 x2 B.\n       Fvars (x1 EQ x2) \\<subseteq> B \\<Longrightarrow>\n       ground_fm_aux (x1 EQ x2) (atom ` B)\n 3. \\<And>x1 x2 B.\n       \\<lbrakk>\\<And>B.\n                   Fvars x1 \\<subseteq> B \\<Longrightarrow>\n                   ground_fm_aux x1 (atom ` B);\n        \\<And>B.\n           Fvars x2 \\<subseteq> B \\<Longrightarrow>\n           ground_fm_aux x2 (atom ` B);\n        Fvars (x1 OR x2) \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux (x1 OR x2) (atom ` B)\n 4. \\<And>x B.\n       \\<lbrakk>\\<And>B.\n                   Fvars x \\<subseteq> B \\<Longrightarrow>\n                   ground_fm_aux x (atom ` B);\n        Fvars (Neg x) \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux (Neg x) (atom ` B)\n 5. \\<And>x1 x2 B.\n       \\<lbrakk>\\<And>B.\n                   Fvars x2 \\<subseteq> B \\<Longrightarrow>\n                   ground_fm_aux x2 (atom ` B);\n        Fvars (SyntaxN.Ex x1 x2) \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux (SyntaxN.Ex x1 x2) (atom ` B)", "apply (auto simp: Diff_subset_conv Fvars_ground_aux)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 B.\n       \\<lbrakk>\\<And>B.\n                   Fvars x2 \\<subseteq> B \\<Longrightarrow>\n                   ground_fm_aux x2 (atom ` B);\n        Fvars x2 \\<subseteq> insert x1 B\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux x2 (insert (atom x1) (atom ` B))", "apply (drule meta_spec, drule meta_mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 B.\n       \\<lbrakk>Fvars x2 \\<subseteq> insert x1 B;\n        ground_fm_aux x2 (atom ` insert x1 B)\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux x2 (insert (atom x1) (atom ` B))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ground_fm_Fvars: \"ground_fm A \\<longleftrightarrow> Fvars A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_fm A = (Fvars A = {})", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ground_fm A \\<Longrightarrow> Fvars A = {}\n 2. Fvars A = {} \\<Longrightarrow> ground_fm A", "apply (auto simp only: Fvars_def ground_fresh) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars A = {} \\<Longrightarrow> ground_fm A", "apply (auto intro: Fvars_ground_fm_aux[of A \"{}\", simplified])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation Generic_Syntax where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Generic_Syntax UNIV UNIV UNIV Var Fvars (\\<lambda>t u x. subst x u t)\n     Fvars (\\<lambda>A u x. A(x::=u))", "apply unfold_locales"], ["proof (prove)\ngoal (17 subgoals):\n 1. infinite UNIV\n 2. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Var x \\<in> UNIV\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (Var x = Var y) = (x = y)\n 4. \\<And>t. t \\<in> UNIV \\<Longrightarrow> finite (Fvars t)\n 5. \\<And>t. t \\<in> UNIV \\<Longrightarrow> Fvars t \\<subseteq> UNIV\n 6. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 7. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 8. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 9. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 10. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\nA total of 17 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite UNIV", "by simp"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Var x \\<in> UNIV\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (Var x = Var y) = (x = y)\n 3. \\<And>t. t \\<in> UNIV \\<Longrightarrow> finite (Fvars t)\n 4. \\<And>t. t \\<in> UNIV \\<Longrightarrow> Fvars t \\<subseteq> UNIV\n 5. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 6. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 7. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 8. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 9. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 10. \\<And>\\<phi>.\n        \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\nA total of 16 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> UNIV \\<Longrightarrow> Var x_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (Var x = Var y) = (x = y)\n 2. \\<And>t. t \\<in> UNIV \\<Longrightarrow> finite (Fvars t)\n 3. \\<And>t. t \\<in> UNIV \\<Longrightarrow> Fvars t \\<subseteq> UNIV\n 4. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 5. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 6. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 7. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 8. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 9. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 10. \\<And>\\<phi> t x.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\nA total of 15 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; y_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> (Var x_ = Var y_) = (x_ = y_)", "by simp"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>t. t \\<in> UNIV \\<Longrightarrow> finite (Fvars t)\n 2. \\<And>t. t \\<in> UNIV \\<Longrightarrow> Fvars t \\<subseteq> UNIV\n 3. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 4. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 5. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 6. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 7. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 8. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 9. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 10. \\<And>\\<phi> t x.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n         x \\<in> Fvars \\<phi>\\<rbrakk>\n        \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                          Fvars \\<phi> - {x} \\<union> Fvars t\nA total of 14 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> UNIV \\<Longrightarrow> finite (Fvars t_)", "by simp"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>t. t \\<in> UNIV \\<Longrightarrow> Fvars t \\<subseteq> UNIV\n 2. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 3. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 4. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 5. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 6. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 7. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 8. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 9. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 10. \\<And>\\<phi> t1 t2 x1 x2.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n         x1 \\<in> UNIV; x2 \\<in> UNIV;\n         x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n        \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                          \\<phi>(x1::=subst x2 t2 t1)\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. t_ \\<in> UNIV \\<Longrightarrow> Fvars t_ \\<subseteq> UNIV", "by simp"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>t1 t x.\n       \\<lbrakk>t1 \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst x t t1 \\<in> UNIV\n 2. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 3. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 4. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 5. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 6. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 7. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 8. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 9. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 10. \\<And>\\<phi> t1 t2 x1 x2.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n         x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n         x1 \\<notin> Fvars t2\\<rbrakk>\n        \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                          (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> subst x_ t_ t1_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> Fvars (Var x) = {x}\n 2. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 3. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 4. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 5. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 6. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 7. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 8. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 9. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 10. \\<And>\\<phi> x.\n        \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> UNIV \\<Longrightarrow> Fvars (Var x_) = {x_}", "by simp"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x t y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> subst y t (Var x) = (if x = y then t else Var x)\n 2. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 3. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 4. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 5. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 6. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 7. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 8. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 9. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 10. \\<And>x \\<phi> t.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n         x \\<notin> Fvars \\<phi>\\<rbrakk>\n        \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; y_ \\<in> UNIV; t_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> subst y_ t_ (Var x_) =\n                      (if x_ = y_ then t_ else Var x_)", "by simp"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>t1 t2 x.\n       \\<lbrakk>x \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<notin> Fvars t1\\<rbrakk>\n       \\<Longrightarrow> subst x t2 t1 = t1\n 2. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 3. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 4. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 5. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 6. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 7. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 8. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 9. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; t \\<in> UNIV; t2_ \\<in> UNIV;\n     x_ \\<notin> Fvars t\\<rbrakk>\n    \\<Longrightarrow> subst x_ t2_ t = t", "by (induct t rule: tm.induct) auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<phi>. \\<phi> \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>)\n 2. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 3. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 4. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 5. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 6. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 7. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 8. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>_ \\<in> UNIV \\<Longrightarrow> finite (Fvars \\<phi>_)", "by simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow> Fvars \\<phi> \\<subseteq> UNIV\n 2. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 3. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 4. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 5. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 6. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 7. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>_ \\<in> UNIV \\<Longrightarrow> Fvars \\<phi>_ \\<subseteq> UNIV", "by simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) \\<in> UNIV\n 2. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 3. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 4. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 5. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 6. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<phi>_(x_::=t_) \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<phi> t x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<in> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi>(x::=t)) =\n                         Fvars \\<phi> - {x} \\<union> Fvars t\n 2. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 3. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 4. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 5. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     x_ \\<in> Fvars \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> Fvars (\\<phi>_(x_::=t_)) =\n                      Fvars \\<phi>_ - {x_} \\<union> Fvars t_", "unfolding Fvars_def fresh_subst_fm_if"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     x_ \\<in> {a. \\<not> atom a \\<sharp> \\<phi>_}\\<rbrakk>\n    \\<Longrightarrow> {a. \\<not> (atom x_ \\<sharp> \\<phi>_ \\<and>\n                                  atom a \\<sharp> \\<phi>_ \\<or>\n                                  atom a \\<sharp> t_ \\<and>\n                                  (atom a \\<sharp> \\<phi>_ \\<or>\n                                   atom a = atom x_))} =\n                      {a. \\<not> atom a \\<sharp> \\<phi>_} - {x_} \\<union>\n                      {a. \\<not> atom a \\<sharp> t_}", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV;\n        x1 = x2 \\<or> x2 \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         \\<phi>(x1::=subst x2 t2 t1)\n 2. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 3. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 4. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t1_ \\<in> UNIV; t2_ \\<in> UNIV;\n     x1_ \\<in> UNIV; x2_ \\<in> UNIV;\n     x1_ = x2_ \\<or> x2_ \\<notin> Fvars \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_(x1_::=t1_))(x2_::=t2_) =\n                      \\<phi>_(x1_::=subst x2_ t2_ t1_)", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t1_ \\<in> UNIV; t2_ \\<in> UNIV;\n     x1_ \\<in> UNIV; x2_ \\<in> UNIV;\n     x1_ = x2_ \\<or>\n     x2_ \\<notin> {a. \\<not> atom a \\<sharp> \\<phi>_}\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_(x1_::=t1_))(x2_::=t2_) =\n                      \\<phi>_(x1_::=subst x2_ t2_ t1_)", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi> t1 t2 x1 x2.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x1 \\<in> UNIV; x2 \\<in> UNIV; x1 \\<noteq> x2;\n        x1 \\<notin> Fvars t2\\<rbrakk>\n       \\<Longrightarrow> (\\<phi>(x1::=t1))(x2::=t2) =\n                         (\\<phi>(x2::=t2))(x1::=subst x2 t2 t1)\n 2. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 3. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t1_ \\<in> UNIV; t2_ \\<in> UNIV;\n     x1_ \\<in> UNIV; x2_ \\<in> UNIV; x1_ \\<noteq> x2_;\n     x1_ \\<notin> Fvars t2_\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_(x1_::=t1_))(x2_::=t2_) =\n                      (\\<phi>_(x2_::=t2_))(x1_::=subst x2_ t2_ t1_)", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t1_ \\<in> UNIV; t2_ \\<in> UNIV;\n     x1_ \\<in> UNIV; x2_ \\<in> UNIV; x1_ \\<noteq> x2_;\n     x1_ \\<notin> {a. \\<not> atom a \\<sharp> t2_}\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_(x1_::=t1_))(x2_::=t2_) =\n                      (\\<phi>_(x2_::=t2_))(x1_::=subst x2_ t2_ t1_)", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi> x.\n       \\<lbrakk>\\<phi> \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=Var x) = \\<phi>\n 2. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<phi>_(x_::=Var x_) = \\<phi>_", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n        x \\<notin> Fvars \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<phi>(x::=t) = \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     x_ \\<notin> Fvars \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> \\<phi>_(x_::=t_) = \\<phi>_", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     x_ \\<notin> {a. \\<not> atom a \\<sharp> \\<phi>_}\\<rbrakk>\n    \\<Longrightarrow> \\<phi>_(x_::=t_) = \\<phi>_", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma coding_tm_Fvars_empty[simp]: \"coding_tm t \\<Longrightarrow> Fvars t = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coding_tm t \\<Longrightarrow> Fvars t = {}", "by (induct t rule: coding_tm.induct) (auto simp: Fvars_def)"], ["", "lemma Fvars_empty_ground[simp]: \"Fvars t = {} \\<Longrightarrow> ground t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars t = {} \\<Longrightarrow> ground t", "by (induct t rule: tm.induct) auto"], ["", "interpretation Syntax_with_Numerals where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Syntax_with_Numerals UNIV UNIV UNIV Var Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u))\n     {t. ground t}", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. {t. ground t} \\<noteq> {}\n 2. {t. ground t} \\<subseteq> UNIV\n 3. \\<And>n. n \\<in> {t. ground t} \\<Longrightarrow> Fvars n = {}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t. ground t} \\<noteq> {}", "by (auto intro!: exI[of _ Zero])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {t. ground t} \\<subseteq> UNIV\n 2. \\<And>n. n \\<in> {t. ground t} \\<Longrightarrow> Fvars n = {}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {t. ground t} \\<subseteq> UNIV", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. n \\<in> {t. ground t} \\<Longrightarrow> Fvars n = {}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. n_ \\<in> {t. ground t} \\<Longrightarrow> Fvars n_ = {}", "by (simp add: ground_Fvars)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare FvarsT_num[simp del]"], ["", "interpretation Deduct2_with_False where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deduct2_with_False UNIV UNIV UNIV Var Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u)) (EQ)\n     (AND) (IMP) SyntaxN.All SyntaxN.Ex Fls {t. ground t}\n     ((\\<turnstile>) {}) ((\\<turnstile>) {})", "apply unfold_locales"], ["proof (prove)\ngoal (32 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> t1 EQ t2 \\<in> UNIV\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<phi>1 \\<in> UNIV; \\<phi>2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>1 AND \\<phi>2 \\<in> UNIV\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<phi>1 \\<in> UNIV; \\<phi>2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>1 IMP \\<phi>2 \\<in> UNIV\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.All x \\<phi> \\<in> UNIV\n 5. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.Ex x \\<phi> \\<in> UNIV\n 6. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 9. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 10. \\<And>x \\<phi>.\n        \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\nA total of 32 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1_ \\<in> UNIV; t2_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> t1_ EQ t2_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (31 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<phi>1 \\<in> UNIV; \\<phi>2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>1 AND \\<phi>2 \\<in> UNIV\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<phi>1 \\<in> UNIV; \\<phi>2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>1 IMP \\<phi>2 \\<in> UNIV\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.All x \\<phi> \\<in> UNIV\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.Ex x \\<phi> \\<in> UNIV\n 5. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 8. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 9. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 10. \\<And>x \\<phi> \\<chi> t.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n         x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                          \\<phi>(x::=t) AND \\<chi>(x::=t)\nA total of 31 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>1_ \\<in> UNIV; \\<phi>2_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<phi>1_ AND \\<phi>2_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (30 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>\\<phi>1 \\<in> UNIV; \\<phi>2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi>1 IMP \\<phi>2 \\<in> UNIV\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.All x \\<phi> \\<in> UNIV\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.Ex x \\<phi> \\<in> UNIV\n 4. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 7. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 8. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 9. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 10. \\<And>x \\<phi> \\<chi> t.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n         x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                          \\<phi>(x::=t) IMP \\<chi>(x::=t)\nA total of 30 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>1_ \\<in> UNIV; \\<phi>2_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<phi>1_ IMP \\<phi>2_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (29 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.All x \\<phi> \\<in> UNIV\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.Ex x \\<phi> \\<in> UNIV\n 3. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 6. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 7. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 8. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 9. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 10. \\<And>x y \\<phi> t.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n         y \\<in> UNIV; x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n        \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                          SyntaxN.All x (\\<phi>(y::=t))\nA total of 29 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> SyntaxN.All x_ \\<phi>_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> SyntaxN.Ex x \\<phi> \\<in> UNIV\n 2. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 5. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 6. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 7. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 8. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 9. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 10. \\<And>x y \\<phi> t.\n        \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV;\n         y \\<in> UNIV; x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n        \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                          SyntaxN.Ex x (\\<phi>(y::=t))\nA total of 28 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> SyntaxN.Ex x_ \\<phi>_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (27 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> UNIV; t2 \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (t1 EQ t2) = Fvars t1 \\<union> Fvars t2\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 5. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 6. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 7. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 8. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 9. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 10. \\<And>t1 t2 t x.\n        \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n         x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\nA total of 27 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1_ \\<in> UNIV; t2_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (t1_ EQ t2_) = Fvars t1_ \\<union> Fvars t2_", "by simp"], ["proof (prove)\ngoal (26 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> AND \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 5. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 6. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 7. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 8. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 9. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 10. Fls \\<in> UNIV\nA total of 26 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (\\<phi>_ AND \\<chi>_) =\n                      Fvars \\<phi>_ \\<union> Fvars \\<chi>_", "by simp"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> IMP \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 4. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 5. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 6. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 7. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 8. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 9. Fls \\<in> UNIV\n 10. Fvars Fls = {}\nA total of 25 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (\\<phi>_ IMP \\<chi>_) =\n                      Fvars \\<phi>_ \\<union> Fvars \\<chi>_", "by simp"], ["proof (prove)\ngoal (24 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.All x \\<phi>) = Fvars \\<phi> - {x}\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 3. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 4. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 5. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 6. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 7. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 8. Fls \\<in> UNIV\n 9. Fvars Fls = {}\n 10. \\<And>t x.\n        \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> Fls(x::=t) = Fls\nA total of 24 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (SyntaxN.All x_ \\<phi>_) = Fvars \\<phi>_ - {x_}", "by simp"], ["proof (prove)\ngoal (23 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (SyntaxN.Ex x \\<phi>) = Fvars \\<phi> - {x}\n 2. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 3. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 4. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 5. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 6. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 7. Fls \\<in> UNIV\n 8. Fvars Fls = {}\n 9. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 10. \\<And>\\<phi> \\<chi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n         {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<chi>\nA total of 23 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (SyntaxN.Ex x_ \\<phi>_) = Fvars \\<phi>_ - {x_}", "by simp"], ["proof (prove)\ngoal (22 subgoals):\n 1. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> AND \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) AND \\<chi>(x::=t)\n 2. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 3. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 4. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 5. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 6. Fls \\<in> UNIV\n 7. Fvars Fls = {}\n 8. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 9. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 10. \\<And>\\<phi> \\<chi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\nA total of 22 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV; t_ \\<in> UNIV;\n     x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_ AND \\<chi>_)(x_::=t_) =\n                      \\<phi>_(x_::=t_) AND \\<chi>_(x_::=t_)", "by simp"], ["proof (prove)\ngoal (21 subgoals):\n 1. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> IMP \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) IMP \\<chi>(x::=t)\n 2. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 3. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 4. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 5. Fls \\<in> UNIV\n 6. Fvars Fls = {}\n 7. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 9. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 10. \\<And>\\<phi> \\<chi> \\<psi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n         \\<psi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile>\n                          (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                          (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\nA total of 21 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV; t_ \\<in> UNIV;\n     x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_ IMP \\<chi>_)(x_::=t_) =\n                      \\<phi>_(x_::=t_) IMP \\<chi>_(x_::=t_)", "by simp"], ["proof (prove)\ngoal (20 subgoals):\n 1. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.All x \\<phi>)(y::=t) =\n                         SyntaxN.All x (\\<phi>(y::=t))\n 2. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 3. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 4. Fls \\<in> UNIV\n 5. Fvars Fls = {}\n 6. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 9. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 10. \\<And>\\<phi> \\<chi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\nA total of 20 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     y_ \\<in> UNIV; x_ \\<noteq> y_; x_ \\<notin> Fvars t_\\<rbrakk>\n    \\<Longrightarrow> (SyntaxN.All x_ \\<phi>_)(y_::=t_) =\n                      SyntaxN.All x_ (\\<phi>_(y_::=t_))", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     y_ \\<in> UNIV; x_ \\<noteq> y_;\n     x_ \\<notin> {a. \\<not> atom a \\<sharp> t_}\\<rbrakk>\n    \\<Longrightarrow> (SyntaxN.All x_ \\<phi>_)(y_::=t_) =\n                      SyntaxN.All x_ (\\<phi>_(y_::=t_))", "by simp"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>x y \\<phi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; t \\<in> UNIV; x \\<in> UNIV; y \\<in> UNIV;\n        x \\<noteq> y; x \\<notin> Fvars t\\<rbrakk>\n       \\<Longrightarrow> (SyntaxN.Ex x \\<phi>)(y::=t) =\n                         SyntaxN.Ex x (\\<phi>(y::=t))\n 2. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 3. Fls \\<in> UNIV\n 4. Fvars Fls = {}\n 5. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 8. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 9. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 10. \\<And>\\<phi> \\<chi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\nA total of 19 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     y_ \\<in> UNIV; x_ \\<noteq> y_; x_ \\<notin> Fvars t_\\<rbrakk>\n    \\<Longrightarrow> (SyntaxN.Ex x_ \\<phi>_)(y_::=t_) =\n                      SyntaxN.Ex x_ (\\<phi>_(y_::=t_))", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; t_ \\<in> UNIV; x_ \\<in> UNIV;\n     y_ \\<in> UNIV; x_ \\<noteq> y_;\n     x_ \\<notin> {a. \\<not> atom a \\<sharp> t_}\\<rbrakk>\n    \\<Longrightarrow> (SyntaxN.Ex x_ \\<phi>_)(y_::=t_) =\n                      SyntaxN.Ex x_ (\\<phi>_(y_::=t_))", "by simp"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>t1 t2 t x.\n       \\<lbrakk>t \\<in> UNIV; t1 \\<in> UNIV; t2 \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (t1 EQ t2)(x::=t) = subst x t t1 EQ subst x t t2\n 2. Fls \\<in> UNIV\n 3. Fvars Fls = {}\n 4. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 7. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 9. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 10. \\<And>\\<phi> \\<chi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile>\n                          \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\nA total of 18 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> UNIV; t1_ \\<in> UNIV; t2_ \\<in> UNIV;\n     x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> (t1_ EQ t2_)(x_::=t_) =\n                      subst x_ t_ t1_ EQ subst x_ t_ t2_", "by simp"], ["proof (prove)\ngoal (17 subgoals):\n 1. Fls \\<in> UNIV\n 2. Fvars Fls = {}\n 3. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 6. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 9. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 10. \\<And>x \\<phi> \\<chi>.\n        \\<lbrakk>x \\<notin> Fvars \\<phi>;\n         {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\nA total of 17 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fls \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (16 subgoals):\n 1. Fvars Fls = {}\n 2. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 5. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 8. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 9. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 10. \\<And>x \\<phi> \\<chi>.\n        \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n         x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\nA total of 16 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars Fls = {}", "by simp"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>t x.\n       \\<lbrakk>t \\<in> UNIV; x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fls(x::=t) = Fls\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 4. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 7. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 8. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 9. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 10. \\<And>x \\<phi> t.\n        \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile>\n                          SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\nA total of 15 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t_ \\<in> UNIV; x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fls(x_::=t_) = Fls", "by simp"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        {} \\<turnstile> \\<phi> IMP \\<chi>; {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 3. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 6. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 7. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 8. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 9. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 10. \\<And>x \\<phi> t.\n        \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile>\n                          \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\nA total of 14 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV;\n     {} \\<turnstile> \\<phi>_ IMP \\<chi>_; {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<chi>_", "using MP_null"], ["proof (prove)\nusing this:\n  \\<lbrakk>{} \\<turnstile> ?A IMP ?B; ?H \\<turnstile> ?A\\<rbrakk>\n  \\<Longrightarrow> ?H \\<turnstile> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV;\n     {} \\<turnstile> \\<phi>_ IMP \\<chi>_; {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<chi>_", "by blast"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<chi> IMP \\<phi>\n 2. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 6. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 7. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 8. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 9. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 10. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ IMP \\<chi>_ IMP \\<phi>_", "by blast"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<chi> IMP \\<psi>) IMP\n                         (\\<phi> IMP \\<chi>) IMP \\<phi> IMP \\<psi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 5. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 6. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 7. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 8. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 9. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 10. \\<And>\\<phi> x y.\n        \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile>\n                          Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\nA total of 12 subgoals...", "subgoal for A B C"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      (A IMP B IMP C) IMP (A IMP B) IMP A IMP C", "apply (rule Imp_I)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> C", "apply (rule MP_same[of _ B])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> B IMP C\n 2. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> B", "apply (rule MP_same[of _ C])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> C IMP B IMP C\n 2. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> C\n 3. \\<lbrakk>A \\<in> UNIV; B \\<in> UNIV; C \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {A, A IMP B, A IMP B IMP C} \\<turnstile> B", "apply (auto intro: Neg_D)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<phi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 4. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 5. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 6. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 7. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 8. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 9. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 10. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ AND \\<chi>_ IMP \\<phi>_", "by blast"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> AND \\<chi> IMP \\<chi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 3. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 4. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 5. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 6. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 7. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 8. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 9. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 10. \\<And>\\<phi>.\n        \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n         {} \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ AND \\<chi>_ IMP \\<chi>_", "by blast"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi> IMP \\<chi> IMP \\<phi> AND \\<chi>\n 2. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 3. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 4. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 5. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 6. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 7. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 8. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 9. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      \\<phi>_ IMP \\<chi>_ IMP \\<phi>_ AND \\<chi>_", "by blast"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<notin> Fvars \\<phi>;\n        {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP SyntaxN.All x \\<chi>\n 2. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 3. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 4. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 5. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 6. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 7. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 8. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<notin> Fvars \\<phi>_;\n     {} \\<turnstile> \\<phi>_ IMP \\<chi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ IMP SyntaxN.All x_ \\<chi>_", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<notin> {a. \\<not> atom a \\<sharp> \\<phi>_};\n     {} \\<turnstile> \\<phi>_ IMP \\<chi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ IMP SyntaxN.All x_ \\<chi>_", "by (auto intro: MP_null)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x \\<phi> \\<chi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        x \\<notin> Fvars \\<chi>; {} \\<turnstile> \\<phi> IMP \\<chi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x \\<phi> IMP \\<chi>\n 2. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 3. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 4. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 5. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 6. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV;\n     x_ \\<notin> Fvars \\<chi>_; {} \\<turnstile> \\<phi>_ IMP \\<chi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x_ \\<phi>_ IMP \\<chi>_", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV;\n     x_ \\<notin> {a. \\<not> atom a \\<sharp> \\<chi>_};\n     {} \\<turnstile> \\<phi>_ IMP \\<chi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> SyntaxN.Ex x_ \\<phi>_ IMP \\<chi>_", "by (auto intro: MP_null)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         SyntaxN.All x \\<phi> IMP \\<phi>(x::=t)\n 2. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 3. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 4. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 5. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; t_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      SyntaxN.All x_ \\<phi>_ IMP \\<phi>_(x_::=t_)", "by (auto intro: All_D)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x \\<phi> t.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; t \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         \\<phi>(x::=t) IMP SyntaxN.Ex x \\<phi>\n 2. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 3. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 4. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; t_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      \\<phi>_(x_::=t_) IMP SyntaxN.Ex x_ \\<phi>_", "by (auto intro: Ex_I)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x EQ Var x\n 2. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 3. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> UNIV \\<Longrightarrow> {} \\<turnstile> Var x_ EQ Var x_", "by simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi> x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV; \\<phi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         Var x EQ Var y IMP \\<phi> IMP \\<phi>(x::=Var y)\n 2. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; y_ \\<in> UNIV; \\<phi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      Var x_ EQ Var y_ IMP \\<phi>_ IMP \\<phi>_(x_::=Var y_)", "by (metis Conj_E2 Iff_def Imp_I Var_Eq_subst_Iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>. {} \\<turnstile> Fls IMP \\<phi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> Fls IMP \\<phi>_", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation HBL1 where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\"\n  and enc = \"quot\"\n  and P = \"PfP (Var xx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HBL1 UNIV UNIV UNIV Var Fvars (\\<lambda>t u x. subst x u t) Fvars\n     (\\<lambda>A u x. A(x::=u)) {t. ground t} (EQ) (AND) (IMP) SyntaxN.All\n     SyntaxN.Ex ((\\<turnstile>) {}) ((\\<turnstile>) {}) quot (PfP (Var xx))", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow>\n       \\<guillemotleft>\\<phi>\\<guillemotright> \\<in> {t. ground t}\n 2. PfP (Var xx) \\<in> UNIV\n 3. Fvars (PfP (Var xx)) = {xx}\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>_ \\<in> UNIV \\<Longrightarrow>\n    \\<guillemotleft>\\<phi>_\\<guillemotright> \\<in> {t. ground t}", "by (simp add: quot_fm_coding)"], ["proof (prove)\ngoal (3 subgoals):\n 1. PfP (Var xx) \\<in> UNIV\n 2. Fvars (PfP (Var xx)) = {xx}\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. PfP (Var xx) \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Fvars (PfP (Var xx)) = {xx}\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (PfP (Var xx)) = {xx}", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. \\<not> atom a \\<sharp> PfP (Var xx)} = {xx}", "by (auto simp: fresh_at_base(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      (PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>_\\<guillemotright>)", "by (auto simp: proved_imp_proved_PfP)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation Goedel_Form where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\"\n  and enc = \"quot\"\n  and S = \"KRP (quot (Var xx)) (Var xx) (Var yy)\"\n  and P = \"PfP (Var xx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form UNIV UNIV UNIV Var {t. ground t} Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u)) (EQ)\n     (AND) (IMP) SyntaxN.All SyntaxN.Ex Fls ((\\<turnstile>) {})\n     ((\\<turnstile>) {}) quot\n     (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n     (PfP (Var xx))", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy) \\<in> UNIV\n 2. Fvars (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy)) =\n    {xx, yy}\n 3. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SS \\<guillemotleft>\\<phi>\\<guillemotright>\n           \\<guillemotleft>\\<phi>(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)\\<guillemotright>\n 4. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SyntaxN.All yy\n           (SyntaxN.All yy'\n             (SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy) AND\n              SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy') IMP\n              Var yy EQ Var yy'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy) \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. Fvars (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy)) =\n    {xx, yy}\n 2. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SS \\<guillemotleft>\\<phi>\\<guillemotright>\n           \\<guillemotleft>\\<phi>(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)\\<guillemotright>\n 3. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SyntaxN.All yy\n           (SyntaxN.All yy'\n             (SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy) AND\n              SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy') IMP\n              Var yy EQ Var yy'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy)) =\n    {xx, yy}", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. \\<not> atom\n                a \\<sharp> KRP \\<guillemotleft>Var xx\\<guillemotright>\n                            (Var xx) (Var yy)} =\n    {xx, yy}", "by (auto simp: fresh_at_base(2))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SS \\<guillemotleft>\\<phi>\\<guillemotright>\n           \\<guillemotleft>\\<phi>(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>)\\<guillemotright>\n 2. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SyntaxN.All yy\n           (SyntaxN.All yy'\n             (SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy) AND\n              SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy') IMP\n              Var yy EQ Var yy'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. let SS = \\<lambda>t1 t2.\n                psubst\n                 (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                   (Var yy))\n                 [(t1, xx), (t2, yy)]\n    in \\<phi>_ \\<in> UNIV \\<longrightarrow>\n       Fvars \\<phi>_ = {xx} \\<longrightarrow>\n       {} \\<turnstile>\n       SS \\<guillemotleft>\\<phi>_\\<guillemotright>\n        \\<guillemotleft>\\<phi>_(xx::=\\<guillemotleft>\\<phi>_\\<guillemotright>)\\<guillemotright>", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>_ \\<in> UNIV \\<longrightarrow>\n    Fvars \\<phi>_ = {xx} \\<longrightarrow>\n    {} \\<turnstile>\n    psubst (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n     [(\\<guillemotleft>\\<phi>_\\<guillemotright>, xx),\n      (\\<guillemotleft>\\<phi>_(xx::=\\<guillemotleft>\\<phi>_\\<guillemotright>)\\<guillemotright>,\n       yy)]", "by (subst psubst_eq_rawpsubst2)\n      (auto simp: quot_fm_coding prove_KRP Fvars_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       let SS = \\<lambda>t1 t2.\n                   psubst\n                    (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                      (Var yy))\n                    [(t1, xx), (t2, yy)]\n       in \\<phi> \\<in> UNIV \\<longrightarrow>\n          Fvars \\<phi> = {xx} \\<longrightarrow>\n          {} \\<turnstile>\n          SyntaxN.All yy\n           (SyntaxN.All yy'\n             (SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy) AND\n              SS \\<guillemotleft>\\<phi>\\<guillemotright> (Var yy') IMP\n              Var yy EQ Var yy'))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. let SS = \\<lambda>t1 t2.\n                psubst\n                 (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx)\n                   (Var yy))\n                 [(t1, xx), (t2, yy)]\n    in \\<phi>_ \\<in> UNIV \\<longrightarrow>\n       Fvars \\<phi>_ = {xx} \\<longrightarrow>\n       {} \\<turnstile>\n       SyntaxN.All yy\n        (SyntaxN.All yy'\n          (SS \\<guillemotleft>\\<phi>_\\<guillemotright> (Var yy) AND\n           SS \\<guillemotleft>\\<phi>_\\<guillemotright> (Var yy') IMP\n           Var yy EQ Var yy'))", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>_ \\<in> UNIV \\<longrightarrow>\n    Fvars \\<phi>_ = {xx} \\<longrightarrow>\n    {} \\<turnstile>\n    SyntaxN.All yy\n     (SyntaxN.All yy'\n       (psubst\n         (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n         [(\\<guillemotleft>\\<phi>_\\<guillemotright>, xx), (Var yy, yy)] AND\n        psubst\n         (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n         [(\\<guillemotleft>\\<phi>_\\<guillemotright>, xx), (Var yy', yy)] IMP\n        Var yy EQ Var yy'))", "by (subst (1 2) psubst_eq_rawpsubst2)\n      (auto simp: quot_fm_coding KRP_unique[THEN Sym] Fvars_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation g2: Goedel_Second_Assumptions where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\"\n  and enc = \"quot\"\n  and S = \"KRP (quot (Var xx)) (Var xx) (Var yy)\"\n  and P = \"PfP (Var xx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Second_Assumptions UNIV UNIV UNIV Var Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u))\n     {t. ground t} (EQ) (AND) (IMP) SyntaxN.All SyntaxN.Ex\n     ((\\<turnstile>) {}) ((\\<turnstile>) {}) quot\n     (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n     (PfP (Var xx)) Fls", "apply unfold_locales"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<chi> = {}\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright> AND\n                         PP \\<guillemotleft>\\<phi> IMP\n      \\<chi>\\<guillemotright> IMP\n                         PP \\<guillemotleft>\\<chi>\\<guillemotright>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright> IMP\n                         PP \\<guillemotleft>PP\n       \\<guillemotleft>\\<phi>\\<guillemotright>\\<guillemotright>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     Fvars \\<chi>_ = {}\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      PP \\<guillemotleft>\\<phi>_\\<guillemotright> AND\n                      PP \\<guillemotleft>\\<phi>_ IMP\n   \\<chi>_\\<guillemotright> IMP\n                      PP \\<guillemotleft>\\<chi>_\\<guillemotright>", "by (auto simp: PP_def intro: PfP_implies_ModPon_PfP_quot)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright> IMP\n                         PP \\<guillemotleft>PP\n       \\<guillemotleft>\\<phi>\\<guillemotright>\\<guillemotright>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {}\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      PP \\<guillemotleft>\\<phi>_\\<guillemotright> IMP\n                      PP \\<guillemotleft>PP\n    \\<guillemotleft>\\<phi>_\\<guillemotright>\\<guillemotright>", "by (auto simp: PP_def quot_fm_coding Provability)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem Goedel_II: \"\\<not> {} \\<turnstile> Fls \\<Longrightarrow> \\<not> {} \\<turnstile> neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Fls \\<Longrightarrow>\n    \\<not> {} \\<turnstile> neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "by (rule g2.goedel_second[unfolded consistent_def PP_def PfP_subst subst.simps simp_thms if_True])"], ["", "lemma ground_fm_PrfP[simp]:\n  \"ground_fm (PrfP s k t) \\<longleftrightarrow> ground s \\<and> ground k \\<and> ground t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_fm (PrfP s k t) = (ground s \\<and> ground k \\<and> ground t)", "by (auto simp add: ground_aux_def ground_fm_aux_def supp_conv_fresh)"], ["", "lemma Fvars_HPair[simp]: \"Fvars (HPair t u) = Fvars t \\<union> Fvars u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (HPair t u) = Fvars t \\<union> Fvars u", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. \\<not> atom a \\<sharp> HPair t u} =\n    {a. \\<not> atom a \\<sharp> t} \\<union> {a. \\<not> atom a \\<sharp> u}", "by auto"], ["", "lemma ground_HPair[simp]: \"ground (HPair t u) \\<longleftrightarrow> ground t \\<and> ground u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground (HPair t u) = (ground t \\<and> ground u)", "unfolding ground_Fvars"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Fvars (HPair t u) = {}) = (Fvars t = {} \\<and> Fvars u = {})", "by auto"], ["", "interpretation dwfd: Deduct2_with_False_Disj where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and dsj = \"(OR)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deduct2_with_False_Disj UNIV UNIV UNIV Var Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u)) (EQ)\n     (AND) (IMP) SyntaxN.All SyntaxN.Ex Fls (OR) {t. ground t}\n     ((\\<turnstile>) {}) ((\\<turnstile>) {})", "apply unfold_locales"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<phi> OR \\<chi> \\<in> UNIV\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> OR \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 3. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> OR \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) OR \\<chi>(x::=t)\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<phi> OR \\<chi>\n 5. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi> IMP \\<phi> OR \\<chi>\n 6. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> \\<phi>_ OR \\<chi>_ \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> Fvars (\\<phi> OR \\<chi>) =\n                         Fvars \\<phi> \\<union> Fvars \\<chi>\n 2. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> OR \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) OR \\<chi>(x::=t)\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<phi> OR \\<chi>\n 4. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi> IMP \\<phi> OR \\<chi>\n 5. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> Fvars (\\<phi>_ OR \\<chi>_) =\n                      Fvars \\<phi>_ \\<union> Fvars \\<chi>_", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x \\<phi> \\<chi> t.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV; t \\<in> UNIV;\n        x \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> OR \\<chi>)(x::=t) =\n                         \\<phi>(x::=t) OR \\<chi>(x::=t)\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<phi> OR \\<chi>\n 3. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi> IMP \\<phi> OR \\<chi>\n 4. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV; t_ \\<in> UNIV;\n     x_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> (\\<phi>_ OR \\<chi>_)(x_::=t_) =\n                      \\<phi>_(x_::=t_) OR \\<chi>_(x_::=t_)", "by simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi> IMP \\<phi> OR \\<chi>\n 2. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi> IMP \\<phi> OR \\<chi>\n 3. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_ IMP \\<phi>_ OR \\<chi>_", "by (auto intro: Disj_I1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<chi> IMP \\<phi> OR \\<chi>\n 2. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<chi>_ IMP \\<phi>_ OR \\<chi>_", "by (auto intro: Disj_I2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<chi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<chi> \\<in> UNIV;\n        \\<psi> \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         (\\<phi> IMP \\<psi>) IMP\n                         (\\<chi> IMP \\<psi>) IMP \\<phi> OR \\<chi> IMP \\<psi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<chi>_ \\<in> UNIV;\n     \\<psi>_ \\<in> UNIV\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      (\\<phi>_ IMP \\<psi>_) IMP\n                      (\\<chi>_ IMP \\<psi>_) IMP\n                      \\<phi>_ OR \\<chi>_ IMP \\<psi>_", "by (auto intro: ContraAssume)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation Minimal_Truth_Soundness where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and dsj = \"(OR)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and isTrue = \"eval_fm e0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Minimal_Truth_Soundness UNIV UNIV UNIV Var Fvars\n     (\\<lambda>t u x. subst x u t) Fvars (\\<lambda>A u x. A(x::=u)) (EQ)\n     (AND) (IMP) SyntaxN.All SyntaxN.Ex Fls (OR) {t. ground t}\n     ((\\<turnstile>) {}) (eval_fm e0)", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<not> eval_fm e0 Fls\n 2. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<psi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<psi> = {}; eval_fm e0 \\<phi>;\n        eval_fm e0 (\\<phi> IMP \\<psi>)\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<psi>\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> eval_fm e0 Fls", "by (auto simp: Fls_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<psi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<psi> = {}; eval_fm e0 \\<phi>;\n        eval_fm e0 (\\<phi> IMP \\<psi>)\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<psi>\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<psi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     Fvars \\<psi>_ = {}; eval_fm e0 \\<phi>_;\n     eval_fm e0 (\\<phi>_ IMP \\<psi>_)\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<psi>_", "by simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {x_};\n     \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>_(x_::=n))\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 (SyntaxN.All x_ \\<phi>_)", "by (auto simp only: ex_eval_fm_iff_exists_tm eval_fm.simps(4) subst_fm.simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {x_};\n     eval_fm e0 (SyntaxN.Ex x_ \\<phi>_)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                         eval_fm e0 (\\<phi>_(x_::=n))", "by (auto simp only: ex_eval_fm_iff_exists_tm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {}\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<phi>_ \\<or> eval_fm e0 (neg \\<phi>_)", "by (simp add: neg_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<phi>_", "by (auto dest: hfthm_sound)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma neg_Neg:\n  \"{} \\<turnstile> neg \\<phi> IFF Neg \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> neg \\<phi> IFF Neg \\<phi>", "unfolding neg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> (\\<phi> IMP Fls) IFF Neg \\<phi>", "by (auto simp: Fls_def intro: ContraAssume)"], ["", "lemma ground_aux_mono: \"A \\<subseteq> B \\<Longrightarrow> ground_aux t A \\<Longrightarrow> ground_aux t B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; ground_aux t A\\<rbrakk>\n    \\<Longrightarrow> ground_aux t B", "unfolding ground_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; supp t \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> supp t \\<subseteq> B", "by auto"], ["", "interpretation g1: Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and dsj = \"(OR)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\"\n  and enc = \"quot\"\n  and S = \"KRP (quot (Var xx)) (Var xx) (Var yy)\"\n  and P = \"PfP (Var xx)\"\n  and isTrue = \"eval_fm e0\"\n  and Pf = \"Ex xx' (Ex yy' (Var yy EQ HPair (Var xx') (Var yy') AND PrfP (Var xx') (Var yy') (Var xx)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical UNIV\n     UNIV UNIV Var Fvars (\\<lambda>t u x. subst x u t) Fvars\n     (\\<lambda>A u x. A(x::=u)) (EQ) (AND) (IMP) SyntaxN.All SyntaxN.Ex Fls\n     (OR) {t. ground t} ((\\<turnstile>) {}) ((\\<turnstile>) {}) quot\n     (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n     (eval_fm e0) (PfP (Var xx))\n     (SyntaxN.Ex xx'\n       (SyntaxN.Ex yy'\n         (Var yy EQ HPair (Var xx') (Var yy') AND\n          PrfP (Var xx') (Var yy') (Var xx))))", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. SyntaxN.Ex xx'\n     (SyntaxN.Ex yy'\n       (Var yy EQ HPair (Var xx') (Var yy') AND\n        PrfP (Var xx') (Var yy') (Var xx)))\n    \\<in> UNIV\n 2. Fvars\n     (SyntaxN.Ex xx'\n       (SyntaxN.Ex yy'\n         (Var yy EQ HPair (Var xx') (Var yy') AND\n          PrfP (Var xx') (Var yy') (Var xx)))) =\n    {yy, xx}\n 3. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow>\n       let PPf =\n             \\<lambda>t1 t2.\n                psubst\n                 (SyntaxN.Ex xx'\n                   (SyntaxN.Ex yy'\n                     (Var yy EQ HPair (Var xx') (Var yy') AND\n                      PrfP (Var xx') (Var yy') (Var xx))))\n                 [(t1, yy), (t2, xx)]\n       in {} \\<turnstile>\n          eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n           (SyntaxN.Ex yy\n             (PPf (Var yy) \\<guillemotleft>\\<phi>\\<guillemotright>))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> PP \\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>\n 5. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n        Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> let PPf =\n                               \\<lambda>t1 t2.\n                                  psubst\n                                   (SyntaxN.Ex xx'\n                                     (SyntaxN.Ex yy'\n (Var yy EQ HPair (Var xx') (Var yy') AND\n  PrfP (Var xx') (Var yy') (Var xx))))\n                                   [(t1, yy), (t2, xx)]\n                         in eval_fm e0\n                             (PPf n\n                               \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                            {} \\<turnstile>\n                            PPf n \\<guillemotleft>\\<phi>\\<guillemotright>\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. SyntaxN.Ex xx'\n     (SyntaxN.Ex yy'\n       (Var yy EQ HPair (Var xx') (Var yy') AND\n        PrfP (Var xx') (Var yy') (Var xx)))\n    \\<in> UNIV", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. Fvars\n     (SyntaxN.Ex xx'\n       (SyntaxN.Ex yy'\n         (Var yy EQ HPair (Var xx') (Var yy') AND\n          PrfP (Var xx') (Var yy') (Var xx)))) =\n    {yy, xx}\n 2. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow>\n       let PPf =\n             \\<lambda>t1 t2.\n                psubst\n                 (SyntaxN.Ex xx'\n                   (SyntaxN.Ex yy'\n                     (Var yy EQ HPair (Var xx') (Var yy') AND\n                      PrfP (Var xx') (Var yy') (Var xx))))\n                 [(t1, yy), (t2, xx)]\n       in {} \\<turnstile>\n          eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n           (SyntaxN.Ex yy\n             (PPf (Var yy) \\<guillemotleft>\\<phi>\\<guillemotright>))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> PP \\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>\n 4. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n        Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> let PPf =\n                               \\<lambda>t1 t2.\n                                  psubst\n                                   (SyntaxN.Ex xx'\n                                     (SyntaxN.Ex yy'\n (Var yy EQ HPair (Var xx') (Var yy') AND\n  PrfP (Var xx') (Var yy') (Var xx))))\n                                   [(t1, yy), (t2, xx)]\n                         in eval_fm e0\n                             (PPf n\n                               \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                            {} \\<turnstile>\n                            PPf n \\<guillemotleft>\\<phi>\\<guillemotright>\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars\n     (SyntaxN.Ex xx'\n       (SyntaxN.Ex yy'\n         (Var yy EQ HPair (Var xx') (Var yy') AND\n          PrfP (Var xx') (Var yy') (Var xx)))) =\n    {yy, xx}", "unfolding Fvars_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. \\<not> atom\n                a \\<sharp> SyntaxN.Ex xx'\n                            (SyntaxN.Ex yy'\n                              (Var yy EQ HPair (Var xx') (Var yy') AND\n                               PrfP (Var xx') (Var yy') (Var xx)))} =\n    {yy, xx}", "by (auto simp: fresh_at_base(2))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<phi>.\n       \\<phi> \\<in> UNIV \\<Longrightarrow>\n       let PPf =\n             \\<lambda>t1 t2.\n                psubst\n                 (SyntaxN.Ex xx'\n                   (SyntaxN.Ex yy'\n                     (Var yy EQ HPair (Var xx') (Var yy') AND\n                      PrfP (Var xx') (Var yy') (Var xx))))\n                 [(t1, yy), (t2, xx)]\n       in {} \\<turnstile>\n          eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n           (SyntaxN.Ex yy\n             (PPf (Var yy) \\<guillemotleft>\\<phi>\\<guillemotright>))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> PP \\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>\n 3. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n        Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> let PPf =\n                               \\<lambda>t1 t2.\n                                  psubst\n                                   (SyntaxN.Ex xx'\n                                     (SyntaxN.Ex yy'\n (Var yy EQ HPair (Var xx') (Var yy') AND\n  PrfP (Var xx') (Var yy') (Var xx))))\n                                   [(t1, yy), (t2, xx)]\n                         in eval_fm e0\n                             (PPf n\n                               \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                            {} \\<turnstile>\n                            PPf n \\<guillemotleft>\\<phi>\\<guillemotright>\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal for \\<phi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    let PPf =\n          \\<lambda>t1 t2.\n             psubst\n              (SyntaxN.Ex xx'\n                (SyntaxN.Ex yy'\n                  (Var yy EQ HPair (Var xx') (Var yy') AND\n                   PrfP (Var xx') (Var yy') (Var xx))))\n              [(t1, yy), (t2, xx)]\n    in {} \\<turnstile>\n       eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n        (SyntaxN.Ex yy\n          (PPf (Var yy) \\<guillemotleft>\\<phi>\\<guillemotright>))", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    {} \\<turnstile>\n    eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n     (SyntaxN.Ex yy\n       (psubst\n         (SyntaxN.Ex xx'\n           (SyntaxN.Ex yy'\n             (Var yy EQ HPair (Var xx') (Var yy') AND\n              PrfP (Var xx') (Var yy') (Var xx))))\n         [(Var yy, yy), (\\<guillemotleft>\\<phi>\\<guillemotright>, xx)]))", "supply PfP.simps[simp del]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    {} \\<turnstile>\n    eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n     (SyntaxN.Ex yy\n       (psubst\n         (SyntaxN.Ex xx'\n           (SyntaxN.Ex yy'\n             (Var yy EQ HPair (Var xx') (Var yy') AND\n              PrfP (Var xx') (Var yy') (Var xx))))\n         [(Var yy, yy), (\\<guillemotleft>\\<phi>\\<guillemotright>, xx)]))", "apply (subst psubst_eq_rawpsubst2)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    SyntaxN.Ex xx'\n     (SyntaxN.Ex yy'\n       (Var yy EQ HPair (Var xx') (Var yy') AND\n        PrfP (Var xx') (Var yy') (Var xx)))\n    \\<in> UNIV\n 2. \\<phi> \\<in> UNIV \\<Longrightarrow> yy \\<in> UNIV\n 3. \\<phi> \\<in> UNIV \\<Longrightarrow> xx \\<in> UNIV\n 4. \\<phi> \\<in> UNIV \\<Longrightarrow> Var yy \\<in> UNIV\n 5. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    \\<guillemotleft>\\<phi>\\<guillemotright> \\<in> UNIV\n 6. \\<phi> \\<in> UNIV \\<Longrightarrow> yy \\<noteq> xx\n 7. \\<phi> \\<in> UNIV \\<Longrightarrow> xx \\<notin> Fvars (Var yy)\n 8. \\<phi> \\<in> UNIV \\<Longrightarrow>\n    {} \\<turnstile>\n    eqv ((PfP (Var xx))(xx::=\\<guillemotleft>\\<phi>\\<guillemotright>))\n     (SyntaxN.Ex yy\n       (rawpsubst\n         (SyntaxN.Ex xx'\n           (SyntaxN.Ex yy'\n             (Var yy EQ HPair (Var xx') (Var yy') AND\n              PrfP (Var xx') (Var yy') (Var xx))))\n         [(Var yy, yy), (\\<guillemotleft>\\<phi>\\<guillemotright>, xx)]))", "apply (simp_all add: PfP.simps[of yy' xx' \"quot \\<phi>\", simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    eqv (SyntaxN.Ex yy'\n          (SyntaxN.Ex xx'\n            (PrfP (Var xx') (Var yy')\n              \\<guillemotleft>\\<phi>\\<guillemotright>)))\n     (SyntaxN.Ex yy\n       (SyntaxN.Ex xx'\n         (SyntaxN.Ex yy'\n           (Var yy EQ HPair (Var xx') (Var yy') AND\n            PrfP (Var xx') (Var yy')\n             \\<guillemotleft>\\<phi>\\<guillemotright>))))", "apply (auto simp: eqv_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy\n     (SyntaxN.Ex xx'\n       (SyntaxN.Ex yy'\n         (Var yy EQ HPair (Var xx') (Var yy') AND\n          PrfP (Var xx') (Var yy')\n           \\<guillemotleft>\\<phi>\\<guillemotright>)))\n 2. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule Ex_I[of _ _ _ \"HPair (Var xx') (Var yy')\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    (SyntaxN.Ex xx'\n      (SyntaxN.Ex yy'\n        (Var yy EQ HPair (Var xx') (Var yy') AND\n         PrfP (Var xx') (Var yy')\n          \\<guillemotleft>\\<phi>\\<guillemotright>)))(yy::=HPair (Var xx')\n                     (Var yy'))\n 2. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (subst subst_fm_Ex_with_renaming[of xx _ xx' yy]; (auto simp: Conj_eqvt))"], ["proof (prove)\ngoal (2 subgoals):\n 1. {PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex xx\n     ((SyntaxN.Ex yy'\n        (Var yy EQ\n         ((xx' \\<leftrightarrow> xx) \\<bullet> HPair (Var xx')\n          (Var yy')) AND\n         ((xx' \\<leftrightarrow> xx) \\<bullet> PrfP (Var xx') (Var yy')\n          \\<guillemotleft>\\<phi>\\<guillemotright>)))(yy::=HPair (Var xx')\n                     (Var yy')))\n 2. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (subst subst_fm_Ex_with_renaming[of zz _ yy' yy]; (auto simp: Conj_eqvt HPair_eqvt PrfP.eqvt))"], ["proof (prove)\ngoal (2 subgoals):\n 1. {PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex xx\n     (SyntaxN.Ex zz\n       (HPair (Var xx') (Var yy') EQ HPair (Var xx) (Var zz) AND\n        PrfP (Var xx) (Var zz) \\<guillemotleft>\\<phi>\\<guillemotright>))\n 2. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule Ex_I[of _ _ _ \"(Var xx')\"]; auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex zz\n     (HPair (Var xx') (Var yy') EQ HPair (Var xx') (Var zz) AND\n      PrfP (Var xx') (Var zz) \\<guillemotleft>\\<phi>\\<guillemotright>)\n 2. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule Ex_I[of _ _ _ \"(Var yy')\"]; auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex yy'\n     (SyntaxN.Ex xx'\n       (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule Ex_I[of _ _ _ \"(Var yy')\"]; auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Var yy EQ HPair (Var xx') (Var yy'),\n     PrfP (Var xx') (Var yy')\n      \\<guillemotleft>\\<phi>\\<guillemotright>} \\<turnstile>\n    SyntaxN.Ex xx'\n     (PrfP (Var xx') (Var yy') \\<guillemotleft>\\<phi>\\<guillemotright>)", "apply (rule Ex_I[of _ _ _ \"(Var xx')\"]; auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> PP \\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>\n 2. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n        Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> let PPf =\n                               \\<lambda>t1 t2.\n                                  psubst\n                                   (SyntaxN.Ex xx'\n                                     (SyntaxN.Ex yy'\n (Var yy EQ HPair (Var xx') (Var yy') AND\n  PrfP (Var xx') (Var yy') (Var xx))))\n                                   [(t1, yy), (t2, xx)]\n                         in eval_fm e0\n                             (PPf n\n                               \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                            {} \\<turnstile>\n                            PPf n \\<guillemotleft>\\<phi>\\<guillemotright>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> PP \\<guillemotleft>\\<phi>_\\<guillemotright>\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_", "by (auto simp: PP_def proved_iff_proved_PfP[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n        Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> let PPf =\n                               \\<lambda>t1 t2.\n                                  psubst\n                                   (SyntaxN.Ex xx'\n                                     (SyntaxN.Ex yy'\n (Var yy EQ HPair (Var xx') (Var yy') AND\n  PrfP (Var xx') (Var yy') (Var xx))))\n                                   [(t1, yy), (t2, xx)]\n                         in eval_fm e0\n                             (PPf n\n                               \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                            {} \\<turnstile>\n                            PPf n \\<guillemotleft>\\<phi>\\<guillemotright>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal for n \\<phi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> let PPf =\n                            \\<lambda>t1 t2.\n                               psubst\n                                (SyntaxN.Ex xx'\n                                  (SyntaxN.Ex yy'\n                                    (Var yy EQ HPair (Var xx') (Var yy') AND\n                                     PrfP (Var xx') (Var yy') (Var xx))))\n                                [(t1, yy), (t2, xx)]\n                      in eval_fm e0\n                          (PPf n\n                            \\<guillemotleft>\\<phi>\\<guillemotright>) \\<longrightarrow>\n                         {} \\<turnstile>\n                         PPf n \\<guillemotleft>\\<phi>\\<guillemotright>", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0\n                       (psubst\n                         (SyntaxN.Ex xx'\n                           (SyntaxN.Ex yy'\n                             (Var yy EQ HPair (Var xx') (Var yy') AND\n                              PrfP (Var xx') (Var yy') (Var xx))))\n                         [(n, yy),\n                          (\\<guillemotleft>\\<phi>\\<guillemotright>,\n                           xx)]) \\<longrightarrow>\n                      {} \\<turnstile>\n                      psubst\n                       (SyntaxN.Ex xx'\n                         (SyntaxN.Ex yy'\n                           (Var yy EQ HPair (Var xx') (Var yy') AND\n                            PrfP (Var xx') (Var yy') (Var xx))))\n                       [(n, yy),\n                        (\\<guillemotleft>\\<phi>\\<guillemotright>, xx)]", "apply (subst (1 2) psubst_eq_rawpsubst2)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> SyntaxN.Ex xx'\n                       (SyntaxN.Ex yy'\n                         (Var yy EQ HPair (Var xx') (Var yy') AND\n                          PrfP (Var xx') (Var yy') (Var xx)))\n                      \\<in> UNIV\n 2. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> yy \\<in> UNIV\n 3. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> xx \\<in> UNIV\n 4. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> n \\<in> UNIV\n 5. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> \\<guillemotleft>\\<phi>\\<guillemotright> \\<in> UNIV\n 6. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> yy \\<noteq> xx\n 7. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> xx \\<notin> Fvars n\n 8. \\<lbrakk>n \\<in> {t. ground t}; \\<phi> \\<in> UNIV;\n     Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0\n                       (rawpsubst\n                         (SyntaxN.Ex xx'\n                           (SyntaxN.Ex yy'\n                             (Var yy EQ HPair (Var xx') (Var yy') AND\n                              PrfP (Var xx') (Var yy') (Var xx))))\n                         [(n, yy),\n                          (\\<guillemotleft>\\<phi>\\<guillemotright>,\n                           xx)]) \\<longrightarrow>\n                      {} \\<turnstile>\n                      rawpsubst\n                       (SyntaxN.Ex xx'\n                         (SyntaxN.Ex yy'\n                           (Var yy EQ HPair (Var xx') (Var yy') AND\n                            PrfP (Var xx') (Var yy') (Var xx))))\n                       [(n, yy),\n                        (\\<guillemotleft>\\<phi>\\<guillemotright>, xx)]", "apply (simp_all add: ground_Fvars)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Fvars n = {}; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x xa.\n                          \\<lbrakk>n\\<rbrakk>e0 =\n                          \\<langle>x, xa\\<rangle> \\<and>\n                          Prf x xa\n                           \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0) \\<longrightarrow>\n                      {} \\<turnstile>\n                      SyntaxN.Ex xx'\n                       (SyntaxN.Ex yy'\n                         (n EQ HPair (Var xx') (Var yy') AND\n                          PrfP (Var xx') (Var yy')\n                           \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Fvars n = {}; Fvars \\<phi> = {};\n     \\<exists>x xa.\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle> \\<and>\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      SyntaxN.Ex xx'\n                       (SyntaxN.Ex yy'\n                         (n EQ HPair (Var xx') (Var yy') AND\n                          PrfP (Var xx') (Var yy')\n                           \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (rule Sigma_fm_imp_thm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Fvars n = {}; Fvars \\<phi> = {};\n     \\<exists>x xa.\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle> \\<and>\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n    \\<Longrightarrow> Sigma_fm\n                       (SyntaxN.Ex xx'\n                         (SyntaxN.Ex yy'\n                           (n EQ HPair (Var xx') (Var yy') AND\n                            PrfP (Var xx') (Var yy')\n                             \\<guillemotleft>\\<phi>\\<guillemotright>)))\n 2. \\<lbrakk>Fvars n = {}; Fvars \\<phi> = {};\n     \\<exists>x xa.\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle> \\<and>\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n    \\<Longrightarrow> ground_fm\n                       (SyntaxN.Ex xx'\n                         (SyntaxN.Ex yy'\n                           (n EQ HPair (Var xx') (Var yy') AND\n                            PrfP (Var xx') (Var yy')\n                             \\<guillemotleft>\\<phi>\\<guillemotright>)))\n 3. \\<lbrakk>Fvars n = {}; Fvars \\<phi> = {};\n     \\<exists>x xa.\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle> \\<and>\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0\n                       (SyntaxN.Ex xx'\n                         (SyntaxN.Ex yy'\n                           (n EQ HPair (Var xx') (Var yy') AND\n                            PrfP (Var xx') (Var yy')\n                             \\<guillemotleft>\\<phi>\\<guillemotright>)))", "apply (auto simp: ground_Fvars[symmetric] elim: ground_aux_mono[OF empty_subsetI])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>ground n; Fvars \\<phi> = {};\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle>;\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n       \\<Longrightarrow> ground_aux (HPair (Var xx') (Var yy'))\n                          {atom yy', atom xx'}\n 2. \\<And>x xa.\n       \\<lbrakk>ground n; Fvars \\<phi> = {};\n        \\<lbrakk>n\\<rbrakk>e0 = \\<langle>x, xa\\<rangle>;\n        Prf x xa\n         \\<lbrakk>\\<guillemotleft>\\<phi>\\<guillemotright>\\<rbrakk>e0\\<rbrakk>\n       \\<Longrightarrow> ground_fm_aux\n                          (PrfP (Var xx') (Var yy')\n                            \\<guillemotleft>\\<phi>\\<guillemotright>)\n                          {atom yy', atom xx'}", "apply (auto simp: ground_aux_def ground_fm_aux_def supp_conv_fresh fresh_at_base Fvars_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in {} \\<turnstile>\n           neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile>\n                         PP \\<guillemotleft>\\<phi>\\<guillemotright>", "subgoal for \\<phi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n     let PP = subst_fm (PfP (Var xx)) xx\n     in {} \\<turnstile>\n        neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      PP \\<guillemotleft>\\<phi>\\<guillemotright>", "apply (rule NegNeg_D)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n     let PP = subst_fm (PfP (Var xx)) xx\n     in {} \\<turnstile>\n        neg (neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile>\n                      Neg (Neg (PP \\<guillemotleft>\\<phi>\\<guillemotright>))", "apply (auto simp: PP_def dest!: Iff_MP_same[OF neg_Neg] Iff_MP_same[OF Neg_cong[OF neg_Neg]])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem Goedel_I: \"\\<exists>\\<phi>. \\<not> {} \\<turnstile> \\<phi> \\<and> \\<not> {} \\<turnstile> Neg \\<phi> \\<and> eval_fm e0 \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<not> {} \\<turnstile> \\<phi> \\<and>\n       \\<not> {} \\<turnstile> Neg \\<phi> \\<and> eval_fm e0 \\<phi>", "by (meson Iff_MP2_same g1.recover_proofs.goedel_first_classic_strong[OF consistent] neg_Neg)"], ["", "text \\<open>\nThe following interpretation is redundant, because\n@{locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical} (interpreted above)\nis a sublocale of @{locale Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP}.\nHowever, the latter requires less infrastructure (no Pf formula).\n\nThe definition of isTrue prevents Isabelle from noticing that the locale has already been\ninterpreted via the above g1 interpretation of\n@{locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical}.\n\\<close>"], ["", "definition isTrue where\n  \"isTrue = eval_fm e0\""], ["", "interpretation g1': Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP where\n      var = \"UNIV :: name set\"\n  and trm = \"UNIV :: tm set\"\n  and fmla = \"UNIV :: fm set\"\n  and num = \"{t. ground t}\"\n  and Var = Var\n  and FvarsT = Fvars\n  and substT = \"\\<lambda>t u x. subst x u t\"\n  and Fvars = Fvars\n  and subst = \"\\<lambda>A u x. subst_fm A x u\"\n  and eql = \"(EQ)\"\n  and cnj = \"(AND)\"\n  and dsj = \"(OR)\"\n  and imp = \"(IMP)\"\n  and all = \"All\"\n  and exi = \"Ex\"\n  and fls = \"Fls\"\n  and prv = \"(\\<turnstile>) {}\"\n  and bprv = \"(\\<turnstile>) {}\"\n  and enc = \"quot\"\n  and S = \"KRP (quot (Var xx)) (Var xx) (Var yy)\"\n  and P = \"PfP (Var xx)\"\n  and isTrue = \"isTrue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP UNIV UNIV\n     UNIV Var {t. ground t} Fvars (\\<lambda>t u x. subst x u t) Fvars\n     (\\<lambda>A u x. A(x::=u)) (EQ) (AND) (OR) (IMP) SyntaxN.All SyntaxN.Ex\n     Fls ((\\<turnstile>) {}) ((\\<turnstile>) {}) quot\n     (KRP \\<guillemotleft>Var xx\\<guillemotright> (Var xx) (Var yy))\n     (PfP (Var xx)) isTrue", "apply unfold_locales"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<not> isTrue Fls\n 2. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<psi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<psi> = {}; isTrue \\<phi>;\n        isTrue (\\<phi> IMP \\<psi>)\\<rbrakk>\n       \\<Longrightarrow> isTrue \\<psi>\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. isTrue (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> isTrue (SyntaxN.All x \\<phi>)\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        isTrue (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            isTrue (\\<phi>(x::=n))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue \\<phi> \\<or> isTrue (neg \\<phi>)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> isTrue \\<phi>\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in isTrue (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "unfolding isTrue_def"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<not> eval_fm e0 Fls\n 2. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<psi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<psi> = {}; eval_fm e0 \\<phi>;\n        eval_fm e0 (\\<phi> IMP \\<psi>)\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<psi>\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 4. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 7. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> eval_fm e0 Fls", "by (auto simp: Fls_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; \\<psi> \\<in> UNIV; Fvars \\<phi> = {};\n        Fvars \\<psi> = {}; eval_fm e0 \\<phi>;\n        eval_fm e0 (\\<phi> IMP \\<psi>)\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<psi>\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 3. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 6. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; \\<psi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     Fvars \\<psi>_ = {}; eval_fm e0 \\<phi>_;\n     eval_fm e0 (\\<phi>_ IMP \\<psi>_)\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<psi>_", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>(x::=n))\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 (SyntaxN.All x \\<phi>)\n 2. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 5. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {x_};\n     \\<forall>n\\<in>{t. ground t}. eval_fm e0 (\\<phi>_(x_::=n))\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 (SyntaxN.All x_ \\<phi>_)", "by (auto simp only: ex_eval_fm_iff_exists_tm eval_fm.simps(4) subst_fm.simps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x \\<phi>.\n       \\<lbrakk>x \\<in> UNIV; \\<phi> \\<in> UNIV; Fvars \\<phi> = {x};\n        eval_fm e0 (SyntaxN.Ex x \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                            eval_fm e0 (\\<phi>(x::=n))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 4. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> UNIV; \\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {x_};\n     eval_fm e0 (SyntaxN.Ex x_ \\<phi>_)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n\\<in>{t. ground t}.\n                         eval_fm e0 (\\<phi>_(x_::=n))", "by (auto simp only: ex_eval_fm_iff_exists_tm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi> \\<or> eval_fm e0 (neg \\<phi>)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {}\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<phi>_ \\<or> eval_fm e0 (neg \\<phi>_)", "by (simp add: neg_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        {} \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> eval_fm e0 \\<phi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     {} \\<turnstile> \\<phi>_\\<rbrakk>\n    \\<Longrightarrow> eval_fm e0 \\<phi>_", "by (auto dest: hfthm_sound)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> UNIV; Fvars \\<phi> = {};\n        let PP = subst_fm (PfP (Var xx)) xx\n        in eval_fm e0 (PP \\<guillemotleft>\\<phi>\\<guillemotright>)\\<rbrakk>\n       \\<Longrightarrow> {} \\<turnstile> \\<phi>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi>_ \\<in> UNIV; Fvars \\<phi>_ = {};\n     let PP = subst_fm (PfP (Var xx)) xx\n     in eval_fm e0 (PP \\<guillemotleft>\\<phi>_\\<guillemotright>)\\<rbrakk>\n    \\<Longrightarrow> {} \\<turnstile> \\<phi>_", "by (auto simp: proved_iff_proved_PfP[symmetric] PP_def quot_fm_coding\n        simp del: eval_fm_PfP\n        dest!: Iff_MP_same[OF neg_Neg] Iff_MP_same[OF Neg_cong[OF neg_Neg]] NegNeg_D\n        Sigma_fm_imp_thm[rotated 2])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem Goedel_I': \"\\<exists>\\<phi>. \\<not> {} \\<turnstile> \\<phi> \\<and> \\<not> {} \\<turnstile> Neg \\<phi> \\<and> isTrue \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<not> {} \\<turnstile> \\<phi> \\<and>\n       \\<not> {} \\<turnstile> Neg \\<phi> \\<and> isTrue \\<phi>", "by (meson Iff_MP2_same g1'.goedel_first_classic_strong[OF consistent] neg_Neg)"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}