{"file_name": "/home/qj213/afp-2021-10-22/thys/Euler_MacLaurin/Euler_MacLaurin_Landau.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Euler_MacLaurin", "problem_names": ["lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> 0) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative -g' x) (at x)\"\n  shows   EM_remainder_strong_bigo_int: \"(\\<lambda>x::int. norm (EM_remainder n f x)) \\<in> O(g)\"\n    and   EM_remainder_strong_bigo_nat: \"(\\<lambda>x::nat. norm (EM_remainder n f x)) \\<in> O(g)\"", "lemma harm_remainder_bigo:\n  assumes \"N > 0\"\n  shows   \"harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))\"", "lemma harm_expansion_bigo:\n  fixes N :: nat\n  defines \"T \\<equiv> \\<lambda>n. ln n + euler_mascheroni + 1 / (2*n) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / ((2*i) * n ^ (2*i)))\"\n  defines \"S \\<equiv> (\\<lambda>n. bernoulli (2*(Suc N)) / ((2*Suc N) * real n ^ (2*Suc N)))\"\n  shows \"(\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\"", "lemma harm_expansion_bigo_simple1:\n  \"(\\<lambda>n. harm n - (ln n + euler_mascheroni + 1 / (2 * n))) \\<in> O(\\<lambda>n. 1 / n ^ 2)\"", "lemma harm_expansion_bigo_simple2:\n  \"(\\<lambda>n. harm n - (ln n + euler_mascheroni)) \\<in> O(\\<lambda>n. 1 / n)\"", "lemma harm_expansion_bigo_simple':\n  \"harm =o (\\<lambda>n. ln n + euler_mascheroni + 1 / (2 * n)) +o O(\\<lambda>n. 1 / n ^ 2)\"", "lemma sum_inverse_squares_remainder_bigo:\n  assumes \"N > 0\"\n  shows   \"R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\"", "lemma sum_inverse_squares_expansion_bigo:\n  fixes N :: nat\n  defines \"T \\<equiv> \\<lambda>n. pi ^ 2 / 6 - 1 / n + 1 / (2*n ^ 2) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / (n ^ (2*i+1)))\"\n  defines \"S \\<equiv> (\\<lambda>n. bernoulli (2*(Suc N)) / (real n ^ (2*N+3)))\"\n  shows \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2) - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\"", "lemma sum_inverse_squares_expansion_bigo_simple:\n  \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2) - (pi ^ 2 / 6 - 1 / n + 1 / (2*n^2))) \\<in> O(\\<lambda>n. 1 / n ^ 3)\"", "lemma sum_inverse_squares_expansion_bigo_simple':\n  \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2)) =o (\\<lambda>n. pi ^ 2 / 6 - 1 / n + 1 / (2*n^2)) +o O(\\<lambda>n. 1 / n^3)\""], "translations": [["", "lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> 0) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative -g' x) (at x)\"\n  shows   EM_remainder_strong_bigo_int: \"(\\<lambda>x::int. norm (EM_remainder n f x)) \\<in> O(g)\"\n    and   EM_remainder_strong_bigo_nat: \"(\\<lambda>x::nat. norm (EM_remainder n f x)) \\<in> O(g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x)) &&&\n    (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x))\n 2. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "from bounded_pbernpoly[of n]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain D where D: \"\\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x))\n 2. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "from norm_EM_remainder_le_strong_int'[OF fin D assms(2-)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. a \\<le> x \\<Longrightarrow> a \\<le> x;\n   \\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> x \\<in> {a..} - Y\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x.\n                       a \\<le> real_of_int x \\<longrightarrow>\n                       norm (EM_remainder n f x)\n                       \\<le> D / fact n * g (real_of_int x)", "have *: \"\\<And>x. x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * g x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. a \\<le> x \\<Longrightarrow> a \\<le> x;\n   \\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> x \\<in> {a..} - Y\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x.\n                       a \\<le> real_of_int x \\<longrightarrow>\n                       norm (EM_remainder n f x)\n                       \\<le> D / fact n * g (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)", "by auto"], ["proof (state)\nthis:\n  a \\<le> real_of_int ?x \\<longrightarrow>\n  norm (EM_remainder n f ?x) \\<le> D / fact n * g (real_of_int ?x)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x))\n 2. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "have **: \"eventually (\\<lambda>x::int. norm (EM_remainder n f x) \\<le> abs (D / fact n) * abs (g x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "using eventually_ge_at_top[of \"ceiling a\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) \\<lceil>a\\<rceil>) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "case (elim x)"], ["proof (state)\nthis:\n  \\<lceil>a\\<rceil> \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "with *[of x]"], ["proof (chain)\npicking this:\n  a \\<le> real_of_int x \\<longrightarrow>\n  norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n  \\<lceil>a\\<rceil> \\<le> x", "have \"norm (EM_remainder n f x) \\<le> D / fact n * g x\""], ["proof (prove)\nusing this:\n  a \\<le> real_of_int x \\<longrightarrow>\n  norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n  \\<lceil>a\\<rceil> \\<le> x\n\ngoal (1 subgoal):\n 1. norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)", "by (simp add: ceiling_le_iff)"], ["proof (state)\nthis:\n  norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "also"], ["proof (state)\nthis:\n  norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "have \"\\<dots> \\<le> abs (D / fact n * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D / fact n * g (real_of_int x)\n    \\<le> \\<bar>D / fact n * g (real_of_int x)\\<bar>", "by (rule abs_ge_self)"], ["proof (state)\nthis:\n  D / fact n * g (real_of_int x)\n  \\<le> \\<bar>D / fact n * g (real_of_int x)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "also"], ["proof (state)\nthis:\n  D / fact n * g (real_of_int x)\n  \\<le> \\<bar>D / fact n * g (real_of_int x)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "have \"\\<dots> = abs (D / fact n) * abs (g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>D / fact n * g (real_of_int x)\\<bar> =\n    \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>D / fact n * g (real_of_int x)\\<bar> =\n  \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lceil>a\\<rceil> \\<le> x \\<Longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "finally"], ["proof (chain)\npicking this:\n  norm (EM_remainder n f x)\n  \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "show ?case"], ["proof (prove)\nusing this:\n  norm (EM_remainder n f x)\n  \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>\n\ngoal (1 subgoal):\n 1. norm (EM_remainder n f x)\n    \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>", "."], ["proof (state)\nthis:\n  norm (EM_remainder n f x)\n  \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (EM_remainder n f x)\n     \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x))\n 2. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "thus \"(\\<lambda>x::int. norm (EM_remainder n f x)) \\<in> O(g)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (EM_remainder n f x)\n     \\<le> \\<bar>D / fact n\\<bar> * \\<bar>g (real_of_int x)\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f x))\n    \\<in> O(\\<lambda>x. g (real_of_int x))", "by (intro bigoI[of _ \"abs D / fact n\"]) (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (EM_remainder n f x))\n  \\<in> O(\\<lambda>x. g (real_of_int x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "hence \"(\\<lambda>x::nat. norm (EM_remainder n f (int x))) \\<in> O(\\<lambda>x. g (of_int (int x)))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. norm (EM_remainder n f x))\n  \\<in> O(\\<lambda>x. g (real_of_int x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real_of_int (int x)))", "by (rule landau_o.big.compose) (fact filterlim_int_sequentially)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (EM_remainder n f (int x)))\n  \\<in> O(\\<lambda>x. g (real_of_int (int x)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "thus \"(\\<lambda>x::nat. norm (EM_remainder n f x)) \\<in> O(g)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. norm (EM_remainder n f (int x)))\n  \\<in> O(\\<lambda>x. g (real_of_int (int x)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (EM_remainder n f (int x)))\n    \\<in> O(\\<lambda>x. g (real x))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (EM_remainder n f (int x)))\n  \\<in> O(\\<lambda>x. g (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Asymptotic expansion of the harmonic numbers\\<close>"], ["", "text \\<open>\n  We can now show the asymptotic expansion\n  \\[H_n = \\ln n + \\gamma + \\frac{1}{2n} - \\sum_{i=1}^m \\frac{B_{2i}}{2i} n^{-2i} + O(n^{-2m-2})\\]\n\\<close>"], ["", "lemma harm_remainder_bigo:\n  assumes \"N > 0\"\n  shows   \"harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))", "from harm_remainder_bound[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     \\<forall>n\\<ge>1.\n        norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "guess C"], ["proof (prove)\nusing this:\n  \\<exists>C.\n     \\<forall>n\\<ge>1.\n        norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  \\<forall>n\\<ge>1. norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)\n\ngoal (1 subgoal):\n 1. harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>1. norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)\n\ngoal (1 subgoal):\n 1. harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))", "by (intro bigoI[of _ C] eventually_mono[OF eventually_ge_at_top[of 1]]) auto"], ["proof (state)\nthis:\n  harm_remainder N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_expansion_bigo:\n  fixes N :: nat\n  defines \"T \\<equiv> \\<lambda>n. ln n + euler_mascheroni + 1 / (2*n) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / ((2*i) * n ^ (2*i)))\"\n  defines \"S \\<equiv> (\\<lambda>n. bernoulli (2*(Suc N)) / ((2*Suc N) * real n ^ (2*Suc N)))\"\n  shows \"(\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "have \"(\\<lambda>n. harm n - T n) \\<in> \\<Theta>(\\<lambda>n. -S n - harm_remainder (Suc N) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n)\n    \\<in> \\<Theta>(\\<lambda>n. - S n - harm_remainder (Suc N) n)", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of \"0::nat\"]]) \n       (auto simp: T_def harm_expansion[of _ \"Suc N\"] S_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - T n)\n  \\<in> \\<Theta>(\\<lambda>n. - S n - harm_remainder (Suc N) n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - T n)\n  \\<in> \\<Theta>(\\<lambda>n. - S n - harm_remainder (Suc N) n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "have \"(\\<lambda>n. -S n - harm_remainder (Suc N) n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - S n - harm_remainder (Suc N) n)\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "proof (intro sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n 2. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "show \"(\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        - (bernoulli (2 * Suc N) /\n           (real (2 * Suc N) * real x ^ (2 * Suc N))))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "by (rule landau_o.big.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "have \"harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))", "by (rule harm_remainder_bigo) simp_all"], ["proof (state)\nthis:\n  harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))\n\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "also"], ["proof (state)\nthis:\n  harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))\n\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "have \"(\\<lambda>n. 1 / real n ^ (2 * Suc N + 1)) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "by (rule landau_o.big.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / real n ^ (2 * Suc N + 1))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "finally"], ["proof (chain)\npicking this:\n  harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "show \"harm_remainder (Suc N) \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "."], ["proof (state)\nthis:\n  harm_remainder (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. - S n - harm_remainder (Suc N) n)\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "."], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_expansion_bigo_simple1:\n  \"(\\<lambda>n. harm n - (ln n + euler_mascheroni + 1 / (2 * n))) \\<in> O(\\<lambda>n. 1 / n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n    \\<in> O(\\<lambda>n. 1 / real (n\\<^sup>2))", "using harm_expansion_bigo[of 0]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      harm n -\n      (ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n       (\\<Sum>i = 1..0. bernoulli (2 * i) / real (2 * i * n ^ (2 * i)))))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * 0 + 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n    \\<in> O(\\<lambda>n. 1 / real (n\\<^sup>2))", "by (simp add: power2_eq_square)"], ["", "lemma harm_expansion_bigo_simple2:\n  \"(\\<lambda>n. harm n - (ln n + euler_mascheroni)) \\<in> O(\\<lambda>n. 1 / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni))\n    \\<in> O(\\<lambda>n. 1 / real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni))\n    \\<in> O(\\<lambda>n. 1 / real n)", "have \"(\\<lambda>n. harm n - (ln n + euler_mascheroni + 1 / (2 * n)) + 1 / (2 * n)) \\<in> O(\\<lambda>n. 1 / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)) +\n        1 / real (2 * n))\n    \\<in> O(\\<lambda>n. 1 / real n)", "proof (rule sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        harm x - (ln (real x) + euler_mascheroni + 1 / real (2 * x)))\n    \\<in> O(\\<lambda>n. 1 / real n)\n 2. (\\<lambda>x. 1 / real (2 * x)) \\<in> O(\\<lambda>n. 1 / real n)", "have \"(\\<lambda>n. harm n - (ln n + euler_mascheroni + 1 / (2 * n))) \\<in> O(\\<lambda>n. 1 / real n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n    \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)", "using harm_expansion_bigo_simple1"], ["proof (prove)\nusing this:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n  \\<in> O(\\<lambda>n. 1 / real (n\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n    \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n  \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        harm x - (ln (real x) + euler_mascheroni + 1 / real (2 * x)))\n    \\<in> O(\\<lambda>n. 1 / real n)\n 2. (\\<lambda>x. 1 / real (2 * x)) \\<in> O(\\<lambda>n. 1 / real n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n  \\<in> O(\\<lambda>n. 1 / (real n)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        harm x - (ln (real x) + euler_mascheroni + 1 / real (2 * x)))\n    \\<in> O(\\<lambda>n. 1 / real n)\n 2. (\\<lambda>x. 1 / real (2 * x)) \\<in> O(\\<lambda>n. 1 / real n)", "have \"(\\<lambda>n. 1 / real n ^ 2) \\<in> O(\\<lambda>n. 1 / real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / (real n)\\<^sup>2) \\<in> O(\\<lambda>n. 1 / real n)", "by (rule landau_o.big.compose[OF _ filterlim_real_sequentially]) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / (real n)\\<^sup>2) \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        harm x - (ln (real x) + euler_mascheroni + 1 / real (2 * x)))\n    \\<in> O(\\<lambda>n. 1 / real n)\n 2. (\\<lambda>x. 1 / real (2 * x)) \\<in> O(\\<lambda>n. 1 / real n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n  \\<in> O(\\<lambda>n. 1 / real n)", "show \"(\\<lambda>n. harm n - (ln n + euler_mascheroni + 1 / (2 * n))) \\<in> O(\\<lambda>n. 1 / n)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / (2 * real n)))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n    \\<in> O(\\<lambda>n. 1 / real n)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / real (2 * x)) \\<in> O(\\<lambda>n. 1 / real n)", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)) +\n      1 / real (2 * n))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni))\n    \\<in> O(\\<lambda>n. 1 / real n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)) +\n      1 / real (2 * n))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni))\n    \\<in> O(\\<lambda>n. 1 / real n)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni))\n  \\<in> O(\\<lambda>n. 1 / real n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_expansion_bigo_simple':\n  \"harm =o (\\<lambda>n. ln n + euler_mascheroni + 1 / (2 * n)) +o O(\\<lambda>n. 1 / n ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm\n    \\<in> (\\<lambda>n. ln (real n) + euler_mascheroni + 1 / real (2 * n)) +o\n          O(\\<lambda>n. 1 / real (n\\<^sup>2))", "using harm_expansion_bigo_simple1"], ["proof (prove)\nusing this:\n  (\\<lambda>n. harm n - (ln (real n) + euler_mascheroni + 1 / real (2 * n)))\n  \\<in> O(\\<lambda>n. 1 / real (n\\<^sup>2))\n\ngoal (1 subgoal):\n 1. harm\n    \\<in> (\\<lambda>n. ln (real n) + euler_mascheroni + 1 / real (2 * n)) +o\n          O(\\<lambda>n. 1 / real (n\\<^sup>2))", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "subsection \\<open>Asymptotic expansion of the sum of inverse squares\\<close>"], ["", "text \\<open>\n  Similarly to before, we show\n  \\[\\sum_{i=1}^n \\frac{1}{i^2} = \\frac{\\pi^2}{6} - \\frac{1}{n} + \\frac{1}{2n^2} - \n     \\sum_{i=1}^m B_{2i} n^{-2i-1} + O(n^{-2m-3})\\]  \n\\<close>"], ["", "context\n  fixes R :: \"nat \\<Rightarrow> nat \\<Rightarrow> real\"\n  defines \"R \\<equiv> (\\<lambda>N n. EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+2) / x ^ (2*N+3)) (int n))\"\nbegin"], ["", "lemma sum_inverse_squares_remainder_bigo:\n  assumes \"N > 0\"\n  shows   \"R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "from sum_inverse_squares_remainder_bound[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>C.\n     \\<forall>n\\<ge>1.\n        norm\n         (EM_remainder (2 * N + 1)\n           (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n))\n        \\<le> C / real n ^ (2 * N + 2)", "guess C"], ["proof (prove)\nusing this:\n  \\<exists>C.\n     \\<forall>n\\<ge>1.\n        norm\n         (EM_remainder (2 * N + 1)\n           (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n))\n        \\<le> C / real n ^ (2 * N + 2)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  \\<forall>n\\<ge>1.\n     norm\n      (EM_remainder (2 * N + 1)\n        (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n))\n     \\<le> C / real n ^ (2 * N + 2)\n\ngoal (1 subgoal):\n 1. R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>1.\n     norm\n      (EM_remainder (2 * N + 1)\n        (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n))\n     \\<le> C / real n ^ (2 * N + 2)\n\ngoal (1 subgoal):\n 1. R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))", "by (intro bigoI[of _ C] eventually_mono[OF eventually_ge_at_top[of 1]]) (auto simp: R_def)"], ["proof (state)\nthis:\n  R N \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_inverse_squares_expansion_bigo:\n  fixes N :: nat\n  defines \"T \\<equiv> \\<lambda>n. pi ^ 2 / 6 - 1 / n + 1 / (2*n ^ 2) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / (n ^ (2*i+1)))\"\n  defines \"S \\<equiv> (\\<lambda>n. bernoulli (2*(Suc N)) / (real n ^ (2*N+3)))\"\n  shows \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2) - T n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have 3: \"3 = Suc (Suc (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = Suc (Suc (Suc 0))", "by simp"], ["proof (state)\nthis:\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2) - T n) \\<in> \\<Theta>(\\<lambda>n. -S n - R (Suc N) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> \\<Theta>(\\<lambda>n. - S n - R (Suc N) n)", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> \\<Theta>(\\<lambda>n.\n                      - S n -\n                      EM_remainder (2 * Suc N + 1)\n                       (\\<lambda>x.\n                           - fact (2 * Suc N + 2) / x ^ (2 * Suc N + 3))\n                       (int n))", "by (intro bigthetaI_cong eventually_mono[OF eventually_gt_at_top[of \"0::nat\"]])\n       (auto simp: T_def sum_inverse_squares_expansion[of _ \"Suc N\"] S_def 3\n             simp del: One_nat_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n  \\<in> \\<Theta>(\\<lambda>n. - S n - R (Suc N) n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n  \\<in> \\<Theta>(\\<lambda>n. - S n - R (Suc N) n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have \"(\\<lambda>n. -S n - R (Suc N) n) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. - S n - R (Suc N) n)\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "proof (intro sum_in_bigo)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n 2. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "show \"(\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. - (bernoulli (2 * Suc N) / real x ^ (2 * N + 3)))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "by (rule landau_o.big.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>x. - S x) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have \"R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 2))", "by (rule sum_inverse_squares_remainder_bigo) simp_all"], ["proof (state)\nthis:\n  R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 2))\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "also"], ["proof (state)\nthis:\n  R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * Suc N + 2))\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have \"2 * Suc N + 2 = 2 * N + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * Suc N + 2 = 2 * N + 4", "by simp"], ["proof (state)\nthis:\n  2 * Suc N + 2 = 2 * N + 4\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "also"], ["proof (state)\nthis:\n  2 * Suc N + 2 = 2 * N + 4\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "have \"(\\<lambda>n. 1 / real n ^ (2 * N + 4)) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 1 / real n ^ (2 * N + 4))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "by (rule landau_o.big.compose[OF _ filterlim_real_sequentially]) simp"], ["proof (state)\nthis:\n  (\\<lambda>n. 1 / real n ^ (2 * N + 4))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "finally"], ["proof (chain)\npicking this:\n  R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "show \"R (Suc N) \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal (1 subgoal):\n 1. R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "."], ["proof (state)\nthis:\n  R (Suc N) \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. - S n - R (Suc N) n)\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n    \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))", "."], ["proof (state)\nthis:\n  (\\<lambda>n. (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) - T (real n))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * N + 3))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_inverse_squares_expansion_bigo_simple:\n  \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2) - (pi ^ 2 / 6 - 1 / n + 1 / (2*n^2))) \\<in> O(\\<lambda>n. 1 / n ^ 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) -\n        (pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2)))\n    \\<in> O(\\<lambda>x. 1 / real x ^ 3)", "using sum_inverse_squares_expansion_bigo[of 0]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) -\n      (pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n       (\\<Sum>i = 1..0. bernoulli (2 * i) / real n ^ (2 * i + 1))))\n  \\<in> O(\\<lambda>n. 1 / real n ^ (2 * 0 + 3))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) -\n        (pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2)))\n    \\<in> O(\\<lambda>x. 1 / real x ^ 3)", "by (simp add: power2_eq_square)"], ["", "lemma sum_inverse_squares_expansion_bigo_simple':\n  \"(\\<lambda>n. (\\<Sum>i=1..n. 1 / real i ^ 2)) =o (\\<lambda>n. pi ^ 2 / 6 - 1 / n + 1 / (2*n^2)) +o O(\\<lambda>n. 1 / n^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i = 1..n. 1 / (real i)\\<^sup>2)\n    \\<in> (\\<lambda>x.\n              pi\\<^sup>2 / 6 - 1 / real x + 1 / (2 * (real x)\\<^sup>2)) +o\n          O(\\<lambda>x. 1 / real x ^ 3)", "using sum_inverse_squares_expansion_bigo_simple"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Sum>i = 1..n. 1 / (real i)\\<^sup>2) -\n      (pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2)))\n  \\<in> O(\\<lambda>x. 1 / real x ^ 3)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i = 1..n. 1 / (real i)\\<^sup>2)\n    \\<in> (\\<lambda>x.\n              pi\\<^sup>2 / 6 - 1 / real x + 1 / (2 * (real x)\\<^sup>2)) +o\n          O(\\<lambda>x. 1 / real x ^ 3)", "by (subst set_minus_plus [symmetric]) (simp_all add: fun_diff_def)"], ["", "end"], ["", "end"]]}