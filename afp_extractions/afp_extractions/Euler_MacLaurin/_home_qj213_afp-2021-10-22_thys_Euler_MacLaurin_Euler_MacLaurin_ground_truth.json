{"file_name": "/home/qj213/afp-2021-10-22/thys/Euler_MacLaurin/Euler_MacLaurin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Euler_MacLaurin", "problem_names": ["lemma pbernpoly_of_int [simp]: \"pbernpoly n (of_int a) = bernoulli n\"", "lemma continuous_on_bernpoly' [continuous_intros]:\n  assumes \"continuous_on A f\"\n  shows   \"continuous_on A (\\<lambda>x. bernpoly n (f x) :: 'a :: real_normed_algebra_1)\"", "lemma sum_atLeastAtMost_int_last:\n  assumes \"a < (b :: int)\"\n  shows   \"sum f {a..b} = sum f {a..<b} + f b\"", "lemma sum_atLeastAtMost_int_head:\n  assumes \"a < (b :: int)\"\n  shows   \"sum f {a..b} = f a + sum f {a<..b}\"", "lemma not_in_nonpos_Reals_imp_add_nonzero:\n  assumes \"z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" \"x \\<ge> 0\"\n  shows   \"z + of_real x \\<noteq> 0\"", "lemma negligible_atLeastAtMostI: \"b \\<le> a \\<Longrightarrow> negligible {a..(b::real)}\"", "lemma integrable_on_negligible: \n \"negligible A \\<Longrightarrow> (f :: 'n :: euclidean_space \\<Rightarrow> 'a :: banach) integrable_on A\"", "lemma Union_atLeastAtMost_real_of_int:\n  assumes \"a < b\" \n  shows   \"(\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) = {real_of_int a..real_of_int b}\"", "lemma EM_remainder_eqI: \n  fixes L\n  assumes \"((\\<lambda>x. EM_remainder' n f b (of_int x)) \\<longlongrightarrow> L) at_top\"\n  shows   \"EM_remainder n f b = L\"", "lemma integrable_EM_remainder'_int:\n  fixes a b :: int and f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes \"continuous_on {of_int a..of_int b} f\"\n  shows   \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\"", "lemma integrable_EM_remainder':\n  fixes a b :: real and f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes \"continuous_on {a..b} f\"\n  shows   \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\"", "lemma EM_remainder'_bounded_linear:\n  assumes \"bounded_linear h\"\n  assumes \"continuous_on {a..b} f\"\n  shows   \"EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)\"", "lemma EM_remainder_converges_of_real:\n  assumes \"EM_remainder_converges n f a\" \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. of_real (f x)) a\"", "lemma EM_remainder_converges_of_real_iff:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. of_real (f x) :: \n            'a :: {banach, real_normed_algebra_1, real_inner}) a \\<longleftrightarrow> EM_remainder_converges n f a\"", "lemma EM_remainder_of_real:\n  assumes \"continuous_on {a..} f\"\n  shows   \"EM_remainder n (\\<lambda>x. of_real (f x) :: \n             'a :: {banach, real_normed_algebra_1, real_inner}) a = \n             of_real (EM_remainder n f a)\"", "lemma EM_remainder'_cong:\n  assumes \"\\<And>x. x \\<in> {a..b} \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\" \"b = b'\"\n  shows   \"EM_remainder' n f a b = EM_remainder' n' g a' b'\"", "lemma EM_remainder_converges_cong:\n  assumes \"\\<And>x. x \\<ge> of_int a \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\"\n  shows   \"EM_remainder_converges n f a = EM_remainder_converges n' g a'\"", "lemma EM_remainder_cong:\n  assumes \"\\<And>x. x \\<ge> of_int a \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\"\n  shows   \"EM_remainder n f a = EM_remainder n' g a'\"", "lemma EM_remainder_converges_cnj: \n  assumes \"continuous_on {a..} f\" and \"EM_remainder_converges n f a\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\"", "lemma EM_remainder_converges_cnj_iff:\n  assumes \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a \\<longleftrightarrow> EM_remainder_converges n f a\"", "lemma EM_remainder_cnj: \n  assumes \"continuous_on {a..} f\"\n  shows   \"EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\"", "lemma EM_remainder'_combine:\n  fixes f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes [continuous_intros]: \"continuous_on {a..c} f\"\n  assumes \"a \\<le> b\" \"b \\<le> c\"\n  shows   \"EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c\"", "lemma uniformly_convergent_EM_remainder':\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b y. y \\<in> A \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>A. norm (f y x) \\<le> g x) at_top\"\n  shows   \"uniformly_convergent_on A (\\<lambda>b s. EM_remainder' n (f s) a b)\"", "lemma uniform_limit_EM_remainder:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b y. y \\<in> A \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>A. norm (f y x) \\<le> g x) at_top\"\n  shows   \"uniform_limit A (\\<lambda>b s. EM_remainder' n (f s) a b) \n             (\\<lambda>s. EM_remainder n (f s) a) sequentially\"", "lemma tendsto_EM_remainder:\n  fixes f :: \"real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b . a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. norm (f x) \\<le> g x) at_top\"\n  shows   \"filterlim (\\<lambda>b. EM_remainder' n f a b) \n             (nhds (EM_remainder n f a)) sequentially\"", "lemma EM_remainder_0 [simp]: \"EM_remainder n (\\<lambda>x. 0) a = 0\"", "lemma holomorphic_EM_remainder':\n  assumes deriv: \n    \"\\<And>z t. z \\<in> U \\<Longrightarrow> t \\<in> {a..x} \\<Longrightarrow> \n       ((\\<lambda>z. f z t) has_field_derivative f' z t) (at z within U)\"\n  assumes int: \"\\<And>b c z e. a \\<le> b \\<Longrightarrow> c \\<le> x \\<Longrightarrow> z \\<in> U \\<Longrightarrow>\n                  (\\<lambda>t. of_real (bernpoly n (t - e)) * f z t) integrable_on {b..c}\"\n  assumes cont: \"continuous_on (U \\<times> {a..x}) (\\<lambda>(z, t). f' z t)\"\n  assumes \"convex U\"\n  shows \"(\\<lambda>s. EM_remainder' n (f s) a x) holomorphic_on U\"", "lemma\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes deriv': \n    \"\\<And>z t x. z \\<in> U \\<Longrightarrow> x \\<ge> a \\<Longrightarrow> t \\<in> {a..x} \\<Longrightarrow> \n       ((\\<lambda>z. f z t) has_field_derivative f' z t) (at z within U)\"\n  assumes cont: \"continuous_on (U \\<times> {of_int a..}) (\\<lambda>(z, t). f' z t)\"\n  assumes int: \"\\<And>b c z e. a \\<le> b \\<Longrightarrow> z \\<in> U \\<Longrightarrow>\n                  (\\<lambda>t. of_real (bernpoly n (t - e)) * f z t) integrable_on {b..c}\"\n  assumes int': \"\\<And>a' b y. y \\<in> U \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>U. norm (f y x) \\<le> g x) at_top\"\n  assumes \"open U\" \n  shows analytic_EM_remainder: \"(\\<lambda>s::complex. EM_remainder n (f s) a) analytic_on U\"\n    and holomorphic_EM_remainder: \"(\\<lambda>s::complex. EM_remainder n (f s) a) holomorphic_on U\"", "lemma\n  diff_sum_integral_has_integral_int:\n    \"((\\<lambda>t. (frac t - 1/2) *\\<^sub>R f' t) has_integral (S - I - (f b - f a) /\\<^sub>R 2)) {a..b}\"", "lemma diff_sum_integral_has_integral_int':\n  \"((\\<lambda>t. pbernpoly 1 t *\\<^sub>R f' t) has_integral (S - I - (f b - f a) /\\<^sub>R 2 )) {a..b}\"", "lemma EM_remainder'_Suc_0: \"EM_remainder' (Suc 0) f' a b = S - I - (f b - f a) /\\<^sub>R 2\"", "lemma EM_remainder'_integral_conv_Suc:\n  shows   \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n              (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R (f b - f a) -\n              integral {a..b} (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R real (Suc n)\"", "lemma EM_remainder'_conv_Suc: \n  \"EM_remainder' n f a b = \n     ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (f b - f a) + \n     EM_remainder' (Suc n) f' a b\"", "lemma\n  shows EM_remainder_converges_iff_Suc_converges:\n          \"EM_remainder_converges n f a \\<longleftrightarrow> EM_remainder_converges (Suc n) f' a\"\n  and   EM_remainder_conv_Suc: \n           \"EM_remainder_converges n f a \\<Longrightarrow> \n              EM_remainder n f a = \n                  ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (C - f a) + \n                  EM_remainder (Suc n) f' a\"", "theorem euler_maclaurin_raw_strong_int:\n  defines \"S \\<equiv> (\\<Sum>i\\<in>{a<..b}. f (of_int i))\"\n  defines \"I \\<equiv> integral {of_int a..of_int b} f\"\n  defines \"c' \\<equiv> \\<lambda>k. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k b - fs k a)\"\n  shows   \"S - I = (\\<Sum>k<N. c' k) + EM_remainder' N (fs N) a b\"", "theorem euler_maclaurin_strong_raw_nat:\n  assumes \"a \\<le> b\" \"0 < N\" \"finite Y\" \"fs 0 = f\"\n    \"(\\<And>k. k \\<le> N \\<Longrightarrow> continuous_on {real a..real b} (fs k))\"\n    \"(\\<And>k x. k < N \\<Longrightarrow> x \\<in> {real a..real b} - Y \\<Longrightarrow>\n       (fs k has_vector_derivative fs (Suc k) x) (at x))\"\n  shows \"(\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n           (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (real b) - fs k (real a))) +\n           EM_remainder' N (fs N) (real a) (real b)\"", "lemma euler_maclaurin_strong_int_aux:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (of_int k))\"\n  shows \"S - F (of_int b) - T (of_int b) = EM_remainder' N (fs N) (of_int a) (of_int b) + (C - C')\"", "lemma EM_remainder_limit:\n  assumes ab: \"a \\<le> b\"\n  defines \"D \\<equiv> EM_remainder' N (fs N) (of_int a) (of_int b)\"\n  shows \"EM_remainder N (fs N) b = C' - D\"\n    and EM_remainder_converges: \"EM_remainder_converges N (fs N) b\"", "theorem euler_maclaurin_strong_int:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (of_int k))\"\n  shows \"S = F (of_int b) + C + T (of_int b) - EM_remainder N (fs N) b\"", "theorem euler_maclaurin_strong_int':\n  assumes \"a \\<le> b\"\n  shows   \"(\\<Sum>k=a..b. f (of_int k)) = \n             F (of_int b) + C + (1 / 2) *\\<^sub>R f (of_int b) +\n             (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (of_int b)) - \n             EM_remainder (2*N+1) (fs (2*N+1)) b\"", "lemma sum_atLeastAtMost_of_int_nat_transfer:\n  \"(\\<Sum>k=int a..int b. f (of_int k)) = (\\<Sum>k=a..b. f (of_nat k))\"", "lemma euler_maclaurin_nat_int_transfer:\n  fixes F and f :: \"real \\<Rightarrow> 'a :: real_normed_vector\"\n  assumes \"((\\<lambda>b. (\\<Sum>k=a..b. f (real k)) - F (real b) - T (real b)) \\<longlongrightarrow> C) at_top\"\n  shows   \"((\\<lambda>b. (\\<Sum>k=int a..b. f (of_int k)) - F (of_int b) - T (of_int b)) \\<longlongrightarrow> C) at_top\"", "theorem euler_maclaurin_strong_nat:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (real k))\"\n  shows \"S = F (real b) + C + (\\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)) - \n               EM_remainder N (fs N) (int b)\"", "theorem euler_maclaurin_strong_nat':\n  assumes \"a \\<le> b\"\n  shows   \"(\\<Sum>k=a..b. f (real k)) = \n             F (real b) + C + (1 / 2) *\\<^sub>R f (real b) +\n             (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (real b)) - \n             EM_remainder (2*N+1) (fs (2*N+1)) b\"", "lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes pbernpoly_bound: \"\\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> C) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative g' x) (at x)\"\n  shows   norm_EM_remainder_le_strong_int:\n            \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * (C - g x)\"\n  and     norm_EM_remainder_le_strong_nat:\n            \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g x)\"", "lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes pbernpoly_bound: \"\\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> 0) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative -g' x) (at x)\"\n  shows   norm_EM_remainder_le_strong_int': \n            \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * g x\"\n    and   norm_EM_remainder_le_strong_nat': \n            \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * g x\"", "lemma norm_EM_remainder'_le:\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes cont_f: \"continuous_on {a..} f\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes f_bigo: \"eventually (\\<lambda>x. norm (f x) \\<le> g' x) at_top\"\n  assumes deriv:  \"eventually (\\<lambda>x. (g has_field_derivative g' x) (at x)) at_top\"\n  obtains C D where\n    \"eventually (\\<lambda>x. norm (EM_remainder' n f a x) \\<le> C + D * g x) at_top\"", "lemma harm_expansion:\n  assumes n: \"n > 0\" and N: \"N > 0\"\n  shows \"harm n = ln n + euler_mascheroni + 1 / (2*n) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / ((2*i) * n ^ (2*i))) - harm_remainder N n\"", "lemma of_nat_ge_1_iff: \"of_nat x \\<ge> (1 :: 'a :: linordered_semidom) \\<longleftrightarrow> x \\<ge> 1\"", "lemma harm_remainder_bound:\n  fixes N :: nat\n  assumes N: \"N > 0\"\n  shows \"\\<exists>C. \\<forall>n\\<ge>1. norm (harm_remainder N n) \\<le> C / real n ^ (2*N+1)\"", "lemma sum_inverse_squares_expansion:\n  assumes n: \"n > 0\" and N: \"N > 0\"\n  shows \"(\\<Sum>k=1..n. 1 / real k ^ 2) = \n            pi ^ 2 / 6 - 1 / real n + 1 / (2 * real n ^ 2) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / n ^ (2*i+1)) - \n                    EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+2) / x ^ (2*N+3)) (int n)\"", "lemma sum_inverse_squares_remainder_bound:\n  fixes N :: nat\n  assumes N: \"N > 0\"\n  defines \"R \\<equiv> (\\<lambda>n. EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+2) / x ^ (2*N+3)) (int n))\"\n  shows   \"\\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2*N+2)\""], "translations": [["", "lemma pbernpoly_of_int [simp]: \"pbernpoly n (of_int a) = bernoulli n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n (real_of_int a) = bernoulli n", "by (simp add: pbernpoly_def)"], ["", "lemma continuous_on_bernpoly' [continuous_intros]:\n  assumes \"continuous_on A f\"\n  shows   \"continuous_on A (\\<lambda>x. bernpoly n (f x) :: 'a :: real_normed_algebra_1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. bernpoly n (f x))", "using continuous_on_compose2[OF continuous_on_bernpoly assms, of UNIV n]"], ["proof (prove)\nusing this:\n  f ` A \\<subseteq> UNIV \\<Longrightarrow>\n  continuous_on A (\\<lambda>x. bernpoly n (f x))\n\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. bernpoly n (f x))", "by auto"], ["", "lemma sum_atLeastAtMost_int_last:\n  assumes \"a < (b :: int)\"\n  shows   \"sum f {a..b} = sum f {a..<b} + f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "from assms"], ["proof (chain)\npicking this:\n  a < b", "have \"{a..b} = insert b {a..<b}\""], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. {a..b} = insert b {a..<b}", "by auto"], ["proof (state)\nthis:\n  {a..b} = insert b {a..<b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "also"], ["proof (state)\nthis:\n  {a..b} = insert b {a..<b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "have \"sum f \\<dots> = sum f {a..<b} + f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (insert b {a..<b}) = sum f {a..<b} + f b", "by (subst sum.insert) (auto simp: add_ac)"], ["proof (state)\nthis:\n  sum f (insert b {a..<b}) = sum f {a..<b} + f b\n\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "finally"], ["proof (chain)\npicking this:\n  sum f {a..b} = sum f {a..<b} + f b", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {a..b} = sum f {a..<b} + f b\n\ngoal (1 subgoal):\n 1. sum f {a..b} = sum f {a..<b} + f b", "."], ["proof (state)\nthis:\n  sum f {a..b} = sum f {a..<b} + f b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_atLeastAtMost_int_head:\n  assumes \"a < (b :: int)\"\n  shows   \"sum f {a..b} = f a + sum f {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "from assms"], ["proof (chain)\npicking this:\n  a < b", "have \"{a..b} = insert a {a<..b}\""], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. {a..b} = insert a {a<..b}", "by auto"], ["proof (state)\nthis:\n  {a..b} = insert a {a<..b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "also"], ["proof (state)\nthis:\n  {a..b} = insert a {a<..b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "have \"sum f \\<dots> = f a + sum f {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (insert a {a<..b}) = f a + sum f {a<..b}", "by (subst sum.insert) auto"], ["proof (state)\nthis:\n  sum f (insert a {a<..b}) = f a + sum f {a<..b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "finally"], ["proof (chain)\npicking this:\n  sum f {a..b} = f a + sum f {a<..b}", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {a..b} = f a + sum f {a<..b}\n\ngoal (1 subgoal):\n 1. sum f {a..b} = f a + sum f {a<..b}", "."], ["proof (state)\nthis:\n  sum f {a..b} = f a + sum f {a<..b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_in_nonpos_Reals_imp_add_nonzero:\n  assumes \"z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" \"x \\<ge> 0\"\n  shows   \"z + of_real x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z + of_real x \\<noteq> (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. z + of_real x \\<noteq> (0::'a)", "by (auto simp: add_eq_0_iff2)"], ["", "(* END TODO *)"], ["", "lemma negligible_atLeastAtMostI: \"b \\<le> a \\<Longrightarrow> negligible {a..(b::real)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow> negligible {a..b}", "by (cases \"b < a\") auto"], ["", "lemma integrable_on_negligible: \n \"negligible A \\<Longrightarrow> (f :: 'n :: euclidean_space \\<Rightarrow> 'a :: banach) integrable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. negligible A \\<Longrightarrow> f integrable_on A", "by (subst integrable_spike_set_eq[of _ \"{}\"]) (simp_all add: integrable_on_empty)"], ["", "lemma Union_atLeastAtMost_real_of_int:\n  assumes \"a < b\" \n  shows   \"(\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) = {real_of_int a..real_of_int b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n    {real_of_int a..real_of_int b}", "proof (intro equalityI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{a..<b}.\n                   {real_of_int n..real_of_int (n + 1)}) \\<Longrightarrow>\n       x \\<in> {real_of_int a..real_of_int b}\n 2. \\<And>x.\n       x \\<in> {real_of_int a..real_of_int b} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{a..<b}.\n                   {real_of_int n..real_of_int (n + 1)}) \\<Longrightarrow>\n       x \\<in> {real_of_int a..real_of_int b}\n 2. \\<And>x.\n       x \\<in> {real_of_int a..real_of_int b} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "assume x: \"x \\<in> {real_of_int a..real_of_int b}\""], ["proof (state)\nthis:\n  x \\<in> {real_of_int a..real_of_int b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{a..<b}.\n                   {real_of_int n..real_of_int (n + 1)}) \\<Longrightarrow>\n       x \\<in> {real_of_int a..real_of_int b}\n 2. \\<And>x.\n       x \\<in> {real_of_int a..real_of_int b} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "thus \"x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\""], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "proof (cases \"x = real_of_int b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x = real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})\n 2. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "case True"], ["proof (state)\nthis:\n  x = real_of_int b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x = real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})\n 2. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "with assms"], ["proof (chain)\npicking this:\n  a < b\n  x = real_of_int b", "show ?thesis"], ["proof (prove)\nusing this:\n  a < b\n  x = real_of_int b\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "by (auto intro!: bexI[of _ \"b - 1\"])"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "case False"], ["proof (state)\nthis:\n  x \\<noteq> real_of_int b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "with x"], ["proof (chain)\npicking this:\n  x \\<in> {real_of_int a..real_of_int b}\n  x \\<noteq> real_of_int b", "have x: \"x \\<ge> real_of_int a\" \"x < real_of_int b\""], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int a..real_of_int b}\n  x \\<noteq> real_of_int b\n\ngoal (1 subgoal):\n 1. real_of_int a \\<le> x &&& x < real_of_int b", "by simp_all"], ["proof (state)\nthis:\n  real_of_int a \\<le> x\n  x < real_of_int b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "hence \"x \\<ge> of_int \\<lfloor>x\\<rfloor>\" \"x \\<le> of_int \\<lfloor>x\\<rfloor> + 1\""], ["proof (prove)\nusing this:\n  real_of_int a \\<le> x\n  x < real_of_int b\n\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>x\\<rfloor> \\<le> x &&&\n    x \\<le> real_of_int \\<lfloor>x\\<rfloor> + 1", "by linarith+"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> x\n  x \\<le> real_of_int \\<lfloor>x\\<rfloor> + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "moreover"], ["proof (state)\nthis:\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> x\n  x \\<le> real_of_int \\<lfloor>x\\<rfloor> + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "from x"], ["proof (chain)\npicking this:\n  real_of_int a \\<le> x\n  x < real_of_int b", "have \"\\<lfloor>x\\<rfloor> \\<ge> a\" \"\\<lfloor>x\\<rfloor> < b\""], ["proof (prove)\nusing this:\n  real_of_int a \\<le> x\n  x < real_of_int b\n\ngoal (1 subgoal):\n 1. a \\<le> \\<lfloor>x\\<rfloor> &&& \\<lfloor>x\\<rfloor> < b", "by linarith+"], ["proof (state)\nthis:\n  a \\<le> \\<lfloor>x\\<rfloor>\n  \\<lfloor>x\\<rfloor> < b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "ultimately"], ["proof (chain)\npicking this:\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> x\n  x \\<le> real_of_int \\<lfloor>x\\<rfloor> + 1\n  a \\<le> \\<lfloor>x\\<rfloor>\n  \\<lfloor>x\\<rfloor> < b", "have \"\\<exists>n\\<in>{a..<b}. x \\<in> {of_int n..of_int (n + 1)}\""], ["proof (prove)\nusing this:\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> x\n  x \\<le> real_of_int \\<lfloor>x\\<rfloor> + 1\n  a \\<le> \\<lfloor>x\\<rfloor>\n  \\<lfloor>x\\<rfloor> < b\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{a..<b}. x \\<in> {real_of_int n..real_of_int (n + 1)}", "by (intro bexI[of _ \"\\<lfloor>x\\<rfloor>\"]) simp_all"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{a..<b}. x \\<in> {real_of_int n..real_of_int (n + 1)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {real_of_int a..real_of_int b};\n     x \\<noteq> real_of_int b\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{a..<b}.\n                                  {real_of_int n..real_of_int (n + 1)})", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{a..<b}. x \\<in> {real_of_int n..real_of_int (n + 1)}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{a..<b}.\n                   {real_of_int n..real_of_int (n + 1)}) \\<Longrightarrow>\n       x \\<in> {real_of_int a..real_of_int b}", "qed auto"], ["", "subsection \\<open>The remainder terms\\<close>"], ["", "text \\<open>\n  The following describes the remainder term in the classical version of the Euler--MacLaurin\n  formula.\n\\<close>"], ["", "definition EM_remainder' :: \"nat \\<Rightarrow> (real \\<Rightarrow> 'a :: banach) \\<Rightarrow> real \\<Rightarrow> real \\<Rightarrow> 'a\" where\n  \"EM_remainder' n f a b = ((-1) ^ Suc n / fact n) *\\<^sub>R integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\""], ["", "text \\<open>\n  Next, we define the remainder term that occurs when one lets the right bound of summation \n  in the Euler--MacLaurin formula tend to infinity.\n\\<close>"], ["", "definition EM_remainder_converges :: \"nat \\<Rightarrow> (real \\<Rightarrow> 'a :: banach) \\<Rightarrow> int \\<Rightarrow> bool\" where\n  \"EM_remainder_converges n f a \\<longleftrightarrow> (\\<exists>L. ((\\<lambda>x. EM_remainder' n f a (of_int x)) \\<longlongrightarrow> L) at_top)\""], ["", "definition EM_remainder :: \"nat \\<Rightarrow> (real \\<Rightarrow> 'a :: banach) \\<Rightarrow> int \\<Rightarrow> 'a\" where\n  \"EM_remainder n f a = \n     (if EM_remainder_converges n f a then\n        Lim at_top (\\<lambda>x. EM_remainder' n f a (of_int x)) else 0)\""], ["", "text \\<open>\n  The following lemmas are fairly obvious -- but tedious to prove -- \n  properties of the remainder terms.\n\\<close>"], ["", "lemma EM_remainder_eqI: \n  fixes L\n  assumes \"((\\<lambda>x. EM_remainder' n f b (of_int x)) \\<longlongrightarrow> L) at_top\"\n  shows   \"EM_remainder n f b = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n f b = L", "using assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder n f b = L", "by (auto simp: EM_remainder_def EM_remainder_converges_def intro!: tendsto_Lim)"], ["", "lemma integrable_EM_remainder'_int:\n  fixes a b :: int and f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes \"continuous_on {of_int a..of_int b} f\"\n  shows   \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "have [continuous_intros]: \"continuous_on A f\" if \"A \\<subseteq> {of_int a..of_int b}\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A f", "using continuous_on_subset[OF assms that]"], ["proof (prove)\nusing this:\n  continuous_on A f\n\ngoal (1 subgoal):\n 1. continuous_on A f", "."], ["proof (state)\nthis:\n  ?A \\<subseteq> {real_of_int a..real_of_int b} \\<Longrightarrow>\n  continuous_on ?A f\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "consider \"a > b\" | \"a = b\" | \"a < b\" \"n = 1\" | \"a < b\" \"n \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a \\<Longrightarrow> thesis; a = b \\<Longrightarrow> thesis;\n     \\<lbrakk>a < b; n = 1\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>a < b; n \\<noteq> 1\\<rbrakk> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (cases a b rule: linorder_cases) auto"], ["proof (state)\nthis:\n  \\<lbrakk>b < a \\<Longrightarrow> ?thesis; a = b \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a < b; n = 1\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a < b; n \\<noteq> 1\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < a \\<Longrightarrow> ?thesis; a = b \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a < b; n = 1\\<rbrakk> \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a < b; n \\<noteq> 1\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}\n 4. \\<lbrakk>a < b; n \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "assume \"a < b\" and \"n \\<noteq> 1\""], ["proof (state)\nthis:\n  a < b\n  n \\<noteq> 1\n\ngoal (4 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}\n 4. \\<lbrakk>a < b; n \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  a < b\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "by (intro integrable_continuous_real continuous_intros) auto"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (3 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "assume ab: \"a < b\" and [simp]: \"n = 1\""], ["proof (state)\nthis:\n  a < b\n  n = 1\n\ngoal (3 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "let ?A = \"(\\<lambda>n. {real_of_int n..real_of_int (n+1)}) ` {a..<b}\""], ["proof (state)\ngoal (3 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 3. \\<lbrakk>a < b; n = 1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>t.\n                          pbernpoly n t *\\<^sub>R f t) integrable_on\n                      {real_of_int a..real_of_int b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "proof (rule integrable_combine_division; (intro ballI)?)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?\\<D>1 division_of {real_of_int a..real_of_int b}\n 2. \\<And>i.\n       i \\<in> ?\\<D>1 \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "show \"?A division_of {of_int a..of_int b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n    {real_of_int a..real_of_int b}", "using Union_atLeastAtMost_real_of_int[OF ab]"], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n    {real_of_int a..real_of_int b}", "by (simp add: division_of_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "fix I"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "assume \"I \\<in> ?A\""], ["proof (state)\nthis:\n  I \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "then"], ["proof (chain)\npicking this:\n  I \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}", "obtain i where i: \"i \\<in> {a..<b}\" \"I = {of_int i..of_int (i + 1)}\""], ["proof (prove)\nusing this:\n  I \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {a..<b};\n         I = {real_of_int i..real_of_int (i + 1)}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> {a..<b}\n  I = {real_of_int i..real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on i", "show \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on I", "proof (rule integrable_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?f integrable_on I\n 2. negligible ?S\n 3. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow> pbernpoly n x *\\<^sub>R f x = ?f x", "show \"(\\<lambda>t. (t - of_int i - 1/2) *\\<^sub>R f t) integrable_on I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. (t - real_of_int i - 1 / 2) *\\<^sub>R f t) integrable_on I", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {a..<b}\n  I = {real_of_int i..real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. (t - real_of_int i - 1 / 2) *\\<^sub>R f t) integrable_on I", "by (auto intro!: integrable_continuous_real continuous_intros)"], ["proof (state)\nthis:\n  (\\<lambda>t. (t - real_of_int i - 1 / 2) *\\<^sub>R f t) integrable_on I\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "assume \"x \\<in> I - {of_int (i + 1)}\""], ["proof (state)\nthis:\n  x \\<in> I - {real_of_int (i + 1)}\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "with i"], ["proof (chain)\npicking this:\n  i \\<in> {a..<b}\n  I = {real_of_int i..real_of_int (i + 1)}\n  x \\<in> I - {real_of_int (i + 1)}", "have \"of_int i \\<le> x\" \"x < of_int i + 1\""], ["proof (prove)\nusing this:\n  i \\<in> {a..<b}\n  I = {real_of_int i..real_of_int (i + 1)}\n  x \\<in> I - {real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. real_of_int i \\<le> x &&& x < real_of_int i + 1", "by simp_all"], ["proof (state)\nthis:\n  real_of_int i \\<le> x\n  x < real_of_int i + 1\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "hence \"floor x = i\""], ["proof (prove)\nusing this:\n  real_of_int i \\<le> x\n  x < real_of_int i + 1\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = i", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = i\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> I - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "thus \"pbernpoly n x *\\<^sub>R f x = (x - of_int i - 1 / 2) *\\<^sub>R f x\""], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = i\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x = (x - real_of_int i - 1 / 2) *\\<^sub>R f x", "by (simp add: pbernpoly_def bernpoly_def frac_def)"], ["proof (state)\nthis:\n  pbernpoly n x *\\<^sub>R f x = (x - real_of_int i - 1 / 2) *\\<^sub>R f x\n\ngoal (1 subgoal):\n 1. negligible {real_of_int (i + 1)}", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (2 subgoals):\n 1. b < a \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}\n 2. a = b \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a..real_of_int b}", "qed (simp_all add: integrable_on_negligible)"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integrable_EM_remainder':\n  fixes a b :: real and f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes \"continuous_on {a..b} f\"\n  shows   \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "proof (cases \"\\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "case True"], ["proof (state)\nthis:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "define a' b' where \"a' = \\<lceil>a\\<rceil>\" and \"b' = \\<lfloor>b\\<rfloor>\""], ["proof (state)\nthis:\n  a' = \\<lceil>a\\<rceil>\n  b' = \\<lfloor>b\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "from True"], ["proof (chain)\npicking this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>", "have *: \"a' \\<le> b'\" \"a' \\<ge> a\" \"b' \\<le> b\""], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. a' \\<le> b' &&& a \\<le> real_of_int a' &&& real_of_int b' \\<le> b", "by (auto simp: a'_def b'_def)"], ["proof (state)\nthis:\n  a' \\<le> b'\n  a \\<le> real_of_int a'\n  real_of_int b' \\<le> b\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "from *"], ["proof (chain)\npicking this:\n  a' \\<le> b'\n  a \\<le> real_of_int a'\n  real_of_int b' \\<le> b", "have A: \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on ({a'..b'})\""], ["proof (prove)\nusing this:\n  a' \\<le> b'\n  a \\<le> real_of_int a'\n  real_of_int b' \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int a'..real_of_int b'}", "by (intro integrable_EM_remainder'_int continuous_on_subset[OF assms]) auto"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int a'..real_of_int b'}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "have B: \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on ({a..a'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {a..real_of_int a'}", "proof (rule integrable_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?f integrable_on {a..real_of_int a'}\n 2. negligible ?S\n 3. \\<And>x.\n       x \\<in> {a..real_of_int a'} - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x = ?f x", "show \"pbernpoly n x *\\<^sub>R f x = bernpoly n (x - of_int (floor a)) *\\<^sub>R f x\" \n         if \"x \\<in> {a..real_of_int a'} - {real_of_int a'}\"for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "have \"x \\<ge> a\" \"x <real_of_int a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> x &&& x < real_of_int a'", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {a..real_of_int a'} - {real_of_int a'}\n\ngoal (1 subgoal):\n 1. a \\<le> x &&& x < real_of_int a'", "by auto"], ["proof (state)\nthis:\n  a \\<le> x\n  x < real_of_int a'\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "with True"], ["proof (chain)\npicking this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  a \\<le> x\n  x < real_of_int a'", "have \"floor x = floor a\""], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  a \\<le> x\n  x < real_of_int a'\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>", "unfolding a'_def"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  a \\<le> x\n  x < real_of_int \\<lceil>a\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>", "using ceiling_diff_floor_le_1[of a]"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  a \\<le> x\n  x < real_of_int \\<lceil>a\\<rceil>\n  \\<lceil>a\\<rceil> - \\<lfloor>a\\<rfloor> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>", "by (intro floor_unique; linarith)"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "by (simp add: pbernpoly_def frac_def)"], ["proof (state)\nthis:\n  pbernpoly n x *\\<^sub>R f x =\n  bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..real_of_int a'} - {real_of_int a'} \\<Longrightarrow>\n  pbernpoly n ?x *\\<^sub>R f ?x =\n  bernpoly n (?x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f ?x\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R\n        f x) integrable_on\n    {a..real_of_int a'}\n 2. negligible {real_of_int a'}", "qed (insert *, auto intro!: continuous_intros integrable_continuous_real \n         continuous_on_subset[OF assms])"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {a..real_of_int a'}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "have C: \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on ({b'..b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {real_of_int b'..b}", "proof (rule integrable_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?f integrable_on {real_of_int b'..b}\n 2. negligible ?S\n 3. \\<And>x.\n       x \\<in> {real_of_int b'..b} - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x = ?f x", "show \"pbernpoly n x *\\<^sub>R f x = bernpoly n (x - of_int b') *\\<^sub>R f x\"\n         if \"x \\<in> {real_of_int b'..b} - {real_of_int b'}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int b') *\\<^sub>R f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int b') *\\<^sub>R f x", "have \"x \\<le> b\" \"x > real_of_int b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> b &&& real_of_int b' < x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int b'..b} - {real_of_int b'}\n\ngoal (1 subgoal):\n 1. x \\<le> b &&& real_of_int b' < x", "by auto"], ["proof (state)\nthis:\n  x \\<le> b\n  real_of_int b' < x\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int b') *\\<^sub>R f x", "with True"], ["proof (chain)\npicking this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  x \\<le> b\n  real_of_int b' < x", "have \"floor x = b'\""], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  x \\<le> b\n  real_of_int b' < x\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = b'", "unfolding b'_def"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  x \\<le> b\n  real_of_int \\<lfloor>b\\<rfloor> < x\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = \\<lfloor>b\\<rfloor>", "by (intro floor_unique; linarith)"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = b'\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int b') *\\<^sub>R f x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = b'\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int b') *\\<^sub>R f x", "by (simp add: pbernpoly_def frac_def)"], ["proof (state)\nthis:\n  pbernpoly n x *\\<^sub>R f x =\n  bernpoly n (x - real_of_int b') *\\<^sub>R f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {real_of_int b'..b} - {real_of_int b'} \\<Longrightarrow>\n  pbernpoly n ?x *\\<^sub>R f ?x =\n  bernpoly n (?x - real_of_int b') *\\<^sub>R f ?x\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        bernpoly n (x - real_of_int b') *\\<^sub>R f x) integrable_on\n    {real_of_int b'..b}\n 2. negligible {real_of_int b'}", "qed (insert *, auto intro!: continuous_intros integrable_continuous_real \n         continuous_on_subset[OF assms])"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int b'..b}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "have \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on ({a..a'} \\<union> {a'..b'} \\<union> {b'..b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n    {real_of_int b'..b}", "using * A B C"], ["proof (prove)\nusing this:\n  a' \\<le> b'\n  a \\<le> real_of_int a'\n  real_of_int b' \\<le> b\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int a'..real_of_int b'}\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {a..real_of_int a'}\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {real_of_int b'..b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n    {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n    {real_of_int b'..b}", "by (intro integrable_Un; (subst ivl_disj_un)?)\n       (auto simp: ivl_disj_un max_def min_def)"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n  {real_of_int b'..b}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "also"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n  {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n  {real_of_int b'..b}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "have \"{a..a'} \\<union> {a'..b'} \\<union> {b'..b} = {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n    {real_of_int b'..b} =\n    {a..b}", "using *"], ["proof (prove)\nusing this:\n  a' \\<le> b'\n  a \\<le> real_of_int a'\n  real_of_int b' \\<le> b\n\ngoal (1 subgoal):\n 1. {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n    {real_of_int b'..b} =\n    {a..b}", "by auto"], ["proof (state)\nthis:\n  {a..real_of_int a'} \\<union> {real_of_int a'..real_of_int b'} \\<union>\n  {real_of_int b'..b} =\n  {a..b}\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n 2. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "."], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n\ngoal (1 subgoal):\n 1. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "assume *: \"\\<not>ceiling a \\<le> floor b\""], ["proof (state)\nthis:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor> \\<Longrightarrow>\n    (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}", "proof (rule integrable_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?f integrable_on {a..b}\n 2. negligible ?S\n 3. \\<And>x.\n       x \\<in> {a..b} - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x = ?f x", "show \"(\\<lambda>t. bernpoly n (t - floor a) *\\<^sub>R f t) integrable_on {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        bernpoly n (t - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R\n        f t) integrable_on\n    {a..b}", "using *"], ["proof (prove)\nusing this:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        bernpoly n (t - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R\n        f t) integrable_on\n    {a..b}", "by (auto intro!: integrable_continuous_real continuous_intros assms)"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      bernpoly n (t - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R\n      f t) integrable_on\n  {a..b}\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {a..b} - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {a..b} - ?S \\<Longrightarrow>\n       pbernpoly n x *\\<^sub>R f x =\n       bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "show \"pbernpoly n x *\\<^sub>R f x = bernpoly n (x - floor a) *\\<^sub>R f x\"\n         if \"x \\<in> {a..b} - {}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "from *"], ["proof (chain)\npicking this:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>", "have **: \"b < floor a + 1\""], ["proof (prove)\nusing this:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. b < real_of_int (\\<lfloor>a\\<rfloor> + 1)", "unfolding ceiling_altdef"], ["proof (prove)\nusing this:\n  \\<not> (if a = real_of_int \\<lfloor>a\\<rfloor> then \\<lfloor>a\\<rfloor>\n          else \\<lfloor>a\\<rfloor> + 1)\n         \\<le> \\<lfloor>b\\<rfloor>\n\ngoal (1 subgoal):\n 1. b < real_of_int (\\<lfloor>a\\<rfloor> + 1)", "by (auto split: if_splits simp: le_floor_iff)"], ["proof (state)\nthis:\n  b < real_of_int (\\<lfloor>a\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "from that"], ["proof (chain)\npicking this:\n  x \\<in> {a..b} - {}", "have x: \"x \\<ge> a\" \"x \\<le> b\""], ["proof (prove)\nusing this:\n  x \\<in> {a..b} - {}\n\ngoal (1 subgoal):\n 1. a \\<le> x &&& x \\<le> b", "by simp_all"], ["proof (state)\nthis:\n  a \\<le> x\n  x \\<le> b\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "with * **"], ["proof (chain)\npicking this:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  b < real_of_int (\\<lfloor>a\\<rfloor> + 1)\n  a \\<le> x\n  x \\<le> b", "have \"floor x = floor a\""], ["proof (prove)\nusing this:\n  \\<not> \\<lceil>a\\<rceil> \\<le> \\<lfloor>b\\<rfloor>\n  b < real_of_int (\\<lfloor>a\\<rfloor> + 1)\n  a \\<le> x\n  x \\<le> b\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. pbernpoly n x *\\<^sub>R f x =\n    bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x", "by (simp add: pbernpoly_def frac_def)"], ["proof (state)\nthis:\n  pbernpoly n x *\\<^sub>R f x =\n  bernpoly n (x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} - {} \\<Longrightarrow>\n  pbernpoly n ?x *\\<^sub>R f ?x =\n  bernpoly n (?x - real_of_int \\<lfloor>a\\<rfloor>) *\\<^sub>R f ?x\n\ngoal (1 subgoal):\n 1. negligible {}", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a..b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder'_bounded_linear:\n  assumes \"bounded_linear h\"\n  assumes \"continuous_on {a..b} f\"\n  shows   \"EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "have \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) = \n           integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n    integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t))", "using assms"], ["proof (prove)\nusing this:\n  bounded_linear h\n  continuous_on {a..b} f\n\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n    integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t))", "by (simp add: linear_simps)"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n  integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "also"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n  integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "have \"\\<dots> = h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t)) =\n    h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))", "by (subst integral_linear [OF _ assms(1), symmetric])\n       (auto intro!: integrable_EM_remainder' assms(2) simp: o_def)"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. h (pbernpoly n t *\\<^sub>R f t)) =\n  h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "finally"], ["proof (chain)\npicking this:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n  h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))", "show ?thesis"], ["proof (prove)\nusing this:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n  h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "using assms(1)"], ["proof (prove)\nusing this:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R h (f t)) =\n  h (integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  bounded_linear h\n\ngoal (1 subgoal):\n 1. EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)", "by (simp add: EM_remainder'_def linear_simps)"], ["proof (state)\nthis:\n  EM_remainder' n (\\<lambda>x. h (f x)) a b = h (EM_remainder' n f a b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_converges_of_real:\n  assumes \"EM_remainder_converges n f a\" \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. of_real (f x)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "from assms"], ["proof (chain)\npicking this:\n  EM_remainder_converges n f a\n  continuous_on {real_of_int a..} f", "obtain L \n    where L: \"((\\<lambda>b. EM_remainder' n f (real_of_int a) (real_of_int b)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n f a\n  continuous_on {real_of_int a..} f\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>b.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int b)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "have \"((\\<lambda>b. EM_remainder' n (\\<lambda>x. of_real (f x)) (of_int a) (of_int b)) \\<longlongrightarrow> of_real L) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n          (real_of_int b)) \\<longlongrightarrow>\n     of_real L)\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> of_real L) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x =\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)", "show \"eventually (\\<lambda>b. of_real (EM_remainder' n f (of_int a) (of_int b)) = \n            EM_remainder' n (\\<lambda>x. of_real (f x)) (of_int a) (of_int b)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at_top.\n       of_real (EM_remainder' n f (real_of_int a) (real_of_int b)) =\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)", "using eventually_ge_at_top[of a]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) a) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at_top.\n       of_real (EM_remainder' n f (real_of_int a) (real_of_int b)) =\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)", "by eventually_elim\n         (intro EM_remainder'_bounded_linear [OF bounded_linear_of_real, symmetric]\n                continuous_on_subset[OF assms(2)], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b in at_top.\n     of_real (EM_remainder' n f (real_of_int a) (real_of_int b)) =\n     EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n      (real_of_int b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         of_real\n          (EM_remainder' n f (real_of_int a)\n            (real_of_int b))) \\<longlongrightarrow>\n     of_real L)\n     at_top", "qed (intro tendsto_intros L)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       ((\\<lambda>x.\n            EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n             (real_of_int x)) \\<longlongrightarrow>\n        L)\n        at_top", ".."], ["proof (state)\nthis:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_converges_of_real_iff:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. of_real (f x) :: \n            'a :: {banach, real_normed_algebra_1, real_inner}) a \\<longleftrightarrow> EM_remainder_converges n f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a =\n    EM_remainder_converges n f a", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "assume \"EM_remainder_converges n (\\<lambda>x. of_real (f x) :: 'a) a\""], ["proof (state)\nthis:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "then"], ["proof (chain)\npicking this:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "obtain L :: 'a\n    where L: \"((\\<lambda>b. EM_remainder' n (\\<lambda>x. of_real (f x)) (of_int a) (of_int b)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>b.\n             EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n              (real_of_int b)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "have \"((\\<lambda>b. EM_remainder' n f (of_int a) (of_int b)) \\<longlongrightarrow> L \\<bullet> 1) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         EM_remainder' n f (real_of_int a)\n          (real_of_int b)) \\<longlongrightarrow>\n     L \\<bullet> (1::'a))\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> L \\<bullet> (1::'a)) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x = EM_remainder' n f (real_of_int a) (real_of_int x)", "show \"eventually (\\<lambda>b. EM_remainder' n (\\<lambda>x. of_real (f x) :: 'a) (of_int a) (of_int b) \\<bullet> 1 =\n            EM_remainder' n f (of_int a) (of_int b)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at_top.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b) \\<bullet>\n       (1::'a) =\n       EM_remainder' n f (real_of_int a) (real_of_int b)", "using eventually_ge_at_top[of a]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) a) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F b in at_top.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int b) \\<bullet>\n       (1::'a) =\n       EM_remainder' n f (real_of_int a) (real_of_int b)", "by eventually_elim\n         (subst EM_remainder'_bounded_linear [OF bounded_linear_of_real],\n          auto intro!: continuous_on_subset[OF assms])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F b in at_top.\n     EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n      (real_of_int b) \\<bullet>\n     (1::'a) =\n     EM_remainder' n f (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n          (real_of_int b) \\<bullet>\n         (1::'a)) \\<longlongrightarrow>\n     L \\<bullet> (1::'a))\n     at_top", "qed (intro tendsto_intros L)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L \\<bullet> (1::'a))\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. of_real (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "thus \"EM_remainder_converges n f a\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L \\<bullet> (1::'a))\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L \\<bullet> (1::'a))\n   at_top\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       ((\\<lambda>x.\n            EM_remainder' n f (real_of_int a)\n             (real_of_int x)) \\<longlongrightarrow>\n        L)\n        at_top", ".."], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. of_real (f x)) a", "qed (intro EM_remainder_converges_of_real assms)"], ["", "lemma EM_remainder_of_real:\n  assumes \"continuous_on {a..} f\"\n  shows   \"EM_remainder n (\\<lambda>x. of_real (f x) :: \n             'a :: {banach, real_normed_algebra_1, real_inner}) a = \n             of_real (EM_remainder n f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "have eq: \"EM_remainder' n (\\<lambda>x. of_real (f x) :: 'a) (real_of_int a) = \n              (\\<lambda>x::int. of_real (EM_remainder' n f a x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n         (real_of_int x)) =\n    (\\<lambda>x.\n        of_real (EM_remainder' n f (real_of_int a) (real_of_int x)))", "by (intro ext EM_remainder'_bounded_linear[OF bounded_linear_of_real]\n            continuous_on_subset[OF assms]) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n       (real_of_int x)) =\n  (\\<lambda>x. of_real (EM_remainder' n f (real_of_int a) (real_of_int x)))\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "proof (cases \"EM_remainder_converges n f a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)\n 2. \\<not> EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "case False"], ["proof (state)\nthis:\n  \\<not> EM_remainder_converges n f a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)\n 2. \\<not> EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "with EM_remainder_converges_of_real_iff[OF assms, of n]"], ["proof (chain)\npicking this:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a =\n  EM_remainder_converges n f a\n  \\<not> EM_remainder_converges n f a", "show ?thesis"], ["proof (prove)\nusing this:\n  EM_remainder_converges n (\\<lambda>x. of_real (f x)) a =\n  EM_remainder_converges n f a\n  \\<not> EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "by (auto simp: EM_remainder_def)"], ["proof (state)\nthis:\n  EM_remainder n (\\<lambda>x. of_real (f x)) a =\n  of_real (EM_remainder n f a)\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "case True"], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "then"], ["proof (chain)\npicking this:\n  EM_remainder_converges n f a", "obtain L where L: \"((\\<lambda>x. EM_remainder' n f a (real_of_int x)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "have L': \"((\\<lambda>x. EM_remainder' n (\\<lambda>x. of_real (f x) :: 'a) a \n                (real_of_int x)) \\<longlongrightarrow> of_real L) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     of_real L)\n     at_top", "unfolding eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         of_real\n          (EM_remainder' n f (real_of_int a)\n            (real_of_int x))) \\<longlongrightarrow>\n     of_real L)\n     at_top", "by (intro tendsto_of_real L)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "from L L' tendsto_Lim[OF _ L] tendsto_Lim[OF _ L']"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n  at_top \\<noteq> bot \\<Longrightarrow>\n  Lim at_top\n   (\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x)) =\n  L\n  at_top \\<noteq> bot \\<Longrightarrow>\n  Lim at_top\n   (\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)) =\n  of_real L", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   of_real L)\n   at_top\n  at_top \\<noteq> bot \\<Longrightarrow>\n  Lim at_top\n   (\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x)) =\n  L\n  at_top \\<noteq> bot \\<Longrightarrow>\n  Lim at_top\n   (\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. of_real (f x)) (real_of_int a)\n        (real_of_int x)) =\n  of_real L\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. of_real (f x)) a =\n    of_real (EM_remainder n f a)", "by (auto simp: EM_remainder_def EM_remainder_converges_def)"], ["proof (state)\nthis:\n  EM_remainder n (\\<lambda>x. of_real (f x)) a =\n  of_real (EM_remainder n f a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  EM_remainder n (\\<lambda>x. of_real (f x)) a =\n  of_real (EM_remainder n f a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder'_cong:\n  assumes \"\\<And>x. x \\<in> {a..b} \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\" \"b = b'\"\n  shows   \"EM_remainder' n f a b = EM_remainder' n' g a' b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' n f a b = EM_remainder' n' g a' b'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder' n f a b = EM_remainder' n' g a' b'", "have \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) = integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R f t) =\n    integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> {a..b} \\<Longrightarrow> f ?x = g ?x\n  n = n'\n  a = a'\n  b = b'\n\ngoal (1 subgoal):\n 1. integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R f t) =\n    integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)", "by (intro integral_cong) auto"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f a b = EM_remainder' n' g a' b'", "with assms"], ["proof (chain)\npicking this:\n  ?x \\<in> {a..b} \\<Longrightarrow> f ?x = g ?x\n  n = n'\n  a = a'\n  b = b'\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> {a..b} \\<Longrightarrow> f ?x = g ?x\n  n = n'\n  a = a'\n  b = b'\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a'..b'} (\\<lambda>t. pbernpoly n' t *\\<^sub>R g t)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f a b = EM_remainder' n' g a' b'", "by (simp add: EM_remainder'_def)"], ["proof (state)\nthis:\n  EM_remainder' n f a b = EM_remainder' n' g a' b'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_converges_cong:\n  assumes \"\\<And>x. x \\<ge> of_int a \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\"\n  shows   \"EM_remainder_converges n f a = EM_remainder_converges n' g a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a = EM_remainder_converges n' g a'", "unfolding EM_remainder_converges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top) =\n    (\\<exists>L.\n        ((\\<lambda>x.\n             EM_remainder' n' g (real_of_int a')\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top)", "by (subst EM_remainder'_cong[OF _ refl refl refl, of _ _ f g]) (use assms in auto)"], ["", "lemma EM_remainder_cong:\n  assumes \"\\<And>x. x \\<ge> of_int a \\<Longrightarrow> f x = g x\" \"n = n'\" \"a = a'\"\n  shows   \"EM_remainder n f a = EM_remainder n' g a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n f a = EM_remainder n' g a'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder n f a = EM_remainder n' g a'", "have *: \"EM_remainder_converges n f a = EM_remainder_converges n' g a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a = EM_remainder_converges n' g a'", "using assms"], ["proof (prove)\nusing this:\n  real_of_int a \\<le> ?x \\<Longrightarrow> f ?x = g ?x\n  n = n'\n  a = a'\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a = EM_remainder_converges n' g a'", "by (intro EM_remainder_converges_cong) auto"], ["proof (state)\nthis:\n  EM_remainder_converges n f a = EM_remainder_converges n' g a'\n\ngoal (1 subgoal):\n 1. EM_remainder n f a = EM_remainder n' g a'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n f a = EM_remainder n' g a'", "unfolding EM_remainder_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if EM_remainder_converges n f a\n     then Lim at_top\n           (\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x))\n     else (0::'a)) =\n    (if EM_remainder_converges n' g a'\n     then Lim at_top\n           (\\<lambda>x. EM_remainder' n' g (real_of_int a') (real_of_int x))\n     else (0::'a))", "by (subst EM_remainder'_cong[OF _ refl refl refl, of _ _ f g]) (use assms * in auto)"], ["proof (state)\nthis:\n  EM_remainder n f a = EM_remainder n' g a'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_converges_cnj: \n  assumes \"continuous_on {a..} f\" and \"EM_remainder_converges n f a\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "interpret bounded_linear cnj"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear cnj", "by (rule bounded_linear_cnj)"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "obtain L where L: \"((\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  continuous_on {real_of_int a..} f\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  continuous_on {real_of_int a..} f\n  \\<exists>L.\n     ((\\<lambda>x.\n          EM_remainder' n f (real_of_int a)\n           (real_of_int x)) \\<longlongrightarrow>\n      L)\n      at_top\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "note tendsto_cnj [OF this]"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       cnj (EM_remainder' n f (real_of_int a)\n             (real_of_int x))) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       cnj (EM_remainder' n f (real_of_int a)\n             (real_of_int x))) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "have \"(\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n               (\\<lambda>x. EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a) (real_of_int x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n    (\\<lambda>x.\n        EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n         (real_of_int x))", "by (subst EM_remainder'_bounded_linear [OF bounded_linear_cnj])\n       (rule continuous_on_subset [OF assms(1)], auto)"], ["proof (state)\nthis:\n  (\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n  (\\<lambda>x.\n      EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n       (real_of_int x))\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top", "have L': \"(\\<dots> \\<longlongrightarrow> cnj L) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     cnj L)\n     at_top", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "thus \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_converges_cnj_iff:\n  assumes \"continuous_on {of_int a..} f\"\n  shows   \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a \\<longleftrightarrow> EM_remainder_converges n f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a =\n    EM_remainder_converges n f a", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "assume \"EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\""], ["proof (state)\nthis:\n  EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "hence \"EM_remainder_converges n (\\<lambda>x. cnj (cnj (f x))) a\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (cnj (f x))) a", "by (rule EM_remainder_converges_cnj [rotated]) (auto intro: continuous_intros assms)"], ["proof (state)\nthis:\n  EM_remainder_converges n (\\<lambda>x. cnj (cnj (f x))) a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n (\\<lambda>x. cnj (f x)) a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "thus \"EM_remainder_converges n f a\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n (\\<lambda>x. cnj (cnj (f x))) a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a", "by simp"], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "qed (intro EM_remainder_converges_cnj assms)"], ["", "lemma EM_remainder_cnj: \n  assumes \"continuous_on {a..} f\"\n  shows   \"EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "proof (cases \"EM_remainder_converges n f a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\n 2. \\<not> EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "case False"], ["proof (state)\nthis:\n  \\<not> EM_remainder_converges n f a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\n 2. \\<not> EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "hence \"\\<not>EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\""], ["proof (prove)\nusing this:\n  \\<not> EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. \\<not> EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "by (subst EM_remainder_converges_cnj_iff [OF assms])"], ["proof (state)\nthis:\n  \\<not> EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\n 2. \\<not> EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "with False"], ["proof (chain)\npicking this:\n  \\<not> EM_remainder_converges n f a\n  \\<not> EM_remainder_converges n (\\<lambda>x. cnj (f x)) a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> EM_remainder_converges n f a\n  \\<not> EM_remainder_converges n (\\<lambda>x. cnj (f x)) a\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "by (simp add: EM_remainder_def)"], ["proof (state)\nthis:\n  EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "case True"], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "then"], ["proof (chain)\npicking this:\n  EM_remainder_converges n f a", "obtain L where L: \"((\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  \\<exists>L.\n     ((\\<lambda>x.\n          EM_remainder' n f (real_of_int a)\n           (real_of_int x)) \\<longlongrightarrow>\n      L)\n      at_top\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>x.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int x)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "note tendsto_cnj [OF this]"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       cnj (EM_remainder' n f (real_of_int a)\n             (real_of_int x))) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       cnj (EM_remainder' n f (real_of_int a)\n             (real_of_int x))) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "have \"(\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n               (\\<lambda>x. EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a) (real_of_int x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n    (\\<lambda>x.\n        EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n         (real_of_int x))", "by (subst EM_remainder'_bounded_linear [OF bounded_linear_cnj])\n       (rule continuous_on_subset [OF assms(1)], auto)"], ["proof (state)\nthis:\n  (\\<lambda>x. cnj (EM_remainder' n f (real_of_int a) (real_of_int x))) =\n  (\\<lambda>x.\n      EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n       (real_of_int x))\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top", "have L': \"(\\<dots> \\<longlongrightarrow> cnj L) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     cnj L)\n     at_top", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "from assms and L"], ["proof (chain)\npicking this:\n  continuous_on {real_of_int a..} f\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top", "have \"EM_remainder n f a = L\""], ["proof (prove)\nusing this:\n  continuous_on {real_of_int a..} f\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder n f a = L", "by (intro EM_remainder_eqI)"], ["proof (state)\nthis:\n  EM_remainder n f a = L\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n  EM_remainder n f a = L", "show \"EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n  EM_remainder n f a = L\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "using L'"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n  EM_remainder n f a = L\n  ((\\<lambda>x.\n       EM_remainder' n (\\<lambda>x. cnj (f x)) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   cnj L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)", "by (intro EM_remainder_eqI) simp_all"], ["proof (state)\nthis:\n  EM_remainder n (\\<lambda>x. cnj (f x)) a = cnj (EM_remainder n f a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder'_combine:\n  fixes f :: \"real \\<Rightarrow> 'a :: banach\"\n  assumes [continuous_intros]: \"continuous_on {a..c} f\"\n  assumes \"a \\<le> b\" \"b \\<le> c\"\n  shows   \"EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c", "have \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) + integral {b..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n          integral {a..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n    integral {b..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    integral {a..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)", "by (intro Henstock_Kurzweil_Integration.integral_combine assms integrable_EM_remainder')"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n  integral {b..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c", "from this [symmetric]"], ["proof (chain)\npicking this:\n  integral {a..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n  integral {b..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)", "show ?thesis"], ["proof (prove)\nusing this:\n  integral {a..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n  integral {b..c} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c", "by (simp add: EM_remainder'_def algebra_simps)"], ["proof (state)\nthis:\n  EM_remainder' n f a b + EM_remainder' n f b c = EM_remainder' n f a c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniformly_convergent_EM_remainder':\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b y. y \\<in> A \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>A. norm (f y x) \\<le> g x) at_top\"\n  shows   \"uniformly_convergent_on A (\\<lambda>b s. EM_remainder' n (f s) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "interpret bounded_linear \"\\<lambda>x::'b. ((- 1) ^ Suc n / fact n) *\\<^sub>R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear ((*\\<^sub>R) ((- 1) ^ Suc n / fact n))", "by (rule bounded_linear_scaleR_right)"], ["proof (state)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "from bounded_pbernpoly[of n]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "guess C"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "note C = this"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "from C[of 0]"], ["proof (chain)\npicking this:\n  norm (pbernpoly n 0) \\<le> C", "have [simp]: \"C \\<ge> 0\""], ["proof (prove)\nusing this:\n  norm (pbernpoly n 0) \\<le> C\n\ngoal (1 subgoal):\n 1. 0 \\<le> C", "by simp"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) a (real x))", "unfolding EM_remainder'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s.\n         ((- 1) ^ Suc n / fact n) *\\<^sub>R\n         integral {a..real x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f s t))", "proof (intro uniformly_convergent_on uniformly_convergent_improper_integral')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y.\n       a \\<le> y \\<Longrightarrow>\n       (?G1 has_real_derivative ?g1 y) (at y within {a..})\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 3. convergent (\\<lambda>y. ?G1 (real y))\n 4. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A. norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> ?g1 y", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>y.\n       a \\<le> y \\<Longrightarrow>\n       (?G1 has_real_derivative ?g1 y) (at y within {a..})\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 3. convergent (\\<lambda>y. ?G1 (real y))\n 4. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A. norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> ?g1 y", "assume \"x \\<ge> a\""], ["proof (state)\nthis:\n  a \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>y.\n       a \\<le> y \\<Longrightarrow>\n       (?G1 has_real_derivative ?g1 y) (at y within {a..})\n 2. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 3. convergent (\\<lambda>y. ?G1 (real y))\n 4. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A. norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> ?g1 y", "thus \"((\\<lambda>x. C * G x) has_real_derivative C * g x) (at x within {a..})\""], ["proof (prove)\nusing this:\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. C * G x) has_real_derivative C * g x) (at x within {a..})", "by (intro DERIV_cmult deriv)"], ["proof (state)\nthis:\n  ((\\<lambda>x. C * G x) has_real_derivative C * g x) (at x within {a..})\n\ngoal (3 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 2. convergent (\\<lambda>y. C * G (real y))\n 3. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 2. convergent (\\<lambda>y. C * G (real y))\n 3. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "fix y a' b"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 2. convergent (\\<lambda>y. C * G (real y))\n 3. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "assume \"y \\<in> A\" \"a \\<le> a'\" \"a' \\<le> b\""], ["proof (state)\nthis:\n  y \\<in> A\n  a \\<le> a'\n  a' \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>a' b y.\n       \\<lbrakk>y \\<in> A; a \\<le> a'; a' \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             pbernpoly n t *\\<^sub>R f y t) integrable_on\n                         {a'..b}\n 2. convergent (\\<lambda>y. C * G (real y))\n 3. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "thus \"(\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\""], ["proof (prove)\nusing this:\n  y \\<in> A\n  a \\<le> a'\n  a' \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}", "by (rule integrable)"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\n\ngoal (2 subgoals):\n 1. convergent (\\<lambda>y. C * G (real y))\n 2. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. convergent (\\<lambda>y. C * G (real y))\n 2. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "from conv"], ["proof (chain)\npicking this:\n  convergent (\\<lambda>y. G (real y))", "obtain L where \"(\\<lambda>y. G (real y)) \\<longlonglongrightarrow> L\""], ["proof (prove)\nusing this:\n  convergent (\\<lambda>y. G (real y))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<lambda>y. G (real y))\n        \\<longlonglongrightarrow> L \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: convergent_def)"], ["proof (state)\nthis:\n  (\\<lambda>y. G (real y)) \\<longlonglongrightarrow> L\n\ngoal (2 subgoals):\n 1. convergent (\\<lambda>y. C * G (real y))\n 2. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "from tendsto_mult[OF tendsto_const[of C] this]"], ["proof (chain)\npicking this:\n  (\\<lambda>x. C * G (real x)) \\<longlonglongrightarrow> C * L", "show \"convergent (\\<lambda>y. C * G (real y))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. C * G (real x)) \\<longlonglongrightarrow> C * L\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>y. C * G (real y))", "by (auto simp: convergent_def)"], ["proof (state)\nthis:\n  convergent (\\<lambda>y. C * G (real y))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at_top.\n       \\<forall>ya\\<in>A.\n          norm (pbernpoly n y *\\<^sub>R f ya y) \\<le> C * g y", "show \"\\<forall>\\<^sub>F x in at_top. \\<forall>y\\<in>A. norm (pbernpoly n x *\\<^sub>R f y x) \\<le> C * g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>A. norm (pbernpoly n x *\\<^sub>R f y x) \\<le> C * g x", "using C"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>A. norm (pbernpoly n x *\\<^sub>R f y x) \\<le> C * g x", "unfolding norm_scaleR"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>A.\n          \\<bar>pbernpoly n x\\<bar> * norm (f y x) \\<le> C * g x", "by (intro eventually_mono[OF bound] ballI mult_mono) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>y\\<in>A. norm (pbernpoly n x *\\<^sub>R f y x) \\<le> C * g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  uniformly_convergent_on A (\\<lambda>x s. EM_remainder' n (f s) a (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_limit_EM_remainder:\n  fixes f :: \"'a \\<Rightarrow> real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b y. y \\<in> A \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>A. norm (f y x) \\<le> g x) at_top\"\n  shows   \"uniform_limit A (\\<lambda>b s. EM_remainder' n (f s) a b) \n             (\\<lambda>s. EM_remainder n (f s) a) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "have *: \"uniformly_convergent_on A (\\<lambda>b s. EM_remainder' n (f s) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))", "by (rule uniformly_convergent_EM_remainder'[OF assms])"], ["proof (state)\nthis:\n  uniformly_convergent_on A\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "also"], ["proof (state)\nthis:\n  uniformly_convergent_on A\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniformly_convergent_on A\n     (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x)) =\n    uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "unfolding uniformly_convergent_uniform_limit_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n     (\\<lambda>x.\n         lim (\\<lambda>na. EM_remainder' n (f x) (real_of_int a) (real na)))\n     sequentially =\n    uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "proof (intro uniform_limit_cong refl always_eventually allI ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       lim (\\<lambda>na. EM_remainder' n (f x) (real_of_int a) (real na)) =\n       EM_remainder n (f x) a", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       lim (\\<lambda>na. EM_remainder' n (f x) (real_of_int a) (real na)) =\n       EM_remainder n (f x) a", "assume \"s \\<in> A\""], ["proof (state)\nthis:\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       lim (\\<lambda>na. EM_remainder' n (f x) (real_of_int a) (real na)) =\n       EM_remainder n (f x) a", "with *"], ["proof (chain)\npicking this:\n  uniformly_convergent_on A\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n  s \\<in> A", "have **: \"convergent (\\<lambda>b. EM_remainder' n (f s) a b)\""], ["proof (prove)\nusing this:\n  uniformly_convergent_on A\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. convergent (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))", "by (rule uniformly_convergent_imp_convergent)"], ["proof (state)\nthis:\n  convergent (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       lim (\\<lambda>na. EM_remainder' n (f x) (real_of_int a) (real na)) =\n       EM_remainder n (f x) a", "show \"lim (\\<lambda>b. EM_remainder' n (f s) a b) = EM_remainder n (f s) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)) =\n    EM_remainder n (f s) a", "proof (rule sym, rule EM_remainder_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (f s) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n     at_top", "have \"((\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)) \\<longlongrightarrow>\n               lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))) at_top\"\n        (is \"(_ \\<longlongrightarrow> ?L) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n    \\<longlonglongrightarrow> lim (\\<lambda>x.\nEM_remainder' n (f s) (real_of_int a) (real x))", "using **"], ["proof (prove)\nusing this:\n  convergent (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n    \\<longlonglongrightarrow> lim (\\<lambda>x.\nEM_remainder' n (f s) (real_of_int a) (real x))", "unfolding convergent_LIMSEQ_iff"], ["proof (prove)\nusing this:\n  (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n  \\<longlonglongrightarrow> lim (\\<lambda>x.\n                                    EM_remainder' n (f s) (real_of_int a)\n                                     (real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n    \\<longlonglongrightarrow> lim (\\<lambda>x.\nEM_remainder' n (f s) (real_of_int a) (real x))", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n  \\<longlonglongrightarrow> lim (\\<lambda>x.\n                                    EM_remainder' n (f s) (real_of_int a)\n                                     (real x))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (f s) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n     at_top", "hence \"((\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real (nat x))) \\<longlongrightarrow> ?L) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x))\n  \\<longlonglongrightarrow> lim (\\<lambda>x.\n                                    EM_remainder' n (f s) (real_of_int a)\n                                     (real x))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (f s) (real_of_int a)\n          (real (nat x))) \\<longlongrightarrow>\n     lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n     at_top", "by (rule filterlim_compose) (fact filterlim_nat_sequentially)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (f s) (real_of_int a)\n        (real (nat x))) \\<longlongrightarrow>\n   lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (f s) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n     at_top", "thus \"((\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real_of_int x)) \\<longlongrightarrow> ?L) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' n (f s) (real_of_int a)\n        (real (nat x))) \\<longlongrightarrow>\n   lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n (f s) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n     at_top", "by (rule Lim_transform_eventually)\n           (auto intro: eventually_mono[OF eventually_ge_at_top[of 0]])"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n (f s) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)))\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lim (\\<lambda>x. EM_remainder' n (f s) (real_of_int a) (real x)) =\n  EM_remainder n (f s) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  uniformly_convergent_on A\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x)) =\n  uniform_limit A\n   (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "finally"], ["proof (chain)\npicking this:\n  uniform_limit A\n   (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially", "show \\<dots>"], ["proof (prove)\nusing this:\n  uniform_limit A\n   (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal (1 subgoal):\n 1. uniform_limit A\n     (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "."], ["proof (state)\nthis:\n  uniform_limit A\n   (\\<lambda>b s. EM_remainder' n (f s) (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_EM_remainder:\n  fixes f :: \"real \\<Rightarrow> 'b :: {banach,real_normed_algebra}\"\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes integrable: \"\\<And>a' b . a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. norm (f x) \\<le> g x) at_top\"\n  shows   \"filterlim (\\<lambda>b. EM_remainder' n f a b) \n             (nhds (EM_remainder n f a)) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "have \"uniform_limit {()} (\\<lambda>b s. EM_remainder' n f a b) \n             (\\<lambda>s. EM_remainder n f a) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit {()}\n     (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n f a) sequentially", "using assms"], ["proof (prove)\nusing this:\n  real_of_int a \\<le> ?y \\<Longrightarrow>\n  (G has_real_derivative g ?y) (at ?y within {real_of_int a..})\n  \\<lbrakk>real_of_int a \\<le> ?a'; ?a' \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) integrable_on\n                    {?a'..?b}\n  convergent (\\<lambda>y. G (real y))\n  \\<forall>\\<^sub>F x in at_top. norm (f x) \\<le> g x\n\ngoal (1 subgoal):\n 1. uniform_limit {()}\n     (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n     (\\<lambda>s. EM_remainder n f a) sequentially", "by (intro uniform_limit_EM_remainder[where G = G and g = g]) auto"], ["proof (state)\nthis:\n  uniform_limit {()}\n   (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n f a) sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "moreover"], ["proof (state)\nthis:\n  uniform_limit {()}\n   (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n f a) sequentially\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "have \"() \\<in> {()}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. () \\<in> {()}", "by simp"], ["proof (state)\nthis:\n  () \\<in> {()}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "ultimately"], ["proof (chain)\npicking this:\n  uniform_limit {()}\n   (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n f a) sequentially\n  () \\<in> {()}", "show ?thesis"], ["proof (prove)\nusing this:\n  uniform_limit {()}\n   (\\<lambda>b s. EM_remainder' n f (real_of_int a) (real b))\n   (\\<lambda>s. EM_remainder n f a) sequentially\n  () \\<in> {()}\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n    \\<longlonglongrightarrow> EM_remainder n f a", "by (rule tendsto_uniform_limitI)"], ["proof (state)\nthis:\n  (\\<lambda>b. EM_remainder' n f (real_of_int a) (real b))\n  \\<longlonglongrightarrow> EM_remainder n f a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_0 [simp]: \"EM_remainder n (\\<lambda>x. 0) a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder n (\\<lambda>x. 0::'a) a = (0::'a)", "by (rule EM_remainder_eqI) (simp add: EM_remainder'_def)"], ["", "lemma holomorphic_EM_remainder':\n  assumes deriv: \n    \"\\<And>z t. z \\<in> U \\<Longrightarrow> t \\<in> {a..x} \\<Longrightarrow> \n       ((\\<lambda>z. f z t) has_field_derivative f' z t) (at z within U)\"\n  assumes int: \"\\<And>b c z e. a \\<le> b \\<Longrightarrow> c \\<le> x \\<Longrightarrow> z \\<in> U \\<Longrightarrow>\n                  (\\<lambda>t. of_real (bernpoly n (t - e)) * f z t) integrable_on {b..c}\"\n  assumes cont: \"continuous_on (U \\<times> {a..x}) (\\<lambda>(z, t). f' z t)\"\n  assumes \"convex U\"\n  shows \"(\\<lambda>s. EM_remainder' n (f s) a x) holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder' n (f s) a x) holomorphic_on U", "unfolding EM_remainder'_def scaleR_conv_of_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real ((- 1) ^ Suc n / fact n) *\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f s t)) holomorphic_on\n    U", "proof (intro holomorphic_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "have holo: \"(\\<lambda>z. integral (cbox b c) (\\<lambda>t. of_real (bernpoly n (t - e)) * f z t)) holomorphic_on U\"\n    if \"b \\<ge> a\" \"c \\<le> x\" for b c e :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox b c)\n         (\\<lambda>t.\n             complex_of_real (bernpoly n (t - e)) * f z t)) holomorphic_on\n    U", "proof (rule leibniz_rule_holomorphic)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>z t.\n       \\<lbrakk>z \\<in> U; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              complex_of_real (bernpoly n (t - e)) *\n                              f z t) has_field_derivative\n                          ?fx z t)\n                          (at z within U)\n 2. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 3. continuous_on (U \\<times> cbox b c) (\\<lambda>(z, t). ?fx z t)\n 4. convex U", "fix z t"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>z t.\n       \\<lbrakk>z \\<in> U; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              complex_of_real (bernpoly n (t - e)) *\n                              f z t) has_field_derivative\n                          ?fx z t)\n                          (at z within U)\n 2. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 3. continuous_on (U \\<times> cbox b c) (\\<lambda>(z, t). ?fx z t)\n 4. convex U", "assume \"z \\<in> U\" \"t \\<in> cbox b c\""], ["proof (state)\nthis:\n  z \\<in> U\n  t \\<in> cbox b c\n\ngoal (4 subgoals):\n 1. \\<And>z t.\n       \\<lbrakk>z \\<in> U; t \\<in> cbox b c\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z.\n                              complex_of_real (bernpoly n (t - e)) *\n                              f z t) has_field_derivative\n                          ?fx z t)\n                          (at z within U)\n 2. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 3. continuous_on (U \\<times> cbox b c) (\\<lambda>(z, t). ?fx z t)\n 4. convex U", "thus \"((\\<lambda>z. complex_of_real (bernpoly n (t - e)) * f z t) has_field_derivative\n             complex_of_real (bernpoly n (t - e)) * f' z t) (at z within U)\""], ["proof (prove)\nusing this:\n  z \\<in> U\n  t \\<in> cbox b c\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z.\n         complex_of_real (bernpoly n (t - e)) * f z t) has_field_derivative\n     complex_of_real (bernpoly n (t - e)) * f' z t)\n     (at z within U)", "using that"], ["proof (prove)\nusing this:\n  z \\<in> U\n  t \\<in> cbox b c\n  a \\<le> b\n  c \\<le> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z.\n         complex_of_real (bernpoly n (t - e)) * f z t) has_field_derivative\n     complex_of_real (bernpoly n (t - e)) * f' z t)\n     (at z within U)", "by (intro DERIV_cmult deriv) auto"], ["proof (state)\nthis:\n  ((\\<lambda>z.\n       complex_of_real (bernpoly n (t - e)) * f z t) has_field_derivative\n   complex_of_real (bernpoly n (t - e)) * f' z t)\n   (at z within U)\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 2. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 3. convex U", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 2. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 3. convex U", "fix z"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 2. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 3. convex U", "assume \"z \\<in> U\""], ["proof (state)\nthis:\n  z \\<in> U\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> U \\<Longrightarrow>\n       (\\<lambda>t.\n           complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n       cbox b c\n 2. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 3. convex U", "thus \"(\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f z t) integrable_on cbox b c\""], ["proof (prove)\nusing this:\n  z \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n    cbox b c", "using that int[of b c z]"], ["proof (prove)\nusing this:\n  z \\<in> U\n  a \\<le> b\n  c \\<le> x\n  \\<lbrakk>a \\<le> b; c \\<le> x; z \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>t.\n                        complex_of_real (bernpoly n (t - ?e)) *\n                        f z t) integrable_on\n                    {b..c}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n    cbox b c", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f z t) integrable_on\n  cbox b c\n\ngoal (2 subgoals):\n 1. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 2. convex U", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 2. convex U", "have \"continuous_on (U \\<times> {b..c}) (\\<lambda>(z, t). f' z t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> {b..c}) (\\<lambda>(z, t). f' z t)", "using cont"], ["proof (prove)\nusing this:\n  continuous_on (U \\<times> {a..x}) (\\<lambda>(z, t). f' z t)\n\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> {b..c}) (\\<lambda>(z, t). f' z t)", "by (rule continuous_on_subset) (insert that, auto)"], ["proof (state)\nthis:\n  continuous_on (U \\<times> {b..c}) (\\<lambda>(z, t). f' z t)\n\ngoal (2 subgoals):\n 1. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n 2. convex U", "thus \"continuous_on (U \\<times> cbox b c) (\\<lambda>(z, t).\n            complex_of_real (bernpoly n (t - e)) * f' z t)\""], ["proof (prove)\nusing this:\n  continuous_on (U \\<times> {b..c}) (\\<lambda>(z, t). f' z t)\n\ngoal (1 subgoal):\n 1. continuous_on (U \\<times> cbox b c)\n     (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)", "by (auto simp: case_prod_unfold intro!: continuous_intros)"], ["proof (state)\nthis:\n  continuous_on (U \\<times> cbox b c)\n   (\\<lambda>(z, t). complex_of_real (bernpoly n (t - e)) * f' z t)\n\ngoal (1 subgoal):\n 1. convex U", "qed fact+"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<le> ?b; ?c \\<le> x\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>z.\n                        integral (cbox ?b ?c)\n                         (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - ?e)) *\n                             f z t)) holomorphic_on\n                    U\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "consider \"a > x\" | \"a \\<le> x\" \"floor x \\<le> a\" | \"a \\<le> x\" \"floor x > a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < a \\<Longrightarrow> thesis;\n     \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>x < a \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "hence \"(\\<lambda>z. integral (cbox a x) (\\<lambda>t. of_real (pbernpoly n t) * f z t)) holomorphic_on U\"\n    (is \"?f a x holomorphic_on _\")"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < a \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U\n 3. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "case 2"], ["proof (state)\nthis:\n  a \\<le> x\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> a\n\ngoal (3 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U\n 3. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "have \"(\\<lambda>z. integral (cbox a x) (\\<lambda>t. of_real (bernpoly n (t - of_int \\<lfloor>x\\<rfloor>)) * f z t))\n                   holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n             f z t)) holomorphic_on\n    U", "by (intro holo) auto"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n           f z t)) holomorphic_on\n  U\n\ngoal (3 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U\n 3. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "also"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n           f z t)) holomorphic_on\n  U\n\ngoal (3 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U\n 3. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "have \"(\\<lambda>z. integral (cbox a x) (\\<lambda>t. of_real (bernpoly n (t - of_int \\<lfloor>x\\<rfloor>)) * f z t)) = ?f a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n             f z t)) =\n    (\\<lambda>b.\n        integral (cbox a x)\n         (\\<lambda>t. complex_of_real (pbernpoly n t) * f b t))", "proof (intro ext integral_cong, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       xa \\<in> cbox a x \\<Longrightarrow>\n       complex_of_real (bernpoly n (xa - real_of_int \\<lfloor>x\\<rfloor>)) *\n       f z xa =\n       complex_of_real (pbernpoly n xa) * f z xa", "case (1 z t)"], ["proof (state)\nthis:\n  t \\<in> cbox a x\n\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       xa \\<in> cbox a x \\<Longrightarrow>\n       complex_of_real (bernpoly n (xa - real_of_int \\<lfloor>x\\<rfloor>)) *\n       f z xa =\n       complex_of_real (pbernpoly n xa) * f z xa", "hence \"t \\<ge> a\" \"t \\<le> x\""], ["proof (prove)\nusing this:\n  t \\<in> cbox a x\n\ngoal (1 subgoal):\n 1. a \\<le> t &&& t \\<le> x", "by auto"], ["proof (state)\nthis:\n  a \\<le> t\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       xa \\<in> cbox a x \\<Longrightarrow>\n       complex_of_real (bernpoly n (xa - real_of_int \\<lfloor>x\\<rfloor>)) *\n       f z xa =\n       complex_of_real (pbernpoly n xa) * f z xa", "hence \"floor t = floor x\""], ["proof (prove)\nusing this:\n  a \\<le> t\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>x\\<rfloor>", "using 2"], ["proof (prove)\nusing this:\n  a \\<le> t\n  t \\<le> x\n  a \\<le> x\n  real_of_int \\<lfloor>x\\<rfloor> \\<le> a\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       xa \\<in> cbox a x \\<Longrightarrow>\n       complex_of_real (bernpoly n (xa - real_of_int \\<lfloor>x\\<rfloor>)) *\n       f z xa =\n       complex_of_real (pbernpoly n xa) * f z xa", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. complex_of_real (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n    f z t =\n    complex_of_real (pbernpoly n t) * f z t", "by (simp add: pbernpoly_def frac_def)"], ["proof (state)\nthis:\n  complex_of_real (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n  f z t =\n  complex_of_real (pbernpoly n t) * f z t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>x\\<rfloor>)) *\n           f z t)) =\n  (\\<lambda>b.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f b t))\n\ngoal (3 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; real_of_int \\<lfloor>x\\<rfloor> \\<le> a\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U\n 3. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "."], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "case 3"], ["proof (state)\nthis:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "define N :: \"int set\" where \"N = {\\<lceil>a\\<rceil>..<\\<lfloor>x\\<rfloor>}\""], ["proof (state)\nthis:\n  N = {\\<lceil>a\\<rceil>..<\\<lfloor>x\\<rfloor>}\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "define A where \"A = insert {a..of_int \\<lceil>a\\<rceil>} (insert {of_int \\<lfloor>x\\<rfloor>..x} \n                          ((\\<lambda>n. {of_int n..of_int n + 1}) ` N))\""], ["proof (state)\nthis:\n  A =\n  insert {a..real_of_int \\<lceil>a\\<rceil>}\n   (insert {real_of_int \\<lfloor>x\\<rfloor>..x}\n     ((\\<lambda>n. {real_of_int n..real_of_int n + 1}) ` N))\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "{"], ["proof (state)\nthis:\n  A =\n  insert {a..real_of_int \\<lceil>a\\<rceil>}\n   (insert {real_of_int \\<lfloor>x\\<rfloor>..x}\n     ((\\<lambda>n. {real_of_int n..real_of_int n + 1}) ` N))\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "assume \"X \\<in> A\""], ["proof (state)\nthis:\n  X \\<in> A\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "then"], ["proof (chain)\npicking this:\n  X \\<in> A", "consider \"X = {a..of_int \\<lceil>a\\<rceil>}\" | \"X = {of_int \\<lfloor>x\\<rfloor>..x}\" |\n             n where \"X = {of_int n..of_int n + 1}\" \"n \\<in> N\""], ["proof (prove)\nusing this:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow>\n             thesis;\n     X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow> thesis;\n     \\<And>n.\n        \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: A_def)"], ["proof (state)\nthis:\n  \\<lbrakk>X = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow> ?thesis;\n   X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow> ?thesis;\n   \\<And>n.\n      \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X3 \\<in> A;\n   ?X3 = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow> ?thesis;\n   ?X3 = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow> ?thesis;\n   \\<And>n.\n      \\<lbrakk>?X3 = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "note A_cases = this"], ["proof (state)\nthis:\n  \\<lbrakk>?X3 \\<in> A;\n   ?X3 = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow> ?thesis;\n   ?X3 = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow> ?thesis;\n   \\<And>n.\n      \\<lbrakk>?X3 = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "have division: \"A division_of {a..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A division_of {a..x}", "proof (rule division_ofI)"], ["proof (state)\ngoal (6 subgoals):\n 1. finite A\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 4. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 5. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 6. \\<Union> A = {a..x}", "show \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "by (auto simp: A_def N_def)"], ["proof (state)\nthis:\n  finite A\n\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "fix K"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "assume K: \"K \\<in> A\""], ["proof (state)\nthis:\n  K \\<in> A\n\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "from 3"], ["proof (chain)\npicking this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>", "have \"of_int \\<lceil>a\\<rceil> \\<le> x\""], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. real_of_int \\<lceil>a\\<rceil> \\<le> x", "using ceiling_le[of a \"floor x\"]"], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. real_of_int \\<lceil>a\\<rceil> \\<le> x", "by linarith"], ["proof (state)\nthis:\n  real_of_int \\<lceil>a\\<rceil> \\<le> x\n\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "moreover"], ["proof (state)\nthis:\n  real_of_int \\<lceil>a\\<rceil> \\<le> x\n\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "from 3"], ["proof (chain)\npicking this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>", "have \"of_int \\<lfloor>x\\<rfloor> \\<ge> a\""], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. a \\<le> real_of_int \\<lfloor>x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (5 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<subseteq> {a..x}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 3. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 4. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 5. \\<Union> A = {a..x}", "ultimately"], ["proof (chain)\npicking this:\n  real_of_int \\<lceil>a\\<rceil> \\<le> x\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor>", "show \"K \\<subseteq> {a..x}\""], ["proof (prove)\nusing this:\n  real_of_int \\<lceil>a\\<rceil> \\<le> x\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. K \\<subseteq> {a..x}", "using K 3"], ["proof (prove)\nusing this:\n  real_of_int \\<lceil>a\\<rceil> \\<le> x\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor>\n  K \\<in> A\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. K \\<subseteq> {a..x}", "by (auto simp: A_def N_def) linarith+"], ["proof (state)\nthis:\n  K \\<subseteq> {a..x}\n\ngoal (4 subgoals):\n 1. \\<And>K. K \\<in> A \\<Longrightarrow> K \\<noteq> {}\n 2. \\<And>K. K \\<in> A \\<Longrightarrow> \\<exists>a b. K = cbox a b\n 3. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 4. \\<Union> A = {a..x}", "from K"], ["proof (chain)\npicking this:\n  K \\<in> A", "show \"K \\<noteq> {}\" and \"\\<exists>a b. K = cbox a b\""], ["proof (prove)\nusing this:\n  K \\<in> A\n\ngoal (1 subgoal):\n 1. K \\<noteq> {} &&& \\<exists>a b. K = cbox a b", "by (auto simp: A_def)"], ["proof (state)\nthis:\n  K \\<noteq> {}\n  \\<exists>a b. K = cbox a b\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "fix K1 K2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "assume K: \"K1 \\<in> A\" \"K2 \\<in> A\" \"K1 \\<noteq> K2\""], ["proof (state)\nthis:\n  K1 \\<in> A\n  K2 \\<in> A\n  K1 \\<noteq> K2\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "have F1: \"interior {a..\\<lceil>a\\<rceil>} \\<inter> interior {\\<lfloor>x\\<rfloor>..x} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n    interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {}", "using 3 ceiling_le[of a \"floor x\"]"], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n    interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {}", "by (auto simp: min_def max_def)"], ["proof (state)\nthis:\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "hence F2: \"interior {\\<lfloor>x\\<rfloor>..x} \\<inter> interior {a..\\<lceil>a\\<rceil>} = {}\""], ["proof (prove)\nusing this:\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n\ngoal (1 subgoal):\n 1. interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n    interior {a..real_of_int \\<lceil>a\\<rceil>} =\n    {}", "by simp"], ["proof (state)\nthis:\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "have F3: \"interior {a..\\<lceil>a\\<rceil>} \\<inter> interior {of_int n..of_int n+1} = {}\"\n               \"interior {\\<lfloor>x\\<rfloor>..x} \\<inter> interior {of_int n..of_int n+1} = {}\"\n               \"interior {of_int n..of_int n+1} \\<inter> interior {a..\\<lceil>a\\<rceil>} = {}\"\n               \"interior {of_int n..of_int n+1} \\<inter> interior {\\<lfloor>x\\<rfloor>..x} = {}\"if \"n \\<in> N\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n     interior {real_of_int n..real_of_int n + 1} =\n     {} &&&\n     interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n     interior {real_of_int n..real_of_int n + 1} =\n     {}) &&&\n    interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {a..real_of_int \\<lceil>a\\<rceil>} =\n    {} &&&\n    interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {}", "using 3 ceiling_le[of a \"floor x\"] that"], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  a \\<le> real_of_int \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n  \\<lceil>a\\<rceil> \\<le> \\<lfloor>x\\<rfloor>\n  n \\<in> N\n\ngoal (1 subgoal):\n 1. (interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n     interior {real_of_int n..real_of_int n + 1} =\n     {} &&&\n     interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n     interior {real_of_int n..real_of_int n + 1} =\n     {}) &&&\n    interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {a..real_of_int \\<lceil>a\\<rceil>} =\n    {} &&&\n    interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {}", "by (auto simp: min_def max_def N_def)"], ["proof (state)\nthis:\n  ?n \\<in> N \\<Longrightarrow>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "have F4: \"interior {real_of_int n..of_int n+1} \\<inter> interior {of_int m..of_int m+1} = {}\"\n        if \"{real_of_int n..of_int n+1} \\<noteq> {of_int m..of_int m+1}\" for m n"], ["proof (prove)\ngoal (1 subgoal):\n 1. interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int m..real_of_int m + 1} =\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int m..real_of_int m + 1} =\n    {}", "from that"], ["proof (chain)\npicking this:\n  {real_of_int n..real_of_int n + 1} \\<noteq>\n  {real_of_int m..real_of_int m + 1}", "have \"n \\<noteq> m\""], ["proof (prove)\nusing this:\n  {real_of_int n..real_of_int n + 1} \\<noteq>\n  {real_of_int m..real_of_int m + 1}\n\ngoal (1 subgoal):\n 1. n \\<noteq> m", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> m\n\ngoal (1 subgoal):\n 1. interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int m..real_of_int m + 1} =\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> m\n\ngoal (1 subgoal):\n 1. interior {real_of_int n..real_of_int n + 1} \\<inter>\n    interior {real_of_int m..real_of_int m + 1} =\n    {}", "by simp"], ["proof (state)\nthis:\n  interior {real_of_int n..real_of_int n + 1} \\<inter>\n  interior {real_of_int m..real_of_int m + 1} =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {real_of_int ?n..real_of_int ?n + 1} \\<noteq>\n  {real_of_int ?m..real_of_int ?m + 1} \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int ?m..real_of_int ?m + 1} =\n  {}\n\ngoal (2 subgoals):\n 1. \\<And>K1 K2.\n       \\<lbrakk>K1 \\<in> A; K2 \\<in> A; K1 \\<noteq> K2\\<rbrakk>\n       \\<Longrightarrow> interior K1 \\<inter> interior K2 = {}\n 2. \\<Union> A = {a..x}", "from F1 F2 F3 F4 K"], ["proof (chain)\npicking this:\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n  {real_of_int ?n..real_of_int ?n + 1} \\<noteq>\n  {real_of_int ?m..real_of_int ?m + 1} \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int ?m..real_of_int ?m + 1} =\n  {}\n  K1 \\<in> A\n  K2 \\<in> A\n  K1 \\<noteq> K2", "show \"interior K1 \\<inter> interior K2 = {}\""], ["proof (prove)\nusing this:\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} \\<inter>\n  interior {real_of_int ?n..real_of_int ?n + 1} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {a..real_of_int \\<lceil>a\\<rceil>} =\n  {}\n  ?n \\<in> N \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {}\n  {real_of_int ?n..real_of_int ?n + 1} \\<noteq>\n  {real_of_int ?m..real_of_int ?m + 1} \\<Longrightarrow>\n  interior {real_of_int ?n..real_of_int ?n + 1} \\<inter>\n  interior {real_of_int ?m..real_of_int ?m + 1} =\n  {}\n  K1 \\<in> A\n  K2 \\<in> A\n  K1 \\<noteq> K2\n\ngoal (1 subgoal):\n 1. interior K1 \\<inter> interior K2 = {}", "by (elim A_cases) (simp_all only: not_False_eq_True)"], ["proof (state)\nthis:\n  interior K1 \\<inter> interior K2 = {}\n\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "show \"\\<Union>A = {a..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "proof (cases \"\\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}\n 2. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "case True"], ["proof (state)\nthis:\n  \\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}\n 2. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "using 3"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> = \\<lfloor>x\\<rfloor>\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "by (auto simp: A_def N_def intro: order.trans) linarith+"], ["proof (state)\nthis:\n  \\<Union> A = {a..x}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "case False"], ["proof (state)\nthis:\n  \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "with 3"], ["proof (chain)\npicking this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor>", "have *: \"\\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\""], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "have \"\\<Union>A = {a..of_int \\<lceil>a\\<rceil>} \\<union> (\\<Union>n\\<in>N. {of_int n..of_int (n + 1)}) \\<union> {of_int \\<lfloor>x\\<rfloor>..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> A =\n    {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n    (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) \\<union>\n    {real_of_int \\<lfloor>x\\<rfloor>..x}", "by (simp add: A_def Un_ac)"], ["proof (state)\nthis:\n  \\<Union> A =\n  {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n  (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) \\<union>\n  {real_of_int \\<lfloor>x\\<rfloor>..x}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "also"], ["proof (state)\nthis:\n  \\<Union> A =\n  {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n  (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) \\<union>\n  {real_of_int \\<lfloor>x\\<rfloor>..x}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "have \"(\\<Union>n\\<in>N. {of_int n..of_int (n + 1)}) = {of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) =\n    {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}", "using *"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) =\n    {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}", "unfolding N_def"], ["proof (prove)\nusing this:\n  \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{\\<lceil>a\\<rceil>..<\\<lfloor>x\\<rfloor>}.\n        {real_of_int n..real_of_int (n + 1)}) =\n    {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}", "by (intro Union_atLeastAtMost_real_of_int)"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "also"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>N. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "have \"{a..of_int \\<lceil>a\\<rceil>} \\<union> \\<dots> = {a..real_of_int \\<lfloor>x\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n    {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>} =\n    {a..real_of_int \\<lfloor>x\\<rfloor>}", "using 3 *"], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n    {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>} =\n    {a..real_of_int \\<lfloor>x\\<rfloor>}", "by (intro ivl_disj_un) auto"], ["proof (state)\nthis:\n  {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n  {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>} =\n  {a..real_of_int \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "also"], ["proof (state)\nthis:\n  {a..real_of_int \\<lceil>a\\<rceil>} \\<union>\n  {real_of_int \\<lceil>a\\<rceil>..real_of_int \\<lfloor>x\\<rfloor>} =\n  {a..real_of_int \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "have \"\\<dots> \\<union> {of_int \\<lfloor>x\\<rfloor>..x} = {a..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..real_of_int \\<lfloor>x\\<rfloor>} \\<union>\n    {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {a..x}", "using 3 *"], ["proof (prove)\nusing this:\n  a \\<le> x\n  a < real_of_int \\<lfloor>x\\<rfloor>\n  \\<lceil>a\\<rceil> < \\<lfloor>x\\<rfloor>\n\ngoal (1 subgoal):\n 1. {a..real_of_int \\<lfloor>x\\<rfloor>} \\<union>\n    {real_of_int \\<lfloor>x\\<rfloor>..x} =\n    {a..x}", "by (intro ivl_disj_un) auto"], ["proof (state)\nthis:\n  {a..real_of_int \\<lfloor>x\\<rfloor>} \\<union>\n  {real_of_int \\<lfloor>x\\<rfloor>..x} =\n  {a..x}\n\ngoal (1 subgoal):\n 1. \\<lceil>a\\<rceil> \\<noteq> \\<lfloor>x\\<rfloor> \\<Longrightarrow>\n    \\<Union> A = {a..x}", "finally"], ["proof (chain)\npicking this:\n  \\<Union> A = {a..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> A = {a..x}\n\ngoal (1 subgoal):\n 1. \\<Union> A = {a..x}", "."], ["proof (state)\nthis:\n  \\<Union> A = {a..x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> A = {a..x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A division_of {a..x}\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "have \"(\\<lambda>z. \\<Sum>X\\<in>A. integral X (\\<lambda>t. of_real (bernpoly n (t - \\<lfloor>Inf X\\<rfloor>)) * f z t)) \n            holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        \\<Sum>X\\<in>A.\n          integral X\n           (\\<lambda>t.\n               complex_of_real\n                (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n               f z t)) holomorphic_on\n    U", "proof (intro holomorphic_on_sum holo, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "case (1 X)"], ["proof (state)\nthis:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "from 1 and division"], ["proof (chain)\npicking this:\n  X \\<in> A\n  A division_of {a..x}", "have subset: \"X \\<subseteq> {a..x}\""], ["proof (prove)\nusing this:\n  X \\<in> A\n  A division_of {a..x}\n\ngoal (1 subgoal):\n 1. X \\<subseteq> {a..x}", "by (auto simp: division_of_def)"], ["proof (state)\nthis:\n  X \\<subseteq> {a..x}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "from 1"], ["proof (chain)\npicking this:\n  X \\<in> A", "obtain b c where [simp]: \"X = cbox b c\" \"b \\<le> c\""], ["proof (prove)\nusing this:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>b c.\n        \\<lbrakk>X = cbox b c; b \\<le> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: A_def)"], ["proof (state)\nthis:\n  X = cbox b c\n  b \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "from subset"], ["proof (chain)\npicking this:\n  X \\<subseteq> {a..x}", "have \"b \\<ge> a\" \"c \\<le> x\""], ["proof (prove)\nusing this:\n  X \\<subseteq> {a..x}\n\ngoal (1 subgoal):\n 1. a \\<le> b &&& c \\<le> x", "by auto"], ["proof (state)\nthis:\n  a \\<le> b\n  c \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "hence \"(\\<lambda>x. integral (cbox b c) (\\<lambda>t. of_real (bernpoly n (t - \\<lfloor>Inf {b..c}\\<rfloor>)) * f x t)) \n               holomorphic_on U\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  c \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        integral (cbox b c)\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n             f x t)) holomorphic_on\n    U", "by (intro holo) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      integral (cbox b c)\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n           f x t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       X \\<in> A \\<Longrightarrow>\n       (\\<lambda>x.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f x t)) holomorphic_on\n       U", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      integral (cbox b c)\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n           f x t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        integral X\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n             f x t)) holomorphic_on\n    U", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      integral X\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n           f x t)) holomorphic_on\n  U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<Sum>X\\<in>A.\n        integral X\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n             f z t)) holomorphic_on\n  U\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "also"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      \\<Sum>X\\<in>A.\n        integral X\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n             f z t)) holomorphic_on\n  U\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "have \"?this \\<longleftrightarrow> (\\<lambda>z. integral {a..x} (\\<lambda>t. of_real (pbernpoly n t) * f z t)) \n                           holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>z.\n         \\<Sum>X\\<in>A.\n           integral X\n            (\\<lambda>t.\n                complex_of_real\n                 (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n                f z t)) holomorphic_on\n     U) =\n    ((\\<lambda>z.\n         integral {a..x}\n          (\\<lambda>t.\n              complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n     U)", "proof (intro holomorphic_cong refl, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> U \\<Longrightarrow>\n       (\\<Sum>X\\<in>A.\n          integral X\n           (\\<lambda>t.\n               complex_of_real\n                (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n               f xa t)) =\n       integral {a..x}\n        (\\<lambda>t. complex_of_real (pbernpoly n t) * f xa t)", "case (1 z)"], ["proof (state)\nthis:\n  z \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> U \\<Longrightarrow>\n       (\\<Sum>X\\<in>A.\n          integral X\n           (\\<lambda>t.\n               complex_of_real\n                (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n               f xa t)) =\n       integral {a..x}\n        (\\<lambda>t. complex_of_real (pbernpoly n t) * f xa t)", "have \"((\\<lambda>t. of_real (pbernpoly n t) * f z t) has_integral\n              (\\<Sum>X\\<in>A. integral X (\\<lambda>t. of_real (bernpoly n (t - \\<lfloor>Inf X\\<rfloor>)) * f z t))) {a..x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n     (\\<Sum>X\\<in>A.\n        integral X\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n             f z t)))\n     {a..x}", "using division"], ["proof (prove)\nusing this:\n  A division_of {a..x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n     (\\<Sum>X\\<in>A.\n        integral X\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n             f z t)))\n     {a..x}", "proof (rule has_integral_combine_division)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "assume X: \"X \\<in> A\""], ["proof (state)\nthis:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "then"], ["proof (chain)\npicking this:\n  X \\<in> A", "obtain b c where X': \"X = {b..c}\" \"b \\<le> c\""], ["proof (prove)\nusing this:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>b c.\n        \\<lbrakk>X = {b..c}; b \\<le> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim A_cases) auto"], ["proof (state)\nthis:\n  X = {b..c}\n  b \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "from X and division"], ["proof (chain)\npicking this:\n  X \\<in> A\n  A division_of {a..x}", "have \"X \\<subseteq> {a..x}\""], ["proof (prove)\nusing this:\n  X \\<in> A\n  A division_of {a..x}\n\ngoal (1 subgoal):\n 1. X \\<subseteq> {a..x}", "by (auto simp: division_of_def)"], ["proof (state)\nthis:\n  X \\<subseteq> {a..x}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "with X'"], ["proof (chain)\npicking this:\n  X = {b..c}\n  b \\<le> c\n  X \\<subseteq> {a..x}", "have bc: \"b \\<ge> a\" \"c \\<le> x\""], ["proof (prove)\nusing this:\n  X = {b..c}\n  b \\<le> c\n  X \\<subseteq> {a..x}\n\ngoal (1 subgoal):\n 1. a \\<le> b &&& c \\<le> x", "by auto"], ["proof (state)\nthis:\n  a \\<le> b\n  c \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "have \"((\\<lambda>t. of_real (bernpoly n (t - of_int \\<lfloor>Inf X\\<rfloor>)) * f z t) has_integral\n                 integral X (\\<lambda>t. of_real (bernpoly n (t - of_int \\<lfloor>Inf X\\<rfloor>)) * f z t)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         complex_of_real\n          (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n         f z t) has_integral\n     integral X\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n          f z t))\n     X", "unfolding X'"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         complex_of_real\n          (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n         f z t) has_integral\n     integral {b..c}\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n          f z t))\n     {b..c}", "using \\<open>z \\<in> U\\<close> bc"], ["proof (prove)\nusing this:\n  z \\<in> U\n  a \\<le> b\n  c \\<le> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         complex_of_real\n          (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n         f z t) has_integral\n     integral {b..c}\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf {b..c}\\<rfloor>)) *\n          f z t))\n     {b..c}", "by (intro integrable_integral int)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       complex_of_real\n        (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       complex_of_real\n        (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "have \"?this \\<longleftrightarrow> ((\\<lambda>t. of_real (pbernpoly n t) * f z t) has_integral\n                 integral X (\\<lambda>t. of_real (bernpoly n (t - of_int \\<lfloor>Inf X\\<rfloor>)) * f z t)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         complex_of_real\n          (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n         f z t) has_integral\n     integral X\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n          f z t))\n     X =\n    ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n     integral X\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n          f z t))\n     X", "proof (rule has_integral_spike_eq[of \"{Sup X}\"], goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. negligible {Sup X}\n 2. \\<And>x.\n       x \\<in> X - {Sup X} \\<Longrightarrow>\n       complex_of_real (pbernpoly n x) * f z x =\n       complex_of_real\n        (bernpoly n (x - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z x", "case (2 t)"], ["proof (state)\nthis:\n  t \\<in> X - {Sup X}\n\ngoal (2 subgoals):\n 1. negligible {Sup X}\n 2. \\<And>x.\n       x \\<in> X - {Sup X} \\<Longrightarrow>\n       complex_of_real (pbernpoly n x) * f z x =\n       complex_of_real\n        (bernpoly n (x - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z x", "note t = this"], ["proof (state)\nthis:\n  t \\<in> X - {Sup X}\n\ngoal (2 subgoals):\n 1. negligible {Sup X}\n 2. \\<And>x.\n       x \\<in> X - {Sup X} \\<Longrightarrow>\n       complex_of_real (pbernpoly n x) * f z x =\n       complex_of_real\n        (bernpoly n (x - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z x", "from \\<open>X \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  X \\<in> A", "have \"\\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\""], ["proof (prove)\nusing this:\n  X \\<in> A\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "proof (cases rule: A_cases [consumes 1])"], ["proof (state)\ngoal (3 subgoals):\n 1. X = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 2. X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 3. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "case 1"], ["proof (state)\nthis:\n  X = {a..real_of_int \\<lceil>a\\<rceil>}\n\ngoal (3 subgoals):\n 1. X = {a..real_of_int \\<lceil>a\\<rceil>} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 2. X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 3. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "with t"], ["proof (chain)\npicking this:\n  t \\<in> X - {Sup X}\n  X = {a..real_of_int \\<lceil>a\\<rceil>}", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> X - {Sup X}\n  X = {a..real_of_int \\<lceil>a\\<rceil>}\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "by (intro floor_unique) (auto simp: ceiling_altdef split: if_splits, (linarith+)?)"], ["proof (state)\nthis:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n\ngoal (2 subgoals):\n 1. X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 2. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 2. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "case 2"], ["proof (state)\nthis:\n  X = {real_of_int \\<lfloor>x\\<rfloor>..x}\n\ngoal (2 subgoals):\n 1. X = {real_of_int \\<lfloor>x\\<rfloor>..x} \\<Longrightarrow>\n    \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n 2. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "with t"], ["proof (chain)\npicking this:\n  t \\<in> X - {Sup X}\n  X = {real_of_int \\<lfloor>x\\<rfloor>..x}", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> X - {Sup X}\n  X = {real_of_int \\<lfloor>x\\<rfloor>..x}\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "by (intro floor_unique) (auto simp: ceiling_altdef split: if_splits, (linarith+)?)"], ["proof (state)\nthis:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "case 3"], ["proof (state)\nthis:\n  X = {real_of_int n_..real_of_int n_ + 1}\n  n_ \\<in> N\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>X = {real_of_int n..real_of_int n + 1}; n \\<in> N\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "with t"], ["proof (chain)\npicking this:\n  t \\<in> X - {Sup X}\n  X = {real_of_int n_..real_of_int n_ + 1}\n  n_ \\<in> N", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> X - {Sup X}\n  X = {real_of_int n_..real_of_int n_ + 1}\n  n_ \\<in> N\n\ngoal (1 subgoal):\n 1. \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>", "by (intro floor_unique) (auto simp: ceiling_altdef N_def split: if_splits)"], ["proof (state)\nthis:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n\ngoal (2 subgoals):\n 1. negligible {Sup X}\n 2. \\<And>x.\n       x \\<in> X - {Sup X} \\<Longrightarrow>\n       complex_of_real (pbernpoly n x) * f z x =\n       complex_of_real\n        (bernpoly n (x - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z x", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lfloor>t\\<rfloor> = \\<lfloor>Inf X\\<rfloor>\n\ngoal (1 subgoal):\n 1. complex_of_real (pbernpoly n t) * f z t =\n    complex_of_real (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n    f z t", "by (simp add: pbernpoly_def frac_def)"], ["proof (state)\nthis:\n  complex_of_real (pbernpoly n t) * f z t =\n  complex_of_real (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n  f z t\n\ngoal (1 subgoal):\n 1. negligible {Sup X}", "qed auto"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       complex_of_real\n        (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n       f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X =\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> A \\<Longrightarrow>\n       ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n        integral k\n         (\\<lambda>t.\n             complex_of_real\n              (bernpoly n (t - real_of_int \\<lfloor>Inf k\\<rfloor>)) *\n             f z t))\n        k", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X", "show \\<dots>"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n     integral X\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n          f z t))\n     X", "."], ["proof (state)\nthis:\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   integral X\n    (\\<lambda>t.\n        complex_of_real\n         (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n        f z t))\n   X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   (\\<Sum>X\\<in>A.\n      integral X\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n           f z t)))\n   {a..x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> U \\<Longrightarrow>\n       (\\<Sum>X\\<in>A.\n          integral X\n           (\\<lambda>t.\n               complex_of_real\n                (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n               f xa t)) =\n       integral {a..x}\n        (\\<lambda>t. complex_of_real (pbernpoly n t) * f xa t)", "thus ?case"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. complex_of_real (pbernpoly n t) * f z t) has_integral\n   (\\<Sum>X\\<in>A.\n      integral X\n       (\\<lambda>t.\n           complex_of_real\n            (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n           f z t)))\n   {a..x}\n\ngoal (1 subgoal):\n 1. (\\<Sum>X\\<in>A.\n       integral X\n        (\\<lambda>t.\n            complex_of_real\n             (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n            f z t)) =\n    integral {a..x} (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<Sum>X\\<in>A.\n     integral X\n      (\\<lambda>t.\n          complex_of_real\n           (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n          f z t)) =\n  integral {a..x} (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>z.\n       \\<Sum>X\\<in>A.\n         integral X\n          (\\<lambda>t.\n              complex_of_real\n               (bernpoly n (t - real_of_int \\<lfloor>Inf X\\<rfloor>)) *\n              f z t)) holomorphic_on\n   U) =\n  ((\\<lambda>z.\n       integral {a..x}\n        (\\<lambda>t.\n            complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n   U)\n\ngoal (2 subgoals):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U\n 2. \\<lbrakk>a \\<le> x; a < real_of_int \\<lfloor>x\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>z.\n                          integral (cbox a x)\n                           (\\<lambda>t.\n                               complex_of_real (pbernpoly n t) *\n                               f z t)) holomorphic_on\n                      U", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>z.\n      integral {a..x}\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      integral {a..x}\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. x < a \\<Longrightarrow>\n    (\\<lambda>z.\n        integral (cbox a x)\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "thus \"(\\<lambda>z. integral {a..x} (\\<lambda>t. of_real (pbernpoly n t) * f z t)) holomorphic_on U\""], ["proof (prove)\nusing this:\n  (\\<lambda>z.\n      integral (cbox a x)\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal (1 subgoal):\n 1. (\\<lambda>z.\n        integral {a..x}\n         (\\<lambda>t.\n             complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n    U", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>z.\n      integral {a..x}\n       (\\<lambda>t. complex_of_real (pbernpoly n t) * f z t)) holomorphic_on\n  U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  assumes deriv: \"\\<And>y. a \\<le> y \\<Longrightarrow> (G has_real_derivative g y) (at y within {a..})\"\n  assumes deriv': \n    \"\\<And>z t x. z \\<in> U \\<Longrightarrow> x \\<ge> a \\<Longrightarrow> t \\<in> {a..x} \\<Longrightarrow> \n       ((\\<lambda>z. f z t) has_field_derivative f' z t) (at z within U)\"\n  assumes cont: \"continuous_on (U \\<times> {of_int a..}) (\\<lambda>(z, t). f' z t)\"\n  assumes int: \"\\<And>b c z e. a \\<le> b \\<Longrightarrow> z \\<in> U \\<Longrightarrow>\n                  (\\<lambda>t. of_real (bernpoly n (t - e)) * f z t) integrable_on {b..c}\"\n  assumes int': \"\\<And>a' b y. y \\<in> U \\<Longrightarrow>  a \\<le> a' \\<Longrightarrow> a' \\<le> b \\<Longrightarrow> \n                         (\\<lambda>t. pbernpoly n t *\\<^sub>R f y t) integrable_on {a'..b}\"\n  assumes conv: \"convergent (\\<lambda>y. G (real y))\"\n  assumes bound: \"eventually (\\<lambda>x. \\<forall>y\\<in>U. norm (f y x) \\<le> g x) at_top\"\n  assumes \"open U\" \n  shows analytic_EM_remainder: \"(\\<lambda>s::complex. EM_remainder n (f s) a) analytic_on U\"\n    and holomorphic_EM_remainder: \"(\\<lambda>s::complex. EM_remainder n (f s) a) holomorphic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder n (f s) a) analytic_on U &&&\n    (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on U", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>s. EM_remainder n (f s) a) analytic_on U\n 2. (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on U", "show \"(\\<lambda>s::complex. EM_remainder n (f s) a) analytic_on U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder n (f s) a) analytic_on U", "unfolding analytic_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>U.\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U \\<Longrightarrow>\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U \\<Longrightarrow>\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "assume \"z \\<in> U\""], ["proof (state)\nthis:\n  z \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U \\<Longrightarrow>\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "from \\<open>z \\<in> U\\<close> and \\<open>open U\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> U\n  open U", "obtain \\<epsilon> where \\<epsilon>: \"\\<epsilon> > 0\" \"ball z \\<epsilon> \\<subseteq> U\""], ["proof (prove)\nusing this:\n  z \\<in> U\n  open U\n\ngoal (1 subgoal):\n 1. (\\<And>\\<epsilon>.\n        \\<lbrakk>0 < \\<epsilon>; ball z \\<epsilon> \\<subseteq> U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: open_contains_ball)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U \\<Longrightarrow>\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "have \"(\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>", "proof (rule holomorphic_uniform_sequence)"], ["proof (state)\ngoal (3 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>n. ?f n holomorphic_on ball z \\<epsilon>\n 3. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d) ?f (\\<lambda>s. EM_remainder n (f s) a)\n           sequentially", "fix x :: nat"], ["proof (state)\ngoal (3 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>n. ?f n holomorphic_on ball z \\<epsilon>\n 3. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d) ?f (\\<lambda>s. EM_remainder n (f s) a)\n           sequentially", "show \"(\\<lambda>s. EM_remainder' n (f s) a x) holomorphic_on ball z \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        EM_remainder' n (f s) (real_of_int a) (real x)) holomorphic_on\n    ball z \\<epsilon>", "proof (rule holomorphic_EM_remainder', goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>za t.\n       \\<lbrakk>za \\<in> ball z \\<epsilon>;\n        t \\<in> {real_of_int a..real x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z. f z t) has_field_derivative ?f' za t)\n                          (at za within ball z \\<epsilon>)\n 2. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 3. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). ?f' z t)\n 4. convex (ball z \\<epsilon>)", "fix s t"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>za t.\n       \\<lbrakk>za \\<in> ball z \\<epsilon>;\n        t \\<in> {real_of_int a..real x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z. f z t) has_field_derivative ?f' za t)\n                          (at za within ball z \\<epsilon>)\n 2. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 3. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). ?f' z t)\n 4. convex (ball z \\<epsilon>)", "assume \"s \\<in> ball z \\<epsilon>\" \"t \\<in> {real_of_int a..real x}\""], ["proof (state)\nthis:\n  s \\<in> ball z \\<epsilon>\n  t \\<in> {real_of_int a..real x}\n\ngoal (4 subgoals):\n 1. \\<And>za t.\n       \\<lbrakk>za \\<in> ball z \\<epsilon>;\n        t \\<in> {real_of_int a..real x}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>z. f z t) has_field_derivative ?f' za t)\n                          (at za within ball z \\<epsilon>)\n 2. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 3. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). ?f' z t)\n 4. convex (ball z \\<epsilon>)", "thus \"((\\<lambda>z. f z t) has_field_derivative f' s t) (at s within ball z \\<epsilon>)\""], ["proof (prove)\nusing this:\n  s \\<in> ball z \\<epsilon>\n  t \\<in> {real_of_int a..real x}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. f z t) has_field_derivative f' s t)\n     (at s within ball z \\<epsilon>)", "using \\<epsilon>"], ["proof (prove)\nusing this:\n  s \\<in> ball z \\<epsilon>\n  t \\<in> {real_of_int a..real x}\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n\ngoal (1 subgoal):\n 1. ((\\<lambda>z. f z t) has_field_derivative f' s t)\n     (at s within ball z \\<epsilon>)", "by (intro DERIV_subset[OF deriv'[of _ x]]) auto"], ["proof (state)\nthis:\n  ((\\<lambda>z. f z t) has_field_derivative f' s t)\n   (at s within ball z \\<epsilon>)\n\ngoal (3 subgoals):\n 1. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 2. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 3. convex (ball z \\<epsilon>)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 2. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 3. convex (ball z \\<epsilon>)", "case (2 b c s e)"], ["proof (state)\nthis:\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>\n\ngoal (3 subgoals):\n 1. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 2. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 3. convex (ball z \\<epsilon>)", "with \\<epsilon>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>", "have \"s \\<in> U\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>\n\ngoal (1 subgoal):\n 1. s \\<in> U", "by blast"], ["proof (state)\nthis:\n  s \\<in> U\n\ngoal (3 subgoals):\n 1. \\<And>b c za e.\n       \\<lbrakk>real_of_int a \\<le> b; c \\<le> real x;\n        za \\<in> ball z \\<epsilon>\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>t.\n                             complex_of_real (bernpoly n (t - e)) *\n                             f za t) integrable_on\n                         {b..c}\n 2. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 3. convex (ball z \\<epsilon>)", "with 2"], ["proof (chain)\npicking this:\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>\n  s \\<in> U", "show ?case"], ["proof (prove)\nusing this:\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>\n  s \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f s t) integrable_on\n    {b..c}", "using \\<epsilon> int[of b s e c]"], ["proof (prove)\nusing this:\n  real_of_int a \\<le> b\n  c \\<le> real x\n  s \\<in> ball z \\<epsilon>\n  s \\<in> U\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n  \\<lbrakk>real_of_int a \\<le> b; s \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>t.\n                        complex_of_real (bernpoly n (t - e)) *\n                        f s t) integrable_on\n                    {b..c}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f s t) integrable_on\n    {b..c}", "by (cases \"a \\<le> x\") auto"], ["proof (state)\nthis:\n  (\\<lambda>t. complex_of_real (bernpoly n (t - e)) * f s t) integrable_on\n  {b..c}\n\ngoal (2 subgoals):\n 1. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 2. convex (ball z \\<epsilon>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)\n 2. convex (ball z \\<epsilon>)", "from cont"], ["proof (chain)\npicking this:\n  continuous_on (U \\<times> {real_of_int a..}) (\\<lambda>(z, t). f' z t)", "show \"continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x}) (\\<lambda>(z, t). f' z t)\""], ["proof (prove)\nusing this:\n  continuous_on (U \\<times> {real_of_int a..}) (\\<lambda>(z, t). f' z t)\n\ngoal (1 subgoal):\n 1. continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n     (\\<lambda>(z, t). f' z t)", "by (rule continuous_on_subset) (insert \\<epsilon>, auto)"], ["proof (state)\nthis:\n  continuous_on (ball z \\<epsilon> \\<times> {real_of_int a..real x})\n   (\\<lambda>(z, t). f' z t)\n\ngoal (1 subgoal):\n 1. convex (ball z \\<epsilon>)", "qed (auto)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      EM_remainder' n (f s) (real_of_int a) (real x)) holomorphic_on\n  ball z \\<epsilon>\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "assume s: \"s \\<in> ball z \\<epsilon>\""], ["proof (state)\nthis:\n  s \\<in> ball z \\<epsilon>\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "have \"open (ball z \\<epsilon>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open (ball z \\<epsilon>)", "by simp"], ["proof (state)\nthis:\n  open (ball z \\<epsilon>)\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "with s"], ["proof (chain)\npicking this:\n  s \\<in> ball z \\<epsilon>\n  open (ball z \\<epsilon>)", "obtain \\<delta> where \\<delta>: \"\\<delta> > 0\" \"cball s \\<delta> \\<subseteq> ball z \\<epsilon>\""], ["proof (prove)\nusing this:\n  s \\<in> ball z \\<epsilon>\n  open (ball z \\<epsilon>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        \\<lbrakk>0 < \\<delta>;\n         cball s \\<delta> \\<subseteq> ball z \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding open_contains_cball"], ["proof (prove)\nusing this:\n  s \\<in> ball z \\<epsilon>\n  \\<forall>x\\<in>ball z \\<epsilon>.\n     \\<exists>e>0. cball x e \\<subseteq> ball z \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        \\<lbrakk>0 < \\<delta>;\n         cball s \\<delta> \\<subseteq> ball z \\<epsilon>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < \\<delta>\n  cball s \\<delta> \\<subseteq> ball z \\<epsilon>\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "moreover"], ["proof (state)\nthis:\n  0 < \\<delta>\n  cball s \\<delta> \\<subseteq> ball z \\<epsilon>\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "have bound': \"eventually (\\<lambda>x. \\<forall>y\\<in>cball s \\<delta>. norm (f y x) \\<le> g x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<forall>y\\<in>cball s \\<delta>. cmod (f y x) \\<le> g x", "by (intro eventually_mono [OF bound]) (insert \\<delta> \\<epsilon>, auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<forall>y\\<in>cball s \\<delta>. cmod (f y x) \\<le> g x\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "have \"uniform_limit (cball s \\<delta>) (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n                        (\\<lambda>s. EM_remainder n (f s) a) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_limit (cball s \\<delta>)\n     (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n     (\\<lambda>s. EM_remainder n (f s) a) sequentially", "by (rule uniform_limit_EM_remainder[OF deriv int' conv bound']) (insert \\<delta> \\<epsilon> s, auto)"], ["proof (state)\nthis:\n  uniform_limit (cball s \\<delta>)\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal (2 subgoals):\n 1. open (ball z \\<epsilon>)\n 2. \\<And>x.\n       x \\<in> ball z \\<epsilon> \\<Longrightarrow>\n       \\<exists>d>0.\n          cball x d \\<subseteq> ball z \\<epsilon> \\<and>\n          uniform_limit (cball x d)\n           (\\<lambda>na s.\n               EM_remainder' n (f s) (real_of_int a) (real (?x7 na)))\n           (\\<lambda>s. EM_remainder n (f s) a) sequentially", "ultimately"], ["proof (chain)\npicking this:\n  0 < \\<delta>\n  cball s \\<delta> \\<subseteq> ball z \\<epsilon>\n  uniform_limit (cball s \\<delta>)\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially", "show \"\\<exists>\\<delta>>0. cball s \\<delta> \\<subseteq> ball z \\<epsilon> \\<and> uniform_limit (cball s \\<delta>)\n                          (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n                          (\\<lambda>s. EM_remainder n (f s) a) sequentially\""], ["proof (prove)\nusing this:\n  0 < \\<delta>\n  cball s \\<delta> \\<subseteq> ball z \\<epsilon>\n  uniform_limit (cball s \\<delta>)\n   (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n   (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal (1 subgoal):\n 1. \\<exists>\\<delta>>0.\n       cball s \\<delta> \\<subseteq> ball z \\<epsilon> \\<and>\n       uniform_limit (cball s \\<delta>)\n        (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n        (\\<lambda>s. EM_remainder n (f s) a) sequentially", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<delta>>0.\n     cball s \\<delta> \\<subseteq> ball z \\<epsilon> \\<and>\n     uniform_limit (cball s \\<delta>)\n      (\\<lambda>x s. EM_remainder' n (f s) (real_of_int a) (real x))\n      (\\<lambda>s. EM_remainder n (f s) a) sequentially\n\ngoal (1 subgoal):\n 1. open (ball z \\<epsilon>)", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U \\<Longrightarrow>\n       \\<exists>e>0.\n          (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball x e", "with \\<epsilon>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n  (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>", "show \"\\<exists>\\<epsilon>>0. (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  ball z \\<epsilon> \\<subseteq> U\n  (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<epsilon>>0.\n       (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<epsilon>>0.\n     (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on ball z \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s. EM_remainder n (f s) a) analytic_on U\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on U", "thus \"(\\<lambda>s::complex. EM_remainder n (f s) a) holomorphic_on U\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. EM_remainder n (f s) a) analytic_on U\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on U", "by (rule analytic_imp_holomorphic)"], ["proof (state)\nthis:\n  (\\<lambda>s. EM_remainder n (f s) a) holomorphic_on U\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following lemma is the first step in the proof of the Euler--MacLaurin formula: \n  We show the relationship between the first-order remainder term and the difference of \n  the integral and the sum.\n\\<close>"], ["", "context\n  fixes f f' :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes a b :: int and I S :: 'a\n  fixes Y :: \"real set\"\n  assumes \"a \\<le> b\"\n  assumes fin: \"finite Y\"\n  assumes cont: \"continuous_on {real_of_int a..real_of_int b} f\"\n  assumes deriv [derivative_intros]: \n            \"\\<And>x::real. x \\<in> {a..b} - Y \\<Longrightarrow> (f has_vector_derivative f' x) (at x)\"\n  defines S_def: \"S \\<equiv> (\\<Sum>i\\<in>{a<..b}. f i)\" and I_def: \"I \\<equiv> integral {a..b} f\"\nbegin"], ["", "lemma\n  diff_sum_integral_has_integral_int:\n    \"((\\<lambda>t. (frac t - 1/2) *\\<^sub>R f' t) has_integral (S - I - (f b - f a) /\\<^sub>R 2)) {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "proof (cases \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}\n 2. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}\n 2. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "by (simp_all add: S_def I_def has_integral_refl)"], ["proof (state)\nthis:\n  ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n   S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "with \\<open>a \\<le> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<le> b\n  a \\<noteq> b", "have ab: \"a < b\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a < b", "by simp"], ["proof (state)\nthis:\n  a < b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "let ?A = \"(\\<lambda>n. {real_of_int n..real_of_int (n+1)}) ` {a..<b}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have division: \"?A division_of {of_int a..of_int b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n    {real_of_int a..real_of_int b}", "using Union_atLeastAtMost_real_of_int[OF ab]"], ["proof (prove)\nusing this:\n  (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n    {real_of_int a..real_of_int b}", "by (simp add: division_of_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b} division_of\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have cont' [continuous_intros]: \"continuous_on A f\" if \"A \\<subseteq> {of_int a..of_int b}\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A f", "using continuous_on_subset[OF cont that]"], ["proof (prove)\nusing this:\n  continuous_on A f\n\ngoal (1 subgoal):\n 1. continuous_on A f", "."], ["proof (state)\nthis:\n  ?A \\<subseteq> {real_of_int a..real_of_int b} \\<Longrightarrow>\n  continuous_on ?A f\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "define d where \"d = (\\<lambda>x. (f x + f (x + 1)) /\\<^sub>R 2 - integral {x..x+1} f)\""], ["proof (state)\nthis:\n  d = (\\<lambda>x. (f x + f (x + 1)) /\\<^sub>R 2 - integral {x..x + 1} f)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"((\\<lambda>t. (frac t - 1/2) *\\<^sub>R f' t) has_integral d i) {of_int i..of_int (i+1)}\"\n    if i: \"i \\<in> {a..<b}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "proof (rule has_integral_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {real_of_int i..real_of_int (i + 1)} - ?S \\<Longrightarrow>\n       (frac x - 1 / 2) *\\<^sub>R f' x = ?f x\n 3. (?f has_integral d (real_of_int i)) {real_of_int i..real_of_int (i + 1)}", "show \"(frac x - 1 / 2) *\\<^sub>R f' x = (x - of_int i - 1 / 2) *\\<^sub>R f' x\"\n         if \"x \\<in> {of_int i..of_int (i + 1)} - {of_int (i + 1)}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (frac x - 1 / 2) *\\<^sub>R f' x =\n    (x - real_of_int i - 1 / 2) *\\<^sub>R f' x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (frac x - 1 / 2) *\\<^sub>R f' x =\n    (x - real_of_int i - 1 / 2) *\\<^sub>R f' x", "have \"x \\<ge> of_int i\" \"x < of_int (i + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int i \\<le> x &&& x < real_of_int (i + 1)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int i..real_of_int (i + 1)} - {real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. real_of_int i \\<le> x &&& x < real_of_int (i + 1)", "by auto"], ["proof (state)\nthis:\n  real_of_int i \\<le> x\n  x < real_of_int (i + 1)\n\ngoal (1 subgoal):\n 1. (frac x - 1 / 2) *\\<^sub>R f' x =\n    (x - real_of_int i - 1 / 2) *\\<^sub>R f' x", "hence \"floor x = of_int i\""], ["proof (prove)\nusing this:\n  real_of_int i \\<le> x\n  x < real_of_int (i + 1)\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = of_int i", "by (subst floor_unique) auto"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = of_int i\n\ngoal (1 subgoal):\n 1. (frac x - 1 / 2) *\\<^sub>R f' x =\n    (x - real_of_int i - 1 / 2) *\\<^sub>R f' x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = of_int i\n\ngoal (1 subgoal):\n 1. (frac x - 1 / 2) *\\<^sub>R f' x =\n    (x - real_of_int i - 1 / 2) *\\<^sub>R f' x", "by (simp add: frac_def)"], ["proof (state)\nthis:\n  (frac x - 1 / 2) *\\<^sub>R f' x =\n  (x - real_of_int i - 1 / 2) *\\<^sub>R f' x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {real_of_int i..real_of_int (i + 1)} -\n           {real_of_int (i + 1)} \\<Longrightarrow>\n  (frac ?x - 1 / 2) *\\<^sub>R f' ?x =\n  (?x - real_of_int i - 1 / 2) *\\<^sub>R f' ?x\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "define h where \"h = (\\<lambda>x::real. (x - of_int i - 1 / 2) *\\<^sub>R f' x)\""], ["proof (state)\nthis:\n  h = (\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x)\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "define g where \"g = (\\<lambda>x::real. (x - of_int i - 1/2) *\\<^sub>R f x - integral {of_int i..x} f)\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>x.\n      (x - real_of_int i - 1 / 2) *\\<^sub>R f x -\n      integral {real_of_int i..x} f)\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "have *: \"((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x) (at x within {i..i+1})\"\n      if \"x \\<in> {of_int i<..<of_int i + 1}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x)\n     (at x within {real_of_int i..real_of_int (i + 1)})", "using that i"], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int i<..<real_of_int i + 1}\n  i \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x)\n     (at x within {real_of_int i..real_of_int (i + 1)})", "by (intro integral_has_vector_derivative cont') auto"], ["proof (state)\nthis:\n  ?x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f ?x)\n   (at ?x within {real_of_int i..real_of_int (i + 1)})\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "have \"((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x) (at x)\" \n      if \"x \\<in> {of_int i<..<of_int i + 1}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x)\n     (at x)", "using that i at_within_interior[of x \"{of_int i..of_int (i + 1)}\"] *[of x]"], ["proof (prove)\nusing this:\n  x \\<in> {real_of_int i<..<real_of_int i + 1}\n  i \\<in> {a..<b}\n  x \\<in> interior {real_of_int i..real_of_int (i + 1)} \\<Longrightarrow>\n  at x within {real_of_int i..real_of_int (i + 1)} = at x\n  x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x)\n   (at x within {real_of_int i..real_of_int (i + 1)})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f x)\n     (at x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f ?x)\n   (at ?x)\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "hence \"(h has_integral g (of_int (i + 1)) - g (of_int i)) {of_int i..of_int (i+1)}\""], ["proof (prove)\nusing this:\n  ?x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f ?x)\n   (at ?x)\n\ngoal (1 subgoal):\n 1. (h has_integral g (real_of_int (i + 1)) - g (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "unfolding g_def h_def"], ["proof (prove)\nusing this:\n  ?x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f ?x)\n   (at ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     (real_of_int (i + 1) - real_of_int i - 1 / 2) *\\<^sub>R\n     f (real_of_int (i + 1)) -\n     integral {real_of_int i..real_of_int (i + 1)} f -\n     ((real_of_int i - real_of_int i - 1 / 2) *\\<^sub>R f (real_of_int i) -\n      integral {real_of_int i..real_of_int i} f))\n     {real_of_int i..real_of_int (i + 1)}", "using that"], ["proof (prove)\nusing this:\n  ?x \\<in> {real_of_int i<..<real_of_int i + 1} \\<Longrightarrow>\n  ((\\<lambda>x. integral {real_of_int i..x} f) has_vector_derivative f ?x)\n   (at ?x)\n  i \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     (real_of_int (i + 1) - real_of_int i - 1 / 2) *\\<^sub>R\n     f (real_of_int (i + 1)) -\n     integral {real_of_int i..real_of_int (i + 1)} f -\n     ((real_of_int i - real_of_int i - 1 / 2) *\\<^sub>R f (real_of_int i) -\n      integral {real_of_int i..real_of_int i} f))\n     {real_of_int i..real_of_int (i + 1)}", "by (intro fundamental_theorem_of_calculus_interior_strong[OF fin])\n         (auto intro!: derivative_eq_intros continuous_intros indefinite_integral_continuous_1\n             integrable_continuous_real)"], ["proof (state)\nthis:\n  (h has_integral g (real_of_int (i + 1)) - g (real_of_int i))\n   {real_of_int i..real_of_int (i + 1)}\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "also"], ["proof (state)\nthis:\n  (h has_integral g (real_of_int (i + 1)) - g (real_of_int i))\n   {real_of_int i..real_of_int (i + 1)}\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "have \"g (of_int (i + 1)) - g (of_int i) = d i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (real_of_int (i + 1)) - g (real_of_int i) = d (real_of_int i)", "by (simp add: g_def scaleR_add_right [symmetric] d_def)"], ["proof (state)\nthis:\n  g (real_of_int (i + 1)) - g (real_of_int i) = d (real_of_int i)\n\ngoal (2 subgoals):\n 1. negligible {real_of_int (i + 1)}\n 2. ((\\<lambda>x. (x - real_of_int i - 1 / 2) *\\<^sub>R f' x) has_integral\n     d (real_of_int i))\n     {real_of_int i..real_of_int (i + 1)}", "finally"], ["proof (chain)\npicking this:\n  (h has_integral d (real_of_int i)) {real_of_int i..real_of_int (i + 1)}", "show \"(h has_integral d i) {of_int i..of_int (i + 1)}\""], ["proof (prove)\nusing this:\n  (h has_integral d (real_of_int i)) {real_of_int i..real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. (h has_integral d (real_of_int i)) {real_of_int i..real_of_int (i + 1)}", "."], ["proof (state)\nthis:\n  (h has_integral d (real_of_int i)) {real_of_int i..real_of_int (i + 1)}\n\ngoal (1 subgoal):\n 1. negligible {real_of_int (i + 1)}", "qed simp_all"], ["proof (state)\nthis:\n  ?i \\<in> {a..<b} \\<Longrightarrow>\n  ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n   d (real_of_int ?i))\n   {real_of_int ?i..real_of_int (?i + 1)}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "hence *: \"\\<And>I. I\\<in>?A \\<Longrightarrow> ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral d (\\<lfloor>Inf I\\<rfloor>)) I\""], ["proof (prove)\nusing this:\n  ?i \\<in> {a..<b} \\<Longrightarrow>\n  ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n   d (real_of_int ?i))\n   {real_of_int ?i..real_of_int (?i + 1)}\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n               {a..<b} \\<Longrightarrow>\n       ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n        d (real_of_int \\<lfloor>Inf I\\<rfloor>))\n        I", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  ?I \\<in> (\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n           {a..<b} \\<Longrightarrow>\n  ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n   d (real_of_int \\<lfloor>Inf ?I\\<rfloor>))\n   ?I\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"((\\<lambda>x::real. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral (\\<Sum>I\\<in>?A. d (\\<lfloor>Inf I\\<rfloor>))) (\\<Union>?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n     (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                  {a..<b}.\n        d (real_of_int \\<lfloor>Inf I\\<rfloor>)))\n     (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})", "by (intro has_integral_Union * finite_imageI) (force intro!: negligible_atLeastAtMostI pairwiseI)+"], ["proof (state)\nthis:\n  ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                {a..<b}.\n      d (real_of_int \\<lfloor>Inf I\\<rfloor>)))\n   (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                {a..<b}.\n      d (real_of_int \\<lfloor>Inf I\\<rfloor>)))\n   (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)})\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"\\<Union>?A = {of_int a..of_int b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n    {real_of_int a..real_of_int b}", "by (intro Union_atLeastAtMost_real_of_int ab)"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Union>n\\<in>{a..<b}. {real_of_int n..real_of_int (n + 1)}) =\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"(\\<Sum>I\\<in>?A. d (\\<lfloor>Inf I\\<rfloor>)) = (\\<Sum>i=a..<b. d i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                 {a..<b}.\n       d (real_of_int \\<lfloor>Inf I\\<rfloor>)) =\n    (\\<Sum>i = a..<b. d (real_of_int i))", "by (subst sum.reindex) (auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}.\n     d (real_of_int \\<lfloor>Inf I\\<rfloor>)) =\n  (\\<Sum>i = a..<b. d (real_of_int i))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}.\n     d (real_of_int \\<lfloor>Inf I\\<rfloor>)) =\n  (\\<Sum>i = a..<b. d (real_of_int i))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"\\<dots> = (1 / 2) *\\<^sub>R ((\\<Sum>i = a..<b. f (real_of_int i)) +\n                    (\\<Sum>i = a..<b. f (real_of_int (i + 1)))) -\n                  (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f)\"\n    (is \"_ = _ *\\<^sub>R (?S1 + ?S2) - ?S3\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. d (real_of_int i)) =\n    (1 / 2) *\\<^sub>R\n    ((\\<Sum>i = a..<b. f (real_of_int i)) +\n     (\\<Sum>i = a..<b. f (real_of_int (i + 1)))) -\n    (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f)", "by (simp add: d_def algebra_simps sum.distrib sum_subtractf scaleR_sum_right)"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. d (real_of_int i)) =\n  (1 / 2) *\\<^sub>R\n  ((\\<Sum>i = a..<b. f (real_of_int i)) +\n   (\\<Sum>i = a..<b. f (real_of_int (i + 1)))) -\n  (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. d (real_of_int i)) =\n  (1 / 2) *\\<^sub>R\n  ((\\<Sum>i = a..<b. f (real_of_int i)) +\n   (\\<Sum>i = a..<b. f (real_of_int (i + 1)))) -\n  (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"?S1 = (\\<Sum>i = a..b. f (real_of_int i)) - f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. f (real_of_int i)) =\n    (\\<Sum>i = a..b. f (real_of_int i)) - f (real_of_int b)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. f (real_of_int i)) =\n    (\\<Sum>i = a..b. f (real_of_int i)) - f (real_of_int b)", "using ab"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. f (real_of_int i)) =\n    (\\<Sum>i = a..b. f (real_of_int i)) - f (real_of_int b)", "by (subst sum_atLeastAtMost_int_last) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. f (real_of_int i)) =\n  (\\<Sum>i = a..b. f (real_of_int i)) - f (real_of_int b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. f (real_of_int i)) =\n  (\\<Sum>i = a..b. f (real_of_int i)) - f (real_of_int b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"(\\<Sum>i = a..b. f (real_of_int i)) = S + f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..b. f (real_of_int i)) = S + f (real_of_int a)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..b. f (real_of_int i)) =\n    (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) + f (real_of_int a)", "using ab"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..b. f (real_of_int i)) =\n    (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) + f (real_of_int a)", "by (subst sum_atLeastAtMost_int_head) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = a..b. f (real_of_int i)) = S + f (real_of_int a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = a..b. f (real_of_int i)) = S + f (real_of_int a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"?S2 = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. f (real_of_int (i + 1))) = S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. f (real_of_int (i + 1))) =\n    (\\<Sum>i\\<in>{a<..b}. f (real_of_int i))", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>i. i-1\" \"\\<lambda>i. i+1\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. f (real_of_int (i + 1))) = S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. f (real_of_int (i + 1))) = S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"(1 / 2) *\\<^sub>R (S + f a - f b + S) = \n                (1/2) *\\<^sub>R S + (1/2) *\\<^sub>R S - (f b - f a) /\\<^sub>R 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 / 2) *\\<^sub>R (S + f (real_of_int a) - f (real_of_int b) + S) =\n    (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S -\n    (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (1 / 2) *\\<^sub>R (S + f (real_of_int a) - f (real_of_int b) + S) =\n  (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S -\n  (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (1 / 2) *\\<^sub>R (S + f (real_of_int a) - f (real_of_int b) + S) =\n  (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S -\n  (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"(1/2) *\\<^sub>R S + (1/2) *\\<^sub>R S = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S = S", "by (simp add: scaleR_add_right [symmetric])"], ["proof (state)\nthis:\n  (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S = S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (1 / 2) *\\<^sub>R S + (1 / 2) *\\<^sub>R S = S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"?S3 = (\\<Sum>I\\<in>?A. integral I f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f) =\n    (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                 {a..<b}.\n       integral I f)", "by (subst sum.reindex) (auto simp: inj_on_def add_ac)"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f) =\n  (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}.\n     integral I f)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<b. integral {real_of_int i..1 + real_of_int i} f) =\n  (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}.\n     integral I f)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "have \"\\<dots> = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                 {a..<b}.\n       integral I f) =\n    I", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) `\n                 {a..<b}.\n       integral I f) =\n    integral {real_of_int a..real_of_int b} f", "by (intro integral_combine_division_topdown [symmetric] division integrable_continuous_real \n              continuous_intros) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>(\\<lambda>n. {real_of_int n..real_of_int (n + 1)}) ` {a..<b}.\n     integral I f) =\n  I\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n   S - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2 - I)\n   {real_of_int a..real_of_int b}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. (frac x - 1 / 2) *\\<^sub>R f' x) has_integral\n   S - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2 - I)\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n   S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n   {real_of_int a..real_of_int b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_sum_integral_has_integral_int':\n  \"((\\<lambda>t. pbernpoly 1 t *\\<^sub>R f' t) has_integral (S - I - (f b - f a) /\\<^sub>R 2 )) {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. pbernpoly 1 t *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "using diff_sum_integral_has_integral_int"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. (frac t - 1 / 2) *\\<^sub>R f' t) has_integral\n   S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. pbernpoly 1 t *\\<^sub>R f' t) has_integral\n     S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n     {real_of_int a..real_of_int b}", "by (simp add: pbernpoly_def bernpoly_def)"], ["", "lemma EM_remainder'_Suc_0: \"EM_remainder' (Suc 0) f' a b = S - I - (f b - f a) /\\<^sub>R 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' (Suc 0) f' (real_of_int a) (real_of_int b) =\n    S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2", "using diff_sum_integral_has_integral_int'"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. pbernpoly 1 t *\\<^sub>R f' t) has_integral\n   S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2)\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. EM_remainder' (Suc 0) f' (real_of_int a) (real_of_int b) =\n    S - I - (f (real_of_int b) - f (real_of_int a)) /\\<^sub>R 2", "by (simp add: has_integral_iff EM_remainder'_def)"], ["", "end"], ["", "text \\<open>\n  Next, we show that the $n$-th-order remainder can be expressed in terms of the $n+1$-th-order \n  remainder term. Iterating this essentially yields the Euler--MacLaurin formula.\n\\<close>"], ["", "context\n  fixes f f' :: \"real \\<Rightarrow> 'a :: banach\" and a b :: int and n :: nat and A :: \"real set\"\n  assumes ab: \"a \\<le> b\" and n: \"n > 0\"\n  assumes fin:   \"finite A\"\n  assumes cont:  \"continuous_on {of_int a..of_int b} f\"\n  assumes cont': \"continuous_on {of_int a..of_int b} f'\"\n  assumes deriv: \"\\<And>x. x \\<in> {of_int a<..<of_int b} - A \\<Longrightarrow> (f has_vector_derivative f' x) (at x)\"\nbegin"], ["", "lemma EM_remainder'_integral_conv_Suc:\n  shows   \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n              (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R (f b - f a) -\n              integral {a..b} (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "unfolding EM_remainder'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "let ?h = \"\\<lambda>i. (pbernpoly (Suc n) (real_of_int i) / real (Suc n)) *\\<^sub>R f (real_of_int i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "define T where \"T = integral {a..b} (\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t)\""], ["proof (state)\nthis:\n  T =\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "note [derivative_intros] = has_field_derivative_pbernpoly_Suc'"], ["proof (state)\nthis:\n  \\<lbrakk>(?f has_real_derivative ?D) (at ?x within ?s);\n   2 \\<le> ?n \\<or> ?f ?x \\<notin> \\<int>\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x.\n                         pbernpoly (Suc ?n) (?f x)) has_real_derivative\n                     real (Suc ?n) * pbernpoly ?n (?f ?x) * ?D)\n                     (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "let ?A = \"real_of_int ` {a..b} \\<union> A\""], ["proof (state)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "have \"((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral (-T + (?h b - ?h a))) {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral\n     - T +\n     ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n      f (real_of_int b) -\n      (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n      f (real_of_int a)))\n     {real_of_int a..real_of_int b}", "proof (rule integration_by_parts_interior_strong[OF bounded_bilinear_scaleR])"], ["proof (state)\ngoal (7 subgoals):\n 1. finite ?s\n 2. real_of_int a \\<le> real_of_int b\n 3. continuous_on {real_of_int a..real_of_int b} ?f\n 4. continuous_on {real_of_int a..real_of_int b} f\n 5. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative pbernpoly n t) (at t)\n 6. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} - ?s \\<Longrightarrow>\n       (f has_vector_derivative ?g' t) (at t)\n 7. ((\\<lambda>t. ?f t *\\<^sub>R ?g' t) has_integral\n     ?f (real_of_int b) *\\<^sub>R f (real_of_int b) -\n     ?f (real_of_int a) *\\<^sub>R f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "from fin"], ["proof (chain)\npicking this:\n  finite A", "show \"finite ?A\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (real_of_int ` {a..b} \\<union> A)", "by simp"], ["proof (state)\nthis:\n  finite (real_of_int ` {a..b} \\<union> A)\n\ngoal (6 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. continuous_on {real_of_int a..real_of_int b} ?f\n 3. continuous_on {real_of_int a..real_of_int b} f\n 4. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       (?f has_vector_derivative pbernpoly n t) (at t)\n 5. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       (f has_vector_derivative ?g' t) (at t)\n 6. ((\\<lambda>t. ?f t *\\<^sub>R ?g' t) has_integral\n     ?f (real_of_int b) *\\<^sub>R f (real_of_int b) -\n     ?f (real_of_int a) *\\<^sub>R f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "from \\<open>n > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < n", "show \"continuous_on {of_int a..of_int b} (\\<lambda>t. pbernpoly (Suc n) t / real (Suc n))\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. continuous_on {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t / real (Suc n))", "by (intro continuous_intros) auto"], ["proof (state)\nthis:\n  continuous_on {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly (Suc n) t / real (Suc n))\n\ngoal (5 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. continuous_on {real_of_int a..real_of_int b} f\n 3. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 4. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       (f has_vector_derivative ?g' t) (at t)\n 5. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R ?g' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "show \"continuous_on {of_int a..of_int b} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {real_of_int a..real_of_int b} f", "by fact"], ["proof (state)\nthis:\n  continuous_on {real_of_int a..real_of_int b} f\n\ngoal (4 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       (f has_vector_derivative ?g' t) (at t)\n 4. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R ?g' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "show \"(f has_vector_derivative f' t) (at t)\" if \"t \\<in> {of_int a<..<of_int b} - ?A\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_vector_derivative f' t) (at t)", "using deriv[of t] that"], ["proof (prove)\nusing this:\n  t \\<in> {real_of_int a<..<real_of_int b} - A \\<Longrightarrow>\n  (f has_vector_derivative f' t) (at t)\n  t \\<in> {real_of_int a<..<real_of_int b} -\n          (real_of_int ` {a..b} \\<union> A)\n\ngoal (1 subgoal):\n 1. (f has_vector_derivative f' t) (at t)", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {real_of_int a<..<real_of_int b} -\n           (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n  (f has_vector_derivative f' ?t) (at ?t)\n\ngoal (3 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "have \"(\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n    {real_of_int a..real_of_int b}", "by (intro integrable_EM_remainder' cont')"], ["proof (state)\nthis:\n  (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (3 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "hence \"(\\<lambda>t. (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on {a..b}\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        (1 / real (Suc n)) *\\<^sub>R\n        pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n    {real_of_int a..real_of_int b}", "by (rule integrable_cmul)"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      (1 / real (Suc n)) *\\<^sub>R\n      pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (3 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "also"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      (1 / real (Suc n)) *\\<^sub>R\n      pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (3 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "have \"(\\<lambda>t. (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) =\n                 (\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) =\n    (\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t)", "by (rule ext) (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) =\n  (\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t)\n\ngoal (3 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)\n 3. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>t.\n      (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}", "show \"((\\<lambda>t. (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) \n                    has_integral ?h b - ?h a - (- T + (?h b - ?h a))) {a..b}\""], ["proof (prove)\nusing this:\n  (\\<lambda>t.\n      (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "using integrable_EM_remainder'[of a b f' \"Suc n\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>t.\n      (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n  continuous_on {real_of_int a..real_of_int b} f' \\<Longrightarrow>\n  (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) integrable_on\n  {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n     (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a) -\n     (- T +\n      ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n       f (real_of_int b) -\n       (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n       f (real_of_int a))))\n     {real_of_int a..real_of_int b}", "by (simp add: has_integral_iff T_def)"], ["proof (state)\nthis:\n  ((\\<lambda>t.\n       (pbernpoly (Suc n) t / real (Suc n)) *\\<^sub>R f' t) has_integral\n   (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n   f (real_of_int b) -\n   (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n   f (real_of_int a) -\n   (- T +\n    ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n     f (real_of_int b) -\n     (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n     f (real_of_int a))))\n   {real_of_int a..real_of_int b}\n\ngoal (2 subgoals):\n 1. real_of_int a \\<le> real_of_int b\n 2. \\<And>t.\n       t \\<in> {real_of_int a<..<real_of_int b} -\n               (real_of_int ` {a..b} \\<union> A) \\<Longrightarrow>\n       ((\\<lambda>t.\n            pbernpoly (Suc n) t / real (Suc n)) has_vector_derivative\n        pbernpoly n t)\n        (at t)", "qed (insert ab n, auto intro!: derivative_eq_intros\n           simp: has_field_derivative_iff_has_vector_derivative [symmetric] not_le elim!: Ints_cases)"], ["proof (state)\nthis:\n  ((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral\n   - T +\n   ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n    f (real_of_int b) -\n    (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n    f (real_of_int a)))\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral\n   - T +\n   ((pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n    f (real_of_int b) -\n    (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n    f (real_of_int a)))\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "have \"?h b - ?h a = (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R (f b - f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n    f (real_of_int b) -\n    (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n    f (real_of_int a) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a))", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n    f (real_of_int b) -\n    (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n    f (real_of_int a) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a))", "by (simp add: algebra_simps bernoulli'_def)"], ["proof (state)\nthis:\n  (pbernpoly (Suc n) (real_of_int b) / real (Suc n)) *\\<^sub>R\n  f (real_of_int b) -\n  (pbernpoly (Suc n) (real_of_int a) / real (Suc n)) *\\<^sub>R\n  f (real_of_int a) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a))\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral\n   - T +\n   (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n   (f (real_of_int b) - f (real_of_int a)))\n   {real_of_int a..real_of_int b}", "have \"integral {a..b} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) = \\<dots> - T\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. pbernpoly n t *\\<^sub>R f t) has_integral\n   - T +\n   (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n   (f (real_of_int b) - f (real_of_int a)))\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    T", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a)) -\n  T\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "also"], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a)) -\n  T\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "have \"T = integral {a..b} (\\<lambda>t. (1 / real (Suc n)) *\\<^sub>R (pbernpoly (Suc n) t) *\\<^sub>R f' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T =\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t.\n         (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t)", "by (simp add: T_def)"], ["proof (state)\nthis:\n  T =\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t.\n       (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "also"], ["proof (state)\nthis:\n  T =\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t.\n       (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "have \"\\<dots> = integral {a..b} (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R real (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t.\n         (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) =\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "by (subst integral_cmul) (simp_all add: divide_simps)"], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t.\n       (1 / real (Suc n)) *\\<^sub>R pbernpoly (Suc n) t *\\<^sub>R f' t) =\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n  real (Suc n)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "finally"], ["proof (chain)\npicking this:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a)) -\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n  real (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a)) -\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n  real (Suc n)\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) -\n    integral {real_of_int a..real_of_int b}\n     (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n    real (Suc n)", "."], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  (bernoulli (Suc n) / real (Suc n)) *\\<^sub>R\n  (f (real_of_int b) - f (real_of_int a)) -\n  integral {real_of_int a..real_of_int b}\n   (\\<lambda>t. pbernpoly (Suc n) t *\\<^sub>R f' t) /\\<^sub>R\n  real (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder'_conv_Suc: \n  \"EM_remainder' n f a b = \n     ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (f b - f a) + \n     EM_remainder' (Suc n) f' a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int a) (real_of_int b) =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (f (real_of_int b) - f (real_of_int a)) +\n    EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)", "by (simp add: EM_remainder'_def EM_remainder'_integral_conv_Suc scaleR_diff_right \n                scaleR_add_right field_simps del: of_nat_Suc)"], ["", "end"], ["", "context\n  fixes f f' :: \"real \\<Rightarrow> 'a :: banach\" and a :: int and n :: nat and A :: \"real set\" and C\n  assumes n: \"n > 0\"\n  assumes fin:   \"finite A\"\n  assumes cont:  \"continuous_on {of_int a..} f\"\n  assumes cont': \"continuous_on {of_int a..} f'\"\n  assumes lim:   \"(f \\<longlongrightarrow> C) at_top\"\n  assumes deriv: \"\\<And>x. x \\<in> {of_int a<..} - A \\<Longrightarrow> (f has_vector_derivative f' x) (at x)\"\nbegin"], ["", "lemma\n  shows EM_remainder_converges_iff_Suc_converges:\n          \"EM_remainder_converges n f a \\<longleftrightarrow> EM_remainder_converges (Suc n) f' a\"\n  and   EM_remainder_conv_Suc: \n           \"EM_remainder_converges n f a \\<Longrightarrow> \n              EM_remainder n f a = \n                  ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (C - f a) + \n                  EM_remainder (Suc n) f' a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a = EM_remainder_converges (Suc n) f' a &&&\n    (EM_remainder_converges n f a \\<Longrightarrow>\n     EM_remainder n f a =\n     ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n     (C - f (real_of_int a)) +\n     EM_remainder (Suc n) f' a)", "proof (rule iffI)"], ["proof (state)\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "define g where \"g = (\\<lambda>x. ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (f x - f a))\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>x.\n      ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n      (f x - f (real_of_int a)))\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "define G where \"G = ((-1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (C - f a)\""], ["proof (state)\nthis:\n  G =\n  ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (C - f (real_of_int a))\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "have limit_g: \"(g \\<longlongrightarrow> G) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<longlongrightarrow> G) at_top", "unfolding g_def G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n         (f x - f (real_of_int a))) \\<longlongrightarrow>\n     ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n     (C - f (real_of_int a)))\n     at_top", "by (intro tendsto_intros lim)"], ["proof (state)\nthis:\n  (g \\<longlongrightarrow> G) at_top\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "have *: \"eventually (\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x) = \n              g x + EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' n f (real_of_int a) (real_of_int x) =\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "using eventually_ge_at_top[of a]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) a) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' n f (real_of_int a) (real_of_int x) =\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       a \\<le> x \\<Longrightarrow>\n       EM_remainder' n f (real_of_int a) (real_of_int x) =\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "case (elim b)"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       a \\<le> x \\<Longrightarrow>\n       EM_remainder' n f (real_of_int a) (real_of_int x) =\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int a) (real_of_int b) =\n    g (real_of_int b) +\n    EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)", "using EM_remainder'_conv_Suc[OF elim n fin continuous_on_subset[OF cont] \n            continuous_on_subset[OF cont'] deriv]"], ["proof (prove)\nusing this:\n  a \\<le> b\n  \\<lbrakk>{real_of_int a..real_of_int b} \\<subseteq> {real_of_int a..};\n   {real_of_int a..real_of_int b} \\<subseteq> {real_of_int a..};\n   \\<And>x.\n      x \\<in> {real_of_int a<..<real_of_int b} - A \\<Longrightarrow>\n      x \\<in> {real_of_int a<..} - A\\<rbrakk>\n  \\<Longrightarrow> EM_remainder' n f (real_of_int a) (real_of_int b) =\n                    ((- 1) ^ Suc n * bernoulli (Suc n) /\n                     fact (Suc n)) *\\<^sub>R\n                    (f (real_of_int b) - f (real_of_int a)) +\n                    EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int a) (real_of_int b) =\n    g (real_of_int b) +\n    EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)", "by (auto simp: g_def)"], ["proof (state)\nthis:\n  EM_remainder' n f (real_of_int a) (real_of_int b) =\n  g (real_of_int b) +\n  EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' n f (real_of_int a) (real_of_int x) =\n     g (real_of_int x) +\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "{"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' n f (real_of_int a) (real_of_int x) =\n     g (real_of_int x) +\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "assume \"EM_remainder_converges n f a\""], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "then"], ["proof (chain)\npicking this:\n  EM_remainder_converges n f a", "obtain L\n      where L: \"((\\<lambda>b. EM_remainder' n f (real_of_int a) (real_of_int b)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges n f a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>b.\n             EM_remainder' n f (real_of_int a)\n              (real_of_int b)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "have *: \"((\\<lambda>b. EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)) \\<longlongrightarrow> L - G) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         EM_remainder' (Suc n) f' (real_of_int a)\n          (real_of_int b)) \\<longlongrightarrow>\n     L - G)\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> L - G) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x = EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "show \"\\<forall>\\<^sub>F x in at_top. EM_remainder' n f (real_of_int a) (real_of_int x) - g x =\n               EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' n f (real_of_int a) (real_of_int x) -\n       g (real_of_int x) =\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "using *"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' n f (real_of_int a) (real_of_int x) =\n     g (real_of_int x) +\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' n f (real_of_int a) (real_of_int x) -\n       g (real_of_int x) =\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' n f (real_of_int a) (real_of_int x) - g (real_of_int x) =\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n f (real_of_int a) (real_of_int x) -\n         g (real_of_int x)) \\<longlongrightarrow>\n     L - G)\n     at_top", "show \"((\\<lambda>x. EM_remainder' n f (real_of_int a) (real_of_int x) - g x) \\<longlongrightarrow> L - G) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' n f (real_of_int a) (real_of_int x) -\n         g (real_of_int x)) \\<longlongrightarrow>\n     L - G)\n     at_top", "by (intro tendsto_intros filterlim_compose[OF limit_g] L)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' n f (real_of_int a) (real_of_int x) -\n       g (real_of_int x)) \\<longlongrightarrow>\n   L - G)\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top\n\ngoal (3 subgoals):\n 1. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder_converges (Suc n) f' a\n 2. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 3. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "from *"], ["proof (chain)\npicking this:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top", "show \"EM_remainder_converges (Suc n) f' a\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       ((\\<lambda>x.\n            EM_remainder' (Suc n) f' (real_of_int a)\n             (real_of_int x)) \\<longlongrightarrow>\n        L)\n        at_top", ".."], ["proof (state)\nthis:\n  EM_remainder_converges (Suc n) f' a\n\ngoal (2 subgoals):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "from *"], ["proof (chain)\npicking this:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top", "have \"EM_remainder (Suc n) f' a = L - G\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L - G)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder (Suc n) f' a = L - G", "by (rule EM_remainder_eqI)"], ["proof (state)\nthis:\n  EM_remainder (Suc n) f' a = L - G\n\ngoal (2 subgoals):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "moreover"], ["proof (state)\nthis:\n  EM_remainder (Suc n) f' a = L - G\n\ngoal (2 subgoals):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "from L"], ["proof (chain)\npicking this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top", "have \"EM_remainder n f a = L\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder n f a = L", "by (rule EM_remainder_eqI)"], ["proof (state)\nthis:\n  EM_remainder n f a = L\n\ngoal (2 subgoals):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a\n 2. EM_remainder_converges n f a \\<Longrightarrow>\n    EM_remainder n f a =\n    ((- 1) ^ Suc n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (C - f (real_of_int a)) +\n    EM_remainder (Suc n) f' a", "ultimately"], ["proof (chain)\npicking this:\n  EM_remainder (Suc n) f' a = L - G\n  EM_remainder n f a = L", "show \"EM_remainder n f a = G + EM_remainder (Suc n) f' a\""], ["proof (prove)\nusing this:\n  EM_remainder (Suc n) f' a = L - G\n  EM_remainder n f a = L\n\ngoal (1 subgoal):\n 1. EM_remainder n f a = G + EM_remainder (Suc n) f' a", "by (simp add: G_def)"], ["proof (state)\nthis:\n  EM_remainder n f a = G + EM_remainder (Suc n) f' a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "}"], ["proof (state)\nthis:\n  EM_remainder_converges n f a \\<Longrightarrow>\n  EM_remainder n f a = G + EM_remainder (Suc n) f' a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "{"], ["proof (state)\nthis:\n  EM_remainder_converges n f a \\<Longrightarrow>\n  EM_remainder n f a = G + EM_remainder (Suc n) f' a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "assume \"EM_remainder_converges (Suc n) f' a\""], ["proof (state)\nthis:\n  EM_remainder_converges (Suc n) f' a\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "then"], ["proof (chain)\npicking this:\n  EM_remainder_converges (Suc n) f' a", "obtain L\n      where L: \"((\\<lambda>b. EM_remainder' (Suc n) f' (real_of_int a) (real_of_int b)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  EM_remainder_converges (Suc n) f' a\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        ((\\<lambda>b.\n             EM_remainder' (Suc n) f' (real_of_int a)\n              (real_of_int b)) \\<longlongrightarrow>\n         L)\n         at_top \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: EM_remainder_converges_def)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "have *: \"((\\<lambda>b. EM_remainder' n f (real_of_int a) (real_of_int b)) \\<longlongrightarrow> G + L) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         EM_remainder' n f (real_of_int a)\n          (real_of_int b)) \\<longlongrightarrow>\n     G + L)\n     at_top", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> G + L) at_top\n 2. \\<forall>\\<^sub>F x in at_top.\n       ?f x = EM_remainder' n f (real_of_int a) (real_of_int x)", "show \"\\<forall>\\<^sub>F x in at_top. g x + EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x) =\n                EM_remainder' n f (real_of_int a) (real_of_int x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x) =\n       EM_remainder' n f (real_of_int a) (real_of_int x)", "using *"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' n f (real_of_int a) (real_of_int x) =\n     g (real_of_int x) +\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x) =\n       EM_remainder' n f (real_of_int a) (real_of_int x)", "by (subst eq_commute)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     g (real_of_int x) +\n     EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x) =\n     EM_remainder' n f (real_of_int a) (real_of_int x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         g (real_of_int x) +\n         EM_remainder' (Suc n) f' (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     G + L)\n     at_top", "show \"((\\<lambda>x. g x + EM_remainder' (Suc n) f' (real_of_int a) (real_of_int x)) \\<longlongrightarrow> G + L) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         g (real_of_int x) +\n         EM_remainder' (Suc n) f' (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     G + L)\n     at_top", "by (intro tendsto_intros filterlim_compose[OF limit_g] L)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       g (real_of_int x) +\n       EM_remainder' (Suc n) f' (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   G + L)\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   G + L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n    EM_remainder_converges n f a", "thus \"EM_remainder_converges n f a\""], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   G + L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges n f a", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>b.\n       EM_remainder' n f (real_of_int a)\n        (real_of_int b)) \\<longlongrightarrow>\n   G + L)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       ((\\<lambda>x.\n            EM_remainder' n f (real_of_int a)\n             (real_of_int x)) \\<longlongrightarrow>\n        L)\n        at_top", ".."], ["proof (state)\nthis:\n  EM_remainder_converges n f a\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  EM_remainder_converges (Suc n) f' a \\<Longrightarrow>\n  EM_remainder_converges n f a\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>The conventional version of the Euler--MacLaurin formula\\<close>"], ["", "text \\<open>\n  The following theorems are the classic Euler--MacLaurin formula that can be found,\n  with slight variations, in many sources (e.\\,g.\\ \\cite{AS_HMF, apostol99, GKP_CM}).\n\\<close>"], ["", "context\n  fixes f :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes fs :: \"nat \\<Rightarrow> real \\<Rightarrow> 'a\"\n  fixes a b :: int assumes ab: \"a \\<le> b\"\n  fixes N :: nat assumes N: \"N > 0\"\n  fixes Y :: \"real set\" assumes fin: \"finite Y\"\n  assumes fs_0 [simp]: \"fs 0 = f\"\n  assumes fs_cont [continuous_intros]:  \n    \"\\<And>k. k \\<le> N \\<Longrightarrow> continuous_on {real_of_int a..real_of_int b} (fs k)\"\n  assumes fs_deriv [derivative_intros]: \n    \"\\<And>k x. k < N \\<Longrightarrow> x \\<in> {a..b} - Y \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\"\nbegin"], ["", "theorem euler_maclaurin_raw_strong_int:\n  defines \"S \\<equiv> (\\<Sum>i\\<in>{a<..b}. f (of_int i))\"\n  defines \"I \\<equiv> integral {of_int a..of_int b} f\"\n  defines \"c' \\<equiv> \\<lambda>k. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k b - fs k a)\"\n  shows   \"S - I = (\\<Sum>k<N. c' k) + EM_remainder' N (fs N) a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "define c :: \"nat \\<Rightarrow> 'a\" \n    where \"c = (\\<lambda>k. ((-1) ^ (Suc k) * bernoulli (Suc k) / fact (Suc k)) *\\<^sub>R (fs k b - fs k a))\""], ["proof (state)\nthis:\n  c =\n  (\\<lambda>k.\n      ((- 1) ^ Suc k * bernoulli (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int b) - fs k (real_of_int a)))\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "have \"S - I = (\\<Sum>k<m. c k) + EM_remainder' m (fs m) a b\" if \"m \\<ge> 1\" \"m \\<le> N\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<m} + EM_remainder' m (fs m) (real_of_int a) (real_of_int b)", "using that"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  m \\<le> N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<m} + EM_remainder' m (fs m) (real_of_int a) (real_of_int b)", "proof (induction m rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<le> N \\<Longrightarrow>\n    S - I =\n    sum c {..<1} + EM_remainder' 1 (fs 1) (real_of_int a) (real_of_int b)\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "case base"], ["proof (state)\nthis:\n  1 \\<le> N\n\ngoal (2 subgoals):\n 1. 1 \\<le> N \\<Longrightarrow>\n    S - I =\n    sum c {..<1} + EM_remainder' 1 (fs 1) (real_of_int a) (real_of_int b)\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "with ab fin fs_cont[of 0]"], ["proof (chain)\npicking this:\n  a \\<le> b\n  finite Y\n  0 \\<le> N \\<Longrightarrow>\n  continuous_on {real_of_int a..real_of_int b} (fs 0)\n  1 \\<le> N", "show ?case"], ["proof (prove)\nusing this:\n  a \\<le> b\n  finite Y\n  0 \\<le> N \\<Longrightarrow>\n  continuous_on {real_of_int a..real_of_int b} (fs 0)\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<1} + EM_remainder' 1 (fs 1) (real_of_int a) (real_of_int b)", "using fs_deriv[of 0] N"], ["proof (prove)\nusing this:\n  a \\<le> b\n  finite Y\n  0 \\<le> N \\<Longrightarrow>\n  continuous_on {real_of_int a..real_of_int b} (fs 0)\n  1 \\<le> N\n  \\<lbrakk>0 < N; ?x \\<in> {real_of_int a..real_of_int b} - Y\\<rbrakk>\n  \\<Longrightarrow> (fs 0 has_vector_derivative fs (Suc 0) ?x) (at ?x)\n  0 < N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<1} + EM_remainder' 1 (fs 1) (real_of_int a) (real_of_int b)", "unfolding One_nat_def"], ["proof (prove)\nusing this:\n  a \\<le> b\n  finite Y\n  0 \\<le> N \\<Longrightarrow>\n  continuous_on {real_of_int a..real_of_int b} (fs 0)\n  Suc 0 \\<le> N\n  \\<lbrakk>0 < N; ?x \\<in> {real_of_int a..real_of_int b} - Y\\<rbrakk>\n  \\<Longrightarrow> (fs 0 has_vector_derivative fs (Suc 0) ?x) (at ?x)\n  0 < N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<Suc 0} +\n    EM_remainder' (Suc 0) (fs (Suc 0)) (real_of_int a) (real_of_int b)", "by (subst EM_remainder'_Suc_0[of _ _ Y f]) (simp_all add: algebra_simps S_def I_def c_def)"], ["proof (state)\nthis:\n  S - I =\n  sum c {..<1} + EM_remainder' 1 (fs 1) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "case (step n)"], ["proof (state)\nthis:\n  1 \\<le> n\n  n < m\n  n \\<le> N \\<Longrightarrow>\n  S - I =\n  sum c {..<n} + EM_remainder' n (fs n) (real_of_int a) (real_of_int b)\n  Suc n \\<le> N\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "from step.prems"], ["proof (chain)\npicking this:\n  Suc n \\<le> N", "have \"S - I = (\\<Sum>k<n. c k) + EM_remainder' n (fs n) a b\""], ["proof (prove)\nusing this:\n  Suc n \\<le> N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<n} + EM_remainder' n (fs n) (real_of_int a) (real_of_int b)", "by (intro step.IH) simp_all"], ["proof (state)\nthis:\n  S - I =\n  sum c {..<n} + EM_remainder' n (fs n) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "also"], ["proof (state)\nthis:\n  S - I =\n  sum c {..<n} + EM_remainder' n (fs n) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "have \"(\\<Sum>k<n. c k) = (\\<Sum>k<Suc n. c k) +\n                  (((-1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R (fs n b - fs n a))\"\n      (is \"_ = _ + ?c\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c {..<n} =\n    sum c {..<Suc n} +\n    ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (fs n (real_of_int b) - fs n (real_of_int a))", "by (simp add: EM_remainder'_Suc_0 c_def)"], ["proof (state)\nthis:\n  sum c {..<n} =\n  sum c {..<Suc n} +\n  ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (fs n (real_of_int b) - fs n (real_of_int a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "also"], ["proof (state)\nthis:\n  sum c {..<n} =\n  sum c {..<Suc n} +\n  ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (fs n (real_of_int b) - fs n (real_of_int a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "have \"\\<dots> + EM_remainder' n (fs n) a b = (\\<Sum>k<Suc n. c k) + (?c + EM_remainder' n (fs n) a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c {..<Suc n} +\n    ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (fs n (real_of_int b) - fs n (real_of_int a)) +\n    EM_remainder' n (fs n) (real_of_int a) (real_of_int b) =\n    sum c {..<Suc n} +\n    (((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n     (fs n (real_of_int b) - fs n (real_of_int a)) +\n     EM_remainder' n (fs n) (real_of_int a) (real_of_int b))", "by (simp add: add.assoc)"], ["proof (state)\nthis:\n  sum c {..<Suc n} +\n  ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (fs n (real_of_int b) - fs n (real_of_int a)) +\n  EM_remainder' n (fs n) (real_of_int a) (real_of_int b) =\n  sum c {..<Suc n} +\n  (((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n   (fs n (real_of_int b) - fs n (real_of_int a)) +\n   EM_remainder' n (fs n) (real_of_int a) (real_of_int b))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "also"], ["proof (state)\nthis:\n  sum c {..<Suc n} +\n  ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (fs n (real_of_int b) - fs n (real_of_int a)) +\n  EM_remainder' n (fs n) (real_of_int a) (real_of_int b) =\n  sum c {..<Suc n} +\n  (((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n   (fs n (real_of_int b) - fs n (real_of_int a)) +\n   EM_remainder' n (fs n) (real_of_int a) (real_of_int b))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "from step.prems step.hyps ab fin"], ["proof (chain)\npicking this:\n  Suc n \\<le> N\n  1 \\<le> n\n  n < m\n  a \\<le> b\n  finite Y", "have \"?c + EM_remainder' n (fs n) a b = EM_remainder' (Suc n) (fs (Suc n)) a b\""], ["proof (prove)\nusing this:\n  Suc n \\<le> N\n  1 \\<le> n\n  n < m\n  a \\<le> b\n  finite Y\n\ngoal (1 subgoal):\n 1. ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n    (fs n (real_of_int b) - fs n (real_of_int a)) +\n    EM_remainder' n (fs n) (real_of_int a) (real_of_int b) =\n    EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)", "by (subst EM_remainder'_conv_Suc [where A = Y]) \n         (auto intro!: fs_deriv fs_cont)"], ["proof (state)\nthis:\n  ((- 1) ^ n * bernoulli (Suc n) / fact (Suc n)) *\\<^sub>R\n  (fs n (real_of_int b) - fs n (real_of_int a)) +\n  EM_remainder' n (fs n) (real_of_int a) (real_of_int b) =\n  EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n; n < m;\n        n \\<le> N \\<Longrightarrow>\n        S - I =\n        sum c {..<n} +\n        EM_remainder' n (fs n) (real_of_int a) (real_of_int b);\n        Suc n \\<le> N\\<rbrakk>\n       \\<Longrightarrow> S - I =\n                         sum c {..<Suc n} +\n                         EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a)\n                          (real_of_int b)", "finally"], ["proof (chain)\npicking this:\n  S - I =\n  sum c {..<Suc n} +\n  EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)", "show ?case"], ["proof (prove)\nusing this:\n  S - I =\n  sum c {..<Suc n} +\n  EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<Suc n} +\n    EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)", "."], ["proof (state)\nthis:\n  S - I =\n  sum c {..<Suc n} +\n  EM_remainder' (Suc n) (fs (Suc n)) (real_of_int a) (real_of_int b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>1 \\<le> ?m; ?m \\<le> N\\<rbrakk>\n  \\<Longrightarrow> S - I =\n                    sum c {..<?m} +\n                    EM_remainder' ?m (fs ?m) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "from this[of N] and N"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 \\<le> N; N \\<le> N\\<rbrakk>\n  \\<Longrightarrow> S - I =\n                    sum c {..<N} +\n                    EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n  0 < N", "have \"S - I = sum c {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> N; N \\<le> N\\<rbrakk>\n  \\<Longrightarrow> S - I =\n                    sum c {..<N} +\n                    EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n  0 < N\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "by simp"], ["proof (state)\nthis:\n  S - I =\n  sum c {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "also"], ["proof (state)\nthis:\n  S - I =\n  sum c {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "have \"sum c {..<N} = sum c' {..<N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum c {..<N} = sum c' {..<N}", "proof (intro sum.cong refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {..<N} \\<Longrightarrow> c x = c' x", "fix k :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {..<N} \\<Longrightarrow> c x = c' x", "show \"c k = c' k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k = c' k", "by (cases \"even k\")\n         (auto simp: c_def c'_def bernoulli'_def algebra_simps bernoulli_odd_eq_0)"], ["proof (state)\nthis:\n  c k = c' k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum c {..<N} = sum c' {..<N}\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "finally"], ["proof (chain)\npicking this:\n  S - I =\n  sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "show ?thesis"], ["proof (prove)\nusing this:\n  S - I =\n  sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - I =\n    sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "."], ["proof (state)\nthis:\n  S - I =\n  sum c' {..<N} + EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "theorem euler_maclaurin_strong_raw_nat:\n  assumes \"a \\<le> b\" \"0 < N\" \"finite Y\" \"fs 0 = f\"\n    \"(\\<And>k. k \\<le> N \\<Longrightarrow> continuous_on {real a..real b} (fs k))\"\n    \"(\\<And>k x. k < N \\<Longrightarrow> x \\<in> {real a..real b} - Y \\<Longrightarrow>\n       (fs k has_vector_derivative fs (Suc k) x) (at x))\"\n  shows \"(\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n           (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (real b) - fs k (real a))) +\n           EM_remainder' N (fs N) (real a) (real b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "have \"(\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) - \n           integral {real_of_int (int a)..real_of_int (int b)} f =\n           (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R \n             (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n           EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) -\n    integral {real_of_int (int a)..real_of_int (int b)} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n    EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))", "using assms"], ["proof (prove)\nusing this:\n  a \\<le> b\n  0 < N\n  finite Y\n  fs 0 = f\n  ?k \\<le> N \\<Longrightarrow> continuous_on {real a..real b} (fs ?k)\n  \\<lbrakk>?k < N; ?x \\<in> {real a..real b} - Y\\<rbrakk>\n  \\<Longrightarrow> (fs ?k has_vector_derivative fs (Suc ?k) ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) -\n    integral {real_of_int (int a)..real_of_int (int b)} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n    EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))", "by (intro euler_maclaurin_raw_strong_int[where Y = Y] assms) simp_all"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) -\n  integral {real_of_int (int a)..real_of_int (int b)} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n  EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) -\n  integral {real_of_int (int a)..real_of_int (int b)} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n  EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "have \"(\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) = (\\<Sum>i\\<in>{a<..b}. f (real i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) =\n    (\\<Sum>i\\<in>{a<..b}. f (real i))", "by (intro sum.reindex_bij_witness[of _ int nat]) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{int a<..int b}. f (real_of_int i)) =\n  (\\<Sum>i\\<in>{a<..b}. f (real i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>{a<..b}. f (real i)) -\n  integral {real_of_int (int a)..real_of_int (int b)} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n  EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a<..b}. f (real i)) -\n  integral {real_of_int (int a)..real_of_int (int b)} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int (int b)) - fs k (real_of_int (int a)))) +\n  EM_remainder' N (fs N) (real_of_int (int a)) (real_of_int (int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real b) - fs k (real a))) +\n    EM_remainder' N (fs N) (real a) (real b)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a<..b}. f (real i)) - integral {real a..real b} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real b) - fs k (real a))) +\n  EM_remainder' N (fs N) (real a) (real b)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The ``Concrete Mathematics'' version of the Euler--MacLaurin formula\\<close>"], ["", "text \\<open>\n  As explained in \\textit{Concrete Mathematics}~\\cite{GKP_CM}, the above form of the \n  formula has some drawbacks: When applying it to determine the asymptotics of some concrete \n  function, one is usually left with several different unwieldy constant terms that are difficult \n  to get rid of.\n\n  There is no general way to determine what these constant terms are, but in concrete applications, \n  they can often be determined or estimated by other means. We can therefore simply group all the \n  constant terms into a single constant and have the user provide a proof of what it is.\n\\<close>"], ["", "locale euler_maclaurin_int =\n  fixes F f :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes fs :: \"nat \\<Rightarrow> real \\<Rightarrow> 'a\"\n  fixes a :: int\n  fixes N :: nat assumes N: \"N > 0\"\n  fixes C :: 'a\n  fixes Y :: \"real set\" assumes fin: \"finite Y\"\n  assumes fs_0 [simp]: \"fs 0 = f\"\n  assumes fs_cont [continuous_intros]:  \n    \"\\<And>k. k \\<le> N \\<Longrightarrow> continuous_on {real_of_int a..} (fs k)\"\n  assumes fs_deriv [derivative_intros]: \n    \"\\<And>k x. k < N \\<Longrightarrow> x \\<in> {of_int a..} - Y \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\"\n  assumes F_cont [continuous_intros]: \"continuous_on {of_int a..} F\"\n  assumes F_deriv [derivative_intros]: \n    \"\\<And>x. x \\<in> {of_int a..} - Y \\<Longrightarrow> (F has_vector_derivative f x) (at x)\" \n  assumes limit: \n    \"((\\<lambda>b. (\\<Sum>k=a..b. f k) - F (of_int b) - \n         (\\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b))) \\<longlongrightarrow> C) at_top\"\nbegin"], ["", "context\n  fixes C' T\n  defines \"C' \\<equiv> -f a + F a + C + (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (of_int a)))\"\n      and \"T \\<equiv> (\\<lambda>x. \\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i x)\"\nbegin"], ["", "lemma euler_maclaurin_strong_int_aux:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (of_int k))\"\n  shows \"S - F (of_int b) - T (of_int b) = EM_remainder' N (fs N) (of_int a) (of_int b) + (C - C')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "proof (cases \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')\n 2. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')\n 2. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "unfolding C'_def"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) +\n    (C -\n     (- f (real_of_int a) + F (real_of_int a) + C +\n      (\\<Sum>k<N.\n          (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n          fs k (real_of_int a))))", "by (simp add: S_def EM_remainder'_def T_def)"], ["proof (state)\nthis:\n  S - F (real_of_int b) - T (real_of_int b) =\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "with assms"], ["proof (chain)\npicking this:\n  a \\<le> b\n  S \\<equiv> \\<Sum>k = a..b. f (real_of_int k)\n  a \\<noteq> b", "have ab: \"a < b\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  S \\<equiv> \\<Sum>k = a..b. f (real_of_int k)\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a < b", "by simp"], ["proof (state)\nthis:\n  a < b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "define T' where \"T' = (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (of_int a)))\""], ["proof (state)\nthis:\n  T' =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R fs k (real_of_int a))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "have \"(\\<Sum>i\\<in>{a<..b}. f (of_int i)) - integral {of_int a..of_int b} f =\n          (\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (of_int b) - fs k (of_int a))) +\n          EM_remainder' N (fs N) (of_int a) (of_int b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) -\n    integral {real_of_int a..real_of_int b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real_of_int b) - fs k (real_of_int a))) +\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "using ab"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) -\n    integral {real_of_int a..real_of_int b} f =\n    (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real_of_int b) - fs k (real_of_int a))) +\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "by (intro euler_maclaurin_raw_strong_int [where Y = Y] N fin fs_0\n              continuous_on_subset[OF fs_cont] fs_deriv) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) -\n  integral {real_of_int a..real_of_int b} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int b) - fs k (real_of_int a))) +\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) -\n  integral {real_of_int a..real_of_int b} f =\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int b) - fs k (real_of_int a))) +\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "have \"(f has_integral (F b - F a)) {of_int a..of_int b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_integral F (real_of_int b) - F (real_of_int a))\n     {real_of_int a..real_of_int b}", "using ab"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (f has_integral F (real_of_int b) - F (real_of_int a))\n     {real_of_int a..real_of_int b}", "by (intro fundamental_theorem_of_calculus_strong[OF fin])\n       (auto intro!: continuous_on_subset[OF F_cont] derivative_intros)"], ["proof (state)\nthis:\n  (f has_integral F (real_of_int b) - F (real_of_int a))\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "hence \"integral {of_int a..of_int b} f = F (of_int b) - F (of_int a)\""], ["proof (prove)\nusing this:\n  (f has_integral F (real_of_int b) - F (real_of_int a))\n   {real_of_int a..real_of_int b}\n\ngoal (1 subgoal):\n 1. integral {real_of_int a..real_of_int b} f =\n    F (real_of_int b) - F (real_of_int a)", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b} f =\n  F (real_of_int b) - F (real_of_int a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "also"], ["proof (state)\nthis:\n  integral {real_of_int a..real_of_int b} f =\n  F (real_of_int b) - F (real_of_int a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "have \"(\\<Sum>k<N. (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R (fs k (of_int b) - fs k (of_int a))) =\n               T (of_int b) - T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<N.\n        (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n        (fs k (real_of_int b) - fs k (real_of_int a))) =\n    T (real_of_int b) - T'", "by (simp add: T_def T'_def algebra_simps sum_subtractf)"], ["proof (state)\nthis:\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int b) - fs k (real_of_int a))) =\n  T (real_of_int b) - T'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<N.\n      (bernoulli' (Suc k) / fact (Suc k)) *\\<^sub>R\n      (fs k (real_of_int b) - fs k (real_of_int a))) =\n  T (real_of_int b) - T'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "have \"(\\<Sum>i\\<in>{a<..b}. f (of_int i)) = S - f (of_int a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) = S - f (real_of_int a)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) =\n    (\\<Sum>k = a..b. f (real_of_int k)) - f (real_of_int a)", "using ab"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) =\n    (\\<Sum>k = a..b. f (real_of_int k)) - f (real_of_int a)", "by (subst sum_atLeastAtMost_int_head) auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a<..b}. f (real_of_int i)) = S - f (real_of_int a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "finally"], ["proof (chain)\npicking this:\n  S - f (real_of_int a) - (F (real_of_int b) - F (real_of_int a)) =\n  T (real_of_int b) - T' +\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b)", "show ?thesis"], ["proof (prove)\nusing this:\n  S - f (real_of_int a) - (F (real_of_int b) - F (real_of_int a)) =\n  T (real_of_int b) - T' +\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b)\n\ngoal (1 subgoal):\n 1. S - F (real_of_int b) - T (real_of_int b) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')", "by (simp add: algebra_simps C'_def T'_def)"], ["proof (state)\nthis:\n  S - F (real_of_int b) - T (real_of_int b) =\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma EM_remainder_limit:\n  assumes ab: \"a \\<le> b\"\n  defines \"D \\<equiv> EM_remainder' N (fs N) (of_int a) (of_int b)\"\n  shows \"EM_remainder N (fs N) b = C' - D\"\n    and EM_remainder_converges: \"EM_remainder_converges N (fs N) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder N (fs N) b = C' - D &&& EM_remainder_converges N (fs N) b", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "note limit"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       (\\<Sum>i<N.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           fs i (real_of_int b))) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "also"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       (\\<Sum>i<N.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           fs i (real_of_int b))) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "have \"((\\<lambda>b. (\\<Sum>k = a..b. f (of_int k)) - F (of_int b) -\n               (\\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b))) \\<longlongrightarrow> C) at_top =\n             ((\\<lambda>b. (\\<Sum>k = a..b. f (of_int k)) - F (of_int b) - T (of_int b)) \\<longlongrightarrow> C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n         (\\<Sum>i<N.\n             (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n             fs i (real_of_int b))) \\<longlongrightarrow>\n     C)\n     at_top =\n    ((\\<lambda>b.\n         (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n         T (real_of_int b)) \\<longlongrightarrow>\n     C)\n     at_top", "unfolding T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n         (\\<Sum>i<N.\n             (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n             fs i (real_of_int b))) \\<longlongrightarrow>\n     C)\n     at_top =\n    ((\\<lambda>b.\n         (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n         (\\<Sum>i<N.\n             (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n             fs i (real_of_int b))) \\<longlongrightarrow>\n     C)\n     at_top", ".."], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       (\\<Sum>i<N.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           fs i (real_of_int b))) \\<longlongrightarrow>\n   C)\n   at_top =\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       T (real_of_int b)) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "also"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       (\\<Sum>i<N.\n           (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n           fs i (real_of_int b))) \\<longlongrightarrow>\n   C)\n   at_top =\n  ((\\<lambda>b.\n       (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n       T (real_of_int b)) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "have \"eventually (\\<lambda>x. (\\<Sum>k=a..x. f k) - F (of_int x) - T (of_int x) = \n               EM_remainder' N (fs N) (of_int a) (of_int x) + (C - C')) at_top\"\n    (is \"eventually (\\<lambda>x. ?f x = ?g x) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n       T (real_of_int x) =\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C')", "using eventually_gt_at_top[of b]"], ["proof (prove)\nusing this:\n  eventually ((<) b) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n       T (real_of_int x) =\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C')", "by eventually_elim (rule euler_maclaurin_strong_int_aux, insert ab, simp_all)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n     T (real_of_int x) =\n     EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C')\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "hence \"(?f \\<longlongrightarrow> C) at_top \\<longleftrightarrow> (?g \\<longlongrightarrow> C) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n     T (real_of_int x) =\n     EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C')\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n         T (real_of_int x)) \\<longlongrightarrow>\n     C)\n     at_top =\n    ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int a) (real_of_int x) +\n         (C - C')) \\<longlongrightarrow>\n     C)\n     at_top", "by (intro filterlim_cong refl)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (\\<Sum>k = a..x. f (real_of_int k)) - F (real_of_int x) -\n       T (real_of_int x)) \\<longlongrightarrow>\n   C)\n   at_top =\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) +\n       (C - C')) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) +\n       (C - C')) \\<longlongrightarrow>\n   C)\n   at_top", "have \"((\\<lambda>x. ?g x - (C - C')) \\<longlongrightarrow> (C - (C - C'))) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) +\n       (C - C')) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C') -\n         (C - C')) \\<longlongrightarrow>\n     C - (C - C'))\n     at_top", "by (rule tendsto_diff[OF _ tendsto_const])"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C') -\n       (C - C')) \\<longlongrightarrow>\n   C - (C - C'))\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "hence *: \"((\\<lambda>x. EM_remainder' N (fs N) (of_int a) (of_int x)) \\<longlongrightarrow> C') at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) + (C - C') -\n       (C - C')) \\<longlongrightarrow>\n   C - (C - C'))\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int a)\n          (real_of_int x)) \\<longlongrightarrow>\n     C')\n     at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a)\n        (real_of_int x)) \\<longlongrightarrow>\n   C')\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "have \"((\\<lambda>x. EM_remainder' N (fs N) (of_int a) (of_int x) - D) \\<longlongrightarrow> C' - D) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int a) (real_of_int x) -\n         D) \\<longlongrightarrow>\n     C' - D)\n     at_top", "by (intro tendsto_intros *)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) -\n       D) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) -\n       D) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "have \"eventually (\\<lambda>x. EM_remainder' N (fs N) (of_int a) (of_int x) - D = \n                          EM_remainder' N (fs N) (of_int b) (of_int x)) at_top\" \n    (is \"eventually (\\<lambda>x. ?f x = ?g x) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n       EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "using eventually_ge_at_top[of b]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) b) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n       EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       b \\<le> x \\<Longrightarrow>\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n       EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "case (elim x)"], ["proof (state)\nthis:\n  b \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       b \\<le> x \\<Longrightarrow>\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n       EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "have \"EM_remainder' N (fs N) (of_int a) (of_int x) = \n            D + EM_remainder' N (fs N) (of_int b) (of_int x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' N (fs N) (real_of_int a) (real_of_int x) =\n    D + EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "using elim ab"], ["proof (prove)\nusing this:\n  b \\<le> x\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. EM_remainder' N (fs N) (real_of_int a) (real_of_int x) =\n    D + EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "unfolding D_def"], ["proof (prove)\nusing this:\n  b \\<le> x\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. EM_remainder' N (fs N) (real_of_int a) (real_of_int x) =\n    EM_remainder' N (fs N) (real_of_int a) (real_of_int b) +\n    EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "by (intro EM_remainder'_combine [symmetric] continuous_on_subset[OF fs_cont]) auto"], ["proof (state)\nthis:\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int x) =\n  D + EM_remainder' N (fs N) (real_of_int b) (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       b \\<le> x \\<Longrightarrow>\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n       EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "thus ?case"], ["proof (prove)\nusing this:\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int x) =\n  D + EM_remainder' N (fs N) (real_of_int b) (real_of_int x)\n\ngoal (1 subgoal):\n 1. EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n    EM_remainder' N (fs N) (real_of_int b) (real_of_int x)", "by simp"], ["proof (state)\nthis:\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n  EM_remainder' N (fs N) (real_of_int b) (real_of_int x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n     EM_remainder' N (fs N) (real_of_int b) (real_of_int x)\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "hence \"(?f \\<longlongrightarrow> C' - D) at_top \\<longleftrightarrow> (?g \\<longlongrightarrow> C' - D) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     EM_remainder' N (fs N) (real_of_int a) (real_of_int x) - D =\n     EM_remainder' N (fs N) (real_of_int b) (real_of_int x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int a) (real_of_int x) -\n         D) \\<longlongrightarrow>\n     C' - D)\n     at_top =\n    ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int b)\n          (real_of_int x)) \\<longlongrightarrow>\n     C' - D)\n     at_top", "by (intro filterlim_cong refl)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int a) (real_of_int x) -\n       D) \\<longlongrightarrow>\n   C' - D)\n   at_top =\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top", "have *: \\<dots>"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         EM_remainder' N (fs N) (real_of_int b)\n          (real_of_int x)) \\<longlongrightarrow>\n     C' - D)\n     at_top", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (2 subgoals):\n 1. EM_remainder N (fs N) b = C' - D\n 2. EM_remainder_converges N (fs N) b", "from *"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top", "show \"EM_remainder_converges N (fs N) b\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder_converges N (fs N) b", "unfolding EM_remainder_converges_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       ((\\<lambda>x.\n            EM_remainder' N (fs N) (real_of_int b)\n             (real_of_int x)) \\<longlongrightarrow>\n        L)\n        at_top", ".."], ["proof (state)\nthis:\n  EM_remainder_converges N (fs N) b\n\ngoal (1 subgoal):\n 1. EM_remainder N (fs N) b = C' - D", "from *"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top", "show \"EM_remainder N (fs N) b = C' - D\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       EM_remainder' N (fs N) (real_of_int b)\n        (real_of_int x)) \\<longlongrightarrow>\n   C' - D)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder N (fs N) b = C' - D", "by (rule EM_remainder_eqI)"], ["proof (state)\nthis:\n  EM_remainder N (fs N) b = C' - D\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem euler_maclaurin_strong_int:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (of_int k))\"\n  shows \"S = F (of_int b) + C + T (of_int b) - EM_remainder N (fs N) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "have \"S = F (of_int b) + T (of_int b) + - (C' - EM_remainder' N (fs N) (of_int a) (of_int b)) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S =\n    F (real_of_int b) + T (real_of_int b) +\n    - (C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b)) +\n    C", "using euler_maclaurin_strong_int_aux[OF ab]"], ["proof (prove)\nusing this:\n  (\\<Sum>k = a..b. f (real_of_int k)) - F (real_of_int b) -\n  T (real_of_int b) =\n  EM_remainder' N (fs N) (real_of_int a) (real_of_int b) + (C - C')\n\ngoal (1 subgoal):\n 1. S =\n    F (real_of_int b) + T (real_of_int b) +\n    - (C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b)) +\n    C", "by (simp add: algebra_simps S_def)"], ["proof (state)\nthis:\n  S =\n  F (real_of_int b) + T (real_of_int b) +\n  - (C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b)) +\n  C\n\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "also"], ["proof (state)\nthis:\n  S =\n  F (real_of_int b) + T (real_of_int b) +\n  - (C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b)) +\n  C\n\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "have \"C' - EM_remainder' N (fs N) (of_int a) (of_int b) = EM_remainder N (fs N) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b) =\n    EM_remainder N (fs N) b", "using ab"], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b) =\n    EM_remainder N (fs N) b", "by (rule EM_remainder_limit(1) [symmetric])"], ["proof (state)\nthis:\n  C' - EM_remainder' N (fs N) (real_of_int a) (real_of_int b) =\n  EM_remainder N (fs N) b\n\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "finally"], ["proof (chain)\npicking this:\n  S = F (real_of_int b) + T (real_of_int b) + - EM_remainder N (fs N) b + C", "show ?thesis"], ["proof (prove)\nusing this:\n  S = F (real_of_int b) + T (real_of_int b) + - EM_remainder N (fs N) b + C\n\ngoal (1 subgoal):\n 1. S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b", "by simp"], ["proof (state)\nthis:\n  S = F (real_of_int b) + C + T (real_of_int b) - EM_remainder N (fs N) b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "text \\<open>\n  The following version of the formula removes all the terms where the associated\n  Bernoulli numbers vanish. \n\\<close>"], ["", "locale euler_maclaurin_int' =\n  fixes F f :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes fs :: \"nat \\<Rightarrow> real \\<Rightarrow> 'a\"\n  fixes a :: int\n  fixes N :: nat\n  fixes C :: 'a\n  fixes Y :: \"real set\" assumes fin: \"finite Y\"\n  assumes fs_0 [simp]: \"fs 0 = f\"\n  assumes fs_cont [continuous_intros]:  \n    \"\\<And>k. k \\<le> 2*N+1 \\<Longrightarrow> continuous_on {real_of_int a..} (fs k)\"\n  assumes fs_deriv [derivative_intros]: \n    \"\\<And>k x. k \\<le> 2*N \\<Longrightarrow> x \\<in> {of_int a..} - Y \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\"\n  assumes F_cont [continuous_intros]: \"continuous_on {of_int a..} F\"\n  assumes F_deriv [derivative_intros]: \n    \"\\<And>x. x \\<in> {of_int a..} - Y \\<Longrightarrow> (F has_vector_derivative f x) (at x)\" \n  assumes limit: \n    \"((\\<lambda>b. (\\<Sum>k=a..b. f k) - F (of_int b) -\n         (\\<Sum>i<2*N+1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b))) \\<longlongrightarrow> C) at_top\"\nbegin"], ["", "sublocale euler_maclaurin_int F f fs a \"2*N+1\" C Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_int F f fs a (2 * N + 1) C Y", "by standard (insert fin fs_0 fs_cont fs_deriv F_cont F_deriv limit, simp_all)"], ["", "theorem euler_maclaurin_strong_int':\n  assumes \"a \\<le> b\"\n  shows   \"(\\<Sum>k=a..b. f (of_int k)) = \n             F (of_int b) + C + (1 / 2) *\\<^sub>R f (of_int b) +\n             (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (of_int b)) - \n             EM_remainder (2*N+1) (fs (2*N+1)) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "have \"(\\<Sum>k=a..b. f (real_of_int k)) = \n               F (of_int b) + C + (\\<Sum>i<2*N+1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b)) - \n               EM_remainder (2*N+1) (fs (2*N+1)) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C +\n    (\\<Sum>i<2 * N + 1.\n        (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n        fs i (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "by (rule euler_maclaurin_strong_int)\n       (simp_all only: lessThan_Suc_atMost Suc_eq_plus1 [symmetric] assms)"], ["proof (state)\nthis:\n  (\\<Sum>k = a..b. f (real_of_int k)) =\n  F (real_of_int b) + C +\n  (\\<Sum>i<2 * N + 1.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = a..b. f (real_of_int k)) =\n  F (real_of_int b) + C +\n  (\\<Sum>i<2 * N + 1.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "have \"{..<2*N+1} = insert 0 {1..2*N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<2 * N + 1} = insert 0 {1..2 * N}", "by auto"], ["proof (state)\nthis:\n  {..<2 * N + 1} = insert 0 {1..2 * N}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "also"], ["proof (state)\nthis:\n  {..<2 * N + 1} = insert 0 {1..2 * N}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "have \"(\\<Sum>i\\<in>\\<dots>. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b)) =\n               (1 / 2) *\\<^sub>R f (of_int b) + \n               (\\<Sum>i\\<in>{1..2*N}. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert 0 {1..2 * N}.\n       (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) =\n    (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..2 * N.\n        (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b))", "by (subst sum.insert) (auto simp: assms bernoulli'_def)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert 0 {1..2 * N}.\n     (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) =\n  (1 / 2) *\\<^sub>R f (real_of_int b) +\n  (\\<Sum>i = 1..2 * N.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert 0 {1..2 * N}.\n     (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) =\n  (1 / 2) *\\<^sub>R f (real_of_int b) +\n  (\\<Sum>i = 1..2 * N.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "have \"(\\<Sum>i\\<in>{1..2*N}. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (of_int b)) =\n               (\\<Sum>i\\<in>{1..N}. (bernoulli' (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (of_int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..2 * N.\n        (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n        fs i (real_of_int b)) =\n    (\\<Sum>i = 1..N.\n        (bernoulli' (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b))", "proof (rule sym, rule sum.reindex_bij_witness_not_neutral)"], ["proof (state)\ngoal (9 subgoals):\n 1. finite ?S'2\n 2. finite ?T'2\n 3. \\<And>a. a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?i2 (?j2 a) = a\n 4. \\<And>a.\n       a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?j2 a \\<in> {1..2 * N} - ?T'2\n 5. \\<And>b. b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?j2 (?i2 b) = b\n 6. \\<And>b.\n       b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?i2 b \\<in> {1..N} - ?S'2\n 7. \\<And>a.\n       a \\<in> ?S'2 \\<Longrightarrow>\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b) =\n       (0::'a)\n 8. \\<And>ba.\n       ba \\<in> ?T'2 \\<Longrightarrow>\n       (bernoulli' (Suc ba) / fact (Suc ba)) *\\<^sub>R\n       fs ba (real_of_int b) =\n       (0::'a)\n 9. \\<And>a.\n       a \\<in> {1..N} \\<Longrightarrow>\n       (bernoulli' (Suc (?j2 a)) / fact (Suc (?j2 a))) *\\<^sub>R\n       fs (?j2 a) (real_of_int b) =\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b)", "fix i"], ["proof (state)\ngoal (9 subgoals):\n 1. finite ?S'2\n 2. finite ?T'2\n 3. \\<And>a. a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?i2 (?j2 a) = a\n 4. \\<And>a.\n       a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?j2 a \\<in> {1..2 * N} - ?T'2\n 5. \\<And>b. b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?j2 (?i2 b) = b\n 6. \\<And>b.\n       b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?i2 b \\<in> {1..N} - ?S'2\n 7. \\<And>a.\n       a \\<in> ?S'2 \\<Longrightarrow>\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b) =\n       (0::'a)\n 8. \\<And>ba.\n       ba \\<in> ?T'2 \\<Longrightarrow>\n       (bernoulli' (Suc ba) / fact (Suc ba)) *\\<^sub>R\n       fs ba (real_of_int b) =\n       (0::'a)\n 9. \\<And>a.\n       a \\<in> {1..N} \\<Longrightarrow>\n       (bernoulli' (Suc (?j2 a)) / fact (Suc (?j2 a))) *\\<^sub>R\n       fs (?j2 a) (real_of_int b) =\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b)", "assume \"i \\<in> {1..2*N} - {i\\<in>{1..2*N}. even i}\""], ["proof (state)\nthis:\n  i \\<in> {1..2 * N} - {i \\<in> {1..2 * N}. even i}\n\ngoal (9 subgoals):\n 1. finite ?S'2\n 2. finite ?T'2\n 3. \\<And>a. a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?i2 (?j2 a) = a\n 4. \\<And>a.\n       a \\<in> {1..N} - ?S'2 \\<Longrightarrow> ?j2 a \\<in> {1..2 * N} - ?T'2\n 5. \\<And>b. b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?j2 (?i2 b) = b\n 6. \\<And>b.\n       b \\<in> {1..2 * N} - ?T'2 \\<Longrightarrow> ?i2 b \\<in> {1..N} - ?S'2\n 7. \\<And>a.\n       a \\<in> ?S'2 \\<Longrightarrow>\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b) =\n       (0::'a)\n 8. \\<And>ba.\n       ba \\<in> ?T'2 \\<Longrightarrow>\n       (bernoulli' (Suc ba) / fact (Suc ba)) *\\<^sub>R\n       fs ba (real_of_int b) =\n       (0::'a)\n 9. \\<And>a.\n       a \\<in> {1..N} \\<Longrightarrow>\n       (bernoulli' (Suc (?j2 a)) / fact (Suc (?j2 a))) *\\<^sub>R\n       fs (?j2 a) (real_of_int b) =\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b)", "thus \"2 * ((i + 1) div 2) - 1 = i\" \"(i + 1) div 2 \\<in> {1..N} - {}\""], ["proof (prove)\nusing this:\n  i \\<in> {1..2 * N} - {i \\<in> {1..2 * N}. even i}\n\ngoal (1 subgoal):\n 1. 2 * ((i + 1) div 2) - 1 = i &&& (i + 1) div 2 \\<in> {1..N} - {}", "by (auto elim!: oddE)"], ["proof (state)\nthis:\n  2 * ((i + 1) div 2) - 1 = i\n  (i + 1) div 2 \\<in> {1..N} - {}\n\ngoal (7 subgoals):\n 1. finite {}\n 2. finite {i \\<in> {1..2 * N}. even i}\n 3. \\<And>a. a \\<in> {1..N} - {} \\<Longrightarrow> (2 * a - 1 + 1) div 2 = a\n 4. \\<And>a.\n       a \\<in> {1..N} - {} \\<Longrightarrow>\n       2 * a - 1 \\<in> {1..2 * N} - {i \\<in> {1..2 * N}. even i}\n 5. \\<And>a.\n       a \\<in> {} \\<Longrightarrow>\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b) =\n       (0::'a)\n 6. \\<And>ba.\n       ba \\<in> {i \\<in> {1..2 * N}. even i} \\<Longrightarrow>\n       (bernoulli' (Suc ba) / fact (Suc ba)) *\\<^sub>R\n       fs ba (real_of_int b) =\n       (0::'a)\n 7. \\<And>a.\n       a \\<in> {1..N} \\<Longrightarrow>\n       (bernoulli' (Suc (2 * a - 1)) / fact (Suc (2 * a - 1))) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b) =\n       (bernoulli' (2 * a) / fact (2 * a)) *\\<^sub>R\n       fs (2 * a - 1) (real_of_int b)", "qed (auto simp: bernoulli_odd_eq_0 bernoulli'_def algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..2 * N.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) =\n  (\\<Sum>i = 1..N.\n      (bernoulli' (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..2 * N.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real_of_int b)) =\n  (\\<Sum>i = 1..N.\n      (bernoulli' (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "have \"\\<dots> = (\\<Sum>i\\<in>{1..N}. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (of_int b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..N.\n        (bernoulli' (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) =\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b))", "by (intro sum.cong refl) (auto simp: bernoulli'_def)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      (bernoulli' (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int b)) =\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = a..b. f (real_of_int k)) =\n  F (real_of_int b) + C +\n  ((1 / 2) *\\<^sub>R f (real_of_int b) +\n   (\\<Sum>i = 1..N.\n       (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n       fs (2 * i - 1) (real_of_int b))) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = a..b. f (real_of_int k)) =\n  F (real_of_int b) + C +\n  ((1 / 2) *\\<^sub>R f (real_of_int b) +\n   (\\<Sum>i = 1..N.\n       (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n       fs (2 * i - 1) (real_of_int b))) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) b\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real_of_int k)) =\n    F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real_of_int b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) b", "by (simp only: add_ac)"], ["proof (state)\nthis:\n  (\\<Sum>k = a..b. f (real_of_int k)) =\n  F (real_of_int b) + C + (1 / 2) *\\<^sub>R f (real_of_int b) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int b)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  For convenience, we also offer a version where the sum ranges over natural numbers\n  instead of integers.\n\\<close>"], ["", "lemma sum_atLeastAtMost_of_int_nat_transfer:\n  \"(\\<Sum>k=int a..int b. f (of_int k)) = (\\<Sum>k=a..b. f (of_nat k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = int a..int b. f (of_int k)) = (\\<Sum>k = a..b. f (of_nat k))", "by (intro sum.reindex_bij_witness[of _ int nat]) auto"], ["", "lemma euler_maclaurin_nat_int_transfer:\n  fixes F and f :: \"real \\<Rightarrow> 'a :: real_normed_vector\"\n  assumes \"((\\<lambda>b. (\\<Sum>k=a..b. f (real k)) - F (real b) - T (real b)) \\<longlongrightarrow> C) at_top\"\n  shows   \"((\\<lambda>b. (\\<Sum>k=int a..b. f (of_int k)) - F (of_int b) - T (of_int b)) \\<longlongrightarrow> C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = int a..b. f (real_of_int k)) - F (real_of_int b) -\n         T (real_of_int b)) \\<longlongrightarrow>\n     C)\n     at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = int a..b. f (real_of_int k)) - F (real_of_int b) -\n         T (real_of_int b)) \\<longlongrightarrow>\n     C)\n     at_top", "have *: \"((\\<lambda>b. (\\<Sum>k=int a..int b. f (of_int k)) - F (of_int (int b)) - T (of_int (int b)))\n            \\<longlongrightarrow> C) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = int a..int b. f (real_of_int k)) -\n        F (real_of_int (int b)) -\n        T (real_of_int (int b)))\n    \\<longlonglongrightarrow> C", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>b. (\\<Sum>k = a..b. f (real k)) - F (real b) - T (real b))\n  \\<longlonglongrightarrow> C\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = int a..int b. f (real_of_int k)) -\n        F (real_of_int (int b)) -\n        T (real_of_int (int b)))\n    \\<longlonglongrightarrow> C", "by (subst sum_atLeastAtMost_of_int_nat_transfer) simp"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      (\\<Sum>k = int a..int b. f (real_of_int k)) -\n      F (real_of_int (int b)) -\n      T (real_of_int (int b)))\n  \\<longlonglongrightarrow> C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = int a..b. f (real_of_int k)) - F (real_of_int b) -\n         T (real_of_int b)) \\<longlongrightarrow>\n     C)\n     at_top", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>b.\n      (\\<Sum>k = int a..int b. f (real_of_int k)) -\n      F (real_of_int (int b)) -\n      T (real_of_int (int b)))\n  \\<longlonglongrightarrow> C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>b.\n         (\\<Sum>k = int a..b. f (real_of_int k)) - F (real_of_int b) -\n         T (real_of_int b)) \\<longlongrightarrow>\n     C)\n     at_top", "by (rule filterlim_int_of_nat_at_topD)"], ["proof (state)\nthis:\n  ((\\<lambda>b.\n       (\\<Sum>k = int a..b. f (real_of_int k)) - F (real_of_int b) -\n       T (real_of_int b)) \\<longlongrightarrow>\n   C)\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "locale euler_maclaurin_nat =\n  fixes F f :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes fs :: \"nat \\<Rightarrow> real \\<Rightarrow> 'a\"\n  fixes a :: nat\n  fixes N :: nat assumes N: \"N > 0\"\n  fixes C :: 'a\n  fixes Y :: \"real set\" assumes fin: \"finite Y\"\n  assumes fs_0 [simp]: \"fs 0 = f\"\n  assumes fs_cont [continuous_intros]:  \n    \"\\<And>k. k \\<le> N \\<Longrightarrow> continuous_on {real a..} (fs k)\"\n  assumes fs_deriv [derivative_intros]: \n    \"\\<And>k x. k < N \\<Longrightarrow> x \\<in> {real a..} - Y \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\"\n  assumes F_cont [continuous_intros]: \"continuous_on {real a..} F\"\n  assumes F_deriv [derivative_intros]: \n    \"\\<And>x. x \\<in> {real a..} - Y \\<Longrightarrow> (F has_vector_derivative f x) (at x)\" \n  assumes limit: \n    \"((\\<lambda>b. (\\<Sum>k=a..b. f k) - F (real b) - \n         (\\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b))) \\<longlongrightarrow> C) at_top\"\nbegin"], ["", "sublocale euler_maclaurin_int F f fs \"int a\" N C Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_int F f fs (int a) N C Y", "by standard (insert N fin fs_cont fs_deriv F_cont F_deriv \n                 euler_maclaurin_nat_int_transfer[OF limit], simp_all)"], ["", "theorem euler_maclaurin_strong_nat:\n  assumes ab: \"a \\<le> b\"\n  defines \"S \\<equiv> (\\<Sum>k=a..b. f (real k))\"\n  shows \"S = F (real b) + C + (\\<Sum>i<N. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)) - \n               EM_remainder N (fs N) (int b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S =\n    F (real b) + C +\n    (\\<Sum>i<N.\n        (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)) -\n    EM_remainder N (fs N) (int b)", "using euler_maclaurin_strong_int[of \"int b\"]"], ["proof (prove)\nusing this:\n  int a \\<le> int b \\<Longrightarrow>\n  (\\<Sum>k = int a..int b. f (real_of_int k)) =\n  F (real_of_int (int b)) + C +\n  (\\<Sum>i<N.\n      (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R\n      fs i (real_of_int (int b))) -\n  EM_remainder N (fs N) (int b)\n\ngoal (1 subgoal):\n 1. S =\n    F (real b) + C +\n    (\\<Sum>i<N.\n        (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)) -\n    EM_remainder N (fs N) (int b)", "by (simp add: assms sum_atLeastAtMost_of_int_nat_transfer)"], ["", "end"], ["", "locale euler_maclaurin_nat' =\n  fixes F f :: \"real \\<Rightarrow> 'a :: banach\"\n  fixes fs :: \"nat \\<Rightarrow> real \\<Rightarrow> 'a\"\n  fixes a :: nat\n  fixes N :: nat\n  fixes C :: 'a\n  fixes Y :: \"real set\" assumes fin: \"finite Y\"\n  assumes fs_0 [simp]: \"fs 0 = f\"\n  assumes fs_cont [continuous_intros]:  \n    \"\\<And>k. k \\<le> 2*N+1 \\<Longrightarrow> continuous_on {real a..} (fs k)\"\n  assumes fs_deriv [derivative_intros]: \n    \"\\<And>k x. k \\<le> 2*N \\<Longrightarrow> x \\<in> {real a..} - Y \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\"\n  assumes F_cont [continuous_intros]: \"continuous_on {real a..} F\"\n  assumes F_deriv [derivative_intros]: \n    \"\\<And>x. x \\<in> {real a..} - Y \\<Longrightarrow> (F has_vector_derivative f x) (at x)\" \n  assumes limit: \n    \"((\\<lambda>b. (\\<Sum>k=a..b. f k) - F (real b) - \n        (\\<Sum>i<2*N+1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b))) \\<longlongrightarrow> C) at_top\"\nbegin"], ["", "sublocale euler_maclaurin_int' F f fs \"int a\" N C Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_int' F f fs (int a) N C Y", "by standard (insert fin fs_cont fs_deriv F_cont F_deriv \n                 euler_maclaurin_nat_int_transfer[OF limit], simp_all)"], ["", "theorem euler_maclaurin_strong_nat':\n  assumes \"a \\<le> b\"\n  shows   \"(\\<Sum>k=a..b. f (real k)) = \n             F (real b) + C + (1 / 2) *\\<^sub>R f (real b) +\n             (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (real b)) - \n             EM_remainder (2*N+1) (fs (2*N+1)) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real k)) =\n    F (real b) + C + (1 / 2) *\\<^sub>R f (real b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int b)", "using euler_maclaurin_strong_int'[of b]"], ["proof (prove)\nusing this:\n  int a \\<le> int b \\<Longrightarrow>\n  (\\<Sum>k = int a..int b. f (real_of_int k)) =\n  F (real_of_int (int b)) + C + (1 / 2) *\\<^sub>R f (real_of_int (int b)) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real_of_int (int b))) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = a..b. f (real k)) =\n    F (real b) + C + (1 / 2) *\\<^sub>R f (real b) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real b)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int b)", "by (simp add: assms sum_atLeastAtMost_of_int_nat_transfer)"], ["", "end"], ["", "subsection \\<open>Bounds on the remainder term\\<close>"], ["", "text \\<open>\n  The following theorems provide some simple means to bound the remainder terms.\n  In practice, better bounds can often be obtained e.\\,g. for the $n$-th remainder term\n  by expanding it to the sum of the first discarded term in the expansion and the $n+1$-th \n  remainder term.\n\\<close>"], ["", "lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes pbernpoly_bound: \"\\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> C) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative g' x) (at x)\"\n  shows   norm_EM_remainder_le_strong_int:\n            \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * (C - g x)\"\n  and     norm_EM_remainder_le_strong_nat:\n            \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> D / fact n * (C - g (real_of_int x)) &&&\n    \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "from pbernpoly_bound"], ["proof (chain)\npicking this:\n  \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D", "have D: \"norm (pbernpoly n x) \\<le> D\" for x"], ["proof (prove)\nusing this:\n  \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\n\ngoal (1 subgoal):\n 1. norm (pbernpoly n x) \\<le> D", "by auto"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> D\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "from this[of 0]"], ["proof (chain)\npicking this:\n  norm (pbernpoly n 0) \\<le> D", "have D_nonneg: \"D \\<ge> 0\""], ["proof (prove)\nusing this:\n  norm (pbernpoly n 0) \\<le> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> D", "by simp"], ["proof (state)\nthis:\n  0 \\<le> D\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "define D' where \"D' = D / fact n\""], ["proof (state)\nthis:\n  D' = D / fact n\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "from D_nonneg"], ["proof (chain)\npicking this:\n  0 \\<le> D", "have D'_nonneg: \"D' \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> D'", "by (simp add: D'_def)"], ["proof (state)\nthis:\n  0 \\<le> D'\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "have bound: \"norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)\"\n    if xy: \"x \\<ge> a\" \"x \\<le> y\" for x y :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "have \"norm (EM_remainder' n f x y) = norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) / fact n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) =\n    norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) /\n    fact n", "by (simp add: EM_remainder'_def)"], ["proof (state)\nthis:\n  norm (EM_remainder' n f x y) =\n  norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) / fact n\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "also"], ["proof (state)\nthis:\n  norm (EM_remainder' n f x y) =\n  norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) / fact n\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "have \"(\\<lambda>t. D * g' t) integrable_on {x..y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. D * g' t) integrable_on {x..y}", "using xy"], ["proof (prove)\nusing this:\n  a \\<le> x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. D * g' t) integrable_on {x..y}", "by (intro integrable_continuous_real continuous_intros continuous_on_subset[OF cont_g'])\n         auto"], ["proof (state)\nthis:\n  (\\<lambda>t. D * g' t) integrable_on {x..y}\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "hence \"norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) \\<le>\n            integral {x..y} (\\<lambda>t. D * g' t)\""], ["proof (prove)\nusing this:\n  (\\<lambda>t. D * g' t) integrable_on {x..y}\n\ngoal (1 subgoal):\n 1. norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> integral {x..y} (\\<lambda>t. D * g' t)", "using D D_nonneg xy"], ["proof (prove)\nusing this:\n  (\\<lambda>t. D * g' t) integrable_on {x..y}\n  norm (pbernpoly n ?x) \\<le> D\n  0 \\<le> D\n  a \\<le> x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> integral {x..y} (\\<lambda>t. D * g' t)", "by (intro integral_norm_bound_integral integrable_EM_remainder' \n               continuous_on_subset[OF cont_f]) (auto intro!: mult_mono f_bound)"], ["proof (state)\nthis:\n  norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> integral {x..y} (\\<lambda>t. D * g' t)\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "also"], ["proof (state)\nthis:\n  norm (integral {x..y} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> integral {x..y} (\\<lambda>t. D * g' t)\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "have \"\\<dots> = D * integral {x..y} g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {x..y} (\\<lambda>t. D * g' t) = D * integral {x..y} g'", "by simp"], ["proof (state)\nthis:\n  integral {x..y} (\\<lambda>t. D * g' t) = D * integral {x..y} g'\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "also"], ["proof (state)\nthis:\n  integral {x..y} (\\<lambda>t. D * g' t) = D * integral {x..y} g'\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "have \"(g' has_integral (g y - g x)) {x..y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g' has_integral g y - g x) {x..y}", "using xy"], ["proof (prove)\nusing this:\n  a \\<le> x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. (g' has_integral g y - g x) {x..y}", "by (intro fundamental_theorem_of_calculus_strong[OF fin] continuous_on_subset[OF cont_g])\n         (auto simp: has_field_derivative_iff_has_vector_derivative [symmetric] intro!: deriv)"], ["proof (state)\nthis:\n  (g' has_integral g y - g x) {x..y}\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "hence \"integral {x..y} g' = g y - g x\""], ["proof (prove)\nusing this:\n  (g' has_integral g y - g x) {x..y}\n\ngoal (1 subgoal):\n 1. integral {x..y} g' = g y - g x", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {x..y} g' = g y - g x\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x / fact n \\<le> y / fact n) \\<Longrightarrow>\n  norm (EM_remainder' n f x y) \\<le> D * (g y - g x) / fact n", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x / fact n \\<le> y / fact n) \\<Longrightarrow>\n  norm (EM_remainder' n f x y) \\<le> D * (g y - g x) / fact n\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)", "by (simp add: D'_def divide_simps)"], ["proof (state)\nthis:\n  norm (EM_remainder' n f x y) \\<le> D' * (g y - g x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<le> ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> norm (EM_remainder' n f ?x ?y) \\<le> D' * (g ?y - g ?x)\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "have lim: \"((\\<lambda>y. EM_remainder' n f x (of_int y)) \\<longlongrightarrow> EM_remainder n f x) at_top\" \n    if x: \"x \\<ge> a\" for x :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "have \"(\\<lambda>n. g (real n)) \\<longlonglongrightarrow> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. g (real n)) \\<longlonglongrightarrow> C", "by (rule filterlim_compose[OF limit_g filterlim_real_sequentially])"], ["proof (state)\nthis:\n  (\\<lambda>n. g (real n)) \\<longlonglongrightarrow> C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "hence Cauchy: \"Cauchy (\\<lambda>n. g (real n))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. g (real n)) \\<longlonglongrightarrow> C\n\ngoal (1 subgoal):\n 1. Cauchy (\\<lambda>n. g (real n))", "using convergent_eq_Cauchy"], ["proof (prove)\nusing this:\n  (\\<lambda>n. g (real n)) \\<longlonglongrightarrow> C\n  (\\<exists>l. ?S \\<longlonglongrightarrow> l) = Cauchy ?S\n\ngoal (1 subgoal):\n 1. Cauchy (\\<lambda>n. g (real n))", "by blast"], ["proof (state)\nthis:\n  Cauchy (\\<lambda>n. g (real n))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "have \"Cauchy (\\<lambda>y. EM_remainder' n f x (int y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cauchy\n     (\\<lambda>y. EM_remainder' n f (real_of_int x) (real_of_int (int y)))", "proof (rule CauchyI', goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>m\\<ge>M.\n             \\<forall>na>m.\n                dist\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n                < e", "case (1 \\<epsilon>)"], ["proof (state)\nthis:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>m\\<ge>M.\n             \\<forall>na>m.\n                dist\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n                < e", "define \\<epsilon>' where \"\\<epsilon>' = (if D' = 0 then 1 else \\<epsilon> / (2*D'))\""], ["proof (state)\nthis:\n  \\<epsilon>' = (if D' = 0 then 1 else \\<epsilon> / (2 * D'))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>m\\<ge>M.\n             \\<forall>na>m.\n                dist\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n                < e", "from \\<open>\\<epsilon> > 0\\<close> D'_nonneg"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  0 \\<le> D'", "have \\<epsilon>': \"\\<epsilon>' > 0\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  0 \\<le> D'\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>'", "by (simp add: \\<epsilon>'_def divide_simps)"], ["proof (state)\nthis:\n  0 < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>m\\<ge>M.\n             \\<forall>na>m.\n                dist\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n                < e", "from CauchyD[OF Cauchy this]"], ["proof (chain)\npicking this:\n  \\<exists>M.\n     \\<forall>m\\<ge>M.\n        \\<forall>n\\<ge>M. norm (g (real m) - g (real n)) < \\<epsilon>'", "obtain M \n        where M: \"\\<And>m n. m \\<ge> M \\<Longrightarrow> n \\<ge> M \\<Longrightarrow> norm (g (real m) - g (real n)) < \\<epsilon>'\""], ["proof (prove)\nusing this:\n  \\<exists>M.\n     \\<forall>m\\<ge>M.\n        \\<forall>n\\<ge>M. norm (g (real m) - g (real n)) < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<And>m n.\n            \\<lbrakk>M \\<le> m; M \\<le> n\\<rbrakk>\n            \\<Longrightarrow> norm (g (real m) - g (real n))\n                              < \\<epsilon>') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>M \\<le> ?m; M \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> norm (g (real ?m) - g (real ?n)) < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>m\\<ge>M.\n             \\<forall>na>m.\n                dist\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n                 (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n                < e", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       \\<forall>m\\<ge>M.\n          \\<forall>na>m.\n             dist (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n              (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n             < \\<epsilon>", "proof (intro CauchyI' exI[of _ \"max (max 0 M) (nat x)\"] allI impI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "case (1 k l)"], ["proof (state)\nthis:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "have \"EM_remainder' n f x k + EM_remainder' n f k l = EM_remainder' n f x l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int x) (real k) +\n    EM_remainder' n f (real k) (real l) =\n    EM_remainder' n f (real_of_int x) (real l)", "using 1 x"], ["proof (prove)\nusing this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n  a \\<le> real_of_int x\n\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int x) (real k) +\n    EM_remainder' n f (real k) (real l) =\n    EM_remainder' n f (real_of_int x) (real l)", "by (intro EM_remainder'_combine continuous_on_subset[OF cont_f]) auto"], ["proof (state)\nthis:\n  EM_remainder' n f (real_of_int x) (real k) +\n  EM_remainder' n f (real k) (real l) =\n  EM_remainder' n f (real_of_int x) (real l)\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "hence \"EM_remainder' n f x l - EM_remainder' n f x k = EM_remainder' n f k l\""], ["proof (prove)\nusing this:\n  EM_remainder' n f (real_of_int x) (real k) +\n  EM_remainder' n f (real k) (real l) =\n  EM_remainder' n f (real_of_int x) (real l)\n\ngoal (1 subgoal):\n 1. EM_remainder' n f (real_of_int x) (real l) -\n    EM_remainder' n f (real_of_int x) (real k) =\n    EM_remainder' n f (real k) (real l)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  EM_remainder' n f (real_of_int x) (real l) -\n  EM_remainder' n f (real_of_int x) (real k) =\n  EM_remainder' n f (real k) (real l)\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  EM_remainder' n f (real_of_int x) (real l) -\n  EM_remainder' n f (real_of_int x) (real k) =\n  EM_remainder' n f (real k) (real l)\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "from 1 x"], ["proof (chain)\npicking this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n  a \\<le> real_of_int x", "have \"norm \\<dots> \\<le> D' * (g l - g k)\""], ["proof (prove)\nusing this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n  a \\<le> real_of_int x\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f (real k) (real l))\n    \\<le> D' * (g (real l) - g (real k))", "by (intro bound) auto"], ["proof (state)\nthis:\n  norm (EM_remainder' n f (real k) (real l))\n  \\<le> D' * (g (real l) - g (real k))\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (EM_remainder' n f (real k) (real l))\n  \\<le> D' * (g (real l) - g (real k))\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "have \"g l - g k \\<le> norm (g l - g k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (real l) - g (real k) \\<le> norm (g (real l) - g (real k))", "by simp"], ["proof (state)\nthis:\n  g (real l) - g (real k) \\<le> norm (g (real l) - g (real k))\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  g (real l) - g (real k) \\<le> norm (g (real l) - g (real k))\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "from 1"], ["proof (chain)\npicking this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l", "have \"\\<dots> \\<le> \\<epsilon>'\""], ["proof (prove)\nusing this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n\ngoal (1 subgoal):\n 1. norm (g (real l) - g (real k)) \\<le> \\<epsilon>'", "using M[of l k]"], ["proof (prove)\nusing this:\n  max (max 0 M) (nat x) \\<le> k\n  k < l\n  \\<lbrakk>M \\<le> l; M \\<le> k\\<rbrakk>\n  \\<Longrightarrow> norm (g (real l) - g (real k)) < \\<epsilon>'\n\ngoal (1 subgoal):\n 1. norm (g (real l) - g (real k)) \\<le> \\<epsilon>'", "by auto"], ["proof (state)\nthis:\n  norm (g (real l) - g (real k)) \\<le> \\<epsilon>'\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (g (real l) - g (real k)) \\<le> \\<epsilon>'\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "from \\<open>\\<epsilon> > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>", "have \"D' * \\<epsilon>' \\<le> \\<epsilon> / 2\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. D' * \\<epsilon>' \\<le> \\<epsilon> / 2", "by (simp add: \\<epsilon>'_def)"], ["proof (state)\nthis:\n  D' * \\<epsilon>' \\<le> \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "also"], ["proof (state)\nthis:\n  D' * \\<epsilon>' \\<le> \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "from \\<open>\\<epsilon> > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>", "have \"\\<dots> < \\<epsilon>\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<epsilon> / 2 < \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  \\<epsilon> / 2 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>m na.\n       \\<lbrakk>max (max 0 M) (nat x) \\<le> m; m < na\\<rbrakk>\n       \\<Longrightarrow> dist\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int m)))\n                          (EM_remainder' n f (real_of_int x)\n                            (real_of_int (int na)))\n                         < \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> D' * x \\<le> D' * y;\n   \\<And>x y. x \\<le> y \\<Longrightarrow> D' * x \\<le> D' * y\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (EM_remainder' n f (real_of_int x) (real l) -\n                      EM_remainder' n f (real_of_int x) (real k))\n                    < \\<epsilon>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y. x \\<le> y \\<Longrightarrow> D' * x \\<le> D' * y;\n   \\<And>x y. x \\<le> y \\<Longrightarrow> D' * x \\<le> D' * y\\<rbrakk>\n  \\<Longrightarrow> norm\n                     (EM_remainder' n f (real_of_int x) (real l) -\n                      EM_remainder' n f (real_of_int x) (real k))\n                    < \\<epsilon>\n\ngoal (1 subgoal):\n 1. dist (EM_remainder' n f (real_of_int x) (real_of_int (int k)))\n     (EM_remainder' n f (real_of_int x) (real_of_int (int l)))\n    < \\<epsilon>", "by (simp add: D'_nonneg mult_left_mono dist_norm norm_minus_commute)"], ["proof (state)\nthis:\n  dist (EM_remainder' n f (real_of_int x) (real_of_int (int k)))\n   (EM_remainder' n f (real_of_int x) (real_of_int (int l)))\n  < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>M.\n     \\<forall>m\\<ge>M.\n        \\<forall>na>m.\n           dist (EM_remainder' n f (real_of_int x) (real_of_int (int m)))\n            (EM_remainder' n f (real_of_int x) (real_of_int (int na)))\n           < \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Cauchy\n   (\\<lambda>y. EM_remainder' n f (real_of_int x) (real_of_int (int y)))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "then"], ["proof (chain)\npicking this:\n  Cauchy\n   (\\<lambda>y. EM_remainder' n f (real_of_int x) (real_of_int (int y)))", "obtain L where \"(\\<lambda>y. EM_remainder' n f x (int y)) \\<longlonglongrightarrow> L\""], ["proof (prove)\nusing this:\n  Cauchy\n   (\\<lambda>y. EM_remainder' n f (real_of_int x) (real_of_int (int y)))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        (\\<lambda>y.\n            EM_remainder' n f (real_of_int x) (real_of_int (int y)))\n        \\<longlonglongrightarrow> L \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: Cauchy_convergent_iff convergent_def)"], ["proof (state)\nthis:\n  (\\<lambda>y. EM_remainder' n f (real_of_int x) (real_of_int (int y)))\n  \\<longlonglongrightarrow> L\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "from filterlim_int_of_nat_at_topD[OF this]"], ["proof (chain)\npicking this:\n  ((\\<lambda>a.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int a)) \\<longlongrightarrow>\n   L)\n   at_top", "have \"((\\<lambda>y. EM_remainder' n f x (of_int y)) \\<longlongrightarrow> L) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>a.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int a)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     L)\n     at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "from this"], ["proof (chain)\npicking this:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top", "have \"EM_remainder n f x = L\""], ["proof (prove)\nusing this:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top\n\ngoal (1 subgoal):\n 1. EM_remainder n f x = L", "by (rule EM_remainder_eqI)"], ["proof (state)\nthis:\n  EM_remainder n f x = L\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top\n  EM_remainder n f x = L", "show \"((\\<lambda>y. EM_remainder' n f x (of_int y)) \\<longlongrightarrow> EM_remainder n f x) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   L)\n   at_top\n  EM_remainder n f x = L\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         EM_remainder' n f (real_of_int x)\n          (real_of_int y)) \\<longlongrightarrow>\n     EM_remainder n f x)\n     at_top", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int x)\n        (real_of_int y)) \\<longlongrightarrow>\n   EM_remainder n f x)\n   at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<le> real_of_int ?x \\<Longrightarrow>\n  ((\\<lambda>y.\n       EM_remainder' n f (real_of_int ?x)\n        (real_of_int y)) \\<longlongrightarrow>\n   EM_remainder n f ?x)\n   at_top\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "have *: \"norm (EM_remainder n f x) \\<le> D' * (C - g x)\" if x: \"x \\<ge> a\" for x :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (EM_remainder n f x) \\<le> D' * (C - g (real_of_int x))", "proof (rule tendsto_le)"], ["proof (state)\ngoal (4 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> D' * (C - g (real_of_int x))) ?F\n 3. (?g \\<longlongrightarrow> norm (EM_remainder n f x)) ?F\n 4. \\<forall>\\<^sub>F x in ?F. ?g x \\<le> ?f x", "show \"((\\<lambda>y. D' * (g (of_int y) - g (of_int x))) \\<longlongrightarrow> D' * (C - g (of_int x))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         D' * (g (real_of_int y) - g (real_of_int x))) \\<longlongrightarrow>\n     D' * (C - g (real_of_int x)))\n     at_top", "by (intro tendsto_intros filterlim_compose[OF limit_g])"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       D' * (g (real_of_int y) - g (real_of_int x))) \\<longlongrightarrow>\n   D' * (C - g (real_of_int x)))\n   at_top\n\ngoal (3 subgoals):\n 1. at_top \\<noteq> bot\n 2. (?g \\<longlongrightarrow> norm (EM_remainder n f x)) at_top\n 3. \\<forall>\\<^sub>F xa in at_top.\n       ?g xa \\<le> D' * (g (real_of_int xa) - g (real_of_int x))", "show \"((\\<lambda>y. norm (EM_remainder' n f x (of_int y))) \\<longlongrightarrow> norm (EM_remainder n f x)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         norm\n          (EM_remainder' n f (real_of_int x)\n            (real_of_int y))) \\<longlongrightarrow>\n     norm (EM_remainder n f x))\n     at_top", "using x"], ["proof (prove)\nusing this:\n  a \\<le> real_of_int x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         norm\n          (EM_remainder' n f (real_of_int x)\n            (real_of_int y))) \\<longlongrightarrow>\n     norm (EM_remainder n f x))\n     at_top", "by (intro tendsto_norm lim)"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       norm\n        (EM_remainder' n f (real_of_int x)\n          (real_of_int y))) \\<longlongrightarrow>\n   norm (EM_remainder n f x))\n   at_top\n\ngoal (2 subgoals):\n 1. at_top \\<noteq> bot\n 2. \\<forall>\\<^sub>F xa in at_top.\n       norm (EM_remainder' n f (real_of_int x) (real_of_int xa))\n       \\<le> D' * (g (real_of_int xa) - g (real_of_int x))", "show \"eventually (\\<lambda>y. norm (EM_remainder' n f (of_int x) (of_int y))\n             \\<le> D' * (g (of_int y) - g (of_int x))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at_top.\n       norm (EM_remainder' n f (real_of_int x) (real_of_int y))\n       \\<le> D' * (g (real_of_int y) - g (real_of_int x))", "using eventually_ge_at_top[of x]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) x) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in at_top.\n       norm (EM_remainder' n f (real_of_int x) (real_of_int y))\n       \\<le> D' * (g (real_of_int y) - g (real_of_int x))", "by eventually_elim (rule bound, insert x, simp_all)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in at_top.\n     norm (EM_remainder' n f (real_of_int x) (real_of_int y))\n     \\<le> D' * (g (real_of_int y) - g (real_of_int x))\n\ngoal (1 subgoal):\n 1. at_top \\<noteq> bot", "qed simp_all"], ["proof (state)\nthis:\n  a \\<le> real_of_int ?x \\<Longrightarrow>\n  norm (EM_remainder n f ?x) \\<le> D' * (C - g (real_of_int ?x))\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * (C - g (real_of_int x))\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "thus \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D' * (C - g x)\""], ["proof (prove)\nusing this:\n  a \\<le> real_of_int ?x \\<Longrightarrow>\n  norm (EM_remainder n f ?x) \\<le> D' * (C - g (real_of_int ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D' * (C - g (real_of_int x))", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real_of_int x \\<longrightarrow>\n     norm (EM_remainder n f x) \\<le> D' * (C - g (real_of_int x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "have \"norm (EM_remainder n f x) \\<le> D' * (C - g x)\" if x: \"x \\<ge> a\" for x :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (EM_remainder n f (int x)) \\<le> D' * (C - g (real x))", "using x *[of \"int x\"]"], ["proof (prove)\nusing this:\n  a \\<le> real x\n  a \\<le> real_of_int (int x) \\<Longrightarrow>\n  norm (EM_remainder n f (int x)) \\<le> D' * (C - g (real_of_int (int x)))\n\ngoal (1 subgoal):\n 1. norm (EM_remainder n f (int x)) \\<le> D' * (C - g (real x))", "by simp"], ["proof (state)\nthis:\n  a \\<le> real ?x \\<Longrightarrow>\n  norm (EM_remainder n f (int ?x)) \\<le> D' * (C - g (real ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (C - g (real x))", "thus \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D' * (C - g x)\""], ["proof (prove)\nusing this:\n  a \\<le> real ?x \\<Longrightarrow>\n  norm (EM_remainder n f (int ?x)) \\<le> D' * (C - g (real ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D' * (C - g (real x))", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real x \\<longrightarrow>\n     norm (EM_remainder n f (int x)) \\<le> D' * (C - g (real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes fin:     \"finite Y\"\n  assumes pbernpoly_bound: \"\\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\"\n  assumes cont_f:  \"continuous_on {a..} f\"\n  assumes cont_g:  \"continuous_on {a..} g\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes limit_g: \"(g \\<longlongrightarrow> 0) at_top\"\n  assumes f_bound: \"\\<And>x. x \\<ge> a \\<Longrightarrow> norm (f x) \\<le> g' x\"\n  assumes deriv:   \"\\<And>x. x \\<in> {a..} - Y \\<Longrightarrow> (g has_field_derivative -g' x) (at x)\"\n  shows   norm_EM_remainder_le_strong_int': \n            \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * g x\"\n    and   norm_EM_remainder_le_strong_nat': \n            \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x) &&&\n    \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "have \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * (0 - (-g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> D / fact n * (0 - - g (real_of_int x))", "using assms"], ["proof (prove)\nusing this:\n  finite Y\n  \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\n  continuous_on {a..} f\n  continuous_on {a..} g\n  continuous_on {a..} g'\n  (g \\<longlongrightarrow> 0) at_top\n  a \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> g' ?x\n  ?x \\<in> {a..} - Y \\<Longrightarrow>\n  (g has_real_derivative - g' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x)\n       \\<le> D / fact n * (0 - - g (real_of_int x))", "by (intro norm_EM_remainder_le_strong_int[OF fin pbernpoly_bound _ _ cont_g'])\n       (auto intro!: continuous_intros tendsto_eq_intros derivative_eq_intros)"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real_of_int x \\<longrightarrow>\n     norm (EM_remainder n f x) \\<le> D / fact n * (0 - - g (real_of_int x))\n\ngoal (2 subgoals):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n 2. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "thus \"\\<forall>x. of_int x \\<ge> a \\<longrightarrow> norm (EM_remainder n f x) \\<le> D / fact n * g x\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     a \\<le> real_of_int x \\<longrightarrow>\n     norm (EM_remainder n f x) \\<le> D / fact n * (0 - - g (real_of_int x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real_of_int x \\<longrightarrow>\n       norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real_of_int x \\<longrightarrow>\n     norm (EM_remainder n f x) \\<le> D / fact n * g (real_of_int x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "have \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * (0 - (-g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (0 - - g (real x))", "using assms"], ["proof (prove)\nusing this:\n  finite Y\n  \\<forall>x. \\<bar>pbernpoly n x\\<bar> \\<le> D\n  continuous_on {a..} f\n  continuous_on {a..} g\n  continuous_on {a..} g'\n  (g \\<longlongrightarrow> 0) at_top\n  a \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> g' ?x\n  ?x \\<in> {a..} - Y \\<Longrightarrow>\n  (g has_real_derivative - g' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * (0 - - g (real x))", "by (intro norm_EM_remainder_le_strong_nat[OF fin pbernpoly_bound _ _ cont_g'])\n       (auto intro!: continuous_intros tendsto_eq_intros derivative_eq_intros)"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real x \\<longrightarrow>\n     norm (EM_remainder n f (int x)) \\<le> D / fact n * (0 - - g (real x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "thus \"\\<forall>x. real x \\<ge> a \\<longrightarrow> norm (EM_remainder n f (int x)) \\<le> D / fact n * g x\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     a \\<le> real x \\<longrightarrow>\n     norm (EM_remainder n f (int x)) \\<le> D / fact n * (0 - - g (real x))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       a \\<le> real x \\<longrightarrow>\n       norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     a \\<le> real x \\<longrightarrow>\n     norm (EM_remainder n f (int x)) \\<le> D / fact n * g (real x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_EM_remainder'_le:\n  fixes f :: \"real \\<Rightarrow> 'a :: {real_normed_field, banach}\"\n    and g g' :: \"real \\<Rightarrow> real\"\n  assumes cont_f: \"continuous_on {a..} f\"\n  assumes cont_g': \"continuous_on {a..} g'\"\n  assumes f_bigo: \"eventually (\\<lambda>x. norm (f x) \\<le> g' x) at_top\"\n  assumes deriv:  \"eventually (\\<lambda>x. (g has_field_derivative g' x) (at x)) at_top\"\n  obtains C D where\n    \"eventually (\\<lambda>x. norm (EM_remainder' n f a x) \\<le> C + D * g x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "note cont = continuous_on_subset[OF cont_f] continuous_on_subset[OF cont_g']"], ["proof (state)\nthis:\n  ?t \\<subseteq> {a..} \\<Longrightarrow> continuous_on ?t f\n  ?t \\<subseteq> {a..} \\<Longrightarrow> continuous_on ?t g'\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from bounded_pbernpoly[of n]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain D where D: \"\\<And>x. norm (pbernpoly n x) \\<le> D\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        (\\<And>x. norm (pbernpoly n x) \\<le> D) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from this[of 0]"], ["proof (chain)\npicking this:\n  norm (pbernpoly n 0) \\<le> D", "have D_nonneg: \"D \\<ge> 0\""], ["proof (prove)\nusing this:\n  norm (pbernpoly n 0) \\<le> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> D", "by simp"], ["proof (state)\nthis:\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from eventually_conj[OF f_bigo eventually_conj[OF deriv eventually_ge_at_top[of a]]]"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> g' x \\<and>\n     (g has_real_derivative g' x) (at x) \\<and> a \\<le> x", "obtain x0 where x0:\n      \"x0 \\<ge> a\" \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> norm (f x) \\<le> g' x\" \n      \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> (g has_field_derivative g' x) (at x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (f x) \\<le> g' x \\<and>\n     (g has_real_derivative g' x) (at x) \\<and> a \\<le> x\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>a \\<le> x0;\n         \\<And>x. x0 \\<le> x \\<Longrightarrow> norm (f x) \\<le> g' x;\n         \\<And>x.\n            x0 \\<le> x \\<Longrightarrow>\n            (g has_real_derivative g' x) (at x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: eventually_at_top_linorder)"], ["proof (state)\nthis:\n  a \\<le> x0\n  x0 \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> g' ?x\n  x0 \\<le> ?x \\<Longrightarrow> (g has_real_derivative g' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define C where \"C = (norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) - D * g x0) / fact n\""], ["proof (state)\nthis:\n  C =\n  (norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) -\n   D * g x0) /\n  fact n\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>x. norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "using eventually_ge_at_top[of x0]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) x0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "case (elim x)"], ["proof (state)\nthis:\n  x0 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "have \"integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n            integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n            integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\" (is \"_ = ?I1 + ?I2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n    integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)", "using elim x0(1)"], ["proof (prove)\nusing this:\n  x0 \\<le> x\n  a \\<le> x0\n\ngoal (1 subgoal):\n 1. integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n    integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n    integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)", "by (intro Henstock_Kurzweil_Integration.integral_combine [symmetric] integrable_EM_remainder' cont) auto"], ["proof (state)\nthis:\n  integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n  integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "also"], ["proof (state)\nthis:\n  integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) =\n  integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n  integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "have \"norm \\<dots> \\<le> norm ?I1 + norm ?I2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n      integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> norm\n           (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n          norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))", "by (rule norm_triangle_ineq)"], ["proof (state)\nthis:\n  norm\n   (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n    integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "also"], ["proof (state)\nthis:\n  norm\n   (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t) +\n    integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "have \"norm ?I2 \\<le> integral {x0..x} (\\<lambda>t. D * g' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> integral {x0..x} (\\<lambda>t. D * g' t)", "using x0 D D_nonneg"], ["proof (prove)\nusing this:\n  a \\<le> x0\n  x0 \\<le> ?x \\<Longrightarrow> norm (f ?x) \\<le> g' ?x\n  x0 \\<le> ?x \\<Longrightarrow> (g has_real_derivative g' ?x) (at ?x)\n  norm (pbernpoly n ?x) \\<le> D\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> integral {x0..x} (\\<lambda>t. D * g' t)", "by (intro integral_norm_bound_integral integrable_EM_remainder')\n         (auto intro!: integrable_continuous_real continuous_intros cont mult_mono)"], ["proof (state)\nthis:\n  norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> integral {x0..x} (\\<lambda>t. D * g' t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "also"], ["proof (state)\nthis:\n  norm (integral {x0..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> integral {x0..x} (\\<lambda>t. D * g' t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "have \"\\<dots> = D * integral {x0..x} g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {x0..x} (\\<lambda>t. D * g' t) = D * integral {x0..x} g'", "by simp"], ["proof (state)\nthis:\n  integral {x0..x} (\\<lambda>t. D * g' t) = D * integral {x0..x} g'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "also"], ["proof (state)\nthis:\n  integral {x0..x} (\\<lambda>t. D * g' t) = D * integral {x0..x} g'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "from elim"], ["proof (chain)\npicking this:\n  x0 \\<le> x", "have \"(g' has_integral (g x - g x0)) {x0..x}\""], ["proof (prove)\nusing this:\n  x0 \\<le> x\n\ngoal (1 subgoal):\n 1. (g' has_integral g x - g x0) {x0..x}", "by (intro fundamental_theorem_of_calculus) \n         (auto intro!: has_field_derivative_at_within[OF x0(3)] \n               simp: has_field_derivative_iff_has_vector_derivative [symmetric])"], ["proof (state)\nthis:\n  (g' has_integral g x - g x0) {x0..x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "hence \"integral {x0..x} g' = g x - g x0\""], ["proof (prove)\nusing this:\n  (g' has_integral g x - g x0) {x0..x}\n\ngoal (1 subgoal):\n 1. integral {x0..x} g' = g x - g x0", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {x0..x} g' = g x - g x0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) + x\n      \\<le> norm\n             (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n            y) \\<Longrightarrow>\n  norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        D * (g x - g x0)", "have \"norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) \\<le> norm ?I1 + D * (g x - g x0)\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) + x\n      \\<le> norm\n             (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n            y) \\<Longrightarrow>\n  norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        D * (g x - g x0)\n\ngoal (1 subgoal):\n 1. norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n    \\<le> norm\n           (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n          D * (g x - g x0)", "by simp_all"], ["proof (state)\nthis:\n  norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        D * (g x - g x0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x0 \\<le> x \\<Longrightarrow>\n       norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "thus \"norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x\""], ["proof (prove)\nusing this:\n  norm (integral {a..x} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t))\n  \\<le> norm (integral {a..x0} (\\<lambda>t. pbernpoly n t *\\<^sub>R f t)) +\n        D * (g x - g x0)\n\ngoal (1 subgoal):\n 1. norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x", "by (simp add: EM_remainder'_def field_simps C_def)"], ["proof (state)\nthis:\n  norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<forall>\\<^sub>F x in at_top.\n           norm (EM_remainder' n f a x) \\<le> C + D * g x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm (EM_remainder' n f a x) \\<le> C + D / fact n * g x\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Application to harmonic numbers\\<close>"], ["", "text \\<open>\n  As a first application, we can apply the machinery we have developed to the \n  harmonic numbers.\n\\<close>"], ["", "definition harm_remainder :: \"nat \\<Rightarrow> nat \\<Rightarrow> real\" where\n  \"harm_remainder N n = EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+1) / x ^ (2*N+2)) (int n)\""], ["", "lemma harm_expansion:\n  assumes n: \"n > 0\" and N: \"N > 0\"\n  shows \"harm n = ln n + euler_mascheroni + 1 / (2*n) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / ((2*i) * n ^ (2*i))) - harm_remainder N n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "define fs where \"fs = (\\<lambda>k x. (-1) ^ k * fact k / x ^ (Suc k) :: real)\""], ["proof (state)\nthis:\n  fs = (\\<lambda>k x. (- 1) ^ k * fact k / x ^ Suc k)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "interpret euler_maclaurin_nat' ln \"\\<lambda>x. 1/x\" fs 1 N euler_mascheroni \"{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_nat' ln ((/) 1) fs 1 N euler_mascheroni {}", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ln\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "fix k x"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ln\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "assume \"k \\<le> 2*N\" \"x \\<in> {real 1..} - {}\""], ["proof (state)\nthis:\n  k \\<le> 2 * N\n  x \\<in> {real 1..} - {}\n\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ln\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "thus \"(fs k has_vector_derivative fs (Suc k) x) (at x)\""], ["proof (prove)\nusing this:\n  k \\<le> 2 * N\n  x \\<in> {real 1..} - {}\n\ngoal (1 subgoal):\n 1. (fs k has_vector_derivative fs (Suc k) x) (at x)", "by (cases \"k = 0\")\n         (auto intro!: derivative_eq_intros \n               simp: fs_def has_field_derivative_iff_has_vector_derivative [symmetric] \n                     field_simps power_diff)"], ["proof (state)\nthis:\n  (fs k has_vector_derivative fs (Suc k) x) (at x)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ln\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ln\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "have \"(\\<lambda>b. harm b - ln (real b) -\n                 (\\<Sum>i<2*N+1. bernoulli' (Suc i) * (- 1) ^ i / (real (Suc i) * (real b ^ Suc i))))\n            \\<longlonglongrightarrow> (euler_mascheroni - (\\<Sum>i<2*N+1. 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        harm b - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            bernoulli' (Suc i) * (- 1) ^ i /\n            (real (Suc i) * real b ^ Suc i)))\n    \\<longlonglongrightarrow> euler_mascheroni - (\\<Sum>i<2 * N + 1. 0)", "by (intro tendsto_diff euler_mascheroni_LIMSEQ tendsto_sum \n            real_tendsto_divide_at_top[OF tendsto_const] \n            filterlim_tendsto_pos_mult_at_top[OF tendsto_const] filterlim_pow_at_top\n            filterlim_real_sequentially) auto"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      harm b - ln (real b) -\n      (\\<Sum>i<2 * N + 1.\n          bernoulli' (Suc i) * (- 1) ^ i / (real (Suc i) * real b ^ Suc i)))\n  \\<longlonglongrightarrow> euler_mascheroni - (\\<Sum>i<2 * N + 1. 0)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ln\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "thus \"(\\<lambda>b. (\\<Sum>k = 1..b. 1 / real k) - ln (real b) - \n            (\\<Sum>i<2*N+1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b))) \\<longlonglongrightarrow> euler_mascheroni\""], ["proof (prove)\nusing this:\n  (\\<lambda>b.\n      harm b - ln (real b) -\n      (\\<Sum>i<2 * N + 1.\n          bernoulli' (Suc i) * (- 1) ^ i / (real (Suc i) * real b ^ Suc i)))\n  \\<longlonglongrightarrow> euler_mascheroni - (\\<Sum>i<2 * N + 1. 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> euler_mascheroni", "by (simp add: harm_def divide_simps fs_def)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      (\\<Sum>k = 1..b. 1 / real k) - ln (real b) -\n      (\\<Sum>i<2 * N + 1.\n          (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n  \\<longlonglongrightarrow> euler_mascheroni\n\ngoal (5 subgoals):\n 1. finite {}\n 2. fs 0 = (/) 1\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ln\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       (ln has_vector_derivative 1 / x) (at x)", "qed (insert n N, auto intro!: continuous_intros derivative_eq_intros\n         simp: fs_def has_field_derivative_iff_has_vector_derivative [symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "have \"harm n = (\\<Sum>k=1..n. 1 / real k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm n = (\\<Sum>k = 1..n. 1 / real k)", "by (simp add: harm_def divide_simps)"], ["proof (state)\nthis:\n  harm n = (\\<Sum>k = 1..n. 1 / real k)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "also"], ["proof (state)\nthis:\n  harm n = (\\<Sum>k = 1..n. 1 / real k)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "have \"\\<dots> = ln (real n) + euler_mascheroni + (1/2) *\\<^sub>R (1 / real n) +\n                     (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (real n)) -\n                     EM_remainder (2*N+1) (fs (2*N+1)) (int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / real k) =\n    ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "using n N"], ["proof (prove)\nusing this:\n  0 < n\n  0 < 2 * N + 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / real k) =\n    ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "using n"], ["proof (prove)\nusing this:\n  0 < n\n  0 < 2 * N + 1\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / real k) =\n    ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "by (intro euler_maclaurin_strong_nat') simp_all"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. 1 / real k) =\n  ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. 1 / real k) =\n  ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "have \"(\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R (fs (2*i-1) (real n))) =\n               (\\<Sum>i=1..N. -(bernoulli (2*i) / (real (2*i) * real n ^ (2*i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) =\n    (\\<Sum>i = 1..N.\n        - (bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))))", "by (intro sum.cong refl) \n       (simp_all add: fs_def divide_simps fact_reduce del: of_nat_Suc power_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) =\n  (\\<Sum>i = 1..N.\n      - (bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))))\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) =\n  (\\<Sum>i = 1..N.\n      - (bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))))\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "have \"\\<dots> = -(\\<Sum>i=1..N. bernoulli (2*i) / (real (2*i) * real n ^ (2*i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..N.\n        - (bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i)))) =\n    - (\\<Sum>i = 1..N.\n          bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i)))", "by (simp add: sum_negf)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      - (bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i)))) =\n  - (\\<Sum>i = 1..N. bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i)))\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "finally"], ["proof (chain)\npicking this:\n  harm n =\n  ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n  - (\\<Sum>i = 1..N.\n        bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "show ?thesis"], ["proof (prove)\nusing this:\n  harm n =\n  ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n  - (\\<Sum>i = 1..N.\n        bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "unfolding fs_def"], ["proof (prove)\nusing this:\n  harm n =\n  ln (real n) + euler_mascheroni + (1 / 2) *\\<^sub>R (1 / real n) +\n  - (\\<Sum>i = 1..N.\n        bernoulli (2 * i) / (real (2 * i) * real n ^ (2 * i))) -\n  EM_remainder (2 * N + 1)\n   (\\<lambda>a.\n       (- 1) ^ (2 * N + 1) * fact (2 * N + 1) / a ^ Suc (2 * N + 1))\n   (int n)\n\ngoal (1 subgoal):\n 1. harm n =\n    ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n    harm_remainder N n", "by (simp add: harm_remainder_def)"], ["proof (state)\nthis:\n  harm n =\n  ln (real n) + euler_mascheroni + 1 / (2 * real n) -\n  (\\<Sum>i = 1..N. bernoulli (2 * i) / (2 * real i * real n ^ (2 * i))) -\n  harm_remainder N n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_nat_ge_1_iff: \"of_nat x \\<ge> (1 :: 'a :: linordered_semidom) \\<longleftrightarrow> x \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) \\<le> of_nat x) = (1 \\<le> x)", "using of_nat_le_iff[of 1 x]"], ["proof (prove)\nusing this:\n  (of_nat 1 \\<le> of_nat x) = (1 \\<le> x)\n\ngoal (1 subgoal):\n 1. ((1::'a) \\<le> of_nat x) = (1 \\<le> x)", "by (simp del: of_nat_le_iff)"], ["", "lemma harm_remainder_bound:\n  fixes N :: nat\n  assumes N: \"N > 0\"\n  shows \"\\<exists>C. \\<forall>n\\<ge>1. norm (harm_remainder N n) \\<le> C / real n ^ (2*N+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "from bounded_pbernpoly[of \"2*N+1\"]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (2 * N + 1) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain D where D: \"\\<forall>x. \\<bar>pbernpoly (2*N+1) x\\<bar> \\<le> D\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (2 * N + 1) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<forall>x.\n           \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "have \"\\<forall>x. 1 \\<le> real x \\<longrightarrow> norm (harm_remainder N x) \\<le>\n          D / fact (2*N+1) * (fact (2*N) / x ^ (2*N+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       1 \\<le> real x \\<longrightarrow>\n       norm (harm_remainder N x)\n       \\<le> D / fact (2 * N + 1) * (fact (2 * N) / real x ^ (2 * N + 1))", "unfolding harm_remainder_def of_int_of_nat_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       1 \\<le> real x \\<longrightarrow>\n       norm\n        (EM_remainder (2 * N + 1)\n          (\\<lambda>x. - fact (2 * N + 1) / x ^ (2 * N + 2)) (int x))\n       \\<le> D / fact (2 * N + 1) * (fact (2 * N) / real x ^ (2 * N + 1))", "proof (rule norm_EM_remainder_le_strong_nat'[of \"{}\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 1) / x ^ (2 * N + 2)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - ?g' x)\n        (at x)", "fix x :: real"], ["proof (state)\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 1) / x ^ (2 * N + 2)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - ?g' x)\n        (at x)", "assume x: \"x \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 1) / x ^ (2 * N + 2)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - ?g' x)\n        (at x)", "show \"norm (-fact (2*N+1) / x ^ (2 * N + 2)) \\<le> fact (2*N+1) / x ^ (2*N+2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- fact (2 * N + 1) / x ^ (2 * N + 2))\n    \\<le> fact (2 * N + 1) / x ^ (2 * N + 2)", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (- fact (2 * N + 1) / x ^ (2 * N + 2))\n    \\<le> fact (2 * N + 1) / x ^ (2 * N + 2)", "by simp"], ["proof (state)\nthis:\n  norm (- fact (2 * N + 1) / x ^ (2 * N + 2))\n  \\<le> fact (2 * N + 1) / x ^ (2 * N + 2)\n\ngoal (7 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 1) / x ^ (2 * N + 2))\n 6. ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top\n 7. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - (fact (2 * N + 1) / x ^ (2 * N + 2)))\n        (at x)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 1) / x ^ (2 * N + 2))\n 6. ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top\n 7. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - (fact (2 * N + 1) / x ^ (2 * N + 2)))\n        (at x)", "show \"((\\<lambda>x::real. fact (2 * N) / x ^ (2 * N + 1)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. fact (2 * N) / x ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n     at_top", "by (intro real_tendsto_divide_at_top[OF tendsto_const] filterlim_pow_at_top filterlim_ident)\n         simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x. fact (2 * N) / x ^ (2 * N + 1)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 1) / a ^ (2 * N + 2))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 1) / x ^ (2 * N + 2))\n 6. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N) / a ^ (2 * N + 1)) has_real_derivative\n        - (fact (2 * N + 1) / x ^ (2 * N + 2)))\n        (at x)", "qed (insert N D, auto intro!: derivative_eq_intros continuous_intros simp: field_simps power_diff)"], ["proof (state)\nthis:\n  \\<forall>x.\n     1 \\<le> real x \\<longrightarrow>\n     norm (harm_remainder N x)\n     \\<le> D / fact (2 * N + 1) * (fact (2 * N) / real x ^ (2 * N + 1))\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "hence \"\\<forall>x. 1 \\<le> x \\<longrightarrow> norm (harm_remainder N x) \\<le> D / (2*N+1) / real x ^ (2*N+1)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     1 \\<le> real x \\<longrightarrow>\n     norm (harm_remainder N x)\n     \\<le> D / fact (2 * N + 1) * (fact (2 * N) / real x ^ (2 * N + 1))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<ge>1.\n       norm (harm_remainder N x)\n       \\<le> D / real (2 * N + 1) / real x ^ (2 * N + 1)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>1.\n     norm (harm_remainder N x)\n     \\<le> D / real (2 * N + 1) / real x ^ (2 * N + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>1.\n     norm (harm_remainder N x)\n     \\<le> D / real (2 * N + 1) / real x ^ (2 * N + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       \\<forall>n\\<ge>1.\n          norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>C.\n     \\<forall>n\\<ge>1.\n        norm (harm_remainder N n) \\<le> C / real n ^ (2 * N + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Application to sums of inverse squares\\<close>"], ["", "text \\<open>\n  In the same vein, we can derive the asymptotics of the partial sum of inverse squares.\n\\<close>"], ["", "lemma sum_inverse_squares_expansion:\n  assumes n: \"n > 0\" and N: \"N > 0\"\n  shows \"(\\<Sum>k=1..n. 1 / real k ^ 2) = \n            pi ^ 2 / 6 - 1 / real n + 1 / (2 * real n ^ 2) -\n                     (\\<Sum>i=1..N. bernoulli (2*i) / n ^ (2*i+1)) - \n                    EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+2) / x ^ (2*N+3)) (int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "have 3: \"3 = Suc (Suc (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = Suc (Suc (Suc 0))", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "define fs where \"fs = (\\<lambda>k x. (-1) ^ k * fact (Suc k) / x ^ (k+2) :: real)\""], ["proof (state)\nthis:\n  fs = (\\<lambda>k x. (- 1) ^ k * fact (Suc k) / x ^ (k + 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "interpret euler_maclaurin_nat' \"\\<lambda>x. -1/x\" \"\\<lambda>x. 1/x^2\" fs 1 N \"pi^2/6\" \"{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. euler_maclaurin_nat' ((/) (- 1)) (\\<lambda>x. 1 / x\\<^sup>2) fs 1 N\n     (pi\\<^sup>2 / 6) {}", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ((/) (- 1))\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "fix k x"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ((/) (- 1))\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "assume \"k \\<le> 2*N\" \"x \\<in> {real 1..} - {}\""], ["proof (state)\nthis:\n  k \\<le> 2 * N\n  x \\<in> {real 1..} - {}\n\ngoal (7 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. \\<And>k x.\n       \\<lbrakk>k \\<le> 2 * N; x \\<in> {real 1..} - {}\\<rbrakk>\n       \\<Longrightarrow> (fs k has_vector_derivative fs (Suc k) x) (at x)\n 5. continuous_on {real 1..} ((/) (- 1))\n 6. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 7. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "thus \"(fs k has_vector_derivative fs (Suc k) x) (at x)\""], ["proof (prove)\nusing this:\n  k \\<le> 2 * N\n  x \\<in> {real 1..} - {}\n\ngoal (1 subgoal):\n 1. (fs k has_vector_derivative fs (Suc k) x) (at x)", "by (cases \"k = 0\")\n         (auto intro!: derivative_eq_intros \n               simp: fs_def has_field_derivative_iff_has_vector_derivative [symmetric] \n                     field_simps power_diff)"], ["proof (state)\nthis:\n  (fs k has_vector_derivative fs (Suc k) x) (at x)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "from inverse_squares_sums"], ["proof (chain)\npicking this:\n  (\\<lambda>n. 1 / real ((n + 1)\\<^sup>2)) sums (pi\\<^sup>2 / 6)", "have \"(\\<lambda>n. \\<Sum>k<n. 1 / real (Suc k) ^ 2) \\<longlonglongrightarrow> pi\\<^sup>2 / 6\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. 1 / real ((n + 1)\\<^sup>2)) sums (pi\\<^sup>2 / 6)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>k<n. 1 / (real (Suc k))\\<^sup>2)\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "by (simp add: sums_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>k<n. 1 / (real (Suc k))\\<^sup>2)\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "also"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>k<n. 1 / (real (Suc k))\\<^sup>2)\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "have \"(\\<lambda>n. \\<Sum>k<n. 1 / real (Suc k) ^ 2) = (\\<lambda>n. \\<Sum>k=1..n. 1 / real k ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>k<n. 1 / (real (Suc k))\\<^sup>2) =\n    (\\<lambda>n. \\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)", "by (intro ext sum.reindex_bij_witness[of _ \"\\<lambda>n. n - 1\" Suc]) auto"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>k<n. 1 / (real (Suc k))\\<^sup>2) =\n  (\\<lambda>n. \\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "have \"(\\<lambda>b. (\\<Sum>k = 1..b. 1 / real k^2) + 1 / real b -\n                 (\\<Sum>i<2*N+1. bernoulli' (Suc i) * (- 1) ^ i / (real b ^ (i+2))))\n            \\<longlonglongrightarrow> (pi^2/6 + 0 - (\\<Sum>i<2*N+1. 0))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>k = 1..n. 1 / (real k)\\<^sup>2)\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) + 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            bernoulli' (Suc i) * (- 1) ^ i / real b ^ (i + 2)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6 + 0 - (\\<Sum>i<2 * N + 1. 0)", "by (intro tendsto_diff tendsto_add real_tendsto_divide_at_top[OF tendsto_const] \n            filterlim_tendsto_pos_mult_at_top[OF tendsto_const] filterlim_pow_at_top\n            filterlim_real_sequentially tendsto_sum) auto"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) + 1 / real b -\n      (\\<Sum>i<2 * N + 1.\n          bernoulli' (Suc i) * (- 1) ^ i / real b ^ (i + 2)))\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6 + 0 - (\\<Sum>i<2 * N + 1. 0)\n\ngoal (6 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)\n 6. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "thus \"(\\<lambda>b. (\\<Sum>k = 1..b. 1 / real k^2) - (- 1 / real b) - \n            (\\<Sum>i<2*N+1. (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b))) \\<longlonglongrightarrow> pi^2/6\""], ["proof (prove)\nusing this:\n  (\\<lambda>b.\n      (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) + 1 / real b -\n      (\\<Sum>i<2 * N + 1.\n          bernoulli' (Suc i) * (- 1) ^ i / real b ^ (i + 2)))\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6 + 0 - (\\<Sum>i<2 * N + 1. 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>b.\n        (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n        (\\<Sum>i<2 * N + 1.\n            (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n    \\<longlonglongrightarrow> pi\\<^sup>2 / 6", "by (simp add: harm_def field_simps fs_def del: power_Suc of_nat_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>b.\n      (\\<Sum>k = 1..b. 1 / (real k)\\<^sup>2) - - 1 / real b -\n      (\\<Sum>i<2 * N + 1.\n          (bernoulli' (Suc i) / fact (Suc i)) *\\<^sub>R fs i (real b)))\n  \\<longlonglongrightarrow> pi\\<^sup>2 / 6\n\ngoal (5 subgoals):\n 1. finite {}\n 2. fs 0 = (\\<lambda>x. 1 / x\\<^sup>2)\n 3. \\<And>k.\n       k \\<le> 2 * N + 1 \\<Longrightarrow> continuous_on {real 1..} (fs k)\n 4. continuous_on {real 1..} ((/) (- 1))\n 5. \\<And>x.\n       x \\<in> {real 1..} - {} \\<Longrightarrow>\n       ((/) (- 1) has_vector_derivative 1 / x\\<^sup>2) (at x)", "qed (insert n N, auto intro!: continuous_intros derivative_eq_intros\n         simp: fs_def has_field_derivative_iff_has_vector_derivative [symmetric] power2_eq_square)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "have \"(\\<Sum>k=1..n. 1 / real k ^ 2) = - 1 / real n + pi^2/6 + (1/2) *\\<^sub>R (1 / real n^2) +\n               (\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R fs (2*i-1) (real n)) -\n               EM_remainder (2*N+1) (fs (2*N+1)) (int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    - 1 / real n + pi\\<^sup>2 / 6 +\n    (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "using n N"], ["proof (prove)\nusing this:\n  0 < n\n  0 < 2 * N + 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    - 1 / real n + pi\\<^sup>2 / 6 +\n    (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "using n"], ["proof (prove)\nusing this:\n  0 < n\n  0 < 2 * N + 1\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    - 1 / real n + pi\\<^sup>2 / 6 +\n    (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n    (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) -\n    EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "by (intro euler_maclaurin_strong_nat') simp_all"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  - 1 / real n + pi\\<^sup>2 / 6 + (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  - 1 / real n + pi\\<^sup>2 / 6 + (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "have \"(\\<Sum>i=1..N. (bernoulli (2*i) / fact (2*i)) *\\<^sub>R (fs (2*i-1) (real n))) =\n               (\\<Sum>i=1..N. -(bernoulli (2*i) / (real n ^ (2*i+1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..N.\n        (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n        fs (2 * i - 1) (real n)) =\n    (\\<Sum>i = 1..N. - (bernoulli (2 * i) / real n ^ (2 * i + 1)))", "by (intro sum.cong refl) \n       (simp_all add: fs_def divide_simps fact_reduce del: of_nat_Suc power_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) =\n  (\\<Sum>i = 1..N. - (bernoulli (2 * i) / real n ^ (2 * i + 1)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N.\n      (bernoulli (2 * i) / fact (2 * i)) *\\<^sub>R\n      fs (2 * i - 1) (real n)) =\n  (\\<Sum>i = 1..N. - (bernoulli (2 * i) / real n ^ (2 * i + 1)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "have \"\\<dots> = -(\\<Sum>i=1..N. bernoulli (2*i) / real n ^ (2*i+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..N. - (bernoulli (2 * i) / real n ^ (2 * i + 1))) =\n    - (\\<Sum>i = 1..N. bernoulli (2 * i) / real n ^ (2 * i + 1))", "by (simp add: sum_negf)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..N. - (bernoulli (2 * i) / real n ^ (2 * i + 1))) =\n  - (\\<Sum>i = 1..N. bernoulli (2 * i) / real n ^ (2 * i + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  - 1 / real n + pi\\<^sup>2 / 6 + (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n  - (\\<Sum>i = 1..N. bernoulli (2 * i) / real n ^ (2 * i + 1)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  - 1 / real n + pi\\<^sup>2 / 6 + (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n  - (\\<Sum>i = 1..N. bernoulli (2 * i) / real n ^ (2 * i + 1)) -\n  EM_remainder (2 * N + 1) (fs (2 * N + 1)) (int n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "unfolding fs_def"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  - 1 / real n + pi\\<^sup>2 / 6 + (1 / 2) *\\<^sub>R (1 / (real n)\\<^sup>2) +\n  - (\\<Sum>i = 1..N. bernoulli (2 * i) / real n ^ (2 * i + 1)) -\n  EM_remainder (2 * N + 1)\n   (\\<lambda>a.\n       (- 1) ^ (2 * N + 1) * fact (Suc (2 * N + 1)) / a ^ (2 * N + 1 + 2))\n   (int n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n    pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n    (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n    EM_remainder (2 * N + 1)\n     (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)", "by (simp add: fs_def 3)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. 1 / (real k)\\<^sup>2) =\n  pi\\<^sup>2 / 6 - 1 / real n + 1 / (2 * (real n)\\<^sup>2) -\n  (\\<Sum>i = 1..N. bernoulli (2 * i) / real (n ^ (2 * i + 1))) -\n  EM_remainder (2 * N + 1)\n   (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_inverse_squares_remainder_bound:\n  fixes N :: nat\n  assumes N: \"N > 0\"\n  defines \"R \\<equiv> (\\<lambda>n. EM_remainder (2*N+1) (\\<lambda>x. -fact (2*N+2) / x ^ (2*N+3)) (int n))\"\n  shows   \"\\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2*N+2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "have 3: \"3 = Suc (Suc (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = Suc (Suc (Suc 0))", "by simp"], ["proof (state)\nthis:\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "from bounded_pbernpoly[of \"2*N+1\"]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (2 * N + 1) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain D where D: \"\\<forall>x. \\<bar>pbernpoly (2*N+1) x\\<bar> \\<le> D\""], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (2 * N + 1) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<forall>x.\n           \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "have \"\\<forall>x. 1 \\<le> real x \\<longrightarrow> norm (R x) \\<le> D / fact (2*N+1) * (fact (2*N+1) / x ^ (2*N+2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       1 \\<le> real x \\<longrightarrow>\n       norm (R x)\n       \\<le> D / fact (2 * N + 1) *\n             (fact (2 * N + 1) / real x ^ (2 * N + 2))", "unfolding R_def of_int_of_nat_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       1 \\<le> real x \\<longrightarrow>\n       norm\n        (EM_remainder (2 * N + 1)\n          (\\<lambda>x. - fact (2 * N + 2) / x ^ (2 * N + 3)) (int x))\n       \\<le> D / fact (2 * N + 1) *\n             (fact (2 * N + 1) / real x ^ (2 * N + 2))", "proof (rule norm_EM_remainder_le_strong_nat'[of \"{}\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 2) / x ^ (2 * N + 3)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - ?g' x)\n        (at x)", "fix x :: real"], ["proof (state)\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 2) / x ^ (2 * N + 3)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - ?g' x)\n        (at x)", "assume x: \"x \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (8 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} ?g'\n 6. ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top\n 7. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       norm (- fact (2 * N + 2) / x ^ (2 * N + 3)) \\<le> ?g' x\n 8. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - ?g' x)\n        (at x)", "show \"norm (-fact (2*N+2) / x ^ (2*N+3)) \\<le> fact (2*N+2) / x ^ (2*N+3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (- fact (2 * N + 2) / x ^ (2 * N + 3))\n    \\<le> fact (2 * N + 2) / x ^ (2 * N + 3)", "using x"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. norm (- fact (2 * N + 2) / x ^ (2 * N + 3))\n    \\<le> fact (2 * N + 2) / x ^ (2 * N + 3)", "by simp"], ["proof (state)\nthis:\n  norm (- fact (2 * N + 2) / x ^ (2 * N + 3))\n  \\<le> fact (2 * N + 2) / x ^ (2 * N + 3)\n\ngoal (7 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 2) / x ^ (2 * N + 3))\n 6. ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top\n 7. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - (fact (2 * N + 2) / x ^ (2 * N + 3)))\n        (at x)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 2) / x ^ (2 * N + 3))\n 6. ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top\n 7. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - (fact (2 * N + 2) / x ^ (2 * N + 3)))\n        (at x)", "show \"((\\<lambda>x::real. fact (2*N+1) / x ^ (2*N+2)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. fact (2 * N + 1) / x ^ (2 * N + 2)) \\<longlongrightarrow>\n     0)\n     at_top", "by (intro real_tendsto_divide_at_top[OF tendsto_const] filterlim_pow_at_top filterlim_ident)\n         simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x. fact (2 * N + 1) / x ^ (2 * N + 2)) \\<longlongrightarrow> 0)\n   at_top\n\ngoal (6 subgoals):\n 1. finite {}\n 2. \\<forall>x. \\<bar>pbernpoly (2 * N + 1) x\\<bar> \\<le> D\n 3. continuous_on {1..} (\\<lambda>a. - fact (2 * N + 2) / a ^ (2 * N + 3))\n 4. continuous_on {1..} (\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2))\n 5. continuous_on {1..} (\\<lambda>x. fact (2 * N + 2) / x ^ (2 * N + 3))\n 6. \\<And>x.\n       x \\<in> {1..} - {} \\<Longrightarrow>\n       ((\\<lambda>a. fact (2 * N + 1) / a ^ (2 * N + 2)) has_real_derivative\n        - (fact (2 * N + 2) / x ^ (2 * N + 3)))\n        (at x)", "qed (insert N D, auto intro!: derivative_eq_intros continuous_intros simp: field_simps power_diff 3)"], ["proof (state)\nthis:\n  \\<forall>x.\n     1 \\<le> real x \\<longrightarrow>\n     norm (R x)\n     \\<le> D / fact (2 * N + 1) * (fact (2 * N + 1) / real x ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "hence \"\\<forall>x\\<ge>1. norm (R x) \\<le> D / real x ^ (2 * N + 2)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     1 \\<le> real x \\<longrightarrow>\n     norm (R x)\n     \\<le> D / fact (2 * N + 1) * (fact (2 * N + 1) / real x ^ (2 * N + 2))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<ge>1. norm (R x) \\<le> D / real x ^ (2 * N + 2)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<ge>1. norm (R x) \\<le> D / real x ^ (2 * N + 2)\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<ge>1. norm (R x) \\<le> D / real x ^ (2 * N + 2)\n\ngoal (1 subgoal):\n 1. \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)", "by blast"], ["proof (state)\nthis:\n  \\<exists>C. \\<forall>n\\<ge>1. norm (R n) \\<le> C / real n ^ (2 * N + 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}