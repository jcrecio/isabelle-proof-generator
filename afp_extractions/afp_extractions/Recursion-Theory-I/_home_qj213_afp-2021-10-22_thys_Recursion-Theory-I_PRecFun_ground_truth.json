{"file_name": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I/PRecFun.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I", "problem_names": ["lemmas pr_zero = PrimRec1_PrimRec2_PrimRec3.zero", "lemmas pr_suc = PrimRec1_PrimRec2_PrimRec3.suc", "lemmas pr_id1_1 = PrimRec1_PrimRec2_PrimRec3.id1_1", "lemmas pr_id2_1 = PrimRec1_PrimRec2_PrimRec3.id2_1", "lemmas pr_id2_2 = PrimRec1_PrimRec2_PrimRec3.id2_2", "lemmas pr_id3_1 = PrimRec1_PrimRec2_PrimRec3.id3_1", "lemmas pr_id3_2 = PrimRec1_PrimRec2_PrimRec3.id3_2", "lemmas pr_id3_3 = PrimRec1_PrimRec2_PrimRec3.id3_3", "lemmas pr_comp1_1 = PrimRec1_PrimRec2_PrimRec3.comp1_1", "lemmas pr_comp1_2 = PrimRec1_PrimRec2_PrimRec3.comp1_2", "lemmas pr_comp1_3 = PrimRec1_PrimRec2_PrimRec3.comp1_3", "lemmas pr_comp2_1 = PrimRec1_PrimRec2_PrimRec3.comp2_1", "lemmas pr_comp2_2 = PrimRec1_PrimRec2_PrimRec3.comp2_2", "lemmas pr_comp2_3 = PrimRec1_PrimRec2_PrimRec3.comp2_3", "lemmas pr_comp3_1 = PrimRec1_PrimRec2_PrimRec3.comp3_1", "lemmas pr_comp3_2 = PrimRec1_PrimRec2_PrimRec3.comp3_2", "lemmas pr_comp3_3 = PrimRec1_PrimRec2_PrimRec3.comp3_3", "lemmas pr_rec = PrimRec1_PrimRec2_PrimRec3.prim_rec", "lemmas [prec] = pr_zero pr_suc pr_id1_1 pr_id2_1 pr_id2_2 pr_id3_1 pr_id3_2 pr_id3_3", "lemma pr_swap: \"f \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> x y. f y x) \\<in> PrimRec2\"", "theorem pr_rec_scheme: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall> x. f 0 x = g x; \\<forall> x y. f (Suc y) x = h y (f y x) x \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec2\"", "lemma op_plus_is_pr [prec]: \"(\\<lambda> x y. x + y) \\<in> PrimRec2\"", "lemma op_mult_is_pr [prec]: \"(\\<lambda> x y. x*y) \\<in> PrimRec2\"", "lemma const_is_pr: \"(\\<lambda> x. (n::nat)) \\<in> PrimRec1\"", "lemma const_is_pr_2: \"(\\<lambda> x y. (n::nat)) \\<in> PrimRec2\"", "lemma const_is_pr_3: \"(\\<lambda> x y z. (n::nat)) \\<in> PrimRec3\"", "theorem pr_rec_last: \"\\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2\"", "theorem pr_rec1: \"h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 (a::nat) h \\<in> PrimRec1\"", "theorem pr_rec1_scheme: \"\\<lbrakk> h \\<in> PrimRec2; f 0 = a; \\<forall> y. f (Suc y) = h y (f y) \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec1\"", "lemma pred_is_pr: \"(\\<lambda> x. x - (1::nat)) \\<in> PrimRec1\"", "lemma op_sub_is_pr [prec]: \"(\\<lambda> x y. x-y) \\<in> PrimRec2\"", "lemmas [prec] =\n  const_is_pr [of 0] const_is_pr_2 [of 0] const_is_pr_3 [of 0]\n  const_is_pr [of 1] const_is_pr_2 [of 1] const_is_pr_3 [of 1]\n  const_is_pr [of 2] const_is_pr_2 [of 2] const_is_pr_3 [of 2]", "lemma [simp]: \"sgn1 0 = 0\"", "lemma [simp]: \"sgn1 (Suc y) = 1\"", "lemma [simp]: \"sgn2 0 = 1\"", "lemma [simp]: \"sgn2 (Suc y) = 0\"", "lemma [simp]: \"x \\<noteq> 0 \\<Longrightarrow> sgn1 x = 1\"", "lemma [simp]: \"x \\<noteq> 0 \\<Longrightarrow> sgn2 x = 0\"", "lemma sgn1_nz_impl_arg_pos: \"sgn1 x \\<noteq> 0 \\<Longrightarrow> x > 0\"", "lemma sgn1_zero_impl_arg_zero: \"sgn1 x = 0 \\<Longrightarrow> x = 0\"", "lemma sgn2_nz_impl_arg_zero: \"sgn2 x \\<noteq> 0 \\<Longrightarrow> x = 0\"", "lemma sgn2_zero_impl_arg_pos: \"sgn2 x = 0 \\<Longrightarrow> x > 0\"", "lemma sgn1_nz_eq_arg_pos: \"(sgn1 x \\<noteq> 0) = (x > 0)\"", "lemma sgn1_zero_eq_arg_zero: \"(sgn1 x = 0) = (x = 0)\"", "lemma sgn2_nz_eq_arg_pos: \"(sgn2 x \\<noteq> 0) = (x = 0)\"", "lemma sgn2_zero_eq_arg_zero: \"(sgn2 x = 0) = (x > 0)\"", "lemma sgn1_pos_eq_one: \"sgn1 x > 0 \\<Longrightarrow> sgn1 x = 1\"", "lemma sgn2_pos_eq_one: \"sgn2 x > 0 \\<Longrightarrow> sgn2 x = 1\"", "lemma sgn2_eq_1_sub_arg: \"sgn2 = (\\<lambda> x. 1 - x)\"", "lemma sgn1_eq_1_sub_sgn2: \"sgn1  = (\\<lambda> x. 1 - (sgn2 x))\"", "lemma sgn2_is_pr [prec]: \"sgn2 \\<in> PrimRec1\"", "lemma sgn1_is_pr [prec]: \"sgn1 \\<in> PrimRec1\"", "lemma abs_of_diff_is_pr [prec]: \"abs_of_diff \\<in> PrimRec2\"", "lemma abs_of_diff_eq: \"(abs_of_diff x y = 0) = (x = y)\"", "lemma sf_is_pr [prec]: \"sf \\<in> PrimRec1\"", "lemma c_pair_is_pr [prec]: \"c_pair \\<in> PrimRec2\"", "lemma if_is_pr: \"\\<lbrakk> p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> (\\<lambda> x. if (p x = 0) then (q1 x) else (q2 x)) \\<in> PrimRec1\"", "lemma if_eq_is_pr [prec]: \"\\<lbrakk> p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> (\\<lambda> x. if (p1 x = p2 x) then (q1 x) else (q2 x)) \\<in> PrimRec1\"", "lemma if_is_pr2 [prec]: \"\\<lbrakk> p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y. if (p x y = 0) then (q1 x y) else (q2 x y)) \\<in> PrimRec2\"", "lemma if_eq_is_pr2: \"\\<lbrakk> p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y. if (p1 x y = p2 x y) then (q1 x y) else (q2 x y)) \\<in> PrimRec2\"", "lemma if_is_pr3 [prec]: \"\\<lbrakk> p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y z. if (p x y z = 0) then (q1 x y z) else (q2 x y z)) \\<in> PrimRec3\"", "lemma if_eq_is_pr3: \"\\<lbrakk> p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y z. if (p1 x y z = p2 x y z) then (q1 x y z) else (q2 x y z)) \\<in> PrimRec3\"", "lemma b_least_aux1: \"b_least f x = x \\<or> (b_least f x < x \\<and> (f x (b_least f x)) \\<noteq> 0)\"", "lemma b_least_le_arg: \"b_least f x \\<le> x\"", "lemma less_b_least_impl_zero: \"y < b_least f x \\<Longrightarrow> f x y = 0\"", "lemma nz_impl_b_least_le: \"(f x y) \\<noteq> 0 \\<Longrightarrow> (b_least f x) \\<le> y\"", "lemma b_least_less_impl_nz: \"b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0\"", "lemma b_least_less_impl_eq: \"b_least f x < x \\<Longrightarrow> (b_least f x) = (Least (%y. (f x y) \\<noteq> 0))\"", "lemma less_b_least_impl_zero2: \"\\<lbrakk>y < x; b_least f x = x\\<rbrakk> \\<Longrightarrow> f x y = 0\"", "lemma nz_impl_b_least_less: \"\\<lbrakk>y<x; (f x y) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least f x) < x\"", "lemma b_least_aux2: \"\\<lbrakk>y<x; (f x y) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least f x) = (Least (%y. (f x y) \\<noteq> 0))\"", "lemma b_least2_aux1: \"b_least2 f x y = y \\<or> (b_least2 f x y < y \\<and> (f x (b_least2 f x y)) \\<noteq> 0)\"", "lemma b_least2_le_arg: \"b_least2 f x y \\<le> y\"", "lemma less_b_least2_impl_zero: \"z < b_least2 f x y \\<Longrightarrow> f x z = 0\"", "lemma nz_impl_b_least2_le: \"(f x z) \\<noteq> 0 \\<Longrightarrow> (b_least2 f x y) \\<le> z\"", "lemma b_least2_less_impl_nz: \"b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0\"", "lemma b_least2_less_impl_eq: \"b_least2 f x y < y \\<Longrightarrow> (b_least2 f x y) = (Least (%z. (f x z) \\<noteq> 0))\"", "lemma less_b_least2_impl_zero2: \"\\<lbrakk>z<y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0\"", "lemma nz_b_least2_impl_less: \"\\<lbrakk>z<y; (f x z) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least2 f x y) < y\"", "lemma b_least2_less_impl_eq2: \"\\<lbrakk>z < y; (f x z) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least2 f x y) = (Least (%z. (f x z) \\<noteq> 0))\"", "lemma b_least2_aux2: \"b_least2 f x y < y \\<Longrightarrow> b_least2 f x (Suc y) = b_least2 f x y\"", "lemma b_least2_aux3: \"\\<lbrakk> b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk> \\<Longrightarrow> b_least2 f x (Suc y) = y\"", "lemma b_least2_mono: \"y1 \\<le> y2 \\<Longrightarrow> b_least2 f x y1 \\<le> b_least2 f x y2\"", "lemma b_least2_aux4: \"\\<lbrakk> b_least2 f x y = y; f x y = 0\\<rbrakk> \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\"", "lemma b_least2_at_zero: \"b_least2 f x 0 = 0\"", "theorem pr_b_least2: \"f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2\"", "lemma b_least_def1: \"b_least f = (\\<lambda> x. b_least2 f x x)\"", "theorem pr_b_least: \"f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1\"", "theorem c_sum_as_b_least: \"c_sum = (\\<lambda> u. b_least2 (\\<lambda> u z. (sgn1 (sf(z+1) - u))) u (Suc u))\"", "theorem c_sum_is_pr: \"c_sum \\<in> PrimRec1\"", "theorem c_fst_is_pr [prec]: \"c_fst \\<in> PrimRec1\"", "theorem c_snd_is_pr [prec]: \"c_snd \\<in> PrimRec1\"", "theorem pr_1_to_2: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> x y. f (c_pair x y)) \\<in> PrimRec2\"", "theorem pr_2_to_1: \"f \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> z. f (c_fst z) (c_snd z)) \\<in> PrimRec1\"", "lemma [simp]: \"pr_conv_1_to_2 (pr_conv_2_to_1 f) = f\"", "lemma [simp]: \"pr_conv_2_to_1 (pr_conv_1_to_2 f) = f\"", "lemma [simp]: \"pr_conv_1_to_3 (pr_conv_3_to_1 f) = f\"", "lemma [simp]: \"pr_conv_3_to_1 (pr_conv_1_to_3 f) = f\"", "lemma [simp]: \"pr_conv_3_to_2 (pr_conv_2_to_3 f) = f\"", "lemma [simp]: \"pr_conv_2_to_3 (pr_conv_3_to_2 f) = f\"", "lemma pr_conv_1_to_2_lm: \"f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_2 f \\<in> PrimRec2\"", "lemma pr_conv_1_to_3_lm: \"f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_3 f \\<in> PrimRec3\"", "lemma pr_conv_2_to_1_lm: \"f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_1 f \\<in> PrimRec1\"", "lemma pr_conv_3_to_1_lm: \"f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_1 f \\<in> PrimRec1\"", "lemma pr_conv_3_to_2_lm: \"f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2\"", "lemma pr_conv_2_to_3_lm: \"f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3\"", "theorem b_least2_scheme: \"\\<lbrakk> f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall> x. h x < g x; \\<forall> x. f x (h x) \\<noteq> 0; \\<forall> z x. z < h x \\<longrightarrow> f x z = 0 \\<rbrakk> \\<Longrightarrow>\n                            h \\<in> PrimRec1\"", "theorem b_least2_scheme2: \"\\<lbrakk> f \\<in> PrimRec3; g \\<in> PrimRec2; \\<forall> x y. h x y < g x y; \\<forall> x y. f x y (h x y) \\<noteq> 0;\n                             \\<forall> z x y. z < h x y \\<longrightarrow> f x y z = 0 \\<rbrakk> \\<Longrightarrow>\n                             h \\<in> PrimRec2\"", "theorem div_is_pr: \"(\\<lambda> a b. a div b) \\<in> PrimRec2\"", "theorem mod_is_pr: \"(\\<lambda> a b. a mod b) \\<in> PrimRec2\"", "theorem pr_rec_last_scheme: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall> x. f x 0 = g x; \\<forall> x y. f x (Suc y) = h x (f x y) y \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec2\"", "theorem power_is_pr: \"(\\<lambda> (x::nat) (n::nat). x ^ n) \\<in> PrimRec2\""], "translations": [["", "lemmas pr_zero = PrimRec1_PrimRec2_PrimRec3.zero"], ["", "lemmas pr_suc = PrimRec1_PrimRec2_PrimRec3.suc"], ["", "lemmas pr_id1_1 = PrimRec1_PrimRec2_PrimRec3.id1_1"], ["", "lemmas pr_id2_1 = PrimRec1_PrimRec2_PrimRec3.id2_1"], ["", "lemmas pr_id2_2 = PrimRec1_PrimRec2_PrimRec3.id2_2"], ["", "lemmas pr_id3_1 = PrimRec1_PrimRec2_PrimRec3.id3_1"], ["", "lemmas pr_id3_2 = PrimRec1_PrimRec2_PrimRec3.id3_2"], ["", "lemmas pr_id3_3 = PrimRec1_PrimRec2_PrimRec3.id3_3"], ["", "lemmas pr_comp1_1 = PrimRec1_PrimRec2_PrimRec3.comp1_1"], ["", "lemmas pr_comp1_2 = PrimRec1_PrimRec2_PrimRec3.comp1_2"], ["", "lemmas pr_comp1_3 = PrimRec1_PrimRec2_PrimRec3.comp1_3"], ["", "lemmas pr_comp2_1 = PrimRec1_PrimRec2_PrimRec3.comp2_1"], ["", "lemmas pr_comp2_2 = PrimRec1_PrimRec2_PrimRec3.comp2_2"], ["", "lemmas pr_comp2_3 = PrimRec1_PrimRec2_PrimRec3.comp2_3"], ["", "lemmas pr_comp3_1 = PrimRec1_PrimRec2_PrimRec3.comp3_1"], ["", "lemmas pr_comp3_2 = PrimRec1_PrimRec2_PrimRec3.comp3_2"], ["", "lemmas pr_comp3_3 = PrimRec1_PrimRec2_PrimRec3.comp3_3"], ["", "lemmas pr_rec = PrimRec1_PrimRec2_PrimRec3.prim_rec"], ["", "ML_file \\<open>Utils.ML\\<close>"], ["", "named_theorems prec"], ["", "method_setup prec0 = \\<open>\n  Attrib.thms >> (fn ths => fn ctxt => Method.METHOD (fn facts =>\n    HEADGOAL (prec0_tac ctxt (facts @ Named_Theorems.get ctxt @{named_theorems prec}))))\n\\<close> \"apply primitive recursive functions\""], ["", "lemmas [prec] = pr_zero pr_suc pr_id1_1 pr_id2_1 pr_id2_2 pr_id3_1 pr_id3_2 pr_id3_3"], ["", "lemma pr_swap: \"f \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> x y. f y x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda>x y. f y x) \\<in> PrimRec2", "by prec0"], ["", "theorem pr_rec_scheme: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall> x. f 0 x = g x; \\<forall> x y. f (Suc y) x = h y (f y x) x \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume g_is_pr: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume h_is_pr: \"h \\<in> PrimRec3\""], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume f_at_0: \"\\<forall> x. f 0 x = g x\""], ["proof (state)\nthis:\n  \\<forall>x. f 0 x = g x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume f_at_Suc: \"\\<forall> x y. f (Suc y) x = h y (f y x) x\""], ["proof (state)\nthis:\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "from f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x", "have \"\\<And> x y. f y x  = PrimRecOp g h y x\""], ["proof (prove)\nusing this:\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. \\<And>x y. f y x = PrimRecOp g h y x", "by (induct_tac y, simp_all)"], ["proof (state)\nthis:\n  f ?y ?x = PrimRecOp g h ?y ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  f ?y ?x = PrimRecOp g h ?y ?x", "have \"f = PrimRecOp g h\""], ["proof (prove)\nusing this:\n  f ?y ?x = PrimRecOp g h ?y ?x\n\ngoal (1 subgoal):\n 1. f = PrimRecOp g h", "by (simp add: ext)"], ["proof (state)\nthis:\n  f = PrimRecOp g h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f 0 x = g x;\n     \\<forall>x y. f (Suc y) x = h y (f y x) x\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "with g_is_pr h_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  f = PrimRecOp g h", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  f = PrimRecOp g h\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "by (simp add: pr_rec)"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma op_plus_is_pr [prec]: \"(\\<lambda> x y. x + y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (+) \\<in> PrimRec2", "proof (rule pr_swap)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>y x. x + y) \\<in> PrimRec2", "show \"(\\<lambda> x y. y+x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) \\<in> PrimRec2", "have S1: \"PrimRecOp (\\<lambda> x. x) (\\<lambda> x y z. Suc y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) \\<in> PrimRec2", "proof (rule pr_rec)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) \\<in> PrimRec1\n 2. (\\<lambda>x y z. Suc y) \\<in> PrimRec3", "show \"(\\<lambda> x. x) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1", "by (rule pr_id1_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. Suc y) \\<in> PrimRec3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. Suc y) \\<in> PrimRec3", "show \"(\\<lambda> x y z. Suc y) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. Suc y) \\<in> PrimRec3", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y z. Suc y) \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) \\<in> PrimRec2", "have \"(\\<lambda> x y. y+x) = PrimRecOp (\\<lambda> x. x) (\\<lambda> x y z. Suc y)\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)", "have \"\\<And> x y. (?f y x = y + x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) y x = y + x", "by (induct_tac y, auto)"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) ?y ?x = ?y + ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) ?y ?x = ?y + ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) \\<in> PrimRec2", "with S1"], ["proof (chain)\npicking this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) \\<in> PrimRec2\n  (\\<lambda>x y. y + x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y) \\<in> PrimRec2\n  (\\<lambda>x y. y + x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. Suc y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x) \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma op_mult_is_pr [prec]: \"(\\<lambda> x y. x*y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (*) \\<in> PrimRec2", "proof (rule pr_swap)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>y x. x * y) \\<in> PrimRec2", "show \"(\\<lambda> x y. y*x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) \\<in> PrimRec2", "have S1: \"PrimRecOp (\\<lambda> x. 0) (\\<lambda> x y z. y+z) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) \\<in> PrimRec2", "proof (rule pr_rec)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. 0) \\<in> PrimRec1\n 2. (\\<lambda>x. (+)) \\<in> PrimRec3", "show \"(\\<lambda> x. 0) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 0) \\<in> PrimRec1", "by (rule pr_zero)"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (+)) \\<in> PrimRec3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (+)) \\<in> PrimRec3", "show \"(\\<lambda> x y z. y+z) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (+)) \\<in> PrimRec3", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x. (+)) \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) \\<in> PrimRec2", "have \"(\\<lambda> x y. y*x) = PrimRecOp (\\<lambda> x. 0) (\\<lambda> x y z. y+z)\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))", "have \"\\<And> x y. (?f y x = y * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) y x = y * x", "by (induct_tac y, auto)"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) ?y ?x = ?y * ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))", "thus ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) ?y ?x = ?y * ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) \\<in> PrimRec2", "with S1"], ["proof (chain)\npicking this:\n  PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) \\<in> PrimRec2\n  (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+)) \\<in> PrimRec2\n  (\\<lambda>x y. y * x) = PrimRecOp (\\<lambda>x. 0) (\\<lambda>x. (+))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y * x) \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y. y * x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y * x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma const_is_pr: \"(\\<lambda> x. (n::nat)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. n) \\<in> PrimRec1", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. 0) \\<in> PrimRec1\n 2. \\<And>n.\n       (\\<lambda>x. n) \\<in> PrimRec1 \\<Longrightarrow>\n       (\\<lambda>x. Suc n) \\<in> PrimRec1", "show \"(\\<lambda> x. 0) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 0) \\<in> PrimRec1", "by (rule pr_zero)"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. n) \\<in> PrimRec1 \\<Longrightarrow>\n       (\\<lambda>x. Suc n) \\<in> PrimRec1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. n) \\<in> PrimRec1 \\<Longrightarrow>\n       (\\<lambda>x. Suc n) \\<in> PrimRec1", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. n) \\<in> PrimRec1 \\<Longrightarrow>\n       (\\<lambda>x. Suc n) \\<in> PrimRec1", "assume \"(\\<lambda> x. n) \\<in> PrimRec1\""], ["proof (state)\nthis:\n  (\\<lambda>x. n) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. n) \\<in> PrimRec1 \\<Longrightarrow>\n       (\\<lambda>x. Suc n) \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. n) \\<in> PrimRec1", "show \"(\\<lambda> x. Suc n) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. n) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. Suc n) \\<in> PrimRec1", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x. Suc n) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma const_is_pr_2: \"(\\<lambda> x y. (n::nat)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. n) \\<in> PrimRec2", "proof (rule pr_comp1_2 [where ?f=\"%x.(n::nat)\" and ?g=\"%x y. x\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. n) \\<in> PrimRec1\n 2. (\\<lambda>x y. x) \\<in> PrimRec2", "show \"(\\<lambda> x. n) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. n) \\<in> PrimRec1", "by (rule const_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>x. n) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x) \\<in> PrimRec2", "show \"(\\<lambda> x y. x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x) \\<in> PrimRec2", "by (rule pr_id2_1)"], ["proof (state)\nthis:\n  (\\<lambda>x y. x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma const_is_pr_3: \"(\\<lambda> x y z. (n::nat)) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. n) \\<in> PrimRec3", "proof (rule pr_comp1_3 [where ?f=\"%x.(n::nat)\" and ?g=\"%x y z. x\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. n) \\<in> PrimRec1\n 2. (\\<lambda>x y z. x) \\<in> PrimRec3", "show \"(\\<lambda> x. n) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. n) \\<in> PrimRec1", "by (rule const_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>x. n) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. x) \\<in> PrimRec3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. x) \\<in> PrimRec3", "show \"(\\<lambda> x y z. x) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. x) \\<in> PrimRec3", "by (rule pr_id3_1)"], ["proof (state)\nthis:\n  (\\<lambda>x y z. x) \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_rec_last: \"\\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "assume A1: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "assume A2: \"h \\<in> PrimRec3\""], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "let ?h1 = \"\\<lambda> x y z. h z y x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "from A2 pr_id3_3 pr_id3_2 pr_id3_1"], ["proof (chain)\npicking this:\n  h \\<in> PrimRec3\n  (\\<lambda>x y z. z) \\<in> PrimRec3\n  (\\<lambda>x y z. y) \\<in> PrimRec3\n  (\\<lambda>x y z. x) \\<in> PrimRec3", "have h1_is_pr: \"?h1 \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  h \\<in> PrimRec3\n  (\\<lambda>x y z. z) \\<in> PrimRec3\n  (\\<lambda>x y z. y) \\<in> PrimRec3\n  (\\<lambda>x y z. x) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. h z y x) \\<in> PrimRec3", "by (rule pr_comp3_3)"], ["proof (state)\nthis:\n  (\\<lambda>x y z. h z y x) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "let ?f1 = \"PrimRecOp g ?h1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "from A1 h1_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  (\\<lambda>x y z. h z y x) \\<in> PrimRec3", "have f1_is_pr: \"?f1 \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  (\\<lambda>x y z. h z y x) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. PrimRecOp g (\\<lambda>x y z. h z y x) \\<in> PrimRec2", "by (rule pr_rec)"], ["proof (state)\nthis:\n  PrimRecOp g (\\<lambda>x y z. h z y x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "let ?f = \"\\<lambda> x y. ?f1 y x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "from f1_is_pr"], ["proof (chain)\npicking this:\n  PrimRecOp g (\\<lambda>x y z. h z y x) \\<in> PrimRec2", "have f_is_pr: \"?f \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  PrimRecOp g (\\<lambda>x y z. h z y x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) \\<in> PrimRec2", "by (rule pr_swap)"], ["proof (state)\nthis:\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "have \"\\<And> x y. ?f x y = PrimRecOp_last g h x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       PrimRecOp g (\\<lambda>x y z. h z y x) y x = PrimRecOp_last g h x y", "by (induct_tac y, simp_all)"], ["proof (state)\nthis:\n  PrimRecOp g (\\<lambda>x y z. h z y x) ?y ?x = PrimRecOp_last g h ?x ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  PrimRecOp g (\\<lambda>x y z. h z y x) ?y ?x = PrimRecOp_last g h ?x ?y", "have \"?f = PrimRecOp_last g h\""], ["proof (prove)\nusing this:\n  PrimRecOp g (\\<lambda>x y z. h z y x) ?y ?x = PrimRecOp_last g h ?x ?y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) =\n    PrimRecOp_last g h", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) =\n  PrimRecOp_last g h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> PrimRecOp_last g h \\<in> PrimRec2", "with f_is_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) \\<in> PrimRec2\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) =\n  PrimRecOp_last g h", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) \\<in> PrimRec2\n  (\\<lambda>x y. PrimRecOp g (\\<lambda>x y z. h z y x) y x) =\n  PrimRecOp_last g h\n\ngoal (1 subgoal):\n 1. PrimRecOp_last g h \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  PrimRecOp_last g h \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_rec1: \"h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 (a::nat) h \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "assume A1: \"h \\<in> PrimRec2\""], ["proof (state)\nthis:\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "let ?g = \"(\\<lambda> x. a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "have g_is_pr: \"?g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. a) \\<in> PrimRec1", "by (rule const_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>x. a) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "let ?h1 = \"(\\<lambda> x y z. h x y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "from A1"], ["proof (chain)\npicking this:\n  h \\<in> PrimRec2", "have h1_is_pr: \"?h1 \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. h x y) \\<in> PrimRec3", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y z. h x y) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "let ?f1 = \"PrimRecOp ?g ?h1\""], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "from g_is_pr h1_is_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x. a) \\<in> PrimRec1\n  (\\<lambda>x y z. h x y) \\<in> PrimRec3", "have f1_is_pr: \"?f1 \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. a) \\<in> PrimRec1\n  (\\<lambda>x y z. h x y) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) \\<in> PrimRec2", "by (rule pr_rec)"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "let ?f = \"(\\<lambda> x. ?f1 x 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "from f1_is_pr pr_id1_1 pr_zero"], ["proof (chain)\npicking this:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) \\<in> PrimRec2\n  (\\<lambda>x. x) \\<in> PrimRec1\n  (\\<lambda>x. 0) \\<in> PrimRec1", "have f_is_pr: \"?f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) \\<in> PrimRec2\n  (\\<lambda>x. x) \\<in> PrimRec1\n  (\\<lambda>x. 0) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0)\n    \\<in> PrimRec1", "by (rule pr_comp2_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0)\n  \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "have \"\\<And> y. ?f y = PrimRecOp1 a h y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) y 0 =\n       PrimRecOp1 a h y", "by (induct_tac y, auto)"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) ?y2 0 =\n  PrimRecOp1 a h ?y2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) ?y2 0 =\n  PrimRecOp1 a h ?y2", "have \"?f = PrimRecOp1 a h\""], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) ?y2 0 =\n  PrimRecOp1 a h ?y2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0) =\n    PrimRecOp1 a h", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0) =\n  PrimRecOp1 a h\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2 \\<Longrightarrow> PrimRecOp1 a h \\<in> PrimRec1", "with f_is_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0)\n  \\<in> PrimRec1\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0) =\n  PrimRecOp1 a h", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0)\n  \\<in> PrimRec1\n  (\\<lambda>x. PrimRecOp (\\<lambda>x. a) (\\<lambda>x y z. h x y) x 0) =\n  PrimRecOp1 a h\n\ngoal (1 subgoal):\n 1. PrimRecOp1 a h \\<in> PrimRec1", "by (auto)"], ["proof (state)\nthis:\n  PrimRecOp1 a h \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_rec1_scheme: \"\\<lbrakk> h \\<in> PrimRec2; f 0 = a; \\<forall> y. f (Suc y) = h y (f y) \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "assume h_is_pr: \"h \\<in> PrimRec2\""], ["proof (state)\nthis:\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "assume f_at_0: \"f 0 = a\""], ["proof (state)\nthis:\n  f 0 = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "assume f_at_Suc: \"\\<forall> y. f (Suc y) = h y (f y)\""], ["proof (state)\nthis:\n  \\<forall>y. f (Suc y) = h y (f y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "from f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  f 0 = a\n  \\<forall>y. f (Suc y) = h y (f y)", "have \"\\<And> y. f y  = PrimRecOp1 a h y\""], ["proof (prove)\nusing this:\n  f 0 = a\n  \\<forall>y. f (Suc y) = h y (f y)\n\ngoal (1 subgoal):\n 1. \\<And>y. f y = PrimRecOp1 a h y", "by (induct_tac y, simp_all)"], ["proof (state)\nthis:\n  f ?y = PrimRecOp1 a h ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  f ?y = PrimRecOp1 a h ?y", "have \"f = PrimRecOp1 a h\""], ["proof (prove)\nusing this:\n  f ?y = PrimRecOp1 a h ?y\n\ngoal (1 subgoal):\n 1. f = PrimRecOp1 a h", "by (simp add: ext)"], ["proof (state)\nthis:\n  f = PrimRecOp1 a h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h \\<in> PrimRec2; f 0 = a;\n     \\<forall>y. f (Suc y) = h y (f y)\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec1", "with h_is_pr"], ["proof (chain)\npicking this:\n  h \\<in> PrimRec2\n  f = PrimRecOp1 a h", "show ?thesis"], ["proof (prove)\nusing this:\n  h \\<in> PrimRec2\n  f = PrimRecOp1 a h\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1", "by (simp add: pr_rec1)"], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pred_is_pr: \"(\\<lambda> x. x - (1::nat)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) \\<in> PrimRec1", "have S1: \"PrimRecOp1 0 (\\<lambda> x y. x) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp1 0 (\\<lambda>x y. x) \\<in> PrimRec1", "proof (rule pr_rec1)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x) \\<in> PrimRec2", "show \"(\\<lambda> x y. x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x) \\<in> PrimRec2", "by (rule pr_id2_1)"], ["proof (state)\nthis:\n  (\\<lambda>x y. x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) \\<in> PrimRec1", "have \"(\\<lambda> x. x-(1::nat)) = PrimRecOp1 0 (\\<lambda> x y. x)\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)", "have \"\\<And> x. (?f x = x-(1::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. PrimRecOp1 0 (\\<lambda>x y. x) x = x - 1", "by (induct_tac x, auto)"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. x) ?x = ?x - 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp1 0 (\\<lambda>x y. x) ?x = ?x - 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) \\<in> PrimRec1", "with S1"], ["proof (chain)\npicking this:\n  PrimRecOp1 0 (\\<lambda>x y. x) \\<in> PrimRec1\n  (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp1 0 (\\<lambda>x y. x) \\<in> PrimRec1\n  (\\<lambda>x. x - 1) = PrimRecOp1 0 (\\<lambda>x y. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - 1) \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x - 1) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma op_sub_is_pr [prec]: \"(\\<lambda> x y. x-y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (-) \\<in> PrimRec2", "proof (rule pr_swap)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>y x. x - y) \\<in> PrimRec2", "show \"(\\<lambda> x y. y - x) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) \\<in> PrimRec2", "have S1: \"PrimRecOp (\\<lambda> x. x) (\\<lambda> x y z.  y-(1::nat)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) \\<in> PrimRec2", "proof (rule pr_rec)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. x) \\<in> PrimRec1\n 2. (\\<lambda>x y z. y - 1) \\<in> PrimRec3", "show \"(\\<lambda> x. x) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1", "by (rule pr_id1_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. y - 1) \\<in> PrimRec3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. y - 1) \\<in> PrimRec3", "from pred_is_pr pr_id3_2"], ["proof (chain)\npicking this:\n  (\\<lambda>x. x - 1) \\<in> PrimRec1\n  (\\<lambda>x y z. y) \\<in> PrimRec3", "show \"(\\<lambda> x y z. y-(1::nat)) \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x - 1) \\<in> PrimRec1\n  (\\<lambda>x y z. y) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. y - 1) \\<in> PrimRec3", "by (rule pr_comp1_3)"], ["proof (state)\nthis:\n  (\\<lambda>x y z. y - 1) \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) \\<in> PrimRec2", "have \"(\\<lambda> x y. y - x) = PrimRecOp (\\<lambda> x. x) (\\<lambda> x y z.  y-(1::nat))\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)", "have \"\\<And> x y. (?f y x = x - y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) y x = x - y", "by (induct_tac y, auto)"], ["proof (state)\nthis:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) ?y ?x = ?x - ?y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) ?y ?x = ?x - ?y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) =\n    PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)", "by (simp add: ext)"], ["proof (state)\nthis:\n  (\\<lambda>x y. y - x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y - x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) \\<in> PrimRec2", "with S1"], ["proof (chain)\npicking this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) \\<in> PrimRec2\n  (\\<lambda>x y. y - x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1) \\<in> PrimRec2\n  (\\<lambda>x y. y - x) = PrimRecOp (\\<lambda>x. x) (\\<lambda>x y z. y - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - x) \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y. y - x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. y - x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [prec] =\n  const_is_pr [of 0] const_is_pr_2 [of 0] const_is_pr_3 [of 0]\n  const_is_pr [of 1] const_is_pr_2 [of 1] const_is_pr_3 [of 1]\n  const_is_pr [of 2] const_is_pr_2 [of 2] const_is_pr_3 [of 2]"], ["", "definition\n  sgn1 :: \"nat \\<Rightarrow> nat\" where\n  \"sgn1 x = (case x of 0 \\<Rightarrow> 0 | Suc y \\<Rightarrow> 1)\""], ["", "definition\n  sgn2 :: \"nat \\<Rightarrow> nat\" where\n  \"sgn2 x \\<equiv> (case x of 0 \\<Rightarrow> 1 | Suc y \\<Rightarrow> 0)\""], ["", "definition\n  abs_of_diff :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"abs_of_diff = (\\<lambda> x y. (x - y) + (y - x))\""], ["", "lemma [simp]: \"sgn1 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 0 = 0", "by (simp add: sgn1_def)"], ["", "lemma [simp]: \"sgn1 (Suc y) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 (Suc y) = 1", "by (simp add: sgn1_def)"], ["", "lemma [simp]: \"sgn2 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 0 = 1", "by (simp add: sgn2_def)"], ["", "lemma [simp]: \"sgn2 (Suc y) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 (Suc y) = 0", "by (simp add: sgn2_def)"], ["", "lemma [simp]: \"x \\<noteq> 0 \\<Longrightarrow> sgn1 x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> sgn1 x = 1", "by (simp add: sgn1_def, cases x, auto)"], ["", "lemma [simp]: \"x \\<noteq> 0 \\<Longrightarrow> sgn2 x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> sgn2 x = 0", "by (simp add: sgn2_def, cases x, auto)"], ["", "lemma sgn1_nz_impl_arg_pos: \"sgn1 x \\<noteq> 0 \\<Longrightarrow> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 x \\<noteq> 0 \\<Longrightarrow> 0 < x", "by (cases x) auto"], ["", "lemma sgn1_zero_impl_arg_zero: \"sgn1 x = 0 \\<Longrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 x = 0 \\<Longrightarrow> x = 0", "by (cases x) auto"], ["", "lemma sgn2_nz_impl_arg_zero: \"sgn2 x \\<noteq> 0 \\<Longrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 x \\<noteq> 0 \\<Longrightarrow> x = 0", "by (cases x) auto"], ["", "lemma sgn2_zero_impl_arg_pos: \"sgn2 x = 0 \\<Longrightarrow> x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 x = 0 \\<Longrightarrow> 0 < x", "by (cases x) auto"], ["", "lemma sgn1_nz_eq_arg_pos: \"(sgn1 x \\<noteq> 0) = (x > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn1 x \\<noteq> 0) = (0 < x)", "by (cases x) auto"], ["", "lemma sgn1_zero_eq_arg_zero: \"(sgn1 x = 0) = (x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn1 x = 0) = (x = 0)", "by (cases x) auto"], ["", "lemma sgn2_nz_eq_arg_pos: \"(sgn2 x \\<noteq> 0) = (x = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn2 x \\<noteq> 0) = (x = 0)", "by (cases x) auto"], ["", "lemma sgn2_zero_eq_arg_zero: \"(sgn2 x = 0) = (x > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn2 x = 0) = (0 < x)", "by (cases x) auto"], ["", "lemma sgn1_pos_eq_one: \"sgn1 x > 0 \\<Longrightarrow> sgn1 x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sgn1 x \\<Longrightarrow> sgn1 x = 1", "by (cases x) auto"], ["", "lemma sgn2_pos_eq_one: \"sgn2 x > 0 \\<Longrightarrow> sgn2 x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sgn2 x \\<Longrightarrow> sgn2 x = 1", "by (cases x) auto"], ["", "lemma sgn2_eq_1_sub_arg: \"sgn2 = (\\<lambda> x. 1 - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 = (-) 1", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. sgn2 x = 1 - x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. sgn2 x = 1 - x", "show \"sgn2 x = 1 - x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 x = 1 - x", "by (cases x) auto"], ["proof (state)\nthis:\n  sgn2 x = 1 - x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sgn1_eq_1_sub_sgn2: \"sgn1  = (\\<lambda> x. 1 - (sgn2 x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 = (\\<lambda>x. 1 - sgn2 x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. sgn1 x = 1 - sgn2 x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. sgn1 x = 1 - sgn2 x", "show \"sgn1 x = 1 - sgn2 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 x = 1 - sgn2 x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sgn1 x = 1 - sgn2 x", "have \"1- sgn2 x = 1 - (1 - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - sgn2 x = 1 - (1 - x)", "by (simp add: sgn2_eq_1_sub_arg)"], ["proof (state)\nthis:\n  1 - sgn2 x = 1 - (1 - x)\n\ngoal (1 subgoal):\n 1. sgn1 x = 1 - sgn2 x", "then"], ["proof (chain)\npicking this:\n  1 - sgn2 x = 1 - (1 - x)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 - sgn2 x = 1 - (1 - x)\n\ngoal (1 subgoal):\n 1. sgn1 x = 1 - sgn2 x", "by (simp add: sgn1_def, cases x, auto)"], ["proof (state)\nthis:\n  sgn1 x = 1 - sgn2 x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sgn1 x = 1 - sgn2 x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sgn2_is_pr [prec]: \"sgn2 \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn2 \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sgn2 \\<in> PrimRec1", "have \"(\\<lambda> x. 1 - x) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (-) 1 \\<in> PrimRec1", "by prec0"], ["proof (state)\nthis:\n  (-) 1 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. sgn2 \\<in> PrimRec1", "thus ?thesis"], ["proof (prove)\nusing this:\n  (-) 1 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. sgn2 \\<in> PrimRec1", "by (simp add: sgn2_eq_1_sub_arg)"], ["proof (state)\nthis:\n  sgn2 \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sgn1_is_pr [prec]: \"sgn1 \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sgn1 \\<in> PrimRec1", "from sgn2_is_pr"], ["proof (chain)\npicking this:\n  sgn2 \\<in> PrimRec1", "have \"(\\<lambda> x. 1 - (sgn2 x)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  sgn2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 - sgn2 x) \\<in> PrimRec1", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 - sgn2 x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. sgn1 \\<in> PrimRec1", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. 1 - sgn2 x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. sgn1 \\<in> PrimRec1", "by (simp add: sgn1_eq_1_sub_sgn2)"], ["proof (state)\nthis:\n  sgn1 \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_of_diff_is_pr [prec]: \"abs_of_diff \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_of_diff \\<in> PrimRec2", "unfolding abs_of_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x - y + (y - x)) \\<in> PrimRec2", "by prec0"], ["", "lemma abs_of_diff_eq: \"(abs_of_diff x y = 0) = (x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (abs_of_diff x y = 0) = (x = y)", "by (simp add: abs_of_diff_def, arith)"], ["", "lemma sf_is_pr [prec]: \"sf \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sf \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sf \\<in> PrimRec1", "have S1: \"PrimRecOp1 0 (\\<lambda> x y. y + x + 1) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp1 0 (\\<lambda>x y. y + x + 1) \\<in> PrimRec1", "proof (rule pr_rec1)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x + 1) \\<in> PrimRec2", "show \"(\\<lambda> x y. y + x + 1) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + x + 1) \\<in> PrimRec2", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + x + 1) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. sf \\<in> PrimRec1", "have \"(\\<lambda> x. sf x) = PrimRecOp1 0 (\\<lambda> x y. y + x + 1)\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)", "have \"\\<And> x. (?f x = sf x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. PrimRecOp1 0 (\\<lambda>x y. y + x + 1) x = sf x", "proof (induct_tac x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. PrimRecOp1 0 (\\<lambda>x y. y + x + 1) 0 = sf 0\n 2. \\<And>x n.\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) n = sf n \\<Longrightarrow>\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc n) = sf (Suc n)", "show \"?f 0 = sf 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp1 0 (\\<lambda>x y. y + x + 1) 0 = sf 0", "by (simp add: sf_at_0)"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) 0 = sf 0\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) n = sf n \\<Longrightarrow>\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc n) = sf (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x n.\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) n = sf n \\<Longrightarrow>\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc n) = sf (Suc n)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x n.\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) n = sf n \\<Longrightarrow>\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc n) = sf (Suc n)", "assume \"?f x = sf x\""], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) x = sf x\n\ngoal (1 subgoal):\n 1. \\<And>x n.\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) n = sf n \\<Longrightarrow>\n       PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc n) = sf (Suc n)", "with sf_at_Suc"], ["proof (chain)\npicking this:\n  sf (?x + 1) = sf ?x + ?x + 1\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) x = sf x", "show \"?f (Suc x) = sf (Suc x)\""], ["proof (prove)\nusing this:\n  sf (?x + 1) = sf ?x + ?x + 1\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) x = sf x\n\ngoal (1 subgoal):\n 1. PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc x) = sf (Suc x)", "by auto"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) (Suc x) = sf (Suc x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) ?x = sf ?x\n\ngoal (1 subgoal):\n 1. sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) ?x = sf ?x\n\ngoal (1 subgoal):\n 1. sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)", "by (simp add: ext)"], ["proof (state)\nthis:\n  sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)\n\ngoal (1 subgoal):\n 1. sf \\<in> PrimRec1", "with S1"], ["proof (chain)\npicking this:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) \\<in> PrimRec1\n  sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp1 0 (\\<lambda>x y. y + x + 1) \\<in> PrimRec1\n  sf = PrimRecOp1 0 (\\<lambda>x y. y + x + 1)\n\ngoal (1 subgoal):\n 1. sf \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  sf \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_pair_is_pr [prec]: \"c_pair \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "have \"c_pair = (\\<lambda> x y. sf (x+y) + x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair = (\\<lambda>x y. sf (x + y) + x)", "by (simp add: c_pair_def ext)"], ["proof (state)\nthis:\n  c_pair = (\\<lambda>x y. sf (x + y) + x)\n\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "moreover"], ["proof (state)\nthis:\n  c_pair = (\\<lambda>x y. sf (x + y) + x)\n\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "from sf_is_pr"], ["proof (chain)\npicking this:\n  sf \\<in> PrimRec1", "have \"(\\<lambda> x y. sf (x+y) + x) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  sf \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. sf (x + y) + x) \\<in> PrimRec2", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y. sf (x + y) + x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "ultimately"], ["proof (chain)\npicking this:\n  c_pair = (\\<lambda>x y. sf (x + y) + x)\n  (\\<lambda>x y. sf (x + y) + x) \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair = (\\<lambda>x y. sf (x + y) + x)\n  (\\<lambda>x y. sf (x + y) + x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_pair \\<in> PrimRec2", "by (simp)"], ["proof (state)\nthis:\n  c_pair \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_is_pr: \"\\<lbrakk> p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> (\\<lambda> x. if (p x = 0) then (q1 x) else (q2 x)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p x = 0 then q1 x else q2 x)\n                      \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p x = 0 then q1 x else q2 x)\n                      \\<in> PrimRec1", "have if_as_pr: \"(\\<lambda> x. if (p x = 0) then (q1 x) else (q2 x)) = (\\<lambda> x. (sgn2 (p x)) * (q1 x) + (sgn1 (p x)) * (q2 x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if p x = 0 then q1 x else q2 x) =\n    (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x)", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (if p x = 0 then q1 x else q2 x) =\n       sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (if p x = 0 then q1 x else q2 x) =\n       sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "show \"(if (p x = 0) then (q1 x) else (q2 x)) = (sgn2 (p x)) * (q1 x) + (sgn1 (p x)) * (q2 x)\" (is \"?left = ?right\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "assume A1: \"p x = 0\""], ["proof (state)\nthis:\n  p x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "then"], ["proof (chain)\npicking this:\n  p x = 0", "have S1: \"?left = q1 x\""], ["proof (prove)\nusing this:\n  p x = 0\n\ngoal (1 subgoal):\n 1. (if p x = 0 then q1 x else q2 x) = q1 x", "by simp"], ["proof (state)\nthis:\n  (if p x = 0 then q1 x else q2 x) = q1 x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "from A1"], ["proof (chain)\npicking this:\n  p x = 0", "have S2: \"?right = q1 x\""], ["proof (prove)\nusing this:\n  p x = 0\n\ngoal (1 subgoal):\n 1. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x = q1 x", "by simp"], ["proof (state)\nthis:\n  sgn2 (p x) * q1 x + sgn1 (p x) * q2 x = q1 x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "from S1 S2"], ["proof (chain)\npicking this:\n  (if p x = 0 then q1 x else q2 x) = q1 x\n  sgn2 (p x) * q1 x + sgn1 (p x) * q2 x = q1 x", "show ?thesis"], ["proof (prove)\nusing this:\n  (if p x = 0 then q1 x else q2 x) = q1 x\n  sgn2 (p x) * q1 x + sgn1 (p x) * q2 x = q1 x\n\ngoal (1 subgoal):\n 1. (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "by simp"], ["proof (state)\nthis:\n  (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> 0 \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p x \\<noteq> 0 \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "assume A2: \"p x \\<noteq> 0\""], ["proof (state)\nthis:\n  p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p x \\<noteq> 0 \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "then"], ["proof (chain)\npicking this:\n  p x \\<noteq> 0", "have S3: \"p x > 0\""], ["proof (prove)\nusing this:\n  p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < p x", "by simp"], ["proof (state)\nthis:\n  0 < p x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> 0 \\<Longrightarrow>\n    (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "then"], ["proof (chain)\npicking this:\n  0 < p x", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < p x\n\ngoal (1 subgoal):\n 1. (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x", "by simp"], ["proof (state)\nthis:\n  (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if p x = 0 then q1 x else q2 x) = sgn2 (p x) * q1 x + sgn1 (p x) * q2 x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. if p x = 0 then q1 x else q2 x) =\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p x = 0 then q1 x else q2 x)\n                      \\<in> PrimRec1", "assume \"p \\<in> PrimRec1\" and \"q1 \\<in> PrimRec1\" and \"q2 \\<in> PrimRec1\""], ["proof (state)\nthis:\n  p \\<in> PrimRec1\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p x = 0 then q1 x else q2 x)\n                      \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec1\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1", "have \"(\\<lambda> x. (sgn2 (p x)) * (q1 x) + (sgn1 (p x)) * (q2 x)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec1\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x) \\<in> PrimRec1", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p x = 0 then q1 x else q2 x)\n                      \\<in> PrimRec1", "with if_as_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x. if p x = 0 then q1 x else q2 x) =\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x)\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. if p x = 0 then q1 x else q2 x) =\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x)\n  (\\<lambda>x. sgn2 (p x) * q1 x + sgn1 (p x) * q2 x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if p x = 0 then q1 x else q2 x) \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. if p x = 0 then q1 x else q2 x) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_eq_is_pr [prec]: \"\\<lbrakk> p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1; q2 \\<in> PrimRec1\\<rbrakk> \\<Longrightarrow> (\\<lambda> x. if (p1 x = p2 x) then (q1 x) else (q2 x)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "have S1: \"(\\<lambda> x. if (p1 x = p2 x) then (q1 x) else (q2 x)) = (\\<lambda> x. if (abs_of_diff (p1 x) (p2 x) = 0) then (q1 x) else (q2 x))\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) =\n    (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)", "by (simp add: abs_of_diff_eq)"], ["proof (state)\nthis:\n  (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) =\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "assume A1: \"p1 \\<in> PrimRec1\" and A2: \"p2 \\<in> PrimRec1\""], ["proof (state)\nthis:\n  p1 \\<in> PrimRec1\n  p2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "with abs_of_diff_is_pr"], ["proof (chain)\npicking this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec1\n  p2 \\<in> PrimRec1", "have S2: \"(\\<lambda> x. abs_of_diff (p1 x) (p2 x)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec1\n  p2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. abs_of_diff (p1 x) (p2 x)) \\<in> PrimRec1", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x. abs_of_diff (p1 x) (p2 x)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "assume \"q1 \\<in> PrimRec1\" and \"q2 \\<in> PrimRec1\""], ["proof (state)\nthis:\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "with S2"], ["proof (chain)\npicking this:\n  (\\<lambda>x. abs_of_diff (p1 x) (p2 x)) \\<in> PrimRec1\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1", "have \"?R \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. abs_of_diff (p1 x) (p2 x)) \\<in> PrimRec1\n  q1 \\<in> PrimRec1\n  q2 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n    \\<in> PrimRec1", "by (rule if_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n  \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec1; p2 \\<in> PrimRec1; q1 \\<in> PrimRec1;\n     q2 \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x)\n                      \\<in> PrimRec1", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) =\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n  \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) =\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n  (\\<lambda>x. if abs_of_diff (p1 x) (p2 x) = 0 then q1 x else q2 x)\n  \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. if p1 x = p2 x then q1 x else q2 x) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_is_pr2 [prec]: \"\\<lbrakk> p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y. if (p x y = 0) then (q1 x y) else (q2 x y)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "have if_as_pr: \"(\\<lambda> x y. if (p x y = 0) then (q1 x y) else (q2 x y)) = (\\<lambda> x y. (sgn2 (p x y)) * (q1 x y) + (sgn1 (p x y)) * (q2 x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) =\n    (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)", "proof (rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (if p x y = 0 then q1 x y else q2 x y) =\n       sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (if p x y = 0 then q1 x y else q2 x y) =\n       sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (if p x y = 0 then q1 x y else q2 x y) =\n       sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "show \"(if (p x y = 0) then (q1 x y) else (q2 x y)) = (sgn2 (p x y)) * (q1 x y) + (sgn1 (p x y)) * (q2 x y)\" (is \"?left = ?right\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "assume A1: \"p x y = 0\""], ["proof (state)\nthis:\n  p x y = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "then"], ["proof (chain)\npicking this:\n  p x y = 0", "have S1: \"?left = q1 x y\""], ["proof (prove)\nusing this:\n  p x y = 0\n\ngoal (1 subgoal):\n 1. (if p x y = 0 then q1 x y else q2 x y) = q1 x y", "by simp"], ["proof (state)\nthis:\n  (if p x y = 0 then q1 x y else q2 x y) = q1 x y\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "from A1"], ["proof (chain)\npicking this:\n  p x y = 0", "have S2: \"?right = q1 x y\""], ["proof (prove)\nusing this:\n  p x y = 0\n\ngoal (1 subgoal):\n 1. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y = q1 x y", "by simp"], ["proof (state)\nthis:\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y = q1 x y\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "from S1 S2"], ["proof (chain)\npicking this:\n  (if p x y = 0 then q1 x y else q2 x y) = q1 x y\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y = q1 x y", "show ?thesis"], ["proof (prove)\nusing this:\n  (if p x y = 0 then q1 x y else q2 x y) = q1 x y\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y = q1 x y\n\ngoal (1 subgoal):\n 1. (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "by simp"], ["proof (state)\nthis:\n  (if p x y = 0 then q1 x y else q2 x y) =\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n\ngoal (1 subgoal):\n 1. p x y \\<noteq> 0 \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p x y \\<noteq> 0 \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "assume A2: \"p x y \\<noteq> 0\""], ["proof (state)\nthis:\n  p x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p x y \\<noteq> 0 \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "then"], ["proof (chain)\npicking this:\n  p x y \\<noteq> 0", "have S3: \"p x y > 0\""], ["proof (prove)\nusing this:\n  p x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < p x y", "by simp"], ["proof (state)\nthis:\n  0 < p x y\n\ngoal (1 subgoal):\n 1. p x y \\<noteq> 0 \\<Longrightarrow>\n    (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "then"], ["proof (chain)\npicking this:\n  0 < p x y", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < p x y\n\ngoal (1 subgoal):\n 1. (if p x y = 0 then q1 x y else q2 x y) =\n    sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y", "by simp"], ["proof (state)\nthis:\n  (if p x y = 0 then q1 x y else q2 x y) =\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if p x y = 0 then q1 x y else q2 x y) =\n  sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) =\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "assume \"p \\<in> PrimRec2\" and \"q1 \\<in> PrimRec2\" and \"q2 \\<in> PrimRec2\""], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2", "have \"(\\<lambda> x y. (sgn2 (p x y)) * (q1 x y) + (sgn1 (p x y)) * (q2 x y)) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n    \\<in> PrimRec2", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n  \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "with if_as_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) =\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n  \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) =\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n  (\\<lambda>x y. sgn2 (p x y) * q1 x y + sgn1 (p x y) * q2 x y)\n  \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y. if p x y = 0 then q1 x y else q2 x y) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_eq_is_pr2: \"\\<lbrakk> p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2; q2 \\<in> PrimRec2\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y. if (p1 x y = p2 x y) then (q1 x y) else (q2 x y)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "have S1: \"(\\<lambda> x y. if (p1 x y = p2 x y) then (q1 x y) else (q2 x y)) = (\\<lambda> x y. if (abs_of_diff (p1 x y) (p2 x y) = 0) then (q1 x y) else (q2 x y))\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y) =\n    (\\<lambda>x y.\n        if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)", "by (simp add: abs_of_diff_eq)"], ["proof (state)\nthis:\n  (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y) =\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "assume A1: \"p1 \\<in> PrimRec2\" and A2: \"p2 \\<in> PrimRec2\""], ["proof (state)\nthis:\n  p1 \\<in> PrimRec2\n  p2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "with abs_of_diff_is_pr"], ["proof (chain)\npicking this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec2\n  p2 \\<in> PrimRec2", "have S2: \"(\\<lambda> x y. abs_of_diff (p1 x y) (p2 x y)) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec2\n  p2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. abs_of_diff (p1 x y) (p2 x y)) \\<in> PrimRec2", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y. abs_of_diff (p1 x y) (p2 x y)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "assume \"q1 \\<in> PrimRec2\" and \"q2 \\<in> PrimRec2\""], ["proof (state)\nthis:\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "with S2"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. abs_of_diff (p1 x y) (p2 x y)) \\<in> PrimRec2\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2", "have \"?R \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (\\<lambda>x y. abs_of_diff (p1 x y) (p2 x y)) \\<in> PrimRec2\n  q1 \\<in> PrimRec2\n  q2 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y.\n        if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n    \\<in> PrimRec2", "by (rule if_is_pr2)"], ["proof (state)\nthis:\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n  \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec2; p2 \\<in> PrimRec2; q1 \\<in> PrimRec2;\n     q2 \\<in> PrimRec2\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y.\n                          if p1 x y = p2 x y then q1 x y else q2 x y)\n                      \\<in> PrimRec2", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y) =\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n  \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y) =\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n  (\\<lambda>x y.\n      if abs_of_diff (p1 x y) (p2 x y) = 0 then q1 x y else q2 x y)\n  \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y)\n    \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y. if p1 x y = p2 x y then q1 x y else q2 x y) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_is_pr3 [prec]: \"\\<lbrakk> p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y z. if (p x y z = 0) then (q1 x y z) else (q2 x y z)) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p x y z = 0 then q1 x y z else q2 x y z)\n                      \\<in> PrimRec3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p x y z = 0 then q1 x y z else q2 x y z)\n                      \\<in> PrimRec3", "have if_as_pr: \"(\\<lambda> x y z. if (p x y z = 0) then (q1 x y z) else (q2 x y z)) = (\\<lambda> x y z. (sgn2 (p x y z)) * (q1 x y z) + (sgn1 (p x y z)) * (q2 x y z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z) =\n    (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)", "proof (rule ext, rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (if p x y z = 0 then q1 x y z else q2 x y z) =\n       sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (if p x y z = 0 then q1 x y z else q2 x y z) =\n       sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (if p x y z = 0 then q1 x y z else q2 x y z) =\n       sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (if p x y z = 0 then q1 x y z else q2 x y z) =\n       sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "show \"(if (p x y z = 0) then (q1 x y z) else (q2 x y z)) = (sgn2 (p x y z)) * (q1 x y z) + (sgn1 (p x y z)) * (q2 x y z)\" (is \"?left = ?right\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "assume A1: \"p x y z = 0\""], ["proof (state)\nthis:\n  p x y z = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "then"], ["proof (chain)\npicking this:\n  p x y z = 0", "have S1: \"?left = q1 x y z\""], ["proof (prove)\nusing this:\n  p x y z = 0\n\ngoal (1 subgoal):\n 1. (if p x y z = 0 then q1 x y z else q2 x y z) = q1 x y z", "by simp"], ["proof (state)\nthis:\n  (if p x y z = 0 then q1 x y z else q2 x y z) = q1 x y z\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "from A1"], ["proof (chain)\npicking this:\n  p x y z = 0", "have S2: \"?right = q1 x y z\""], ["proof (prove)\nusing this:\n  p x y z = 0\n\ngoal (1 subgoal):\n 1. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z = q1 x y z", "by simp"], ["proof (state)\nthis:\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z = q1 x y z\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n 2. \\<not> ?P \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "from S1 S2"], ["proof (chain)\npicking this:\n  (if p x y z = 0 then q1 x y z else q2 x y z) = q1 x y z\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z = q1 x y z", "show ?thesis"], ["proof (prove)\nusing this:\n  (if p x y z = 0 then q1 x y z else q2 x y z) = q1 x y z\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z = q1 x y z\n\ngoal (1 subgoal):\n 1. (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "by simp"], ["proof (state)\nthis:\n  (if p x y z = 0 then q1 x y z else q2 x y z) =\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n\ngoal (1 subgoal):\n 1. p x y z \\<noteq> 0 \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p x y z \\<noteq> 0 \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "assume A2: \"p x y z \\<noteq> 0\""], ["proof (state)\nthis:\n  p x y z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p x y z \\<noteq> 0 \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "then"], ["proof (chain)\npicking this:\n  p x y z \\<noteq> 0", "have S3: \"p x y z > 0\""], ["proof (prove)\nusing this:\n  p x y z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < p x y z", "by simp"], ["proof (state)\nthis:\n  0 < p x y z\n\ngoal (1 subgoal):\n 1. p x y z \\<noteq> 0 \\<Longrightarrow>\n    (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "then"], ["proof (chain)\npicking this:\n  0 < p x y z", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < p x y z\n\ngoal (1 subgoal):\n 1. (if p x y z = 0 then q1 x y z else q2 x y z) =\n    sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z", "by simp"], ["proof (state)\nthis:\n  (if p x y z = 0 then q1 x y z else q2 x y z) =\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if p x y z = 0 then q1 x y z else q2 x y z) =\n  sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p x y z = 0 then q1 x y z else q2 x y z)\n                      \\<in> PrimRec3", "assume \"p \\<in> PrimRec3\" and \"q1 \\<in> PrimRec3\" and \"q2 \\<in> PrimRec3\""], ["proof (state)\nthis:\n  p \\<in> PrimRec3\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p x y z = 0 then q1 x y z else q2 x y z)\n                      \\<in> PrimRec3", "then"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec3\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3", "have \"(\\<lambda> x y z. (sgn2 (p x y z)) * (q1 x y z) + (sgn1 (p x y z)) * (q2 x y z)) \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec3\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n    \\<in> PrimRec3", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n  \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p x y z = 0 then q1 x y z else q2 x y z)\n                      \\<in> PrimRec3", "with if_as_pr"], ["proof (chain)\npicking this:\n  (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n  \\<in> PrimRec3", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n  (\\<lambda>x y z. sgn2 (p x y z) * q1 x y z + sgn1 (p x y z) * q2 x y z)\n  \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z)\n    \\<in> PrimRec3", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y z. if p x y z = 0 then q1 x y z else q2 x y z)\n  \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma if_eq_is_pr3: \"\\<lbrakk> p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3; q2 \\<in> PrimRec3\\<rbrakk> \\<Longrightarrow> (\\<lambda> x y z. if (p1 x y z = p2 x y z) then (q1 x y z) else (q2 x y z)) \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "have S1: \"(\\<lambda> x y z. if (p1 x y z = p2 x y z) then (q1 x y z) else (q2 x y z)) = (\\<lambda> x y z. if (abs_of_diff (p1 x y z) (p2 x y z) = 0) then (q1 x y z) else (q2 x y z))\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z) =\n    (\\<lambda>x y z.\n        if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z\n        else q2 x y z)", "by (simp add: abs_of_diff_eq)"], ["proof (state)\nthis:\n  (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "assume A1: \"p1 \\<in> PrimRec3\" and A2: \"p2 \\<in> PrimRec3\""], ["proof (state)\nthis:\n  p1 \\<in> PrimRec3\n  p2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "with abs_of_diff_is_pr"], ["proof (chain)\npicking this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec3\n  p2 \\<in> PrimRec3", "have S2: \"(\\<lambda> x y z. abs_of_diff (p1 x y z) (p2 x y z)) \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  abs_of_diff \\<in> PrimRec2\n  p1 \\<in> PrimRec3\n  p2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. abs_of_diff (p1 x y z) (p2 x y z)) \\<in> PrimRec3", "by prec0"], ["proof (state)\nthis:\n  (\\<lambda>x y z. abs_of_diff (p1 x y z) (p2 x y z)) \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "assume \"q1 \\<in> PrimRec3\" and \"q2 \\<in> PrimRec3\""], ["proof (state)\nthis:\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "with S2"], ["proof (chain)\npicking this:\n  (\\<lambda>x y z. abs_of_diff (p1 x y z) (p2 x y z)) \\<in> PrimRec3\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3", "have \"?R \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  (\\<lambda>x y z. abs_of_diff (p1 x y z) (p2 x y z)) \\<in> PrimRec3\n  q1 \\<in> PrimRec3\n  q2 \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z.\n        if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z\n        else q2 x y z)\n    \\<in> PrimRec3", "by (rule if_is_pr3)"], ["proof (state)\nthis:\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n  \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p1 \\<in> PrimRec3; p2 \\<in> PrimRec3; q1 \\<in> PrimRec3;\n     q2 \\<in> PrimRec3\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x y z.\n                          if p1 x y z = p2 x y z then q1 x y z\n                          else q2 x y z)\n                      \\<in> PrimRec3", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n  \\<in> PrimRec3", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z) =\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n  (\\<lambda>x y z.\n      if abs_of_diff (p1 x y z) (p2 x y z) = 0 then q1 x y z else q2 x y z)\n  \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z)\n    \\<in> PrimRec3", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x y z. if p1 x y z = p2 x y z then q1 x y z else q2 x y z)\n  \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["", "ML \\<open>\nfun get_if_by_index 1 = @{thm if_eq_is_pr}\n  | get_if_by_index 2 = @{thm if_eq_is_pr2}\n  | get_if_by_index 3 = @{thm if_eq_is_pr3}\n  | get_if_by_index _ = raise BadArgument\n\nfun if_comp_tac ctxt = SUBGOAL (fn (t, i) =>\n  let\n    val t = extract_trueprop_arg (Logic.strip_imp_concl t)\n    val (t1, t2) = extract_set_args t\n    val n2 =\n      let\n        val Const(s, _) = t2\n      in\n        get_num_by_set s\n      end\n    val (name, _, n1) = extract_free_arg t1\n  in\n    if name = @{const_name If} then\n      resolve_tac ctxt [get_if_by_index n2] i\n    else\n      let\n        val comp = get_comp_by_indexes (n1, n2)\n      in\n        Rule_Insts.res_inst_tac ctxt\n          [(((\"f\", 0), Position.none), Variable.revert_fixed ctxt name)] [] comp i\n      end\n  end\n  handle BadArgument => no_tac)\n\nfun prec_tac ctxt facts i =\n  Method.insert_tac ctxt facts i THEN\n  REPEAT (resolve_tac ctxt [@{thm const_is_pr}, @{thm const_is_pr_2}, @{thm const_is_pr_3}] i ORELSE\n    assume_tac ctxt i ORELSE if_comp_tac ctxt i)\n\\<close>"], ["", "method_setup prec = \\<open>\n  Attrib.thms >> (fn ths => fn ctxt => Method.METHOD (fn facts =>\n    HEADGOAL (prec_tac ctxt (facts @ Named_Theorems.get ctxt @{named_theorems prec}))))\n\\<close> \"apply primitive recursive functions\""], ["", "subsection \\<open>Bounded least operator\\<close>"], ["", "definition\n  b_least :: \"(nat \\<Rightarrow> nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat)\" where\n  \"b_least f x \\<equiv> (Least (%y. y = x \\<or> (y < x \\<and> (f x y) \\<noteq> 0)))\""], ["", "definition\n  b_least2 :: \"(nat \\<Rightarrow> nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat \\<Rightarrow> nat)\" where\n  \"b_least2 f x y \\<equiv> (Least (%z. z = y \\<or> (z < y \\<and> (f x z) \\<noteq> 0)))\""], ["", "lemma b_least_aux1: \"b_least f x = x \\<or> (b_least f x < x \\<and> (f x (b_least f x)) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "let ?P = \"%y. y = x \\<or> (y < x \\<and> (f x y) \\<noteq> 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "have \"?P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x \\<or> x < x \\<and> f x x \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  x = x \\<or> x < x \\<and> f x x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  x = x \\<or> x < x \\<and> f x x \\<noteq> 0", "have \"?P (Least ?P)\""], ["proof (prove)\nusing this:\n  x = x \\<or> x < x \\<and> f x x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) = x \\<or>\n    (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) < x \\<and>\n    f x (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) \\<noteq> 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) = x \\<or>\n  (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) < x \\<and>\n  f x (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) = x \\<or>\n  (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) < x \\<and>\n  f x (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "by (simp add: b_least_def)"], ["proof (state)\nthis:\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least_le_arg: \"b_least f x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x \\<le> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x \\<le> x", "have \"b_least f x = x \\<or> (b_least f x < x \\<and> (f x (b_least f x)) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "by (rule b_least_aux1)"], ["proof (state)\nthis:\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x \\<le> x", "from this"], ["proof (chain)\npicking this:\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x \\<le> x", "by (arith)"], ["proof (state)\nthis:\n  b_least f x \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_b_least_impl_zero: \"y < b_least f x \\<Longrightarrow> f x y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "assume A1: \"y < b_least f x\" (is \"_ < ?b\")"], ["proof (state)\nthis:\n  y < b_least f x\n\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "have \"b_least f x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x \\<le> x", "by (rule b_least_le_arg)"], ["proof (state)\nthis:\n  b_least f x \\<le> x\n\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "with A1"], ["proof (chain)\npicking this:\n  y < b_least f x\n  b_least f x \\<le> x", "have S1: \"y < x\""], ["proof (prove)\nusing this:\n  y < b_least f x\n  b_least f x \\<le> x\n\ngoal (1 subgoal):\n 1. y < x", "by simp"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "with A1"], ["proof (chain)\npicking this:\n  y < b_least f x\n  y < x", "have \" y < (Least (%y. y = x \\<or> (y < x \\<and> (f x y) \\<noteq> 0)))\""], ["proof (prove)\nusing this:\n  y < b_least f x\n  y < x\n\ngoal (1 subgoal):\n 1. y < (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0)", "by (simp add: b_least_def)"], ["proof (state)\nthis:\n  y < (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "then"], ["proof (chain)\npicking this:\n  y < (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0)", "have \"\\<not> (y = x \\<or> (y < x \\<and> (f x y) \\<noteq> 0))\""], ["proof (prove)\nusing this:\n  y < (LEAST y. y = x \\<or> y < x \\<and> f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (y = x \\<or> y < x \\<and> f x y \\<noteq> 0)", "by (rule not_less_Least)"], ["proof (state)\nthis:\n  \\<not> (y = x \\<or> y < x \\<and> f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. y < b_least f x \\<Longrightarrow> f x y = 0", "with S1"], ["proof (chain)\npicking this:\n  y < x\n  \\<not> (y = x \\<or> y < x \\<and> f x y \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  y < x\n  \\<not> (y = x \\<or> y < x \\<and> f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. f x y = 0", "by simp"], ["proof (state)\nthis:\n  f x y = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nz_impl_b_least_le: \"(f x y) \\<noteq> 0 \\<Longrightarrow> (b_least f x) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0 \\<Longrightarrow> b_least f x \\<le> y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f x y \\<noteq> 0; \\<not> b_least f x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x y \\<noteq> 0; \\<not> b_least f x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> b_least f x \\<le> y\""], ["proof (state)\nthis:\n  \\<not> b_least f x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x y \\<noteq> 0; \\<not> b_least f x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> b_least f x \\<le> y", "have \"y < b_least f x\""], ["proof (prove)\nusing this:\n  \\<not> b_least f x \\<le> y\n\ngoal (1 subgoal):\n 1. y < b_least f x", "by simp"], ["proof (state)\nthis:\n  y < b_least f x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f x y \\<noteq> 0; \\<not> b_least f x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  f x y \\<noteq> 0\n  y < b_least f x", "show False"], ["proof (prove)\nusing this:\n  f x y \\<noteq> 0\n  y < b_least f x\n\ngoal (1 subgoal):\n 1. False", "by (simp add: less_b_least_impl_zero)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least_less_impl_nz: \"b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0", "assume A1: \"b_least f x < x\""], ["proof (state)\nthis:\n  b_least f x < x\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0", "have \"b_least f x = x \\<or> (b_least f x < x \\<and> (f x (b_least f x)) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x = x \\<or>\n    b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "by (rule b_least_aux1)"], ["proof (state)\nthis:\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow> f x (b_least f x) \\<noteq> 0", "from A1 this"], ["proof (chain)\npicking this:\n  b_least f x < x\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least f x < x\n  b_least f x = x \\<or> b_least f x < x \\<and> f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x (b_least f x) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  f x (b_least f x) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least_less_impl_eq: \"b_least f x < x \\<Longrightarrow> (b_least f x) = (Least (%y. (f x y) \\<noteq> 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "assume A1: \"b_least f x < x\" (is \"?b < _\")"], ["proof (state)\nthis:\n  b_least f x < x\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "let ?B = \"(Least (%y. (f x y) \\<noteq> 0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "from A1"], ["proof (chain)\npicking this:\n  b_least f x < x", "have S1: \"f x ?b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least f x < x\n\ngoal (1 subgoal):\n 1. f x (b_least f x) \\<noteq> 0", "by (rule b_least_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "from S1"], ["proof (chain)\npicking this:\n  f x (b_least f x) \\<noteq> 0", "have S2: \"?B  \\<le> ?b\""], ["proof (prove)\nusing this:\n  f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (LEAST y. f x y \\<noteq> 0) \\<le> b_least f x", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST y. f x y \\<noteq> 0) \\<le> b_least f x\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "from S1"], ["proof (chain)\npicking this:\n  f x (b_least f x) \\<noteq> 0", "have S3: \"f x ?B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f x (b_least f x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x (LEAST y. f x y \\<noteq> 0) \\<noteq> 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  f x (LEAST y. f x y \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "from S3"], ["proof (chain)\npicking this:\n  f x (LEAST y. f x y \\<noteq> 0) \\<noteq> 0", "have S4: \"?b \\<le> ?B\""], ["proof (prove)\nusing this:\n  f x (LEAST y. f x y \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x \\<le> (LEAST y. f x y \\<noteq> 0)", "by (rule nz_impl_b_least_le)"], ["proof (state)\nthis:\n  b_least f x \\<le> (LEAST y. f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b_least f x < x \\<Longrightarrow>\n    b_least f x = (LEAST y. f x y \\<noteq> 0)", "from S2 S4"], ["proof (chain)\npicking this:\n  (LEAST y. f x y \\<noteq> 0) \\<le> b_least f x\n  b_least f x \\<le> (LEAST y. f x y \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  (LEAST y. f x y \\<noteq> 0) \\<le> b_least f x\n  b_least f x \\<le> (LEAST y. f x y \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b_least f x = (LEAST y. f x y \\<noteq> 0)", "by simp"], ["proof (state)\nthis:\n  b_least f x = (LEAST y. f x y \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_b_least_impl_zero2: \"\\<lbrakk>y < x; b_least f x = x\\<rbrakk> \\<Longrightarrow> f x y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; b_least f x = x\\<rbrakk> \\<Longrightarrow> f x y = 0", "by (simp add: less_b_least_impl_zero)"], ["", "lemma nz_impl_b_least_less: \"\\<lbrakk>y<x; (f x y) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least f x) < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x < x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x < x", "assume A1: \"y < x\""], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x < x", "assume \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x < x", "then"], ["proof (chain)\npicking this:\n  f x y \\<noteq> 0", "have \"b_least f x \\<le> y\""], ["proof (prove)\nusing this:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x \\<le> y", "by (rule nz_impl_b_least_le)"], ["proof (state)\nthis:\n  b_least f x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x < x", "with A1"], ["proof (chain)\npicking this:\n  y < x\n  b_least f x \\<le> y", "show ?thesis"], ["proof (prove)\nusing this:\n  y < x\n  b_least f x \\<le> y\n\ngoal (1 subgoal):\n 1. b_least f x < x", "by simp"], ["proof (state)\nthis:\n  b_least f x < x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least_aux2: \"\\<lbrakk>y<x; (f x y) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least f x) = (Least (%y. (f x y) \\<noteq> 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x = (LEAST y. f x y \\<noteq> 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x = (LEAST y. f x y \\<noteq> 0)", "assume A1: \"y < x\" and A2: \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  y < x\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x = (LEAST y. f x y \\<noteq> 0)", "from A1 A2"], ["proof (chain)\npicking this:\n  y < x\n  f x y \\<noteq> 0", "have S1: \"b_least f x < x\""], ["proof (prove)\nusing this:\n  y < x\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least f x < x", "by (rule nz_impl_b_least_less)"], ["proof (state)\nthis:\n  b_least f x < x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y < x; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least f x = (LEAST y. f x y \\<noteq> 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  b_least f x < x\n\ngoal (1 subgoal):\n 1. b_least f x = (LEAST y. f x y \\<noteq> 0)", "by (rule b_least_less_impl_eq)"], ["proof (state)\nthis:\n  b_least f x = (LEAST y. f x y \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_aux1: \"b_least2 f x y = y \\<or> (b_least2 f x y < y \\<and> (f x (b_least2 f x y)) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "let ?P = \"%z. z = y \\<or> (z < y \\<and> (f x z) \\<noteq> 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "have \"?P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = y \\<or> y < y \\<and> f x y \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  y = y \\<or> y < y \\<and> f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  y = y \\<or> y < y \\<and> f x y \\<noteq> 0", "have \"?P (Least ?P)\""], ["proof (prove)\nusing this:\n  y = y \\<or> y < y \\<and> f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) = y \\<or>\n    (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) < y \\<and>\n    f x (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) \\<noteq> 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) = y \\<or>\n  (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) < y \\<and>\n  f x (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) = y \\<or>\n  (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) < y \\<and>\n  f x (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "by (simp add: b_least2_def)"], ["proof (state)\nthis:\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_le_arg: \"b_least2 f x y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "let ?B = \"b_least2 f x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "have \"?B = y \\<or> (?B < y \\<and> (f x ?B) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "by (rule b_least2_aux1)"], ["proof (state)\nthis:\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "from this"], ["proof (chain)\npicking this:\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "by (arith)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_b_least2_impl_zero: \"z < b_least2 f x y \\<Longrightarrow> f x z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "assume A1: \"z < b_least2 f x y\" (is \"_ < ?b\")"], ["proof (state)\nthis:\n  z < b_least2 f x y\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "have \"b_least2 f x y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "with A1"], ["proof (chain)\npicking this:\n  z < b_least2 f x y\n  b_least2 f x y \\<le> y", "have S1: \"z < y\""], ["proof (prove)\nusing this:\n  z < b_least2 f x y\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. z < y", "by simp"], ["proof (state)\nthis:\n  z < y\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "with A1"], ["proof (chain)\npicking this:\n  z < b_least2 f x y\n  z < y", "have \" z < (Least (%z. z = y \\<or> (z < y \\<and> (f x z) \\<noteq> 0)))\""], ["proof (prove)\nusing this:\n  z < b_least2 f x y\n  z < y\n\ngoal (1 subgoal):\n 1. z < (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0)", "by (simp add: b_least2_def)"], ["proof (state)\nthis:\n  z < (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "then"], ["proof (chain)\npicking this:\n  z < (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0)", "have \"\\<not> (z = y \\<or> (z < y \\<and> (f x z) \\<noteq> 0))\""], ["proof (prove)\nusing this:\n  z < (LEAST z. z = y \\<or> z < y \\<and> f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (z = y \\<or> z < y \\<and> f x z \\<noteq> 0)", "by (rule not_less_Least)"], ["proof (state)\nthis:\n  \\<not> (z = y \\<or> z < y \\<and> f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "with S1"], ["proof (chain)\npicking this:\n  z < y\n  \\<not> (z = y \\<or> z < y \\<and> f x z \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  z < y\n  \\<not> (z = y \\<or> z < y \\<and> f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. f x z = 0", "by simp"], ["proof (state)\nthis:\n  f x z = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nz_impl_b_least2_le: \"(f x z) \\<noteq> 0 \\<Longrightarrow> (b_least2 f x y) \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x z \\<noteq> 0 \\<Longrightarrow> b_least2 f x y \\<le> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x z \\<noteq> 0 \\<Longrightarrow> b_least2 f x y \\<le> z", "assume A1: \"f x z \\<noteq> 0\""], ["proof (state)\nthis:\n  f x z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x z \\<noteq> 0 \\<Longrightarrow> b_least2 f x y \\<le> z", "have S1: \"z < b_least2 f x y \\<Longrightarrow> f x z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z < b_least2 f x y \\<Longrightarrow> f x z = 0", "by (rule less_b_least2_impl_zero)"], ["proof (state)\nthis:\n  z < b_least2 f x y \\<Longrightarrow> f x z = 0\n\ngoal (1 subgoal):\n 1. f x z \\<noteq> 0 \\<Longrightarrow> b_least2 f x y \\<le> z", "from A1 S1"], ["proof (chain)\npicking this:\n  f x z \\<noteq> 0\n  z < b_least2 f x y \\<Longrightarrow> f x z = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f x z \\<noteq> 0\n  z < b_least2 f x y \\<Longrightarrow> f x z = 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> z", "by arith"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_less_impl_nz: \"b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0", "assume A1: \"b_least2 f x y < y\""], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0", "have \"b_least2 f x y = y \\<or> (b_least2 f x y < y \\<and> (f x (b_least2 f x y)) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y = y \\<or>\n    b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "by (rule b_least2_aux1)"], ["proof (state)\nthis:\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow> f x (b_least2 f x y) \\<noteq> 0", "with A1"], ["proof (chain)\npicking this:\n  b_least2 f x y < y\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n  b_least2 f x y = y \\<or>\n  b_least2 f x y < y \\<and> f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x y) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_less_impl_eq: \"b_least2 f x y < y \\<Longrightarrow> (b_least2 f x y) = (Least (%z. (f x z) \\<noteq> 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "assume A1: \"b_least2 f x y < y\" (is \"?b < _\")"], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "let ?B = \"(Least (%z. (f x z) \\<noteq> 0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from A1"], ["proof (chain)\npicking this:\n  b_least2 f x y < y", "have S1: \"f x ?b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x y) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from S1"], ["proof (chain)\npicking this:\n  f x (b_least2 f x y) \\<noteq> 0", "have S2: \"?B  \\<le> ?b\""], ["proof (prove)\nusing this:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (LEAST z. f x z \\<noteq> 0) \\<le> b_least2 f x y", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST z. f x z \\<noteq> 0) \\<le> b_least2 f x y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from S1"], ["proof (chain)\npicking this:\n  f x (b_least2 f x y) \\<noteq> 0", "have S3: \"f x ?B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x (LEAST z. f x z \\<noteq> 0) \\<noteq> 0", "by (rule LeastI)"], ["proof (state)\nthis:\n  f x (LEAST z. f x z \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from S3"], ["proof (chain)\npicking this:\n  f x (LEAST z. f x z \\<noteq> 0) \\<noteq> 0", "have S4: \"?b \\<le> ?B\""], ["proof (prove)\nusing this:\n  f x (LEAST z. f x z \\<noteq> 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> (LEAST z. f x z \\<noteq> 0)", "by (rule nz_impl_b_least2_le)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> (LEAST z. f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from S2 S4"], ["proof (chain)\npicking this:\n  (LEAST z. f x z \\<noteq> 0) \\<le> b_least2 f x y\n  b_least2 f x y \\<le> (LEAST z. f x z \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  (LEAST z. f x z \\<noteq> 0) \\<le> b_least2 f x y\n  b_least2 f x y \\<le> (LEAST z. f x z \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y = (LEAST z. f x z \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_b_least2_impl_zero2: \"\\<lbrakk>z<y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0", "assume  \"z < y\" and \"b_least2 f x y = y\""], ["proof (state)\nthis:\n  z < y\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0", "hence \"z < b_least2 f x y\""], ["proof (prove)\nusing this:\n  z < y\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. z < b_least2 f x y", "by simp"], ["proof (state)\nthis:\n  z < b_least2 f x y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; b_least2 f x y = y\\<rbrakk> \\<Longrightarrow> f x z = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  z < b_least2 f x y\n\ngoal (1 subgoal):\n 1. f x z = 0", "by (rule less_b_least2_impl_zero)"], ["proof (state)\nthis:\n  f x z = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nz_b_least2_impl_less: \"\\<lbrakk>z<y; (f x z) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least2 f x y) < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x y < y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"z < y\""], ["proof (state)\nthis:\n  z < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "assume A2: \"f x z \\<noteq> 0\""], ["proof (state)\nthis:\n  f x z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> (b_least2 f x y) < y\""], ["proof (state)\nthis:\n  \\<not> b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> b_least2 f x y < y", "have A3: \"y \\<le> (b_least2 f x y)\""], ["proof (prove)\nusing this:\n  \\<not> b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x y", "by simp"], ["proof (state)\nthis:\n  y \\<le> b_least2 f x y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "have \"b_least2 f x y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "with A3"], ["proof (chain)\npicking this:\n  y \\<le> b_least2 f x y\n  b_least2 f x y \\<le> y", "have \"b_least2 f x y = y\""], ["proof (prove)\nusing this:\n  y \\<le> b_least2 f x y\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  z < y\n  b_least2 f x y = y", "have \"f x z = 0\""], ["proof (prove)\nusing this:\n  z < y\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. f x z = 0", "by (rule less_b_least2_impl_zero2)"], ["proof (state)\nthis:\n  f x z = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0; \\<not> b_least2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> False", "with A2"], ["proof (chain)\npicking this:\n  f x z \\<noteq> 0\n  f x z = 0", "show False"], ["proof (prove)\nusing this:\n  f x z \\<noteq> 0\n  f x z = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_less_impl_eq2: \"\\<lbrakk>z < y; (f x z) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> (b_least2 f x y) = (Least (%z. (f x z) \\<noteq> 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "assume A1: \"z < y\" and A2: \"f x z \\<noteq> 0\""], ["proof (state)\nthis:\n  z < y\n  f x z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "from A1 A2"], ["proof (chain)\npicking this:\n  z < y\n  f x z \\<noteq> 0", "have S1: \"b_least2 f x y < y\""], ["proof (prove)\nusing this:\n  z < y\n  f x z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y", "by (rule nz_b_least2_impl_less)"], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z < y; f x z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x y = (LEAST z. f x z \\<noteq> 0)", "by (rule b_least2_less_impl_eq)"], ["proof (state)\nthis:\n  b_least2 f x y = (LEAST z. f x z \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_aux2: \"b_least2 f x y < y \\<Longrightarrow> b_least2 f x (Suc y) = b_least2 f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "let ?B = \"b_least2 f x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "assume A1: \"?B < y\""], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from A1"], ["proof (chain)\npicking this:\n  b_least2 f x y < y", "have S1: \"f x ?B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x y) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from S1"], ["proof (chain)\npicking this:\n  f x (b_least2 f x y) \\<noteq> 0", "have S2: \"b_least2 f x (Suc y) \\<le> ?B\""], ["proof (prove)\nusing this:\n  f x (b_least2 f x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) \\<le> b_least2 f x y", "by (simp add: nz_impl_b_least2_le)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) \\<le> b_least2 f x y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from A1 S2"], ["proof (chain)\npicking this:\n  b_least2 f x y < y\n  b_least2 f x (Suc y) \\<le> b_least2 f x y", "have S3: \"b_least2 f x (Suc y) < Suc y\""], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n  b_least2 f x (Suc y) \\<le> b_least2 f x y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < Suc y", "by (simp)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from S3"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < Suc y", "have S4: \"f x (b_least2 f x (Suc y)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x (Suc y)) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from S4"], ["proof (chain)\npicking this:\n  f x (b_least2 f x (Suc y)) \\<noteq> 0", "have S5: \"?B \\<le> b_least2 f x (Suc y)\""], ["proof (prove)\nusing this:\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> b_least2 f x (Suc y)", "by (rule nz_impl_b_least2_le)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y \\<Longrightarrow>\n    b_least2 f x (Suc y) = b_least2 f x y", "from S2 S5"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) \\<le> b_least2 f x y\n  b_least2 f x y \\<le> b_least2 f x (Suc y)", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) \\<le> b_least2 f x y\n  b_least2 f x y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = b_least2 f x y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = b_least2 f x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_aux3: \"\\<lbrakk> b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk> \\<Longrightarrow> b_least2 f x (Suc y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "assume A1: \"b_least2 f x y =y\""], ["proof (state)\nthis:\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "assume A2: \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "from A2"], ["proof (chain)\npicking this:\n  f x y \\<noteq> 0", "have S1: \"b_least2 f x (Suc y) \\<le> y\""], ["proof (prove)\nusing this:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) \\<le> y", "by (rule nz_impl_b_least2_le)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "have S2: \"b_least2 f x (Suc y) < y \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "assume A2_1: \"b_least2 f x (Suc y) < y\" (is \"?z < _\")"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) < y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "from A2_1"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < y", "have S2_1: \"?z < Suc y\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < Suc y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "from S2_1"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < Suc y", "have S2_2: \"f x ?z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x (Suc y)) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "from A2_1 S2_2"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < y\n  f x (b_least2 f x (Suc y)) \\<noteq> 0", "have S2_3: \"b_least2 f x y < y\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < y\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y", "by (rule nz_b_least2_impl_less)"], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < y \\<Longrightarrow> False", "from S2_3 A1"], ["proof (chain)\npicking this:\n  b_least2 f x y < y\n  b_least2 f x y = y", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) < y \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "from S2"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < y \\<Longrightarrow> False", "have S3: \"\\<not> (b_least2 f x (Suc y) < y)\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < y \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> b_least2 f x (Suc y) < y", "by auto"], ["proof (state)\nthis:\n  \\<not> b_least2 f x (Suc y) < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = y", "from S1 S3"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) \\<le> y\n  \\<not> b_least2 f x (Suc y) < y", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) \\<le> y\n  \\<not> b_least2 f x (Suc y) < y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_mono: \"y1 \\<le> y2 \\<Longrightarrow> b_least2 f x y1 \\<le> b_least2 f x y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 \\<le> y2 \\<Longrightarrow> b_least2 f x y1 \\<le> b_least2 f x y2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"y1 \\<le> y2\""], ["proof (state)\nthis:\n  y1 \\<le> y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "let ?b1 = \"b_least2 f x y1\" and ?b2 = \"b_least2 f x y2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> ?b1 \\<le> ?b2\""], ["proof (state)\nthis:\n  \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> b_least2 f x y1 \\<le> b_least2 f x y2", "have A2: \"?b2 < ?b1\""], ["proof (prove)\nusing this:\n  \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\n\ngoal (1 subgoal):\n 1. b_least2 f x y2 < b_least2 f x y1", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y2 < b_least2 f x y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "have S1: \"?b1 \\<le> y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y1 \\<le> y1", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x y1 \\<le> y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "have S2: \"?b2 \\<le> y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y2 \\<le> y2", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x y2 \\<le> y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "from A1 A2 S1 S2"], ["proof (chain)\npicking this:\n  y1 \\<le> y2\n  b_least2 f x y2 < b_least2 f x y1\n  b_least2 f x y1 \\<le> y1\n  b_least2 f x y2 \\<le> y2", "have S3: \"?b2 < y2\""], ["proof (prove)\nusing this:\n  y1 \\<le> y2\n  b_least2 f x y2 < b_least2 f x y1\n  b_least2 f x y1 \\<le> y1\n  b_least2 f x y2 \\<le> y2\n\ngoal (1 subgoal):\n 1. b_least2 f x y2 < y2", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y2 < y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b_least2 f x y2 < y2", "have S4: \"f x ?b2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x y2 < y2\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x y2) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x y2) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "from A2"], ["proof (chain)\npicking this:\n  b_least2 f x y2 < b_least2 f x y1", "have S5: \"f x ?b2 = 0\""], ["proof (prove)\nusing this:\n  b_least2 f x y2 < b_least2 f x y1\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x y2) = 0", "by (rule less_b_least2_impl_zero)"], ["proof (state)\nthis:\n  f x (b_least2 f x y2) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y1 \\<le> y2;\n     \\<not> b_least2 f x y1 \\<le> b_least2 f x y2\\<rbrakk>\n    \\<Longrightarrow> False", "from S4 S5"], ["proof (chain)\npicking this:\n  f x (b_least2 f x y2) \\<noteq> 0\n  f x (b_least2 f x y2) = 0", "show False"], ["proof (prove)\nusing this:\n  f x (b_least2 f x y2) \\<noteq> 0\n  f x (b_least2 f x y2) = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_aux4: \"\\<lbrakk> b_least2 f x y = y; f x y = 0\\<rbrakk> \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "assume A1: \"b_least2 f x y = y\""], ["proof (state)\nthis:\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "assume A2: \"f x y = 0\""], ["proof (state)\nthis:\n  f x y = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "have S1: \"b_least2 f x (Suc y) \\<le> Suc y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) \\<le> Suc y", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) \\<le> Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "have S2: \"y \\<le> b_least2 f x (Suc y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x (Suc y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x (Suc y)", "have \"y \\<le> Suc y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> Suc y", "by simp"], ["proof (state)\nthis:\n  y \\<le> Suc y\n\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x (Suc y)", "then"], ["proof (chain)\npicking this:\n  y \\<le> Suc y", "have \"b_least2 f x y \\<le> b_least2 f x (Suc y)\""], ["proof (prove)\nusing this:\n  y \\<le> Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> b_least2 f x (Suc y)", "by (rule b_least2_mono)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x (Suc y)", "with A1"], ["proof (chain)\npicking this:\n  b_least2 f x y = y\n  b_least2 f x y \\<le> b_least2 f x (Suc y)", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y = y\n  b_least2 f x y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. y \\<le> b_least2 f x (Suc y)", "by simp"], ["proof (state)\nthis:\n  y \\<le> b_least2 f x (Suc y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "from S1 S2"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) \\<le> Suc y\n  y \\<le> b_least2 f x (Suc y)", "have \"b_least2 f x (Suc y) =y \\<or> b_least2 f x (Suc y) = Suc y\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) \\<le> Suc y\n  y \\<le> b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y", "by arith"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "moreover"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "{"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "assume A3: \"b_least2 f x (Suc y) = y\""], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "have \"f x y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "have \"y < Suc y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < Suc y", "by simp"], ["proof (state)\nthis:\n  y < Suc y\n\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "with A3"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) = y\n  y < Suc y", "have \"b_least2 f x (Suc y) < Suc y\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) = y\n  y < Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) < Suc y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "from this"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) < Suc y", "have \"f x (b_least2 f x (Suc y)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) < Suc y\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x (Suc y)) \\<noteq> 0", "by (simp add: b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "with A3"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) = y\n  f x (b_least2 f x (Suc y)) \\<noteq> 0", "show \"f x y \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) = y\n  f x (b_least2 f x (Suc y)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x y \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "with A2"], ["proof (chain)\npicking this:\n  f x y = 0\n  f x y \\<noteq> 0", "have ?thesis"], ["proof (prove)\nusing this:\n  f x y = 0\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = Suc y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "}"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "moreover"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "{"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "assume \"b_least2 f x (Suc y) = Suc y\""], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "then"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) = Suc y", "have ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = Suc y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "}"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y \\<Longrightarrow>\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; f x y = 0\\<rbrakk>\n    \\<Longrightarrow> b_least2 f x (Suc y) = Suc y", "ultimately"], ["proof (chain)\npicking this:\n  b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = y \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = Suc y \\<Longrightarrow>\n  b_least2 f x (Suc y) = Suc y", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x (Suc y) = y \\<or> b_least2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = y \\<Longrightarrow> b_least2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = Suc y \\<Longrightarrow>\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = Suc y", "by blast"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least2_at_zero: \"b_least2 f x 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x 0 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x 0 = 0", "have S1: \"b_least2 f x 0 \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x 0 \\<le> 0", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x 0 = 0", "from S1"], ["proof (chain)\npicking this:\n  b_least2 f x 0 \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x 0 = 0", "by auto"], ["proof (state)\nthis:\n  b_least2 f x 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_b_least2: \"f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "define loc_Op1 where \"loc_Op1 = (\\<lambda> (f::nat \\<Rightarrow> nat \\<Rightarrow> nat) x y z. (sgn1 (z - y)) * y + (sgn2 (z - y))*((sgn1 (f x z))*z + (sgn2 (f x z))*(Suc z)))\""], ["proof (state)\nthis:\n  loc_Op1 =\n  (\\<lambda>f x y z.\n      sgn1 (z - y) * y +\n      sgn2 (z - y) * (sgn1 (f x z) * z + sgn2 (f x z) * Suc z))\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "define loc_Op2 where \"loc_Op2 = (\\<lambda> f. PrimRecOp_last (\\<lambda> x. 0) (loc_Op1 f))\""], ["proof (state)\nthis:\n  loc_Op2 = (\\<lambda>f. PrimRecOp_last (\\<lambda>x. 0) (loc_Op1 f))\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have loc_op2_lm_1: \"\\<And> f x y. loc_Op2 f x y < y \\<Longrightarrow> loc_Op2 f x (Suc y) = loc_Op2 f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "fix f x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "let ?b = \"loc_Op2 f x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "have S1: \"loc_Op2 f x (Suc y) = (loc_Op1 f) x ?b y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y", "by (simp add: loc_Op2_def)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "assume \"?b < y\""], ["proof (state)\nthis:\n  loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "then"], ["proof (chain)\npicking this:\n  loc_Op2 f x y < y", "have \"y - ?b > 0\""], ["proof (prove)\nusing this:\n  loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. 0 < y - loc_Op2 f x y", "by simp"], ["proof (state)\nthis:\n  0 < y - loc_Op2 f x y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "then"], ["proof (chain)\npicking this:\n  0 < y - loc_Op2 f x y", "have \"loc_Op1 f x ?b y = ?b\""], ["proof (prove)\nusing this:\n  0 < y - loc_Op2 f x y\n\ngoal (1 subgoal):\n 1. loc_Op1 f x (loc_Op2 f x y) y = loc_Op2 f x y", "by (simp add: loc_Op1_def)"], ["proof (state)\nthis:\n  loc_Op1 f x (loc_Op2 f x y) y = loc_Op2 f x y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       loc_Op2 f x y < y \\<Longrightarrow>\n       loc_Op2 f x (Suc y) = loc_Op2 f x y", "with S1"], ["proof (chain)\npicking this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = loc_Op2 f x y", "show \"loc_Op2 f x y < y \\<Longrightarrow> loc_Op2 f x (Suc y) = loc_Op2 f x y\""], ["proof (prove)\nusing this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = loc_Op2 f x y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x y < y \\<Longrightarrow> loc_Op2 f x (Suc y) = loc_Op2 f x y", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x y < y \\<Longrightarrow> loc_Op2 f x (Suc y) = loc_Op2 f x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 ?f ?x ?y < ?y \\<Longrightarrow>\n  loc_Op2 ?f ?x (Suc ?y) = loc_Op2 ?f ?x ?y\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have loc_op2_lm_2: \"\\<And> f x y. \\<lbrakk>\\<not>(loc_Op2 f x y < y); f x y \\<noteq> 0\\<rbrakk> \\<Longrightarrow> loc_Op2 f x (Suc y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "fix f x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "let ?b = \"loc_Op2 f x y\" and ?h = \"loc_Op1 f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "have S1: \"loc_Op2 f x (Suc y) = ?h x ?b y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y", "by (simp add: loc_Op2_def)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "assume \"\\<not>(?b < y)\""], ["proof (state)\nthis:\n  \\<not> loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "then"], ["proof (chain)\npicking this:\n  \\<not> loc_Op2 f x y < y", "have S2: \"y - ?b = 0\""], ["proof (prove)\nusing this:\n  \\<not> loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. y - loc_Op2 f x y = 0", "by simp"], ["proof (state)\nthis:\n  y - loc_Op2 f x y = 0\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "assume \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "with S2"], ["proof (chain)\npicking this:\n  y - loc_Op2 f x y = 0\n  f x y \\<noteq> 0", "have \"?h x ?b y = y\""], ["proof (prove)\nusing this:\n  y - loc_Op2 f x y = 0\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. loc_Op1 f x (loc_Op2 f x y) y = y", "by (simp add: loc_Op1_def)"], ["proof (state)\nthis:\n  loc_Op1 f x (loc_Op2 f x y) y = y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = y", "with S1"], ["proof (chain)\npicking this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = y", "show \"loc_Op2 f x (Suc y) = y\""], ["proof (prove)\nusing this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = y", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> loc_Op2 ?f ?x ?y < ?y; ?f ?x ?y \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> loc_Op2 ?f ?x (Suc ?y) = ?y\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have loc_op2_lm_3: \"\\<And> f x y. \\<lbrakk>\\<not>(loc_Op2 f x y < y); f x y = 0\\<rbrakk> \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "fix f x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "let ?b = \"loc_Op2 f x y\" and ?h = \"loc_Op1 f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "have S1: \"loc_Op2 f x (Suc y) = ?h x ?b y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y", "by (simp add: loc_Op2_def)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "assume \"\\<not>(?b < y)\""], ["proof (state)\nthis:\n  \\<not> loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "then"], ["proof (chain)\npicking this:\n  \\<not> loc_Op2 f x y < y", "have S2: \"y - ?b = 0\""], ["proof (prove)\nusing this:\n  \\<not> loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. y - loc_Op2 f x y = 0", "by simp"], ["proof (state)\nthis:\n  y - loc_Op2 f x y = 0\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "assume \"f x y = 0\""], ["proof (state)\nthis:\n  f x y = 0\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "with S2"], ["proof (chain)\npicking this:\n  y - loc_Op2 f x y = 0\n  f x y = 0", "have \"?h x ?b y = Suc y\""], ["proof (prove)\nusing this:\n  y - loc_Op2 f x y = 0\n  f x y = 0\n\ngoal (1 subgoal):\n 1. loc_Op1 f x (loc_Op2 f x y) y = Suc y", "by (simp add: loc_Op1_def)"], ["proof (state)\nthis:\n  loc_Op1 f x (loc_Op2 f x y) y = Suc y\n\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       \\<lbrakk>\\<not> loc_Op2 f x y < y; f x y = 0\\<rbrakk>\n       \\<Longrightarrow> loc_Op2 f x (Suc y) = Suc y", "with S1"], ["proof (chain)\npicking this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = Suc y", "show \"loc_Op2 f x (Suc y) = Suc y\""], ["proof (prove)\nusing this:\n  loc_Op2 f x (Suc y) = loc_Op1 f x (loc_Op2 f x y) y\n  loc_Op1 f x (loc_Op2 f x y) y = Suc y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = Suc y", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = Suc y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> loc_Op2 ?f ?x ?y < ?y; ?f ?x ?y = 0\\<rbrakk>\n  \\<Longrightarrow> loc_Op2 ?f ?x (Suc ?y) = Suc ?y\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have Op2_eq_b_least2_at_point: \"\\<And> f x y. loc_Op2 f x y = b_least2 f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y. loc_Op2 f x y = b_least2 f x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y. loc_Op2 f x y = b_least2 f x y", "fix f x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f x y. loc_Op2 f x y = b_least2 f x y", "show \"\\<And> y. loc_Op2 f x y = b_least2 f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. loc_Op2 f x y = b_least2 f x y", "proof (induct_tac y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. loc_Op2 f x 0 = b_least2 f x 0\n 2. \\<And>y n.\n       loc_Op2 f x n = b_least2 f x n \\<Longrightarrow>\n       loc_Op2 f x (Suc n) = b_least2 f x (Suc n)", "show \"loc_Op2 f x 0 = b_least2 f x 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 f x 0 = b_least2 f x 0", "by (simp add: loc_Op2_def b_least2_at_zero)"], ["proof (state)\nthis:\n  loc_Op2 f x 0 = b_least2 f x 0\n\ngoal (1 subgoal):\n 1. \\<And>y n.\n       loc_Op2 f x n = b_least2 f x n \\<Longrightarrow>\n       loc_Op2 f x (Suc n) = b_least2 f x (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y n.\n       loc_Op2 f x n = b_least2 f x n \\<Longrightarrow>\n       loc_Op2 f x (Suc n) = b_least2 f x (Suc n)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y n.\n       loc_Op2 f x n = b_least2 f x n \\<Longrightarrow>\n       loc_Op2 f x (Suc n) = b_least2 f x (Suc n)", "assume A1: \"loc_Op2 f x y = b_least2 f x y\""], ["proof (state)\nthis:\n  loc_Op2 f x y = b_least2 f x y\n\ngoal (1 subgoal):\n 1. \\<And>y n.\n       loc_Op2 f x n = b_least2 f x n \\<Longrightarrow>\n       loc_Op2 f x (Suc n) = b_least2 f x (Suc n)", "then"], ["proof (chain)\npicking this:\n  loc_Op2 f x y = b_least2 f x y", "show \"loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\""], ["proof (prove)\nusing this:\n  loc_Op2 f x y = b_least2 f x y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "assume A2: \"loc_Op2 f x y < y\""], ["proof (state)\nthis:\n  loc_Op2 f x y < y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "then"], ["proof (chain)\npicking this:\n  loc_Op2 f x y < y", "have S1: \"loc_Op2 f x (Suc y) = loc_Op2 f x y\""], ["proof (prove)\nusing this:\n  loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = loc_Op2 f x y", "by (rule loc_op2_lm_1)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = loc_Op2 f x y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from A1 A2"], ["proof (chain)\npicking this:\n  loc_Op2 f x y = b_least2 f x y\n  loc_Op2 f x y < y", "have \"b_least2 f x y < y\""], ["proof (prove)\nusing this:\n  loc_Op2 f x y = b_least2 f x y\n  loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x y < y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y < y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "then"], ["proof (chain)\npicking this:\n  b_least2 f x y < y", "have S2: \"b_least2 f x (Suc y) = b_least2 f x y\""], ["proof (prove)\nusing this:\n  b_least2 f x y < y\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = b_least2 f x y", "by (rule b_least2_aux2)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = b_least2 f x y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>loc_Op2 f x y = b_least2 f x y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from A1 S1 S2"], ["proof (chain)\npicking this:\n  loc_Op2 f x y = b_least2 f x y\n  loc_Op2 f x (Suc y) = loc_Op2 f x y\n  b_least2 f x (Suc y) = b_least2 f x y", "show ?thesis"], ["proof (prove)\nusing this:\n  loc_Op2 f x y = b_least2 f x y\n  loc_Op2 f x (Suc y) = loc_Op2 f x y\n  b_least2 f x (Suc y) = b_least2 f x y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y;\n     \\<not> loc_Op2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y;\n     \\<not> loc_Op2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "assume A3: \"\\<not> loc_Op2 f x y < y\""], ["proof (state)\nthis:\n  \\<not> loc_Op2 f x y < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y;\n     \\<not> loc_Op2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "have A3': \"b_least2 f x y = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b_least2 f x y = y", "have \"b_least2 f x y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least2 f x y \\<le> y", "by (rule b_least2_le_arg)"], ["proof (state)\nthis:\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y", "from A1 A3 this"], ["proof (chain)\npicking this:\n  loc_Op2 f x y = b_least2 f x y\n  \\<not> loc_Op2 f x y < y\n  b_least2 f x y \\<le> y", "show ?thesis"], ["proof (prove)\nusing this:\n  loc_Op2 f x y = b_least2 f x y\n  \\<not> loc_Op2 f x y < y\n  b_least2 f x y \\<le> y\n\ngoal (1 subgoal):\n 1. b_least2 f x y = y", "by simp"], ["proof (state)\nthis:\n  b_least2 f x y = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>loc_Op2 f x y = b_least2 f x y;\n     \\<not> loc_Op2 f x y < y\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "then"], ["proof (chain)\npicking this:\n  b_least2 f x y = y", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x y = y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>b_least2 f x y = y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>b_least2 f x y = y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "assume A4: \"f x y \\<noteq> 0\""], ["proof (state)\nthis:\n  f x y \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b_least2 f x y = y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>b_least2 f x y = y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "with A3"], ["proof (chain)\npicking this:\n  \\<not> loc_Op2 f x y < y\n  f x y \\<noteq> 0", "have S3: \"loc_Op2 f x (Suc y) = y\""], ["proof (prove)\nusing this:\n  \\<not> loc_Op2 f x y < y\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = y", "by (rule loc_op2_lm_2)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b_least2 f x y = y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>b_least2 f x y = y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from A3' A4"], ["proof (chain)\npicking this:\n  b_least2 f x y = y\n  f x y \\<noteq> 0", "have S4: \"b_least2 f x (Suc y) = y\""], ["proof (prove)\nusing this:\n  b_least2 f x y = y\n  f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = y", "by (rule b_least2_aux3)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b_least2 f x y = y; ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n 2. \\<lbrakk>b_least2 f x y = y; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from S3 S4"], ["proof (chain)\npicking this:\n  loc_Op2 f x (Suc y) = y\n  b_least2 f x (Suc y) = y", "show ?thesis"], ["proof (prove)\nusing this:\n  loc_Op2 f x (Suc y) = y\n  b_least2 f x (Suc y) = y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "assume \"\\<not> f x y \\<noteq>  0\""], ["proof (state)\nthis:\n  \\<not> f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "then"], ["proof (chain)\npicking this:\n  \\<not> f x y \\<noteq> 0", "have A5: \"f x y = 0\""], ["proof (prove)\nusing this:\n  \\<not> f x y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x y = 0", "by simp"], ["proof (state)\nthis:\n  f x y = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "with A3"], ["proof (chain)\npicking this:\n  \\<not> loc_Op2 f x y < y\n  f x y = 0", "have S5: \"loc_Op2 f x (Suc y) = Suc y\""], ["proof (prove)\nusing this:\n  \\<not> loc_Op2 f x y < y\n  f x y = 0\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = Suc y", "by (rule loc_op2_lm_3)"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from A3' A5"], ["proof (chain)\npicking this:\n  b_least2 f x y = y\n  f x y = 0", "have S6: \"b_least2 f x (Suc y) = Suc y\""], ["proof (prove)\nusing this:\n  b_least2 f x y = y\n  f x y = 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (Suc y) = Suc y", "by (rule b_least2_aux4)"], ["proof (state)\nthis:\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b_least2 f x y = y; \\<not> f x y \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "from S5 S6"], ["proof (chain)\npicking this:\n  loc_Op2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = Suc y", "show ?thesis"], ["proof (prove)\nusing this:\n  loc_Op2 f x (Suc y) = Suc y\n  b_least2 f x (Suc y) = Suc y\n\ngoal (1 subgoal):\n 1. loc_Op2 f x (Suc y) = b_least2 f x (Suc y)", "by simp"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 f x (Suc y) = b_least2 f x (Suc y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 f x ?y = b_least2 f x ?y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 ?f ?x ?y = b_least2 ?f ?x ?y\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have Op2_eq_b_least2: \"loc_Op2 = b_least2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 = b_least2", "by (simp add: Op2_eq_b_least2_at_point ext)"], ["proof (state)\nthis:\n  loc_Op2 = b_least2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "assume A1: \"f \\<in> PrimRec2\""], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "have pr_loc_Op2: \"loc_Op2 f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_Op2 f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. loc_Op2 f \\<in> PrimRec2", "from A1"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2", "have S1: \"loc_Op1 f \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. loc_Op1 f \\<in> PrimRec3", "by (simp add: loc_Op1_def, prec)"], ["proof (state)\nthis:\n  loc_Op1 f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. loc_Op2 f \\<in> PrimRec2", "from pr_zero S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x. 0) \\<in> PrimRec1\n  loc_Op1 f \\<in> PrimRec3", "have S2: \"PrimRecOp_last (\\<lambda> x. 0) (loc_Op1 f) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. 0) \\<in> PrimRec1\n  loc_Op1 f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. PrimRecOp_last (\\<lambda>x. 0) (loc_Op1 f) \\<in> PrimRec2", "by (rule pr_rec_last)"], ["proof (state)\nthis:\n  PrimRecOp_last (\\<lambda>x. 0) (loc_Op1 f) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. loc_Op2 f \\<in> PrimRec2", "from this"], ["proof (chain)\npicking this:\n  PrimRecOp_last (\\<lambda>x. 0) (loc_Op1 f) \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  PrimRecOp_last (\\<lambda>x. 0) (loc_Op1 f) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. loc_Op2 f \\<in> PrimRec2", "by (simp add: loc_Op2_def)"], ["proof (state)\nthis:\n  loc_Op2 f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_Op2 f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least2 f \\<in> PrimRec2", "from Op2_eq_b_least2 this"], ["proof (chain)\npicking this:\n  loc_Op2 = b_least2\n  loc_Op2 f \\<in> PrimRec2", "show \"b_least2 f \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  loc_Op2 = b_least2\n  loc_Op2 f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. b_least2 f \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  b_least2 f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma b_least_def1: \"b_least f = (\\<lambda> x. b_least2 f x x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b_least f = (\\<lambda>x. b_least2 f x x)", "by (simp add: b_least2_def b_least_def ext)"], ["", "theorem pr_b_least: \"f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1", "assume \"f \\<in> PrimRec2\""], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2", "have \"b_least2 f \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. b_least2 f \\<in> PrimRec2", "by (rule pr_b_least2)"], ["proof (state)\nthis:\n  b_least2 f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1", "from this pr_id1_1 pr_id1_1"], ["proof (chain)\npicking this:\n  b_least2 f \\<in> PrimRec2\n  (\\<lambda>x. x) \\<in> PrimRec1\n  (\\<lambda>x. x) \\<in> PrimRec1", "have \"(\\<lambda> x. b_least2 f x x) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  b_least2 f \\<in> PrimRec2\n  (\\<lambda>x. x) \\<in> PrimRec1\n  (\\<lambda>x. x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. b_least2 f x x) \\<in> PrimRec1", "by (rule pr_comp2_1)"], ["proof (state)\nthis:\n  (\\<lambda>x. b_least2 f x x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> b_least f \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. b_least2 f x x) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. b_least2 f x x) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. b_least f \\<in> PrimRec1", "by (simp add: b_least_def1)"], ["proof (state)\nthis:\n  b_least f \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Examples\\<close>"], ["", "theorem c_sum_as_b_least: \"c_sum = (\\<lambda> u. b_least2 (\\<lambda> u z. (sgn1 (sf(z+1) - u))) u (Suc u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_sum =\n    (\\<lambda>u. b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u))", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "show \"c_sum u = b_least2 (\\<lambda> u z. (sgn1 (sf(z+1) - u))) u (Suc u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "have lm_1: \"(\\<lambda> x y. (sgn1 (sf(y+1) - x) \\<noteq> 0)) = (\\<lambda> x y. (x < sf(y+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. sgn1 (sf (y + 1) - x) \\<noteq> 0) =\n    (\\<lambda>x y. x < sf (y + 1))", "proof (rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "show \"(sgn1 (sf(y+1) - x) \\<noteq> 0) = (x < sf(y+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "have \"(sgn1 (sf(y+1) - x) \\<noteq> 0) = (sf(y+1) - x > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (0 < sf (y + 1) - x)", "by (rule sgn1_nz_eq_arg_pos)"], ["proof (state)\nthis:\n  (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (0 < sf (y + 1) - x)\n\ngoal (1 subgoal):\n 1. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "thus \"(sgn1 (sf(y+1) - x) \\<noteq> 0) = (x < sf(y+1))\""], ["proof (prove)\nusing this:\n  (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (0 < sf (y + 1) - x)\n\ngoal (1 subgoal):\n 1. (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))", "by auto"], ["proof (state)\nthis:\n  (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (sgn1 (sf (y + 1) - x) \\<noteq> 0) = (x < sf (y + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x y. sgn1 (sf (y + 1) - x) \\<noteq> 0) =\n  (\\<lambda>x y. x < sf (y + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "(* lm_1 *)"], ["proof (state)\nthis:\n  (\\<lambda>x y. sgn1 (sf (y + 1) - x) \\<noteq> 0) =\n  (\\<lambda>x y. x < sf (y + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "let ?f = \"\\<lambda> u z. (sgn1 (sf(z+1) - u))\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "have S1: \"?f u u \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "have S1_1: \"u+1 \\<le> sf(u+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u + 1 \\<le> sf (u + 1)", "by (rule arg_le_sf)"], ["proof (state)\nthis:\n  u + 1 \\<le> sf (u + 1)\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "have S1_2: \"u < u+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < u + 1", "by simp"], ["proof (state)\nthis:\n  u < u + 1\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "from S1_1 S1_2"], ["proof (chain)\npicking this:\n  u + 1 \\<le> sf (u + 1)\n  u < u + 1", "have S1_3: \"u < sf(u+1)\""], ["proof (prove)\nusing this:\n  u + 1 \\<le> sf (u + 1)\n  u < u + 1\n\ngoal (1 subgoal):\n 1. u < sf (u + 1)", "by simp"], ["proof (state)\nthis:\n  u < sf (u + 1)\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "from S1_3"], ["proof (chain)\npicking this:\n  u < sf (u + 1)", "have S1_4: \"sf(u+1) - u > 0\""], ["proof (prove)\nusing this:\n  u < sf (u + 1)\n\ngoal (1 subgoal):\n 1. 0 < sf (u + 1) - u", "by simp"], ["proof (state)\nthis:\n  0 < sf (u + 1) - u\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "from S1_4"], ["proof (chain)\npicking this:\n  0 < sf (u + 1) - u", "have S1_5: \"sgn1 (sf(u+1)-u) = 1\""], ["proof (prove)\nusing this:\n  0 < sf (u + 1) - u\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) = 1", "by simp"], ["proof (state)\nthis:\n  sgn1 (sf (u + 1) - u) = 1\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "from S1_5"], ["proof (chain)\npicking this:\n  sgn1 (sf (u + 1) - u) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sgn1 (sf (u + 1) - u) = 1\n\ngoal (1 subgoal):\n 1. sgn1 (sf (u + 1) - u) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  sgn1 (sf (u + 1) - u) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sgn1 (sf (u + 1) - u) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "have S3: \"u < Suc u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < Suc u", "by simp"], ["proof (state)\nthis:\n  u < Suc u\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "from S3 S1"], ["proof (chain)\npicking this:\n  u < Suc u\n  sgn1 (sf (u + 1) - u) \\<noteq> 0", "have S4: \"b_least2 ?f u (Suc u) = (Least (%z. (?f u z) \\<noteq> 0))\""], ["proof (prove)\nusing this:\n  u < Suc u\n  sgn1 (sf (u + 1) - u) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n    (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0)", "by (rule b_least2_less_impl_eq2)"], ["proof (state)\nthis:\n  b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "let ?P = \"\\<lambda> u z. ?f u z \\<noteq> 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "let ?Q = \"\\<lambda> u z. u < sf(z+1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "from lm_1"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. sgn1 (sf (y + 1) - x) \\<noteq> 0) =\n  (\\<lambda>x y. x < sf (y + 1))", "have S6: \"?P = ?Q\""], ["proof (prove)\nusing this:\n  (\\<lambda>x y. sgn1 (sf (y + 1) - x) \\<noteq> 0) =\n  (\\<lambda>x y. x < sf (y + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>u z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n    (\\<lambda>u z. u < sf (z + 1))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>u z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "from S6"], ["proof (chain)\npicking this:\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>u z. u < sf (z + 1))", "have S7: \"(%z. ?P u z) = (%z. ?Q u z)\""], ["proof (prove)\nusing this:\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>u z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n    (\\<lambda>z. u < sf (z + 1))", "by (rule fun_cong)"], ["proof (state)\nthis:\n  (\\<lambda>z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "from S7"], ["proof (chain)\npicking this:\n  (\\<lambda>z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>z. u < sf (z + 1))", "have S8: \"(Least (%z. ?P u z)) = (Least (%z. ?Q u z))\""], ["proof (prove)\nusing this:\n  (\\<lambda>z. sgn1 (sf (z + 1) - u) \\<noteq> 0) =\n  (\\<lambda>z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0) = (LEAST z. u < sf (z + 1))", "by auto"], ["proof (state)\nthis:\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0) = (LEAST z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "from S4 S8"], ["proof (chain)\npicking this:\n  b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0)\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0) = (LEAST z. u < sf (z + 1))", "have S9: \"b_least2 ?f u (Suc u) = (Least (%z. u < sf(z+1)))\""], ["proof (prove)\nusing this:\n  b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0)\n  (LEAST z. sgn1 (sf (z + 1) - u) \\<noteq> 0) = (LEAST z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n    (LEAST z. u < sf (z + 1))", "by (rule trans)"], ["proof (state)\nthis:\n  b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n  (LEAST z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "thus ?thesis"], ["proof (prove)\nusing this:\n  b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u) =\n  (LEAST z. u < sf (z + 1))\n\ngoal (1 subgoal):\n 1. c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)", "by (simp add: c_sum_def)"], ["proof (state)\nthis:\n  c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_sum u = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u)) u (Suc u)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem c_sum_is_pr: \"c_sum \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "let ?f = \"\\<lambda> u z. (sgn1 (sf(z+1) - u))\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "have S1: \"(\\<lambda> u z. sgn1 ((sf(z+1) - u))) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u z. sgn1 (sf (z + 1) - u)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "define g where \"g = b_least2 ?f\""], ["proof (state)\nthis:\n  g = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u))\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "from g_def S1"], ["proof (chain)\npicking this:\n  g = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u))\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u)) \\<in> PrimRec2", "have \"g \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u))\n  (\\<lambda>u z. sgn1 (sf (z + 1) - u)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec2", "by (simp add: pr_b_least2)"], ["proof (state)\nthis:\n  g \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec2", "have S2: \"(\\<lambda> u. g u (Suc u)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. g u (Suc u)) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>u. g u (Suc u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "from g_def"], ["proof (chain)\npicking this:\n  g = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u))", "have \"c_sum = (\\<lambda> u. g u (Suc u))\""], ["proof (prove)\nusing this:\n  g = b_least2 (\\<lambda>u z. sgn1 (sf (z + 1) - u))\n\ngoal (1 subgoal):\n 1. c_sum = (\\<lambda>u. g u (Suc u))", "by (simp add: c_sum_as_b_least ext)"], ["proof (state)\nthis:\n  c_sum = (\\<lambda>u. g u (Suc u))\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "with S2"], ["proof (chain)\npicking this:\n  (\\<lambda>u. g u (Suc u)) \\<in> PrimRec1\n  c_sum = (\\<lambda>u. g u (Suc u))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>u. g u (Suc u)) \\<in> PrimRec1\n  c_sum = (\\<lambda>u. g u (Suc u))\n\ngoal (1 subgoal):\n 1. c_sum \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  c_sum \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem c_fst_is_pr [prec]: \"c_fst \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "have S1: \"(\\<lambda> u. c_fst u) = (\\<lambda> u. (u - sf (c_sum u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst = (\\<lambda>u. u - sf (c_sum u))", "by (simp add: c_fst_def ext)"], ["proof (state)\nthis:\n  c_fst = (\\<lambda>u. u - sf (c_sum u))\n\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "from c_sum_is_pr"], ["proof (chain)\npicking this:\n  c_sum \\<in> PrimRec1", "have \"(\\<lambda> u. (u - sf (c_sum u))) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  c_sum \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. u - sf (c_sum u)) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>u. u - sf (c_sum u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "with S1"], ["proof (chain)\npicking this:\n  c_fst = (\\<lambda>u. u - sf (c_sum u))\n  (\\<lambda>u. u - sf (c_sum u)) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst = (\\<lambda>u. u - sf (c_sum u))\n  (\\<lambda>u. u - sf (c_sum u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  c_fst \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem c_snd_is_pr [prec]: \"c_snd \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "have S1: \"c_snd = (\\<lambda> u. (c_sum u) - (c_fst u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd = (\\<lambda>u. c_sum u - c_fst u)", "by (simp add: c_snd_def ext)"], ["proof (state)\nthis:\n  c_snd = (\\<lambda>u. c_sum u - c_fst u)\n\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "from c_sum_is_pr c_fst_is_pr"], ["proof (chain)\npicking this:\n  c_sum \\<in> PrimRec1\n  c_fst \\<in> PrimRec1", "have S2: \"(\\<lambda> u. (c_sum u) - (c_fst u)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  c_sum \\<in> PrimRec1\n  c_fst \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. c_sum u - c_fst u) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>u. c_sum u - c_fst u) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "from S1 this"], ["proof (chain)\npicking this:\n  c_snd = (\\<lambda>u. c_sum u - c_fst u)\n  (\\<lambda>u. c_sum u - c_fst u) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_snd = (\\<lambda>u. c_sum u - c_fst u)\n  (\\<lambda>u. c_sum u - c_fst u) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  c_snd \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_1_to_2: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> x y. f (c_pair x y)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>x y. f (c_pair x y)) \\<in> PrimRec2", "by prec"], ["", "theorem pr_2_to_1: \"f \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> z. f (c_fst z) (c_snd z)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>z. f (c_fst z) (c_snd z)) \\<in> PrimRec1", "by prec"], ["", "definition \"pr_conv_1_to_2 = (\\<lambda> f x y. f (c_pair x y))\""], ["", "definition \"pr_conv_1_to_3 = (\\<lambda> f x y z. f (c_pair (c_pair x y) z))\""], ["", "definition \"pr_conv_2_to_1 = (\\<lambda> f x. f (c_fst x) (c_snd x))\""], ["", "definition \"pr_conv_3_to_1 = (\\<lambda> f x. f (c_fst (c_fst x)) (c_snd (c_fst x)) (c_snd x))\""], ["", "definition \"pr_conv_3_to_2 = (\\<lambda> f. pr_conv_1_to_2 (pr_conv_3_to_1 f))\""], ["", "definition \"pr_conv_2_to_3 = (\\<lambda> f. pr_conv_1_to_3 (pr_conv_2_to_1 f))\""], ["", "lemma [simp]: \"pr_conv_1_to_2 (pr_conv_2_to_1 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_1_to_2 (pr_conv_2_to_1 f) = f", "by(simp add: pr_conv_1_to_2_def pr_conv_2_to_1_def)"], ["", "lemma [simp]: \"pr_conv_2_to_1 (pr_conv_1_to_2 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (pr_conv_1_to_2 f) = f", "by(simp add: pr_conv_1_to_2_def pr_conv_2_to_1_def)"], ["", "lemma [simp]: \"pr_conv_1_to_3 (pr_conv_3_to_1 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_1_to_3 (pr_conv_3_to_1 f) = f", "by(simp add: pr_conv_1_to_3_def pr_conv_3_to_1_def)"], ["", "lemma [simp]: \"pr_conv_3_to_1 (pr_conv_1_to_3 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (pr_conv_1_to_3 f) = f", "by(simp add: pr_conv_1_to_3_def pr_conv_3_to_1_def)"], ["", "lemma [simp]: \"pr_conv_3_to_2 (pr_conv_2_to_3 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_2 (pr_conv_2_to_3 f) = f", "by(simp add: pr_conv_3_to_2_def pr_conv_2_to_3_def)"], ["", "lemma [simp]: \"pr_conv_2_to_3 (pr_conv_3_to_2 f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_3 (pr_conv_3_to_2 f) = f", "by(simp add: pr_conv_3_to_2_def pr_conv_2_to_3_def)"], ["", "lemma pr_conv_1_to_2_lm: \"f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_2 f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_2 f \\<in> PrimRec2", "by (simp add: pr_conv_1_to_2_def, prec)"], ["", "lemma pr_conv_1_to_3_lm: \"f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_3 f \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> pr_conv_1_to_3 f \\<in> PrimRec3", "by (simp add: pr_conv_1_to_3_def, prec)"], ["", "lemma pr_conv_2_to_1_lm: \"f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_1 f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_1 f \\<in> PrimRec1", "by (simp add: pr_conv_2_to_1_def, prec)"], ["", "lemma pr_conv_3_to_1_lm: \"f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_1 f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_1 f \\<in> PrimRec1", "by (simp add: pr_conv_3_to_1_def, prec)"], ["", "lemma pr_conv_3_to_2_lm: \"f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2", "assume \"f \\<in> PrimRec3\""], ["proof (state)\nthis:\n  f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec3", "have \"pr_conv_3_to_1 f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 f \\<in> PrimRec1", "by (rule pr_conv_3_to_1_lm)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3 \\<Longrightarrow> pr_conv_3_to_2 f \\<in> PrimRec2", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_2 f \\<in> PrimRec2", "by (simp add: pr_conv_3_to_2_def pr_conv_1_to_2_lm)"], ["proof (state)\nthis:\n  pr_conv_3_to_2 f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_conv_2_to_3_lm: \"f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3", "assume \"f \\<in> PrimRec2\""], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2", "have \"pr_conv_2_to_1 f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 f \\<in> PrimRec1", "by (rule pr_conv_2_to_1_lm)"], ["proof (state)\nthis:\n  pr_conv_2_to_1 f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2 \\<Longrightarrow> pr_conv_2_to_3 f \\<in> PrimRec3", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_2_to_1 f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_3 f \\<in> PrimRec3", "by (simp add: pr_conv_2_to_3_def pr_conv_1_to_3_lm)"], ["proof (state)\nthis:\n  pr_conv_2_to_3 f \\<in> PrimRec3\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem b_least2_scheme: \"\\<lbrakk> f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall> x. h x < g x; \\<forall> x. f x (h x) \\<noteq> 0; \\<forall> z x. z < h x \\<longrightarrow> f x z = 0 \\<rbrakk> \\<Longrightarrow>\n                            h \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "assume f_is_pr: \"f \\<in> PrimRec2\""], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "assume g_is_pr: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "assume h_lt_g: \"\\<forall> x. h x < g x\""], ["proof (state)\nthis:\n  \\<forall>x. h x < g x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "assume f_at_h_nz: \"\\<forall> x. f x (h x) \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<forall>x. f x (h x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "assume h_is_min: \"\\<forall> z x. z < h x \\<longrightarrow> f x z = 0\""], ["proof (state)\nthis:\n  \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "have h_def: \"h = (\\<lambda> x. b_least2 f x (g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h = (\\<lambda>x. b_least2 f x (g x))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. h x = b_least2 f x (g x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. h x = b_least2 f x (g x)", "show \"h x = b_least2 f x (g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "from f_at_h_nz"], ["proof (chain)\npicking this:\n  \\<forall>x. f x (h x) \\<noteq> 0", "have S1: \"b_least2 f x (g x) \\<le> h x\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x (h x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b_least2 f x (g x) \\<le> h x", "by (simp add: nz_impl_b_least2_le)"], ["proof (state)\nthis:\n  b_least2 f x (g x) \\<le> h x\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "from h_lt_g"], ["proof (chain)\npicking this:\n  \\<forall>x. h x < g x", "have \"h x < g x\""], ["proof (prove)\nusing this:\n  \\<forall>x. h x < g x\n\ngoal (1 subgoal):\n 1. h x < g x", "by auto"], ["proof (state)\nthis:\n  h x < g x\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "with S1"], ["proof (chain)\npicking this:\n  b_least2 f x (g x) \\<le> h x\n  h x < g x", "have \"b_least2 f x (g x) < g x\""], ["proof (prove)\nusing this:\n  b_least2 f x (g x) \\<le> h x\n  h x < g x\n\ngoal (1 subgoal):\n 1. b_least2 f x (g x) < g x", "by simp"], ["proof (state)\nthis:\n  b_least2 f x (g x) < g x\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "then"], ["proof (chain)\npicking this:\n  b_least2 f x (g x) < g x", "have S2: \"f x (b_least2 f x (g x)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b_least2 f x (g x) < g x\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x (g x)) \\<noteq> 0", "by (rule b_least2_less_impl_nz)"], ["proof (state)\nthis:\n  f x (b_least2 f x (g x)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "have S3: \"h x \\<le> b_least2 f x (g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h x \\<le> b_least2 f x (g x)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> h x \\<le> b_least2 f x (g x) \\<Longrightarrow> False", "assume \"\\<not> h x \\<le> b_least2 f x (g x)\""], ["proof (state)\nthis:\n  \\<not> h x \\<le> b_least2 f x (g x)\n\ngoal (1 subgoal):\n 1. \\<not> h x \\<le> b_least2 f x (g x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> h x \\<le> b_least2 f x (g x)", "have \"b_least2 f x (g x) < h x\""], ["proof (prove)\nusing this:\n  \\<not> h x \\<le> b_least2 f x (g x)\n\ngoal (1 subgoal):\n 1. b_least2 f x (g x) < h x", "by auto"], ["proof (state)\nthis:\n  b_least2 f x (g x) < h x\n\ngoal (1 subgoal):\n 1. \\<not> h x \\<le> b_least2 f x (g x) \\<Longrightarrow> False", "with h_is_min"], ["proof (chain)\npicking this:\n  \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\n  b_least2 f x (g x) < h x", "have \"f x (b_least2 f x (g x)) = 0\""], ["proof (prove)\nusing this:\n  \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\n  b_least2 f x (g x) < h x\n\ngoal (1 subgoal):\n 1. f x (b_least2 f x (g x)) = 0", "by simp"], ["proof (state)\nthis:\n  f x (b_least2 f x (g x)) = 0\n\ngoal (1 subgoal):\n 1. \\<not> h x \\<le> b_least2 f x (g x) \\<Longrightarrow> False", "with S2"], ["proof (chain)\npicking this:\n  f x (b_least2 f x (g x)) \\<noteq> 0\n  f x (b_least2 f x (g x)) = 0", "show False"], ["proof (prove)\nusing this:\n  f x (b_least2 f x (g x)) \\<noteq> 0\n  f x (b_least2 f x (g x)) = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h x \\<le> b_least2 f x (g x)\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "from S1 S3"], ["proof (chain)\npicking this:\n  b_least2 f x (g x) \\<le> h x\n  h x \\<le> b_least2 f x (g x)", "show ?thesis"], ["proof (prove)\nusing this:\n  b_least2 f x (g x) \\<le> h x\n  h x \\<le> b_least2 f x (g x)\n\ngoal (1 subgoal):\n 1. h x = b_least2 f x (g x)", "by auto"], ["proof (state)\nthis:\n  h x = b_least2 f x (g x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h x = b_least2 f x (g x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h = (\\<lambda>x. b_least2 f x (g x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "define f1 where \"f1 = b_least2 f\""], ["proof (state)\nthis:\n  f1 = b_least2 f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "from f_is_pr f1_def"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2\n  f1 = b_least2 f", "have f1_is_pr: \"f1 \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n  f1 = b_least2 f\n\ngoal (1 subgoal):\n 1. f1 \\<in> PrimRec2", "by (simp add: pr_b_least2)"], ["proof (state)\nthis:\n  f1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "with g_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  f1 \\<in> PrimRec2", "have \"(\\<lambda> x. f1 x (g x)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  f1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f1 x (g x)) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x. f1 x (g x)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec2; g \\<in> PrimRec1; \\<forall>x. h x < g x;\n     \\<forall>x. f x (h x) \\<noteq> 0;\n     \\<forall>z x. z < h x \\<longrightarrow> f x z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec1", "with h_def f1_def"], ["proof (chain)\npicking this:\n  h = (\\<lambda>x. b_least2 f x (g x))\n  f1 = b_least2 f\n  (\\<lambda>x. f1 x (g x)) \\<in> PrimRec1", "show \"h \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  h = (\\<lambda>x. b_least2 f x (g x))\n  f1 = b_least2 f\n  (\\<lambda>x. f1 x (g x)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  h \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem b_least2_scheme2: \"\\<lbrakk> f \\<in> PrimRec3; g \\<in> PrimRec2; \\<forall> x y. h x y < g x y; \\<forall> x y. f x y (h x y) \\<noteq> 0;\n                             \\<forall> z x y. z < h x y \\<longrightarrow> f x y z = 0 \\<rbrakk> \\<Longrightarrow>\n                             h \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "assume f_is_pr: \"f \\<in> PrimRec3\""], ["proof (state)\nthis:\n  f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "assume g_is_pr: \"g \\<in> PrimRec2\""], ["proof (state)\nthis:\n  g \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "assume h_lt_g: \"\\<forall> x y. h x y < g x y\""], ["proof (state)\nthis:\n  \\<forall>x y. h x y < g x y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "assume f_at_h_nz: \"\\<forall> x y. f x y (h x y) \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<forall>x y. f x y (h x y) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "assume h_is_min: \"\\<forall> z x y. z < h x y \\<longrightarrow> f x y z = 0\""], ["proof (state)\nthis:\n  \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "define f1 where \"f1 = pr_conv_3_to_2 f\""], ["proof (state)\nthis:\n  f1 = pr_conv_3_to_2 f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "define g1 where \"g1 = pr_conv_2_to_1 g\""], ["proof (state)\nthis:\n  g1 = pr_conv_2_to_1 g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "define h1 where \"h1 = pr_conv_2_to_1 h\""], ["proof (state)\nthis:\n  h1 = pr_conv_2_to_1 h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from f_is_pr f1_def"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec3\n  f1 = pr_conv_3_to_2 f", "have f1_is_pr: \"f1 \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec3\n  f1 = pr_conv_3_to_2 f\n\ngoal (1 subgoal):\n 1. f1 \\<in> PrimRec2", "by (simp add: pr_conv_3_to_2_lm)"], ["proof (state)\nthis:\n  f1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from g_is_pr g1_def"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec2\n  g1 = pr_conv_2_to_1 g", "have g1_is_pr: \"g1 \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec2\n  g1 = pr_conv_2_to_1 g\n\ngoal (1 subgoal):\n 1. g1 \\<in> PrimRec1", "by (simp add: pr_conv_2_to_1_lm)"], ["proof (state)\nthis:\n  g1 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from h_lt_g h1_def g1_def"], ["proof (chain)\npicking this:\n  \\<forall>x y. h x y < g x y\n  h1 = pr_conv_2_to_1 h\n  g1 = pr_conv_2_to_1 g", "have h1_lt_g1: \"\\<forall> x. h1 x < g1 x\""], ["proof (prove)\nusing this:\n  \\<forall>x y. h x y < g x y\n  h1 = pr_conv_2_to_1 h\n  g1 = pr_conv_2_to_1 g\n\ngoal (1 subgoal):\n 1. \\<forall>x. h1 x < g1 x", "by (simp add: pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  \\<forall>x. h1 x < g1 x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from f_at_h_nz f1_def h1_def"], ["proof (chain)\npicking this:\n  \\<forall>x y. f x y (h x y) \\<noteq> 0\n  f1 = pr_conv_3_to_2 f\n  h1 = pr_conv_2_to_1 h", "have f1_at_h1_nz: \"\\<forall> x. f1 x (h1 x) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>x y. f x y (h x y) \\<noteq> 0\n  f1 = pr_conv_3_to_2 f\n  h1 = pr_conv_2_to_1 h\n\ngoal (1 subgoal):\n 1. \\<forall>x. f1 x (h1 x) \\<noteq> 0", "by (simp add: pr_conv_2_to_1_def pr_conv_3_to_2_def pr_conv_3_to_1_def pr_conv_1_to_2_def)"], ["proof (state)\nthis:\n  \\<forall>x. f1 x (h1 x) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from h_is_min f1_def h1_def"], ["proof (chain)\npicking this:\n  \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\n  f1 = pr_conv_3_to_2 f\n  h1 = pr_conv_2_to_1 h", "have h1_is_min: \"\\<forall> z x. z < h1 x \\<longrightarrow> f1 x z = 0\""], ["proof (prove)\nusing this:\n  \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\n  f1 = pr_conv_3_to_2 f\n  h1 = pr_conv_2_to_1 h\n\ngoal (1 subgoal):\n 1. \\<forall>z x. z < h1 x \\<longrightarrow> f1 x z = 0", "by (simp add: pr_conv_2_to_1_def pr_conv_3_to_2_def pr_conv_3_to_1_def pr_conv_1_to_2_def)"], ["proof (state)\nthis:\n  \\<forall>z x. z < h1 x \\<longrightarrow> f1 x z = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from f1_is_pr g1_is_pr h1_lt_g1 f1_at_h1_nz h1_is_min"], ["proof (chain)\npicking this:\n  f1 \\<in> PrimRec2\n  g1 \\<in> PrimRec1\n  \\<forall>x. h1 x < g1 x\n  \\<forall>x. f1 x (h1 x) \\<noteq> 0\n  \\<forall>z x. z < h1 x \\<longrightarrow> f1 x z = 0", "have h1_is_pr: \"h1 \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f1 \\<in> PrimRec2\n  g1 \\<in> PrimRec1\n  \\<forall>x. h1 x < g1 x\n  \\<forall>x. f1 x (h1 x) \\<noteq> 0\n  \\<forall>z x. z < h1 x \\<longrightarrow> f1 x z = 0\n\ngoal (1 subgoal):\n 1. h1 \\<in> PrimRec1", "by (rule b_least2_scheme)"], ["proof (state)\nthis:\n  h1 \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "from h1_def"], ["proof (chain)\npicking this:\n  h1 = pr_conv_2_to_1 h", "have \"h = pr_conv_1_to_2 h1\""], ["proof (prove)\nusing this:\n  h1 = pr_conv_2_to_1 h\n\ngoal (1 subgoal):\n 1. h = pr_conv_1_to_2 h1", "by simp"], ["proof (state)\nthis:\n  h = pr_conv_1_to_2 h1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec3; g \\<in> PrimRec2;\n     \\<forall>x y. h x y < g x y; \\<forall>x y. f x y (h x y) \\<noteq> 0;\n     \\<forall>z x y. z < h x y \\<longrightarrow> f x y z = 0\\<rbrakk>\n    \\<Longrightarrow> h \\<in> PrimRec2", "with h1_is_pr"], ["proof (chain)\npicking this:\n  h1 \\<in> PrimRec1\n  h = pr_conv_1_to_2 h1", "show \"h \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  h1 \\<in> PrimRec1\n  h = pr_conv_1_to_2 h1\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2", "by (simp add: pr_conv_1_to_2_lm)"], ["proof (state)\nthis:\n  h \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem div_is_pr: \"(\\<lambda> a b. a div b) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "define f where \"f a b z = (sgn1 b) * (sgn1 (b*(z+1)-a)) + (sgn2 b)*(sgn2 z)\" for a b z"], ["proof (state)\nthis:\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "have f_is_pr: \"f \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec3", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b z. sgn1 b * sgn1 (b * (z + 1) - a) + sgn2 b * sgn2 z)\n    \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  f \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "define h where \"h a b = a div b\" for a b :: nat"], ["proof (state)\nthis:\n  h ?a ?b = ?a div ?b\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "define g where \"g a b = a + 1\" for a b :: nat"], ["proof (state)\nthis:\n  g ?a ?b = ?a + 1\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "have g_is_pr: \"g \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec2", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b. a + 1) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  g \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "have h_lt_g: \"\\<forall> a b. h a b < g a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b. h a b < g a b", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. h a b < g a b", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. h a b < g a b", "from h_def"], ["proof (chain)\npicking this:\n  h ?a ?b = ?a div ?b", "have \"h a b \\<le> a\""], ["proof (prove)\nusing this:\n  h ?a ?b = ?a div ?b\n\ngoal (1 subgoal):\n 1. h a b \\<le> a", "by simp"], ["proof (state)\nthis:\n  h a b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<And>a b. h a b < g a b", "also"], ["proof (state)\nthis:\n  h a b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<And>a b. h a b < g a b", "from g_def"], ["proof (chain)\npicking this:\n  g ?a ?b = ?a + 1", "have \"a < g a b\""], ["proof (prove)\nusing this:\n  g ?a ?b = ?a + 1\n\ngoal (1 subgoal):\n 1. a < g a b", "by simp"], ["proof (state)\nthis:\n  a < g a b\n\ngoal (1 subgoal):\n 1. \\<And>a b. h a b < g a b", "ultimately"], ["proof (chain)\npicking this:\n  h a b \\<le> a\n  a < g a b", "show \"h a b < g a b\""], ["proof (prove)\nusing this:\n  h a b \\<le> a\n  a < g a b\n\ngoal (1 subgoal):\n 1. h a b < g a b", "by simp"], ["proof (state)\nthis:\n  h a b < g a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a b. h a b < g a b\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "have f_at_h_nz: \"\\<forall> a b. f a b (h a b) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b. f a b (h a b) \\<noteq> 0", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. f a b (h a b) \\<noteq> 0", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. f a b (h a b) \\<noteq> 0", "show \"f a b (h a b) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a b (h a b) \\<noteq> 0", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0\n 2. \\<not> ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "assume A: \"b = 0\""], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0\n 2. \\<not> ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "with h_def"], ["proof (chain)\npicking this:\n  h ?a ?b = ?a div ?b\n  b = 0", "have \"h a b = 0\""], ["proof (prove)\nusing this:\n  h ?a ?b = ?a div ?b\n  b = 0\n\ngoal (1 subgoal):\n 1. h a b = 0", "by simp"], ["proof (state)\nthis:\n  h a b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0\n 2. \\<not> ?P \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "with f_def A"], ["proof (chain)\npicking this:\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n  b = 0\n  h a b = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n  b = 0\n  h a b = 0\n\ngoal (1 subgoal):\n 1. f a b (h a b) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  f a b (h a b) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "assume A: \"b \\<noteq> 0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  b \\<noteq> 0", "have S1: \"b > 0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b", "by auto"], ["proof (state)\nthis:\n  0 < b\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "from A f_def"], ["proof (chain)\npicking this:\n  b \\<noteq> 0\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z", "have S2: \"f a b (h a b) = sgn1 (b * (h a b + 1) - a)\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n\ngoal (1 subgoal):\n 1. f a b (h a b) = sgn1 (b * (h a b + 1) - a)", "by simp"], ["proof (state)\nthis:\n  f a b (h a b) = sgn1 (b * (h a b + 1) - a)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  f a b (h a b) = sgn1 (b * (h a b + 1) - a)", "have \"?thesis = (sgn1(b * (h a b + 1) - a) \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  f a b (h a b) = sgn1 (b * (h a b + 1) - a)\n\ngoal (1 subgoal):\n 1. (f a b (h a b) \\<noteq> 0) = (sgn1 (b * (h a b + 1) - a) \\<noteq> 0)", "by auto"], ["proof (state)\nthis:\n  (f a b (h a b) \\<noteq> 0) = (sgn1 (b * (h a b + 1) - a) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "also"], ["proof (state)\nthis:\n  (f a b (h a b) \\<noteq> 0) = (sgn1 (b * (h a b + 1) - a) \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "have \"\\<dots> = (b * (h a b + 1) - a > 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn1 (b * (h a b + 1) - a) \\<noteq> 0) = (0 < b * (h a b + 1) - a)", "by (rule sgn1_nz_eq_arg_pos)"], ["proof (state)\nthis:\n  (sgn1 (b * (h a b + 1) - a) \\<noteq> 0) = (0 < b * (h a b + 1) - a)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "also"], ["proof (state)\nthis:\n  (sgn1 (b * (h a b + 1) - a) \\<noteq> 0) = (0 < b * (h a b + 1) - a)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "have \"\\<dots> = (a < b * (h a b + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < b * (h a b + 1) - a) = (a < b * (h a b + 1))", "by auto"], ["proof (state)\nthis:\n  (0 < b * (h a b + 1) - a) = (a < b * (h a b + 1))\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "also"], ["proof (state)\nthis:\n  (0 < b * (h a b + 1) - a) = (a < b * (h a b + 1))\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "have \"\\<dots> = (a < b * (h a b) + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b * (h a b + 1)) = (a < b * h a b + b)", "by auto"], ["proof (state)\nthis:\n  (a < b * (h a b + 1)) = (a < b * h a b + b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "also"], ["proof (state)\nthis:\n  (a < b * (h a b + 1)) = (a < b * h a b + b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "from h_def"], ["proof (chain)\npicking this:\n  h ?a ?b = ?a div ?b", "have \"\\<dots> = (a < b * (a div b) + b)\""], ["proof (prove)\nusing this:\n  h ?a ?b = ?a div ?b\n\ngoal (1 subgoal):\n 1. (a < b * h a b + b) = (a < b * (a div b) + b)", "by simp"], ["proof (state)\nthis:\n  (a < b * h a b + b) = (a < b * (a div b) + b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "finally"], ["proof (chain)\npicking this:\n  (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)", "have S3: \"?thesis = (a < b * (a div b) + b)\""], ["proof (prove)\nusing this:\n  (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)\n\ngoal (1 subgoal):\n 1. (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)", "by auto"], ["proof (state)\nthis:\n  (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "have S4: \"a < b * (a div b) + b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "from S1"], ["proof (chain)\npicking this:\n  0 < b", "have S4_1: \"a mod b < b\""], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. a mod b < b", "by (rule mod_less_divisor)"], ["proof (state)\nthis:\n  a mod b < b\n\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "also"], ["proof (state)\nthis:\n  a mod b < b\n\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "have S4_2: \"b * (a div b) + a mod b = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * (a div b) + a mod b = a", "by (rule mult_div_mod_eq)"], ["proof (state)\nthis:\n  b * (a div b) + a mod b = a\n\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "from S4_1"], ["proof (chain)\npicking this:\n  a mod b < b", "have S4_3: \"b * (a div b) + a mod b < b * (a div b) + b\""], ["proof (prove)\nusing this:\n  a mod b < b\n\ngoal (1 subgoal):\n 1. b * (a div b) + a mod b < b * (a div b) + b", "by arith"], ["proof (state)\nthis:\n  b * (a div b) + a mod b < b * (a div b) + b\n\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "from S4_2 S4_3"], ["proof (chain)\npicking this:\n  b * (a div b) + a mod b = a\n  b * (a div b) + a mod b < b * (a div b) + b", "show ?thesis"], ["proof (prove)\nusing this:\n  b * (a div b) + a mod b = a\n  b * (a div b) + a mod b < b * (a div b) + b\n\ngoal (1 subgoal):\n 1. a < b * (a div b) + b", "by auto"], ["proof (state)\nthis:\n  a < b * (a div b) + b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a < b * (a div b) + b\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> f a b (h a b) \\<noteq> 0", "from S3 S4"], ["proof (chain)\npicking this:\n  (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)\n  a < b * (a div b) + b", "show ?thesis"], ["proof (prove)\nusing this:\n  (f a b (h a b) \\<noteq> 0) = (a < b * (a div b) + b)\n  a < b * (a div b) + b\n\ngoal (1 subgoal):\n 1. f a b (h a b) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  f a b (h a b) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f a b (h a b) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a b. f a b (h a b) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "have h_is_min: \"\\<forall> z a b. z < h a b \\<longrightarrow> f a b z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z a b. z < h a b \\<longrightarrow> f a b z = 0", "proof (rule allI, rule allI, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z a b. z < h a b \\<Longrightarrow> f a b z = 0", "fix a b z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z a b. z < h a b \\<Longrightarrow> f a b z = 0", "assume A: \"z < h a b\""], ["proof (state)\nthis:\n  z < h a b\n\ngoal (1 subgoal):\n 1. \\<And>z a b. z < h a b \\<Longrightarrow> f a b z = 0", "show \"f a b z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a b z = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f a b z = 0", "from A h_def"], ["proof (chain)\npicking this:\n  z < h a b\n  h ?a ?b = ?a div ?b", "have S1: \"z < a div b\""], ["proof (prove)\nusing this:\n  z < h a b\n  h ?a ?b = ?a div ?b\n\ngoal (1 subgoal):\n 1. z < a div b", "by simp"], ["proof (state)\nthis:\n  z < a div b\n\ngoal (1 subgoal):\n 1. f a b z = 0", "then"], ["proof (chain)\npicking this:\n  z < a div b", "have S2: \"a div b > 0\""], ["proof (prove)\nusing this:\n  z < a div b\n\ngoal (1 subgoal):\n 1. 0 < a div b", "by simp"], ["proof (state)\nthis:\n  0 < a div b\n\ngoal (1 subgoal):\n 1. f a b z = 0", "have S3: \"b \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> 0 \\<Longrightarrow> False", "assume \"\\<not> b \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<not> b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> b \\<noteq> 0", "have \"b = 0\""], ["proof (prove)\nusing this:\n  \\<not> b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b = 0", "by auto"], ["proof (state)\nthis:\n  b = 0\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b = 0", "have \"a div b = 0\""], ["proof (prove)\nusing this:\n  b = 0\n\ngoal (1 subgoal):\n 1. a div b = 0", "by auto"], ["proof (state)\nthis:\n  a div b = 0\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> 0 \\<Longrightarrow> False", "with S2"], ["proof (chain)\npicking this:\n  0 < a div b\n  a div b = 0", "show False"], ["proof (prove)\nusing this:\n  0 < a div b\n  a div b = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f a b z = 0", "from S3"], ["proof (chain)\npicking this:\n  b \\<noteq> 0", "have b_pos: \"0 < b\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b", "by auto"], ["proof (state)\nthis:\n  0 < b\n\ngoal (1 subgoal):\n 1. f a b z = 0", "from S1"], ["proof (chain)\npicking this:\n  z < a div b", "have S4: \"z+1 \\<le> a div b\""], ["proof (prove)\nusing this:\n  z < a div b\n\ngoal (1 subgoal):\n 1. z + 1 \\<le> a div b", "by auto"], ["proof (state)\nthis:\n  z + 1 \\<le> a div b\n\ngoal (1 subgoal):\n 1. f a b z = 0", "from b_pos"], ["proof (chain)\npicking this:\n  0 < b", "have \"(b * (z+1) \\<le> b * (a div b)) = (z+1 \\<le> a div b)\""], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. (b * (z + 1) \\<le> b * (a div b)) = (z + 1 \\<le> a div b)", "by (rule nat_mult_le_cancel1)"], ["proof (state)\nthis:\n  (b * (z + 1) \\<le> b * (a div b)) = (z + 1 \\<le> a div b)\n\ngoal (1 subgoal):\n 1. f a b z = 0", "with S4"], ["proof (chain)\npicking this:\n  z + 1 \\<le> a div b\n  (b * (z + 1) \\<le> b * (a div b)) = (z + 1 \\<le> a div b)", "have S5: \"b*(z+1) \\<le> b*(a div b)\""], ["proof (prove)\nusing this:\n  z + 1 \\<le> a div b\n  (b * (z + 1) \\<le> b * (a div b)) = (z + 1 \\<le> a div b)\n\ngoal (1 subgoal):\n 1. b * (z + 1) \\<le> b * (a div b)", "by simp"], ["proof (state)\nthis:\n  b * (z + 1) \\<le> b * (a div b)\n\ngoal (1 subgoal):\n 1. f a b z = 0", "moreover"], ["proof (state)\nthis:\n  b * (z + 1) \\<le> b * (a div b)\n\ngoal (1 subgoal):\n 1. f a b z = 0", "have \"b*(a div b) \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "have \"b*(a div b) + (a mod b) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b * (a div b) + a mod b = a", "by (rule mult_div_mod_eq)"], ["proof (state)\nthis:\n  b * (a div b) + a mod b = a\n\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "moreover"], ["proof (state)\nthis:\n  b * (a div b) + a mod b = a\n\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "have \"0 \\<le> a mod b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a mod b", "by auto"], ["proof (state)\nthis:\n  0 \\<le> a mod b\n\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "ultimately"], ["proof (chain)\npicking this:\n  b * (a div b) + a mod b = a\n  0 \\<le> a mod b", "show ?thesis"], ["proof (prove)\nusing this:\n  b * (a div b) + a mod b = a\n  0 \\<le> a mod b\n\ngoal (1 subgoal):\n 1. b * (a div b) \\<le> a", "by arith"], ["proof (state)\nthis:\n  b * (a div b) \\<le> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b * (a div b) \\<le> a\n\ngoal (1 subgoal):\n 1. f a b z = 0", "ultimately"], ["proof (chain)\npicking this:\n  b * (z + 1) \\<le> b * (a div b)\n  b * (a div b) \\<le> a", "have S6: \"b*(z+1) \\<le> a\""], ["proof (prove)\nusing this:\n  b * (z + 1) \\<le> b * (a div b)\n  b * (a div b) \\<le> a\n\ngoal (1 subgoal):\n 1. b * (z + 1) \\<le> a", "by (simp add: minus_mod_eq_mult_div [symmetric])"], ["proof (state)\nthis:\n  b * (z + 1) \\<le> a\n\ngoal (1 subgoal):\n 1. f a b z = 0", "then"], ["proof (chain)\npicking this:\n  b * (z + 1) \\<le> a", "have \"b*(z+1) - a = 0\""], ["proof (prove)\nusing this:\n  b * (z + 1) \\<le> a\n\ngoal (1 subgoal):\n 1. b * (z + 1) - a = 0", "by auto"], ["proof (state)\nthis:\n  b * (z + 1) - a = 0\n\ngoal (1 subgoal):\n 1. f a b z = 0", "with S3 f_def"], ["proof (chain)\npicking this:\n  b \\<noteq> 0\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n  b * (z + 1) - a = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  f ?a ?b ?z = sgn1 ?b * sgn1 (?b * (?z + 1) - ?a) + sgn2 ?b * sgn2 ?z\n  b * (z + 1) - a = 0\n\ngoal (1 subgoal):\n 1. f a b z = 0", "by simp"], ["proof (state)\nthis:\n  f a b z = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f a b z = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z a b. z < h a b \\<longrightarrow> f a b z = 0\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "from f_is_pr g_is_pr h_lt_g f_at_h_nz h_is_min"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec3\n  g \\<in> PrimRec2\n  \\<forall>a b. h a b < g a b\n  \\<forall>a b. f a b (h a b) \\<noteq> 0\n  \\<forall>z a b. z < h a b \\<longrightarrow> f a b z = 0", "have h_is_pr: \"h \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec3\n  g \\<in> PrimRec2\n  \\<forall>a b. h a b < g a b\n  \\<forall>a b. f a b (h a b) \\<noteq> 0\n  \\<forall>z a b. z < h a b \\<longrightarrow> f a b z = 0\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2", "by (rule b_least2_scheme2)"], ["proof (state)\nthis:\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "with h_def [abs_def]"], ["proof (chain)\npicking this:\n  h \\<equiv> (div)\n  h \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  h \\<equiv> (div)\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (div) \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  (div) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mod_is_pr: \"(\\<lambda> a b. a mod b) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "have \"(\\<lambda> (a::nat) (b::nat). a mod b) = (\\<lambda> a b. a - (a div b) * b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mod) = (\\<lambda>a b. a - a div b * b)", "proof (rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a mod b = a - a div b * b", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a mod b = a - a div b * b", "show \"(a::nat) mod b = a - (a div b) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod b = a - a div b * b", "by (rule minus_div_mult_eq_mod [symmetric])"], ["proof (state)\nthis:\n  a mod b = a - a div b * b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (mod) = (\\<lambda>a b. a - a div b * b)\n\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "also"], ["proof (state)\nthis:\n  (mod) = (\\<lambda>a b. a - a div b * b)\n\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "from div_is_pr"], ["proof (chain)\npicking this:\n  (div) \\<in> PrimRec2", "have \"(\\<lambda> a b. a - (a div b) * b) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (div) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b. a - a div b * b) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>a b. a - a div b * b) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "ultimately"], ["proof (chain)\npicking this:\n  (mod) = (\\<lambda>a b. a - a div b * b)\n  (\\<lambda>a b. a - a div b * b) \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  (mod) = (\\<lambda>a b. a - a div b * b)\n  (\\<lambda>a b. a - a div b * b) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (mod) \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  (mod) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_rec_last_scheme: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall> x. f x 0 = g x; \\<forall> x y. f x (Suc y) = h x (f x y) y \\<rbrakk> \\<Longrightarrow> f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume g_is_pr: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume h_is_pr: \"h \\<in> PrimRec3\""], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume f_at_0: \"\\<forall> x. f x 0 = g x\""], ["proof (state)\nthis:\n  \\<forall>x. f x 0 = g x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "assume f_at_Suc: \"\\<forall> x y. f x (Suc y) = h x (f x y) y\""], ["proof (state)\nthis:\n  \\<forall>x y. f x (Suc y) = h x (f x y) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "from f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  \\<forall>x. f x 0 = g x\n  \\<forall>x y. f x (Suc y) = h x (f x y) y", "have \"\\<And> x y. f x y = PrimRecOp_last g h x y\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x 0 = g x\n  \\<forall>x y. f x (Suc y) = h x (f x y) y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x y = PrimRecOp_last g h x y", "by (induct_tac y, simp_all)"], ["proof (state)\nthis:\n  f ?x ?y = PrimRecOp_last g h ?x ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  f ?x ?y = PrimRecOp_last g h ?x ?y", "have \"f = PrimRecOp_last g h\""], ["proof (prove)\nusing this:\n  f ?x ?y = PrimRecOp_last g h ?x ?y\n\ngoal (1 subgoal):\n 1. f = PrimRecOp_last g h", "by (simp add: ext)"], ["proof (state)\nthis:\n  f = PrimRecOp_last g h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec3; \\<forall>x. f x 0 = g x;\n     \\<forall>x y. f x (Suc y) = h x (f x y) y\\<rbrakk>\n    \\<Longrightarrow> f \\<in> PrimRec2", "with g_is_pr h_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  f = PrimRecOp_last g h", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  f = PrimRecOp_last g h\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "by (simp add: pr_rec_last)"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem power_is_pr: \"(\\<lambda> (x::nat) (n::nat). x ^ n) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "define g :: \"nat \\<Rightarrow> nat\" where \"g x = 1\" for x"], ["proof (state)\nthis:\n  g ?x = 1\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "define h where \"h a b c = a * b\" for a b c :: nat"], ["proof (state)\nthis:\n  h ?a ?b ?c = ?a * ?b\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "have h_is_pr: \"h \\<in> PrimRec3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> PrimRec3", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b c. a * b) \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "let ?f = \"\\<lambda> (x::nat) (n::nat). x ^ n\""], ["proof (state)\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "have f_at_0: \"\\<forall> x. ?f x 0 = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x ^ 0 = g x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x ^ 0 = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x ^ 0 = g x", "show \"x ^ 0 = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ 0 = g x", "by (simp add: g_def)"], ["proof (state)\nthis:\n  x ^ 0 = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. x ^ 0 = g x\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "have f_at_Suc: \"\\<forall> x y. ?f x (Suc y) = h x (?f x y) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x ^ Suc y = h x (x ^ y) y", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x ^ Suc y = h x (x ^ y) y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x ^ Suc y = h x (x ^ y) y", "show \"?f x (Suc y) = h x (?f x y) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ Suc y = h x (x ^ y) y", "by (simp add: h_def)"], ["proof (state)\nthis:\n  x ^ Suc y = h x (x ^ y) y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. x ^ Suc y = h x (x ^ y) y\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "from g_is_pr h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. x ^ 0 = g x\n  \\<forall>x y. x ^ Suc y = h x (x ^ y) y", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. x ^ 0 = g x\n  \\<forall>x y. x ^ Suc y = h x (x ^ y) y\n\ngoal (1 subgoal):\n 1. (^) \\<in> PrimRec2", "by (rule pr_rec_last_scheme)"], ["proof (state)\nthis:\n  (^) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}