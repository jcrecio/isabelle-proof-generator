{"file_name": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I/PRecUnGr.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I", "problem_names": ["lemma pr_gr_at_0: \"pr_gr 0 = 0\"", "lemma pr_gr_at_Suc: \"pr_gr (Suc x) = g_step (pr_gr x) (c_fst x)\"", "theorem univ_is_not_pr: \"univ_for_pr \\<notin> PrimRec1\"", "lemma c_is_sub_fun_lm_1: \"\\<lbrakk> c_is_sub_fun ls f; c_assoc_have_key ls x = 0 \\<rbrakk>  \\<Longrightarrow> c_assoc_value ls x = f x\"", "lemma c_is_sub_fun_lm_2: \"c_is_sub_fun ls f \\<Longrightarrow> c_is_sub_fun (c_cons (c_pair x (f x)) ls) f\"", "lemma mod7_lm: \"(n::nat) mod 7 = 0 \\<or>\n                (n::nat) mod 7 = 1 \\<or>\n                (n::nat) mod 7 = 2 \\<or>\n                (n::nat) mod 7 = 3 \\<or>\n                (n::nat) mod 7 = 4 \\<or>\n                (n::nat) mod 7 = 5 \\<or>\n                (n::nat) mod 7 = 6\"", "lemma nat_to_sch_at_pos: \"x > 0 \\<Longrightarrow> nat_to_sch x = (let u=(c_fst x) mod 7; v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\"", "lemma nat_to_sch_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_sch n = Base_zero\"", "lemma loc_lm_1: \"c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> n > 0\"", "lemma loc_lm_2: \"c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\"", "lemma nat_to_sch_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc\"", "lemma nat_to_sch_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst\"", "lemma nat_to_sch_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd\"", "lemma nat_to_sch_4: \"c_fst n mod 7 = 4 \\<Longrightarrow> nat_to_sch n = Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\"", "lemma nat_to_sch_5: \"c_fst n mod 7 = 5 \\<Longrightarrow> nat_to_sch n = Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\"", "lemma nat_to_sch_6: \"c_fst n mod 7 = 6 \\<Longrightarrow> nat_to_sch n = Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\"", "lemma nat_to_pr_lm_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0\"", "lemma nat_to_pr_lm_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x\"", "lemma nat_to_pr_lm_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x\"", "lemma nat_to_pr_lm_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x\"", "lemma nat_to_pr_lm_4: \"c_fst n mod 7 = 4 \\<Longrightarrow> nat_to_pr n x = (nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x))\"", "lemma nat_to_pr_lm_5: \"c_fst n mod 7 = 5 \\<Longrightarrow> nat_to_pr n x = (c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n)))) x\"", "lemma nat_to_pr_lm_6: \"c_fst n mod 7 = 6 \\<Longrightarrow> nat_to_pr n x = (UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n)))) x\"", "lemma univ_for_pr_lm_0: \"c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0\"", "lemma univ_for_pr_lm_1: \"c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow> univ_for_pr key = Suc (c_snd key)\"", "lemma univ_for_pr_lm_2: \"c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow> univ_for_pr key = c_fst (c_snd key)\"", "lemma univ_for_pr_lm_3: \"c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow> univ_for_pr key = c_snd (c_snd key)\"", "lemma univ_for_pr_lm_4: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> univ_for_pr key = (nat_to_pr (c_fst (c_snd (c_fst key))) (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key)))\"", "lemma univ_for_pr_lm_4_1: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> univ_for_pr key = univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\"", "lemma univ_for_pr_lm_5: \"c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow> univ_for_pr key = c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))) (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\"", "lemma univ_for_pr_lm_6_1: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))\"", "lemma univ_for_pr_lm_6_2: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr\n            (c_pair (c_snd (c_snd (c_fst key)))\n              (c_pair (c_pair u (univ_for_pr (c_pair (c_fst key) (c_pair u (c_snd (c_snd key)))))) (c_snd (c_snd key))))\"", "lemma univ_for_pr_lm_6_3: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr\n            (c_pair (c_snd (c_snd (c_fst key)))\n              (c_pair (c_pair (c_fst (c_snd key) - 1) (univ_for_pr (c_pair (c_fst key) (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))))) (c_snd (c_snd key))))\"", "lemma g_comp_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr; g_comp ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\"", "lemma g_comp_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr\"", "lemma g_pair_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr; g_pair ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\"", "lemma g_pair_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr\"", "lemma g_rec_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr; g_rec ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\"", "lemma g_rec_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr\"", "lemma g_step_lm_0: \"c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> g_step ls key = c_cons (c_pair key 0) ls\"", "lemma g_step_lm_1: \"c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\"", "lemma g_step_lm_2: \"c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\"", "lemma g_step_lm_3: \"c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\"", "lemma g_step_lm_4: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> g_step ls key = g_comp ls key\"", "lemma g_step_lm_5: \"c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow> g_step ls key = g_pair ls key\"", "lemma g_step_lm_6: \"c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow> g_step ls key = g_rec ls key\"", "lemma g_step_lm_7: \"c_is_sub_fun ls univ_for_pr \\<Longrightarrow> c_is_sub_fun (g_step ls key) univ_for_pr\"", "theorem pr_gr_1: \"c_is_sub_fun (pr_gr x) univ_for_pr\"", "lemma comp_next: \"g_comp ls key = ls \\<or> c_tl (g_comp ls key) = ls\"", "lemma pair_next: \"g_pair ls key = ls \\<or> c_tl (g_pair ls key) = ls\"", "lemma rec_next: \"g_rec ls key = ls \\<or> c_tl (g_rec ls key) = ls\"", "lemma step_next: \"g_step ls key = ls \\<or> c_tl (g_step ls key) = ls\"", "lemma lm1: \"pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\"", "lemma c_assoc_have_key_pos: \"c_assoc_have_key ls x = 0 \\<Longrightarrow> ls > 0\"", "lemma lm2: \"c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow> c_assoc_have_key ls key = 0\"", "lemma lm3: \"c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow> c_assoc_have_key (pr_gr (Suc x)) key = 0\"", "lemma lm4: \"\\<lbrakk> c_assoc_have_key (pr_gr x) key = 0; 0 \\<le> y\\<rbrakk> \\<Longrightarrow> c_assoc_have_key (pr_gr (x+y)) key = 0\"", "lemma lm5: \"\\<lbrakk> c_assoc_have_key (pr_gr x) key = 0; x \\<le> y \\<rbrakk> \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0\"", "lemma loc_upb_lm_1: \"n = 0 \\<Longrightarrow> (c_fst n) mod 7 = 0\"", "lemma loc_upb_lm_2: \"(c_fst n) mod 7 > 1 \\<Longrightarrow> c_snd n < n\"", "lemma loc_upb_lm_2_0: \"(c_fst n) mod 7 = 4 \\<longrightarrow> c_fst (c_snd n) < n\"", "lemma loc_upb_lm_2_2: \"(c_fst n) mod 7 = 4 \\<longrightarrow> c_snd (c_snd n) < n\"", "lemma loc_upb_lm_2_3: \"(c_fst n) mod 7 = 5 \\<longrightarrow> c_fst (c_snd n) < n\"", "lemma loc_upb_lm_2_4: \"(c_fst n) mod 7 = 5 \\<longrightarrow> c_snd (c_snd n) < n\"", "lemma loc_upb_lm_2_5: \"(c_fst n) mod 7 = 6 \\<longrightarrow> c_fst (c_snd n) < n\"", "lemma loc_upb_lm_2_6: \"(c_fst n) mod 7 = 6 \\<longrightarrow> c_snd (c_snd n) < n\"", "lemma loc_upb_lm_2_7: \"\\<lbrakk>y2 = y1 - (1::nat); 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk> \\<Longrightarrow> c_pair y2 x1 < x\"", "lemma wf_lex_p: \"wf(lex_p)\"", "lemma lex_p_eq: \"((n',x'), (n,x)) \\<in> lex_p = (n'<n \\<or> n'=n \\<and> x'<x) \"", "lemma loc_upb_lex_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_lex_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_lex_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_lex_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_lex_4: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 4\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_lex_5: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 5\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma loc_upb_6_z: \"\\<lbrakk>c_fst n mod 7 =6; c_fst x = 0\\<rbrakk> \\<Longrightarrow>\n  loc_upb n x = c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1\"", "lemma loc_upb_6: \"\\<lbrakk>c_fst n mod 7 =6; c_fst x \\<noteq> 0\\<rbrakk> \\<Longrightarrow> loc_upb n x = (\n                              let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n                              y2 = y1 - 1;\n                              t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1))) (c_pair n (c_pair y2 x1));\n                              t2 = c_pair (c_pair y2 t1) x1 in\n                                c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + (loc_upb m2 t2)) + 1)\"", "lemma loc_upb_lex_6: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 6\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma wf_upb_step_0: \n  \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\\<rbrakk> \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "lemma wf_upb_step: \n  assumes A1: \"\\<And> p2. (p2, p1) \\<in> lex_p \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2))) (c_pair (fst p2) (snd p2)) = 0\"\n  shows \"c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1))) (c_pair (fst p1) (snd p1)) = 0\"", "theorem loc_upb_main: \"c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\"", "theorem pr_gr_value: \"c_assoc_value (pr_gr (loc_upb n x)) (c_pair n x) = univ_for_pr (c_pair n x)\"", "theorem g_comp_is_pr: \"g_comp \\<in> PrimRec2\"", "theorem g_pair_is_pr: \"g_pair \\<in> PrimRec2\"", "theorem g_rec_is_pr: \"g_rec \\<in> PrimRec2\"", "theorem g_step_is_pr: \"g_step \\<in> PrimRec2\"", "theorem pr_gr_is_pr: \"pr_gr \\<in> PrimRec1\""], "translations": [["", "lemma pr_gr_at_0: \"pr_gr 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr 0 = 0", "by (simp add: pr_gr_def)"], ["", "lemma pr_gr_at_Suc: \"pr_gr (Suc x) = g_step (pr_gr x) (c_fst x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr (Suc x) = g_step (pr_gr x) (c_fst x)", "by (simp add: pr_gr_def)"], ["", "definition\n  univ_for_pr :: \"nat \\<Rightarrow> nat\" where\n  \"univ_for_pr = pr_conv_2_to_1 nat_to_pr\""], ["", "theorem univ_is_not_pr: \"univ_for_pr \\<notin> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr \\<notin> PrimRec1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "assume \"\\<not> univ_for_pr \\<notin> PrimRec1\""], ["proof (state)\nthis:\n  \\<not> univ_for_pr \\<notin> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> univ_for_pr \\<notin> PrimRec1", "have A1: \"univ_for_pr \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  \\<not> univ_for_pr \\<notin> PrimRec1\n\ngoal (1 subgoal):\n 1. univ_for_pr \\<in> PrimRec1", "by simp"], ["proof (state)\nthis:\n  univ_for_pr \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "let ?f = \"\\<lambda> n. univ_for_pr (c_pair n n) + 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "let ?n0 = \"index_of_pr ?f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "from A1"], ["proof (chain)\npicking this:\n  univ_for_pr \\<in> PrimRec1", "have S1: \"?f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  univ_for_pr \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. univ_for_pr (c_pair n n) + 1) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1) \\<in> PrimRec1", "have S2: \"nat_to_pr ?n0 = ?f\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n    (\\<lambda>n. univ_for_pr (c_pair n n) + 1)", "by (rule index_of_pr_is_real)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1)\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1)", "have S3: \"nat_to_pr ?n0 ?n0 = ?f ?n0\""], ["proof (prove)\nusing this:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  (\\<lambda>n. univ_for_pr (c_pair n n) + 1)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n    univ_for_pr\n     (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n       (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n    1", "by simp"], ["proof (state)\nthis:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n   (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "have S4: \"?f ?n0 = univ_for_pr (c_pair ?n0 ?n0) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr\n     (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n       (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n    1 =\n    univ_for_pr\n     (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n       (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n    1", "by simp"], ["proof (state)\nthis:\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1 =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1\n\ngoal (1 subgoal):\n 1. \\<not> univ_for_pr \\<notin> PrimRec1 \\<Longrightarrow> False", "from S3 S4"], ["proof (chain)\npicking this:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n   (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1 =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1", "show False"], ["proof (prove)\nusing this:\n  nat_to_pr (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n   (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1)) =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1 =\n  univ_for_pr\n   (c_pair (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))\n     (index_of_pr (\\<lambda>n. univ_for_pr (c_pair n n) + 1))) +\n  1\n\ngoal (1 subgoal):\n 1. False", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_is_sub_fun :: \"nat \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n  \"c_is_sub_fun ls f \\<longleftrightarrow> (\\<forall> x. c_assoc_have_key ls x = 0 \\<longrightarrow> c_assoc_value ls x = f x)\""], ["", "lemma c_is_sub_fun_lm_1: \"\\<lbrakk> c_is_sub_fun ls f; c_assoc_have_key ls x = 0 \\<rbrakk>  \\<Longrightarrow> c_assoc_value ls x = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_is_sub_fun ls f; c_assoc_have_key ls x = 0\\<rbrakk>\n    \\<Longrightarrow> c_assoc_value ls x = f x", "apply(unfold c_is_sub_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                c_assoc_have_key ls x = 0 \\<longrightarrow>\n                c_assoc_value ls x = f x;\n     c_assoc_have_key ls x = 0\\<rbrakk>\n    \\<Longrightarrow> c_assoc_value ls x = f x", "apply(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma c_is_sub_fun_lm_2: \"c_is_sub_fun ls f \\<Longrightarrow> c_is_sub_fun (c_cons (c_pair x (f x)) ls) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls f \\<Longrightarrow>\n    c_is_sub_fun (c_cons (c_pair x (f x)) ls) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls f \\<Longrightarrow>\n    c_is_sub_fun (c_cons (c_pair x (f x)) ls) f", "assume A1: \"c_is_sub_fun ls f\""], ["proof (state)\nthis:\n  c_is_sub_fun ls f\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls f \\<Longrightarrow>\n    c_is_sub_fun (c_cons (c_pair x (f x)) ls) f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (c_cons (c_pair x (f x)) ls) f", "proof (unfold c_is_sub_fun_def, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa =\n       0 \\<Longrightarrow>\n       c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "fix xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa =\n       0 \\<Longrightarrow>\n       c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "assume A2: \"c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = 0\""], ["proof (state)\nthis:\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = 0\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa =\n       0 \\<Longrightarrow>\n       c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "show \"c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "assume C1: \"xa = x\""], ["proof (state)\nthis:\n  xa = x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "then"], ["proof (chain)\npicking this:\n  xa = x", "show \"c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\""], ["proof (prove)\nusing this:\n  xa = x\n\ngoal (1 subgoal):\n 1. c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "by (simp add: PRecList.c_assoc_lm_2)"], ["proof (state)\nthis:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "assume C2: \"\\<not> xa = x\""], ["proof (state)\nthis:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "then"], ["proof (chain)\npicking this:\n  xa \\<noteq> x", "have S1: \"c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = c_assoc_have_key ls xa\""], ["proof (prove)\nusing this:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa =\n    c_assoc_have_key ls xa", "by (rule c_assoc_lm_3)"], ["proof (state)\nthis:\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = c_assoc_have_key ls xa\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "from C2"], ["proof (chain)\npicking this:\n  xa \\<noteq> x", "have S2: \"c_assoc_value (c_cons (c_pair x (f x)) ls) xa = c_assoc_value ls xa\""], ["proof (prove)\nusing this:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. c_assoc_value (c_cons (c_pair x (f x)) ls) xa = c_assoc_value ls xa", "by (rule c_assoc_lm_4)"], ["proof (state)\nthis:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = c_assoc_value ls xa\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "from A2 S1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = 0\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = c_assoc_have_key ls xa", "have S3: \"c_assoc_have_key ls xa = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = 0\n  c_assoc_have_key (c_cons (c_pair x (f x)) ls) xa = c_assoc_have_key ls xa\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls xa = 0", "by simp"], ["proof (state)\nthis:\n  c_assoc_have_key ls xa = 0\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "from A1 S3"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls f\n  c_assoc_have_key ls xa = 0", "have \"c_assoc_value ls xa = f xa\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls f\n  c_assoc_have_key ls xa = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls xa = f xa", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls xa = f xa\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow>\n    c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "with S2"], ["proof (chain)\npicking this:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = c_assoc_value ls xa\n  c_assoc_value ls xa = f xa", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = c_assoc_value ls xa\n  c_assoc_value ls xa = f xa\n\ngoal (1 subgoal):\n 1. c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa", "by simp"], ["proof (state)\nthis:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_value (c_cons (c_pair x (f x)) ls) xa = f xa\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_is_sub_fun (c_cons (c_pair x (f x)) ls) f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mod7_lm: \"(n::nat) mod 7 = 0 \\<or>\n                (n::nat) mod 7 = 1 \\<or>\n                (n::nat) mod 7 = 2 \\<or>\n                (n::nat) mod 7 = 3 \\<or>\n                (n::nat) mod 7 = 4 \\<or>\n                (n::nat) mod 7 = 5 \\<or>\n                (n::nat) mod 7 = 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod 7 = 0 \\<or>\n    n mod 7 = 1 \\<or>\n    n mod 7 = 2 \\<or>\n    n mod 7 = 3 \\<or> n mod 7 = 4 \\<or> n mod 7 = 5 \\<or> n mod 7 = 6", "by arith"], ["", "lemma nat_to_sch_at_pos: \"x > 0 \\<Longrightarrow> nat_to_sch x = (let u=(c_fst x) mod 7; v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "assume A: \"x > 0\""], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))\n 2. \\<not> ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "assume A1: \"x = 1\""], ["proof (state)\nthis:\n  x = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))\n 2. \\<not> ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "then"], ["proof (chain)\npicking this:\n  x = 1", "have S1: \"c_fst x = 0\""], ["proof (prove)\nusing this:\n  x = 1\n\ngoal (1 subgoal):\n 1. c_fst x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow> c_fst x = 0", "have \"1 = c_pair 0 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = c_pair 0 1", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 = c_pair 0 1\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow> c_fst x = 0", "then"], ["proof (chain)\npicking this:\n  1 = c_pair 0 1", "have \"c_fst 1 = c_fst (c_pair 0 1)\""], ["proof (prove)\nusing this:\n  1 = c_pair 0 1\n\ngoal (1 subgoal):\n 1. c_fst 1 = c_fst (c_pair 0 1)", "by simp"], ["proof (state)\nthis:\n  c_fst 1 = c_fst (c_pair 0 1)\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow> c_fst x = 0", "then"], ["proof (chain)\npicking this:\n  c_fst 1 = c_fst (c_pair 0 1)", "have \"c_fst 1 = 0\""], ["proof (prove)\nusing this:\n  c_fst 1 = c_fst (c_pair 0 1)\n\ngoal (1 subgoal):\n 1. c_fst 1 = 0", "by simp"], ["proof (state)\nthis:\n  c_fst 1 = 0\n\ngoal (1 subgoal):\n 1. x = 1 \\<Longrightarrow> c_fst x = 0", "with A1"], ["proof (chain)\npicking this:\n  x = 1\n  c_fst 1 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 1\n  c_fst 1 = 0\n\ngoal (1 subgoal):\n 1. c_fst x = 0", "by simp"], ["proof (state)\nthis:\n  c_fst x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))\n 2. \\<not> ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from A1"], ["proof (chain)\npicking this:\n  x = 1", "have S2: \"nat_to_sch x = Base_zero\""], ["proof (prove)\nusing this:\n  x = 1\n\ngoal (1 subgoal):\n 1. nat_to_sch x = Base_zero", "by simp"], ["proof (state)\nthis:\n  nat_to_sch x = Base_zero\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))\n 2. \\<not> ?P \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from S1 S2"], ["proof (chain)\npicking this:\n  c_fst x = 0\n  nat_to_sch x = Base_zero", "show \"nat_to_sch x = (let u=(c_fst x) mod 7; v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst x = 0\n  nat_to_sch x = Base_zero\n\ngoal (1 subgoal):\n 1. nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "apply(insert S1 S2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst x = 0; nat_to_sch x = Base_zero\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch x =\n                      (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v;\n                           v2 = c_snd v; sch1 = nat_to_sch v1\n                       in Let (nat_to_sch v2) (loc_f u sch1))", "apply(simp add: Let_def loc_f_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  nat_to_sch x =\n  (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "assume \"\\<not> x = 1\""], ["proof (state)\nthis:\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from A this"], ["proof (chain)\npicking this:\n  0 < x\n  x \\<noteq> 1", "have A2: \"x > 1\""], ["proof (prove)\nusing this:\n  0 < x\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < x", "by simp"], ["proof (state)\nthis:\n  1 < x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from this"], ["proof (chain)\npicking this:\n  1 < x", "have \"nat_to_sch x = (let u=mod7 (c_fst x); v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch x =\n  (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. x \\<noteq> 1 \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from this"], ["proof (chain)\npicking this:\n  nat_to_sch x =\n  (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch x = (let u=(c_fst x) mod 7; v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  nat_to_sch x =\n  (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch x =\n    (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  nat_to_sch x =\n  (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_sch x =\n  (let u = c_fst x mod 7; v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_sch n = Base_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "assume A: \"c_fst n mod 7 = 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_zero", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> nat_to_sch n = Base_zero\n 2. \\<not> ?P \\<Longrightarrow> nat_to_sch n = Base_zero", "assume \"n=0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> nat_to_sch n = Base_zero\n 2. \\<not> ?P \\<Longrightarrow> nat_to_sch n = Base_zero", "then"], ["proof (chain)\npicking this:\n  n = 0", "show \"nat_to_sch n = Base_zero\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_zero", "by simp"], ["proof (state)\nthis:\n  nat_to_sch n = Base_zero\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "assume \"\\<not> n = 0\""], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"n > 0\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "then"], ["proof (chain)\npicking this:\n  0 < n", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule nat_to_sch_at_pos)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = Base_zero", "with A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 0\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Base_zero\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_zero", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_sch n = Base_zero\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_lm_1: \"c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> 0 < n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> 0 < n", "assume A: \"c_fst n mod 7 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> 0 < n", "have \"n = 0 \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> False", "assume \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  n = 0", "have \"c_fst n mod 7 = 0\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0", "by (simp add: c_fst_at_0)"], ["proof (state)\nthis:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 \\<noteq> 0\n  c_fst n mod 7 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 \\<noteq> 0\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> 0 < n", "then"], ["proof (chain)\npicking this:\n  n = 0 \\<Longrightarrow> False", "have \"\\<not> n = 0\""], ["proof (prove)\nusing this:\n  n = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> 0 < n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_lm_2: \"c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow> nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow>\n    nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow>\n    nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "assume \"c_fst n mod 7 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow>\n    nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 \\<noteq> 0", "have \"n > 0\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by (rule loc_lm_1)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 \\<noteq> 0 \\<Longrightarrow>\n    nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "then"], ["proof (chain)\npicking this:\n  0 < n", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule nat_to_sch_at_pos)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc", "assume A1: \"c_fst n mod 7 = 1\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 1", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_sch n = Base_suc", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 1\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Base_suc\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_suc", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_suc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst", "assume A1: \"c_fst n mod 7 = 2\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 2", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_sch n = Base_fst", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 2\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Base_fst\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_fst", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_fst\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd", "assume A1: \"c_fst n mod 7 = 3\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 3", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_sch n = Base_snd", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 3\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Base_snd\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_snd", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_snd\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_4: \"c_fst n mod 7 = 4 \\<Longrightarrow> nat_to_sch n = Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "assume A1: \"c_fst n mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_5: \"c_fst n mod 7 = 5 \\<Longrightarrow> nat_to_sch n = Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "assume A1: \"c_fst n mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_6: \"c_fst n mod 7 = 6 \\<Longrightarrow> nat_to_sch n = Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "assume A1: \"c_fst n mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have \"nat_to_sch n = (let u=(c_fst n) mod 7; v=c_snd n; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (simp add: loc_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "with A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show \"nat_to_sch n = Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n  nat_to_sch n =\n  (let u = c_fst n mod 7; v = c_snd n; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (simp add: Let_def loc_f_def)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0", "assume A: \"c_fst n mod 7 = 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 0", "have S2: \"nat_to_sch n = Base_zero\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_zero", "by (rule nat_to_sch_0)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_zero\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow> nat_to_pr n x = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_zero", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_zero\n\ngoal (1 subgoal):\n 1. nat_to_pr n x = 0", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x", "assume A: \"c_fst n mod 7 = 1\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 1", "have S2: \"nat_to_sch n = Base_suc\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_suc", "by (rule nat_to_sch_1)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_suc\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow> nat_to_pr n x = Suc x", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_suc", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_pr n x = Suc x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x = Suc x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x", "assume A: \"c_fst n mod 7 = 2\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 2", "have S2: \"nat_to_sch n = Base_fst\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_fst", "by (rule nat_to_sch_2)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_fst\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow> nat_to_pr n x = c_fst x", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_fst", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_fst\n\ngoal (1 subgoal):\n 1. nat_to_pr n x = c_fst x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x = c_fst x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x", "assume A: \"c_fst n mod 7 = 3\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 3", "have S2: \"nat_to_sch n = Base_snd\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. nat_to_sch n = Base_snd", "by (rule nat_to_sch_3)"], ["proof (state)\nthis:\n  nat_to_sch n = Base_snd\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow> nat_to_pr n x = c_snd x", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_snd", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n = Base_snd\n\ngoal (1 subgoal):\n 1. nat_to_pr n x = c_snd x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x = c_snd x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_4: \"c_fst n mod 7 = 4 \\<Longrightarrow> nat_to_pr n x = (nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "assume A: \"c_fst n mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have S2: \"nat_to_sch n = Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (rule nat_to_sch_4)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "have S3: \"nat_to_pr n x = sch_to_pr (Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\""], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    sch_to_pr\n     (Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n))))\n     x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  sch_to_pr\n   (Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "from S3"], ["proof (chain)\npicking this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x", "have S4: \"nat_to_pr n x = (sch_to_pr (nat_to_sch (c_fst (c_snd n)))) ((sch_to_pr (nat_to_sch (c_snd (c_snd n)))) x)\""], ["proof (prove)\nusing this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Comp_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    sch_to_pr (nat_to_sch (c_fst (c_snd n)))\n     (sch_to_pr (nat_to_sch (c_snd (c_snd n))) x)", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  sch_to_pr (nat_to_sch (c_fst (c_snd n)))\n   (sch_to_pr (nat_to_sch (c_snd (c_snd n))) x)\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "from S4"], ["proof (chain)\npicking this:\n  nat_to_pr n x =\n  sch_to_pr (nat_to_sch (c_fst (c_snd n)))\n   (sch_to_pr (nat_to_sch (c_snd (c_snd n))) x)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x =\n  sch_to_pr (nat_to_sch (c_fst (c_snd n)))\n   (sch_to_pr (nat_to_sch (c_snd (c_snd n))) x)\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  nat_to_pr (c_fst (c_snd n)) (nat_to_pr (c_snd (c_snd n)) x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_5: \"c_fst n mod 7 = 5 \\<Longrightarrow> nat_to_pr n x = (c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n)))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "assume A: \"c_fst n mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have S2: \"nat_to_sch n = Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (rule nat_to_sch_5)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "have S3: \"nat_to_pr n x = sch_to_pr (Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\""], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    sch_to_pr\n     (Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n))))\n     x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  sch_to_pr\n   (Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from S3"], ["proof (chain)\npicking this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Pair_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  c_f_pair (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_lm_6: \"c_fst n mod 7 = 6 \\<Longrightarrow> nat_to_pr n x = (UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n)))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "assume A: \"c_fst n mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "have S1: \"nat_to_pr n x = sch_to_pr (nat_to_sch n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n x = sch_to_pr (nat_to_sch n) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have S2: \"nat_to_sch n = Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. nat_to_sch n =\n    Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "by (rule nat_to_sch_6)"], ["proof (state)\nthis:\n  nat_to_sch n =\n  Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from S1 S2"], ["proof (chain)\npicking this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))", "have S3: \"nat_to_pr n x = sch_to_pr (Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\""], ["proof (prove)\nusing this:\n  nat_to_pr n x = sch_to_pr (nat_to_sch n) x\n  nat_to_sch n =\n  Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    sch_to_pr\n     (Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n))))\n     x", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  sch_to_pr\n   (Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "from S3"], ["proof (chain)\npicking this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n x =\n  sch_to_pr\n   (Rec_op (nat_to_sch (c_fst (c_snd n))) (nat_to_sch (c_snd (c_snd n)))) x\n\ngoal (1 subgoal):\n 1. nat_to_pr n x =\n    UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr n x =\n  UnaryRecOp (nat_to_pr (c_fst (c_snd n))) (nat_to_pr (c_snd (c_snd n))) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_0: \"c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0", "assume A: \"c_fst (c_fst key) mod 7 = 0\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> univ_for_pr key = 0", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 0\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 0\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key = 0", "by (simp add: nat_to_pr_lm_0)"], ["proof (state)\nthis:\n  univ_for_pr key = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_1: \"c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow> univ_for_pr key = Suc (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    univ_for_pr key = Suc (c_snd key)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    univ_for_pr key = Suc (c_snd key)", "assume A: \"c_fst (c_fst key) mod 7 = 1\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    univ_for_pr key = Suc (c_snd key)", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    univ_for_pr key = Suc (c_snd key)", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 1\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 1\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key = Suc (c_snd key)", "by (simp add: nat_to_pr_lm_1)"], ["proof (state)\nthis:\n  univ_for_pr key = Suc (c_snd key)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_2: \"c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow> univ_for_pr key = c_fst (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    univ_for_pr key = c_fst (c_snd key)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    univ_for_pr key = c_fst (c_snd key)", "assume A: \"c_fst (c_fst key) mod 7 = 2\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    univ_for_pr key = c_fst (c_snd key)", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    univ_for_pr key = c_fst (c_snd key)", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 2\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 2\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key = c_fst (c_snd key)", "by (simp add: nat_to_pr_lm_2)"], ["proof (state)\nthis:\n  univ_for_pr key = c_fst (c_snd key)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_3: \"c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow> univ_for_pr key = c_snd (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    univ_for_pr key = c_snd (c_snd key)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    univ_for_pr key = c_snd (c_snd key)", "assume A: \"c_fst (c_fst key) mod 7 = 3\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    univ_for_pr key = c_snd (c_snd key)", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    univ_for_pr key = c_snd (c_snd key)", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 3\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 3\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key = c_snd (c_snd key)", "by (simp add: nat_to_pr_lm_3)"], ["proof (state)\nthis:\n  univ_for_pr key = c_snd (c_snd key)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_4: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> univ_for_pr key = (nat_to_pr (c_fst (c_snd (c_fst key))) (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    nat_to_pr (c_fst (c_snd (c_fst key)))\n     (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    nat_to_pr (c_fst (c_snd (c_fst key)))\n     (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))", "assume A: \"c_fst (c_fst key) mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    nat_to_pr (c_fst (c_snd (c_fst key)))\n     (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    nat_to_pr (c_fst (c_snd (c_fst key)))\n     (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    nat_to_pr (c_fst (c_snd (c_fst key)))\n     (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))", "by (simp add: nat_to_pr_lm_4)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  nat_to_pr (c_fst (c_snd (c_fst key)))\n   (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal:\nNo subgoals!", "(* nat_to_pr n x = (nat_to_pr (c_fst (c_snd (c_fst key))) (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))) *)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  nat_to_pr (c_fst (c_snd (c_fst key)))\n   (nat_to_pr (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_4_1: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> univ_for_pr key = univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "assume A: \"c_fst (c_fst key) mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "by (simp add: nat_to_pr_lm_4 univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_5: \"c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow> univ_for_pr key = c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))) (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    univ_for_pr key =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    univ_for_pr key =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "assume A: \"c_fst (c_fst key) mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    univ_for_pr key =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    univ_for_pr key =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "with A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 5\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 5\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "by (simp add: nat_to_pr_lm_5 c_f_pair_def univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_6_1: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_fst (c_snd (c_fst key)))\n                         (c_snd (c_snd key)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_fst (c_snd (c_fst key)))\n                         (c_snd (c_snd key)))", "assume A1: \"c_fst (c_fst key) mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_fst (c_snd (c_fst key)))\n                         (c_snd (c_snd key)))", "assume A2: \"c_fst (c_snd key) = 0\""], ["proof (state)\nthis:\n  c_fst (c_snd key) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_fst (c_snd (c_fst key)))\n                         (c_snd (c_snd key)))", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_fst (c_snd (c_fst key)))\n                         (c_snd (c_snd key)))", "with A1 A2"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = 0\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = 0\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))", "by (simp add: nat_to_pr_lm_6 UnaryRecOp_def univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_6_2: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr\n            (c_pair (c_snd (c_snd (c_fst key)))\n              (c_pair (c_pair u (univ_for_pr (c_pair (c_fst key) (c_pair u (c_snd (c_snd key)))))) (c_snd (c_snd key))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair u\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair u (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair u\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair u (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "assume A1: \"c_fst (c_fst key) mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair u\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair u (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "assume A2: \"c_fst (c_snd key) = Suc u\""], ["proof (state)\nthis:\n  c_fst (c_snd key) = Suc u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair u\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair u (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "have S1: \"univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "by (simp add: univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair u\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair u (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "with A1 A2"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = Suc u\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = Suc u\n  univ_for_pr key = nat_to_pr (c_fst key) (c_snd key)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair u\n           (univ_for_pr\n             (c_pair (c_fst key) (c_pair u (c_snd (c_snd key))))))\n         (c_snd (c_snd key))))", "apply(simp add: nat_to_pr_lm_6 UnaryRecOp_def univ_for_pr_def pr_conv_2_to_1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) = Suc u\\<rbrakk>\n    \\<Longrightarrow> pr_conv_1_to_3 (nat_to_pr (c_snd (c_snd (c_fst key))))\n                       u (PrimRecOp (nat_to_pr (c_fst (c_snd (c_fst key))))\n                           (pr_conv_1_to_3\n                             (nat_to_pr (c_snd (c_snd (c_fst key)))))\n                           u (c_snd (c_snd key)))\n                       (c_snd (c_snd key)) =\n                      nat_to_pr (c_snd (c_snd (c_fst key)))\n                       (c_pair\n                         (c_pair u\n                           (PrimRecOp\n                             (nat_to_pr (c_fst (c_snd (c_fst key))))\n                             (pr_conv_1_to_3\n                               (nat_to_pr (c_snd (c_snd (c_fst key)))))\n                             u (c_snd (c_snd key))))\n                         (c_snd (c_snd key)))", "apply(simp add: pr_conv_1_to_3_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  univ_for_pr key =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair u\n         (univ_for_pr (c_pair (c_fst key) (c_pair u (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma univ_for_pr_lm_6_3: \"\\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_fst (c_snd key) \\<noteq> 0\\<rbrakk> \\<Longrightarrow> univ_for_pr key = univ_for_pr\n            (c_pair (c_snd (c_snd (c_fst key)))\n              (c_pair (c_pair (c_fst (c_snd key) - 1) (univ_for_pr (c_pair (c_fst key) (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))))) (c_snd (c_snd key))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "assume A1: \"c_fst (c_fst key) mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "assume A2: \"c_fst (c_snd key) \\<noteq> 0\""], ["proof (state)\nthis:\n  c_fst (c_snd key) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) \\<noteq> 0", "have \n  A3: \"c_fst (c_snd key) > 0\""], ["proof (prove)\nusing this:\n  c_fst (c_snd key) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < c_fst (c_snd key)", "by simp"], ["proof (state)\nthis:\n  0 < c_fst (c_snd key)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "let ?u = \"c_fst (c_snd key) - (1::nat)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "from A3"], ["proof (chain)\npicking this:\n  0 < c_fst (c_snd key)", "have S1: \"c_fst (c_snd key) = Suc ?u\""], ["proof (prove)\nusing this:\n  0 < c_fst (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) = Suc (c_fst (c_snd key) - 1)", "by simp"], ["proof (state)\nthis:\n  c_fst (c_snd key) = Suc (c_fst (c_snd key) - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "from A1 S1"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = Suc (c_fst (c_snd key) - 1)", "have S2: \"univ_for_pr key = univ_for_pr\n            (c_pair (c_snd (c_snd (c_fst key)))\n              (c_pair (c_pair ?u (univ_for_pr (c_pair (c_fst key) (c_pair ?u (c_snd (c_snd key)))))) (c_snd (c_snd key))))\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = Suc (c_fst (c_snd key) - 1)\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (univ_for_pr\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key))))", "by (rule univ_for_pr_lm_6_2)"], ["proof (state)\nthis:\n  univ_for_pr key =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_fst (c_snd key) \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> univ_for_pr key =\n                      univ_for_pr\n                       (c_pair (c_snd (c_snd (c_fst key)))\n                         (c_pair\n                           (c_pair (c_fst (c_snd key) - 1)\n                             (univ_for_pr\n                               (c_pair (c_fst key)\n                                 (c_pair (c_fst (c_snd key) - 1)\n                                   (c_snd (c_snd key))))))\n                           (c_snd (c_snd key))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  univ_for_pr key =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. univ_for_pr key =\n    univ_for_pr\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (univ_for_pr\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key))))", "by simp"], ["proof (state)\nthis:\n  univ_for_pr key =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_comp_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr; g_comp ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A1: \"c_fst (c_fst key) mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A3: \"g_comp ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_comp ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?n = \"c_fst key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?x = \"c_snd key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m = \"c_snd ?n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m1 = \"c_fst ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m2 = \"c_snd ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?k1 = \"c_pair ?m2 ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "have S1: \"c_assoc_have_key ls ?k1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume A1_1: \"c_assoc_have_key ls ?k1 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0", "have \"g_comp ls key = ls\""], ["proof (prove)\nusing this:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_comp ls key = ls", "by(simp add: g_comp_def)"], ["proof (state)\nthis:\n  g_comp ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_comp ls key \\<noteq> ls\n  g_comp ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_comp ls key \\<noteq> ls\n  g_comp ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?y = \"c_assoc_value ls ?k1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0", "have S2: \"?y = univ_for_pr ?k1\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n    univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?k2 = \"c_pair ?m1 ?y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "have S3: \"c_assoc_have_key ls ?k2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume A3_1: \"c_assoc_have_key ls ?k2 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls\n       (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls\n       (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n  0", "have \"g_comp ls key = ls\""], ["proof (prove)\nusing this:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls\n       (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_comp ls key = ls", "by (simp add: g_comp_def Let_def)"], ["proof (state)\nthis:\n  g_comp ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_comp ls key \\<noteq> ls\n  g_comp ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_comp ls key \\<noteq> ls\n  g_comp ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?z = \"c_assoc_value ls ?k2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S3"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  0", "have S4: \"?z = univ_for_pr ?k2\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from S2"], ["proof (chain)\npicking this:\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))", "have S5: \"?k2 = c_pair ?m1 (univ_for_pr ?k1)\""], ["proof (prove)\nusing this:\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal (1 subgoal):\n 1. c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n    c_pair (c_fst (c_snd (c_fst key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "by simp"], ["proof (state)\nthis:\n  c_pair (c_fst (c_snd (c_fst key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (c_fst (c_snd (c_fst key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from S4 S5"], ["proof (chain)\npicking this:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n  c_pair (c_fst (c_snd (c_fst key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (c_fst (c_snd (c_fst key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "have S6: \"?z = univ_for_pr (c_pair ?m1 (univ_for_pr ?k1))\""], ["proof (prove)\nusing this:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n  c_pair (c_fst (c_snd (c_fst key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (c_fst (c_snd (c_fst key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n    univ_for_pr\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "by simp"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A1 S6"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))", "have S7: \"?z = univ_for_pr key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst (c_snd (c_fst key)))\n       (c_assoc_value ls\n         (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n    univ_for_pr key", "by (simp add: univ_for_pr_lm_4_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr;\n     g_comp ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_comp ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from S1 S3 S7"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (simp add: g_comp_def Let_def)"], ["proof (state)\nthis:\n  g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_comp_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 4; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "assume A1: \"c_fst (c_fst key) mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 4;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_comp ls key) univ_for_pr", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "assume \"g_comp ls key = ls\""], ["proof (state)\nthis:\n  g_comp ls key = ls\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_comp ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key = ls", "show \"c_is_sub_fun (g_comp ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key = ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_comp ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_comp ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. g_comp ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_comp ls key) univ_for_pr", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g_comp ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_comp ls key) univ_for_pr", "assume \"g_comp ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_comp ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_comp ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_comp ls key) univ_for_pr", "from A1 A2 this"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key \\<noteq> ls", "have S1: \"g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (rule g_comp_lm_0)"], ["proof (state)\nthis:\n  g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. g_comp ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_comp ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls", "show \"c_is_sub_fun (g_comp ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_comp ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_comp ls key) univ_for_pr", "by (simp add: c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_comp ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_is_sub_fun (g_comp ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_pair_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr; g_pair ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A1: \"c_fst (c_fst key) mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A3: \"g_pair ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_pair ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?n = \"c_fst key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?x = \"c_snd key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m = \"c_snd ?n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m1 = \"c_fst ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m2 = \"c_snd ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?k1 = \"c_pair ?m1 ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "have S1: \"c_assoc_have_key ls ?k1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume A1_1: \"c_assoc_have_key ls ?k1 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0", "have \"g_pair ls key = ls\""], ["proof (prove)\nusing this:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_pair ls key = ls", "by(simp add: g_pair_def)"], ["proof (state)\nthis:\n  g_pair ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_pair ls key \\<noteq> ls\n  g_pair ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_pair ls key \\<noteq> ls\n  g_pair ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?y1 = \"c_assoc_value ls ?k1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0", "have S2: \"?y1 = univ_for_pr ?k1\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) =\n    univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?k2 = \"c_pair ?m2 ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "have S3: \"c_assoc_have_key ls ?k2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume A3_1: \"c_assoc_have_key ls ?k2 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0", "have \"g_pair ls key = ls\""], ["proof (prove)\nusing this:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_pair ls key = ls", "by (simp add: g_pair_def Let_def)"], ["proof (state)\nthis:\n  g_pair ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_pair ls key \\<noteq> ls\n  g_pair ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_pair ls key \\<noteq> ls\n  g_pair ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?y2 = \"c_assoc_value ls ?k2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S3"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0", "have S4: \"?y2 = univ_for_pr ?k2\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n    univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?z = \"c_pair ?y1 ?y2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from S2 S4"], ["proof (chain)\npicking this:\n  c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))", "have S5: \"?z = c_pair (univ_for_pr ?k1) (univ_for_pr ?k2)\""], ["proof (prove)\nusing this:\n  c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key))\n  c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) =\n  univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))\n\ngoal (1 subgoal):\n 1. c_pair\n     (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n    c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "by simp"], ["proof (state)\nthis:\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from A1 S5"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 5\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))", "have S6: \"?z = univ_for_pr key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 5\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  c_pair (univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (univ_for_pr (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)))\n\ngoal (1 subgoal):\n 1. c_pair\n     (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n     (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n    univ_for_pr key", "by (simp add: univ_for_pr_lm_5)"], ["proof (state)\nthis:\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr;\n     g_pair ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_pair ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "from S1 S3 S6"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  univ_for_pr key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)) = 0\n  c_assoc_have_key ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key)) = 0\n  c_pair (c_assoc_value ls (c_pair (c_fst (c_snd (c_fst key))) (c_snd key)))\n   (c_assoc_value ls (c_pair (c_snd (c_snd (c_fst key))) (c_snd key))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (simp add: g_pair_def Let_def)"], ["proof (state)\nthis:\n  g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_pair_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 5; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "assume A1: \"c_fst (c_fst key) mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 5;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_pair ls key) univ_for_pr", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "assume \"g_pair ls key = ls\""], ["proof (state)\nthis:\n  g_pair ls key = ls\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_pair ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key = ls", "show \"c_is_sub_fun (g_pair ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key = ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_pair ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_pair ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. g_pair ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_pair ls key) univ_for_pr", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g_pair ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_pair ls key) univ_for_pr", "assume \"g_pair ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_pair ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_pair ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_pair ls key) univ_for_pr", "from A1 A2 this"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 5\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key \\<noteq> ls", "have S1: \"g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 5\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (rule g_pair_lm_0)"], ["proof (state)\nthis:\n  g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. g_pair ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_pair ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls", "show \"c_is_sub_fun (g_pair ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_pair ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_pair ls key) univ_for_pr", "by (simp add: c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_pair ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_is_sub_fun (g_pair ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_rec_lm_0: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr; g_rec ls key \\<noteq> ls\\<rbrakk> \\<Longrightarrow> g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A1: \"c_fst (c_fst key) mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "assume A3: \"g_rec ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_rec ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?n = \"c_fst key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?x = \"c_snd key\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m = \"c_snd ?n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m1 = \"c_fst ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?m2 = \"c_snd ?m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?y1 = \"c_fst ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "let ?x1 = \"c_snd ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr;\n     g_rec ls key \\<noteq> ls\\<rbrakk>\n    \\<Longrightarrow> g_rec ls key =\n                      c_cons (c_pair key (univ_for_pr key)) ls", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "assume A1_1: \"?y1 = 0\""], ["proof (state)\nthis:\n  c_fst (c_snd key) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?k1 = \"c_pair ?m1 ?x1\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "have S1_1: \"c_assoc_have_key ls ?k1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume \"c_assoc_have_key ls ?k1 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A1_1"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n  0", "have \"g_rec ls key = ls\""], ["proof (prove)\nusing this:\n  c_fst (c_snd key) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_rec ls key = ls", "by(simp add: g_rec_def)"], ["proof (state)\nthis:\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?v = \"c_assoc_value ls ?k1\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S1_1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  0", "have S1_2: \"?v = univ_for_pr ?k1\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n    univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A1 A1_1 S1_2"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = 0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))", "have S1_3: \"?v = univ_for_pr key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) = 0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key)))\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n    univ_for_pr key", "by (simp add: univ_for_pr_lm_6_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr key\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n 2. \\<not> ?P \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A1_1 S1_1 S1_3"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_snd key) = 0\n  c_assoc_have_key ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_fst (c_snd (c_fst key))) (c_snd (c_snd key))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (simp add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "assume A2_1: \"?y1 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_fst (c_snd key) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) \\<noteq> 0", "have A2_2: \"?y1 > 0\""], ["proof (prove)\nusing this:\n  c_fst (c_snd key) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < c_fst (c_snd key)", "by simp"], ["proof (state)\nthis:\n  0 < c_fst (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?y2 = \"?y1 - (1::nat)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?k2 = \"c_pair ?n (c_pair ?y2 ?x1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "have S2_1: \"c_assoc_have_key ls ?k2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume \"c_assoc_have_key ls ?k2 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A2_1"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n  0", "have \"g_rec ls key = ls\""], ["proof (prove)\nusing this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_rec ls key = ls", "by (simp add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?t1 = \"c_assoc_value ls ?k2\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S2_1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  0", "have S2_2: \"?t1 = univ_for_pr ?k2\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n    univ_for_pr\n     (c_pair (c_fst key)\n       (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst key) (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?t2 = \"c_pair (c_pair ?y2 ?t1) ?x1\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?k3 = \"c_pair ?m2 ?t2\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "have S2_3: \"c_assoc_have_key ls ?k3 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) =\n    0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "assume \"c_assoc_have_key ls ?k3 \\<noteq> 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A2_1"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) \\<noteq>\n  0", "have \"g_rec ls key = ls\""], ["proof (prove)\nusing this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. g_rec ls key = ls", "by (simp add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) \\<noteq>\n    0 \\<Longrightarrow>\n    False", "with A3"], ["proof (chain)\npicking this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls", "show False"], ["proof (prove)\nusing this:\n  g_rec ls key \\<noteq> ls\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "let ?u = \"c_assoc_value ls ?k3\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A2 S2_3"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  0", "have S2_4: \"?u = univ_for_pr ?k3\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) =\n    univ_for_pr\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key))))", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from S2_4 S2_2"], ["proof (chain)\npicking this:\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n  c_assoc_value ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst key) (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))", "have S2_5: \"?u = univ_for_pr (c_pair ?m2 (c_pair (c_pair ?y2 (univ_for_pr ?k2)) ?x1))\""], ["proof (prove)\nusing this:\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n  c_assoc_value ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_fst key) (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) =\n    univ_for_pr\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (univ_for_pr\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key))))", "by simp"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A1 A2_1 S2_5"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))", "have S2_6: \"?u = univ_for_pr key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (univ_for_pr\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key))))\n\ngoal (1 subgoal):\n 1. c_assoc_value ls\n     (c_pair (c_snd (c_snd (c_fst key)))\n       (c_pair\n         (c_pair (c_fst (c_snd key) - 1)\n           (c_assoc_value ls\n             (c_pair (c_fst key)\n               (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n         (c_snd (c_snd key)))) =\n    univ_for_pr key", "by (simp add: univ_for_pr_lm_6_3)"], ["proof (state)\nthis:\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. c_fst (c_snd key) \\<noteq> 0 \\<Longrightarrow>\n    g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "from A2_1 S2_1 S2_3 S2_6"], ["proof (chain)\npicking this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  0\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_snd key) \\<noteq> 0\n  c_assoc_have_key ls\n   (c_pair (c_fst key)\n     (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key)))) =\n  0\n  c_assoc_have_key ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  0\n  c_assoc_value ls\n   (c_pair (c_snd (c_snd (c_fst key)))\n     (c_pair\n       (c_pair (c_fst (c_snd key) - 1)\n         (c_assoc_value ls\n           (c_pair (c_fst key)\n             (c_pair (c_fst (c_snd key) - 1) (c_snd (c_snd key))))))\n       (c_snd (c_snd key)))) =\n  univ_for_pr key\n\ngoal (1 subgoal):\n 1. g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (simp add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_rec_lm_1: \"\\<lbrakk> c_fst (c_fst key) mod 7 = 6; c_is_sub_fun ls univ_for_pr\\<rbrakk> \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "assume A1: \"c_fst (c_fst key) mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "assume A2: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst (c_fst key) mod 7 = 6;\n     c_is_sub_fun ls univ_for_pr\\<rbrakk>\n    \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_rec ls key) univ_for_pr", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "assume \"g_rec ls key = ls\""], ["proof (state)\nthis:\n  g_rec ls key = ls\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr\n 2. \\<not> ?P \\<Longrightarrow> c_is_sub_fun (g_rec ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key = ls", "show \"c_is_sub_fun (g_rec ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key = ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_rec ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_rec ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. g_rec ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_rec ls key) univ_for_pr", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g_rec ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_rec ls key) univ_for_pr", "assume \"g_rec ls key \\<noteq> ls\""], ["proof (state)\nthis:\n  g_rec ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_rec ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_rec ls key) univ_for_pr", "from A1 A2 this"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key \\<noteq> ls", "have S1: \"g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key \\<noteq> ls\n\ngoal (1 subgoal):\n 1. g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "by (rule g_rec_lm_0)"], ["proof (state)\nthis:\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. g_rec ls key \\<noteq> ls \\<Longrightarrow>\n    c_is_sub_fun (g_rec ls key) univ_for_pr", "with A2"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls", "show \"c_is_sub_fun (g_rec ls key) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n  g_rec ls key = c_cons (c_pair key (univ_for_pr key)) ls\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_rec ls key) univ_for_pr", "by (simp add: c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_rec ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_is_sub_fun (g_rec ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma g_step_lm_0: \"c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow> g_step ls key = c_cons (c_pair key 0) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    g_step ls key = c_cons (c_pair key 0) ls", "by (simp add: g_step_def)"], ["", "lemma g_step_lm_1: \"c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls", "by (simp add: g_step_def Let_def)"], ["", "lemma g_step_lm_2: \"c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls", "by (simp add: g_step_def Let_def)"], ["", "lemma g_step_lm_3: \"c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow> g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls", "by (simp add: g_step_def Let_def)"], ["", "lemma g_step_lm_4: \"c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow> g_step ls key = g_comp ls key\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    g_step ls key = g_comp ls key", "by (simp add: g_step_def)"], ["", "lemma g_step_lm_5: \"c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow> g_step ls key = g_pair ls key\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    g_step ls key = g_pair ls key", "by (simp add: g_step_def)"], ["", "lemma g_step_lm_6: \"c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow> g_step ls key = g_rec ls key\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n    g_step ls key = g_rec ls key", "by (simp add: g_step_def)"], ["", "lemma g_step_lm_7: \"c_is_sub_fun ls univ_for_pr \\<Longrightarrow> c_is_sub_fun (g_step ls key) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A1: \"c_is_sub_fun ls univ_for_pr\""], ["proof (state)\nthis:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "let ?n = \"c_fst key\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "let ?x = \"c_snd key\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "let ?n1 = \"(c_fst ?n) mod 7\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S1: \"?n1 = 0 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 0\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 0", "have S1_1: \"g_step ls key = c_cons (c_pair key 0) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 0\n\ngoal (1 subgoal):\n 1. g_step ls key = c_cons (c_pair key 0) ls", "by (rule g_step_lm_0)"], ["proof (state)\nthis:\n  g_step ls key = c_cons (c_pair key 0) ls\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 0", "have S1_2: \"univ_for_pr key = 0\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 0\n\ngoal (1 subgoal):\n 1. univ_for_pr key = 0", "by (rule univ_for_pr_lm_0)"], ["proof (state)\nthis:\n  univ_for_pr key = 0\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr", "have S1_3: \"c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr", "by (rule c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from S1_3 S1_1 S1_2"], ["proof (chain)\npicking this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key 0) ls\n  univ_for_pr key = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key 0) ls\n  univ_for_pr key = 0\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S2: \"?n1 = 1 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 1\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 1", "have S2_1: \"g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 1\n\ngoal (1 subgoal):\n 1. g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls", "by (rule g_step_lm_1)"], ["proof (state)\nthis:\n  g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 1", "have S2_2: \"univ_for_pr key = Suc (c_snd key)\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 1\n\ngoal (1 subgoal):\n 1. univ_for_pr key = Suc (c_snd key)", "by (rule univ_for_pr_lm_1)"], ["proof (state)\nthis:\n  univ_for_pr key = Suc (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr", "have S2_3: \"c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr", "by (rule c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from S2_3 S2_1 S2_2"], ["proof (chain)\npicking this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\n  univ_for_pr key = Suc (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (Suc (c_snd key))) ls\n  univ_for_pr key = Suc (c_snd key)\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S3: \"?n1 = 2 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 2\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 2", "have S2_1: \"g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 2\n\ngoal (1 subgoal):\n 1. g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls", "by (rule g_step_lm_2)"], ["proof (state)\nthis:\n  g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 2", "have S2_2: \"univ_for_pr key = c_fst (c_snd key)\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 2\n\ngoal (1 subgoal):\n 1. univ_for_pr key = c_fst (c_snd key)", "by (rule univ_for_pr_lm_2)"], ["proof (state)\nthis:\n  univ_for_pr key = c_fst (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr", "have S2_3: \"c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr", "by (rule c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from S2_3 S2_1 S2_2"], ["proof (chain)\npicking this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\n  univ_for_pr key = c_fst (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (c_fst (c_snd key))) ls\n  univ_for_pr key = c_fst (c_snd key)\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S4: \"?n1 = 3 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 3\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 3", "have S2_1: \"g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 3\n\ngoal (1 subgoal):\n 1. g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls", "by (rule g_step_lm_3)"], ["proof (state)\nthis:\n  g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 3", "have S2_2: \"univ_for_pr key = c_snd (c_snd key)\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 3\n\ngoal (1 subgoal):\n 1. univ_for_pr key = c_snd (c_snd key)", "by (rule univ_for_pr_lm_3)"], ["proof (state)\nthis:\n  univ_for_pr key = c_snd (c_snd key)\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A1"], ["proof (chain)\npicking this:\n  c_is_sub_fun ls univ_for_pr", "have S2_3: \"c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\""], ["proof (prove)\nusing this:\n  c_is_sub_fun ls univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr", "by (rule c_is_sub_fun_lm_2)"], ["proof (state)\nthis:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from S2_3 S2_1 S2_2"], ["proof (chain)\npicking this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\n  univ_for_pr key = c_snd (c_snd key)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_is_sub_fun (c_cons (c_pair key (univ_for_pr key)) ls) univ_for_pr\n  g_step ls key = c_cons (c_pair key (c_snd (c_snd key))) ls\n  univ_for_pr key = c_snd (c_snd key)\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by simp"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S5: \"?n1 = 4 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 4\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4", "have S2_1: \"g_step ls key = g_comp ls key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n\ngoal (1 subgoal):\n 1. g_step ls key = g_comp ls key", "by (rule g_step_lm_4)"], ["proof (state)\nthis:\n  g_step ls key = g_comp ls key\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A A1 S2_1"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 4\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_comp ls key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 4\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_comp ls key\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by (simp add: g_comp_lm_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S6: \"?n1 = 5 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 5\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 5", "have S2_1: \"g_step ls key = g_pair ls key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 5\n\ngoal (1 subgoal):\n 1. g_step ls key = g_pair ls key", "by (rule g_step_lm_5)"], ["proof (state)\nthis:\n  g_step ls key = g_pair ls key\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A A1 S2_1"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 5\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_pair ls key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 5\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_pair ls key\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by (simp add: g_pair_lm_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S7: \"?n1 = 6 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "assume A: \"?n1 = 6\""], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "then"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6", "have S2_1: \"g_step ls key = g_rec ls key\""], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. g_step ls key = g_rec ls key", "by (rule g_step_lm_6)"], ["proof (state)\nthis:\n  g_step ls key = g_rec ls key\n\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "from A A1 S2_1"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 6\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_rec ls key", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 6\n  c_is_sub_fun ls univ_for_pr\n  g_step ls key = g_rec ls key\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by (simp add: g_rec_lm_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "have S8: \"?n1=0 \\<or> ?n1=1 \\<or> ?n1=2 \\<or> ?n1=3 \\<or> ?n1=4 \\<or> ?n1=5 \\<or> ?n1=6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_fst key) mod 7 = 0 \\<or>\n    c_fst (c_fst key) mod 7 = 1 \\<or>\n    c_fst (c_fst key) mod 7 = 2 \\<or>\n    c_fst (c_fst key) mod 7 = 3 \\<or>\n    c_fst (c_fst key) mod 7 = 4 \\<or>\n    c_fst (c_fst key) mod 7 = 5 \\<or> c_fst (c_fst key) mod 7 = 6", "by (rule mod7_lm)"], ["proof (state)\nthis:\n  c_fst (c_fst key) mod 7 = 0 \\<or>\n  c_fst (c_fst key) mod 7 = 1 \\<or>\n  c_fst (c_fst key) mod 7 = 2 \\<or>\n  c_fst (c_fst key) mod 7 = 3 \\<or>\n  c_fst (c_fst key) mod 7 = 4 \\<or>\n  c_fst (c_fst key) mod 7 = 5 \\<or> c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_is_sub_fun ls univ_for_pr \\<Longrightarrow>\n    c_is_sub_fun (g_step ls key) univ_for_pr", "with S1 S2 S3 S4 S5 S6 S7"], ["proof (chain)\npicking this:\n  c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 0 \\<or>\n  c_fst (c_fst key) mod 7 = 1 \\<or>\n  c_fst (c_fst key) mod 7 = 2 \\<or>\n  c_fst (c_fst key) mod 7 = 3 \\<or>\n  c_fst (c_fst key) mod 7 = 4 \\<or>\n  c_fst (c_fst key) mod 7 = 5 \\<or> c_fst (c_fst key) mod 7 = 6", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (c_fst key) mod 7 = 0 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 1 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 2 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 3 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 4 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 5 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 6 \\<Longrightarrow>\n  c_is_sub_fun (g_step ls key) univ_for_pr\n  c_fst (c_fst key) mod 7 = 0 \\<or>\n  c_fst (c_fst key) mod 7 = 1 \\<or>\n  c_fst (c_fst key) mod 7 = 2 \\<or>\n  c_fst (c_fst key) mod 7 = 3 \\<or>\n  c_fst (c_fst key) mod 7 = 4 \\<or>\n  c_fst (c_fst key) mod 7 = 5 \\<or> c_fst (c_fst key) mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_is_sub_fun (g_step ls key) univ_for_pr", "by fast"], ["proof (state)\nthis:\n  c_is_sub_fun (g_step ls key) univ_for_pr\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_gr_1: \"c_is_sub_fun (pr_gr x) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (pr_gr x) univ_for_pr", "apply(induct x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. c_is_sub_fun (pr_gr 0) univ_for_pr\n 2. \\<And>x.\n       c_is_sub_fun (pr_gr x) univ_for_pr \\<Longrightarrow>\n       c_is_sub_fun (pr_gr (Suc x)) univ_for_pr", "apply(simp add: pr_gr_at_0 c_is_sub_fun_def c_assoc_have_key_df)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       c_is_sub_fun (pr_gr x) univ_for_pr \\<Longrightarrow>\n       c_is_sub_fun (pr_gr (Suc x)) univ_for_pr", "apply(simp add: pr_gr_at_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       c_is_sub_fun (pr_gr x) univ_for_pr \\<Longrightarrow>\n       c_is_sub_fun (g_step (pr_gr x) (c_fst x)) univ_for_pr", "apply(simp add: g_step_lm_7)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma comp_next: \"g_comp ls key = ls \\<or> c_tl (g_comp ls key) = ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_comp ls key = ls \\<or> c_tl (g_comp ls key) = ls", "by(simp add: g_comp_def Let_def)"], ["", "lemma pair_next: \"g_pair ls key = ls \\<or> c_tl (g_pair ls key) = ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_pair ls key = ls \\<or> c_tl (g_pair ls key) = ls", "by(simp add: g_pair_def Let_def)"], ["", "lemma rec_next: \"g_rec ls key = ls \\<or> c_tl (g_rec ls key) = ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_rec ls key = ls \\<or> c_tl (g_rec ls key) = ls", "by(simp add: g_rec_def Let_def)"], ["", "lemma step_next: \"g_step ls key = ls \\<or> c_tl (g_step ls key) = ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_step ls key = ls \\<or> c_tl (g_step ls key) = ls", "apply(simp add: g_step_def comp_next pair_next rec_next Let_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "(* (* apply(simp add: g_step_def g_comp_def g_pair_def g_rec_def Let_def) *)*)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lm1: \"pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x", "by(simp add: pr_gr_at_Suc step_next)"], ["", "lemma c_assoc_have_key_pos: \"c_assoc_have_key ls x = 0 \\<Longrightarrow> ls > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls x = 0 \\<Longrightarrow> 0 < ls", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key ls x = 0 \\<Longrightarrow> 0 < ls", "assume A1: \"c_assoc_have_key ls x = 0\""], ["proof (state)\nthis:\n  c_assoc_have_key ls x = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls x = 0 \\<Longrightarrow> 0 < ls", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key ls x = 0\n\ngoal (1 subgoal):\n 1. 0 < ls", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls\n 2. \\<lbrakk>c_assoc_have_key ls x = 0; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "assume A2: \"ls = 0\""], ["proof (state)\nthis:\n  ls = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls\n 2. \\<lbrakk>c_assoc_have_key ls x = 0; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "then"], ["proof (chain)\npicking this:\n  ls = 0", "have S1: \"c_assoc_have_key ls x = 1\""], ["proof (prove)\nusing this:\n  ls = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls x = 1", "by (simp add: c_assoc_have_key_df)"], ["proof (state)\nthis:\n  c_assoc_have_key ls x = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls\n 2. \\<lbrakk>c_assoc_have_key ls x = 0; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "with A1"], ["proof (chain)\npicking this:\n  c_assoc_have_key ls x = 0\n  c_assoc_have_key ls x = 1", "have S2: False"], ["proof (prove)\nusing this:\n  c_assoc_have_key ls x = 0\n  c_assoc_have_key ls x = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls\n 2. \\<lbrakk>c_assoc_have_key ls x = 0; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "then"], ["proof (chain)\npicking this:\n  False", "show \"ls > 0\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. 0 < ls", "by auto"], ["proof (state)\nthis:\n  0 < ls\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ls \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ls \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "assume A3: \"\\<not> ls = 0\""], ["proof (state)\nthis:\n  ls \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key ls x = 0; ls \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < ls", "then"], ["proof (chain)\npicking this:\n  ls \\<noteq> 0", "show \"ls > 0\""], ["proof (prove)\nusing this:\n  ls \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < ls", "by auto"], ["proof (state)\nthis:\n  0 < ls\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ls\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm2: \"c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow> c_assoc_have_key ls key = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "assume A1: \"c_assoc_have_key (c_tl ls) key = 0\""], ["proof (state)\nthis:\n  c_assoc_have_key (c_tl ls) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "from A1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (c_tl ls) key = 0", "have S1: \"c_tl ls > 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (c_tl ls) key = 0\n\ngoal (1 subgoal):\n 1. 0 < c_tl ls", "by (rule c_assoc_have_key_pos)"], ["proof (state)\nthis:\n  0 < c_tl ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "have S2: \"c_tl ls \\<le> ls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_tl ls \\<le> ls", "by (rule c_tl_le)"], ["proof (state)\nthis:\n  c_tl ls \\<le> ls\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  0 < c_tl ls\n  c_tl ls \\<le> ls", "have S3: \"ls \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < c_tl ls\n  c_tl ls \\<le> ls\n\ngoal (1 subgoal):\n 1. ls \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  ls \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl ls) key = 0 \\<Longrightarrow>\n    c_assoc_have_key ls key = 0", "from A1 S3"], ["proof (chain)\npicking this:\n  c_assoc_have_key (c_tl ls) key = 0\n  ls \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key (c_tl ls) key = 0\n  ls \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key ls key = 0", "by (auto simp add: c_assoc_have_key_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key ls key = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm3: \"c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow> c_assoc_have_key (pr_gr (Suc x)) key = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "assume A1: \"c_assoc_have_key (pr_gr x) key = 0\""], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr x) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "have S1: \"pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x", "by (rule lm1)"], ["proof (state)\nthis:\n  pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "from A1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr x) key = 0", "have S2: \"pr_gr (Suc x) = pr_gr x \\<Longrightarrow> ?thesis\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr x) key = 0\n\ngoal (1 subgoal):\n 1. pr_gr (Suc x) = pr_gr x \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "by auto"], ["proof (state)\nthis:\n  pr_gr (Suc x) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "have S3: \"c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "assume \"c_tl (pr_gr (Suc x)) = pr_gr x\" (is \"c_tl ?ls = _\")"], ["proof (state)\nthis:\n  c_tl (pr_gr (Suc x)) = pr_gr x\n\ngoal (1 subgoal):\n 1. c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "with A1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr x) key = 0\n  c_tl (pr_gr (Suc x)) = pr_gr x", "have \"c_assoc_have_key (c_tl ?ls) key = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr x) key = 0\n  c_tl (pr_gr (Suc x)) = pr_gr x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (c_tl (pr_gr (Suc x))) key = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (c_tl (pr_gr (Suc x))) key = 0\n\ngoal (1 subgoal):\n 1. c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key (c_tl (pr_gr (Suc x))) key = 0", "show \"c_assoc_have_key ?ls key = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (c_tl (pr_gr (Suc x))) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (Suc x)) key = 0", "by (rule lm2)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr x) key = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (Suc x)) key = 0", "from S1 S2 S3"], ["proof (chain)\npicking this:\n  pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\n  pr_gr (Suc x) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n  c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (Suc x) = pr_gr x \\<or> c_tl (pr_gr (Suc x)) = pr_gr x\n  pr_gr (Suc x) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n  c_tl (pr_gr (Suc x)) = pr_gr x \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (Suc x)) key = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (Suc x)) key = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm4: \"\\<lbrakk> c_assoc_have_key (pr_gr x) key = 0; 0 \\<le> y\\<rbrakk> \\<Longrightarrow> c_assoc_have_key (pr_gr (x+y)) key = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; 0 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (x + y)) key = 0", "apply(induct_tac y)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; 0 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (x + 0)) key = 0\n 2. \\<And>n.\n       \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; 0 \\<le> y;\n        c_assoc_have_key (pr_gr (x + n)) key = 0\\<rbrakk>\n       \\<Longrightarrow> c_assoc_have_key (pr_gr (x + Suc n)) key = 0", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0;\n        c_assoc_have_key (pr_gr (x + n)) key = 0\\<rbrakk>\n       \\<Longrightarrow> c_assoc_have_key (pr_gr (Suc (x + n))) key = 0", "apply(simp add: lm3)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lm5: \"\\<lbrakk> c_assoc_have_key (pr_gr x) key = 0; x \\<le> y \\<rbrakk> \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "assume A1: \"c_assoc_have_key (pr_gr x) key = 0\""], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr x) key = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "assume A2: \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "let ?z = \"y-x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "from A2"], ["proof (chain)\npicking this:\n  x \\<le> y", "have S1: \"0 \\<le> ?z\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. 0 \\<le> y - x", "by auto"], ["proof (state)\nthis:\n  0 \\<le> y - x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "from A2"], ["proof (chain)\npicking this:\n  x \\<le> y", "have S2: \"y = x + ?z\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. y = x + (y - x)", "by auto"], ["proof (state)\nthis:\n  y = x + (y - x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "from A1 S1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr x) key = 0\n  0 \\<le> y - x", "have S3: \"c_assoc_have_key (pr_gr (x+?z)) key = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr x) key = 0\n  0 \\<le> y - x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (x + (y - x))) key = 0", "by (rule lm4)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (x + (y - x))) key = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c_assoc_have_key (pr_gr x) key = 0; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr y) key = 0", "from S2 S3"], ["proof (chain)\npicking this:\n  y = x + (y - x)\n  c_assoc_have_key (pr_gr (x + (y - x))) key = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  y = x + (y - x)\n  c_assoc_have_key (pr_gr (x + (y - x))) key = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr y) key = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr y) key = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_1: \"n = 0 \\<Longrightarrow> (c_fst n) mod 7 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow> c_fst n mod 7 = 0", "apply(simp add: c_fst_at_0)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma loc_upb_lm_2: \"(c_fst n) mod 7 > 1 \\<Longrightarrow> c_snd n < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "assume A1: \"c_fst n mod 7 > 1\""], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "from A1"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"1 < c_fst n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. 1 < c_fst n", "by simp"], ["proof (state)\nthis:\n  1 < c_fst n\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "have S2: \"c_fst n \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n \\<le> n", "by (rule c_fst_le_arg)"], ["proof (state)\nthis:\n  c_fst n \\<le> n\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "from S1 S2"], ["proof (chain)\npicking this:\n  1 < c_fst n\n  c_fst n \\<le> n", "have S3: \"1 < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n\n  c_fst n \\<le> n\n\ngoal (1 subgoal):\n 1. 1 < n", "by simp"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "from S3"], ["proof (chain)\npicking this:\n  1 < n", "have S4: \"n>1\""], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. 1 < n", "by simp"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7 \\<Longrightarrow> c_snd n < n", "from S4"], ["proof (chain)\npicking this:\n  1 < n", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule c_snd_less_arg)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_0: \"(c_fst n) mod 7 = 4 \\<longrightarrow> c_fst (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<longrightarrow> c_fst (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_fst (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_fst (c_snd n) < n", "have S2: \"c_fst (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_snd n) \\<le> c_snd n", "by (rule c_fst_le_arg)"], ["proof (state)\nthis:\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_fst (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n", "show \"c_fst (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_2: \"(c_fst n) mod 7 = 4 \\<longrightarrow> c_snd (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<longrightarrow> c_snd (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_snd (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_snd (c_snd n) < n", "have S2: \"c_snd (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_snd n) \\<le> c_snd n", "by (rule c_snd_le_arg)"], ["proof (state)\nthis:\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow> c_snd (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n", "show \"c_snd (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_3: \"(c_fst n) mod 7 = 5 \\<longrightarrow> c_fst (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<longrightarrow> c_fst (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_fst (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_fst (c_snd n) < n", "have S2: \"c_fst (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_snd n) \\<le> c_snd n", "by (rule c_fst_le_arg)"], ["proof (state)\nthis:\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_fst (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n", "show \"c_fst (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_4: \"(c_fst n) mod 7 = 5 \\<longrightarrow> c_snd (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<longrightarrow> c_snd (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_snd (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_snd (c_snd n) < n", "have S2: \"c_snd (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_snd n) \\<le> c_snd n", "by (rule c_snd_le_arg)"], ["proof (state)\nthis:\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow> c_snd (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n", "show \"c_snd (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_5: \"(c_fst n) mod 7 = 6 \\<longrightarrow> c_fst (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<longrightarrow> c_fst (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_fst (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_fst (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_fst (c_snd n) < n", "have S2: \"c_fst (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_snd n) \\<le> c_snd n", "by (rule c_fst_le_arg)"], ["proof (state)\nthis:\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_fst (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n", "show \"c_fst (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_fst (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_6: \"(c_fst n) mod 7 = 6 \\<longrightarrow> c_snd (c_snd n) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<longrightarrow> c_snd (c_snd n) < n", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_snd (c_snd n) < n", "assume A1: \"c_fst n mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have S0: \"c_fst n mod 7 > 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. 1 < c_fst n mod 7", "by auto"], ["proof (state)\nthis:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_snd (c_snd n) < n", "then"], ["proof (chain)\npicking this:\n  1 < c_fst n mod 7", "have S1: \"c_snd n < n\""], ["proof (prove)\nusing this:\n  1 < c_fst n mod 7\n\ngoal (1 subgoal):\n 1. c_snd n < n", "by (rule loc_upb_lm_2)"], ["proof (state)\nthis:\n  c_snd n < n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_snd (c_snd n) < n", "have S2: \"c_snd (c_snd n) \\<le>  c_snd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_snd n) \\<le> c_snd n", "by (rule c_snd_le_arg)"], ["proof (state)\nthis:\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow> c_snd (c_snd n) < n", "from S1 S2"], ["proof (chain)\npicking this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n", "show \"c_snd (c_snd n) < n\""], ["proof (prove)\nusing this:\n  c_snd n < n\n  c_snd (c_snd n) \\<le> c_snd n\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by auto"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lm_2_7: \"\\<lbrakk>y2 = y1 - (1::nat); 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk> \\<Longrightarrow> c_pair y2 x1 < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "assume A1: \"y2 = y1 - (1::nat)\" and A2: \"0 < y1\" and A3: \"x1 = c_snd x\" and A4: \"y1 = c_fst x\""], ["proof (state)\nthis:\n  y2 = y1 - 1\n  0 < y1\n  x1 = c_snd x\n  y1 = c_fst x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "from A1 A2"], ["proof (chain)\npicking this:\n  y2 = y1 - 1\n  0 < y1", "have S1: \"y2 < y1\""], ["proof (prove)\nusing this:\n  y2 = y1 - 1\n  0 < y1\n\ngoal (1 subgoal):\n 1. y2 < y1", "by auto"], ["proof (state)\nthis:\n  y2 < y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "from S1"], ["proof (chain)\npicking this:\n  y2 < y1", "have S2: \"c_pair y2 x1 < c_pair y1 x1\""], ["proof (prove)\nusing this:\n  y2 < y1\n\ngoal (1 subgoal):\n 1. c_pair y2 x1 < c_pair y1 x1", "by (rule c_pair_strict_mono1)"], ["proof (state)\nthis:\n  c_pair y2 x1 < c_pair y1 x1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "from A3 A4"], ["proof (chain)\npicking this:\n  x1 = c_snd x\n  y1 = c_fst x", "have S3: \"c_pair y1 x1 = x\""], ["proof (prove)\nusing this:\n  x1 = c_snd x\n  y1 = c_fst x\n\ngoal (1 subgoal):\n 1. c_pair y1 x1 = x", "by auto"], ["proof (state)\nthis:\n  c_pair y1 x1 = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y2 = y1 - 1; 0 < y1; x1 = c_snd x; y1 = c_fst x\\<rbrakk>\n    \\<Longrightarrow> c_pair y2 x1 < x", "from S2 S3"], ["proof (chain)\npicking this:\n  c_pair y2 x1 < c_pair y1 x1\n  c_pair y1 x1 = x", "show \"c_pair y2 x1 < x\""], ["proof (prove)\nusing this:\n  c_pair y2 x1 < c_pair y1 x1\n  c_pair y1 x1 = x\n\ngoal (1 subgoal):\n 1. c_pair y2 x1 < x", "by auto"], ["proof (state)\nthis:\n  c_pair y2 x1 < x\n\ngoal:\nNo subgoals!", "qed"], ["", "function loc_upb :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  aa: \"loc_upb n x = (\n     let n1 = (c_fst n) mod 7 in\n       if n1 = 0 then (c_pair (c_pair n x) 0) + 1 else\n       if n1 = 1 then (c_pair (c_pair n x) 0) + 1 else\n       if n1 = 2 then (c_pair (c_pair n x) 0) + 1 else\n       if n1 = 3 then (c_pair (c_pair n x) 0) + 1 else\n       if n1 = 4 then (\n       let m = c_snd n; m1 = c_fst m; m2 = c_snd m;\n       y = c_assoc_value (pr_gr (loc_upb m2 x)) (c_pair m2 x) in\n         (c_pair (c_pair n x) (loc_upb m2 x + loc_upb m1 y)) + 1\n       ) else\n       if n1 = 5 then (\n       let m = c_snd n; m1 = c_fst m; m2 = c_snd m in\n         (c_pair (c_pair n x) (loc_upb m1 x + loc_upb m2 x)) + 1\n       ) else\n       if n1 = 6 then (\n       let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x in\n         if y1 = 0 then (\n           (c_pair (c_pair n x) (loc_upb m1 x1)) + 1\n         ) else (\n           let y2 = y1-(1::nat);\n             t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1))) (c_pair n (c_pair y2 x1)); t2 = c_pair (c_pair y2 t1) x1 in\n             (c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + loc_upb m2 t2)) + 1\n         )\n       )\n       else 0\n )\""], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       (\\<And>n xa. x = (n, xa) \\<Longrightarrow> P) \\<Longrightarrow> P\n 2. \\<And>n x na xa.\n       (n, x) = (na, xa) \\<Longrightarrow>\n       (let n1 = c_fst n mod 7\n        in if n1 = 0 then c_pair (c_pair n x) 0 + 1\n           else if n1 = 1 then c_pair (c_pair n x) 0 + 1\n                else if n1 = 2 then c_pair (c_pair n x) 0 + 1\n                     else if n1 = 3 then c_pair (c_pair n x) 0 + 1\n                          else if n1 = 4\n                               then let m = c_snd n; m1 = c_fst m;\n  m2 = c_snd m;\n  y = c_assoc_value (pr_gr (loc_upb_sumC (m2, x))) (c_pair m2 x)\n                                    in c_pair (c_pair n x)\n  (loc_upb_sumC (m2, x) + loc_upb_sumC (m1, y)) +\n 1\n                               else if n1 = 5\n                                    then let m = c_snd n; m1 = c_fst m;\n       m2 = c_snd m\n   in c_pair (c_pair n x) (loc_upb_sumC (m1, x) + loc_upb_sumC (m2, x)) + 1\n                                    else if n1 = 6\n   then let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x;\n            x1 = c_snd x\n        in if y1 = 0 then c_pair (c_pair n x) (loc_upb_sumC (m1, x1)) + 1\n           else let y2 = y1 - 1;\n                    t1 = c_assoc_value\n                          (pr_gr (loc_upb_sumC (n, c_pair y2 x1)))\n                          (c_pair n (c_pair y2 x1));\n                    t2 = c_pair (c_pair y2 t1) x1\n                in c_pair (c_pair n x)\n                    (loc_upb_sumC (n, c_pair y2 x1) +\n                     loc_upb_sumC (m2, t2)) +\n                   1\n   else 0) =\n       (let n1 = c_fst na mod 7\n        in if n1 = 0 then c_pair (c_pair na xa) 0 + 1\n           else if n1 = 1 then c_pair (c_pair na xa) 0 + 1\n                else if n1 = 2 then c_pair (c_pair na xa) 0 + 1\n                     else if n1 = 3 then c_pair (c_pair na xa) 0 + 1\n                          else if n1 = 4\n                               then let m = c_snd na; m1 = c_fst m;\n  m2 = c_snd m;\n  y = c_assoc_value (pr_gr (loc_upb_sumC (m2, xa))) (c_pair m2 xa)\n                                    in c_pair (c_pair na xa)\n  (loc_upb_sumC (m2, xa) + loc_upb_sumC (m1, y)) +\n 1\n                               else if n1 = 5\n                                    then let m = c_snd na; m1 = c_fst m;\n       m2 = c_snd m\n   in c_pair (c_pair na xa)\n       (loc_upb_sumC (m1, xa) + loc_upb_sumC (m2, xa)) +\n      1\n                                    else if n1 = 6\n   then let m = c_snd na; m1 = c_fst m; m2 = c_snd m; y1 = c_fst xa;\n            x1 = c_snd xa\n        in if y1 = 0 then c_pair (c_pair na xa) (loc_upb_sumC (m1, x1)) + 1\n           else let y2 = y1 - 1;\n                    t1 = c_assoc_value\n                          (pr_gr (loc_upb_sumC (na, c_pair y2 x1)))\n                          (c_pair na (c_pair y2 x1));\n                    t2 = c_pair (c_pair y2 t1) x1\n                in c_pair (c_pair na xa)\n                    (loc_upb_sumC (na, c_pair y2 x1) +\n                     loc_upb_sumC (m2, t2)) +\n                   1\n   else 0)", "by auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All loc_upb_dom", "apply (relation \"measure (\\<lambda> m. m) <*lex*> measure (\\<lambda> n. n)\")"], ["proof (prove)\ngoal (10 subgoals):\n 1. wf (measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n))\n 2. \\<And>n x xa xaa xab xac.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa = 4; xaa = c_snd n;\n        xab = c_fst xaa; xac = c_snd xaa\\<rbrakk>\n       \\<Longrightarrow> ((xac, x), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 3. \\<And>n x xa xaa xab xac xad.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa = 4; xaa = c_snd n;\n        xab = c_fst xaa; xac = c_snd xaa;\n        xad = c_assoc_value (pr_gr (loc_upb xac x)) (c_pair xac x);\n        loc_upb_dom (xac, x)\\<rbrakk>\n       \\<Longrightarrow> ((xac, x), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 4. \\<And>n x xa xaa xab xac xad.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa = 4; xaa = c_snd n;\n        xab = c_fst xaa; xac = c_snd xaa;\n        xad = c_assoc_value (pr_gr (loc_upb xac x)) (c_pair xac x);\n        loc_upb_dom (xac, x)\\<rbrakk>\n       \\<Longrightarrow> ((xab, xad), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 5. \\<And>n x xa xaa xab xac.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa = 5; xaa = c_snd n;\n        xab = c_fst xaa; xac = c_snd xaa\\<rbrakk>\n       \\<Longrightarrow> ((xab, x), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 6. \\<And>n x xa xaa xab xac.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa = 5; xaa = c_snd n;\n        xab = c_fst xaa; xac = c_snd xaa\\<rbrakk>\n       \\<Longrightarrow> ((xac, x), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 7. \\<And>n x xa xaa xab xac xad xae.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa \\<noteq> 5; xa = 6;\n        xaa = c_snd n; xab = c_fst xaa; xac = c_snd xaa; xad = c_fst x;\n        xae = c_snd x; xad = 0\\<rbrakk>\n       \\<Longrightarrow> ((xab, xae), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 8. \\<And>n x xa xaa xab xac xad xae xaf.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa \\<noteq> 5; xa = 6;\n        xaa = c_snd n; xab = c_fst xaa; xac = c_snd xaa; xad = c_fst x;\n        xae = c_snd x; xad \\<noteq> 0; xaf = xad - 1\\<rbrakk>\n       \\<Longrightarrow> ((n, c_pair xaf xae), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 9. \\<And>n x xa xaa xab xac xad xae xaf xag xah.\n       \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n        xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa \\<noteq> 5; xa = 6;\n        xaa = c_snd n; xab = c_fst xaa; xac = c_snd xaa; xad = c_fst x;\n        xae = c_snd x; xad \\<noteq> 0; xaf = xad - 1;\n        xag =\n        c_assoc_value (pr_gr (loc_upb n (c_pair xaf xae)))\n         (c_pair n (c_pair xaf xae));\n        xah = c_pair (c_pair xaf xag) xae;\n        loc_upb_dom (n, c_pair xaf xae)\\<rbrakk>\n       \\<Longrightarrow> ((n, c_pair xaf xae), n, x)\n                         \\<in> measure (\\<lambda>m. m) <*lex*>\n                               measure (\\<lambda>n. n)\n 10. \\<And>n x xa xaa xab xac xad xae xaf xag xah.\n        \\<lbrakk>xa = c_fst n mod 7; xa \\<noteq> 0; xa \\<noteq> 1;\n         xa \\<noteq> 2; xa \\<noteq> 3; xa \\<noteq> 4; xa \\<noteq> 5; xa = 6;\n         xaa = c_snd n; xab = c_fst xaa; xac = c_snd xaa; xad = c_fst x;\n         xae = c_snd x; xad \\<noteq> 0; xaf = xad - 1;\n         xag =\n         c_assoc_value (pr_gr (loc_upb n (c_pair xaf xae)))\n          (c_pair n (c_pair xaf xae));\n         xah = c_pair (c_pair xaf xag) xae;\n         loc_upb_dom (n, c_pair xaf xae)\\<rbrakk>\n        \\<Longrightarrow> ((xac, xah), n, x)\n                          \\<in> measure (\\<lambda>m. m) <*lex*>\n                                measure (\\<lambda>n. n)", "apply (simp_all add: loc_upb_lm_2_0 loc_upb_lm_2_2 loc_upb_lm_2_3 loc_upb_lm_2_4 loc_upb_lm_2_5 loc_upb_lm_2_6 loc_upb_lm_2_7)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  lex_p :: \"((nat \\<times> nat) \\<times> nat \\<times> nat) set\" where\n  \"lex_p = ((measure (\\<lambda> m. m)) <*lex*> (measure (\\<lambda> n. n)))\""], ["", "lemma wf_lex_p: \"wf(lex_p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf lex_p", "apply(simp add: lex_p_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n))", "apply(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lex_p_eq: \"((n',x'), (n,x)) \\<in> lex_p = (n'<n \\<or> n'=n \\<and> x'<x) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((n', x'), n, x) \\<in> lex_p) = (n' < n \\<or> n' = n \\<and> x' < x)", "apply(simp add: lex_p_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma loc_upb_lex_0: \"c_fst n mod 7 = 0 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A1: \"c_fst n mod 7 = 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair ?key 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 0", "have \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) 0 + 1", "by simp"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1", "have S1: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 0", "have S2: \"g_step ?ls ?key = c_cons (c_pair ?key 0) ?ls\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n    c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))", "have \"pr_gr (loc_upb n x) = c_cons (c_pair ?key 0) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) 0) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lex_1: \"c_fst n mod 7 = 1 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A1: \"c_fst n mod 7 = 1\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair ?key 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 1", "have \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) 0 + 1", "by simp"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1", "have S1: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 1", "have S2: \"g_step ?ls ?key = c_cons (c_pair ?key (Suc x)) ?ls\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n    c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))", "have \"pr_gr (loc_upb n x) = c_cons (c_pair ?key (Suc x)) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (Suc x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lex_2: \"c_fst n mod 7 = 2 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A1: \"c_fst n mod 7 = 2\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair ?key 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 2", "have \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) 0 + 1", "by simp"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1", "have S1: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 2", "have S2: \"g_step ?ls ?key = c_cons (c_pair ?key (c_fst x)) ?ls\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n    c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))", "have \"pr_gr (loc_upb n x) = c_cons (c_pair ?key (c_fst x)) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (c_fst x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lex_3: \"c_fst n mod 7 = 3 \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A1: \"c_fst n mod 7 = 3\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair ?key 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 3", "have \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) 0 + 1", "by simp"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1", "have S1: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x = c_pair (c_pair n x) 0 + 1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 3", "have S2: \"g_step ?ls ?key = c_cons (c_pair ?key (c_snd x)) ?ls\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n    c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))", "have \"pr_gr (loc_upb n x) = c_cons (c_pair ?key (c_snd x)) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_fst (c_pair (c_pair n x) 0))\n  g_step (pr_gr (c_pair (c_pair n x) 0)) (c_pair n x) =\n  c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons (c_pair (c_pair n x) (c_snd x)) (pr_gr (c_pair (c_pair n x) 0))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lex_4: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 4\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A1: \"\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (state)\nthis:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A2: \"c_fst n mod 7 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m1 = \"c_fst (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m2 = \"c_snd (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb1 where \"upb1 = loc_upb ?m2 x\""], ["proof (state)\nthis:\n  upb1 = loc_upb (c_snd (c_snd n)) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have m2_lt_n: \"?m2 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by (simp add: loc_upb_lm_2_2)"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  c_snd (c_snd n) < n", "have M2: \"((?m2, x), (n,x)) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_snd (c_snd n), x), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with A1 upb1_def"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  upb1 = loc_upb (c_snd (c_snd n)) x\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p", "have S1: \"c_assoc_have_key (pr_gr upb1) (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  upb1 = loc_upb (c_snd (c_snd n)) x\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from M2"], ["proof (chain)\npicking this:\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p", "have M2': \"((?m2, x), n, x) \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\""], ["proof (prove)\nusing this:\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. ((c_snd (c_snd n), x), n, x)\n    \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)", "by (simp add: lex_p_def)"], ["proof (state)\nthis:\n  ((c_snd (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have T1: \"c_is_sub_fun (pr_gr upb1) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (pr_gr upb1) univ_for_pr", "by (rule pr_gr_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (pr_gr upb1) univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from T1 S1"], ["proof (chain)\npicking this:\n  c_is_sub_fun (pr_gr upb1) univ_for_pr\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0", "have T2: \"c_assoc_value (pr_gr upb1) (c_pair ?m2 x) = univ_for_pr (c_pair ?m2 x)\""], ["proof (prove)\nusing this:\n  c_is_sub_fun (pr_gr upb1) univ_for_pr\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) =\n    univ_for_pr (c_pair (c_snd (c_snd n)) x)", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define y where \"y = c_assoc_value (pr_gr upb1) (c_pair ?m2 x)\""], ["proof (state)\nthis:\n  y = c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from T2 y_def"], ["proof (chain)\npicking this:\n  c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)\n  y = c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x)", "have T3: \"y = univ_for_pr (c_pair ?m2 x)\""], ["proof (prove)\nusing this:\n  c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)\n  y = c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. y = univ_for_pr (c_pair (c_snd (c_snd n)) x)", "by auto"], ["proof (state)\nthis:\n  y = univ_for_pr (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb2 where \"upb2 = loc_upb ?m1 y\""], ["proof (state)\nthis:\n  upb2 = loc_upb (c_fst (c_snd n)) y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have \"?m1 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by (simp add: loc_upb_lm_2_0)"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd n) < n", "have M1: \"((?m1, y), (n,x)) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), y), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), y), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with A1"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_fst (c_snd n), y), n, x) \\<in> lex_p", "have S2: \"c_assoc_have_key (pr_gr (loc_upb ?m1 y)) (c_pair ?m1 y) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_fst (c_snd n), y), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) y))\n     (c_pair (c_fst (c_snd n)) y) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) y))\n   (c_pair (c_fst (c_snd n)) y) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from M1"], ["proof (chain)\npicking this:\n  ((c_fst (c_snd n), y), n, x) \\<in> lex_p", "have M1': \"((?m1, y), n, x) \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\""], ["proof (prove)\nusing this:\n  ((c_fst (c_snd n), y), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), y), n, x)\n    \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)", "by (simp add: lex_p_def)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), y), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S1 upb1_def"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n  upb1 = loc_upb (c_snd (c_snd n)) x", "have S3: \"c_assoc_have_key (pr_gr upb1) (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n  upb1 = loc_upb (c_snd (c_snd n)) x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S2 upb2_def"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) y))\n   (c_pair (c_fst (c_snd n)) y) =\n  0\n  upb2 = loc_upb (c_fst (c_snd n)) y", "have S4: \"c_assoc_have_key (pr_gr upb2) (c_pair ?m1 y) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) y))\n   (c_pair (c_fst (c_snd n)) y) =\n  0\n  upb2 = loc_upb (c_fst (c_snd n)) y\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb2) (c_pair (c_fst (c_snd n)) y) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_fst (c_snd n)) y) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?s = \"c_pair ?key (upb1 + upb2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?sum_upb = \"upb1 +upb2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have \"?m1 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by (simp add: loc_upb_lm_2_0)"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd n) < n", "have \"((?m1, x), (n,x)) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), x), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p", "have M1'': \"((?m1, x), n, x) \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\""], ["proof (prove)\nusing this:\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), x), n, x)\n    \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)", "by (simp add: lex_p_def)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2 M2' M1''"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4\n  ((c_snd (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n  ((c_fst (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)", "have S11: \"loc_upb n x = (let y = c_assoc_value (pr_gr (loc_upb ?m2 x)) (c_pair ?m2 x)\n                               in (c_pair (c_pair n x)\n                                   (loc_upb ?m2 x + loc_upb ?m1 y)) + 1)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n  ((c_snd (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n  ((c_fst (c_snd n), x), n, x)\n  \\<in> measure (\\<lambda>m. m) <*lex*> measure (\\<lambda>n. n)\n\ngoal (1 subgoal):\n 1. loc_upb n x =\n    (let y = c_assoc_value (pr_gr (loc_upb (c_snd (c_snd n)) x))\n              (c_pair (c_snd (c_snd n)) x)\n     in c_pair (c_pair n x)\n         (loc_upb (c_snd (c_snd n)) x + loc_upb (c_fst (c_snd n)) y) +\n        1)", "by(simp add: Let_def)"], ["proof (state)\nthis:\n  loc_upb n x =\n  (let y = c_assoc_value (pr_gr (loc_upb (c_snd (c_snd n)) x))\n            (c_pair (c_snd (c_snd n)) x)\n   in c_pair (c_pair n x)\n       (loc_upb (c_snd (c_snd n)) x + loc_upb (c_fst (c_snd n)) y) +\n      1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb where \"upb = loc_upb n x\""], ["proof (state)\nthis:\n  upb = loc_upb n x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S11 y_def upb1_def upb2_def"], ["proof (chain)\npicking this:\n  loc_upb n x =\n  (let y = c_assoc_value (pr_gr (loc_upb (c_snd (c_snd n)) x))\n            (c_pair (c_snd (c_snd n)) x)\n   in c_pair (c_pair n x)\n       (loc_upb (c_snd (c_snd n)) x + loc_upb (c_fst (c_snd n)) y) +\n      1)\n  y = c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x)\n  upb1 = loc_upb (c_snd (c_snd n)) x\n  upb2 = loc_upb (c_fst (c_snd n)) y", "have \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  loc_upb n x =\n  (let y = c_assoc_value (pr_gr (loc_upb (c_snd (c_snd n)) x))\n            (c_pair (c_snd (c_snd n)) x)\n   in c_pair (c_pair n x)\n       (loc_upb (c_snd (c_snd n)) x + loc_upb (c_fst (c_snd n)) y) +\n      1)\n  y = c_assoc_value (pr_gr upb1) (c_pair (c_snd (c_snd n)) x)\n  upb1 = loc_upb (c_snd (c_snd n)) x\n  upb2 = loc_upb (c_fst (c_snd n)) y\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with upb_def"], ["proof (chain)\npicking this:\n  upb = loc_upb n x\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1", "have S11: \"upb = ?s + 1\""], ["proof (prove)\nusing this:\n  upb = loc_upb n x\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. upb = c_pair (c_pair n x) (upb1 + upb2) + 1", "by auto"], ["proof (state)\nthis:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have S7: \"?sum_upb \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have upb1_le_s: \"upb1 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S1: \"upb1 \\<le> ?sum_upb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 \\<le> upb1 + upb2", "by (rule Nat.le_add1)"], ["proof (state)\nthis:\n  upb1 \\<le> upb1 + upb2\n\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "from S1 S7"], ["proof (chain)\npicking this:\n  upb1 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "show ?thesis"], ["proof (prove)\nusing this:\n  upb1 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by auto"], ["proof (state)\nthis:\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have upb2_le_s: \"upb2 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S1: \"upb2 \\<le> ?sum_upb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb2 \\<le> upb1 + upb2", "by (rule Nat.le_add2)"], ["proof (state)\nthis:\n  upb2 \\<le> upb1 + upb2\n\ngoal (1 subgoal):\n 1. upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "from S1 S7"], ["proof (chain)\npicking this:\n  upb2 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "show ?thesis"], ["proof (prove)\nusing this:\n  upb2 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by auto"], ["proof (state)\nthis:\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have S18: \"pr_gr upb = g_comp ?ls ?key\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "from S11"], ["proof (chain)\npicking this:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1", "have S1: \"pr_gr upb = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_fst (c_pair (c_pair n x) (upb1 + upb2)))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 4", "have S2: \"g_step ?ls ?key = g_comp ?ls ?key\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "by auto"], ["proof (state)\nthis:\n  pr_gr upb =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pr_gr upb =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S3 upb1_le_s"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S19: \"c_assoc_have_key ?ls (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_snd (c_snd n)) x) = 0\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_snd (c_snd n)) x) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S4 upb2_le_s"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_fst (c_snd n)) y) = 0\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S20: \"c_assoc_have_key ?ls (c_pair ?m1 y) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_fst (c_snd n)) y) = 0\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_fst (c_snd n)) y) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) y) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have T_ls: \"c_is_sub_fun ?ls univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) univ_for_pr", "by (rule pr_gr_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) univ_for_pr\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from T_ls S19"], ["proof (chain)\npicking this:\n  c_is_sub_fun (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) univ_for_pr\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0", "have T_ls2: \"c_assoc_value ?ls (c_pair ?m2 x) = univ_for_pr (c_pair ?m2 x)\""], ["proof (prove)\nusing this:\n  c_is_sub_fun (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) univ_for_pr\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_snd (c_snd n)) x) =\n    univ_for_pr (c_pair (c_snd (c_snd n)) x)", "by (rule c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from T3 T_ls2"], ["proof (chain)\npicking this:\n  y = univ_for_pr (c_pair (c_snd (c_snd n)) x)\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)", "have T_y: \"c_assoc_value ?ls (c_pair ?m2 x) = y\""], ["proof (prove)\nusing this:\n  y = univ_for_pr (c_pair (c_snd (c_snd n)) x)\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  univ_for_pr (c_pair (c_snd (c_snd n)) x)\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_snd (c_snd n)) x) =\n    y", "by auto"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from T_y  S19 S20"], ["proof (chain)\npicking this:\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  y\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) y) =\n  0", "have S21: \"g_comp ?ls ?key = c_cons (c_pair ?key (c_assoc_value ?ls (c_pair ?m1 y))) ?ls\""], ["proof (prove)\nusing this:\n  c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  y\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) y) =\n  0\n\ngoal (1 subgoal):\n 1. g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) y)))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by(unfold g_comp_def)(simp del: loc_upb.simps add: Let_def)"], ["proof (state)\nthis:\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S18 S21"], ["proof (chain)\npicking this:\n  pr_gr upb =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "have \"pr_gr upb = c_cons (c_pair ?key (c_assoc_value ?ls (c_pair ?m1 y))) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr upb =\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n  g_comp (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) y)))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by auto"], ["proof (state)\nthis:\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with upb_def"], ["proof (chain)\npicking this:\n  upb = loc_upb n x\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "have \"pr_gr (loc_upb n x) = c_cons (c_pair ?key (c_assoc_value ?ls (c_pair ?m1 y))) ?ls\""], ["proof (prove)\nusing this:\n  upb = loc_upb n x\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) y)))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 4\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n       (c_pair (c_fst (c_snd n)) y)))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_lex_5: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 5\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A1: \"\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (state)\nthis:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A2: \"c_fst n mod 7 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m1 = \"c_fst (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m2 = \"c_snd (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have \"?m1 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by (simp add: loc_upb_lm_2_3)"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd n) < n", "have \"((?m1, x), (n,x)) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), x), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with A1"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p", "have S1: \"c_assoc_have_key (pr_gr (loc_upb ?m1 x)) (c_pair ?m1 x) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_fst (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) x))\n     (c_pair (c_fst (c_snd n)) x) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) x))\n   (c_pair (c_fst (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have \"?m2 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by (simp add: loc_upb_lm_2_4)"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "then"], ["proof (chain)\npicking this:\n  c_snd (c_snd n) < n", "have \"((?m2, x), (n,x)) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_snd (c_snd n), x), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "with A1"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p", "have S2: \"c_assoc_have_key (pr_gr (loc_upb ?m2 x)) (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_snd (c_snd n), x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (c_snd (c_snd n)) x))\n     (c_pair (c_snd (c_snd n)) x) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (c_snd (c_snd n)) x))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb1 where \"upb1 = loc_upb ?m1 x\""], ["proof (state)\nthis:\n  upb1 = loc_upb (c_fst (c_snd n)) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb2 where \"upb2 = loc_upb ?m2 x\""], ["proof (state)\nthis:\n  upb2 = loc_upb (c_snd (c_snd n)) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from upb1_def S1"], ["proof (chain)\npicking this:\n  upb1 = loc_upb (c_fst (c_snd n)) x\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) x))\n   (c_pair (c_fst (c_snd n)) x) =\n  0", "have S3: \"c_assoc_have_key (pr_gr upb1) (c_pair ?m1 x) = 0\""], ["proof (prove)\nusing this:\n  upb1 = loc_upb (c_fst (c_snd n)) x\n  c_assoc_have_key (pr_gr (loc_upb (c_fst (c_snd n)) x))\n   (c_pair (c_fst (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from upb2_def S2"], ["proof (chain)\npicking this:\n  upb2 = loc_upb (c_snd (c_snd n)) x\n  c_assoc_have_key (pr_gr (loc_upb (c_snd (c_snd n)) x))\n   (c_pair (c_snd (c_snd n)) x) =\n  0", "have S4: \"c_assoc_have_key (pr_gr upb2) (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  upb2 = loc_upb (c_snd (c_snd n)) x\n  c_assoc_have_key (pr_gr (loc_upb (c_snd (c_snd n)) x))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?sum_upb = \"upb1 +upb2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have S5: \"upb1 \\<le> ?sum_upb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 \\<le> upb1 + upb2", "by (rule Nat.le_add1)"], ["proof (state)\nthis:\n  upb1 \\<le> upb1 + upb2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have S6: \"upb2 \\<le> ?sum_upb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb2 \\<le> upb1 + upb2", "by (rule Nat.le_add2)"], ["proof (state)\nthis:\n  upb2 \\<le> upb1 + upb2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?s = \"(c_pair ?key ?sum_upb)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "have S7: \"?sum_upb \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S5 S7"], ["proof (chain)\npicking this:\n  upb1 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S8: \"upb1 \\<le> ?s\""], ["proof (prove)\nusing this:\n  upb1 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by auto"], ["proof (state)\nthis:\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S6 S7"], ["proof (chain)\npicking this:\n  upb2 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S9: \"upb2 \\<le> ?s\""], ["proof (prove)\nusing this:\n  upb2 \\<le> upb1 + upb2\n  upb1 + upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "by auto"], ["proof (state)\nthis:\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2 upb1_def upb2_def"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5\n  upb1 = loc_upb (c_fst (c_snd n)) x\n  upb2 = loc_upb (c_snd (c_snd n)) x", "have S10: \"loc_upb n x = ?s + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n  upb1 = loc_upb (c_fst (c_snd n)) x\n  upb2 = loc_upb (c_snd (c_snd n)) x\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb where \"upb = loc_upb n x\""], ["proof (state)\nthis:\n  upb = loc_upb n x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from upb_def S10"], ["proof (chain)\npicking this:\n  upb = loc_upb n x\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1", "have S11: \"upb = ?s + 1\""], ["proof (prove)\nusing this:\n  upb = loc_upb n x\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. upb = c_pair (c_pair n x) (upb1 + upb2) + 1", "by auto"], ["proof (state)\nthis:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S11"], ["proof (chain)\npicking this:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1", "have S12: \"pr_gr upb = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\nusing this:\n  upb = c_pair (c_pair n x) (upb1 + upb2) + 1\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_fst (c_pair (c_pair n x) (upb1 + upb2)))", "by (simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S8 S10 upb_def"], ["proof (chain)\npicking this:\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n  upb = loc_upb n x", "have S13: \"upb1 \\<le> upb\""], ["proof (prove)\nusing this:\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n  upb = loc_upb n x\n\ngoal (1 subgoal):\n 1. upb1 \\<le> upb", "by (simp only:)"], ["proof (state)\nthis:\n  upb1 \\<le> upb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S9 S10 upb_def"], ["proof (chain)\npicking this:\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n  upb = loc_upb n x", "have S14: \"upb2 \\<le> upb\""], ["proof (prove)\nusing this:\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n  loc_upb n x = c_pair (c_pair n x) (upb1 + upb2) + 1\n  upb = loc_upb n x\n\ngoal (1 subgoal):\n 1. upb2 \\<le> upb", "by (simp only:)"], ["proof (state)\nthis:\n  upb2 \\<le> upb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S3 S13"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0\n  upb1 \\<le> upb", "have S15: \"c_assoc_have_key (pr_gr upb) (c_pair ?m1 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0\n  upb1 \\<le> upb\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb) (c_pair (c_fst (c_snd n)) x) = 0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb) (c_pair (c_fst (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S4 S14"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0\n  upb2 \\<le> upb", "have S16: \"c_assoc_have_key (pr_gr upb) (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0\n  upb2 \\<le> upb\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb) (c_pair (c_snd (c_snd n)) x) = 0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb) (c_pair (c_snd (c_snd n)) x) = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 5", "have S17: \"g_step ?ls ?key = g_pair ?ls ?key\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n    g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S12 S17"], ["proof (chain)\npicking this:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "have S18: \"pr_gr upb = g_pair ?ls ?key\""], ["proof (prove)\nusing this:\n  pr_gr upb =\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_fst (c_pair (c_pair n x) (upb1 + upb2)))\n  g_step (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)", "by auto"], ["proof (state)\nthis:\n  pr_gr upb =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S3 S8"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S19: \"c_assoc_have_key ?ls (c_pair ?m1 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) x) = 0\n  upb1 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_fst (c_snd n)) x) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S4 S9"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)", "have S20: \"c_assoc_have_key ?ls (c_pair ?m2 x) = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb2) (c_pair (c_snd (c_snd n)) x) = 0\n  upb2 \\<le> c_pair (c_pair n x) (upb1 + upb2)\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n     (c_pair (c_snd (c_snd n)) x) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?y1 = \"c_assoc_value ?ls (c_pair ?m1 x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?y2 = \"c_assoc_value ?ls (c_pair ?m2 x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?y = \"c_pair ?y1 ?y2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S19 S20"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) x) =\n  0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0", "have S21: \"g_pair ?ls ?key = c_cons (c_pair ?key ?y) ?ls\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_fst (c_snd n)) x) =\n  0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n   (c_pair (c_snd (c_snd n)) x) =\n  0\n\ngoal (1 subgoal):\n 1. g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_pair\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_fst (c_snd n)) x))\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_snd (c_snd n)) x))))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by (unfold g_pair_def, simp add: Let_def)"], ["proof (state)\nthis:\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S18 S21"], ["proof (chain)\npicking this:\n  pr_gr upb =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "have S22: \"pr_gr upb = c_cons (c_pair ?key ?y) ?ls\""], ["proof (prove)\nusing this:\n  pr_gr upb =\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x)\n  g_pair (pr_gr (c_pair (c_pair n x) (upb1 + upb2))) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. pr_gr upb =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_pair\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_fst (c_snd n)) x))\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_snd (c_snd n)) x))))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by auto"], ["proof (state)\nthis:\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from upb_def S22"], ["proof (chain)\npicking this:\n  upb = loc_upb n x\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "have S23: \"pr_gr (loc_upb n x) = c_cons (c_pair ?key ?y) ?ls\""], ["proof (prove)\nusing this:\n  upb = loc_upb n x\n  pr_gr upb =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_pair\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_fst (c_snd n)) x))\n         (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n           (c_pair (c_snd (c_snd n)) x))))\n     (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 5\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "from S23"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_pair\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_fst (c_snd n)) x))\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n         (c_pair (c_snd (c_snd n)) x))))\n   (pr_gr (c_pair (c_pair n x) (upb1 + upb2)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_upb_6_z: \"\\<lbrakk>c_fst n mod 7 =6; c_fst x = 0\\<rbrakk> \\<Longrightarrow>\n  loc_upb n x = c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst n mod 7 = 6; c_fst x = 0\\<rbrakk>\n    \\<Longrightarrow> loc_upb n x =\n                      c_pair (c_pair n x)\n                       (loc_upb (c_fst (c_snd n)) (c_snd x)) +\n                      1", "by (simp add: Let_def)"], ["", "lemma loc_upb_6: \"\\<lbrakk>c_fst n mod 7 =6; c_fst x \\<noteq> 0\\<rbrakk> \\<Longrightarrow> loc_upb n x = (\n                              let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n                              y2 = y1 - 1;\n                              t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1))) (c_pair n (c_pair y2 x1));\n                              t2 = c_pair (c_pair y2 t1) x1 in\n                                c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + (loc_upb m2 t2)) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c_fst n mod 7 = 6; c_fst x \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> loc_upb n x =\n                      (let m = c_snd n; m1 = c_fst m; m2 = c_snd m;\n                           y1 = c_fst x; x1 = c_snd x; y2 = y1 - 1;\n                           t1 = c_assoc_value\n                                 (pr_gr (loc_upb n (c_pair y2 x1)))\n                                 (c_pair n (c_pair y2 x1));\n                           t2 = c_pair (c_pair y2 t1) x1\n                       in c_pair (c_pair n x)\n                           (loc_upb n (c_pair y2 x1) + loc_upb m2 t2) +\n                          1)", "by (simp add: Let_def)"], ["", "lemma loc_upb_lex_6: \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n                       c_fst n mod 7 = 6\\<rbrakk> \\<Longrightarrow>\n                       c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A1: \"\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (state)\nthis:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "assume A2: \"c_fst n mod 7 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?key = \"c_pair n x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m1 = \"c_fst (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?m2 = \"c_snd (c_snd n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?y1 = \"c_fst x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "let ?x1 = \"c_snd x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "define upb where \"upb = loc_upb n x\""], ["proof (state)\nthis:\n  upb = loc_upb n x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n' x'.\n                ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n                c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0;\n     c_fst n mod 7 = 6\\<rbrakk>\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) =\n                      0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?y1 = 0\""], ["proof (state)\nthis:\n  c_fst x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A2 A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6\n  c_fst x = 0", "have S1: \"loc_upb n x = c_pair ?key (loc_upb ?m1 (c_snd x)) + 1\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n  c_fst x = 0\n\ngoal (1 subgoal):\n 1. loc_upb n x =\n    c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1", "by (rule loc_upb_6_z)"], ["proof (state)\nthis:\n  loc_upb n x =\n  c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "define upb1 where \"upb1 = loc_upb ?m1 (c_snd x)\""], ["proof (state)\nthis:\n  upb1 = loc_upb (c_fst (c_snd n)) (c_snd x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from upb1_def S1"], ["proof (chain)\npicking this:\n  upb1 = loc_upb (c_fst (c_snd n)) (c_snd x)\n  loc_upb n x =\n  c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1", "have S2: \"loc_upb n x = c_pair ?key upb1 + 1\""], ["proof (prove)\nusing this:\n  upb1 = loc_upb (c_fst (c_snd n)) (c_snd x)\n  loc_upb n x =\n  c_pair (c_pair n x) (loc_upb (c_fst (c_snd n)) (c_snd x)) + 1\n\ngoal (1 subgoal):\n 1. loc_upb n x = c_pair (c_pair n x) upb1 + 1", "by auto"], ["proof (state)\nthis:\n  loc_upb n x = c_pair (c_pair n x) upb1 + 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair ?key upb1\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S2"], ["proof (chain)\npicking this:\n  loc_upb n x = c_pair (c_pair n x) upb1 + 1", "have S3: \"pr_gr (loc_upb n x) = pr_gr (Suc ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x = c_pair (c_pair n x) upb1 + 1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) = pr_gr (Suc (c_pair (c_pair n x) upb1))", "by simp"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) = pr_gr (Suc (c_pair (c_pair n x) upb1))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have \"pr_gr (Suc ?s) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr (Suc (c_pair (c_pair n x) upb1)) =\n    g_step (pr_gr (c_pair (c_pair n x) upb1))\n     (c_fst (c_pair (c_pair n x) upb1))", "by (rule pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr (Suc (c_pair (c_pair n x) upb1)) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1))\n   (c_fst (c_pair (c_pair n x) upb1))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S3"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) = pr_gr (Suc (c_pair (c_pair n x) upb1))\n  pr_gr (Suc (c_pair (c_pair n x) upb1)) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1))\n   (c_fst (c_pair (c_pair n x) upb1))", "have S4: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) ?key\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) = pr_gr (Suc (c_pair (c_pair n x) upb1))\n  pr_gr (Suc (c_pair (c_pair n x) upb1)) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1))\n   (c_fst (c_pair (c_pair n x) upb1))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have \"g_step ?ls ?key = g_rec ?ls ?key\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n    g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S4"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)", "have S5: \"pr_gr (loc_upb n x) = g_rec ?ls ?key\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n  g_step (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)", "by auto"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S6: \"c_assoc_have_key ?ls (c_pair ?m1 ?x1) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have \"?m1 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst (c_snd n) < n", "by (simp add: loc_upb_lm_2_5)"], ["proof (state)\nthis:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "then"], ["proof (chain)\npicking this:\n  c_fst (c_snd n) < n", "have \"((?m1,?x1), n, x) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_fst (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_fst (c_snd n), c_snd x), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_fst (c_snd n), c_snd x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "with A1 upb1_def"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  upb1 = loc_upb (c_fst (c_snd n)) (c_snd x)\n  ((c_fst (c_snd n), c_snd x), n, x) \\<in> lex_p", "have \"c_assoc_have_key (pr_gr upb1) (c_pair ?m1 ?x1) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  upb1 = loc_upb (c_fst (c_snd n)) (c_snd x)\n  ((c_fst (c_snd n), c_snd x), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) (c_snd x)) = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) (c_snd x)) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "also"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) (c_snd x)) = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "have \"upb1 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upb1 \\<le> c_pair (c_pair n x) upb1", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  upb1 \\<le> c_pair (c_pair n x) upb1\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "ultimately"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) (c_snd x)) = 0\n  upb1 \\<le> c_pair (c_pair n x) upb1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr upb1) (c_pair (c_fst (c_snd n)) (c_snd x)) = 0\n  upb1 \\<le> c_pair (c_pair n x) upb1\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n     (c_pair (c_fst (c_snd n)) (c_snd x)) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n   (c_pair (c_fst (c_snd n)) (c_snd x)) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n   (c_pair (c_fst (c_snd n)) (c_snd x)) =\n  0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A S6"], ["proof (chain)\npicking this:\n  c_fst x = 0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n   (c_pair (c_fst (c_snd n)) (c_snd x)) =\n  0", "have \"g_rec ?ls ?key = c_cons (c_pair ?key (c_assoc_value ?ls (c_pair ?m1 ?x1))) ?ls\""], ["proof (prove)\nusing this:\n  c_fst x = 0\n  c_assoc_have_key (pr_gr (c_pair (c_pair n x) upb1))\n   (c_pair (c_fst (c_snd n)) (c_snd x)) =\n  0\n\ngoal (1 subgoal):\n 1. g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_assoc_value (pr_gr (c_pair (c_pair n x) upb1))\n         (c_pair (c_fst (c_snd n)) (c_snd x))))\n     (pr_gr (c_pair (c_pair n x) upb1))", "by (simp add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) upb1))\n       (c_pair (c_fst (c_snd n)) (c_snd x))))\n   (pr_gr (c_pair (c_pair n x) upb1))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n 2. \\<not> ?P \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S5"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) upb1))\n       (c_pair (c_fst (c_snd n)) (c_snd x))))\n   (pr_gr (c_pair (c_pair n x) upb1))", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x)\n  g_rec (pr_gr (c_pair (c_pair n x) upb1)) (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value (pr_gr (c_pair (c_pair n x) upb1))\n       (c_pair (c_fst (c_snd n)) (c_snd x))))\n   (pr_gr (c_pair (c_pair n x) upb1))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"c_fst x \\<noteq> 0\""], ["proof (state)\nthis:\n  c_fst x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  c_fst x \\<noteq> 0", "have y1_pos: \"c_fst x > 0\""], ["proof (prove)\nusing this:\n  c_fst x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < c_fst x", "by auto"], ["proof (state)\nthis:\n  0 < c_fst x\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?y2 = \"?y1 - 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A2 A"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6\n  c_fst x \\<noteq> 0", "have \"loc_upb n x = (\n                              let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n                              y2 = y1 - 1;\n                              t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1))) (c_pair n (c_pair y2 x1));\n                              t2 = c_pair (c_pair y2 t1) x1 in\n                                c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + (loc_upb m2 t2)) + 1)\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n  c_fst x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. loc_upb n x =\n    (let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x;\n         x1 = c_snd x; y2 = y1 - 1;\n         t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1)))\n               (c_pair n (c_pair y2 x1));\n         t2 = c_pair (c_pair y2 t1) x1\n     in c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + loc_upb m2 t2) + 1)", "by (rule loc_upb_6)"], ["proof (state)\nthis:\n  loc_upb n x =\n  (let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n       y2 = y1 - 1;\n       t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1)))\n             (c_pair n (c_pair y2 x1));\n       t2 = c_pair (c_pair y2 t1) x1\n   in c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + loc_upb m2 t2) + 1)\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "then"], ["proof (chain)\npicking this:\n  loc_upb n x =\n  (let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n       y2 = y1 - 1;\n       t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1)))\n             (c_pair n (c_pair y2 x1));\n       t2 = c_pair (c_pair y2 t1) x1\n   in c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + loc_upb m2 t2) + 1)", "have S1: \"loc_upb n x = (\n                              let\n                              t1 = c_assoc_value (pr_gr (loc_upb n (c_pair ?y2 ?x1))) (c_pair n (c_pair ?y2 ?x1));\n                              t2 = c_pair (c_pair ?y2 t1) ?x1 in\n                                c_pair (c_pair n x) (loc_upb n (c_pair ?y2 ?x1) + (loc_upb ?m2 t2)) + 1)\""], ["proof (prove)\nusing this:\n  loc_upb n x =\n  (let m = c_snd n; m1 = c_fst m; m2 = c_snd m; y1 = c_fst x; x1 = c_snd x;\n       y2 = y1 - 1;\n       t1 = c_assoc_value (pr_gr (loc_upb n (c_pair y2 x1)))\n             (c_pair n (c_pair y2 x1));\n       t2 = c_pair (c_pair y2 t1) x1\n   in c_pair (c_pair n x) (loc_upb n (c_pair y2 x1) + loc_upb m2 t2) + 1)\n\ngoal (1 subgoal):\n 1. loc_upb n x =\n    (let t1 = c_assoc_value\n               (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n               (c_pair n (c_pair (c_fst x - 1) (c_snd x)));\n         t2 = c_pair (c_pair (c_fst x - 1) t1) (c_snd x)\n     in c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n)) t2) +\n        1)", "by (simp del: loc_upb.simps add: Let_def)"], ["proof (state)\nthis:\n  loc_upb n x =\n  (let t1 = c_assoc_value\n             (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n             (c_pair n (c_pair (c_fst x - 1) (c_snd x)));\n       t2 = c_pair (c_pair (c_fst x - 1) t1) (c_snd x)\n   in c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n)) t2) +\n      1)\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?t1 = \"univ_for_pr (c_pair n (c_pair ?y2 ?x1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?t2 = \"c_pair (c_pair ?y2 ?t1) ?x1\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S1_1: \"c_assoc_have_key (pr_gr (loc_upb n (c_pair ?y2 ?x1))) (c_pair n (c_pair ?y2 ?x1)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "from A"], ["proof (chain)\npicking this:\n  c_fst x \\<noteq> 0", "have \"?y2 < ?y1\""], ["proof (prove)\nusing this:\n  c_fst x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c_fst x - 1 < c_fst x", "by auto"], ["proof (state)\nthis:\n  c_fst x - 1 < c_fst x\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "then"], ["proof (chain)\npicking this:\n  c_fst x - 1 < c_fst x", "have \"c_pair ?y2 ?x1 < c_pair ?y1 ?x1\""], ["proof (prove)\nusing this:\n  c_fst x - 1 < c_fst x\n\ngoal (1 subgoal):\n 1. c_pair (c_fst x - 1) (c_snd x) < c_pair (c_fst x) (c_snd x)", "by (rule c_pair_strict_mono1)"], ["proof (state)\nthis:\n  c_pair (c_fst x - 1) (c_snd x) < c_pair (c_fst x) (c_snd x)\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "then"], ["proof (chain)\npicking this:\n  c_pair (c_fst x - 1) (c_snd x) < c_pair (c_fst x) (c_snd x)", "have \"((n, c_pair ?y2 ?x1),n,x) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_pair (c_fst x - 1) (c_snd x) < c_pair (c_fst x) (c_snd x)\n\ngoal (1 subgoal):\n 1. ((n, c_pair (c_fst x - 1) (c_snd x)), n, x) \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((n, c_pair (c_fst x - 1) (c_snd x)), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "with A1"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((n, c_pair (c_fst x - 1) (c_snd x)), n, x) \\<in> lex_p", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((n, c_pair (c_fst x - 1) (c_snd x)), n, x) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S2: \"c_assoc_value (pr_gr (loc_upb n (c_pair ?y2 ?x1))) (c_pair n (c_pair ?y2 ?x1)) = univ_for_pr (c_pair n (c_pair ?y2 ?x1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "have \"c_is_sub_fun (pr_gr (loc_upb n (c_pair ?y2 ?x1))) univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     univ_for_pr", "by (rule pr_gr_1)"], ["proof (state)\nthis:\n  c_is_sub_fun (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   univ_for_pr\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "with S1_1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_is_sub_fun (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   univ_for_pr", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_is_sub_fun (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   univ_for_pr\n\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "by (simp add: c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  loc_upb n x =\n  (let t1 = c_assoc_value\n             (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n             (c_pair n (c_pair (c_fst x - 1) (c_snd x)));\n       t2 = c_pair (c_pair (c_fst x - 1) t1) (c_snd x)\n   in c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n)) t2) +\n      1)\n  c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "have S3: \"loc_upb n x = c_pair (c_pair n x) (loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2) + 1\""], ["proof (prove)\nusing this:\n  loc_upb n x =\n  (let t1 = c_assoc_value\n             (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n             (c_pair n (c_pair (c_fst x - 1) (c_snd x)));\n       t2 = c_pair (c_pair (c_fst x - 1) t1) (c_snd x)\n   in c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n)) t2) +\n      1)\n  c_assoc_value (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n\ngoal (1 subgoal):\n 1. loc_upb n x =\n    c_pair (c_pair n x)\n     (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n      loc_upb (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) +\n    1", "by (simp del: loc_upb.simps add: Let_def)"], ["proof (state)\nthis:\n  loc_upb n x =\n  c_pair (c_pair n x)\n   (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n    loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) +\n  1\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?s = \"c_pair (c_pair n x) (loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S3"], ["proof (chain)\npicking this:\n  loc_upb n x =\n  c_pair (c_pair n x)\n   (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n    loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) +\n  1", "have S4: \"pr_gr (loc_upb n x) = pr_gr (Suc ?s)\""], ["proof (prove)\nusing this:\n  loc_upb n x =\n  c_pair (c_pair n x)\n   (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n    loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) +\n  1\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    pr_gr\n     (Suc (c_pair (c_pair n x)\n            (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n             loc_upb (c_snd (c_snd n))\n              (c_pair\n                (c_pair (c_fst x - 1)\n                  (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n                (c_snd x)))))", "by (simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x)))))\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have \"pr_gr (Suc ?s) = g_step (pr_gr ?s) (c_fst ?s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr\n     (Suc (c_pair (c_pair n x)\n            (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n             loc_upb (c_snd (c_snd n))\n              (c_pair\n                (c_pair (c_fst x - 1)\n                  (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n                (c_snd x))))) =\n    g_step\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_fst\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))", "by (rule pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x))))) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_fst\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S4"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x)))))\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x))))) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_fst\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))", "have S5: \"pr_gr (loc_upb n x) = g_step (pr_gr ?s) ?key\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x)))))\n  pr_gr\n   (Suc (c_pair (c_pair n x)\n          (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n           loc_upb (c_snd (c_snd n))\n            (c_pair\n              (c_pair (c_fst x - 1)\n                (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n              (c_snd x))))) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_fst\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_step\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n x)", "by (simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?ls = \"pr_gr ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have \"g_step ?ls ?key = g_rec ?ls ?key\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. g_step\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n x) =\n    g_rec\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n x)", "by (simp add: g_step_def)"], ["proof (state)\nthis:\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S5"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)", "have S6: \"pr_gr (loc_upb n x) = g_rec ?ls ?key\""], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n  g_step\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n\ngoal (1 subgoal):\n 1. pr_gr (loc_upb n x) =\n    g_rec\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n x)", "by (simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  pr_gr (loc_upb n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S7: \"c_assoc_have_key ?ls (c_pair n (c_pair ?y2 ?x1)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "have \"loc_upb n (c_pair ?y2 ?x1) \\<le> loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n    \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x))", "by (auto simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "also"], ["proof (state)\nthis:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "have \"loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n    loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "ultimately"], ["proof (chain)\npicking this:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))", "have S7_1: \"loc_upb n (c_pair ?y2 ?x1) \\<le> ?s\""], ["proof (prove)\nusing this:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "by (auto simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "from S1_1 S7_1"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb n (c_pair (c_fst x - 1) (c_snd x))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S8: \"c_assoc_value ?ls (c_pair n (c_pair ?y2 ?x1)) = ?t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_value\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "have \"c_is_sub_fun ?ls univ_for_pr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_is_sub_fun\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     univ_for_pr", "by (rule pr_gr_1)"], ["proof (state)\nthis:\n  c_is_sub_fun\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   univ_for_pr\n\ngoal (1 subgoal):\n 1. c_assoc_value\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "with S7"], ["proof (chain)\npicking this:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_is_sub_fun\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   univ_for_pr", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_is_sub_fun\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   univ_for_pr\n\ngoal (1 subgoal):\n 1. c_assoc_value\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n    univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))", "by (simp add: c_is_sub_fun_lm_1)"], ["proof (state)\nthis:\n  c_assoc_value\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_value\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S9: \"c_assoc_have_key ?ls (c_pair ?m2 ?t2) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "from A2"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 6", "have \"?m2 < n\""], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_snd (c_snd n) < n", "by (simp add: loc_upb_lm_2_6)"], ["proof (state)\nthis:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "then"], ["proof (chain)\npicking this:\n  c_snd (c_snd n) < n", "have \"((?m2,?t2), n, x) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  c_snd (c_snd n) < n\n\ngoal (1 subgoal):\n 1. ((c_snd (c_snd n),\n      c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x)),\n     n, x)\n    \\<in> lex_p", "by (simp add: lex_p_eq)"], ["proof (state)\nthis:\n  ((c_snd (c_snd n),\n    c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x)),\n   n, x)\n  \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "with A1"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_snd (c_snd n),\n    c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x)),\n   n, x)\n  \\<in> lex_p", "have \"c_assoc_have_key (pr_gr (loc_upb ?m2 ?t2)) (c_pair ?m2 ?t2) = 0\""], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  ((c_snd (c_snd n),\n    c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x)),\n   n, x)\n  \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (loc_upb (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "also"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (loc_upb (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "have \"loc_upb ?m2 ?t2 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "have \"loc_upb ?m2 ?t2 \\<le> loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x))", "by (auto simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "also"], ["proof (state)\nthis:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "have \"loc_upb n (c_pair ?y2 ?x1) + loc_upb ?m2 ?t2 \\<le> ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n    loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "ultimately"], ["proof (chain)\npicking this:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))", "show ?thesis"], ["proof (prove)\nusing this:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x))\n  loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. loc_upb (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))\n    \\<le> c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))", "by (auto simp del: loc_upb.simps)"], ["proof (state)\nthis:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "ultimately"], ["proof (chain)\npicking this:\n  c_assoc_have_key\n   (pr_gr\n     (loc_upb (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))", "show ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key\n   (pr_gr\n     (loc_upb (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n  loc_upb (c_snd (c_snd n))\n   (c_pair\n     (c_pair (c_fst x - 1)\n       (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n     (c_snd x))\n  \\<le> c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair (c_snd (c_snd n))\n       (c_pair\n         (c_pair (c_fst x - 1)\n           (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n         (c_snd x))) =\n    0", "by (rule lm5)"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A S7 S8 S9"], ["proof (chain)\npicking this:\n  c_fst x \\<noteq> 0\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_assoc_value\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0", "have \"g_rec ?ls ?key = c_cons (c_pair ?key (c_assoc_value ?ls (c_pair ?m2 ?t2))) ?ls\""], ["proof (prove)\nusing this:\n  c_fst x \\<noteq> 0\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  0\n  c_assoc_value\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n (c_pair (c_fst x - 1) (c_snd x))) =\n  univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))\n  c_assoc_have_key\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair (c_snd (c_snd n))\n     (c_pair\n       (c_pair (c_fst x - 1)\n         (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n       (c_snd x))) =\n  0\n\ngoal (1 subgoal):\n 1. g_rec\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (c_pair n x) =\n    c_cons\n     (c_pair (c_pair n x)\n       (c_assoc_value\n         (pr_gr\n           (c_pair (c_pair n x)\n             (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n              loc_upb (c_snd (c_snd n))\n               (c_pair\n                 (c_pair (c_fst x - 1)\n                   (univ_for_pr\n                     (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n                 (c_snd x)))))\n         (c_pair (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))\n     (pr_gr\n       (c_pair (c_pair n x)\n         (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n          loc_upb (c_snd (c_snd n))\n           (c_pair\n             (c_pair (c_fst x - 1)\n               (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n             (c_snd x)))))", "by (simp del: loc_upb.simps add: g_rec_def Let_def)"], ["proof (state)\nthis:\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value\n       (pr_gr\n         (c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))))\n       (c_pair (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n\ngoal (1 subgoal):\n 1. c_fst x \\<noteq> 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "with S6"], ["proof (chain)\npicking this:\n  pr_gr (loc_upb n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value\n       (pr_gr\n         (c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))))\n       (c_pair (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr (loc_upb n x) =\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x)\n  g_rec\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (c_pair n x) =\n  c_cons\n   (c_pair (c_pair n x)\n     (c_assoc_value\n       (pr_gr\n         (c_pair (c_pair n x)\n           (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n            loc_upb (c_snd (c_snd n))\n             (c_pair\n               (c_pair (c_fst x - 1)\n                 (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n               (c_snd x)))))\n       (c_pair (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n   (pr_gr\n     (c_pair (c_pair n x)\n       (loc_upb n (c_pair (c_fst x - 1) (c_snd x)) +\n        loc_upb (c_snd (c_snd n))\n         (c_pair\n           (c_pair (c_fst x - 1)\n             (univ_for_pr (c_pair n (c_pair (c_fst x - 1) (c_snd x)))))\n           (c_snd x)))))\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (simp add: c_assoc_lm_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_upb_step_0: \n  \"\\<lbrakk>\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\\<rbrakk> \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A1: \"\\<And> n' x'. ((n',x'), (n,x)) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (state)\nthis:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?n1 = \"(c_fst n) mod 7\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S1: \"?n1 = 0 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 0\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_0)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 0 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S2: \"?n1 = 1 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 1\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 1 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 1\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 1 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S3: \"?n1 = 2 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 2\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 2 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 2\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_2)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 2 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S4: \"?n1 = 3 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 3\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 3 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 3\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_3)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 3 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S5: \"?n1 = 4 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 4\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 4 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1 A"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 4", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 4\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_4)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 4 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S6: \"?n1 = 5 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 5\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 5 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1 A"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 5", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 5\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_5)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 5 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S7: \"?n1 = 6 \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "assume A: \"?n1 = 6\""], ["proof (state)\nthis:\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 6 \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from A1 A"], ["proof (chain)\npicking this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 6", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?n', ?x'), n, x) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by (rule loc_upb_lex_6)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst n mod 7 = 6 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have S8: \"?n1=0 \\<or> ?n1=1 \\<or> ?n1=2 \\<or> ?n1=3 \\<or> ?n1=4 \\<or> ?n1=5 \\<or> ?n1=6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst n mod 7 = 0 \\<or>\n    c_fst n mod 7 = 1 \\<or>\n    c_fst n mod 7 = 2 \\<or>\n    c_fst n mod 7 = 3 \\<or>\n    c_fst n mod 7 = 4 \\<or> c_fst n mod 7 = 5 \\<or> c_fst n mod 7 = 6", "by (rule mod7_lm)"], ["proof (state)\nthis:\n  c_fst n mod 7 = 0 \\<or>\n  c_fst n mod 7 = 1 \\<or>\n  c_fst n mod 7 = 2 \\<or>\n  c_fst n mod 7 = 3 \\<or>\n  c_fst n mod 7 = 4 \\<or> c_fst n mod 7 = 5 \\<or> c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), n, x) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "from S1 S2 S3 S4 S5 S6 S7 S8"], ["proof (chain)\npicking this:\n  c_fst n mod 7 = 0 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 1 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 2 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 3 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 4 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 5 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 6 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 0 \\<or>\n  c_fst n mod 7 = 1 \\<or>\n  c_fst n mod 7 = 2 \\<or>\n  c_fst n mod 7 = 3 \\<or>\n  c_fst n mod 7 = 4 \\<or> c_fst n mod 7 = 5 \\<or> c_fst n mod 7 = 6", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst n mod 7 = 0 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 1 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 2 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 3 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 4 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 5 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 6 \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n  c_fst n mod 7 = 0 \\<or>\n  c_fst n mod 7 = 1 \\<or>\n  c_fst n mod 7 = 2 \\<or>\n  c_fst n mod 7 = 3 \\<or>\n  c_fst n mod 7 = 4 \\<or> c_fst n mod 7 = 5 \\<or> c_fst n mod 7 = 6\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by fast"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_upb_step: \n  assumes A1: \"\\<And> p2. (p2, p1) \\<in> lex_p \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2))) (c_pair (fst p2) (snd p2)) = 0\"\n  shows \"c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1))) (c_pair (fst p1) (snd p1)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "let ?n = \"fst p1\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "let ?x = \"snd p1\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "from A1"], ["proof (chain)\npicking this:\n  (?p2.0, p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p2.0) (snd ?p2.0)))\n   (c_pair (fst ?p2.0) (snd ?p2.0)) =\n  0", "have S1: \"\\<And> p2. (p2, (?n, ?x)) \\<in> lex_p \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2))) (c_pair (fst p2) (snd p2)) = 0\""], ["proof (prove)\nusing this:\n  (?p2.0, p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p2.0) (snd ?p2.0)))\n   (c_pair (fst ?p2.0) (snd ?p2.0)) =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>p2.\n       (p2, fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2)))\n        (c_pair (fst p2) (snd p2)) =\n       0", "by auto"], ["proof (state)\nthis:\n  (?p2.0, fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p2.0) (snd ?p2.0)))\n   (c_pair (fst ?p2.0) (snd ?p2.0)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "have S2: \"(\\<And> n' x'. ((n',x'), (fst p1, snd p1)) \\<in> lex_p\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0) \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1))) (c_pair (fst p1) (snd p1)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "by (rule wf_upb_step_0)"], ["proof (state)\nthis:\n  (\\<And>n' x'.\n      ((n', x'), fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "then"], ["proof (chain)\npicking this:\n  (\\<And>n' x'.\n      ((n', x'), fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0", "have S3: \"(\\<And> n' x'. ((n',x'), p1) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0)\n    \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1))) (c_pair (fst p1) (snd p1)) = 0\""], ["proof (prove)\nusing this:\n  (\\<And>n' x'.\n      ((n', x'), fst p1, snd p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0\n\ngoal (1 subgoal):\n 1. (\\<And>n' x'.\n        ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n        c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n        0) \\<Longrightarrow>\n    c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "by auto"], ["proof (state)\nthis:\n  (\\<And>n' x'.\n      ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "have S4: \"\\<And>n' x'. ((n', x'), p1) \\<in> lex_p \\<Longrightarrow> c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "fix n' x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "assume A4_1: \"((n', x'), p1) \\<in> lex_p\""], ["proof (state)\nthis:\n  ((n', x'), p1) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "let ?p2 = \"(n', x')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "from A4_1"], ["proof (chain)\npicking this:\n  ((n', x'), p1) \\<in> lex_p", "have S4_1: \"(?p2, p1) \\<in> lex_p\""], ["proof (prove)\nusing this:\n  ((n', x'), p1) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. ((n', x'), p1) \\<in> lex_p", "by auto"], ["proof (state)\nthis:\n  ((n', x'), p1) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "from S4_1"], ["proof (chain)\npicking this:\n  ((n', x'), p1) \\<in> lex_p", "have \"c_assoc_have_key (pr_gr (loc_upb (fst ?p2) (snd ?p2))) (c_pair (fst ?p2) (snd ?p2)) = 0\""], ["proof (prove)\nusing this:\n  ((n', x'), p1) \\<in> lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst (n', x')) (snd (n', x'))))\n     (c_pair (fst (n', x')) (snd (n', x'))) =\n    0", "by (rule A1)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst (n', x')) (snd (n', x'))))\n   (c_pair (fst (n', x')) (snd (n', x'))) =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>n' x'.\n       ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n       c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "then"], ["proof (chain)\npicking this:\n  c_assoc_have_key (pr_gr (loc_upb (fst (n', x')) (snd (n', x'))))\n   (c_pair (fst (n', x')) (snd (n', x'))) =\n  0", "show \"c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\""], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb (fst (n', x')) (snd (n', x'))))\n   (c_pair (fst (n', x')) (snd (n', x'))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((?n', ?x'), p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "from S4 S3"], ["proof (chain)\npicking this:\n  ((?n', ?x'), p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  (\\<And>n' x'.\n      ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?n', ?x'), p1) \\<in> lex_p \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb ?n' ?x')) (c_pair ?n' ?x') = 0\n  (\\<And>n' x'.\n      ((n', x'), p1) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb n' x')) (c_pair n' x') =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n     (c_pair (fst p1) (snd p1)) =\n    0", "by auto"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst p1) (snd p1)))\n   (c_pair (fst p1) (snd p1)) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem loc_upb_main: \"c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have loc_upb_lm: \"\\<And> p. c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p))) (c_pair (fst p) (snd p)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n        (c_pair (fst p) (snd p)) =\n       0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n        (c_pair (fst p) (snd p)) =\n       0", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n        (c_pair (fst p) (snd p)) =\n       0", "show \"c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p))) (c_pair (fst p) (snd p)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n     (c_pair (fst p) (snd p)) =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n     (c_pair (fst p) (snd p)) =\n    0", "have S1: \"wf lex_p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf lex_p", "by (auto simp add: lex_p_def)"], ["proof (state)\nthis:\n  wf lex_p\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n     (c_pair (fst p) (snd p)) =\n    0", "from S1 wf_upb_step"], ["proof (chain)\npicking this:\n  wf lex_p\n  (\\<And>p2.\n      (p2, ?p1.0) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2)))\n       (c_pair (fst p2) (snd p2)) =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p1.0) (snd ?p1.0)))\n   (c_pair (fst ?p1.0) (snd ?p1.0)) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  wf lex_p\n  (\\<And>p2.\n      (p2, ?p1.0) \\<in> lex_p \\<Longrightarrow>\n      c_assoc_have_key (pr_gr (loc_upb (fst p2) (snd p2)))\n       (c_pair (fst p2) (snd p2)) =\n      0) \\<Longrightarrow>\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p1.0) (snd ?p1.0)))\n   (c_pair (fst ?p1.0) (snd ?p1.0)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n     (c_pair (fst p) (snd p)) =\n    0", "by (rule wf_induct_rule)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n   (c_pair (fst p) (snd p)) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst p) (snd p)))\n   (c_pair (fst p) (snd p)) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst ?p) (snd ?p)))\n   (c_pair (fst ?p) (snd ?p)) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "let ?p = \"(n,x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "have \"c_assoc_have_key (pr_gr (loc_upb (fst ?p) (snd ?p))) (c_pair (fst ?p) (snd ?p)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb (fst (n, x)) (snd (n, x))))\n     (c_pair (fst (n, x)) (snd (n, x))) =\n    0", "by (rule loc_upb_lm)"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb (fst (n, x)) (snd (n, x))))\n   (c_pair (fst (n, x)) (snd (n, x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_assoc_have_key (pr_gr (loc_upb (fst (n, x)) (snd (n, x))))\n   (c_pair (fst (n, x)) (snd (n, x))) =\n  0\n\ngoal (1 subgoal):\n 1. c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0", "by simp"], ["proof (state)\nthis:\n  c_assoc_have_key (pr_gr (loc_upb n x)) (c_pair n x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_gr_value: \"c_assoc_value (pr_gr (loc_upb n x)) (c_pair n x) = univ_for_pr (c_pair n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_assoc_value (pr_gr (loc_upb n x)) (c_pair n x) =\n    univ_for_pr (c_pair n x)", "by (simp del: loc_upb.simps add: loc_upb_main pr_gr_1 c_is_sub_fun_lm_1)"], ["", "theorem g_comp_is_pr: \"g_comp \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_comp \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g_comp \\<in> PrimRec2", "from c_assoc_have_key_is_pr c_assoc_value_is_pr c_cons_is_pr"], ["proof (chain)\npicking this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2", "have \"(\\<lambda> x y. g_comp x y) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_comp \\<in> PrimRec2", "unfolding g_comp_def Let_def"], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y.\n        if c_assoc_have_key x (c_pair (c_snd (c_snd (c_fst y))) (c_snd y)) =\n           0\n        then if c_assoc_have_key x\n                 (c_pair (c_fst (c_snd (c_fst y)))\n                   (c_assoc_value x\n                     (c_pair (c_snd (c_snd (c_fst y))) (c_snd y)))) =\n                0\n             then c_cons\n                   (c_pair y\n                     (c_assoc_value x\n                       (c_pair (c_fst (c_snd (c_fst y)))\n                         (c_assoc_value x\n                           (c_pair (c_snd (c_snd (c_fst y))) (c_snd y))))))\n                   x\n             else x\n        else x)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  g_comp \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_comp \\<in> PrimRec2", "thus ?thesis"], ["proof (prove)\nusing this:\n  g_comp \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_comp \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  g_comp \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem g_pair_is_pr: \"g_pair \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_pair \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g_pair \\<in> PrimRec2", "from c_assoc_have_key_is_pr c_assoc_value_is_pr c_cons_is_pr"], ["proof (chain)\npicking this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2", "have \"(\\<lambda> x y. g_pair x y) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_pair \\<in> PrimRec2", "unfolding g_pair_def Let_def"], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y.\n        if c_assoc_have_key x (c_pair (c_fst (c_snd (c_fst y))) (c_snd y)) =\n           0\n        then if c_assoc_have_key x\n                 (c_pair (c_snd (c_snd (c_fst y))) (c_snd y)) =\n                0\n             then c_cons\n                   (c_pair y\n                     (c_pair\n                       (c_assoc_value x\n                         (c_pair (c_fst (c_snd (c_fst y))) (c_snd y)))\n                       (c_assoc_value x\n                         (c_pair (c_snd (c_snd (c_fst y))) (c_snd y)))))\n                   x\n             else x\n        else x)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  g_pair \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_pair \\<in> PrimRec2", "thus ?thesis"], ["proof (prove)\nusing this:\n  g_pair \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_pair \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  g_pair \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem g_rec_is_pr: \"g_rec \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_rec \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g_rec \\<in> PrimRec2", "from c_assoc_have_key_is_pr c_assoc_value_is_pr c_cons_is_pr"], ["proof (chain)\npicking this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2", "have \"(\\<lambda> x y. g_rec x y) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_rec \\<in> PrimRec2", "unfolding g_rec_def Let_def"], ["proof (prove)\nusing this:\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y.\n        if c_fst (c_snd y) = 0\n        then if c_assoc_have_key x\n                 (c_pair (c_fst (c_snd (c_fst y))) (c_snd (c_snd y))) =\n                0\n             then c_cons\n                   (c_pair y\n                     (c_assoc_value x\n                       (c_pair (c_fst (c_snd (c_fst y)))\n                         (c_snd (c_snd y)))))\n                   x\n             else x\n        else if c_assoc_have_key x\n                 (c_pair (c_fst y)\n                   (c_pair (c_fst (c_snd y) - 1) (c_snd (c_snd y)))) =\n                0\n             then if c_assoc_have_key x\n                      (c_pair (c_snd (c_snd (c_fst y)))\n                        (c_pair\n                          (c_pair (c_fst (c_snd y) - 1)\n                            (c_assoc_value x\n                              (c_pair (c_fst y)\n                                (c_pair (c_fst (c_snd y) - 1)\n                                  (c_snd (c_snd y))))))\n                          (c_snd (c_snd y)))) =\n                     0\n                  then c_cons\n                        (c_pair y\n                          (c_assoc_value x\n                            (c_pair (c_snd (c_snd (c_fst y)))\n                              (c_pair\n                                (c_pair (c_fst (c_snd y) - 1)\n                                  (c_assoc_value x\n                                    (c_pair (c_fst y)\n(c_pair (c_fst (c_snd y) - 1) (c_snd (c_snd y))))))\n                                (c_snd (c_snd y))))))\n                        x\n                  else x\n             else x)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  g_rec \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_rec \\<in> PrimRec2", "thus ?thesis"], ["proof (prove)\nusing this:\n  g_rec \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_rec \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  g_rec \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem g_step_is_pr: \"g_step \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_step \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g_step \\<in> PrimRec2", "from g_comp_is_pr g_pair_is_pr g_rec_is_pr mod_is_pr c_assoc_have_key_is_pr c_assoc_value_is_pr c_cons_is_pr"], ["proof (chain)\npicking this:\n  g_comp \\<in> PrimRec2\n  g_pair \\<in> PrimRec2\n  g_rec \\<in> PrimRec2\n  (mod) \\<in> PrimRec2\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2", "have\n    \"(\\<lambda> ls key. g_step ls key) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g_comp \\<in> PrimRec2\n  g_pair \\<in> PrimRec2\n  g_rec \\<in> PrimRec2\n  (mod) \\<in> PrimRec2\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_step \\<in> PrimRec2", "unfolding g_step_def Let_def"], ["proof (prove)\nusing this:\n  g_comp \\<in> PrimRec2\n  g_pair \\<in> PrimRec2\n  g_rec \\<in> PrimRec2\n  (mod) \\<in> PrimRec2\n  c_assoc_have_key \\<in> PrimRec2\n  c_assoc_value \\<in> PrimRec2\n  c_cons \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>ls key.\n        if c_fst (c_fst key) mod 7 = 0 then c_cons (c_pair key 0) ls\n        else if c_fst (c_fst key) mod 7 = 1\n             then c_cons (c_pair key (Suc (c_snd key))) ls\n             else if c_fst (c_fst key) mod 7 = 2\n                  then c_cons (c_pair key (c_fst (c_snd key))) ls\n                  else if c_fst (c_fst key) mod 7 = 3\n                       then c_cons (c_pair key (c_snd (c_snd key))) ls\n                       else if c_fst (c_fst key) mod 7 = 4\n                            then g_comp ls key\n                            else if c_fst (c_fst key) mod 7 = 5\n                                 then g_pair ls key\n                                 else if c_fst (c_fst key) mod 7 = 6\nthen g_rec ls key else ls)\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  g_step \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_step \\<in> PrimRec2", "thus ?thesis"], ["proof (prove)\nusing this:\n  g_step \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g_step \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  g_step \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_gr_is_pr: \"pr_gr \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_gr \\<in> PrimRec1", "have S1: \"(\\<lambda> x. pr_gr x) = PrimRecOp1 0 (\\<lambda> x y. g_step y (c_fst x))\" (is \"_ = ?f\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. pr_gr x = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. pr_gr x = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) x", "show \"pr_gr x = ?f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_gr x = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) x", "by (induct x) (simp add: pr_gr_at_0, simp add: pr_gr_at_Suc)"], ["proof (state)\nthis:\n  pr_gr x = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pr_gr = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x))\n\ngoal (1 subgoal):\n 1. pr_gr \\<in> PrimRec1", "have S2: \"PrimRecOp1 0 (\\<lambda> x y. g_step y (c_fst x)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec1", "proof (rule pr_rec1)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec2", "from g_step_is_pr"], ["proof (chain)\npicking this:\n  g_step \\<in> PrimRec2", "show \"(\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g_step \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_gr \\<in> PrimRec1", "from S1 S2"], ["proof (chain)\npicking this:\n  pr_gr = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x))\n  PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_gr = PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x))\n  PrimRecOp1 0 (\\<lambda>x y. g_step y (c_fst x)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_gr \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  pr_gr \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}