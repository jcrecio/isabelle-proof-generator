{"file_name": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I/PRecFinSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I", "problem_names": ["lemma c_in_is_pr: \"c_in \\<in> PrimRec2\"", "lemma c_in_upper_bound: \"c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u\"", "lemma nat_to_set_upper_bound: \"x \\<in> nat_to_set u \\<Longrightarrow> 2 ^ x \\<le> u\"", "lemma x_lt_2_x: \"x < 2 ^ x\"", "lemma nat_to_set_upper_bound1: \"x \\<in> nat_to_set u \\<Longrightarrow> x < u\"", "lemma nat_to_set_upper_bound2: \"nat_to_set u \\<subseteq> {i. i < u}\"", "lemma nat_to_set_is_finite: \"finite (nat_to_set u)\"", "lemma x_in_u_eq: \"(x \\<in> nat_to_set u) = (c_in x u = 1)\"", "lemma log2_at_0: \"log2 0 = 0\"", "lemma log2_at_1: \"log2 1 = 0\"", "lemma log2_le: \"x > 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x\"", "lemma log2_gt: \"x < 2 ^ (log2 x + 1)\"", "lemma x_div_x: \"x > 0 \\<Longrightarrow> (x::nat) div x = 1\"", "lemma div_ge: \"(k::nat) \\<le> m div n \\<Longrightarrow> n*k \\<le> m\"", "lemma div_lt: \"m < n*k \\<Longrightarrow> m div n < (k::nat)\"", "lemma log2_lm1: \"u > 0 \\<Longrightarrow> u div 2 ^ (log2 u) = 1\"", "lemma log2_lm2: \"u > 0 \\<Longrightarrow> c_in (log2 u) u = 1\"", "lemma log2_lm3: \"log2 u < x \\<Longrightarrow> c_in x u = 0\"", "lemma log2_lm4: \"c_in x u = 1 \\<Longrightarrow> x \\<le> log2 u\"", "lemma nat_to_set_lub: \"x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u\"", "lemma log2_lm5: \"u > 0 \\<Longrightarrow> log2 u \\<in> nat_to_set u\"", "lemma pos_imp_ne: \"u > 0 \\<Longrightarrow> nat_to_set u \\<noteq> {}\"", "lemma empty_is_zero: \"nat_to_set u = {} \\<Longrightarrow> u = 0\"", "lemma log2_is_max: \"u > 0 \\<Longrightarrow> log2 u = Max (nat_to_set u)\"", "lemma zero_is_empty: \"nat_to_set 0 = {}\"", "lemma ne_imp_pos: \"nat_to_set u \\<noteq> {} \\<Longrightarrow> u > 0\"", "lemma div_mod_lm: \"y < x \\<Longrightarrow> ((u + (2::nat) ^ x) div (2::nat)^y) mod 2 = (u div (2::nat)^y) mod 2\"", "lemma add_power: \"u < 2^x \\<Longrightarrow> nat_to_set (u + 2^x) = nat_to_set u \\<union> {x}\"", "theorem nat_to_set_inj: \"nat_to_set u = nat_to_set v \\<Longrightarrow> u = v\"", "lemma two_power_sum: \"sum (\\<lambda> x. (2::nat) ^ x) {i. i< Suc m} = (2 ^ Suc m) - 1\"", "lemma finite_interval: \"finite {i. (i::nat)<m}\"", "lemma set_to_nat_at_empty: \"set_to_nat {} = 0\"", "lemma set_to_nat_of_interval: \"set_to_nat {i. (i::nat)<m} = 2 ^ m - 1\"", "lemma set_to_nat_mono: \"\\<lbrakk> finite B; A \\<subseteq> B\\<rbrakk> \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B\"", "theorem nat_to_set_srj: \"finite (D::nat set) \\<Longrightarrow> nat_to_set (set_to_nat D) = D\"", "theorem nat_to_set_srj1: \"finite (D::nat set) \\<Longrightarrow> \\<exists> u. nat_to_set u = D\"", "lemma sum_of_pr_is_pr: \"g \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> n. sum g {i. i<n}) \\<in> PrimRec1\"", "lemma sum_of_pr_is_pr2: \"p \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> n m. sum (\\<lambda> x. p x m) {i. i<n}) \\<in> PrimRec2\"", "lemma sum_is_pr: \"g \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> u. sum g (nat_to_set u)) \\<in> PrimRec1\"", "theorem c_card_is_pr: \"c_card \\<in> PrimRec1\"", "lemma c_insert_is_pr: \"c_insert \\<in> PrimRec2\"", "lemma [simp]: \"set_to_nat (nat_to_set u) = u\"", "lemma insert_lemma: \"x \\<notin> nat_to_set u \\<Longrightarrow> set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\"", "lemma c_insert_df: \"c_insert = (\\<lambda> x u. set_to_nat ((nat_to_set u) \\<union> {x}))\"", "lemma c_remove_is_pr: \"c_remove \\<in> PrimRec2\"", "lemma remove_lemma: \"x \\<in> nat_to_set u \\<Longrightarrow> set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\"", "lemma c_remove_df: \"c_remove = (\\<lambda> x u. set_to_nat ((nat_to_set u) - {x}))\"", "theorem c_union_is_pr: \"c_union \\<in> PrimRec2\"", "theorem c_diff_is_pr: \"c_diff \\<in> PrimRec2\"", "theorem c_intersect_is_pr: \"c_intersect \\<in> PrimRec2\""], "translations": [["", "lemma c_in_is_pr: \"c_in \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "from mod_is_pr power_is_pr div_is_pr"], ["proof (chain)\npicking this:\n  (mod) \\<in> PrimRec2\n  (^) \\<in> PrimRec2\n  (div) \\<in> PrimRec2", "have \"(\\<lambda> x u. (u div (2 ^ x)) mod 2) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (mod) \\<in> PrimRec2\n  (^) \\<in> PrimRec2\n  (div) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x u. u div 2 ^ x mod 2) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x u. u div 2 ^ x mod 2) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "with c_in_def"], ["proof (chain)\npicking this:\n  c_in = (\\<lambda>x u. u div 2 ^ x mod 2)\n  (\\<lambda>x u. u div 2 ^ x mod 2) \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  c_in = (\\<lambda>x u. u div 2 ^ x mod 2)\n  (\\<lambda>x u. u div 2 ^ x mod 2) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  c_in \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  nat_to_set :: \"nat \\<Rightarrow> nat set\" where\n  \"nat_to_set u \\<equiv> {x. 2^x \\<le> u \\<and> c_in x u = 1}\""], ["", "lemma c_in_upper_bound: \"c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u", "assume A: \"c_in x u = 1\""], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u", "then"], ["proof (chain)\npicking this:\n  c_in x u = 1", "have S1: \"(u div (2^x)) mod 2 = 1\""], ["proof (prove)\nusing this:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. u div 2 ^ x mod 2 = 1", "by (unfold c_in_def)"], ["proof (state)\nthis:\n  u div 2 ^ x mod 2 = 1\n\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u", "then"], ["proof (chain)\npicking this:\n  u div 2 ^ x mod 2 = 1", "have S2: \"u div (2^x) > 0\""], ["proof (prove)\nusing this:\n  u div 2 ^ x mod 2 = 1\n\ngoal (1 subgoal):\n 1. 0 < u div 2 ^ x", "by arith"], ["proof (state)\nthis:\n  0 < u div 2 ^ x\n\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> 2 ^ x \\<le> u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ x \\<le> u", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 ^ x \\<le> u \\<Longrightarrow> False", "assume \"\\<not> 2 ^ x \\<le> u\""], ["proof (state)\nthis:\n  \\<not> 2 ^ x \\<le> u\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ x \\<le> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> 2 ^ x \\<le> u", "have \"u < 2^x\""], ["proof (prove)\nusing this:\n  \\<not> 2 ^ x \\<le> u\n\ngoal (1 subgoal):\n 1. u < 2 ^ x", "by auto"], ["proof (state)\nthis:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ x \\<le> u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u < 2 ^ x", "have \"u div (2^x) = 0\""], ["proof (prove)\nusing this:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. u div 2 ^ x = 0", "by (rule div_less)"], ["proof (state)\nthis:\n  u div 2 ^ x = 0\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ x \\<le> u \\<Longrightarrow> False", "with S2"], ["proof (chain)\npicking this:\n  0 < u div 2 ^ x\n  u div 2 ^ x = 0", "show False"], ["proof (prove)\nusing this:\n  0 < u div 2 ^ x\n  u div 2 ^ x = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ x \\<le> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_set_upper_bound: \"x \\<in> nat_to_set u \\<Longrightarrow> 2 ^ x \\<le> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> 2 ^ x \\<le> u", "by (simp add: nat_to_set_def)"], ["", "lemma x_lt_2_x: \"x < 2 ^ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 2 ^ x", "by (induct x) auto"], ["", "lemma nat_to_set_upper_bound1: \"x \\<in> nat_to_set u \\<Longrightarrow> x < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x < u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x < u", "assume \"x \\<in> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x < u", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have S1: \"2 ^ x \\<le> u\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 2 ^ x \\<le> u", "by (simp add: nat_to_set_def)"], ["proof (state)\nthis:\n  2 ^ x \\<le> u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x < u", "have S2: \"x < 2 ^ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 2 ^ x", "by (rule x_lt_2_x)"], ["proof (state)\nthis:\n  x < 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x < u", "from S1 S2"], ["proof (chain)\npicking this:\n  2 ^ x \\<le> u\n  x < 2 ^ x", "show ?thesis"], ["proof (prove)\nusing this:\n  2 ^ x \\<le> u\n  x < 2 ^ x\n\ngoal (1 subgoal):\n 1. x < u", "by auto"], ["proof (state)\nthis:\n  x < u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_set_upper_bound2: \"nat_to_set u \\<subseteq> {i. i < u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<subseteq> {i. i < u}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u \\<subseteq> {i. i < u}", "from nat_to_set_upper_bound1"], ["proof (chain)\npicking this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<subseteq> {i. i < u}", "by blast"], ["proof (state)\nthis:\n  nat_to_set u \\<subseteq> {i. i < u}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_set_is_finite: \"finite (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "have S1: \"finite {i. i<u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i < u}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {i. i < u}", "let ?B = \"{i. i<u}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite {i. i < u}", "let ?f = \"(\\<lambda> (x::nat). x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite {i. i < u}", "have \"?B = ?f ` ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < u} = (\\<lambda>x. x) ` {i. i < u}", "by auto"], ["proof (state)\nthis:\n  {i. i < u} = (\\<lambda>x. x) ` {i. i < u}\n\ngoal (1 subgoal):\n 1. finite {i. i < u}", "then"], ["proof (chain)\npicking this:\n  {i. i < u} = (\\<lambda>x. x) ` {i. i < u}", "show \"finite ?B\""], ["proof (prove)\nusing this:\n  {i. i < u} = (\\<lambda>x. x) ` {i. i < u}\n\ngoal (1 subgoal):\n 1. finite {i. i < u}", "by (rule nat_seg_image_imp_finite)"], ["proof (state)\nthis:\n  finite {i. i < u}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {i. i < u}\n\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "have S2: \"nat_to_set u \\<subseteq> {i. i<u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<subseteq> {i. i < u}", "by (rule nat_to_set_upper_bound2)"], ["proof (state)\nthis:\n  nat_to_set u \\<subseteq> {i. i < u}\n\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "from S2 S1"], ["proof (chain)\npicking this:\n  nat_to_set u \\<subseteq> {i. i < u}\n  finite {i. i < u}", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_set u \\<subseteq> {i. i < u}\n  finite {i. i < u}\n\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite (nat_to_set u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma x_in_u_eq: \"(x \\<in> nat_to_set u) = (c_in x u = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> nat_to_set u) = (c_in x u = 1)", "by (auto simp add: nat_to_set_def c_in_upper_bound)"], ["", "definition\n  log2 :: \"nat \\<Rightarrow> nat\" where\n  \"log2 = (\\<lambda> x. Least(%z. x < 2^(z+1)))\""], ["", "lemma log2_at_0: \"log2 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 0 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. log2 0 = 0", "let ?v = \"log2 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. log2 0 = 0", "have S1: \"0 \\<le> ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> log2 0", "by auto"], ["proof (state)\nthis:\n  0 \\<le> log2 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "have S2: \"?v = Least(%(z::nat). (0::nat)<2^(z+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 0 = (LEAST z. 0 < 2 ^ (z + 1))", "by (simp add: log2_def)"], ["proof (state)\nthis:\n  log2 0 = (LEAST z. 0 < 2 ^ (z + 1))\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "have S3: \"(0::nat)<2^(0+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ (0 + 1)", "by auto"], ["proof (state)\nthis:\n  0 < 2 ^ (0 + 1)\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "from S3"], ["proof (chain)\npicking this:\n  0 < 2 ^ (0 + 1)", "have S4: \"Least(%(z::nat). (0::nat)<2^(z+1)) \\<le> 0\""], ["proof (prove)\nusing this:\n  0 < 2 ^ (0 + 1)\n\ngoal (1 subgoal):\n 1. (LEAST z. 0 < 2 ^ (z + 1)) \\<le> 0", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST z. 0 < 2 ^ (z + 1)) \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "from S2 S4"], ["proof (chain)\npicking this:\n  log2 0 = (LEAST z. 0 < 2 ^ (z + 1))\n  (LEAST z. 0 < 2 ^ (z + 1)) \\<le> 0", "have S5: \"?v \\<le> 0\""], ["proof (prove)\nusing this:\n  log2 0 = (LEAST z. 0 < 2 ^ (z + 1))\n  (LEAST z. 0 < 2 ^ (z + 1)) \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 0 \\<le> 0", "by auto"], ["proof (state)\nthis:\n  log2 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "from S1 S5"], ["proof (chain)\npicking this:\n  0 \\<le> log2 0\n  log2 0 \\<le> 0", "have S6: \"?v = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> log2 0\n  log2 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "by auto"], ["proof (state)\nthis:\n  log2 0 = 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  log2 0 = 0\n\ngoal (1 subgoal):\n 1. log2 0 = 0", "by auto"], ["proof (state)\nthis:\n  log2 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_at_1: \"log2 1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 1 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. log2 1 = 0", "let ?v = \"log2 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. log2 1 = 0", "have S1: \"0 \\<le> ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> log2 1", "by auto"], ["proof (state)\nthis:\n  0 \\<le> log2 1\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "have S2: \"?v = Least(%(z::nat). (1::nat)<2^(z+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 1 = (LEAST z. 1 < 2 ^ (z + 1))", "by (simp add: log2_def)"], ["proof (state)\nthis:\n  log2 1 = (LEAST z. 1 < 2 ^ (z + 1))\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "have S3: \"(1::nat)<2^(0+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 2 ^ (0 + 1)", "by auto"], ["proof (state)\nthis:\n  1 < 2 ^ (0 + 1)\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "from S3"], ["proof (chain)\npicking this:\n  1 < 2 ^ (0 + 1)", "have S4: \"Least(%(z::nat). (1::nat)<2^(z+1)) \\<le> 0\""], ["proof (prove)\nusing this:\n  1 < 2 ^ (0 + 1)\n\ngoal (1 subgoal):\n 1. (LEAST z. 1 < 2 ^ (z + 1)) \\<le> 0", "by (rule Least_le)"], ["proof (state)\nthis:\n  (LEAST z. 1 < 2 ^ (z + 1)) \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "from S2 S4"], ["proof (chain)\npicking this:\n  log2 1 = (LEAST z. 1 < 2 ^ (z + 1))\n  (LEAST z. 1 < 2 ^ (z + 1)) \\<le> 0", "have S5: \"?v \\<le> 0\""], ["proof (prove)\nusing this:\n  log2 1 = (LEAST z. 1 < 2 ^ (z + 1))\n  (LEAST z. 1 < 2 ^ (z + 1)) \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 1 \\<le> 0", "by auto"], ["proof (state)\nthis:\n  log2 1 \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "from S1 S5"], ["proof (chain)\npicking this:\n  0 \\<le> log2 1\n  log2 1 \\<le> 0", "have S6: \"?v = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> log2 1\n  log2 1 \\<le> 0\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "by auto"], ["proof (state)\nthis:\n  log2 1 = 0\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  log2 1 = 0\n\ngoal (1 subgoal):\n 1. log2 1 = 0", "by auto"], ["proof (state)\nthis:\n  log2 1 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_le: \"x > 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> 2 ^ log2 x \\<le> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> 2 ^ log2 x \\<le> x", "assume A: \"x > 0\""], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> 2 ^ log2 x \\<le> x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ log2 x \\<le> x", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 2 ^ log2 x \\<le> x\n 2. \\<not> ?P \\<Longrightarrow> 2 ^ log2 x \\<le> x", "assume A1: \"log2 x = 0\""], ["proof (state)\nthis:\n  log2 x = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 2 ^ log2 x \\<le> x\n 2. \\<not> ?P \\<Longrightarrow> 2 ^ log2 x \\<le> x", "with A"], ["proof (chain)\npicking this:\n  0 < x\n  log2 x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  log2 x = 0\n\ngoal (1 subgoal):\n 1. 2 ^ log2 x \\<le> x", "by auto"], ["proof (state)\nthis:\n  2 ^ log2 x \\<le> x\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "assume A1: \"log2 x \\<noteq> 0\""], ["proof (state)\nthis:\n  log2 x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "then"], ["proof (chain)\npicking this:\n  log2 x \\<noteq> 0", "have S1: \"log2 x > 0\""], ["proof (prove)\nusing this:\n  log2 x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < log2 x", "by auto"], ["proof (state)\nthis:\n  0 < log2 x\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "define y where \"y = log2 x - 1\""], ["proof (state)\nthis:\n  y = log2 x - 1\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "from S1 y_def"], ["proof (chain)\npicking this:\n  0 < log2 x\n  y = log2 x - 1", "have S2: \"log2 x = y + 1\""], ["proof (prove)\nusing this:\n  0 < log2 x\n  y = log2 x - 1\n\ngoal (1 subgoal):\n 1. log2 x = y + 1", "by auto"], ["proof (state)\nthis:\n  log2 x = y + 1\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "then"], ["proof (chain)\npicking this:\n  log2 x = y + 1", "have S3: \"y < log2 x\""], ["proof (prove)\nusing this:\n  log2 x = y + 1\n\ngoal (1 subgoal):\n 1. y < log2 x", "by auto"], ["proof (state)\nthis:\n  y < log2 x\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "have \"2^(y+1) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (y + 1) \\<le> x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 ^ (y + 1) \\<le> x \\<Longrightarrow> False", "assume A2: \"\\<not> 2^(y+1) \\<le> x\""], ["proof (state)\nthis:\n  \\<not> 2 ^ (y + 1) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ (y + 1) \\<le> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> 2 ^ (y + 1) \\<le> x", "have \"x < 2^(y+1)\""], ["proof (prove)\nusing this:\n  \\<not> 2 ^ (y + 1) \\<le> x\n\ngoal (1 subgoal):\n 1. x < 2 ^ (y + 1)", "by auto"], ["proof (state)\nthis:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ (y + 1) \\<le> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x < 2 ^ (y + 1)", "have \"log2 x \\<le> y\""], ["proof (prove)\nusing this:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. log2 x \\<le> y", "by (simp add: log2_def Least_le)"], ["proof (state)\nthis:\n  log2 x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ (y + 1) \\<le> x \\<Longrightarrow> False", "with S3"], ["proof (chain)\npicking this:\n  y < log2 x\n  log2 x \\<le> y", "show False"], ["proof (prove)\nusing this:\n  y < log2 x\n  log2 x \\<le> y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (y + 1) \\<le> x\n\ngoal (1 subgoal):\n 1. log2 x \\<noteq> 0 \\<Longrightarrow> 2 ^ log2 x \\<le> x", "with S2"], ["proof (chain)\npicking this:\n  log2 x = y + 1\n  2 ^ (y + 1) \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  log2 x = y + 1\n  2 ^ (y + 1) \\<le> x\n\ngoal (1 subgoal):\n 1. 2 ^ log2 x \\<le> x", "by auto"], ["proof (state)\nthis:\n  2 ^ log2 x \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ log2 x \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_gt: \"x < 2 ^ (log2 x + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "have \"x < 2^x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < 2 ^ x", "by (rule x_lt_2_x)"], ["proof (state)\nthis:\n  x < 2 ^ x\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "then"], ["proof (chain)\npicking this:\n  x < 2 ^ x", "have S1: \"x < 2^(x+1)\""], ["proof (prove)\nusing this:\n  x < 2 ^ x\n\ngoal (1 subgoal):\n 1. x < 2 ^ (x + 1)", "by simp"], ["proof (state)\nthis:\n  x < 2 ^ (x + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "define y where \"y = x\""], ["proof (state)\nthis:\n  y = x\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "from S1 y_def"], ["proof (chain)\npicking this:\n  x < 2 ^ (x + 1)\n  y = x", "have S2: \"x < 2^(y+1)\""], ["proof (prove)\nusing this:\n  x < 2 ^ (x + 1)\n  y = x\n\ngoal (1 subgoal):\n 1. x < 2 ^ (y + 1)", "by auto"], ["proof (state)\nthis:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "let ?P = \"\\<lambda> z. x < 2^(z+1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "from S2"], ["proof (chain)\npicking this:\n  x < 2 ^ (y + 1)", "have S3: \"?P y\""], ["proof (prove)\nusing this:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ (y + 1)", "by auto"], ["proof (state)\nthis:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "then"], ["proof (chain)\npicking this:\n  x < 2 ^ (y + 1)", "have S4: \"?P (Least ?P)\""], ["proof (prove)\nusing this:\n  x < 2 ^ (y + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ ((LEAST z. x < 2 ^ (z + 1)) + 1)", "by (rule LeastI)"], ["proof (state)\nthis:\n  x < 2 ^ ((LEAST z. x < 2 ^ (z + 1)) + 1)\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "from log2_def"], ["proof (chain)\npicking this:\n  log2 = (\\<lambda>x. LEAST z. x < 2 ^ (z + 1))", "have S5: \"log2 x = Least ?P\""], ["proof (prove)\nusing this:\n  log2 = (\\<lambda>x. LEAST z. x < 2 ^ (z + 1))\n\ngoal (1 subgoal):\n 1. log2 x = (LEAST z. x < 2 ^ (z + 1))", "by (unfold log2_def, auto)"], ["proof (state)\nthis:\n  log2 x = (LEAST z. x < 2 ^ (z + 1))\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "from S4 S5"], ["proof (chain)\npicking this:\n  x < 2 ^ ((LEAST z. x < 2 ^ (z + 1)) + 1)\n  log2 x = (LEAST z. x < 2 ^ (z + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  x < 2 ^ ((LEAST z. x < 2 ^ (z + 1)) + 1)\n  log2 x = (LEAST z. x < 2 ^ (z + 1))\n\ngoal (1 subgoal):\n 1. x < 2 ^ (log2 x + 1)", "by auto"], ["proof (state)\nthis:\n  x < 2 ^ (log2 x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma x_div_x: \"x > 0 \\<Longrightarrow> (x::nat) div x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow> x div x = 1", "by auto"], ["", "lemma div_ge: \"(k::nat) \\<le> m div n \\<Longrightarrow> n*k \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "assume A: \"k \\<le> m div n\""], ["proof (state)\nthis:\n  k \\<le> m div n\n\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "have S1: \"n * (m div n) + m mod n = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n * (m div n) + m mod n = m", "by (rule mult_div_mod_eq)"], ["proof (state)\nthis:\n  n * (m div n) + m mod n = m\n\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "have S2: \"0 \\<le> m mod n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> m mod n", "by auto"], ["proof (state)\nthis:\n  0 \\<le> m mod n\n\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "from S1 S2"], ["proof (chain)\npicking this:\n  n * (m div n) + m mod n = m\n  0 \\<le> m mod n", "have S3: \"n * (m div n) \\<le> m\""], ["proof (prove)\nusing this:\n  n * (m div n) + m mod n = m\n  0 \\<le> m mod n\n\ngoal (1 subgoal):\n 1. n * (m div n) \\<le> m", "by arith"], ["proof (state)\nthis:\n  n * (m div n) \\<le> m\n\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "from A"], ["proof (chain)\npicking this:\n  k \\<le> m div n", "have S4: \"n * k \\<le>  n * (m div n)\""], ["proof (prove)\nusing this:\n  k \\<le> m div n\n\ngoal (1 subgoal):\n 1. n * k \\<le> n * (m div n)", "by auto"], ["proof (state)\nthis:\n  n * k \\<le> n * (m div n)\n\ngoal (1 subgoal):\n 1. k \\<le> m div n \\<Longrightarrow> n * k \\<le> m", "from S4 S3"], ["proof (chain)\npicking this:\n  n * k \\<le> n * (m div n)\n  n * (m div n) \\<le> m", "show ?thesis"], ["proof (prove)\nusing this:\n  n * k \\<le> n * (m div n)\n  n * (m div n) \\<le> m\n\ngoal (1 subgoal):\n 1. n * k \\<le> m", "by (rule order_trans)"], ["proof (state)\nthis:\n  n * k \\<le> m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma div_lt: \"m < n*k \\<Longrightarrow> m div n < (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n * k \\<Longrightarrow> m div n < k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m < n * k \\<Longrightarrow> m div n < k", "assume A: \"m < n*k\""], ["proof (state)\nthis:\n  m < n * k\n\ngoal (1 subgoal):\n 1. m < n * k \\<Longrightarrow> m div n < k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. m div n < k", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m div n < k \\<Longrightarrow> False", "assume \"\\<not> m div n < k\""], ["proof (state)\nthis:\n  \\<not> m div n < k\n\ngoal (1 subgoal):\n 1. \\<not> m div n < k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> m div n < k", "have S1: \"k \\<le> m div n\""], ["proof (prove)\nusing this:\n  \\<not> m div n < k\n\ngoal (1 subgoal):\n 1. k \\<le> m div n", "by auto"], ["proof (state)\nthis:\n  k \\<le> m div n\n\ngoal (1 subgoal):\n 1. \\<not> m div n < k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  k \\<le> m div n", "have S2: \"n*k \\<le> m\""], ["proof (prove)\nusing this:\n  k \\<le> m div n\n\ngoal (1 subgoal):\n 1. n * k \\<le> m", "by (rule div_ge)"], ["proof (state)\nthis:\n  n * k \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> m div n < k \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  m < n * k\n  n * k \\<le> m", "show False"], ["proof (prove)\nusing this:\n  m < n * k\n  n * k \\<le> m\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m div n < k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_lm1: \"u > 0 \\<Longrightarrow> u div 2 ^ (log2 u) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "assume A: \"u > 0\""], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "then"], ["proof (chain)\npicking this:\n  0 < u", "have S1: \"2^(log2 u) \\<le> u\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. 2 ^ log2 u \\<le> u", "by (rule log2_le)"], ["proof (state)\nthis:\n  2 ^ log2 u \\<le> u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "have S2: \"u < 2^(log2 u+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < 2 ^ (log2 u + 1)", "by (rule log2_gt)"], ["proof (state)\nthis:\n  u < 2 ^ (log2 u + 1)\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "then"], ["proof (chain)\npicking this:\n  u < 2 ^ (log2 u + 1)", "have S3: \"u < (2^log2 u)*2\""], ["proof (prove)\nusing this:\n  u < 2 ^ (log2 u + 1)\n\ngoal (1 subgoal):\n 1. u < 2 ^ log2 u * 2", "by simp"], ["proof (state)\nthis:\n  u < 2 ^ log2 u * 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "have \"(2::nat) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2", "by simp"], ["proof (state)\nthis:\n  0 < 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "then"], ["proof (chain)\npicking this:\n  0 < 2", "have \"(2::nat)^log2 u > 0\""], ["proof (prove)\nusing this:\n  0 < 2\n\ngoal (1 subgoal):\n 1. 0 < 2 ^ log2 u", "by simp"], ["proof (state)\nthis:\n  0 < 2 ^ log2 u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "then"], ["proof (chain)\npicking this:\n  0 < 2 ^ log2 u", "have S4: \"(2::nat)^log2 u div 2^log2 u = 1\""], ["proof (prove)\nusing this:\n  0 < 2 ^ log2 u\n\ngoal (1 subgoal):\n 1. 2 ^ log2 u div 2 ^ log2 u = 1", "by auto"], ["proof (state)\nthis:\n  2 ^ log2 u div 2 ^ log2 u = 1\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "from S1"], ["proof (chain)\npicking this:\n  2 ^ log2 u \\<le> u", "have S5: \"(2::nat)^log2 u div 2^log2 u  \\<le> u div 2^log2 u\""], ["proof (prove)\nusing this:\n  2 ^ log2 u \\<le> u\n\ngoal (1 subgoal):\n 1. 2 ^ log2 u div 2 ^ log2 u \\<le> u div 2 ^ log2 u", "by (rule div_le_mono)"], ["proof (state)\nthis:\n  2 ^ log2 u div 2 ^ log2 u \\<le> u div 2 ^ log2 u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "with S4"], ["proof (chain)\npicking this:\n  2 ^ log2 u div 2 ^ log2 u = 1\n  2 ^ log2 u div 2 ^ log2 u \\<le> u div 2 ^ log2 u", "have S6: \"1 \\<le> u div 2^log2 u\""], ["proof (prove)\nusing this:\n  2 ^ log2 u div 2 ^ log2 u = 1\n  2 ^ log2 u div 2 ^ log2 u \\<le> u div 2 ^ log2 u\n\ngoal (1 subgoal):\n 1. 1 \\<le> u div 2 ^ log2 u", "by auto"], ["proof (state)\nthis:\n  1 \\<le> u div 2 ^ log2 u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "from S3"], ["proof (chain)\npicking this:\n  u < 2 ^ log2 u * 2", "have S7: \"u div 2^log2 u < 2\""], ["proof (prove)\nusing this:\n  u < 2 ^ log2 u * 2\n\ngoal (1 subgoal):\n 1. u div 2 ^ log2 u < 2", "by (rule div_lt)"], ["proof (state)\nthis:\n  u div 2 ^ log2 u < 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> u div 2 ^ log2 u = 1", "from S6 S7"], ["proof (chain)\npicking this:\n  1 \\<le> u div 2 ^ log2 u\n  u div 2 ^ log2 u < 2", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> u div 2 ^ log2 u\n  u div 2 ^ log2 u < 2\n\ngoal (1 subgoal):\n 1. u div 2 ^ log2 u = 1", "by auto"], ["proof (state)\nthis:\n  u div 2 ^ log2 u = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_lm2: \"u > 0 \\<Longrightarrow> c_in (log2 u) u = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "assume A: \"u > 0\""], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "then"], ["proof (chain)\npicking this:\n  0 < u", "have S1: \"u div 2 ^ (log2 u) = 1\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. u div 2 ^ log2 u = 1", "by (rule log2_lm1)"], ["proof (state)\nthis:\n  u div 2 ^ log2 u = 1\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "have \"c_in (log2 u) u = (u div 2 ^ (log2 u)) mod 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in (log2 u) u = u div 2 ^ log2 u mod 2", "by (simp add: c_in_def)"], ["proof (state)\nthis:\n  c_in (log2 u) u = u div 2 ^ log2 u mod 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "also"], ["proof (state)\nthis:\n  c_in (log2 u) u = u div 2 ^ log2 u mod 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "from S1"], ["proof (chain)\npicking this:\n  u div 2 ^ log2 u = 1", "have \"\\<dots> = 1 mod 2\""], ["proof (prove)\nusing this:\n  u div 2 ^ log2 u = 1\n\ngoal (1 subgoal):\n 1. u div 2 ^ log2 u mod 2 = 1 mod 2", "by simp"], ["proof (state)\nthis:\n  u div 2 ^ log2 u mod 2 = 1 mod 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "also"], ["proof (state)\nthis:\n  u div 2 ^ log2 u mod 2 = 1 mod 2\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 mod 2 = 1", "by auto"], ["proof (state)\nthis:\n  1 mod 2 = 1\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> c_in (log2 u) u = 1", "finally"], ["proof (chain)\npicking this:\n  c_in (log2 u) u = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_in (log2 u) u = 1\n\ngoal (1 subgoal):\n 1. c_in (log2 u) u = 1", "by auto"], ["proof (state)\nthis:\n  c_in (log2 u) u = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_lm3: \"log2 u < x \\<Longrightarrow> c_in x u = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "assume A: \"log2 u < x\""], ["proof (state)\nthis:\n  log2 u < x\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "then"], ["proof (chain)\npicking this:\n  log2 u < x", "have S1: \"(log2 u)+1 \\<le> x\""], ["proof (prove)\nusing this:\n  log2 u < x\n\ngoal (1 subgoal):\n 1. log2 u + 1 \\<le> x", "by auto"], ["proof (state)\nthis:\n  log2 u + 1 \\<le> x\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "have S2: \"1 \\<le> (2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 2", "by auto"], ["proof (state)\nthis:\n  1 \\<le> 2\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "from S1 S2"], ["proof (chain)\npicking this:\n  log2 u + 1 \\<le> x\n  1 \\<le> 2", "have S3: \"(2::nat)^ ((log2 u)+1) \\<le> 2^x\""], ["proof (prove)\nusing this:\n  log2 u + 1 \\<le> x\n  1 \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 ^ (log2 u + 1) \\<le> 2 ^ x", "by (rule power_increasing)"], ["proof (state)\nthis:\n  2 ^ (log2 u + 1) \\<le> 2 ^ x\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "have S4: \"u < (2::nat)^ ((log2 u)+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < 2 ^ (log2 u + 1)", "by (rule log2_gt)"], ["proof (state)\nthis:\n  u < 2 ^ (log2 u + 1)\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "from S3 S4"], ["proof (chain)\npicking this:\n  2 ^ (log2 u + 1) \\<le> 2 ^ x\n  u < 2 ^ (log2 u + 1)", "have S5: \"u < 2^x\""], ["proof (prove)\nusing this:\n  2 ^ (log2 u + 1) \\<le> 2 ^ x\n  u < 2 ^ (log2 u + 1)\n\ngoal (1 subgoal):\n 1. u < 2 ^ x", "by auto"], ["proof (state)\nthis:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "then"], ["proof (chain)\npicking this:\n  u < 2 ^ x", "have S6: \"u div 2^x = 0\""], ["proof (prove)\nusing this:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. u div 2 ^ x = 0", "by (rule div_less)"], ["proof (state)\nthis:\n  u div 2 ^ x = 0\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "have \"c_in x u = (u div 2^x) mod 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in x u = u div 2 ^ x mod 2", "by (simp add: c_in_def)"], ["proof (state)\nthis:\n  c_in x u = u div 2 ^ x mod 2\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "also"], ["proof (state)\nthis:\n  c_in x u = u div 2 ^ x mod 2\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "from S6"], ["proof (chain)\npicking this:\n  u div 2 ^ x = 0", "have \"\\<dots> = 0 mod 2\""], ["proof (prove)\nusing this:\n  u div 2 ^ x = 0\n\ngoal (1 subgoal):\n 1. u div 2 ^ x mod 2 = 0 mod 2", "by simp"], ["proof (state)\nthis:\n  u div 2 ^ x mod 2 = 0 mod 2\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "also"], ["proof (state)\nthis:\n  u div 2 ^ x mod 2 = 0 mod 2\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 mod 2 = 0", "by auto"], ["proof (state)\nthis:\n  0 mod 2 = 0\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "finally"], ["proof (chain)\npicking this:\n  c_in x u = 0", "have ?thesis"], ["proof (prove)\nusing this:\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. c_in x u = 0", "by auto"], ["proof (state)\nthis:\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. log2 u < x \\<Longrightarrow> c_in x u = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. c_in x u = 0", "by auto"], ["proof (state)\nthis:\n  c_in x u = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_lm4: \"c_in x u = 1 \\<Longrightarrow> x \\<le> log2 u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> x \\<le> log2 u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> x \\<le> log2 u", "assume A: \"c_in x u = 1\""], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. c_in x u = 1 \\<Longrightarrow> x \\<le> log2 u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> log2 u", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<le> log2 u \\<Longrightarrow> False", "assume \"\\<not> x \\<le> log2 u\""], ["proof (state)\nthis:\n  \\<not> x \\<le> log2 u\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> log2 u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<le> log2 u", "have S1: \"log2 u < x\""], ["proof (prove)\nusing this:\n  \\<not> x \\<le> log2 u\n\ngoal (1 subgoal):\n 1. log2 u < x", "by auto"], ["proof (state)\nthis:\n  log2 u < x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> log2 u \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  log2 u < x", "have S2: \"c_in x u = 0\""], ["proof (prove)\nusing this:\n  log2 u < x\n\ngoal (1 subgoal):\n 1. c_in x u = 0", "by (rule log2_lm3)"], ["proof (state)\nthis:\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> log2 u \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  c_in x u = 1\n  c_in x u = 0", "show False"], ["proof (prove)\nusing this:\n  c_in x u = 1\n  c_in x u = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> log2 u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_set_lub: \"x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u", "assume \"x \\<in> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have S1: \"c_in x u = 1\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow> x \\<le> log2 u", "then"], ["proof (chain)\npicking this:\n  c_in x u = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. x \\<le> log2 u", "by (rule log2_lm4)"], ["proof (state)\nthis:\n  x \\<le> log2 u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_lm5: \"u > 0 \\<Longrightarrow> log2 u \\<in> nat_to_set u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u \\<in> nat_to_set u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u \\<in> nat_to_set u", "assume A: \"u > 0\""], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  0 < u", "have \"c_in (log2 u) u = 1\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. c_in (log2 u) u = 1", "by (rule log2_lm2)"], ["proof (state)\nthis:\n  c_in (log2 u) u = 1\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  c_in (log2 u) u = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_in (log2 u) u = 1\n\ngoal (1 subgoal):\n 1. log2 u \\<in> nat_to_set u", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  log2 u \\<in> nat_to_set u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pos_imp_ne: \"u > 0 \\<Longrightarrow> nat_to_set u \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> nat_to_set u \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> nat_to_set u \\<noteq> {}", "assume \"u > 0\""], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> nat_to_set u \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  0 < u", "have \"log2 u \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. log2 u \\<in> nat_to_set u", "by (rule log2_lm5)"], ["proof (state)\nthis:\n  log2 u \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> nat_to_set u \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  log2 u \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma empty_is_zero: \"nat_to_set u = {} \\<Longrightarrow> u = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u = {} \\<Longrightarrow> u = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u = {}; u \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"nat_to_set u = {}\""], ["proof (state)\nthis:\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u = {}; u \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "assume A2: \"u \\<noteq> 0\""], ["proof (state)\nthis:\n  u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u = {}; u \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u \\<noteq> 0", "have S1: \"u > 0\""], ["proof (prove)\nusing this:\n  u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < u", "by auto"], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u = {}; u \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "from S1"], ["proof (chain)\npicking this:\n  0 < u", "have \"nat_to_set u \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<noteq> {}", "by (rule pos_imp_ne)"], ["proof (state)\nthis:\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u = {}; u \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  nat_to_set u = {}\n  nat_to_set u \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  nat_to_set u = {}\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma log2_is_max: \"u > 0 \\<Longrightarrow> log2 u = Max (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "assume A: \"u > 0\""], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "then"], ["proof (chain)\npicking this:\n  0 < u", "have S1: \"log2 u \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. log2 u \\<in> nat_to_set u", "by (rule log2_lm5)"], ["proof (state)\nthis:\n  log2 u \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "define max where \"max = Max (nat_to_set u)\""], ["proof (state)\nthis:\n  max = Max (nat_to_set u)\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "from A"], ["proof (chain)\npicking this:\n  0 < u", "have ne: \"nat_to_set u \\<noteq> {}\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<noteq> {}", "by (rule pos_imp_ne)"], ["proof (state)\nthis:\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "have finite: \"finite (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "by (rule nat_to_set_is_finite)"], ["proof (state)\nthis:\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "from max_def finite ne"], ["proof (chain)\npicking this:\n  max = Max (nat_to_set u)\n  finite (nat_to_set u)\n  nat_to_set u \\<noteq> {}", "have max_in: \"max \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  max = Max (nat_to_set u)\n  finite (nat_to_set u)\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. max \\<in> nat_to_set u", "by simp"], ["proof (state)\nthis:\n  max \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "from max_in"], ["proof (chain)\npicking this:\n  max \\<in> nat_to_set u", "have S2: \"c_in max u = 1\""], ["proof (prove)\nusing this:\n  max \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in max u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in max u = 1\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "then"], ["proof (chain)\npicking this:\n  c_in max u = 1", "have S3: \"max \\<le> log2 u\""], ["proof (prove)\nusing this:\n  c_in max u = 1\n\ngoal (1 subgoal):\n 1. max \\<le> log2 u", "by (rule log2_lm4)"], ["proof (state)\nthis:\n  max \\<le> log2 u\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "from finite ne S1 max_def"], ["proof (chain)\npicking this:\n  finite (nat_to_set u)\n  nat_to_set u \\<noteq> {}\n  log2 u \\<in> nat_to_set u\n  max = Max (nat_to_set u)", "have S4: \"log2 u \\<le> max\""], ["proof (prove)\nusing this:\n  finite (nat_to_set u)\n  nat_to_set u \\<noteq> {}\n  log2 u \\<in> nat_to_set u\n  max = Max (nat_to_set u)\n\ngoal (1 subgoal):\n 1. log2 u \\<le> max", "by simp"], ["proof (state)\nthis:\n  log2 u \\<le> max\n\ngoal (1 subgoal):\n 1. 0 < u \\<Longrightarrow> log2 u = Max (nat_to_set u)", "from S3 S4 max_def"], ["proof (chain)\npicking this:\n  max \\<le> log2 u\n  log2 u \\<le> max\n  max = Max (nat_to_set u)", "show ?thesis"], ["proof (prove)\nusing this:\n  max \\<le> log2 u\n  log2 u \\<le> max\n  max = Max (nat_to_set u)\n\ngoal (1 subgoal):\n 1. log2 u = Max (nat_to_set u)", "by auto"], ["proof (state)\nthis:\n  log2 u = Max (nat_to_set u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zero_is_empty: \"nat_to_set 0 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set 0 = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set 0 = {}", "have S1: \"{i. i<(0::nat)} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < 0} = {}", "by blast"], ["proof (state)\nthis:\n  {i. i < 0} = {}\n\ngoal (1 subgoal):\n 1. nat_to_set 0 = {}", "have S2: \"nat_to_set 0 \\<subseteq> {i. i<0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set 0 \\<subseteq> {i. i < 0}", "by (rule nat_to_set_upper_bound2)"], ["proof (state)\nthis:\n  nat_to_set 0 \\<subseteq> {i. i < 0}\n\ngoal (1 subgoal):\n 1. nat_to_set 0 = {}", "from S1 S2"], ["proof (chain)\npicking this:\n  {i. i < 0} = {}\n  nat_to_set 0 \\<subseteq> {i. i < 0}", "show ?thesis"], ["proof (prove)\nusing this:\n  {i. i < 0} = {}\n  nat_to_set 0 \\<subseteq> {i. i < 0}\n\ngoal (1 subgoal):\n 1. nat_to_set 0 = {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set 0 = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ne_imp_pos: \"nat_to_set u \\<noteq> {} \\<Longrightarrow> u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<noteq> {} \\<Longrightarrow> 0 < u", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u \\<noteq> {}; \\<not> 0 < u\\<rbrakk>\n    \\<Longrightarrow> False", "assume A1: \"nat_to_set u \\<noteq> {}\""], ["proof (state)\nthis:\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u \\<noteq> {}; \\<not> 0 < u\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not> 0 < u\""], ["proof (state)\nthis:\n  \\<not> 0 < u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u \\<noteq> {}; \\<not> 0 < u\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> 0 < u", "have \"u = 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < u\n\ngoal (1 subgoal):\n 1. u = 0", "by auto"], ["proof (state)\nthis:\n  u = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u \\<noteq> {}; \\<not> 0 < u\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u = 0", "have \"nat_to_set u = {}\""], ["proof (prove)\nusing this:\n  u = 0\n\ngoal (1 subgoal):\n 1. nat_to_set u = {}", "by (simp add: zero_is_empty)"], ["proof (state)\nthis:\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_set u \\<noteq> {}; \\<not> 0 < u\\<rbrakk>\n    \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  nat_to_set u \\<noteq> {}\n  nat_to_set u = {}", "show False"], ["proof (prove)\nusing this:\n  nat_to_set u \\<noteq> {}\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma div_mod_lm: \"y < x \\<Longrightarrow> ((u + (2::nat) ^ x) div (2::nat)^y) mod 2 = (u div (2::nat)^y) mod 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "assume y_lt_x: \"y < x\""], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "let ?n = \"(2::nat)^y\""], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have n_pos: \"0 < ?n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ y", "by auto"], ["proof (state)\nthis:\n  0 < 2 ^ y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "let ?s = \"x-y\""], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from y_lt_x"], ["proof (chain)\npicking this:\n  y < x", "have s_pos: \"0 < ?s\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. 0 < x - y", "by auto"], ["proof (state)\nthis:\n  0 < x - y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from y_lt_x"], ["proof (chain)\npicking this:\n  y < x", "have S3: \"x = y + ?s\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. x = y + (x - y)", "by auto"], ["proof (state)\nthis:\n  x = y + (x - y)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from S3"], ["proof (chain)\npicking this:\n  x = y + (x - y)", "have \"(2::nat)^x = (2::nat)^(y + ?s)\""], ["proof (prove)\nusing this:\n  x = y + (x - y)\n\ngoal (1 subgoal):\n 1. 2 ^ x = 2 ^ (y + (x - y))", "by auto"], ["proof (state)\nthis:\n  2 ^ x = 2 ^ (y + (x - y))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "moreover"], ["proof (state)\nthis:\n  2 ^ x = 2 ^ (y + (x - y))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have \"(2::nat)^(y +?s) = (2::nat)^y * 2^ ?s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (y + (x - y)) = 2 ^ y * 2 ^ (x - y)", "by (rule power_add)"], ["proof (state)\nthis:\n  2 ^ (y + (x - y)) = 2 ^ y * 2 ^ (x - y)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "ultimately"], ["proof (chain)\npicking this:\n  2 ^ x = 2 ^ (y + (x - y))\n  2 ^ (y + (x - y)) = 2 ^ y * 2 ^ (x - y)", "have \"(2::nat)^x = 2^y * 2^?s\""], ["proof (prove)\nusing this:\n  2 ^ x = 2 ^ (y + (x - y))\n  2 ^ (y + (x - y)) = 2 ^ y * 2 ^ (x - y)\n\ngoal (1 subgoal):\n 1. 2 ^ x = 2 ^ y * 2 ^ (x - y)", "by auto"], ["proof (state)\nthis:\n  2 ^ x = 2 ^ y * 2 ^ (x - y)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "then"], ["proof (chain)\npicking this:\n  2 ^ x = 2 ^ y * 2 ^ (x - y)", "have S4: \"u + (2::nat)^x = u + (2::nat)^y * 2^?s\""], ["proof (prove)\nusing this:\n  2 ^ x = 2 ^ y * 2 ^ (x - y)\n\ngoal (1 subgoal):\n 1. u + 2 ^ x = u + 2 ^ y * 2 ^ (x - y)", "by auto"], ["proof (state)\nthis:\n  u + 2 ^ x = u + 2 ^ y * 2 ^ (x - y)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from n_pos"], ["proof (chain)\npicking this:\n  0 < 2 ^ y", "have S5: \"(u + (2::nat)^y * 2^?s) div 2^y = 2^?s + (u div 2^y)\""], ["proof (prove)\nusing this:\n  0 < 2 ^ y\n\ngoal (1 subgoal):\n 1. (u + 2 ^ y * 2 ^ (x - y)) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y", "by simp"], ["proof (state)\nthis:\n  (u + 2 ^ y * 2 ^ (x - y)) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from S4 S5"], ["proof (chain)\npicking this:\n  u + 2 ^ x = u + 2 ^ y * 2 ^ (x - y)\n  (u + 2 ^ y * 2 ^ (x - y)) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y", "have S6: \"(u + (2::nat)^x) div 2^y = 2^?s + (u div 2^y)\""], ["proof (prove)\nusing this:\n  u + 2 ^ x = u + 2 ^ y * 2 ^ (x - y)\n  (u + 2 ^ y * 2 ^ (x - y)) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y", "by auto"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from s_pos"], ["proof (chain)\npicking this:\n  0 < x - y", "have S8: \"?s = (?s - 1) + 1\""], ["proof (prove)\nusing this:\n  0 < x - y\n\ngoal (1 subgoal):\n 1. x - y = x - y - 1 + 1", "by auto"], ["proof (state)\nthis:\n  x - y = x - y - 1 + 1\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have \"(2::nat) ^ ((?s - (1::nat)) + (1::nat)) = (2::nat) ^ (?s - (1::nat)) * 2^1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (x - y - 1 + 1) = 2 ^ (x - y - 1) * 2 ^ 1", "by (rule power_add)"], ["proof (state)\nthis:\n  2 ^ (x - y - 1 + 1) = 2 ^ (x - y - 1) * 2 ^ 1\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "with S8"], ["proof (chain)\npicking this:\n  x - y = x - y - 1 + 1\n  2 ^ (x - y - 1 + 1) = 2 ^ (x - y - 1) * 2 ^ 1", "have S9: \"(2::nat) ^ ?s = (2::nat) ^ (?s - (1::nat)) * 2\""], ["proof (prove)\nusing this:\n  x - y = x - y - 1 + 1\n  2 ^ (x - y - 1 + 1) = 2 ^ (x - y - 1) * 2 ^ 1\n\ngoal (1 subgoal):\n 1. 2 ^ (x - y) = 2 ^ (x - y - 1) * 2", "by auto"], ["proof (state)\nthis:\n  2 ^ (x - y) = 2 ^ (x - y - 1) * 2\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "then"], ["proof (chain)\npicking this:\n  2 ^ (x - y) = 2 ^ (x - y - 1) * 2", "have S10: \"2^?s + (u div 2^y) = (u div 2^y) + (2::nat) ^ (?s - (1::nat)) * 2\""], ["proof (prove)\nusing this:\n  2 ^ (x - y) = 2 ^ (x - y - 1) * 2\n\ngoal (1 subgoal):\n 1. 2 ^ (x - y) + u div 2 ^ y = u div 2 ^ y + 2 ^ (x - y - 1) * 2", "by auto"], ["proof (state)\nthis:\n  2 ^ (x - y) + u div 2 ^ y = u div 2 ^ y + 2 ^ (x - y - 1) * 2\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have S11: \"((u div 2^y) + (2::nat) ^ (?s - (1::nat)) * 2) mod 2 = (u div 2^y) mod 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u div 2 ^ y + 2 ^ (x - y - 1) * 2) mod 2 = u div 2 ^ y mod 2", "by (rule mod_mult_self1)"], ["proof (state)\nthis:\n  (u div 2 ^ y + 2 ^ (x - y - 1) * 2) mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "from S6 S10 S11"], ["proof (chain)\npicking this:\n  (u + 2 ^ x) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y\n  2 ^ (x - y) + u div 2 ^ y = u div 2 ^ y + 2 ^ (x - y - 1) * 2\n  (u div 2 ^ y + 2 ^ (x - y - 1) * 2) mod 2 = u div 2 ^ y mod 2", "show ?thesis"], ["proof (prove)\nusing this:\n  (u + 2 ^ x) div 2 ^ y = 2 ^ (x - y) + u div 2 ^ y\n  2 ^ (x - y) + u div 2 ^ y = u div 2 ^ y + 2 ^ (x - y - 1) * 2\n  (u div 2 ^ y + 2 ^ (x - y - 1) * 2) mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "by auto"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_power: \"u < 2^x \\<Longrightarrow> nat_to_set (u + 2^x) = nat_to_set u \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < 2 ^ x \\<Longrightarrow>\n    nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u < 2 ^ x \\<Longrightarrow>\n    nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}", "assume A: \"u < 2^x\""], ["proof (state)\nthis:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. u < 2 ^ x \\<Longrightarrow>\n    nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}", "have log2_is_x: \"log2 (u+2^x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log2 (u + 2 ^ x) = x", "proof (unfold log2_def, rule Least_equality)"], ["proof (state)\ngoal (2 subgoals):\n 1. u + 2 ^ x < 2 ^ (x + 1)\n 2. \\<And>y. u + 2 ^ x < 2 ^ (y + 1) \\<Longrightarrow> x \\<le> y", "from A"], ["proof (chain)\npicking this:\n  u < 2 ^ x", "show \"u+2^x < 2^(x+1)\""], ["proof (prove)\nusing this:\n  u < 2 ^ x\n\ngoal (1 subgoal):\n 1. u + 2 ^ x < 2 ^ (x + 1)", "by auto"], ["proof (state)\nthis:\n  u + 2 ^ x < 2 ^ (x + 1)\n\ngoal (1 subgoal):\n 1. \\<And>y. u + 2 ^ x < 2 ^ (y + 1) \\<Longrightarrow> x \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. u + 2 ^ x < 2 ^ (y + 1) \\<Longrightarrow> x \\<le> y", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. u + 2 ^ x < 2 ^ (y + 1) \\<Longrightarrow> x \\<le> y", "assume A1: \"u + 2^x < 2^(z+1)\""], ["proof (state)\nthis:\n  u + 2 ^ x < 2 ^ (z + 1)\n\ngoal (1 subgoal):\n 1. \\<And>y. u + 2 ^ x < 2 ^ (y + 1) \\<Longrightarrow> x \\<le> y", "show \"x \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> z", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "assume \"\\<not> x \\<le> z\""], ["proof (state)\nthis:\n  \\<not> x \\<le> z\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<le> z", "have \"z < x\""], ["proof (prove)\nusing this:\n  \\<not> x \\<le> z\n\ngoal (1 subgoal):\n 1. z < x", "by auto"], ["proof (state)\nthis:\n  z < x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  z < x", "have L1: \"z+1 \\<le> x\""], ["proof (prove)\nusing this:\n  z < x\n\ngoal (1 subgoal):\n 1. z + 1 \\<le> x", "by auto"], ["proof (state)\nthis:\n  z + 1 \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "have L2: \"1 \\<le> (2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 2", "by auto"], ["proof (state)\nthis:\n  1 \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "from L1 L2"], ["proof (chain)\npicking this:\n  z + 1 \\<le> x\n  1 \\<le> 2", "have L3: \"(2::nat)^(z+1) \\<le> (2::nat)^x\""], ["proof (prove)\nusing this:\n  z + 1 \\<le> x\n  1 \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 ^ (z + 1) \\<le> 2 ^ x", "by (rule power_increasing)"], ["proof (state)\nthis:\n  2 ^ (z + 1) \\<le> 2 ^ x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> z \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  u + 2 ^ x < 2 ^ (z + 1)\n  2 ^ (z + 1) \\<le> 2 ^ x", "show False"], ["proof (prove)\nusing this:\n  u + 2 ^ x < 2 ^ (z + 1)\n  2 ^ (z + 1) \\<le> 2 ^ x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  log2 (u + 2 ^ x) = x\n\ngoal (1 subgoal):\n 1. u < 2 ^ x \\<Longrightarrow>\n    nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}", "proof (rule subset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. nat_to_set (u + 2 ^ x) \\<subseteq> nat_to_set u \\<union> {x}\n 2. nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)", "show \"nat_to_set (u + 2 ^ x) \\<subseteq> nat_to_set u \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set (u + 2 ^ x) \\<subseteq> nat_to_set u \\<union> {x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set (u + 2 ^ x) \\<Longrightarrow>\n       xa \\<in> nat_to_set u \\<union> {x}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set (u + 2 ^ x) \\<Longrightarrow>\n       xa \\<in> nat_to_set u \\<union> {x}", "assume A1: \"y \\<in> nat_to_set (u + 2 ^ x)\""], ["proof (state)\nthis:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set (u + 2 ^ x) \\<Longrightarrow>\n       xa \\<in> nat_to_set u \\<union> {x}", "show \"y \\<in> nat_to_set u \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set u \\<union> {x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "assume \"y \\<notin> {x}\""], ["proof (state)\nthis:\n  y \\<notin> {x}\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  y \\<notin> {x}", "have S1: \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<notin> {x}\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "from A1"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set (u + 2 ^ x)", "have \"y \\<le> log2 (u + 2 ^ x)\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. y \\<le> log2 (u + 2 ^ x)", "by (rule nat_to_set_lub)"], ["proof (state)\nthis:\n  y \\<le> log2 (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "with log2_is_x"], ["proof (chain)\npicking this:\n  log2 (u + 2 ^ x) = x\n  y \\<le> log2 (u + 2 ^ x)", "have \"y \\<le> x\""], ["proof (prove)\nusing this:\n  log2 (u + 2 ^ x) = x\n  y \\<le> log2 (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. y \\<le> x", "by auto"], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "with S1"], ["proof (chain)\npicking this:\n  y \\<noteq> x\n  y \\<le> x", "have y_lt_x: \"y < x\""], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. y < x", "by auto"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "from A1"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set (u + 2 ^ x)", "have \"c_in y (u + 2 ^ x) = 1\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. c_in y (u + 2 ^ x) = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in y (u + 2 ^ x) = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  c_in y (u + 2 ^ x) = 1", "have S2: \"((u + 2 ^ x) div 2^y) mod 2 = 1\""], ["proof (prove)\nusing this:\n  c_in y (u + 2 ^ x) = 1\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y mod 2 = 1", "by (unfold c_in_def)"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "from y_lt_x"], ["proof (chain)\npicking this:\n  y < x", "have \"((u + (2::nat) ^ x) div (2::nat)^y) mod 2 = (u div (2::nat)^y) mod 2\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "by (rule div_mod_lm)"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "with S2"], ["proof (chain)\npicking this:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have \"(u div 2^y) mod 2 = 1\""], ["proof (prove)\nusing this:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. u div 2 ^ y mod 2 = 1", "by auto"], ["proof (state)\nthis:\n  u div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  u div 2 ^ y mod 2 = 1", "have \"c_in y u = 1\""], ["proof (prove)\nusing this:\n  u div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. c_in y u = 1", "by (simp add: c_in_def)"], ["proof (state)\nthis:\n  c_in y u = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set u", "then"], ["proof (chain)\npicking this:\n  c_in y u = 1", "show \"y \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  c_in y u = 1\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set u", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<in> nat_to_set u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> nat_to_set u \\<union> {x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set (u + 2 ^ x) \\<subseteq> nat_to_set u \\<union> {x}\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)", "show \"nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set u \\<union> {x} \\<Longrightarrow>\n       xa \\<in> nat_to_set (u + 2 ^ x)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set u \\<union> {x} \\<Longrightarrow>\n       xa \\<in> nat_to_set (u + 2 ^ x)", "assume A1: \"y \\<in> nat_to_set u \\<union> {x}\""], ["proof (state)\nthis:\n  y \\<in> nat_to_set u \\<union> {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> nat_to_set u \\<union> {x} \\<Longrightarrow>\n       xa \\<in> nat_to_set (u + 2 ^ x)", "show \"y \\<in> nat_to_set (u + 2 ^ x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set (u + 2 ^ x)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)\n 2. \\<not> ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "assume \"y \\<in> {x}\""], ["proof (state)\nthis:\n  y \\<in> {x}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)\n 2. \\<not> ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  y \\<in> {x}", "have \"y=x\""], ["proof (prove)\nusing this:\n  y \\<in> {x}\n\ngoal (1 subgoal):\n 1. y = x", "by auto"], ["proof (state)\nthis:\n  y = x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)\n 2. \\<not> ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  y = x", "have \"y = log2 (u + 2 ^ x)\""], ["proof (prove)\nusing this:\n  y = x\n\ngoal (1 subgoal):\n 1. y = log2 (u + 2 ^ x)", "by (simp add: log2_is_x)"], ["proof (state)\nthis:\n  y = log2 (u + 2 ^ x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)\n 2. \\<not> ?P \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  y = log2 (u + 2 ^ x)", "show ?thesis"], ["proof (prove)\nusing this:\n  y = log2 (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set (u + 2 ^ x)", "by (simp add: log2_lm5)"], ["proof (state)\nthis:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "assume y_notin: \"y \\<notin> {x}\""], ["proof (state)\nthis:\n  y \\<notin> {x}\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  y \\<notin> {x}", "have y_ne_x: \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<notin> {x}\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "from A1 y_notin"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set u \\<union> {x}\n  y \\<notin> {x}", "have y_in: \"y \\<in> nat_to_set u\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set u \\<union> {x}\n  y \\<notin> {x}\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set u", "by auto"], ["proof (state)\nthis:\n  y \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "have y_lt_x: \"y < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "assume \"\\<not> y < x\""], ["proof (state)\nthis:\n  \\<not> y < x\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "with y_ne_x"], ["proof (chain)\npicking this:\n  y \\<noteq> x\n  \\<not> y < x", "have y_gt_x: \"x < y\""], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  \\<not> y < x\n\ngoal (1 subgoal):\n 1. x < y", "by auto"], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "have \"1 < (2::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < 2", "by auto"], ["proof (state)\nthis:\n  1 < 2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "from y_gt_x this"], ["proof (chain)\npicking this:\n  x < y\n  1 < 2", "have L1: \"(2::nat)^x < 2^y\""], ["proof (prove)\nusing this:\n  x < y\n  1 < 2\n\ngoal (1 subgoal):\n 1. 2 ^ x < 2 ^ y", "by (rule power_strict_increasing)"], ["proof (state)\nthis:\n  2 ^ x < 2 ^ y\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "from y_in"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set u", "have L2: \"2^y \\<le> u\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 2 ^ y \\<le> u", "by (rule nat_to_set_upper_bound)"], ["proof (state)\nthis:\n  2 ^ y \\<le> u\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "from L1 L2"], ["proof (chain)\npicking this:\n  2 ^ x < 2 ^ y\n  2 ^ y \\<le> u", "have \"(2::nat)^x < u\""], ["proof (prove)\nusing this:\n  2 ^ x < 2 ^ y\n  2 ^ y \\<le> u\n\ngoal (1 subgoal):\n 1. 2 ^ x < u", "by arith"], ["proof (state)\nthis:\n  2 ^ x < u\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "with A"], ["proof (chain)\npicking this:\n  u < 2 ^ x\n  2 ^ x < u", "show False"], ["proof (prove)\nusing this:\n  u < 2 ^ x\n  2 ^ x < u\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "from y_in"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set u", "have \"c_in y u = 1\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in y u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in y u = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  c_in y u = 1", "have S2: \"(u div 2^y) mod 2 = 1\""], ["proof (prove)\nusing this:\n  c_in y u = 1\n\ngoal (1 subgoal):\n 1. u div 2 ^ y mod 2 = 1", "by (unfold c_in_def)"], ["proof (state)\nthis:\n  u div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "from y_lt_x"], ["proof (chain)\npicking this:\n  y < x", "have \"((u + (2::nat) ^ x) div (2::nat)^y) mod 2 = (u div (2::nat)^y) mod 2\""], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "by (rule div_mod_lm)"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "with S2"], ["proof (chain)\npicking this:\n  u div 2 ^ y mod 2 = 1\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2", "have \"((u + (2::nat) ^ x)div 2^y) mod 2 = 1\""], ["proof (prove)\nusing this:\n  u div 2 ^ y mod 2 = 1\n  (u + 2 ^ x) div 2 ^ y mod 2 = u div 2 ^ y mod 2\n\ngoal (1 subgoal):\n 1. (u + 2 ^ x) div 2 ^ y mod 2 = 1", "by auto"], ["proof (state)\nthis:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1", "have \"c_in y (u + (2::nat) ^ x) = 1\""], ["proof (prove)\nusing this:\n  (u + 2 ^ x) div 2 ^ y mod 2 = 1\n\ngoal (1 subgoal):\n 1. c_in y (u + 2 ^ x) = 1", "by (simp add: c_in_def)"], ["proof (state)\nthis:\n  c_in y (u + 2 ^ x) = 1\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<Longrightarrow> y \\<in> nat_to_set (u + 2 ^ x)", "then"], ["proof (chain)\npicking this:\n  c_in y (u + 2 ^ x) = 1", "show \"y \\<in> nat_to_set (u + (2::nat) ^ x)\""], ["proof (prove)\nusing this:\n  c_in y (u + 2 ^ x) = 1\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set (u + 2 ^ x)", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> nat_to_set (u + 2 ^ x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set u \\<union> {x} \\<subseteq> nat_to_set (u + 2 ^ x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set (u + 2 ^ x) = nat_to_set u \\<union> {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem nat_to_set_inj: \"nat_to_set u = nat_to_set v \\<Longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "assume A: \"nat_to_set u = nat_to_set v\""], ["proof (state)\nthis:\n  nat_to_set u = nat_to_set v\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "let ?P = \"\\<lambda> (n::nat). (\\<forall> (D::nat set). finite D \\<and> card D \\<le> n \\<longrightarrow> (\\<forall> u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v))\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "have P_at_0: \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D.\n       finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "show \"finite D \\<and> card D \\<le> 0 \\<longrightarrow> (\\<forall>u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n    (\\<forall>u v.\n        nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "proof (rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "assume A1: \"finite D \\<and> card D \\<le> 0\""], ["proof (state)\nthis:\n  finite D \\<and> card D \\<le> 0\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D \\<le> 0", "have S1: \"finite D\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D \\<le> 0\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D \\<le> 0", "have S2: \"card D = 0\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D \\<le> 0\n\ngoal (1 subgoal):\n 1. card D = 0", "by auto"], ["proof (state)\nthis:\n  card D = 0\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "from S1 S2"], ["proof (chain)\npicking this:\n  finite D\n  card D = 0", "have S3: \"D = {}\""], ["proof (prove)\nusing this:\n  finite D\n  card D = 0\n\ngoal (1 subgoal):\n 1. D = {}", "by auto"], ["proof (state)\nthis:\n  D = {}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> 0 \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "show \"(\\<forall>u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "show \"nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "assume A2: \" nat_to_set u = D \\<and> nat_to_set v = D\""], ["proof (state)\nthis:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from A2"], ["proof (chain)\npicking this:\n  nat_to_set u = D \\<and> nat_to_set v = D", "have L1: \"nat_to_set u = D\""], ["proof (prove)\nusing this:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from A2"], ["proof (chain)\npicking this:\n  nat_to_set u = D \\<and> nat_to_set v = D", "have L2: \"nat_to_set v = D\""], ["proof (prove)\nusing this:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set v = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from L1 S3"], ["proof (chain)\npicking this:\n  nat_to_set u = D\n  D = {}", "have \"nat_to_set u = {}\""], ["proof (prove)\nusing this:\n  nat_to_set u = D\n  D = {}\n\ngoal (1 subgoal):\n 1. nat_to_set u = {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set u = {}", "have u_z: \"u = 0\""], ["proof (prove)\nusing this:\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. u = 0", "by (rule empty_is_zero)"], ["proof (state)\nthis:\n  u = 0\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from L2 S3"], ["proof (chain)\npicking this:\n  nat_to_set v = D\n  D = {}", "have \"nat_to_set v = {}\""], ["proof (prove)\nusing this:\n  nat_to_set v = D\n  D = {}\n\ngoal (1 subgoal):\n 1. nat_to_set v = {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set v = {}\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set v = {}", "have v_z: \"v = 0\""], ["proof (prove)\nusing this:\n  nat_to_set v = {}\n\ngoal (1 subgoal):\n 1. v = 0", "by (rule empty_is_zero)"], ["proof (state)\nthis:\n  v = 0\n\ngoal (1 subgoal):\n 1. nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from u_z v_z"], ["proof (chain)\npicking this:\n  u = 0\n  v = 0", "show \"u=v\""], ["proof (prove)\nusing this:\n  u = 0\n  v = 0\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v.\n     nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n  (\\<forall>u v.\n      nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "have P_at_Suc: \"\\<And> n. ?P n \\<Longrightarrow> ?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D \\<le> n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v) \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D \\<le> n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v) \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D \\<le> n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v) \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v)", "assume A_n: \"?P n\""], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D \\<le> n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v) \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v)", "show \"?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D.\n       finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n       (\\<forall>u v.\n           nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "show \"finite D \\<and> card D \\<le> Suc n \\<longrightarrow> (\\<forall>u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n    (\\<forall>u v.\n        nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "proof (rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> Suc n \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "assume A1: \"finite D \\<and> card D \\<le> Suc n\""], ["proof (state)\nthis:\n  finite D \\<and> card D \\<le> Suc n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> Suc n \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D \\<le> Suc n", "have S1: \"finite D\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D \\<le> Suc n\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> Suc n \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D \\<le> Suc n", "have S2: \"card D \\<le> Suc n\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D \\<le> Suc n\n\ngoal (1 subgoal):\n 1. card D \\<le> Suc n", "by auto"], ["proof (state)\nthis:\n  card D \\<le> Suc n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> Suc n \\<Longrightarrow>\n    \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "show \"(\\<forall>u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "proof (rule allI, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "assume A2: \" nat_to_set u = D \\<and> nat_to_set v = D\""], ["proof (state)\nthis:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from A2"], ["proof (chain)\npicking this:\n  nat_to_set u = D \\<and> nat_to_set v = D", "have d_u_d: \"nat_to_set u = D\""], ["proof (prove)\nusing this:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = D\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "from A2"], ["proof (chain)\npicking this:\n  nat_to_set u = D \\<and> nat_to_set v = D", "have d_v_d: \"nat_to_set v = D\""], ["proof (prove)\nusing this:\n  nat_to_set u = D \\<and> nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set v = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set v = D\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<Longrightarrow> u = v", "show \"u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = v", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "assume A3: \"D = {}\""], ["proof (state)\nthis:\n  D = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "from A3 d_u_d"], ["proof (chain)\npicking this:\n  D = {}\n  nat_to_set u = D", "have \"nat_to_set u = {}\""], ["proof (prove)\nusing this:\n  D = {}\n  nat_to_set u = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set u = {}", "have u_z: \"u = 0\""], ["proof (prove)\nusing this:\n  nat_to_set u = {}\n\ngoal (1 subgoal):\n 1. u = 0", "by (rule empty_is_zero)"], ["proof (state)\nthis:\n  u = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "from A3 d_v_d"], ["proof (chain)\npicking this:\n  D = {}\n  nat_to_set v = D", "have \"nat_to_set v = {}\""], ["proof (prove)\nusing this:\n  D = {}\n  nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set v = {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set v = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set v = {}", "have v_z: \"v = 0\""], ["proof (prove)\nusing this:\n  nat_to_set v = {}\n\ngoal (1 subgoal):\n 1. v = 0", "by (rule empty_is_zero)"], ["proof (state)\nthis:\n  v = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> u = v\n 2. \\<not> ?P \\<Longrightarrow> u = v", "from u_z v_z"], ["proof (chain)\npicking this:\n  u = 0\n  v = 0", "show \"u = v\""], ["proof (prove)\nusing this:\n  u = 0\n  v = 0\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["proof (state)\nthis:\n  u = v\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "assume A3: \"D \\<noteq> {}\""], ["proof (state)\nthis:\n  D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from A3 d_u_d"], ["proof (chain)\npicking this:\n  D \\<noteq> {}\n  nat_to_set u = D", "have \"nat_to_set u \\<noteq> {}\""], ["proof (prove)\nusing this:\n  D \\<noteq> {}\n  nat_to_set u = D\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set u \\<noteq> {}", "have u_pos: \"u > 0\""], ["proof (prove)\nusing this:\n  nat_to_set u \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < u", "by (rule ne_imp_pos)"], ["proof (state)\nthis:\n  0 < u\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from A3 d_v_d"], ["proof (chain)\npicking this:\n  D \\<noteq> {}\n  nat_to_set v = D", "have \"nat_to_set v \\<noteq> {}\""], ["proof (prove)\nusing this:\n  D \\<noteq> {}\n  nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set v \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  nat_to_set v \\<noteq> {}\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "then"], ["proof (chain)\npicking this:\n  nat_to_set v \\<noteq> {}", "have v_pos: \"v > 0\""], ["proof (prove)\nusing this:\n  nat_to_set v \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < v", "by (rule ne_imp_pos)"], ["proof (state)\nthis:\n  0 < v\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "define m where \"m = Max D\""], ["proof (state)\nthis:\n  m = Max D\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from S1 m_def A3"], ["proof (chain)\npicking this:\n  finite D\n  m = Max D\n  D \\<noteq> {}", "have m_in: \"m \\<in> D\""], ["proof (prove)\nusing this:\n  finite D\n  m = Max D\n  D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. m \\<in> D", "by auto"], ["proof (state)\nthis:\n  m \\<in> D\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from d_u_d m_def"], ["proof (chain)\npicking this:\n  nat_to_set u = D\n  m = Max D", "have m_u: \"m = Max (nat_to_set u)\""], ["proof (prove)\nusing this:\n  nat_to_set u = D\n  m = Max D\n\ngoal (1 subgoal):\n 1. m = Max (nat_to_set u)", "by auto"], ["proof (state)\nthis:\n  m = Max (nat_to_set u)\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from d_v_d m_def"], ["proof (chain)\npicking this:\n  nat_to_set v = D\n  m = Max D", "have m_v: \"m = Max (nat_to_set v)\""], ["proof (prove)\nusing this:\n  nat_to_set v = D\n  m = Max D\n\ngoal (1 subgoal):\n 1. m = Max (nat_to_set v)", "by auto"], ["proof (state)\nthis:\n  m = Max (nat_to_set v)\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from u_pos m_u log2_is_max"], ["proof (chain)\npicking this:\n  0 < u\n  m = Max (nat_to_set u)\n  0 < ?u \\<Longrightarrow> log2 ?u = Max (nat_to_set ?u)", "have m_log_u: \"m = log2 u\""], ["proof (prove)\nusing this:\n  0 < u\n  m = Max (nat_to_set u)\n  0 < ?u \\<Longrightarrow> log2 ?u = Max (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. m = log2 u", "by auto"], ["proof (state)\nthis:\n  m = log2 u\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from v_pos m_v log2_is_max"], ["proof (chain)\npicking this:\n  0 < v\n  m = Max (nat_to_set v)\n  0 < ?u \\<Longrightarrow> log2 ?u = Max (nat_to_set ?u)", "have m_log_v: \"m = log2 v\""], ["proof (prove)\nusing this:\n  0 < v\n  m = Max (nat_to_set v)\n  0 < ?u \\<Longrightarrow> log2 ?u = Max (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. m = log2 v", "by auto"], ["proof (state)\nthis:\n  m = log2 v\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "define D1 where \"D1 = D - {m}\""], ["proof (state)\nthis:\n  D1 = D - {m}\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "define u1 where \"u1 = u - 2^m\""], ["proof (state)\nthis:\n  u1 = u - 2 ^ m\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "define v1 where \"v1 = v - 2^m\""], ["proof (state)\nthis:\n  v1 = v - 2 ^ m\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "have card_D1: \"card D1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card D1 \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card D1 \\<le> n", "from D1_def S1 m_in"], ["proof (chain)\npicking this:\n  D1 = D - {m}\n  finite D\n  m \\<in> D", "have \"card D1 = (card D) - 1\""], ["proof (prove)\nusing this:\n  D1 = D - {m}\n  finite D\n  m \\<in> D\n\ngoal (1 subgoal):\n 1. card D1 = card D - 1", "by (simp add: card_Diff_singleton)"], ["proof (state)\nthis:\n  card D1 = card D - 1\n\ngoal (1 subgoal):\n 1. card D1 \\<le> n", "with S2"], ["proof (chain)\npicking this:\n  card D \\<le> Suc n\n  card D1 = card D - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  card D \\<le> Suc n\n  card D1 = card D - 1\n\ngoal (1 subgoal):\n 1. card D1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  card D1 \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card D1 \\<le> n\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "have u_u1: \"u = u1 + 2^m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "from u_pos"], ["proof (chain)\npicking this:\n  0 < u", "have L1: \"2 ^ log2 u \\<le> u\""], ["proof (prove)\nusing this:\n  0 < u\n\ngoal (1 subgoal):\n 1. 2 ^ log2 u \\<le> u", "by (rule log2_le)"], ["proof (state)\nthis:\n  2 ^ log2 u \\<le> u\n\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "with m_log_u"], ["proof (chain)\npicking this:\n  m = log2 u\n  2 ^ log2 u \\<le> u", "have L2: \"2 ^ m \\<le> u\""], ["proof (prove)\nusing this:\n  m = log2 u\n  2 ^ log2 u \\<le> u\n\ngoal (1 subgoal):\n 1. 2 ^ m \\<le> u", "by auto"], ["proof (state)\nthis:\n  2 ^ m \\<le> u\n\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "with u1_def"], ["proof (chain)\npicking this:\n  u1 = u - 2 ^ m\n  2 ^ m \\<le> u", "show ?thesis"], ["proof (prove)\nusing this:\n  u1 = u - 2 ^ m\n  2 ^ m \\<le> u\n\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "by auto"], ["proof (state)\nthis:\n  u = u1 + 2 ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u = u1 + 2 ^ m\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "have u1_d1: \"nat_to_set u1 = D1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "from m_log_u log2_gt"], ["proof (chain)\npicking this:\n  m = log2 u\n  ?x < 2 ^ (log2 ?x + 1)", "have \"u < 2^(m+1)\""], ["proof (prove)\nusing this:\n  m = log2 u\n  ?x < 2 ^ (log2 ?x + 1)\n\ngoal (1 subgoal):\n 1. u < 2 ^ (m + 1)", "by auto"], ["proof (state)\nthis:\n  u < 2 ^ (m + 1)\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "with u_u1"], ["proof (chain)\npicking this:\n  u = u1 + 2 ^ m\n  u < 2 ^ (m + 1)", "have u1_lt_2_m: \"u1 < 2^m\""], ["proof (prove)\nusing this:\n  u = u1 + 2 ^ m\n  u < 2 ^ (m + 1)\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "by auto"], ["proof (state)\nthis:\n  u1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "with u_u1"], ["proof (chain)\npicking this:\n  u = u1 + 2 ^ m\n  u1 < 2 ^ m", "have L1: \"nat_to_set u = nat_to_set u1 \\<union> {m}\""], ["proof (prove)\nusing this:\n  u = u1 + 2 ^ m\n  u1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set u1 \\<union> {m}", "by (simp add: add_power)"], ["proof (state)\nthis:\n  nat_to_set u = nat_to_set u1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "have m_notin: \"m \\<notin> nat_to_set u1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<notin> nat_to_set u1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set u1 \\<Longrightarrow> False", "assume \"\\<not> m \\<notin> nat_to_set u1\""], ["proof (state)\nthis:\n  \\<not> m \\<notin> nat_to_set u1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set u1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> m \\<notin> nat_to_set u1", "have \"m \\<in> nat_to_set u1\""], ["proof (prove)\nusing this:\n  \\<not> m \\<notin> nat_to_set u1\n\ngoal (1 subgoal):\n 1. m \\<in> nat_to_set u1", "by auto"], ["proof (state)\nthis:\n  m \\<in> nat_to_set u1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set u1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  m \\<in> nat_to_set u1", "have \"2^m \\<le> u1\""], ["proof (prove)\nusing this:\n  m \\<in> nat_to_set u1\n\ngoal (1 subgoal):\n 1. 2 ^ m \\<le> u1", "by (rule nat_to_set_upper_bound)"], ["proof (state)\nthis:\n  2 ^ m \\<le> u1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set u1 \\<Longrightarrow> False", "with u1_lt_2_m"], ["proof (chain)\npicking this:\n  u1 < 2 ^ m\n  2 ^ m \\<le> u1", "show False"], ["proof (prove)\nusing this:\n  u1 < 2 ^ m\n  2 ^ m \\<le> u1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<notin> nat_to_set u1\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "from L1 m_notin"], ["proof (chain)\npicking this:\n  nat_to_set u = nat_to_set u1 \\<union> {m}\n  m \\<notin> nat_to_set u1", "have \"nat_to_set u1 = nat_to_set u - {m}\""], ["proof (prove)\nusing this:\n  nat_to_set u = nat_to_set u1 \\<union> {m}\n  m \\<notin> nat_to_set u1\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = nat_to_set u - {m}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u1 = nat_to_set u - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "with d_u_d"], ["proof (chain)\npicking this:\n  nat_to_set u = D\n  nat_to_set u1 = nat_to_set u - {m}", "have \"nat_to_set u1 = D - {m}\""], ["proof (prove)\nusing this:\n  nat_to_set u = D\n  nat_to_set u1 = nat_to_set u - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D - {m}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u1 = D - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "with D1_def"], ["proof (chain)\npicking this:\n  D1 = D - {m}\n  nat_to_set u1 = D - {m}", "show ?thesis"], ["proof (prove)\nusing this:\n  D1 = D - {m}\n  nat_to_set u1 = D - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "by auto"], ["proof (state)\nthis:\n  nat_to_set u1 = D1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set u1 = D1\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "have v_v1: \"v = v1 + 2^m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = v1 + 2 ^ m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = v1 + 2 ^ m", "from v_pos"], ["proof (chain)\npicking this:\n  0 < v", "have L1: \"2 ^ log2 v \\<le> v\""], ["proof (prove)\nusing this:\n  0 < v\n\ngoal (1 subgoal):\n 1. 2 ^ log2 v \\<le> v", "by (rule log2_le)"], ["proof (state)\nthis:\n  2 ^ log2 v \\<le> v\n\ngoal (1 subgoal):\n 1. v = v1 + 2 ^ m", "with m_log_v"], ["proof (chain)\npicking this:\n  m = log2 v\n  2 ^ log2 v \\<le> v", "have L2: \"2 ^ m \\<le> v\""], ["proof (prove)\nusing this:\n  m = log2 v\n  2 ^ log2 v \\<le> v\n\ngoal (1 subgoal):\n 1. 2 ^ m \\<le> v", "by auto"], ["proof (state)\nthis:\n  2 ^ m \\<le> v\n\ngoal (1 subgoal):\n 1. v = v1 + 2 ^ m", "with v1_def"], ["proof (chain)\npicking this:\n  v1 = v - 2 ^ m\n  2 ^ m \\<le> v", "show ?thesis"], ["proof (prove)\nusing this:\n  v1 = v - 2 ^ m\n  2 ^ m \\<le> v\n\ngoal (1 subgoal):\n 1. v = v1 + 2 ^ m", "by auto"], ["proof (state)\nthis:\n  v = v1 + 2 ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v = v1 + 2 ^ m\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "have v1_d1: \"nat_to_set v1 = D1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "from m_log_v log2_gt"], ["proof (chain)\npicking this:\n  m = log2 v\n  ?x < 2 ^ (log2 ?x + 1)", "have \"v < 2^(m+1)\""], ["proof (prove)\nusing this:\n  m = log2 v\n  ?x < 2 ^ (log2 ?x + 1)\n\ngoal (1 subgoal):\n 1. v < 2 ^ (m + 1)", "by auto"], ["proof (state)\nthis:\n  v < 2 ^ (m + 1)\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "with v_v1"], ["proof (chain)\npicking this:\n  v = v1 + 2 ^ m\n  v < 2 ^ (m + 1)", "have v1_lt_2_m: \"v1 < 2^m\""], ["proof (prove)\nusing this:\n  v = v1 + 2 ^ m\n  v < 2 ^ (m + 1)\n\ngoal (1 subgoal):\n 1. v1 < 2 ^ m", "by auto"], ["proof (state)\nthis:\n  v1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "with v_v1"], ["proof (chain)\npicking this:\n  v = v1 + 2 ^ m\n  v1 < 2 ^ m", "have L1: \"nat_to_set v = nat_to_set v1 \\<union> {m}\""], ["proof (prove)\nusing this:\n  v = v1 + 2 ^ m\n  v1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set v = nat_to_set v1 \\<union> {m}", "by (simp add: add_power)"], ["proof (state)\nthis:\n  nat_to_set v = nat_to_set v1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "have m_notin: \"m \\<notin> nat_to_set v1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<notin> nat_to_set v1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set v1 \\<Longrightarrow> False", "assume \"\\<not> m \\<notin> nat_to_set v1\""], ["proof (state)\nthis:\n  \\<not> m \\<notin> nat_to_set v1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set v1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> m \\<notin> nat_to_set v1", "have \"m \\<in> nat_to_set v1\""], ["proof (prove)\nusing this:\n  \\<not> m \\<notin> nat_to_set v1\n\ngoal (1 subgoal):\n 1. m \\<in> nat_to_set v1", "by auto"], ["proof (state)\nthis:\n  m \\<in> nat_to_set v1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set v1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  m \\<in> nat_to_set v1", "have \"2^m \\<le> v1\""], ["proof (prove)\nusing this:\n  m \\<in> nat_to_set v1\n\ngoal (1 subgoal):\n 1. 2 ^ m \\<le> v1", "by (rule nat_to_set_upper_bound)"], ["proof (state)\nthis:\n  2 ^ m \\<le> v1\n\ngoal (1 subgoal):\n 1. \\<not> m \\<notin> nat_to_set v1 \\<Longrightarrow> False", "with v1_lt_2_m"], ["proof (chain)\npicking this:\n  v1 < 2 ^ m\n  2 ^ m \\<le> v1", "show False"], ["proof (prove)\nusing this:\n  v1 < 2 ^ m\n  2 ^ m \\<le> v1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<notin> nat_to_set v1\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "from L1 m_notin"], ["proof (chain)\npicking this:\n  nat_to_set v = nat_to_set v1 \\<union> {m}\n  m \\<notin> nat_to_set v1", "have \"nat_to_set v1 = nat_to_set v - {m}\""], ["proof (prove)\nusing this:\n  nat_to_set v = nat_to_set v1 \\<union> {m}\n  m \\<notin> nat_to_set v1\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = nat_to_set v - {m}", "by auto"], ["proof (state)\nthis:\n  nat_to_set v1 = nat_to_set v - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "with d_v_d"], ["proof (chain)\npicking this:\n  nat_to_set v = D\n  nat_to_set v1 = nat_to_set v - {m}", "have \"nat_to_set v1 = D - {m}\""], ["proof (prove)\nusing this:\n  nat_to_set v = D\n  nat_to_set v1 = nat_to_set v - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D - {m}", "by auto"], ["proof (state)\nthis:\n  nat_to_set v1 = D - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "with D1_def"], ["proof (chain)\npicking this:\n  D1 = D - {m}\n  nat_to_set v1 = D - {m}", "show ?thesis"], ["proof (prove)\nusing this:\n  D1 = D - {m}\n  nat_to_set v1 = D - {m}\n\ngoal (1 subgoal):\n 1. nat_to_set v1 = D1", "by auto"], ["proof (state)\nthis:\n  nat_to_set v1 = D1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_set v1 = D1\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from S1 D1_def"], ["proof (chain)\npicking this:\n  finite D\n  D1 = D - {m}", "have P1: \"finite D1\""], ["proof (prove)\nusing this:\n  finite D\n  D1 = D - {m}\n\ngoal (1 subgoal):\n 1. finite D1", "by auto"], ["proof (state)\nthis:\n  finite D1\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "with card_D1"], ["proof (chain)\npicking this:\n  card D1 \\<le> n\n  finite D1", "have P2: \"finite D1 \\<and> card D1 \\<le> n\""], ["proof (prove)\nusing this:\n  card D1 \\<le> n\n  finite D1\n\ngoal (1 subgoal):\n 1. finite D1 \\<and> card D1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  finite D1 \\<and> card D1 \\<le> n\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "from A_n P2"], ["proof (chain)\npicking this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  finite D1 \\<and> card D1 \\<le> n", "have \"(\\<forall>u v. nat_to_set u = D1 \\<and> nat_to_set v = D1 \\<longrightarrow> u = v)\""], ["proof (prove)\nusing this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  finite D1 \\<and> card D1 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       nat_to_set u = D1 \\<and> nat_to_set v = D1 \\<longrightarrow> u = v", "by auto"], ["proof (state)\nthis:\n  \\<forall>u v.\n     nat_to_set u = D1 \\<and> nat_to_set v = D1 \\<longrightarrow> u = v\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "with u1_d1 v1_d1"], ["proof (chain)\npicking this:\n  nat_to_set u1 = D1\n  nat_to_set v1 = D1\n  \\<forall>u v.\n     nat_to_set u = D1 \\<and> nat_to_set v = D1 \\<longrightarrow> u = v", "have \"u1 = v1\""], ["proof (prove)\nusing this:\n  nat_to_set u1 = D1\n  nat_to_set v1 = D1\n  \\<forall>u v.\n     nat_to_set u = D1 \\<and> nat_to_set v = D1 \\<longrightarrow> u = v\n\ngoal (1 subgoal):\n 1. u1 = v1", "by auto"], ["proof (state)\nthis:\n  u1 = v1\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow> u = v", "with u_u1 v_v1"], ["proof (chain)\npicking this:\n  u = u1 + 2 ^ m\n  v = v1 + 2 ^ m\n  u1 = v1", "show \"u = v\""], ["proof (prove)\nusing this:\n  u = u1 + 2 ^ m\n  v = v1 + 2 ^ m\n  u1 = v1\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v.\n     nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n  (\\<forall>u v.\n      nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> Suc n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n         u = v) \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D \\<le> Suc ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from P_at_0 P_at_Suc"], ["proof (chain)\npicking this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n         u = v) \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D \\<le> Suc ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)", "have main: \"\\<And> n. ?P n\""], ["proof (prove)\nusing this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> 0 \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n         u = v) \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D \\<le> Suc ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D \\<le> n \\<longrightarrow>\n          (\\<forall>u v.\n              nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow>\n              u = v)", "by (rule nat.induct)"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "define D where \"D = nat_to_set u\""], ["proof (state)\nthis:\n  D = nat_to_set u\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from D_def A"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  nat_to_set u = nat_to_set v", "have P1: \"nat_to_set u = D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  nat_to_set u = nat_to_set v\n\ngoal (1 subgoal):\n 1. nat_to_set u = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from D_def A"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  nat_to_set u = nat_to_set v", "have P2: \"nat_to_set v = D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  nat_to_set u = nat_to_set v\n\ngoal (1 subgoal):\n 1. nat_to_set v = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set v = D\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from D_def nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  finite (nat_to_set ?u)", "have d_finite: \"finite D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "define n where \"n = card D\""], ["proof (state)\nthis:\n  n = card D\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from n_def d_finite"], ["proof (chain)\npicking this:\n  n = card D\n  finite D", "have card_le: \"card D \\<le> n\""], ["proof (prove)\nusing this:\n  n = card D\n  finite D\n\ngoal (1 subgoal):\n 1. card D \\<le> n", "by auto"], ["proof (state)\nthis:\n  card D \\<le> n\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "from d_finite card_le"], ["proof (chain)\npicking this:\n  finite D\n  card D \\<le> n", "have P3: \"finite D \\<and> card D \\<le> n\""], ["proof (prove)\nusing this:\n  finite D\n  card D \\<le> n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D \\<le> n", "by auto"], ["proof (state)\nthis:\n  finite D \\<and> card D \\<le> n\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "with main"], ["proof (chain)\npicking this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  finite D \\<and> card D \\<le> n", "have P4: \"\\<forall>u v. nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\""], ["proof (prove)\nusing this:\n  \\<forall>D.\n     finite D \\<and> card D \\<le> ?n \\<longrightarrow>\n     (\\<forall>u v.\n         nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v)\n  finite D \\<and> card D \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "by auto"], ["proof (state)\nthis:\n  \\<forall>u v.\n     nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set v \\<Longrightarrow> u = v", "with P1 P2"], ["proof (chain)\npicking this:\n  nat_to_set u = D\n  nat_to_set v = D\n  \\<forall>u v.\n     nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v", "show \"u = v\""], ["proof (prove)\nusing this:\n  nat_to_set u = D\n  nat_to_set v = D\n  \\<forall>u v.\n     nat_to_set u = D \\<and> nat_to_set v = D \\<longrightarrow> u = v\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  set_to_nat :: \"nat set => nat\" where\n  \"set_to_nat = (\\<lambda> D. sum (\\<lambda> x. 2 ^ x) D)\""], ["", "lemma two_power_sum: \"sum (\\<lambda> x. (2::nat) ^ x) {i. i< Suc m} = (2 ^ Suc m) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. sum ((^) 2) {i. i < Suc 0} = 2 ^ Suc 0 - 1\n 2. \\<And>m.\n       sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1 \\<Longrightarrow>\n       sum ((^) 2) {i. i < Suc (Suc m)} = 2 ^ Suc (Suc m) - 1", "show \"sum (\\<lambda> x. (2::nat) ^ x) {i. i< Suc 0} = (2 ^ Suc 0) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc 0} = 2 ^ Suc 0 - 1", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc 0} = 2 ^ Suc 0 - 1\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1 \\<Longrightarrow>\n       sum ((^) 2) {i. i < Suc (Suc m)} = 2 ^ Suc (Suc m) - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1 \\<Longrightarrow>\n       sum ((^) 2) {i. i < Suc (Suc m)} = 2 ^ Suc (Suc m) - 1", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1 \\<Longrightarrow>\n       sum ((^) 2) {i. i < Suc (Suc m)} = 2 ^ Suc (Suc m) - 1", "assume A: \"sum (\\<lambda> x. (2::nat) ^ x) {i. i< Suc n} = (2 ^ Suc n) - 1\""], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n - 1\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       sum ((^) 2) {i. i < Suc m} = 2 ^ Suc m - 1 \\<Longrightarrow>\n       sum ((^) 2) {i. i < Suc (Suc m)} = 2 ^ Suc (Suc m) - 1", "show \"sum (\\<lambda> x. (2::nat) ^ x) {i. i< Suc (Suc n)} = (2 ^ Suc (Suc n)) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "let ?f = \"\\<lambda> x. (2::nat) ^ x\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "have S1: \"{i. i< Suc (Suc n)} = {i. i \\<le> Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < Suc (Suc n)} = {i. i \\<le> Suc n}", "by auto"], ["proof (state)\nthis:\n  {i. i < Suc (Suc n)} = {i. i \\<le> Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "have S2: \"{i. i \\<le> Suc n} = {i. i < Suc n} \\<union> { Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i \\<le> Suc n} = {i. i < Suc n} \\<union> {Suc n}", "by auto"], ["proof (state)\nthis:\n  {i. i \\<le> Suc n} = {i. i < Suc n} \\<union> {Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "from S1 S2"], ["proof (chain)\npicking this:\n  {i. i < Suc (Suc n)} = {i. i \\<le> Suc n}\n  {i. i \\<le> Suc n} = {i. i < Suc n} \\<union> {Suc n}", "have S3: \"{i. i< Suc (Suc n)} = {i. i < Suc n} \\<union> { Suc n}\""], ["proof (prove)\nusing this:\n  {i. i < Suc (Suc n)} = {i. i \\<le> Suc n}\n  {i. i \\<le> Suc n} = {i. i < Suc n} \\<union> {Suc n}\n\ngoal (1 subgoal):\n 1. {i. i < Suc (Suc n)} = {i. i < Suc n} \\<union> {Suc n}", "by auto"], ["proof (state)\nthis:\n  {i. i < Suc (Suc n)} = {i. i < Suc n} \\<union> {Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "have S4: \"{i. i < Suc n} = (\\<lambda> x. x) ` {i. i < Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < Suc n} = (\\<lambda>x. x) ` {i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  {i. i < Suc n} = (\\<lambda>x. x) ` {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "then"], ["proof (chain)\npicking this:\n  {i. i < Suc n} = (\\<lambda>x. x) ` {i. i < Suc n}", "have S5: \"finite {i. i < Suc n}\""], ["proof (prove)\nusing this:\n  {i. i < Suc n} = (\\<lambda>x. x) ` {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. finite {i. i < Suc n}", "by (rule nat_seg_image_imp_finite)"], ["proof (state)\nthis:\n  finite {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "have S6: \"Suc n \\<notin> {i. i < Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n \\<notin> {i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  Suc n \\<notin> {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "from S5 S6 sum.insert"], ["proof (chain)\npicking this:\n  finite {i. i < Suc n}\n  Suc n \\<notin> {i. i < Suc n}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A", "have S7: \"sum ?f ({i. i< Suc n} \\<union> {Suc n}) = 2 ^ Suc n + sum ?f {i. i< Suc n}\""], ["proof (prove)\nusing this:\n  finite {i. i < Suc n}\n  Suc n \\<notin> {i. i < Suc n}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A\n\ngoal (1 subgoal):\n 1. sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n    2 ^ Suc n + sum ((^) 2) {i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "from S3"], ["proof (chain)\npicking this:\n  {i. i < Suc (Suc n)} = {i. i < Suc n} \\<union> {Suc n}", "have \"sum ?f {i. i< Suc (Suc n)} = sum ?f ({i. i< Suc n} \\<union> {Suc n})\""], ["proof (prove)\nusing this:\n  {i. i < Suc (Suc n)} = {i. i < Suc n} \\<union> {Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} =\n    sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n})", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc (Suc n)} =\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n})\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "also"], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc (Suc n)} =\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n})\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "from S7"], ["proof (chain)\npicking this:\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n}", "have \"\\<dots> = 2 ^ Suc n + sum ?f {i. i< Suc n}\""], ["proof (prove)\nusing this:\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n    2 ^ Suc n + sum ((^) 2) {i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "also"], ["proof (state)\nthis:\n  sum ((^) 2) ({i. i < Suc n} \\<union> {Suc n}) =\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n}\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "from A"], ["proof (chain)\npicking this:\n  sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n - 1", "have \"\\<dots> = 2 ^ Suc n + (((2::nat) ^ Suc n)-(1::nat))\""], ["proof (prove)\nusing this:\n  sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n - 1\n\ngoal (1 subgoal):\n 1. 2 ^ Suc n + sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n + (2 ^ Suc n - 1)", "by auto"], ["proof (state)\nthis:\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n + (2 ^ Suc n - 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "also"], ["proof (state)\nthis:\n  2 ^ Suc n + sum ((^) 2) {i. i < Suc n} = 2 ^ Suc n + (2 ^ Suc n - 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "have \"\\<dots> = (2 ^ Suc (Suc n)) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ Suc n + (2 ^ Suc n - 1) = 2 ^ Suc (Suc n) - 1", "by auto"], ["proof (state)\nthis:\n  2 ^ Suc n + (2 ^ Suc n - 1) = 2 ^ Suc (Suc n) - 1\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "finally"], ["proof (chain)\npicking this:\n  sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum ((^) 2) {i. i < Suc (Suc n)} = 2 ^ Suc (Suc n) - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_interval: \"finite {i. (i::nat)<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i < m}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {i. i < m}", "have \"{i. i < m} = (\\<lambda> x. x) ` {i. i < m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < m} = (\\<lambda>x. x) ` {i. i < m}", "by auto"], ["proof (state)\nthis:\n  {i. i < m} = (\\<lambda>x. x) ` {i. i < m}\n\ngoal (1 subgoal):\n 1. finite {i. i < m}", "then"], ["proof (chain)\npicking this:\n  {i. i < m} = (\\<lambda>x. x) ` {i. i < m}", "show ?thesis"], ["proof (prove)\nusing this:\n  {i. i < m} = (\\<lambda>x. x) ` {i. i < m}\n\ngoal (1 subgoal):\n 1. finite {i. i < m}", "by (rule nat_seg_image_imp_finite)"], ["proof (state)\nthis:\n  finite {i. i < m}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_to_nat_at_empty: \"set_to_nat {} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat {} = 0", "by (unfold set_to_nat_def, rule sum.empty)"], ["", "lemma set_to_nat_of_interval: \"set_to_nat {i. (i::nat)<m} = 2 ^ m - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat {i. i < m} = 2 ^ m - 1", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1\n 2. \\<And>m.\n       set_to_nat {i. i < m} = 2 ^ m - 1 \\<Longrightarrow>\n       set_to_nat {i. i < Suc m} = 2 ^ Suc m - 1", "show \"set_to_nat {i. i < 0} = 2 ^ 0 - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1", "have S1: \"{i. (i::nat) < 0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < 0} = {}", "by auto"], ["proof (state)\nthis:\n  {i. i < 0} = {}\n\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1", "with set_to_nat_at_empty"], ["proof (chain)\npicking this:\n  set_to_nat {} = 0\n  {i. i < 0} = {}", "have \"set_to_nat {i. i<0} = 0\""], ["proof (prove)\nusing this:\n  set_to_nat {} = 0\n  {i. i < 0} = {}\n\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 0", "by auto"], ["proof (state)\nthis:\n  set_to_nat {i. i < 0} = 0\n\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  set_to_nat {i. i < 0} = 0\n\ngoal (1 subgoal):\n 1. set_to_nat {i. i < 0} = 2 ^ 0 - 1", "by auto"], ["proof (state)\nthis:\n  set_to_nat {i. i < 0} = 2 ^ 0 - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_to_nat {i. i < 0} = 2 ^ 0 - 1\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       set_to_nat {i. i < m} = 2 ^ m - 1 \\<Longrightarrow>\n       set_to_nat {i. i < Suc m} = 2 ^ Suc m - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       set_to_nat {i. i < m} = 2 ^ m - 1 \\<Longrightarrow>\n       set_to_nat {i. i < Suc m} = 2 ^ Suc m - 1", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       set_to_nat {i. i < m} = 2 ^ m - 1 \\<Longrightarrow>\n       set_to_nat {i. i < Suc m} = 2 ^ Suc m - 1", "show \"set_to_nat {i. i < Suc n} = 2 ^ Suc n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat {i. i < Suc n} = 2 ^ Suc n - 1", "by (unfold set_to_nat_def, rule two_power_sum)"], ["proof (state)\nthis:\n  set_to_nat {i. i < Suc n} = 2 ^ Suc n - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_to_nat_mono: \"\\<lbrakk> finite B; A \\<subseteq> B\\<rbrakk> \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "assume b_finite: \"finite B\""], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "assume a_le_b: \"A \\<subseteq> B\""], ["proof (state)\nthis:\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "let ?f = \"\\<lambda> (x::nat). (2::nat) ^ x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "have S1: \"set_to_nat A = sum ?f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat A = sum ((^) 2) A", "by (simp add: set_to_nat_def)"], ["proof (state)\nthis:\n  set_to_nat A = sum ((^) 2) A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "have S2: \"set_to_nat B = sum ?f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat B = sum ((^) 2) B", "by (simp add: set_to_nat_def)"], ["proof (state)\nthis:\n  set_to_nat B = sum ((^) 2) B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "have S3: \"\\<And> x. x  \\<in> B - A \\<Longrightarrow> 0 \\<le> ?f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B - A \\<Longrightarrow> 0 \\<le> 2 ^ x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> B - A \\<Longrightarrow> 0 \\<le> 2 ^ ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "from b_finite a_le_b S3"], ["proof (chain)\npicking this:\n  finite B\n  A \\<subseteq> B\n  ?x \\<in> B - A \\<Longrightarrow> 0 \\<le> 2 ^ ?x", "have \"sum ?f A \\<le> sum ?f B\""], ["proof (prove)\nusing this:\n  finite B\n  A \\<subseteq> B\n  ?x \\<in> B - A \\<Longrightarrow> 0 \\<le> 2 ^ ?x\n\ngoal (1 subgoal):\n 1. sum ((^) 2) A \\<le> sum ((^) 2) B", "by (rule sum_mono2)"], ["proof (state)\nthis:\n  sum ((^) 2) A \\<le> sum ((^) 2) B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> set_to_nat A \\<le> set_to_nat B", "with S1 S2"], ["proof (chain)\npicking this:\n  set_to_nat A = sum ((^) 2) A\n  set_to_nat B = sum ((^) 2) B\n  sum ((^) 2) A \\<le> sum ((^) 2) B", "show ?thesis"], ["proof (prove)\nusing this:\n  set_to_nat A = sum ((^) 2) A\n  set_to_nat B = sum ((^) 2) B\n  sum ((^) 2) A \\<le> sum ((^) 2) B\n\ngoal (1 subgoal):\n 1. set_to_nat A \\<le> set_to_nat B", "by auto"], ["proof (state)\nthis:\n  set_to_nat A \\<le> set_to_nat B\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem nat_to_set_srj: \"finite (D::nat set) \\<Longrightarrow> nat_to_set (set_to_nat D) = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "assume A: \"finite D\""], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "let ?P = \"\\<lambda> (n::nat). (\\<forall> (D::nat set). finite D \\<and> card D = n \\<longrightarrow> nat_to_set (set_to_nat D) = D)\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "have P_at_0: \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D.\n       finite D \\<and> card D = 0 \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "proof (rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D = 0 \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D = 0 \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "show \"finite D \\<and> card D = 0 \\<longrightarrow> nat_to_set (set_to_nat D) = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<longrightarrow>\n    nat_to_set (set_to_nat D) = D", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "assume A1: \"finite D \\<and> card D = 0\""], ["proof (state)\nthis:\n  finite D \\<and> card D = 0\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D = 0", "have S1: \"finite D\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D = 0\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D = 0", "have S2: \"card D = 0\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D = 0\n\ngoal (1 subgoal):\n 1. card D = 0", "by auto"], ["proof (state)\nthis:\n  card D = 0\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from S1 S2"], ["proof (chain)\npicking this:\n  finite D\n  card D = 0", "have S3: \"D = {}\""], ["proof (prove)\nusing this:\n  finite D\n  card D = 0\n\ngoal (1 subgoal):\n 1. D = {}", "by auto"], ["proof (state)\nthis:\n  D = {}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)\n  D = {}", "have \"set_to_nat D = sum (\\<lambda> x. 2 ^ x) D\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n  D = {}\n\ngoal (1 subgoal):\n 1. set_to_nat D = sum ((^) 2) D", "by simp"], ["proof (state)\nthis:\n  set_to_nat D = sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with S3 sum.empty"], ["proof (chain)\npicking this:\n  D = {}\n  sum ?g {} = (0::?'a)\n  set_to_nat D = sum ((^) 2) D", "have \"set_to_nat D = 0\""], ["proof (prove)\nusing this:\n  D = {}\n  sum ?g {} = (0::?'a)\n  set_to_nat D = sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. set_to_nat D = 0", "by auto"], ["proof (state)\nthis:\n  set_to_nat D = 0\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = 0 \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with zero_is_empty S3"], ["proof (chain)\npicking this:\n  nat_to_set 0 = {}\n  D = {}\n  set_to_nat D = 0", "show \"nat_to_set (set_to_nat D) = D\""], ["proof (prove)\nusing this:\n  nat_to_set 0 = {}\n  D = {}\n  set_to_nat D = 0\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite D \\<and> card D = 0 \\<longrightarrow> nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D = 0 \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "have P_at_Suc: \"\\<And> n. ?P n \\<Longrightarrow> ?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D = n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D = Suc n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D = n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D = Suc n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D = n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D = Suc n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D", "assume A_n: \"?P n\""], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D = n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D = n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n       \\<forall>D.\n          finite D \\<and> card D = Suc n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D", "show \"?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D.\n       finite D \\<and> card D = Suc n \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D = Suc n \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       finite D \\<and> card D = Suc n \\<longrightarrow>\n       nat_to_set (set_to_nat D) = D", "show \"finite D \\<and> card D = Suc n \\<longrightarrow> nat_to_set (set_to_nat D) = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<longrightarrow>\n    nat_to_set (set_to_nat D) = D", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "assume A1: \"finite D \\<and> card D = Suc n\""], ["proof (state)\nthis:\n  finite D \\<and> card D = Suc n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D = Suc n", "have S1: \"finite D\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D = Suc n\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from A1"], ["proof (chain)\npicking this:\n  finite D \\<and> card D = Suc n", "have S2: \"card D = Suc n\""], ["proof (prove)\nusing this:\n  finite D \\<and> card D = Suc n\n\ngoal (1 subgoal):\n 1. card D = Suc n", "by auto"], ["proof (state)\nthis:\n  card D = Suc n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "define m where \"m = Max D\""], ["proof (state)\nthis:\n  m = Max D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from S2"], ["proof (chain)\npicking this:\n  card D = Suc n", "have D_ne: \"D \\<noteq> {}\""], ["proof (prove)\nusing this:\n  card D = Suc n\n\ngoal (1 subgoal):\n 1. D \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with S1 m_def"], ["proof (chain)\npicking this:\n  finite D\n  m = Max D\n  D \\<noteq> {}", "have m_in: \"m \\<in> D\""], ["proof (prove)\nusing this:\n  finite D\n  m = Max D\n  D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. m \\<in> D", "by auto"], ["proof (state)\nthis:\n  m \\<in> D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "define D1 where \"D1 = D - {m}\""], ["proof (state)\nthis:\n  D1 = D - {m}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from S1 D1_def"], ["proof (chain)\npicking this:\n  finite D\n  D1 = D - {m}", "have d1_finite: \"finite D1\""], ["proof (prove)\nusing this:\n  finite D\n  D1 = D - {m}\n\ngoal (1 subgoal):\n 1. finite D1", "by auto"], ["proof (state)\nthis:\n  finite D1\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from D1_def m_in S1"], ["proof (chain)\npicking this:\n  D1 = D - {m}\n  m \\<in> D\n  finite D", "have \"card D1 = card D - 1\""], ["proof (prove)\nusing this:\n  D1 = D - {m}\n  m \\<in> D\n  finite D\n\ngoal (1 subgoal):\n 1. card D1 = card D - 1", "by (simp add: card_Diff_singleton)"], ["proof (state)\nthis:\n  card D1 = card D - 1\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with S2"], ["proof (chain)\npicking this:\n  card D = Suc n\n  card D1 = card D - 1", "have card_d1: \"card D1 = n\""], ["proof (prove)\nusing this:\n  card D = Suc n\n  card D1 = card D - 1\n\ngoal (1 subgoal):\n 1. card D1 = n", "by auto"], ["proof (state)\nthis:\n  card D1 = n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from d1_finite card_d1"], ["proof (chain)\npicking this:\n  finite D1\n  card D1 = n", "have \"finite D1 \\<and> card D1 = n\""], ["proof (prove)\nusing this:\n  finite D1\n  card D1 = n\n\ngoal (1 subgoal):\n 1. finite D1 \\<and> card D1 = n", "by auto"], ["proof (state)\nthis:\n  finite D1 \\<and> card D1 = n\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with A_n"], ["proof (chain)\npicking this:\n  \\<forall>D.\n     finite D \\<and> card D = n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n  finite D1 \\<and> card D1 = n", "have S3: \"nat_to_set (set_to_nat D1) = D1\""], ["proof (prove)\nusing this:\n  \\<forall>D.\n     finite D \\<and> card D = n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n  finite D1 \\<and> card D1 = n\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D1) = D1", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D1) = D1\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "define u where \"u = set_to_nat D\""], ["proof (state)\nthis:\n  u = set_to_nat D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "define u1 where \"u1 = set_to_nat D1\""], ["proof (state)\nthis:\n  u1 = set_to_nat D1\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from S1 m_in"], ["proof (chain)\npicking this:\n  finite D\n  m \\<in> D", "have \"sum (\\<lambda> (x::nat). (2::nat) ^ x) D = 2 ^ m + sum (\\<lambda> x. 2 ^ x) (D - {m})\""], ["proof (prove)\nusing this:\n  finite D\n  m \\<in> D\n\ngoal (1 subgoal):\n 1. sum ((^) 2) D = 2 ^ m + sum ((^) 2) (D - {m})", "by (rule sum.remove)"], ["proof (state)\nthis:\n  sum ((^) 2) D = 2 ^ m + sum ((^) 2) (D - {m})\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)\n  sum ((^) 2) D = 2 ^ m + sum ((^) 2) (D - {m})", "have \"set_to_nat D = 2 ^ m + set_to_nat (D - {m})\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n  sum ((^) 2) D = 2 ^ m + sum ((^) 2) (D - {m})\n\ngoal (1 subgoal):\n 1. set_to_nat D = 2 ^ m + set_to_nat (D - {m})", "by auto"], ["proof (state)\nthis:\n  set_to_nat D = 2 ^ m + set_to_nat (D - {m})\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "with u_def u1_def D1_def"], ["proof (chain)\npicking this:\n  u = set_to_nat D\n  u1 = set_to_nat D1\n  D1 = D - {m}\n  set_to_nat D = 2 ^ m + set_to_nat (D - {m})", "have u_u1: \"u = u1 + 2 ^ m\""], ["proof (prove)\nusing this:\n  u = set_to_nat D\n  u1 = set_to_nat D1\n  D1 = D - {m}\n  set_to_nat D = 2 ^ m + set_to_nat (D - {m})\n\ngoal (1 subgoal):\n 1. u = u1 + 2 ^ m", "by auto"], ["proof (state)\nthis:\n  u = u1 + 2 ^ m\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from S3 u1_def"], ["proof (chain)\npicking this:\n  nat_to_set (set_to_nat D1) = D1\n  u1 = set_to_nat D1", "have d1_u1: \"nat_to_set u1 = D1\""], ["proof (prove)\nusing this:\n  nat_to_set (set_to_nat D1) = D1\n  u1 = set_to_nat D1\n\ngoal (1 subgoal):\n 1. nat_to_set u1 = D1", "by auto"], ["proof (state)\nthis:\n  nat_to_set u1 = D1\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "have u1_lt: \"u1 < 2 ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "have L1: \"D1 \\<subseteq> {i. i<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D1 \\<subseteq> {i. i < m}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> D1 \\<Longrightarrow> x \\<in> {i. i < m}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> D1 \\<Longrightarrow> x \\<in> {i. i < m}", "assume A1: \"x \\<in> D1\""], ["proof (state)\nthis:\n  x \\<in> D1\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> D1 \\<Longrightarrow> x \\<in> {i. i < m}", "show \"x \\<in> {i. i<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {i. i < m}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x < m", "from A1 D1_def"], ["proof (chain)\npicking this:\n  x \\<in> D1\n  D1 = D - {m}", "have L1_1: \"x \\<in> D\""], ["proof (prove)\nusing this:\n  x \\<in> D1\n  D1 = D - {m}\n\ngoal (1 subgoal):\n 1. x \\<in> D", "by auto"], ["proof (state)\nthis:\n  x \\<in> D\n\ngoal (1 subgoal):\n 1. x < m", "from S1 D_ne L1_1 m_def"], ["proof (chain)\npicking this:\n  finite D\n  D \\<noteq> {}\n  x \\<in> D\n  m = Max D", "have L1_2: \"x \\<le> m\""], ["proof (prove)\nusing this:\n  finite D\n  D \\<noteq> {}\n  x \\<in> D\n  m = Max D\n\ngoal (1 subgoal):\n 1. x \\<le> m", "by auto"], ["proof (state)\nthis:\n  x \\<le> m\n\ngoal (1 subgoal):\n 1. x < m", "with A1 L1_1 D1_def"], ["proof (chain)\npicking this:\n  x \\<in> D1\n  x \\<in> D\n  D1 = D - {m}\n  x \\<le> m", "have \"x \\<noteq> m\""], ["proof (prove)\nusing this:\n  x \\<in> D1\n  x \\<in> D\n  D1 = D - {m}\n  x \\<le> m\n\ngoal (1 subgoal):\n 1. x \\<noteq> m", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> m\n\ngoal (1 subgoal):\n 1. x < m", "with L1_2"], ["proof (chain)\npicking this:\n  x \\<le> m\n  x \\<noteq> m", "show \"x < m\""], ["proof (prove)\nusing this:\n  x \\<le> m\n  x \\<noteq> m\n\ngoal (1 subgoal):\n 1. x < m", "by auto"], ["proof (state)\nthis:\n  x < m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {i. i < m}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D1 \\<subseteq> {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "have L2: \"finite {i. i<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i < m}", "by (rule finite_interval)"], ["proof (state)\nthis:\n  finite {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "from L2 L1"], ["proof (chain)\npicking this:\n  finite {i. i < m}\n  D1 \\<subseteq> {i. i < m}", "have \"set_to_nat D1 \\<le> set_to_nat {i. i<m}\""], ["proof (prove)\nusing this:\n  finite {i. i < m}\n  D1 \\<subseteq> {i. i < m}\n\ngoal (1 subgoal):\n 1. set_to_nat D1 \\<le> set_to_nat {i. i < m}", "by (rule set_to_nat_mono)"], ["proof (state)\nthis:\n  set_to_nat D1 \\<le> set_to_nat {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "with u1_def"], ["proof (chain)\npicking this:\n  u1 = set_to_nat D1\n  set_to_nat D1 \\<le> set_to_nat {i. i < m}", "have \"u1 \\<le> set_to_nat {i. i<m}\""], ["proof (prove)\nusing this:\n  u1 = set_to_nat D1\n  set_to_nat D1 \\<le> set_to_nat {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 \\<le> set_to_nat {i. i < m}", "by auto"], ["proof (state)\nthis:\n  u1 \\<le> set_to_nat {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "with set_to_nat_of_interval"], ["proof (chain)\npicking this:\n  set_to_nat {i. i < ?m} = 2 ^ ?m - 1\n  u1 \\<le> set_to_nat {i. i < m}", "have L3: \"u1 \\<le> 2 ^ m - 1\""], ["proof (prove)\nusing this:\n  set_to_nat {i. i < ?m} = 2 ^ ?m - 1\n  u1 \\<le> set_to_nat {i. i < m}\n\ngoal (1 subgoal):\n 1. u1 \\<le> 2 ^ m - 1", "by auto"], ["proof (state)\nthis:\n  u1 \\<le> 2 ^ m - 1\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "have \"0 < (2::nat) ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ m", "by auto"], ["proof (state)\nthis:\n  0 < 2 ^ m\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "then"], ["proof (chain)\npicking this:\n  0 < 2 ^ m", "have \"(2::nat) ^ m - 1 < (2::nat) ^ m\""], ["proof (prove)\nusing this:\n  0 < 2 ^ m\n\ngoal (1 subgoal):\n 1. 2 ^ m - 1 < 2 ^ m", "by auto"], ["proof (state)\nthis:\n  2 ^ m - 1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "with L3"], ["proof (chain)\npicking this:\n  u1 \\<le> 2 ^ m - 1\n  2 ^ m - 1 < 2 ^ m", "show ?thesis"], ["proof (prove)\nusing this:\n  u1 \\<le> 2 ^ m - 1\n  2 ^ m - 1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. u1 < 2 ^ m", "by arith"], ["proof (state)\nthis:\n  u1 < 2 ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from u_def"], ["proof (chain)\npicking this:\n  u = set_to_nat D", "have \"nat_to_set (set_to_nat D) = nat_to_set u\""], ["proof (prove)\nusing this:\n  u = set_to_nat D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = nat_to_set u\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "also"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = nat_to_set u\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from u_u1"], ["proof (chain)\npicking this:\n  u = u1 + 2 ^ m", "have \"\\<dots> = nat_to_set (u1 + 2 ^ m)\""], ["proof (prove)\nusing this:\n  u = u1 + 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set u = nat_to_set (u1 + 2 ^ m)", "by auto"], ["proof (state)\nthis:\n  nat_to_set u = nat_to_set (u1 + 2 ^ m)\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "also"], ["proof (state)\nthis:\n  nat_to_set u = nat_to_set (u1 + 2 ^ m)\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from u1_lt"], ["proof (chain)\npicking this:\n  u1 < 2 ^ m", "have \"\\<dots> = nat_to_set u1 \\<union> {m}\""], ["proof (prove)\nusing this:\n  u1 < 2 ^ m\n\ngoal (1 subgoal):\n 1. nat_to_set (u1 + 2 ^ m) = nat_to_set u1 \\<union> {m}", "by (rule add_power)"], ["proof (state)\nthis:\n  nat_to_set (u1 + 2 ^ m) = nat_to_set u1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "also"], ["proof (state)\nthis:\n  nat_to_set (u1 + 2 ^ m) = nat_to_set u1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from d1_u1"], ["proof (chain)\npicking this:\n  nat_to_set u1 = D1", "have \"\\<dots> = D1 \\<union> {m}\""], ["proof (prove)\nusing this:\n  nat_to_set u1 = D1\n\ngoal (1 subgoal):\n 1. nat_to_set u1 \\<union> {m} = D1 \\<union> {m}", "by auto"], ["proof (state)\nthis:\n  nat_to_set u1 \\<union> {m} = D1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "also"], ["proof (state)\nthis:\n  nat_to_set u1 \\<union> {m} = D1 \\<union> {m}\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "from D1_def m_in"], ["proof (chain)\npicking this:\n  D1 = D - {m}\n  m \\<in> D", "have \"\\<dots> = D\""], ["proof (prove)\nusing this:\n  D1 = D - {m}\n  m \\<in> D\n\ngoal (1 subgoal):\n 1. D1 \\<union> {m} = D", "by auto"], ["proof (state)\nthis:\n  D1 \\<union> {m} = D\n\ngoal (1 subgoal):\n 1. finite D \\<and> card D = Suc n \\<Longrightarrow>\n    nat_to_set (set_to_nat D) = D", "finally"], ["proof (chain)\npicking this:\n  nat_to_set (set_to_nat D) = D", "show \"nat_to_set (set_to_nat D) = D\""], ["proof (prove)\nusing this:\n  nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite D \\<and> card D = Suc n \\<longrightarrow>\n  nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D = Suc n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D = Suc ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "from P_at_0 P_at_Suc"], ["proof (chain)\npicking this:\n  \\<forall>D.\n     finite D \\<and> card D = 0 \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D = Suc ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D", "have main: \"\\<And> n. ?P n\""], ["proof (prove)\nusing this:\n  \\<forall>D.\n     finite D \\<and> card D = 0 \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D \\<Longrightarrow>\n  \\<forall>D.\n     finite D \\<and> card D = Suc ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>D.\n          finite D \\<and> card D = n \\<longrightarrow>\n          nat_to_set (set_to_nat D) = D", "by (rule nat.induct)"], ["proof (state)\nthis:\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> nat_to_set (set_to_nat D) = D", "from A main"], ["proof (chain)\npicking this:\n  finite D\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D", "show ?thesis"], ["proof (prove)\nusing this:\n  finite D\n  \\<forall>D.\n     finite D \\<and> card D = ?n \\<longrightarrow>\n     nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = D", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem nat_to_set_srj1: \"finite (D::nat set) \\<Longrightarrow> \\<exists> u. nat_to_set u = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> \\<exists>u. nat_to_set u = D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> \\<exists>u. nat_to_set u = D", "assume A: \"finite D\""], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. finite D \\<Longrightarrow> \\<exists>u. nat_to_set u = D", "show \" \\<exists> u. nat_to_set u = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. nat_to_set u = D", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_set ?u = D", "from A"], ["proof (chain)\npicking this:\n  finite D", "show \"nat_to_set (set_to_nat D) = D\""], ["proof (prove)\nusing this:\n  finite D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = D", "by (rule nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u. nat_to_set u = D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_of_pr_is_pr: \"g \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> n. sum g {i. i<n}) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "assume g_is_pr: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "define f where \"f n = sum g {i. i<n}\" for n"], ["proof (state)\nthis:\n  f ?n = sum g {i. i < ?n}\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "from f_def"], ["proof (chain)\npicking this:\n  f ?n = sum g {i. i < ?n}", "have f_at_0: \"f 0 = 0\""], ["proof (prove)\nusing this:\n  f ?n = sum g {i. i < ?n}\n\ngoal (1 subgoal):\n 1. f 0 = 0", "by auto"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "define h where \"h a b = g a + b\" for a b"], ["proof (state)\nthis:\n  h ?a ?b = g ?a + ?b\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "from g_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1", "have h_is_pr: \"h \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec2", "unfolding h_def"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. (+) (g a)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "have f_at_Suc: \"\\<forall> y. f (Suc y) = h y (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. f (Suc y) = h y (f y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. f (Suc y) = h y (f y)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. f (Suc y) = h y (f y)", "show \"f (Suc y) = h y (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "from f_def"], ["proof (chain)\npicking this:\n  f ?n = sum g {i. i < ?n}", "have S1: \"f (Suc y) = sum g {i. i < Suc y}\""], ["proof (prove)\nusing this:\n  f ?n = sum g {i. i < ?n}\n\ngoal (1 subgoal):\n 1. f (Suc y) = sum g {i. i < Suc y}", "by auto"], ["proof (state)\nthis:\n  f (Suc y) = sum g {i. i < Suc y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "have S2: \"{i. i < Suc y} = {i. i < y} \\<union> {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < Suc y} = {i. i < y} \\<union> {y}", "by auto"], ["proof (state)\nthis:\n  {i. i < Suc y} = {i. i < y} \\<union> {y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "have S3: \"finite {i. i < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i < y}", "by (rule finite_interval)"], ["proof (state)\nthis:\n  finite {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "have S4: \"y \\<notin> {i. i < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> {i. i < y}", "by auto"], ["proof (state)\nthis:\n  y \\<notin> {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "from S1 S2"], ["proof (chain)\npicking this:\n  f (Suc y) = sum g {i. i < Suc y}\n  {i. i < Suc y} = {i. i < y} \\<union> {y}", "have \"f (Suc y) = sum g ({i. (i::nat) < y} \\<union> {y})\""], ["proof (prove)\nusing this:\n  f (Suc y) = sum g {i. i < Suc y}\n  {i. i < Suc y} = {i. i < y} \\<union> {y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = sum g ({i. i < y} \\<union> {y})", "by auto"], ["proof (state)\nthis:\n  f (Suc y) = sum g ({i. i < y} \\<union> {y})\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "also"], ["proof (state)\nthis:\n  f (Suc y) = sum g ({i. i < y} \\<union> {y})\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "from S3 S4 sum.insert"], ["proof (chain)\npicking this:\n  finite {i. i < y}\n  y \\<notin> {i. i < y}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A", "have \"\\<dots> = g y + sum g {i. i<y}\""], ["proof (prove)\nusing this:\n  finite {i. i < y}\n  y \\<notin> {i. i < y}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A\n\ngoal (1 subgoal):\n 1. sum g ({i. i < y} \\<union> {y}) = g y + sum g {i. i < y}", "by auto"], ["proof (state)\nthis:\n  sum g ({i. i < y} \\<union> {y}) = g y + sum g {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "also"], ["proof (state)\nthis:\n  sum g ({i. i < y} \\<union> {y}) = g y + sum g {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "from f_def"], ["proof (chain)\npicking this:\n  f ?n = sum g {i. i < ?n}", "have \"\\<dots> = g y + f y\""], ["proof (prove)\nusing this:\n  f ?n = sum g {i. i < ?n}\n\ngoal (1 subgoal):\n 1. g y + sum g {i. i < y} = g y + f y", "by auto"], ["proof (state)\nthis:\n  g y + sum g {i. i < y} = g y + f y\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "also"], ["proof (state)\nthis:\n  g y + sum g {i. i < y} = g y + f y\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "from h_def"], ["proof (chain)\npicking this:\n  h ?a ?b = g ?a + ?b", "have \"\\<dots> = h y (f y)\""], ["proof (prove)\nusing this:\n  h ?a ?b = g ?a + ?b\n\ngoal (1 subgoal):\n 1. g y + f y = h y (f y)", "by auto"], ["proof (state)\nthis:\n  g y + f y = h y (f y)\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) = h y (f y)", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) = h y (f y)\n\ngoal (1 subgoal):\n 1. f (Suc y) = h y (f y)", "by auto"], ["proof (state)\nthis:\n  f (Suc y) = h y (f y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Suc y) = h y (f y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y. f (Suc y) = h y (f y)\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "from h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  h \\<in> PrimRec2\n  f 0 = 0\n  \\<forall>y. f (Suc y) = h y (f y)", "have f_is_pr: \"f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  h \\<in> PrimRec2\n  f 0 = 0\n  \\<forall>y. f (Suc y) = h y (f y)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1", "by (rule pr_rec1_scheme)"], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "with f_def [abs_def]"], ["proof (chain)\npicking this:\n  f \\<equiv> \\<lambda>n. sum g {i. i < n}\n  f \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>n. sum g {i. i < n}\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. sum g {i. i < n}) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_of_pr_is_pr2: \"p \\<in> PrimRec2 \\<Longrightarrow> (\\<lambda> n m. sum (\\<lambda> x. p x m) {i. i<n}) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "assume p_is_pr: \"p \\<in> PrimRec2\""], ["proof (state)\nthis:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "define f where \"f n m = sum (\\<lambda> x. p x m) {i. i<n}\" for n m"], ["proof (state)\nthis:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "define g :: \"nat \\<Rightarrow> nat\" where \"g x = 0\" for x"], ["proof (state)\nthis:\n  g ?x = 0\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "by (unfold g_def, rule const_is_pr [where ?n=0])"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "have f_at_0: \"\\<forall> x. f 0 x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f 0 x = g x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "from f_def g_def"], ["proof (chain)\npicking this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n  g ?x = 0", "show \"f 0 x = g x\""], ["proof (prove)\nusing this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n  g ?x = 0\n\ngoal (1 subgoal):\n 1. f 0 x = g x", "by auto"], ["proof (state)\nthis:\n  f 0 x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. f 0 x = g x\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "define h where \"h a b c = p a c + b\" for a b c"], ["proof (state)\nthis:\n  h ?a ?b ?c = p ?a ?c + ?b\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "from p_is_pr"], ["proof (chain)\npicking this:\n  p \\<in> PrimRec2", "have h_is_pr: \"h \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec3", "unfolding h_def"], ["proof (prove)\nusing this:\n  p \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b c. p a c + b) \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "have f_at_Suc: \"\\<forall> x y. f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. f (Suc y) x = h y (f y x) x", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "show \"f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "from f_def"], ["proof (chain)\npicking this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)", "have S1: \"f (Suc y) x = sum (\\<lambda> z. p z x)  {i. i < Suc y}\""], ["proof (prove)\nusing this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n\ngoal (1 subgoal):\n 1. f (Suc y) x = (\\<Sum>z\\<in>{i. i < Suc y}. p z x)", "by auto"], ["proof (state)\nthis:\n  f (Suc y) x = (\\<Sum>z\\<in>{i. i < Suc y}. p z x)\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "have S2: \"{i. i < Suc y} = {i. i < y} \\<union> {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < Suc y} = {i. i < y} \\<union> {y}", "by auto"], ["proof (state)\nthis:\n  {i. i < Suc y} = {i. i < y} \\<union> {y}\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "have S3: \"finite {i. i < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i < y}", "by (rule finite_interval)"], ["proof (state)\nthis:\n  finite {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "have S4: \"y \\<notin> {i. i < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> {i. i < y}", "by auto"], ["proof (state)\nthis:\n  y \\<notin> {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "define g1 where \"g1 z = p z x\" for z"], ["proof (state)\nthis:\n  g1 ?z = p ?z x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "from S1 S2 g1_def"], ["proof (chain)\npicking this:\n  f (Suc y) x = (\\<Sum>z\\<in>{i. i < Suc y}. p z x)\n  {i. i < Suc y} = {i. i < y} \\<union> {y}\n  g1 ?z = p ?z x", "have \"f (Suc y) x = sum g1 ({i. (i::nat) < y} \\<union> {y})\""], ["proof (prove)\nusing this:\n  f (Suc y) x = (\\<Sum>z\\<in>{i. i < Suc y}. p z x)\n  {i. i < Suc y} = {i. i < y} \\<union> {y}\n  g1 ?z = p ?z x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = sum g1 ({i. i < y} \\<union> {y})", "by auto"], ["proof (state)\nthis:\n  f (Suc y) x = sum g1 ({i. i < y} \\<union> {y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  f (Suc y) x = sum g1 ({i. i < y} \\<union> {y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "from S3 S4 sum.insert"], ["proof (chain)\npicking this:\n  finite {i. i < y}\n  y \\<notin> {i. i < y}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A", "have \"\\<dots> = g1 y + sum g1 {i. i<y}\""], ["proof (prove)\nusing this:\n  finite {i. i < y}\n  y \\<notin> {i. i < y}\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g (insert ?x ?A) = ?g ?x + sum ?g ?A\n\ngoal (1 subgoal):\n 1. sum g1 ({i. i < y} \\<union> {y}) = g1 y + sum g1 {i. i < y}", "by auto"], ["proof (state)\nthis:\n  sum g1 ({i. i < y} \\<union> {y}) = g1 y + sum g1 {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  sum g1 ({i. i < y} \\<union> {y}) = g1 y + sum g1 {i. i < y}\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "from f_def g1_def"], ["proof (chain)\npicking this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n  g1 ?z = p ?z x", "have \"\\<dots> = g1 y + f y x\""], ["proof (prove)\nusing this:\n  f ?n ?m = (\\<Sum>x\\<in>{i. i < ?n}. p x ?m)\n  g1 ?z = p ?z x\n\ngoal (1 subgoal):\n 1. g1 y + sum g1 {i. i < y} = g1 y + f y x", "by auto"], ["proof (state)\nthis:\n  g1 y + sum g1 {i. i < y} = g1 y + f y x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  g1 y + sum g1 {i. i < y} = g1 y + f y x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "from h_def g1_def"], ["proof (chain)\npicking this:\n  h ?a ?b ?c = p ?a ?c + ?b\n  g1 ?z = p ?z x", "have \"\\<dots> = h y (f y x) x\""], ["proof (prove)\nusing this:\n  h ?a ?b ?c = p ?a ?c + ?b\n  g1 ?z = p ?z x\n\ngoal (1 subgoal):\n 1. g1 y + f y x = h y (f y x) x", "by auto"], ["proof (state)\nthis:\n  g1 y + f y x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) x = h y (f y x) x", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "by auto"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "from g_is_pr h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x", "have f_is_pr: \"f \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "by (rule pr_rec_scheme)"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. p \\<in> PrimRec2 \\<Longrightarrow>\n    (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "with f_def [abs_def]"], ["proof (chain)\npicking this:\n  f \\<equiv> \\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m\n  f \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n m. \\<Sum>x\\<in>{i. i < n}. p x m) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_is_pr: \"g \\<in> PrimRec1 \\<Longrightarrow> (\\<lambda> u. sum g (nat_to_set u)) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "assume g_is_pr: \"g \\<in> PrimRec1\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "define g1 where \"g1 x u = (if (c_in x u = 1) then (g x) else 0)\" for x u"], ["proof (state)\nthis:\n  g1 ?x ?u = (if c_in ?x ?u = 1 then g ?x else 0)\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "have g1_is_pr: \"g1 \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g1 \\<in> PrimRec2", "proof (unfold g1_def, rule if_eq_is_pr2)"], ["proof (state)\ngoal (4 subgoals):\n 1. c_in \\<in> PrimRec2\n 2. (\\<lambda>x y. 1) \\<in> PrimRec2\n 3. (\\<lambda>x y. g x) \\<in> PrimRec2\n 4. (\\<lambda>x y. 0) \\<in> PrimRec2", "show \"c_in \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "by (rule c_in_is_pr)"], ["proof (state)\nthis:\n  c_in \\<in> PrimRec2\n\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2\n 2. (\\<lambda>x y. g x) \\<in> PrimRec2\n 3. (\\<lambda>x y. 0) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2\n 2. (\\<lambda>x y. g x) \\<in> PrimRec2\n 3. (\\<lambda>x y. 0) \\<in> PrimRec2", "show \"(\\<lambda>x y. 1) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2", "by (rule const_is_pr_2 [where ?n=1])"], ["proof (state)\nthis:\n  (\\<lambda>x y. 1) \\<in> PrimRec2\n\ngoal (2 subgoals):\n 1. (\\<lambda>x y. g x) \\<in> PrimRec2\n 2. (\\<lambda>x y. 0) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x y. g x) \\<in> PrimRec2\n 2. (\\<lambda>x y. 0) \\<in> PrimRec2", "from g_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1", "show \"(\\<lambda>x y. g x) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. g x) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. g x) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2", "show \"(\\<lambda>x y. 0) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2", "by (rule const_is_pr_2 [where ?n=0])"], ["proof (state)\nthis:\n  (\\<lambda>x y. 0) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "define f where \"f u = sum (\\<lambda> x. g1 x u) {i. (i::nat) < u}\" for u"], ["proof (state)\nthis:\n  f ?u = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?u)\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "define f1 where \"f1 u v = sum (\\<lambda> x. g1 x v) {i. (i::nat) < u}\"  for u v"], ["proof (state)\nthis:\n  f1 ?u ?v = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?v)\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "from g1_is_pr"], ["proof (chain)\npicking this:\n  g1 \\<in> PrimRec2", "have \"(\\<lambda> (u::nat) v. sum (\\<lambda> x. g1 x v) {i. (i::nat) < u}) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  g1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v) \\<in> PrimRec2", "by (rule sum_of_pr_is_pr2)"], ["proof (state)\nthis:\n  (\\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "with f1_def [abs_def]"], ["proof (chain)\npicking this:\n  f1 \\<equiv> \\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v\n  (\\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v) \\<in> PrimRec2", "have f1_is_pr: \"f1 \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f1 \\<equiv> \\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v\n  (\\<lambda>u v. \\<Sum>x\\<in>{i. i < u}. g1 x v) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f1 \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  f1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "from f_def f1_def"], ["proof (chain)\npicking this:\n  f ?u = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?u)\n  f1 ?u ?v = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?v)", "have f_f1: \"f = (\\<lambda> u. f1 u u)\""], ["proof (prove)\nusing this:\n  f ?u = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?u)\n  f1 ?u ?v = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?v)\n\ngoal (1 subgoal):\n 1. f = (\\<lambda>u. f1 u u)", "by auto"], ["proof (state)\nthis:\n  f = (\\<lambda>u. f1 u u)\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "from f1_is_pr"], ["proof (chain)\npicking this:\n  f1 \\<in> PrimRec2", "have \"(\\<lambda> u. f1 u u) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f1 \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. f1 u u) \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>u. f1 u u) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "with f_f1"], ["proof (chain)\npicking this:\n  f = (\\<lambda>u. f1 u u)\n  (\\<lambda>u. f1 u u) \\<in> PrimRec1", "have f_is_pr: \"f \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  f = (\\<lambda>u. f1 u u)\n  (\\<lambda>u. f1 u u) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "have f_is_result: \"f = (\\<lambda> u. sum g (nat_to_set u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = (\\<lambda>u. sum g (nat_to_set u))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u. f u = sum g (nat_to_set u)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u. f u = sum g (nat_to_set u)", "show \"f u = sum g (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "define U where \"U = {i. i < u}\""], ["proof (state)\nthis:\n  U = {i. i < u}\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "define A where \"A = {x \\<in> U. c_in x u = 1}\""], ["proof (state)\nthis:\n  A = {x \\<in> U. c_in x u = 1}\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "define B where \"B = {x \\<in> U. c_in x u \\<noteq> 1}\""], ["proof (state)\nthis:\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "have U_finite: \"finite U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite U", "by (unfold U_def, rule finite_interval)"], ["proof (state)\nthis:\n  finite U\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from A_def U_finite"], ["proof (chain)\npicking this:\n  A = {x \\<in> U. c_in x u = 1}\n  finite U", "have A_finite: \"finite A\""], ["proof (prove)\nusing this:\n  A = {x \\<in> U. c_in x u = 1}\n  finite U\n\ngoal (1 subgoal):\n 1. finite A", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from B_def U_finite"], ["proof (chain)\npicking this:\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n  finite U", "have B_finite: \"finite B\""], ["proof (prove)\nusing this:\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n  finite U\n\ngoal (1 subgoal):\n 1. finite B", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from U_def A_def B_def"], ["proof (chain)\npicking this:\n  U = {i. i < u}\n  A = {x \\<in> U. c_in x u = 1}\n  B = {x \\<in> U. c_in x u \\<noteq> 1}", "have U_A_B: \"U = A \\<union> B\""], ["proof (prove)\nusing this:\n  U = {i. i < u}\n  A = {x \\<in> U. c_in x u = 1}\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n\ngoal (1 subgoal):\n 1. U = A \\<union> B", "by auto"], ["proof (state)\nthis:\n  U = A \\<union> B\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from U_def A_def B_def"], ["proof (chain)\npicking this:\n  U = {i. i < u}\n  A = {x \\<in> U. c_in x u = 1}\n  B = {x \\<in> U. c_in x u \\<noteq> 1}", "have A_B: \"A \\<inter> B = {}\""], ["proof (prove)\nusing this:\n  U = {i. i < u}\n  A = {x \\<in> U. c_in x u = 1}\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "by auto"], ["proof (state)\nthis:\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from B_def g1_def"], ["proof (chain)\npicking this:\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n  g1 ?x ?u = (if c_in ?x ?u = 1 then g ?x else 0)", "have B_z: \"sum (\\<lambda> x. g1 x u) B = 0\""], ["proof (prove)\nusing this:\n  B = {x \\<in> U. c_in x u \\<noteq> 1}\n  g1 ?x ?u = (if c_in ?x ?u = 1 then g ?x else 0)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>B. g1 x u) = 0", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>B. g1 x u) = 0\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "have u_in_U: \"nat_to_set u \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<subseteq> U", "by (unfold U_def, rule nat_to_set_upper_bound2)"], ["proof (state)\nthis:\n  nat_to_set u \\<subseteq> U\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from u_in_U x_in_u_eq A_def"], ["proof (chain)\npicking this:\n  nat_to_set u \\<subseteq> U\n  (?x \\<in> nat_to_set ?u) = (c_in ?x ?u = 1)\n  A = {x \\<in> U. c_in x u = 1}", "have A_u: \"A = nat_to_set u\""], ["proof (prove)\nusing this:\n  nat_to_set u \\<subseteq> U\n  (?x \\<in> nat_to_set ?u) = (c_in ?x ?u = 1)\n  A = {x \\<in> U. c_in x u = 1}\n\ngoal (1 subgoal):\n 1. A = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  A = nat_to_set u\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from A_u x_in_u_eq g1_def"], ["proof (chain)\npicking this:\n  A = nat_to_set u\n  (?x \\<in> nat_to_set ?u) = (c_in ?x ?u = 1)\n  g1 ?x ?u = (if c_in ?x ?u = 1 then g ?x else 0)", "have A_res: \"sum (\\<lambda> x. g1 x u) A = sum g (nat_to_set u)\""], ["proof (prove)\nusing this:\n  A = nat_to_set u\n  (?x \\<in> nat_to_set ?u) = (c_in ?x ?u = 1)\n  g1 ?x ?u = (if c_in ?x ?u = 1 then g ?x else 0)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from f_def"], ["proof (chain)\npicking this:\n  f ?u = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?u)", "have \"f u = sum (\\<lambda> x. g1 x u) {i. (i::nat) < u}\""], ["proof (prove)\nusing this:\n  f ?u = (\\<Sum>x\\<in>{i. i < ?u}. g1 x ?u)\n\ngoal (1 subgoal):\n 1. f u = (\\<Sum>x\\<in>{i. i < u}. g1 x u)", "by auto"], ["proof (state)\nthis:\n  f u = (\\<Sum>x\\<in>{i. i < u}. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "also"], ["proof (state)\nthis:\n  f u = (\\<Sum>x\\<in>{i. i < u}. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from U_def"], ["proof (chain)\npicking this:\n  U = {i. i < u}", "have \"\\<dots> = sum (\\<lambda> x. g1 x u) U\""], ["proof (prove)\nusing this:\n  U = {i. i < u}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{i. i < u}. g1 x u) = (\\<Sum>x\\<in>U. g1 x u)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{i. i < u}. g1 x u) = (\\<Sum>x\\<in>U. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{i. i < u}. g1 x u) = (\\<Sum>x\\<in>U. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from U_A_B"], ["proof (chain)\npicking this:\n  U = A \\<union> B", "have \"\\<dots> = sum (\\<lambda> x. g1 x u) (A \\<union> B)\""], ["proof (prove)\nusing this:\n  U = A \\<union> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>U. g1 x u) = (\\<Sum>x\\<in>A \\<union> B. g1 x u)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U. g1 x u) = (\\<Sum>x\\<in>A \\<union> B. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>U. g1 x u) = (\\<Sum>x\\<in>A \\<union> B. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from A_finite B_finite A_B"], ["proof (chain)\npicking this:\n  finite A\n  finite B\n  A \\<inter> B = {}", "have \"\\<dots> = sum (\\<lambda> x. g1 x u) A + sum (\\<lambda> x. g1 x u) B\""], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A \\<union> B. g1 x u) =\n    (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u)", "by (rule sum.union_disjoint)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A \\<union> B. g1 x u) =\n  (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A \\<union> B. g1 x u) =\n  (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from B_z"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>B. g1 x u) = 0", "have \"\\<dots> = sum (\\<lambda> x. g1 x u) A\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>B. g1 x u) = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u) =\n    (\\<Sum>x\\<in>A. g1 x u)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u) =\n  (\\<Sum>x\\<in>A. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. g1 x u) + (\\<Sum>x\\<in>B. g1 x u) =\n  (\\<Sum>x\\<in>A. g1 x u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "from A_res"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)", "have \"\\<dots> = sum g (nat_to_set u)\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>A. g1 x u) = sum g (nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "finally"], ["proof (chain)\npicking this:\n  f u = sum g (nat_to_set u)", "show ?thesis"], ["proof (prove)\nusing this:\n  f u = sum g (nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u = sum g (nat_to_set u)", "by auto"], ["proof (state)\nthis:\n  f u = sum g (nat_to_set u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f u = sum g (nat_to_set u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f = (\\<lambda>u. sum g (nat_to_set u))\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1 \\<Longrightarrow>\n    (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "with f_is_pr"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1\n  f = (\\<lambda>u. sum g (nat_to_set u))", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n  f = (\\<lambda>u. sum g (nat_to_set u))\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_card :: \"nat \\<Rightarrow> nat\" where\n  \"c_card = (\\<lambda> u. card (nat_to_set u))\""], ["", "theorem c_card_is_pr: \"c_card \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "define g :: \"nat \\<Rightarrow> nat\" where \"g x = 1\" for x"], ["proof (state)\nthis:\n  g ?x = 1\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "by (unfold g_def, rule const_is_pr)"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "have \"c_card = (\\<lambda> u. sum g (nat_to_set u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_card = (\\<lambda>u. sum g (nat_to_set u))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u. c_card u = sum g (nat_to_set u)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u. c_card u = sum g (nat_to_set u)", "show \"c_card u = sum g (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_card u = sum g (nat_to_set u)", "by (unfold c_card_def, unfold g_def, rule card_eq_sum)"], ["proof (state)\nthis:\n  c_card u = sum g (nat_to_set u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_card = (\\<lambda>u. sum g (nat_to_set u))\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "moreover"], ["proof (state)\nthis:\n  c_card = (\\<lambda>u. sum g (nat_to_set u))\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "from g_is_pr"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1", "have \"(\\<lambda> u. sum g (nat_to_set u)) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "by (rule sum_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "ultimately"], ["proof (chain)\npicking this:\n  c_card = (\\<lambda>u. sum g (nat_to_set u))\n  (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  c_card = (\\<lambda>u. sum g (nat_to_set u))\n  (\\<lambda>u. sum g (nat_to_set u)) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_card \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  c_card \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_insert :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"c_insert = (\\<lambda> x u. if c_in x u = 1 then u else u + 2^x)\""], ["", "lemma c_insert_is_pr: \"c_insert \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_insert \\<in> PrimRec2", "proof (unfold c_insert_def, rule if_eq_is_pr2)"], ["proof (state)\ngoal (4 subgoals):\n 1. c_in \\<in> PrimRec2\n 2. (\\<lambda>x y. 1) \\<in> PrimRec2\n 3. (\\<lambda>x y. y) \\<in> PrimRec2\n 4. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "show \"c_in \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "by (rule c_in_is_pr)"], ["proof (state)\nthis:\n  c_in \\<in> PrimRec2\n\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2\n 2. (\\<lambda>x y. y) \\<in> PrimRec2\n 3. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2\n 2. (\\<lambda>x y. y) \\<in> PrimRec2\n 3. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "show \"(\\<lambda>x y. 1) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 1) \\<in> PrimRec2", "by (rule const_is_pr_2)"], ["proof (state)\nthis:\n  (\\<lambda>x y. 1) \\<in> PrimRec2\n\ngoal (2 subgoals):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2\n 2. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2\n 2. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "show \"(\\<lambda>x y. y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2", "by (rule pr_id2_2)"], ["proof (state)\nthis:\n  (\\<lambda>x y. y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "from power_is_pr"], ["proof (chain)\npicking this:\n  (^) \\<in> PrimRec2", "show \"(\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (^) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. y + 2 ^ x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma [simp]: \"set_to_nat (nat_to_set u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "define D where \"D = nat_to_set u\""], ["proof (state)\nthis:\n  D = nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "from D_def nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  finite (nat_to_set ?u)", "have D_finite: \"finite D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "then"], ["proof (chain)\npicking this:\n  finite D", "have \"nat_to_set (set_to_nat D) = D\""], ["proof (prove)\nusing this:\n  finite D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = D", "by (rule nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "with D_def"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  nat_to_set (set_to_nat D) = D", "have \"nat_to_set (set_to_nat D) = nat_to_set u\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  nat_to_set (set_to_nat D) = D\n\ngoal (1 subgoal):\n 1. nat_to_set (set_to_nat D) = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  nat_to_set (set_to_nat D) = nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "then"], ["proof (chain)\npicking this:\n  nat_to_set (set_to_nat D) = nat_to_set u", "have \"set_to_nat D = u\""], ["proof (prove)\nusing this:\n  nat_to_set (set_to_nat D) = nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat D = u", "by (rule nat_to_set_inj)"], ["proof (state)\nthis:\n  set_to_nat D = u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "with D_def"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  set_to_nat D = u", "show ?thesis"], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  set_to_nat D = u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u) = u", "by auto"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u) = u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insert_lemma: \"x \\<notin> nat_to_set u \\<Longrightarrow> set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "assume A: \"x \\<notin> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "define D where \"D = nat_to_set u\""], ["proof (state)\nthis:\n  D = nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "from A D_def"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u\n  D = nat_to_set u", "have S1: \"x \\<notin> D\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n  D = nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> D", "by auto"], ["proof (state)\nthis:\n  x \\<notin> D\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "have \"finite (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "by (rule nat_to_set_is_finite)"], ["proof (state)\nthis:\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "with D_def"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  finite (nat_to_set u)", "have D_finite: \"finite D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "let ?f = \"\\<lambda> (x::nat). (2::nat)^x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "from set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)", "have \"set_to_nat (D \\<union> {x}) = sum ?f (D \\<union> {x})\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n\ngoal (1 subgoal):\n 1. set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "also"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "from D_finite S1"], ["proof (chain)\npicking this:\n  finite D\n  x \\<notin> D", "have \"\\<dots> = ?f x + sum ?f D\""], ["proof (prove)\nusing this:\n  finite D\n  x \\<notin> D\n\ngoal (1 subgoal):\n 1. sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D", "by simp"], ["proof (state)\nthis:\n  sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "also"], ["proof (state)\nthis:\n  sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "from set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)", "have \"\\<dots> = 2 ^ x + set_to_nat D\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n\ngoal (1 subgoal):\n 1. 2 ^ x + sum ((^) 2) D = 2 ^ x + set_to_nat D", "by auto"], ["proof (state)\nthis:\n  2 ^ x + sum ((^) 2) D = 2 ^ x + set_to_nat D\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "finally"], ["proof (chain)\npicking this:\n  set_to_nat (D \\<union> {x}) = 2 ^ x + set_to_nat D", "have \"set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\""], ["proof (prove)\nusing this:\n  set_to_nat (D \\<union> {x}) = 2 ^ x + set_to_nat D\n\ngoal (1 subgoal):\n 1. set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x", "by auto"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "with D_def"], ["proof (chain)\npicking this:\n  D = nat_to_set u\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x", "show ?thesis"], ["proof (prove)\nusing this:\n  D = nat_to_set u\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "by auto"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_insert_df: \"c_insert = (\\<lambda> x u. set_to_nat ((nat_to_set u) \\<union> {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_insert = (\\<lambda>x u. set_to_nat (nat_to_set u \\<union> {x}))", "proof (rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u. c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "fix x u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u. c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "show \"c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "assume A: \"x \\<in> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have \"nat_to_set u \\<union> {x} = nat_to_set u\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. nat_to_set u \\<union> {x} = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  nat_to_set u \\<union> {x} = nat_to_set u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "then"], ["proof (chain)\npicking this:\n  nat_to_set u \\<union> {x} = nat_to_set u", "have S1: \"set_to_nat (nat_to_set u \\<union> {x}) = u\""], ["proof (prove)\nusing this:\n  nat_to_set u \\<union> {x} = nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u \\<union> {x}) = u", "by auto"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u \\<union> {x}) = u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "from A"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have \"c_in x u = 1\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "then"], ["proof (chain)\npicking this:\n  c_in x u = 1", "have \"c_insert x u = u\""], ["proof (prove)\nusing this:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. c_insert x u = u", "by (unfold c_insert_def, simp)"], ["proof (state)\nthis:\n  c_insert x u = u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "with S1"], ["proof (chain)\npicking this:\n  set_to_nat (nat_to_set u \\<union> {x}) = u\n  c_insert x u = u", "show ?thesis"], ["proof (prove)\nusing this:\n  set_to_nat (nat_to_set u \\<union> {x}) = u\n  c_insert x u = u\n\ngoal (1 subgoal):\n 1. c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "assume A: \"x \\<notin> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "then"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u", "have S1: \"c_in x u \\<noteq> 1\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u \\<noteq> 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u \\<noteq> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "then"], ["proof (chain)\npicking this:\n  c_in x u \\<noteq> 1", "have S2: \"c_insert x u = u + 2 ^ x\""], ["proof (prove)\nusing this:\n  c_in x u \\<noteq> 1\n\ngoal (1 subgoal):\n 1. c_insert x u = u + 2 ^ x", "by (unfold c_insert_def, simp)"], ["proof (state)\nthis:\n  c_insert x u = u + 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "from A"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u", "have \"set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "by (rule insert_lemma)"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "with S2"], ["proof (chain)\npicking this:\n  c_insert x u = u + 2 ^ x\n  set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x", "show ?thesis"], ["proof (prove)\nusing this:\n  c_insert x u = u + 2 ^ x\n  set_to_nat (nat_to_set u \\<union> {x}) = u + 2 ^ x\n\ngoal (1 subgoal):\n 1. c_insert x u = set_to_nat (nat_to_set u \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_insert x u = set_to_nat (nat_to_set u \\<union> {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_remove :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"c_remove = (\\<lambda> x u. if c_in x u = 0 then u else u - 2^x)\""], ["", "lemma c_remove_is_pr: \"c_remove \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_remove \\<in> PrimRec2", "proof (unfold c_remove_def, rule if_eq_is_pr2)"], ["proof (state)\ngoal (4 subgoals):\n 1. c_in \\<in> PrimRec2\n 2. (\\<lambda>x y. 0) \\<in> PrimRec2\n 3. (\\<lambda>x y. y) \\<in> PrimRec2\n 4. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "show \"c_in \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_in \\<in> PrimRec2", "by (rule c_in_is_pr)"], ["proof (state)\nthis:\n  c_in \\<in> PrimRec2\n\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2\n 2. (\\<lambda>x y. y) \\<in> PrimRec2\n 3. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2\n 2. (\\<lambda>x y. y) \\<in> PrimRec2\n 3. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "show \"(\\<lambda>x y. 0) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. 0) \\<in> PrimRec2", "by (rule const_is_pr_2)"], ["proof (state)\nthis:\n  (\\<lambda>x y. 0) \\<in> PrimRec2\n\ngoal (2 subgoals):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2\n 2. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2\n 2. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "show \"(\\<lambda>x y. y) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y) \\<in> PrimRec2", "by (rule pr_id2_2)"], ["proof (state)\nthis:\n  (\\<lambda>x y. y) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "from power_is_pr"], ["proof (chain)\npicking this:\n  (^) \\<in> PrimRec2", "show \"(\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  (^) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>x y. y - 2 ^ x) \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_lemma: \"x \\<in> nat_to_set u \\<Longrightarrow> set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "assume A: \"x \\<in> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "define D where \"D = nat_to_set u - {x}\""], ["proof (state)\nthis:\n  D = nat_to_set u - {x}\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from A D_def"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u\n  D = nat_to_set u - {x}", "have S1: \"x \\<notin> D\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n  D = nat_to_set u - {x}\n\ngoal (1 subgoal):\n 1. x \\<notin> D", "by auto"], ["proof (state)\nthis:\n  x \\<notin> D\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "have \"finite (nat_to_set u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "by (rule nat_to_set_is_finite)"], ["proof (state)\nthis:\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "with D_def"], ["proof (chain)\npicking this:\n  D = nat_to_set u - {x}\n  finite (nat_to_set u)", "have D_finite: \"finite D\""], ["proof (prove)\nusing this:\n  D = nat_to_set u - {x}\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. finite D", "by auto"], ["proof (state)\nthis:\n  finite D\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "let ?f = \"\\<lambda> (x::nat). (2::nat)^x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)", "have \"set_to_nat (D \\<union> {x}) = sum ?f (D \\<union> {x})\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n\ngoal (1 subgoal):\n 1. set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "also"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = sum ((^) 2) (D \\<union> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from D_finite S1"], ["proof (chain)\npicking this:\n  finite D\n  x \\<notin> D", "have \"\\<dots> = ?f x + sum ?f D\""], ["proof (prove)\nusing this:\n  finite D\n  x \\<notin> D\n\ngoal (1 subgoal):\n 1. sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D", "by simp"], ["proof (state)\nthis:\n  sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "also"], ["proof (state)\nthis:\n  sum ((^) 2) (D \\<union> {x}) = 2 ^ x + sum ((^) 2) D\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from set_to_nat_def"], ["proof (chain)\npicking this:\n  set_to_nat = sum ((^) 2)", "have \"\\<dots> = 2 ^ x + set_to_nat D\""], ["proof (prove)\nusing this:\n  set_to_nat = sum ((^) 2)\n\ngoal (1 subgoal):\n 1. 2 ^ x + sum ((^) 2) D = 2 ^ x + set_to_nat D", "by auto"], ["proof (state)\nthis:\n  2 ^ x + sum ((^) 2) D = 2 ^ x + set_to_nat D\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "finally"], ["proof (chain)\npicking this:\n  set_to_nat (D \\<union> {x}) = 2 ^ x + set_to_nat D", "have S2: \"set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\""], ["proof (prove)\nusing this:\n  set_to_nat (D \\<union> {x}) = 2 ^ x + set_to_nat D\n\ngoal (1 subgoal):\n 1. set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x", "by auto"], ["proof (state)\nthis:\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from A D_def"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u\n  D = nat_to_set u - {x}", "have \"D \\<union> {x} = nat_to_set u\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n  D = nat_to_set u - {x}\n\ngoal (1 subgoal):\n 1. D \\<union> {x} = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  D \\<union> {x} = nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "with S2"], ["proof (chain)\npicking this:\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\n  D \\<union> {x} = nat_to_set u", "have S3: \"u = set_to_nat D + 2 ^ x\""], ["proof (prove)\nusing this:\n  set_to_nat (D \\<union> {x}) = set_to_nat D + 2 ^ x\n  D \\<union> {x} = nat_to_set u\n\ngoal (1 subgoal):\n 1. u = set_to_nat D + 2 ^ x", "by auto"], ["proof (state)\nthis:\n  u = set_to_nat D + 2 ^ x\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "from A"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have S4: \"2 ^ x \\<le> u\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. 2 ^ x \\<le> u", "by (rule nat_to_set_upper_bound)"], ["proof (state)\nthis:\n  2 ^ x \\<le> u\n\ngoal (1 subgoal):\n 1. x \\<in> nat_to_set u \\<Longrightarrow>\n    set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "with S3 D_def"], ["proof (chain)\npicking this:\n  u = set_to_nat D + 2 ^ x\n  D = nat_to_set u - {x}\n  2 ^ x \\<le> u", "show ?thesis"], ["proof (prove)\nusing this:\n  u = set_to_nat D + 2 ^ x\n  D = nat_to_set u - {x}\n  2 ^ x \\<le> u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "by auto"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_remove_df: \"c_remove = (\\<lambda> x u. set_to_nat ((nat_to_set u) - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_remove = (\\<lambda>x u. set_to_nat (nat_to_set u - {x}))", "proof (rule ext, rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u. c_remove x u = set_to_nat (nat_to_set u - {x})", "fix x u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u. c_remove x u = set_to_nat (nat_to_set u - {x})", "show \"c_remove x u = set_to_nat (nat_to_set u - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_remove x u = set_to_nat (nat_to_set u - {x})", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_remove x u = set_to_nat (nat_to_set u - {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "assume A: \"x \\<in> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<in> nat_to_set u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_remove x u = set_to_nat (nat_to_set u - {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have S1: \"c_in x u = 1\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u = 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_remove x u = set_to_nat (nat_to_set u - {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "then"], ["proof (chain)\npicking this:\n  c_in x u = 1", "have S2: \"c_remove x u = u - 2^x\""], ["proof (prove)\nusing this:\n  c_in x u = 1\n\ngoal (1 subgoal):\n 1. c_remove x u = u - 2 ^ x", "by (simp add: c_remove_def)"], ["proof (state)\nthis:\n  c_remove x u = u - 2 ^ x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_remove x u = set_to_nat (nat_to_set u - {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "from A"], ["proof (chain)\npicking this:\n  x \\<in> nat_to_set u", "have \"set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\""], ["proof (prove)\nusing this:\n  x \\<in> nat_to_set u\n\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "by (rule remove_lemma)"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c_remove x u = set_to_nat (nat_to_set u - {x})\n 2. \\<not> ?P \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "with S2"], ["proof (chain)\npicking this:\n  c_remove x u = u - 2 ^ x\n  set_to_nat (nat_to_set u - {x}) = u - 2 ^ x", "show ?thesis"], ["proof (prove)\nusing this:\n  c_remove x u = u - 2 ^ x\n  set_to_nat (nat_to_set u - {x}) = u - 2 ^ x\n\ngoal (1 subgoal):\n 1. c_remove x u = set_to_nat (nat_to_set u - {x})", "by auto"], ["proof (state)\nthis:\n  c_remove x u = set_to_nat (nat_to_set u - {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "assume A: \"x \\<notin> nat_to_set u\""], ["proof (state)\nthis:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "then"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u", "have S1: \"c_in x u \\<noteq> 1\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. c_in x u \\<noteq> 1", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  c_in x u \\<noteq> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "then"], ["proof (chain)\npicking this:\n  c_in x u \\<noteq> 1", "have S2: \"c_remove x u = u\""], ["proof (prove)\nusing this:\n  c_in x u \\<noteq> 1\n\ngoal (1 subgoal):\n 1. c_remove x u = u", "by (simp add: c_remove_def c_in_def)"], ["proof (state)\nthis:\n  c_remove x u = u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "from A"], ["proof (chain)\npicking this:\n  x \\<notin> nat_to_set u", "have \"nat_to_set u - {x} = nat_to_set u\""], ["proof (prove)\nusing this:\n  x \\<notin> nat_to_set u\n\ngoal (1 subgoal):\n 1. nat_to_set u - {x} = nat_to_set u", "by auto"], ["proof (state)\nthis:\n  nat_to_set u - {x} = nat_to_set u\n\ngoal (1 subgoal):\n 1. x \\<notin> nat_to_set u \\<Longrightarrow>\n    c_remove x u = set_to_nat (nat_to_set u - {x})", "with S2"], ["proof (chain)\npicking this:\n  c_remove x u = u\n  nat_to_set u - {x} = nat_to_set u", "show ?thesis"], ["proof (prove)\nusing this:\n  c_remove x u = u\n  nat_to_set u - {x} = nat_to_set u\n\ngoal (1 subgoal):\n 1. c_remove x u = set_to_nat (nat_to_set u - {x})", "by auto"], ["proof (state)\nthis:\n  c_remove x u = set_to_nat (nat_to_set u - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_remove x u = set_to_nat (nat_to_set u - {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_union :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"c_union = (\\<lambda> u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\""], ["", "theorem c_union_is_pr: \"c_union \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "define f where \"f y x = set_to_nat ((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\"\n    for y x"], ["proof (state)\nthis:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "have f_is_pr: \"f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "define g where \"g = c_fst\""], ["proof (state)\nthis:\n  g = c_fst\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from c_fst_is_pr g_def"], ["proof (chain)\npicking this:\n  c_fst \\<in> PrimRec1\n  g = c_fst", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  c_fst \\<in> PrimRec1\n  g = c_fst\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "define h where \"h a b c = (if c_in a (c_snd c) = 1 then c_insert a b else b)\" for a b c"], ["proof (state)\nthis:\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_insert ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from c_in_is_pr c_insert_is_pr"], ["proof (chain)\npicking this:\n  c_in \\<in> PrimRec2\n  c_insert \\<in> PrimRec2", "have h_is_pr: \"h \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  c_in \\<in> PrimRec2\n  c_insert \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec3", "unfolding h_def"], ["proof (prove)\nusing this:\n  c_in \\<in> PrimRec2\n  c_insert \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b c. if c_in a (c_snd c) = 1 then c_insert a b else b)\n    \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "have f_at_0: \"\\<forall> x. f 0 x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f 0 x = g x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "show \"f 0 x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 x = g x", "by (unfold f_def, unfold g_def, simp)"], ["proof (state)\nthis:\n  f 0 x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. f 0 x = g x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "have f_at_Suc: \"\\<forall> x y. f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. f (Suc y) x = h y (f y x) x", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "show \"f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "assume A: \"c_in y (c_snd x) = 1\""], ["proof (state)\nthis:\n  c_in y (c_snd x) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "then"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) = 1", "have S1: \"y \\<in> (nat_to_set (c_snd x))\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) = 1\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set (c_snd x)", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<in> nat_to_set (c_snd x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from A h_def"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) = 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_insert ?a ?b else ?b)", "have S2: \"h y (f y x) x = c_insert y (f y x)\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) = 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_insert ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. h y (f y x) x = c_insert y (f y x)", "by auto"], ["proof (state)\nthis:\n  h y (f y x) x = c_insert y (f y x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S1"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set (c_snd x)", "have S3: \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set (c_snd x)\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  finite (nat_to_set ?u)", "have S4: \"finite ((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\""], ["proof (prove)\nusing this:\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite\n     (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "with nat_to_set_srj f_def"], ["proof (chain)\npicking this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})", "have S5: \"nat_to_set (f y x) = (nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\nusing this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. nat_to_set (f y x) =\n    nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from f_def"], ["proof (chain)\npicking this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})", "have S6: \"f (Suc y) x = set_to_nat ((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\""], ["proof (prove)\nusing this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x =\n    set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < Suc y})", "by simp"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S3"], ["proof (chain)\npicking this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}", "have \"\\<dots> = set_to_nat (((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}) \\<union> {y})\""], ["proof (prove)\nusing this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n    set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n      {y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S5"], ["proof (chain)\npicking this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (nat_to_set (f y x) \\<union> {y})\""], ["proof (prove)\nusing this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n      {y}) =\n    set_to_nat (nat_to_set (f y x) \\<union> {y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {y}) =\n  set_to_nat (nat_to_set (f y x) \\<union> {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {y}) =\n  set_to_nat (nat_to_set (f y x) \\<union> {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "have \"\\<dots> = c_insert y (f y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set (f y x) \\<union> {y}) = c_insert y (f y x)", "by (simp add: c_insert_df)"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set (f y x) \\<union> {y}) = c_insert y (f y x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) x = c_insert y (f y x)", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) x = c_insert y (f y x)\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "by (simp add: S2)"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "assume A: \"\\<not> c_in y (c_snd x) = 1\""], ["proof (state)\nthis:\n  c_in y (c_snd x) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "then"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) \\<noteq> 1", "have S1: \"y \\<notin> (nat_to_set (c_snd x))\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. y \\<notin> nat_to_set (c_snd x)", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<notin> nat_to_set (c_snd x)\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from A h_def"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) \\<noteq> 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_insert ?a ?b else ?b)", "have S2: \"h y (f y x) x = f y x\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) \\<noteq> 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_insert ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. h y (f y x) x = f y x", "by auto"], ["proof (state)\nthis:\n  h y (f y x) x = f y x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "have S3: \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "have \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {z \\<in> nat_to_set (c_snd x). z = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {z \\<in> nat_to_set (c_snd x). z = y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "with S1"], ["proof (chain)\npicking this:\n  y \\<notin> nat_to_set (c_snd x)\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<notin> nat_to_set (c_snd x)\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  finite (nat_to_set ?u)", "have S4: \"finite ((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\""], ["proof (prove)\nusing this:\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite\n     (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "with nat_to_set_srj f_def"], ["proof (chain)\npicking this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})", "have S5: \"nat_to_set (f y x) = (nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\nusing this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. nat_to_set (f y x) =\n    nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from f_def"], ["proof (chain)\npicking this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})", "have S6: \"f (Suc y) x = set_to_nat ((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\""], ["proof (prove)\nusing this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x =\n    set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < Suc y})", "by simp"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from S3"], ["proof (chain)\npicking this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (((nat_to_set (c_fst x)) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}))\""], ["proof (prove)\nusing this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) \\<union>\n      {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n    set_to_nat\n     (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union>\n    {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from S5"], ["proof (chain)\npicking this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (nat_to_set (f y x))\""], ["proof (prove)\nusing this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}) =\n    set_to_nat (nat_to_set (f y x))", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}) =\n  set_to_nat (nat_to_set (f y x))\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) \\<union> {z \\<in> nat_to_set (c_snd x). z < y}) =\n  set_to_nat (nat_to_set (f y x))\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "have \"\\<dots> = f y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set (f y x)) = f y x", "by simp"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set (f y x)) = f y x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) x = f y x", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) x = f y x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "by (simp add: S2)"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from g_is_pr h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "by (rule pr_rec_scheme)"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "define union where \"union u v = f v (c_pair u v)\" for u v"], ["proof (state)\nthis:\n  union ?u ?v = f ?v (c_pair ?u ?v)\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "from f_is_pr"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2", "have union_is_pr: \"union \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. union \\<in> PrimRec2", "unfolding union_def"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u v. f v (c_pair u v)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  union \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "have \"\\<And> u v. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "show \"union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "from nat_to_set_upper_bound1"], ["proof (chain)\npicking this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u", "have \"{z \\<in> nat_to_set v. z < v} = nat_to_set v\""], ["proof (prove)\nusing this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set v. z < v} = nat_to_set v", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v\n\ngoal (1 subgoal):\n 1. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "with union_def f_def"], ["proof (chain)\npicking this:\n  union ?u ?v = f ?v (c_pair ?u ?v)\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v", "show ?thesis"], ["proof (prove)\nusing this:\n  union ?u ?v = f ?v (c_pair ?u ?v)\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) \\<union> {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v\n\ngoal (1 subgoal):\n 1. union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "by auto"], ["proof (state)\nthis:\n  union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  union ?u ?v = set_to_nat (nat_to_set ?u \\<union> nat_to_set ?v)\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  union ?u ?v = set_to_nat (nat_to_set ?u \\<union> nat_to_set ?v)", "have \"union = (\\<lambda> u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\""], ["proof (prove)\nusing this:\n  union ?u ?v = set_to_nat (nat_to_set ?u \\<union> nat_to_set ?v)\n\ngoal (1 subgoal):\n 1. union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))", "by (simp add: ext)"], ["proof (state)\nthis:\n  union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "with c_union_def"], ["proof (chain)\npicking this:\n  c_union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\n  union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))", "have \"c_union = union\""], ["proof (prove)\nusing this:\n  c_union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\n  union = (\\<lambda>u v. set_to_nat (nat_to_set u \\<union> nat_to_set v))\n\ngoal (1 subgoal):\n 1. c_union = union", "by simp"], ["proof (state)\nthis:\n  c_union = union\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "with union_is_pr"], ["proof (chain)\npicking this:\n  union \\<in> PrimRec2\n  c_union = union", "show ?thesis"], ["proof (prove)\nusing this:\n  union \\<in> PrimRec2\n  c_union = union\n\ngoal (1 subgoal):\n 1. c_union \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  c_union \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_diff :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"c_diff = (\\<lambda> u v. set_to_nat (nat_to_set u - nat_to_set v))\""], ["", "theorem c_diff_is_pr: \"c_diff \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "define f where \"f y x = set_to_nat ((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y})\"\n    for y x"], ["proof (state)\nthis:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "have f_is_pr: \"f \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "define g where \"g = c_fst\""], ["proof (state)\nthis:\n  g = c_fst\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from c_fst_is_pr g_def"], ["proof (chain)\npicking this:\n  c_fst \\<in> PrimRec1\n  g = c_fst", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  c_fst \\<in> PrimRec1\n  g = c_fst\n\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "by auto"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "define h where \"h a b c = (if c_in a (c_snd c) = 1 then c_remove a b else b)\" for a b c"], ["proof (state)\nthis:\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_remove ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from c_in_is_pr c_remove_is_pr"], ["proof (chain)\npicking this:\n  c_in \\<in> PrimRec2\n  c_remove \\<in> PrimRec2", "have h_is_pr: \"h \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  c_in \\<in> PrimRec2\n  c_remove \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec3", "unfolding h_def"], ["proof (prove)\nusing this:\n  c_in \\<in> PrimRec2\n  c_remove \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b c. if c_in a (c_snd c) = 1 then c_remove a b else b)\n    \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "have f_at_0: \"\\<forall> x. f 0 x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f 0 x = g x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f 0 x = g x", "show \"f 0 x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 x = g x", "by (unfold f_def, unfold g_def, simp)"], ["proof (state)\nthis:\n  f 0 x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. f 0 x = g x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "have f_at_Suc: \"\\<forall> x y. f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. f (Suc y) x = h y (f y x) x", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f (Suc y) x = h y (f y x) x", "show \"f (Suc y) x = h y (f y x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "assume A: \"c_in y (c_snd x) = 1\""], ["proof (state)\nthis:\n  c_in y (c_snd x) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "then"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) = 1", "have S1: \"y \\<in> (nat_to_set (c_snd x))\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) = 1\n\ngoal (1 subgoal):\n 1. y \\<in> nat_to_set (c_snd x)", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<in> nat_to_set (c_snd x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from A h_def"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) = 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_remove ?a ?b else ?b)", "have S2: \"h y (f y x) x = c_remove y (f y x)\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) = 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_remove ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. h y (f y x) x = c_remove y (f y x)", "by auto"], ["proof (state)\nthis:\n  h y (f y x) x = c_remove y (f y x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "have \"(nat_to_set (c_fst x)) - ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}) =\n              ((nat_to_set (c_fst x)) - ({z \\<in> nat_to_set (c_snd x). z < y}) - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}) =\n    nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}", "by auto"], ["proof (state)\nthis:\n  nat_to_set (c_fst x) -\n  ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "then"], ["proof (chain)\npicking this:\n  nat_to_set (c_fst x) -\n  ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}", "have lm1: \"set_to_nat (nat_to_set (c_fst x) - ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n                        set_to_nat (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})\""], ["proof (prove)\nusing this:\n  nat_to_set (c_fst x) -\n  ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) -\n      ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n    set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S1"], ["proof (chain)\npicking this:\n  y \\<in> nat_to_set (c_snd x)", "have S3: \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\""], ["proof (prove)\nusing this:\n  y \\<in> nat_to_set (c_snd x)\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  finite (nat_to_set ?u)", "have S4: \"finite ((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y})\""], ["proof (prove)\nusing this:\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "with nat_to_set_srj f_def"], ["proof (chain)\npicking this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})", "have S5: \"nat_to_set (f y x) = (nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\nusing this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. nat_to_set (f y x) =\n    nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from f_def"], ["proof (chain)\npicking this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})", "have S6: \"f (Suc y) x = set_to_nat ((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\""], ["proof (prove)\nusing this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x =\n    set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})", "by simp"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S3"], ["proof (chain)\npicking this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}", "have \"\\<dots> = set_to_nat ((nat_to_set (c_fst x)) - ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}))\""], ["proof (prove)\nusing this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n    set_to_nat\n     (nat_to_set (c_fst x) -\n      ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}))", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat\n   (nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y}))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "have \"\\<dots> = set_to_nat (((nat_to_set (c_fst x)) - ({z \\<in> nat_to_set (c_snd x). z < y}) - {y}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) -\n      ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n    set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})", "by (rule lm1)"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) -\n    ({z \\<in> nat_to_set (c_snd x). z < y} \\<union> {y})) =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "from S5"], ["proof (chain)\npicking this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (nat_to_set (f y x) - {y})\""], ["proof (prove)\nusing this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}) =\n    set_to_nat (nat_to_set (f y x) - {y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}) =\n  set_to_nat (nat_to_set (f y x) - {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y} - {y}) =\n  set_to_nat (nat_to_set (f y x) - {y})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "have \"\\<dots> = c_remove y (f y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set (f y x) - {y}) = c_remove y (f y x)", "by (simp add: c_remove_df)"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set (f y x) - {y}) = c_remove y (f y x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x\n 2. \\<not> ?P \\<Longrightarrow> f (Suc y) x = h y (f y x) x", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) x = c_remove y (f y x)", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) x = c_remove y (f y x)\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "by (simp add: S2)"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "assume A: \"\\<not> c_in y (c_snd x) = 1\""], ["proof (state)\nthis:\n  c_in y (c_snd x) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "then"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) \\<noteq> 1", "have S1: \"y \\<notin> (nat_to_set (c_snd x))\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. y \\<notin> nat_to_set (c_snd x)", "by (simp add: x_in_u_eq)"], ["proof (state)\nthis:\n  y \\<notin> nat_to_set (c_snd x)\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from A h_def"], ["proof (chain)\npicking this:\n  c_in y (c_snd x) \\<noteq> 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_remove ?a ?b else ?b)", "have S2: \"h y (f y x) x = f y x\""], ["proof (prove)\nusing this:\n  c_in y (c_snd x) \\<noteq> 1\n  h ?a ?b ?c = (if c_in ?a (c_snd ?c) = 1 then c_remove ?a ?b else ?b)\n\ngoal (1 subgoal):\n 1. h y (f y x) x = f y x", "by auto"], ["proof (state)\nthis:\n  h y (f y x) x = f y x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "have S3: \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "have \"{z \\<in> nat_to_set (c_snd x). z < Suc y} = {z \\<in> nat_to_set (c_snd x). z < y} \\<union> {z \\<in> nat_to_set (c_snd x). z = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n    {z \\<in> nat_to_set (c_snd x). z = y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "with S1"], ["proof (chain)\npicking this:\n  y \\<notin> nat_to_set (c_snd x)\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<notin> nat_to_set (c_snd x)\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y} \\<union>\n  {z \\<in> nat_to_set (c_snd x). z = y}\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n    {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from nat_to_set_is_finite"], ["proof (chain)\npicking this:\n  finite (nat_to_set ?u)", "have S4: \"finite ((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y})\""], ["proof (prove)\nusing this:\n  finite (nat_to_set ?u)\n\ngoal (1 subgoal):\n 1. finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "with nat_to_set_srj f_def"], ["proof (chain)\npicking this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})", "have S5: \"nat_to_set (f y x) = (nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y}\""], ["proof (prove)\nusing this:\n  finite ?D \\<Longrightarrow> nat_to_set (set_to_nat ?D) = ?D\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  finite (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. nat_to_set (f y x) =\n    nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}", "by auto"], ["proof (state)\nthis:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from f_def"], ["proof (chain)\npicking this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})", "have S6: \"f (Suc y) x = set_to_nat ((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\""], ["proof (prove)\nusing this:\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n\ngoal (1 subgoal):\n 1. f (Suc y) x =\n    set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})", "by simp"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  f (Suc y) x =\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from S3"], ["proof (chain)\npicking this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (((nat_to_set (c_fst x)) - {z \\<in> nat_to_set (c_snd x). z < y}))\""], ["proof (prove)\nusing this:\n  {z \\<in> nat_to_set (c_snd x). z < Suc y} =\n  {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n    set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < Suc y}) =\n  set_to_nat (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y})\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "from S5"], ["proof (chain)\npicking this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}", "have \"\\<dots> = set_to_nat (nat_to_set (f y x))\""], ["proof (prove)\nusing this:\n  nat_to_set (f y x) =\n  nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}\n\ngoal (1 subgoal):\n 1. set_to_nat\n     (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}) =\n    set_to_nat (nat_to_set (f y x))", "by auto"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}) =\n  set_to_nat (nat_to_set (f y x))\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "also"], ["proof (state)\nthis:\n  set_to_nat\n   (nat_to_set (c_fst x) - {z \\<in> nat_to_set (c_snd x). z < y}) =\n  set_to_nat (nat_to_set (f y x))\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "have \"\\<dots> = f y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_to_nat (nat_to_set (f y x)) = f y x", "by simp"], ["proof (state)\nthis:\n  set_to_nat (nat_to_set (f y x)) = f y x\n\ngoal (1 subgoal):\n 1. c_in y (c_snd x) \\<noteq> 1 \\<Longrightarrow>\n    f (Suc y) x = h y (f y x) x", "finally"], ["proof (chain)\npicking this:\n  f (Suc y) x = f y x", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc y) x = f y x\n\ngoal (1 subgoal):\n 1. f (Suc y) x = h y (f y x) x", "by (simp add: S2)"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Suc y) x = h y (f y x) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "from g_is_pr h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. f 0 x = g x\n  \\<forall>x y. f (Suc y) x = h y (f y x) x\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "by (rule pr_rec_scheme)"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "define diff where \"diff u v = f v (c_pair u v)\" for u v"], ["proof (state)\nthis:\n  diff ?u ?v = f ?v (c_pair ?u ?v)\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "from f_is_pr"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2", "have diff_is_pr: \"diff \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. diff \\<in> PrimRec2", "unfolding diff_def"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u v. f v (c_pair u v)) \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  diff \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "have \"\\<And> u v. diff u v = set_to_nat (nat_to_set u - nat_to_set v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "show \"diff u v = set_to_nat (nat_to_set u - nat_to_set v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "from nat_to_set_upper_bound1"], ["proof (chain)\npicking this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u", "have \"{z \\<in> nat_to_set v. z < v} = nat_to_set v\""], ["proof (prove)\nusing this:\n  ?x \\<in> nat_to_set ?u \\<Longrightarrow> ?x < ?u\n\ngoal (1 subgoal):\n 1. {z \\<in> nat_to_set v. z < v} = nat_to_set v", "by auto"], ["proof (state)\nthis:\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v\n\ngoal (1 subgoal):\n 1. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "with diff_def f_def"], ["proof (chain)\npicking this:\n  diff ?u ?v = f ?v (c_pair ?u ?v)\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v", "show ?thesis"], ["proof (prove)\nusing this:\n  diff ?u ?v = f ?v (c_pair ?u ?v)\n  f ?y ?x =\n  set_to_nat\n   (nat_to_set (c_fst ?x) - {z \\<in> nat_to_set (c_snd ?x). z < ?y})\n  {z \\<in> nat_to_set v. z < v} = nat_to_set v\n\ngoal (1 subgoal):\n 1. diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "by auto"], ["proof (state)\nthis:\n  diff u v = set_to_nat (nat_to_set u - nat_to_set v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diff u v = set_to_nat (nat_to_set u - nat_to_set v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  diff ?u ?v = set_to_nat (nat_to_set ?u - nat_to_set ?v)\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  diff ?u ?v = set_to_nat (nat_to_set ?u - nat_to_set ?v)", "have \"diff = (\\<lambda> u v. set_to_nat (nat_to_set u - nat_to_set v))\""], ["proof (prove)\nusing this:\n  diff ?u ?v = set_to_nat (nat_to_set ?u - nat_to_set ?v)\n\ngoal (1 subgoal):\n 1. diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))", "by (simp add: ext)"], ["proof (state)\nthis:\n  diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "with c_diff_def"], ["proof (chain)\npicking this:\n  c_diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))\n  diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))", "have \"c_diff = diff\""], ["proof (prove)\nusing this:\n  c_diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))\n  diff = (\\<lambda>u v. set_to_nat (nat_to_set u - nat_to_set v))\n\ngoal (1 subgoal):\n 1. c_diff = diff", "by simp"], ["proof (state)\nthis:\n  c_diff = diff\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "with diff_is_pr"], ["proof (chain)\npicking this:\n  diff \\<in> PrimRec2\n  c_diff = diff", "show ?thesis"], ["proof (prove)\nusing this:\n  diff \\<in> PrimRec2\n  c_diff = diff\n\ngoal (1 subgoal):\n 1. c_diff \\<in> PrimRec2", "by simp"], ["proof (state)\nthis:\n  c_diff \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  c_intersect :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"c_intersect = (\\<lambda> u v. set_to_nat (nat_to_set u \\<inter> nat_to_set v))\""], ["", "theorem c_intersect_is_pr: \"c_intersect \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "define f where \"f u v = c_diff (c_union u v) (c_union (c_diff u v) (c_diff v u))\" for u v"], ["proof (state)\nthis:\n  f ?u ?v = c_diff (c_union ?u ?v) (c_union (c_diff ?u ?v) (c_diff ?v ?u))\n\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "from c_diff_is_pr c_union_is_pr"], ["proof (chain)\npicking this:\n  c_diff \\<in> PrimRec2\n  c_union \\<in> PrimRec2", "have f_is_pr: \"f \\<in> PrimRec2\""], ["proof (prove)\nusing this:\n  c_diff \\<in> PrimRec2\n  c_union \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec2", "unfolding f_def"], ["proof (prove)\nusing this:\n  c_diff \\<in> PrimRec2\n  c_union \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>u v. c_diff (c_union u v) (c_union (c_diff u v) (c_diff v u)))\n    \\<in> PrimRec2", "by prec"], ["proof (state)\nthis:\n  f \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "have \"\\<And> u v. f u v = c_intersect u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v. f u v = c_intersect u v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. f u v = c_intersect u v", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. f u v = c_intersect u v", "show \"f u v = c_intersect u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "let ?A = \"nat_to_set u\""], ["proof (state)\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "let ?B = \"nat_to_set v\""], ["proof (state)\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have A_fin: \"finite ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set u)", "by (rule nat_to_set_is_finite)"], ["proof (state)\nthis:\n  finite (nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have B_fin: \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nat_to_set v)", "by (rule nat_to_set_is_finite)"], ["proof (state)\nthis:\n  finite (nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have S1: \"c_union u v = set_to_nat (?A \\<union> ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)", "by (simp add: c_union_def)"], ["proof (state)\nthis:\n  c_union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have S2: \"c_diff u v = set_to_nat (?A - ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_diff u v = set_to_nat (nat_to_set u - nat_to_set v)", "by (simp add: c_diff_def)"], ["proof (state)\nthis:\n  c_diff u v = set_to_nat (nat_to_set u - nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have S3: \"c_diff v u = set_to_nat (?B - ?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_diff v u = set_to_nat (nat_to_set v - nat_to_set u)", "by (simp add: c_diff_def)"], ["proof (state)\nthis:\n  c_diff v u = set_to_nat (nat_to_set v - nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S2 A_fin B_fin"], ["proof (chain)\npicking this:\n  c_diff u v = set_to_nat (nat_to_set u - nat_to_set v)\n  finite (nat_to_set u)\n  finite (nat_to_set v)", "have S4: \"nat_to_set (c_diff u v) = ?A - ?B\""], ["proof (prove)\nusing this:\n  c_diff u v = set_to_nat (nat_to_set u - nat_to_set v)\n  finite (nat_to_set u)\n  finite (nat_to_set v)\n\ngoal (1 subgoal):\n 1. nat_to_set (c_diff u v) = nat_to_set u - nat_to_set v", "by  (simp add: nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (c_diff u v) = nat_to_set u - nat_to_set v\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S3 A_fin B_fin"], ["proof (chain)\npicking this:\n  c_diff v u = set_to_nat (nat_to_set v - nat_to_set u)\n  finite (nat_to_set u)\n  finite (nat_to_set v)", "have S5: \"nat_to_set (c_diff v u) = ?B - ?A\""], ["proof (prove)\nusing this:\n  c_diff v u = set_to_nat (nat_to_set v - nat_to_set u)\n  finite (nat_to_set u)\n  finite (nat_to_set v)\n\ngoal (1 subgoal):\n 1. nat_to_set (c_diff v u) = nat_to_set v - nat_to_set u", "by  (simp add: nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (c_diff v u) = nat_to_set v - nat_to_set u\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S4 S5"], ["proof (chain)\npicking this:\n  nat_to_set (c_diff u v) = nat_to_set u - nat_to_set v\n  nat_to_set (c_diff v u) = nat_to_set v - nat_to_set u", "have S6: \"c_union (c_diff u v) (c_diff v u) = set_to_nat ((?A - ?B) \\<union> (?B - ?A))\""], ["proof (prove)\nusing this:\n  nat_to_set (c_diff u v) = nat_to_set u - nat_to_set v\n  nat_to_set (c_diff v u) = nat_to_set v - nat_to_set u\n\ngoal (1 subgoal):\n 1. c_union (c_diff u v) (c_diff v u) =\n    set_to_nat\n     (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))", "by (simp add: c_union_def)"], ["proof (state)\nthis:\n  c_union (c_diff u v) (c_diff v u) =\n  set_to_nat\n   (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S1 A_fin B_fin"], ["proof (chain)\npicking this:\n  c_union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\n  finite (nat_to_set u)\n  finite (nat_to_set v)", "have S7: \"nat_to_set (c_union u v) = ?A \\<union> ?B\""], ["proof (prove)\nusing this:\n  c_union u v = set_to_nat (nat_to_set u \\<union> nat_to_set v)\n  finite (nat_to_set u)\n  finite (nat_to_set v)\n\ngoal (1 subgoal):\n 1. nat_to_set (c_union u v) = nat_to_set u \\<union> nat_to_set v", "by  (simp add: nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (c_union u v) = nat_to_set u \\<union> nat_to_set v\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S6 A_fin B_fin"], ["proof (chain)\npicking this:\n  c_union (c_diff u v) (c_diff v u) =\n  set_to_nat\n   (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))\n  finite (nat_to_set u)\n  finite (nat_to_set v)", "have S8: \"nat_to_set (c_union (c_diff u v) (c_diff v u)) = (?A - ?B) \\<union> (?B - ?A)\""], ["proof (prove)\nusing this:\n  c_union (c_diff u v) (c_diff v u) =\n  set_to_nat\n   (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))\n  finite (nat_to_set u)\n  finite (nat_to_set v)\n\ngoal (1 subgoal):\n 1. nat_to_set (c_union (c_diff u v) (c_diff v u)) =\n    nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)", "by  (simp add: nat_to_set_srj)"], ["proof (state)\nthis:\n  nat_to_set (c_union (c_diff u v) (c_diff v u)) =\n  nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "from S7 S8"], ["proof (chain)\npicking this:\n  nat_to_set (c_union u v) = nat_to_set u \\<union> nat_to_set v\n  nat_to_set (c_union (c_diff u v) (c_diff v u)) =\n  nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)", "have S9: \"f u v = set_to_nat ((?A \\<union> ?B) - ((?A - ?B) \\<union> (?B - ?A)))\""], ["proof (prove)\nusing this:\n  nat_to_set (c_union u v) = nat_to_set u \\<union> nat_to_set v\n  nat_to_set (c_union (c_diff u v) (c_diff v u)) =\n  nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)\n\ngoal (1 subgoal):\n 1. f u v =\n    set_to_nat\n     (nat_to_set u \\<union> nat_to_set v -\n      (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)))", "by (simp add: c_diff_def f_def)"], ["proof (state)\nthis:\n  f u v =\n  set_to_nat\n   (nat_to_set u \\<union> nat_to_set v -\n    (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)))\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have S10: \"?A \\<inter> ?B = (?A \\<union> ?B) - ((?A - ?B) \\<union> (?B - ?A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_set u \\<inter> nat_to_set v =\n    nat_to_set u \\<union> nat_to_set v -\n    (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))", "by auto"], ["proof (state)\nthis:\n  nat_to_set u \\<inter> nat_to_set v =\n  nat_to_set u \\<union> nat_to_set v -\n  (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "with S9"], ["proof (chain)\npicking this:\n  f u v =\n  set_to_nat\n   (nat_to_set u \\<union> nat_to_set v -\n    (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)))\n  nat_to_set u \\<inter> nat_to_set v =\n  nat_to_set u \\<union> nat_to_set v -\n  (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))", "have S11: \"f u v = set_to_nat (?A \\<inter> ?B)\""], ["proof (prove)\nusing this:\n  f u v =\n  set_to_nat\n   (nat_to_set u \\<union> nat_to_set v -\n    (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u)))\n  nat_to_set u \\<inter> nat_to_set v =\n  nat_to_set u \\<union> nat_to_set v -\n  (nat_to_set u - nat_to_set v \\<union> (nat_to_set v - nat_to_set u))\n\ngoal (1 subgoal):\n 1. f u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)", "by auto"], ["proof (state)\nthis:\n  f u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "have \"c_intersect u v = set_to_nat (?A \\<inter> ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_intersect u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)", "by (simp add: c_intersect_def)"], ["proof (state)\nthis:\n  c_intersect u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "with S11"], ["proof (chain)\npicking this:\n  f u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)\n  c_intersect u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)", "show ?thesis"], ["proof (prove)\nusing this:\n  f u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)\n  c_intersect u v = set_to_nat (nat_to_set u \\<inter> nat_to_set v)\n\ngoal (1 subgoal):\n 1. f u v = c_intersect u v", "by auto"], ["proof (state)\nthis:\n  f u v = c_intersect u v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f u v = c_intersect u v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ?u ?v = c_intersect ?u ?v\n\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "then"], ["proof (chain)\npicking this:\n  f ?u ?v = c_intersect ?u ?v", "have \"f = c_intersect\""], ["proof (prove)\nusing this:\n  f ?u ?v = c_intersect ?u ?v\n\ngoal (1 subgoal):\n 1. f = c_intersect", "by (simp add: ext)"], ["proof (state)\nthis:\n  f = c_intersect\n\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "with f_is_pr"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec2\n  f = c_intersect", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec2\n  f = c_intersect\n\ngoal (1 subgoal):\n 1. c_intersect \\<in> PrimRec2", "by auto"], ["proof (state)\nthis:\n  c_intersect \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}