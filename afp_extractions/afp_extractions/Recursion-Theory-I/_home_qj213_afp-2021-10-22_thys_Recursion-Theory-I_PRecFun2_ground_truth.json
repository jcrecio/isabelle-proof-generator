{"file_name": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I/PRecFun2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Recursion-Theory-I", "problem_names": ["lemma unary_rec_into_pr: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> UnaryRecOp g h \\<in> PrimRec1\"", "lemma c_f_pair_to_pr: \"\\<lbrakk> f \\<in> PrimRec1; g \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\"", "lemma primrec'_into_primrec: \"f \\<in> PrimRec1' \\<Longrightarrow> f \\<in> PrimRec1\"", "lemma pr_id1_1': \"(\\<lambda> x. x) \\<in> PrimRec1'\"", "lemma pr_id2_1': \"pr_conv_2_to_1 (\\<lambda> x y. x) \\<in> PrimRec1'\"", "lemma pr_id2_2': \"pr_conv_2_to_1 (\\<lambda> x y. y) \\<in> PrimRec1'\"", "lemma pr_id3_1': \"pr_conv_3_to_1 (\\<lambda> x y z. x) \\<in> PrimRec1'\"", "lemma pr_id3_2': \"pr_conv_3_to_1 (\\<lambda> x y z. y) \\<in> PrimRec1'\"", "lemma pr_id3_3': \"pr_conv_3_to_1 (\\<lambda> x y z. z) \\<in> PrimRec1'\"", "lemma pr_comp2_1': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1'; h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> (\\<lambda> x. f (g x) (h x)) \\<in> PrimRec1'\"", "lemma pr_comp3_1': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1'; h \\<in> PrimRec1'; k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> (\\<lambda> x. f (g x) (h x) (k x)) \\<in> PrimRec1'\"", "lemma pr_comp1_2': \"\\<lbrakk> f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y)) \\<in> PrimRec1'\"", "lemma pr_comp1_3': \"\\<lbrakk> f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z)) \\<in> PrimRec1'\"", "lemma pr_comp2_2': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y) (h x y)) \\<in> PrimRec1'\"", "lemma pr_comp2_3': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z) (h x y z)) \\<in> PrimRec1'\"", "lemma pr_comp3_2': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1'; pr_conv_2_to_1 k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y) (h x y) (k x y)) \\<in> PrimRec1'\"", "lemma pr_comp3_3': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1'; pr_conv_3_to_1 k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z) (h x y z) (k x y z)) \\<in> PrimRec1'\"", "lemma lm': \"(f1 \\<in> PrimRec1 \\<longrightarrow> f1 \\<in> PrimRec1') \\<and> (g1 \\<in> PrimRec2 \\<longrightarrow> pr_conv_2_to_1 g1 \\<in> PrimRec1') \\<and> (h1 \\<in> PrimRec3 \\<longrightarrow> pr_conv_3_to_1 h1 \\<in> PrimRec1')\"", "theorem pr_1_eq_1': \"PrimRec1 = PrimRec1'\"", "lemma sch_to_pr_into_pr: \"sch_to_pr sch \\<in> PrimRec1\"", "lemma sch_to_pr_srj: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<exists> sch. f = sch_to_pr sch)\"", "lemma c_snd_snd_lt [termination_simp]: \"c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)\"", "lemma c_fst_snd_lt [termination_simp]: \"c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)\"", "lemma loc_srj_lm_1: \"nat_to_sch (Suc (Suc x)) = (let u=mod7 (c_fst (Suc (Suc x))); v=c_snd (Suc (Suc x)); v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\"", "lemma loc_srj_lm_2: \"x > 1 \\<Longrightarrow> nat_to_sch x = (let u=mod7 (c_fst x); v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\"", "lemma loc_srj_0: \"nat_to_sch (c_pair 1 0) = Base_suc\"", "lemma nat_to_sch_at_2: \"nat_to_sch 2 = Base_suc\"", "lemma loc_srj_1: \"nat_to_sch (c_pair 2 0) = Base_fst\"", "lemma loc_srj_2: \"nat_to_sch (c_pair 3 0) = Base_snd\"", "lemma loc_srj_3: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Comp_op sch1 sch2\"", "lemma loc_srj_3_1: \"nat_to_sch (c_pair 4 (c_pair n1 n2)) = Comp_op (nat_to_sch n1) (nat_to_sch n2)\"", "lemma loc_srj_4: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Pair_op sch1 sch2\"", "lemma loc_srj_4_1: \"nat_to_sch (c_pair 5 (c_pair n1 n2)) = Pair_op (nat_to_sch n1) (nat_to_sch n2)\"", "lemma loc_srj_5: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Rec_op sch1 sch2\"", "lemma loc_srj_5_1: \"nat_to_sch (c_pair 6 (c_pair n1 n2)) = Rec_op (nat_to_sch n1) (nat_to_sch n2)\"", "theorem nat_to_sch_srj: \"nat_to_sch (sch_to_nat sch) = sch\"", "theorem nat_to_pr_into_pr: \"nat_to_pr n \\<in> PrimRec1\"", "lemma nat_to_pr_srj: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<exists> n. f = nat_to_pr n)\"", "lemma nat_to_pr_at_0: \"nat_to_pr 0 = (\\<lambda> x. 0)\"", "theorem index_of_pr_is_real: \"f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f\"", "lemma comp_by_index_is_pr: \"comp_by_index \\<in> PrimRec2\"", "lemma comp_by_index_inj: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\"", "lemma comp_by_index_inj1: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> x1 = x2\"", "lemma comp_by_index_inj2: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> y1 = y2\"", "lemma comp_by_index_main: \"nat_to_pr (comp_by_index n1 n2) = (\\<lambda> x. (nat_to_pr n1) ((nat_to_pr n2) x))\"", "lemma pair_by_index_is_pr: \"pair_by_index \\<in> PrimRec2\"", "lemma pair_by_index_inj: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\"", "lemma pair_by_index_inj1: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> x1 = x2\"", "lemma pair_by_index_inj2: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> y1 = y2\"", "lemma pair_by_index_main: \"nat_to_pr (pair_by_index n1 n2) = c_f_pair (nat_to_pr n1) (nat_to_pr n2)\"", "lemma nat_to_sch_of_pair_by_index [simp]: \"nat_to_sch (pair_by_index n1 n2) = Pair_op (nat_to_sch n1) (nat_to_sch n2)\"", "lemma rec_by_index_is_pr: \"rec_by_index \\<in> PrimRec2\"", "lemma rec_by_index_inj: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\"", "lemma rec_by_index_inj1: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> x1 = x2\"", "lemma rec_by_index_inj2: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> y1 = y2\"", "lemma rec_by_index_main: \"nat_to_pr (rec_by_index n1 n2) = UnaryRecOp (nat_to_pr n1) (nat_to_pr n2)\"", "lemma index_of_const_is_pr: \"index_of_const \\<in> PrimRec1\"", "lemma index_of_const_at_0: \"index_of_const 0 = 0\"", "lemma index_of_const_at_suc: \"index_of_const (Suc u) = c_pair 4 (c_pair 2 (index_of_const u))\"", "lemma index_of_const_main: \"nat_to_pr (index_of_const n) = (\\<lambda> x. n)\" (is \"?P n\")", "lemma index_of_const_lm_1: \"(nat_to_pr (index_of_const n)) 0 = n\"", "lemma index_of_const_inj: \"index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2\"", "lemma index_of_zero_main: \"nat_to_pr index_of_zero = (\\<lambda> x. 0)\"", "lemma index_of_suc_main: \"nat_to_pr index_of_suc = Suc\"", "lemma index_of_c_fst_main: \"nat_to_pr index_of_c_fst = c_fst\"", "lemma [simp]: \"nat_to_sch index_of_c_fst = Base_fst\"", "lemma index_of_c_snd_main: \"nat_to_pr index_of_c_snd = c_snd\"", "lemma [simp]: \"nat_to_sch index_of_c_snd = Base_snd\"", "lemma index_of_id_main: \"nat_to_pr index_of_id = (\\<lambda> x. x)\"", "lemma index_of_c_pair_n_is_pr: \"index_of_c_pair_n \\<in> PrimRec1\"", "lemma index_of_c_pair_n_main: \"nat_to_pr (index_of_c_pair_n n) = (\\<lambda> x. c_pair n x)\"", "lemma index_of_c_pair_n_inj: \"index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1=x2\"", "lemma s1_1_is_pr: \"s1_1 \\<in> PrimRec2\"", "theorem s1_1_th: \"(\\<lambda> y. (nat_to_pr n) (c_pair x y)) = nat_to_pr (s1_1 n x)\"", "lemma s1_1_inj: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\"", "lemma s1_1_inj1: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1=x2\"", "lemma s1_1_inj2: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> y1=y2\"", "theorem pr_index_enumerator_is_pr: \"pr_index_enumerator \\<in> PrimRec2\"", "lemma pr_index_enumerator_increase1: \"pr_index_enumerator n m < pr_index_enumerator (n+1) m\"", "lemma pr_index_enumerator_increase2: \"pr_index_enumerator n m < pr_index_enumerator n (m + 1)\"", "lemma f_inc_mono: \"(\\<forall> (x::nat). (f::nat\\<Rightarrow>nat) x < f (x+1)) \\<Longrightarrow> \\<forall> (x::nat) (y::nat). (x < y \\<longrightarrow> f x < f y)\"", "lemma pr_index_enumerator_mono1: \"n1 < n2 \\<Longrightarrow> pr_index_enumerator n1 m < pr_index_enumerator n2 m\"", "lemma pr_index_enumerator_mono2: \"m1 < m2 \\<Longrightarrow> pr_index_enumerator n m1 < pr_index_enumerator n m2\"", "lemma f_mono_inj: \"\\<forall> (x::nat) (y::nat). (x < y \\<longrightarrow> (f::nat\\<Rightarrow>nat) x < f y) \\<Longrightarrow> \\<forall> (x::nat) (y::nat). (f x = f y \\<longrightarrow> x = y)\"", "theorem pr_index_enumerator_inj1: \"pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow> n1 = n2\"", "theorem pr_index_enumerator_inj2: \"pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow> m1 = m2\"", "theorem pr_index_enumerator_main: \"nat_to_pr n = nat_to_pr (pr_index_enumerator n m)\""], "translations": [["", "lemma unary_rec_into_pr: \"\\<lbrakk> g \\<in> PrimRec1; h \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> UnaryRecOp g h \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<in> PrimRec1; h \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> UnaryRecOp g h \\<in> PrimRec1", "by (simp add: UnaryRecOp_def pr_conv_1_to_3_lm pr_conv_2_to_1_lm pr_rec)"], ["", "definition\n  c_f_pair :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> (nat \\<Rightarrow> nat)\" where\n  \"c_f_pair = (\\<lambda> f g x. c_pair (f x) (g x))\""], ["", "lemma c_f_pair_to_pr: \"\\<lbrakk> f \\<in> PrimRec1; g \\<in> PrimRec1 \\<rbrakk> \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1; g \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1", "unfolding c_f_pair_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1; g \\<in> PrimRec1\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. c_pair (f x) (g x)) \\<in> PrimRec1", "by prec"], ["", "inductive_set PrimRec1' :: \"(nat \\<Rightarrow> nat) set\"\nwhere\n  zero: \"(\\<lambda> x. 0) \\<in> PrimRec1'\"\n  | suc:  \"Suc \\<in> PrimRec1'\"\n  | fst:  \"c_fst \\<in> PrimRec1'\"\n  | snd:  \"c_snd \\<in> PrimRec1'\"\n  | comp: \"\\<lbrakk> f \\<in> PrimRec1'; g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> (\\<lambda> x. f (g x)) \\<in> PrimRec1'\"\n  | pair: \"\\<lbrakk> f \\<in> PrimRec1'; g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1'\"\n  | un_rec: \"\\<lbrakk> f \\<in> PrimRec1'; g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1'\""], ["", "lemma primrec'_into_primrec: \"f \\<in> PrimRec1' \\<Longrightarrow> f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1' \\<Longrightarrow> f \\<in> PrimRec1", "proof (induct f rule: PrimRec1'.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1\n 2. Suc \\<in> PrimRec1\n 3. c_fst \\<in> PrimRec1\n 4. c_snd \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case zero"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1\n 2. Suc \\<in> PrimRec1\n 3. c_fst \\<in> PrimRec1\n 4. c_snd \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1", "by (rule pr_zero)"], ["proof (state)\nthis:\n  (\\<lambda>a. 0) \\<in> PrimRec1\n\ngoal (6 subgoals):\n 1. Suc \\<in> PrimRec1\n 2. c_fst \\<in> PrimRec1\n 3. c_snd \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. Suc \\<in> PrimRec1\n 2. c_fst \\<in> PrimRec1\n 3. c_snd \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case suc"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. Suc \\<in> PrimRec1\n 2. c_fst \\<in> PrimRec1\n 3. c_snd \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc \\<in> PrimRec1", "by (rule pr_suc)"], ["proof (state)\nthis:\n  Suc \\<in> PrimRec1\n\ngoal (5 subgoals):\n 1. c_fst \\<in> PrimRec1\n 2. c_snd \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. c_fst \\<in> PrimRec1\n 2. c_snd \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case fst"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. c_fst \\<in> PrimRec1\n 2. c_snd \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst \\<in> PrimRec1", "by (rule c_fst_is_pr)"], ["proof (state)\nthis:\n  c_fst \\<in> PrimRec1\n\ngoal (4 subgoals):\n 1. c_snd \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. c_snd \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case snd"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. c_snd \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd \\<in> PrimRec1", "by (rule c_snd_is_pr)"], ["proof (state)\nthis:\n  c_snd \\<in> PrimRec1\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case comp"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "from comp"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. f_ (g_ a)) \\<in> PrimRec1", "by (simp add: pr_comp1_1)"], ["proof (state)\nthis:\n  (\\<lambda>a. f_ (g_ a)) \\<in> PrimRec1\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case pair"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> c_f_pair f g \\<in> PrimRec1\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "from pair"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. c_f_pair f_ g_ \\<in> PrimRec1", "by (simp add: c_f_pair_to_pr)"], ["proof (state)\nthis:\n  c_f_pair f_ g_ \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "case un_rec"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; f \\<in> PrimRec1; g \\<in> PrimRec1';\n        g \\<in> PrimRec1\\<rbrakk>\n       \\<Longrightarrow> UnaryRecOp f g \\<in> PrimRec1", "from un_rec"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1'\n  f_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. UnaryRecOp f_ g_ \\<in> PrimRec1", "by (simp add: unary_rec_into_pr)"], ["proof (state)\nthis:\n  UnaryRecOp f_ g_ \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_id1_1': \"(\\<lambda> x. x) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "have \"c_f_pair c_fst c_snd \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_f_pair c_fst c_snd \\<in> PrimRec1'", "by (simp add: PrimRec1'.fst PrimRec1'.snd PrimRec1'.pair)"], ["proof (state)\nthis:\n  c_f_pair c_fst c_snd \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "moreover"], ["proof (state)\nthis:\n  c_f_pair c_fst c_snd \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "have \"c_f_pair c_fst c_snd = (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_f_pair c_fst c_snd = (\\<lambda>x. x)", "by (simp add: c_f_pair_def)"], ["proof (state)\nthis:\n  c_f_pair c_fst c_snd = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "ultimately"], ["proof (chain)\npicking this:\n  c_f_pair c_fst c_snd \\<in> PrimRec1'\n  c_f_pair c_fst c_snd = (\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_f_pair c_fst c_snd \\<in> PrimRec1'\n  c_f_pair c_fst c_snd = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) \\<in> PrimRec1'", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_id2_1': \"pr_conv_2_to_1 (\\<lambda> x y. x) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>x y. x) \\<in> PrimRec1'", "by (simp add: pr_conv_2_to_1_def PrimRec1'.fst)"], ["", "lemma pr_id2_2': \"pr_conv_2_to_1 (\\<lambda> x y. y) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>x y. y) \\<in> PrimRec1'", "by (simp add: pr_conv_2_to_1_def PrimRec1'.snd)"], ["", "lemma pr_id3_1': \"pr_conv_3_to_1 (\\<lambda> x y z. x) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "have \"pr_conv_3_to_1 (\\<lambda> x y z. x) = (\\<lambda>x. c_fst (c_fst x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) = (\\<lambda>x. c_fst (c_fst x))", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. x) = (\\<lambda>x. c_fst (c_fst x))\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "moreover"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. x) = (\\<lambda>x. c_fst (c_fst x))\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "from PrimRec1'.fst PrimRec1'.fst"], ["proof (chain)\npicking this:\n  c_fst \\<in> PrimRec1'\n  c_fst \\<in> PrimRec1'", "have \"(\\<lambda>x. c_fst (c_fst x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  c_fst \\<in> PrimRec1'\n  c_fst \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_fst (c_fst x)) \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. c_fst (c_fst x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "ultimately"], ["proof (chain)\npicking this:\n  pr_conv_3_to_1 (\\<lambda>x y z. x) = (\\<lambda>x. c_fst (c_fst x))\n  (\\<lambda>x. c_fst (c_fst x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 (\\<lambda>x y z. x) = (\\<lambda>x. c_fst (c_fst x))\n  (\\<lambda>x. c_fst (c_fst x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'", "by simp"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. x) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_id3_2': \"pr_conv_3_to_1 (\\<lambda> x y z. y) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "have \"pr_conv_3_to_1 (\\<lambda> x y z. y) = (\\<lambda>x. c_snd (c_fst x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) = (\\<lambda>x. c_snd (c_fst x))", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. y) = (\\<lambda>x. c_snd (c_fst x))\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "moreover"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. y) = (\\<lambda>x. c_snd (c_fst x))\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "from PrimRec1'.snd PrimRec1'.fst"], ["proof (chain)\npicking this:\n  c_snd \\<in> PrimRec1'\n  c_fst \\<in> PrimRec1'", "have \"(\\<lambda>x. c_snd (c_fst x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  c_snd \\<in> PrimRec1'\n  c_fst \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c_snd (c_fst x)) \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. c_snd (c_fst x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "ultimately"], ["proof (chain)\npicking this:\n  pr_conv_3_to_1 (\\<lambda>x y z. y) = (\\<lambda>x. c_snd (c_fst x))\n  (\\<lambda>x. c_snd (c_fst x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 (\\<lambda>x y z. y) = (\\<lambda>x. c_snd (c_fst x))\n  (\\<lambda>x. c_snd (c_fst x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'", "by simp"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. y) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_id3_3': \"pr_conv_3_to_1 (\\<lambda> x y z. z) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. z) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. z) \\<in> PrimRec1'", "have \"pr_conv_3_to_1 (\\<lambda> x y z. z) = (\\<lambda>x. c_snd x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. z) = c_snd", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. z) = c_snd\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. z) \\<in> PrimRec1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 (\\<lambda>x y z. z) = c_snd\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. z) \\<in> PrimRec1'", "by (simp add: PrimRec1'.snd)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. z) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp2_1': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1'; h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> (\\<lambda> x. f (g x) (h x)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "assume A1: \"pr_conv_2_to_1 f \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "assume A2: \"g \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "assume A3: \"h \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "let ?f1 = \"pr_conv_2_to_1 f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "have S1: \"(%x. ?f1 ((c_f_pair g h) x)) = (\\<lambda> x. f (g x) (h x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) =\n    (\\<lambda>x. f (g x) (h x))", "by (simp add: c_f_pair_def pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) =\n  (\\<lambda>x. f (g x) (h x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "from A2 A3"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1'\n  h \\<in> PrimRec1'", "have S2: \"c_f_pair g h \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1'\n  h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. c_f_pair g h \\<in> PrimRec1'", "by (rule PrimRec1'.pair)"], ["proof (state)\nthis:\n  c_f_pair g h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "from A1 S2"], ["proof (chain)\npicking this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  c_f_pair g h \\<in> PrimRec1'", "have S3: \"(%x. ?f1 ((c_f_pair g h) x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  c_f_pair g h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "with S1"], ["proof (chain)\npicking this:\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) =\n  (\\<lambda>x. f (g x) (h x))\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) =\n  (\\<lambda>x. f (g x) (h x))\n  (\\<lambda>x. pr_conv_2_to_1 f (c_f_pair g h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x) (h x)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp3_1': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1'; h \\<in> PrimRec1'; k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> (\\<lambda> x. f (g x) (h x) (k x)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "assume A1: \"pr_conv_3_to_1 f \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "assume A2: \"g \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "assume A3: \"h \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "assume A4: \"k \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "from A2 A3"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1'\n  h \\<in> PrimRec1'", "have \"c_f_pair g h \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1'\n  h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. c_f_pair g h \\<in> PrimRec1'", "by (rule PrimRec1'.pair)"], ["proof (state)\nthis:\n  c_f_pair g h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "from this A4"], ["proof (chain)\npicking this:\n  c_f_pair g h \\<in> PrimRec1'\n  k \\<in> PrimRec1'", "have \"c_f_pair (c_f_pair g h) k \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  c_f_pair g h \\<in> PrimRec1'\n  k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. c_f_pair (c_f_pair g h) k \\<in> PrimRec1'", "by (rule PrimRec1'.pair)"], ["proof (state)\nthis:\n  c_f_pair (c_f_pair g h) k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "from A1 this"], ["proof (chain)\npicking this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  c_f_pair (c_f_pair g h) k \\<in> PrimRec1'", "have \"(%x. (pr_conv_3_to_1 f) ((c_f_pair (c_f_pair g h) k) x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  c_f_pair (c_f_pair g h) k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. pr_conv_3_to_1 f (c_f_pair (c_f_pair g h) k x))\n    \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. pr_conv_3_to_1 f (c_f_pair (c_f_pair g h) k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1'; g \\<in> PrimRec1';\n     h \\<in> PrimRec1'; k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. pr_conv_3_to_1 f (c_f_pair (c_f_pair g h) k x))\n  \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. pr_conv_3_to_1 f (c_f_pair (c_f_pair g h) k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'", "by (simp add: c_f_pair_def pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. f (g x) (h x) (k x)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp1_2': \"\\<lbrakk> f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y))\n                      \\<in> PrimRec1'", "assume \"f \\<in> PrimRec1'\"\n  and \"pr_conv_2_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (pr_conv_2_to_1 g x)) \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>x y. f (g x y)) \\<in> PrimRec1'", "by (simp add: pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>x y. f (g x y)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp1_3': \"\\<lbrakk> f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z))\n                      \\<in> PrimRec1'", "assume \"f \\<in> PrimRec1'\"\n  and \"pr_conv_3_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (pr_conv_3_to_1 g x)) \\<in> PrimRec1'", "by (rule PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z)) \\<in> PrimRec1'", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp2_2': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y) (h x y)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1';\n     pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1';\n     pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y))\n                      \\<in> PrimRec1'", "assume \"pr_conv_2_to_1 f \\<in> PrimRec1'\"\n  and \"pr_conv_2_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")\n  and \"pr_conv_2_to_1 h \\<in> PrimRec1'\" (is \"?h1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1';\n     pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x) (?h1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x))\n    \\<in> PrimRec1'", "by (rule pr_comp2_1')"], ["proof (state)\nthis:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1';\n     pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y)) \\<in> PrimRec1'", "by (simp add: pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp2_3': \"\\<lbrakk> pr_conv_2_to_1 f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z) (h x y z)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1';\n     pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1';\n     pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z))\n                      \\<in> PrimRec1'", "assume \"pr_conv_2_to_1 f \\<in> PrimRec1'\"\n  and \"pr_conv_3_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")\n  and \"pr_conv_3_to_1 h \\<in> PrimRec1'\" (is \"?h1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1';\n     pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x) (?h1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_2_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x))\n    \\<in> PrimRec1'", "by (rule pr_comp2_1')"], ["proof (state)\nthis:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_2_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1';\n     pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x)) \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x)) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z)) \\<in> PrimRec1'", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp3_2': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1'; pr_conv_2_to_1 k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda> x y. f (g x y) (h x y) (k x y)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1';\n     pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1\n                       (\\<lambda>x y. f (g x y) (h x y) (k x y))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1';\n     pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1\n                       (\\<lambda>x y. f (g x y) (h x y) (k x y))\n                      \\<in> PrimRec1'", "assume \"pr_conv_3_to_1 f \\<in> PrimRec1'\"\n  and \"pr_conv_2_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")\n  and \"pr_conv_2_to_1 h \\<in> PrimRec1'\" (is \"?h1 \\<in> PrimRec1'\")\n  and \"pr_conv_2_to_1 k \\<in> PrimRec1'\" (is \"?k1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'\n  pr_conv_2_to_1 k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1';\n     pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1\n                       (\\<lambda>x y. f (g x y) (h x y) (k x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'\n  pr_conv_2_to_1 k \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x) (?h1 x) (?k1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_2_to_1 g \\<in> PrimRec1'\n  pr_conv_2_to_1 h \\<in> PrimRec1'\n  pr_conv_2_to_1 k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x) (pr_conv_2_to_1 k x))\n    \\<in> PrimRec1'", "by (rule pr_comp3_1')"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x) (pr_conv_2_to_1 k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_2_to_1 g \\<in> PrimRec1'; pr_conv_2_to_1 h \\<in> PrimRec1';\n     pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_2_to_1\n                       (\\<lambda>x y. f (g x y) (h x y) (k x y))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x) (pr_conv_2_to_1 k x))\n  \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      f (pr_conv_2_to_1 g x) (pr_conv_2_to_1 h x) (pr_conv_2_to_1 k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y) (k x y)) \\<in> PrimRec1'", "by (simp add: pr_conv_2_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>x y. f (g x y) (h x y) (k x y)) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_comp3_3': \"\\<lbrakk> pr_conv_3_to_1 f \\<in> PrimRec1'; pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1'; pr_conv_3_to_1 k \\<in> PrimRec1' \\<rbrakk> \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda> x y z. f (g x y z) (h x y z) (k x y z)) \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1';\n     pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1\n                       (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n                      \\<in> PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1';\n     pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1\n                       (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n                      \\<in> PrimRec1'", "assume \"pr_conv_3_to_1 f \\<in> PrimRec1'\"\n  and \"pr_conv_3_to_1 g \\<in> PrimRec1'\" (is \"?g1 \\<in> PrimRec1'\")\n  and \"pr_conv_3_to_1 h \\<in> PrimRec1'\" (is \"?h1 \\<in> PrimRec1'\")\n  and \"pr_conv_3_to_1 k \\<in> PrimRec1'\" (is \"?k1 \\<in> PrimRec1'\")"], ["proof (state)\nthis:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n  pr_conv_3_to_1 k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1';\n     pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1\n                       (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n  pr_conv_3_to_1 k \\<in> PrimRec1'", "have \"(\\<lambda> x. f (?g1 x) (?h1 x) (?k1 x)) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  pr_conv_3_to_1 f \\<in> PrimRec1'\n  pr_conv_3_to_1 g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n  pr_conv_3_to_1 k \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x) (pr_conv_3_to_1 k x))\n    \\<in> PrimRec1'", "by (rule pr_comp3_1')"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x) (pr_conv_3_to_1 k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>pr_conv_3_to_1 f \\<in> PrimRec1';\n     pr_conv_3_to_1 g \\<in> PrimRec1'; pr_conv_3_to_1 h \\<in> PrimRec1';\n     pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n    \\<Longrightarrow> pr_conv_3_to_1\n                       (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n                      \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x) (pr_conv_3_to_1 k x))\n  \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      f (pr_conv_3_to_1 g x) (pr_conv_3_to_1 h x) (pr_conv_3_to_1 k x))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n    \\<in> PrimRec1'", "by (simp add: pr_conv_3_to_1_def)"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>x y z. f (g x y z) (h x y z) (k x y z))\n  \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm': \"(f1 \\<in> PrimRec1 \\<longrightarrow> f1 \\<in> PrimRec1') \\<and> (g1 \\<in> PrimRec2 \\<longrightarrow> pr_conv_2_to_1 g1 \\<in> PrimRec1') \\<and> (h1 \\<in> PrimRec3 \\<longrightarrow> pr_conv_3_to_1 h1 \\<in> PrimRec1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f1 \\<in> PrimRec1 \\<longrightarrow> f1 \\<in> PrimRec1') \\<and>\n    (g1 \\<in> PrimRec2 \\<longrightarrow>\n     pr_conv_2_to_1 g1 \\<in> PrimRec1') \\<and>\n    (h1 \\<in> PrimRec3 \\<longrightarrow> pr_conv_3_to_1 h1 \\<in> PrimRec1')", "proof (induct rule: PrimRec1_PrimRec2_PrimRec3.induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1'\n 2. Suc \\<in> PrimRec1'\n 3. (\\<lambda>a. a) \\<in> PrimRec1'\n 4. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 5. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 7. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 8. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 10. \\<And>f g.\n        \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n         pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                          \\<in> PrimRec1'\nA total of 18 subgoals...", "case zero"], ["proof (state)\nthis:\n  \n\ngoal (18 subgoals):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1'\n 2. Suc \\<in> PrimRec1'\n 3. (\\<lambda>a. a) \\<in> PrimRec1'\n 4. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 5. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 7. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 8. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 10. \\<And>f g.\n        \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n         pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                          \\<in> PrimRec1'\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. 0) \\<in> PrimRec1'", "by (rule PrimRec1'.zero)"], ["proof (state)\nthis:\n  (\\<lambda>a. 0) \\<in> PrimRec1'\n\ngoal (17 subgoals):\n 1. Suc \\<in> PrimRec1'\n 2. (\\<lambda>a. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 4. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 7. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g.\n        \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n         pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                          \\<in> PrimRec1'\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. Suc \\<in> PrimRec1'\n 2. (\\<lambda>a. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 4. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 7. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g.\n        \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n         pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                          \\<in> PrimRec1'\nA total of 17 subgoals...", "case suc"], ["proof (state)\nthis:\n  \n\ngoal (17 subgoals):\n 1. Suc \\<in> PrimRec1'\n 2. (\\<lambda>a. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 4. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 7. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g.\n        \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n         pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                          \\<in> PrimRec1'\nA total of 17 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc \\<in> PrimRec1'", "by (rule PrimRec1'.suc)"], ["proof (state)\nthis:\n  Suc \\<in> PrimRec1'\n\ngoal (16 subgoals):\n 1. (\\<lambda>a. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. (\\<lambda>a. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\nA total of 16 subgoals...", "case id1_1"], ["proof (state)\nthis:\n  \n\ngoal (16 subgoals):\n 1. (\\<lambda>a. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 3. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 6. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. a) \\<in> PrimRec1'", "by (rule pr_id1_1')"], ["proof (state)\nthis:\n  (\\<lambda>a. a) \\<in> PrimRec1'\n\ngoal (15 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\nA total of 15 subgoals...", "case id2_1"], ["proof (state)\nthis:\n  \n\ngoal (15 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n 2. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 5. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n         h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\nA total of 15 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'", "by (rule pr_id2_1')"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>a b. a) \\<in> PrimRec1'\n\ngoal (14 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                          \\<in> PrimRec1'\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                          \\<in> PrimRec1'\nA total of 14 subgoals...", "case id2_2"], ["proof (state)\nthis:\n  \n\ngoal (14 subgoals):\n 1. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 4. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                          \\<in> PrimRec1'\nA total of 14 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'", "by (rule pr_id2_2')"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>a b. b) \\<in> PrimRec1'\n\ngoal (13 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c))\n                          \\<in> PrimRec1'\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c))\n                          \\<in> PrimRec1'\nA total of 13 subgoals...", "case id3_1"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 3. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h.\n        \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c))\n                          \\<in> PrimRec1'\nA total of 13 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'", "by (rule pr_id3_1')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. a) \\<in> PrimRec1'\n\ngoal (12 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1\n                           (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                          \\<in> PrimRec1'\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1\n                           (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                          \\<in> PrimRec1'\nA total of 12 subgoals...", "case id3_2"], ["proof (state)\nthis:\n  \n\ngoal (12 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n 2. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1\n                           (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                          \\<in> PrimRec1'\nA total of 12 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'", "by (rule pr_id3_2')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. b) \\<in> PrimRec1'\n\ngoal (11 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                          \\<in> PrimRec1'\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                          \\<in> PrimRec1'\nA total of 11 subgoals...", "case id3_3"], ["proof (state)\nthis:\n  \n\ngoal (11 subgoals):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 10. \\<And>f g h k.\n        \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n         g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n         h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n         k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_3_to_1\n                           (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                          \\<in> PrimRec1'\nA total of 11 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'", "by (rule pr_id3_3')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. c) \\<in> PrimRec1'\n\ngoal (10 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>g h.\n        \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n         pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>g h.\n        \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n         pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp1_1"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n\ngoal (10 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec1;\n        g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a)) \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 9. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 10. \\<And>g h.\n        \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n         pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n        \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp1_1"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. f_ (g_ a)) \\<in> PrimRec1'", "by (simp add: PrimRec1'.comp)"], ["proof (state)\nthis:\n  (\\<lambda>a. f_ (g_ a)) \\<in> PrimRec1'\n\ngoal (9 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp1_2"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n\ngoal (9 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec2;\n        pr_conv_2_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 8. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 9. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp1_2"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b)) \\<in> PrimRec1'", "by (simp add: pr_comp1_2')"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b)) \\<in> PrimRec1'\n\ngoal (8 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp1_3"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n\ngoal (8 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1; f \\<in> PrimRec1'; g \\<in> PrimRec3;\n        pr_conv_3_to_1 g \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1 (\\<lambda>a b c. f (g a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 7. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 8. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp1_3"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec1\n  f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c)) \\<in> PrimRec1'", "by (simp add: pr_comp1_3')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c)) \\<in> PrimRec1'\n\ngoal (7 subgoals):\n 1. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp2_1"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'\n\ngoal (7 subgoals):\n 1. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 6. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 7. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp2_1"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. f_ (g_ a) (h_ a)) \\<in> PrimRec1'", "by (simp add: pr_comp2_1')"], ["proof (state)\nthis:\n  (\\<lambda>a. f_ (g_ a) (h_ a)) \\<in> PrimRec1'\n\ngoal (6 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp2_2"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'\n\ngoal (6 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (\\<lambda>a b. f (g a b) (h a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 5. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 6. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp2_2"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b) (h_ a b)) \\<in> PrimRec1'", "by (simp add: pr_comp2_2')"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b) (h_ a b)) \\<in> PrimRec1'\n\ngoal (5 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp2_3"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n\ngoal (5 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h.\n       \\<lbrakk>f \\<in> PrimRec2; pr_conv_2_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 4. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 5. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp2_3"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec2\n  pr_conv_2_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c) (h_ a b c))\n    \\<in> PrimRec1'", "by (simp add: pr_comp2_3')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c) (h_ a b c)) \\<in> PrimRec1'\n\ngoal (4 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp3_1"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec1\n  k_ \\<in> PrimRec1'\n\ngoal (4 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec1;\n        h \\<in> PrimRec1'; k \\<in> PrimRec1; k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>a. f (g a) (h a) (k a)) \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 3. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 4. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp3_1"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec1\n  k_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec1\n  h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec1\n  k_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. f_ (g_ a) (h_ a) (k_ a)) \\<in> PrimRec1'", "by (simp add: pr_comp3_1')"], ["proof (state)\nthis:\n  (\\<lambda>a. f_ (g_ a) (h_ a) (k_ a)) \\<in> PrimRec1'\n\ngoal (3 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp3_2"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec2\n  pr_conv_2_to_1 k_ \\<in> PrimRec1'\n\ngoal (3 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec2; pr_conv_2_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec2; pr_conv_2_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec2; pr_conv_2_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1\n                          (\\<lambda>a b. f (g a b) (h a b) (k a b))\n                         \\<in> PrimRec1'\n 2. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 3. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp3_2"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec2\n  pr_conv_2_to_1 k_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec2\n  pr_conv_2_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec2\n  pr_conv_2_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec2\n  pr_conv_2_to_1 k_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b) (h_ a b) (k_ a b))\n    \\<in> PrimRec1'", "by (simp add: pr_comp3_2')"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (\\<lambda>a b. f_ (g_ a b) (h_ a b) (k_ a b))\n  \\<in> PrimRec1'\n\ngoal (2 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case comp3_3"], ["proof (state)\nthis:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec3\n  pr_conv_3_to_1 k_ \\<in> PrimRec1'\n\ngoal (2 subgoals):\n 1. \\<And>f g h k.\n       \\<lbrakk>f \\<in> PrimRec3; pr_conv_3_to_1 f \\<in> PrimRec1';\n        g \\<in> PrimRec3; pr_conv_3_to_1 g \\<in> PrimRec1';\n        h \\<in> PrimRec3; pr_conv_3_to_1 h \\<in> PrimRec1';\n        k \\<in> PrimRec3; pr_conv_3_to_1 k \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_3_to_1\n                          (\\<lambda>a b c. f (g a b c) (h a b c) (k a b c))\n                         \\<in> PrimRec1'\n 2. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "from comp3_3"], ["proof (chain)\npicking this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec3\n  pr_conv_3_to_1 k_ \\<in> PrimRec1'", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in> PrimRec3\n  pr_conv_3_to_1 f_ \\<in> PrimRec1'\n  g_ \\<in> PrimRec3\n  pr_conv_3_to_1 g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n  k_ \\<in> PrimRec3\n  pr_conv_3_to_1 k_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c) (h_ a b c) (k_ a b c))\n    \\<in> PrimRec1'", "by (simp add: pr_comp3_3')"], ["proof (state)\nthis:\n  pr_conv_3_to_1 (\\<lambda>a b c. f_ (g_ a b c) (h_ a b c) (k_ a b c))\n  \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "case prim_rec"], ["proof (state)\nthis:\n  g_ \\<in> PrimRec1\n  g_ \\<in> PrimRec1'\n  h_ \\<in> PrimRec3\n  pr_conv_3_to_1 h_ \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "fix g h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "assume A1: \"g \\<in> PrimRec1'\" and \"pr_conv_3_to_1 h \\<in> PrimRec1'\""], ["proof (state)\nthis:\n  g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "then"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'", "have \"UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1'\n  pr_conv_3_to_1 h \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'", "by (rule PrimRec1'.un_rec)"], ["proof (state)\nthis:\n  UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "moreover"], ["proof (state)\nthis:\n  UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "have \"UnaryRecOp g (pr_conv_3_to_1 h) = pr_conv_2_to_1 (PrimRecOp g h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UnaryRecOp g (pr_conv_3_to_1 h) = pr_conv_2_to_1 (PrimRecOp g h)", "by (simp add: UnaryRecOp_def)"], ["proof (state)\nthis:\n  UnaryRecOp g (pr_conv_3_to_1 h) = pr_conv_2_to_1 (PrimRecOp g h)\n\ngoal (1 subgoal):\n 1. \\<And>g h.\n       \\<lbrakk>g \\<in> PrimRec1; g \\<in> PrimRec1'; h \\<in> PrimRec3;\n        pr_conv_3_to_1 h \\<in> PrimRec1'\\<rbrakk>\n       \\<Longrightarrow> pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "ultimately"], ["proof (chain)\npicking this:\n  UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'\n  UnaryRecOp g (pr_conv_3_to_1 h) = pr_conv_2_to_1 (PrimRecOp g h)", "show \"pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  UnaryRecOp g (pr_conv_3_to_1 h) \\<in> PrimRec1'\n  UnaryRecOp g (pr_conv_3_to_1 h) = pr_conv_2_to_1 (PrimRecOp g h)\n\ngoal (1 subgoal):\n 1. pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'", "by simp"], ["proof (state)\nthis:\n  pr_conv_2_to_1 (PrimRecOp g h) \\<in> PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_1_eq_1': \"PrimRec1 = PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PrimRec1 = PrimRec1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PrimRec1 = PrimRec1'", "have S1: \"\\<And> f. f \\<in> PrimRec1 \\<longrightarrow> f \\<in> PrimRec1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> PrimRec1 \\<longrightarrow> f \\<in> PrimRec1'", "by (simp add: lm')"], ["proof (state)\nthis:\n  ?f \\<in> PrimRec1 \\<longrightarrow> ?f \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. PrimRec1 = PrimRec1'", "have S2: \"\\<And> f. f \\<in> PrimRec1' \\<longrightarrow> f \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> PrimRec1' \\<longrightarrow> f \\<in> PrimRec1", "by (simp add: primrec'_into_primrec)"], ["proof (state)\nthis:\n  ?f \\<in> PrimRec1' \\<longrightarrow> ?f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. PrimRec1 = PrimRec1'", "from S1 S2"], ["proof (chain)\npicking this:\n  ?f \\<in> PrimRec1 \\<longrightarrow> ?f \\<in> PrimRec1'\n  ?f \\<in> PrimRec1' \\<longrightarrow> ?f \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  ?f \\<in> PrimRec1 \\<longrightarrow> ?f \\<in> PrimRec1'\n  ?f \\<in> PrimRec1' \\<longrightarrow> ?f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. PrimRec1 = PrimRec1'", "by blast"], ["proof (state)\nthis:\n  PrimRec1 = PrimRec1'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The scheme datatype\\<close>"], ["", "datatype PrimScheme = Base_zero | Base_suc | Base_fst | Base_snd\n                      | Comp_op PrimScheme PrimScheme\n                      | Pair_op PrimScheme PrimScheme\n                      | Rec_op PrimScheme PrimScheme"], ["", "primrec\n  sch_to_pr :: \"PrimScheme \\<Rightarrow> (nat \\<Rightarrow> nat)\"\nwhere\n  \"sch_to_pr Base_zero = (\\<lambda> x. 0)\"\n| \"sch_to_pr Base_suc = Suc\"\n| \"sch_to_pr Base_fst = c_fst\"\n| \"sch_to_pr Base_snd = c_snd\"\n| \"sch_to_pr (Comp_op t1 t2)  = (\\<lambda> x. (sch_to_pr t1) ((sch_to_pr t2) x))\"\n| \"sch_to_pr (Pair_op t1 t2)  = c_f_pair (sch_to_pr t1) (sch_to_pr t2)\"\n| \"sch_to_pr (Rec_op t1 t2)  = UnaryRecOp (sch_to_pr t1) (sch_to_pr t2)\""], ["", "lemma sch_to_pr_into_pr: \"sch_to_pr sch \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sch_to_pr sch \\<in> PrimRec1", "by (simp add: pr_1_eq_1', induct sch, simp_all add: PrimRec1'.intros)"], ["", "lemma sch_to_pr_srj: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<exists> sch. f = sch_to_pr sch)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>sch. f = sch_to_pr sch", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>sch. f = sch_to_pr sch", "assume \"f \\<in> PrimRec1\""], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>sch. f = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1", "have A1: \"f \\<in> PrimRec1'\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1'", "by (simp add: pr_1_eq_1')"], ["proof (state)\nthis:\n  f \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>sch. f = sch_to_pr sch", "from A1"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1'", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1'\n\ngoal (1 subgoal):\n 1. \\<exists>sch. f = sch_to_pr sch", "proof (induct f rule: PrimRec1'.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<exists>sch. (\\<lambda>a. 0) = sch_to_pr sch\n 2. \\<exists>sch. Suc = sch_to_pr sch\n 3. \\<exists>sch. c_fst = sch_to_pr sch\n 4. \\<exists>sch. c_snd = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "have \"(\\<lambda> x. 0) = sch_to_pr Base_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 0) = sch_to_pr Base_zero", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) = sch_to_pr Base_zero\n\ngoal (7 subgoals):\n 1. \\<exists>sch. (\\<lambda>a. 0) = sch_to_pr sch\n 2. \\<exists>sch. Suc = sch_to_pr sch\n 3. \\<exists>sch. c_fst = sch_to_pr sch\n 4. \\<exists>sch. c_snd = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 7. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. 0) = sch_to_pr Base_zero", "show \"\\<exists>sch. (\\<lambda>u. 0) = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. 0) = sch_to_pr Base_zero\n\ngoal (1 subgoal):\n 1. \\<exists>sch. (\\<lambda>u. 0) = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. (\\<lambda>u. 0) = sch_to_pr sch\n\ngoal (6 subgoals):\n 1. \\<exists>sch. Suc = sch_to_pr sch\n 2. \\<exists>sch. c_fst = sch_to_pr sch\n 3. \\<exists>sch. c_snd = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<exists>sch. Suc = sch_to_pr sch\n 2. \\<exists>sch. c_fst = sch_to_pr sch\n 3. \\<exists>sch. c_snd = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "have \"Suc = sch_to_pr Base_suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc = sch_to_pr Base_suc", "by simp"], ["proof (state)\nthis:\n  Suc = sch_to_pr Base_suc\n\ngoal (6 subgoals):\n 1. \\<exists>sch. Suc = sch_to_pr sch\n 2. \\<exists>sch. c_fst = sch_to_pr sch\n 3. \\<exists>sch. c_snd = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 6. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  Suc = sch_to_pr Base_suc", "show \"\\<exists>sch. Suc = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  Suc = sch_to_pr Base_suc\n\ngoal (1 subgoal):\n 1. \\<exists>sch. Suc = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. Suc = sch_to_pr sch\n\ngoal (5 subgoals):\n 1. \\<exists>sch. c_fst = sch_to_pr sch\n 2. \\<exists>sch. c_snd = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<exists>sch. c_fst = sch_to_pr sch\n 2. \\<exists>sch. c_snd = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "have \"c_fst = sch_to_pr Base_fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst = sch_to_pr Base_fst", "by simp"], ["proof (state)\nthis:\n  c_fst = sch_to_pr Base_fst\n\ngoal (5 subgoals):\n 1. \\<exists>sch. c_fst = sch_to_pr sch\n 2. \\<exists>sch. c_snd = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 5. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  c_fst = sch_to_pr Base_fst", "show \"\\<exists>sch. c_fst = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  c_fst = sch_to_pr Base_fst\n\ngoal (1 subgoal):\n 1. \\<exists>sch. c_fst = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. c_fst = sch_to_pr sch\n\ngoal (4 subgoals):\n 1. \\<exists>sch. c_snd = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<exists>sch. c_snd = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "have \"c_snd = sch_to_pr Base_snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd = sch_to_pr Base_snd", "by simp"], ["proof (state)\nthis:\n  c_snd = sch_to_pr Base_snd\n\ngoal (4 subgoals):\n 1. \\<exists>sch. c_snd = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 4. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  c_snd = sch_to_pr Base_snd", "show \"\\<exists>sch. c_snd = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  c_snd = sch_to_pr Base_snd\n\ngoal (1 subgoal):\n 1. \\<exists>sch. c_snd = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. c_snd = sch_to_pr sch\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "fix f1 f2"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "assume B1: \"\\<exists>sch. f1 = sch_to_pr sch\" and B2: \"\\<exists>sch. f2 = sch_to_pr sch\""], ["proof (state)\nthis:\n  \\<exists>sch. f1 = sch_to_pr sch\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B1"], ["proof (chain)\npicking this:\n  \\<exists>sch. f1 = sch_to_pr sch", "obtain sch1 where S1: \"f1 = sch_to_pr sch1\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f1 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch1.\n        f1 = sch_to_pr sch1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f1 = sch_to_pr sch1\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B2"], ["proof (chain)\npicking this:\n  \\<exists>sch. f2 = sch_to_pr sch", "obtain sch2 where S2: \"f2 = sch_to_pr sch2\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch2.\n        f2 = sch_to_pr sch2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f2 = sch_to_pr sch2\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from S1 S2"], ["proof (chain)\npicking this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2", "have \"(\\<lambda> x. f1 (f2 x)) = sch_to_pr (Comp_op sch1 sch2)\""], ["proof (prove)\nusing this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f1 (f2 x)) = sch_to_pr (Comp_op sch1 sch2)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. f1 (f2 x)) = sch_to_pr (Comp_op sch1 sch2)\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. (\\<lambda>a. f (g a)) = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 3. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f1 (f2 x)) = sch_to_pr (Comp_op sch1 sch2)", "show \"\\<exists>sch. (\\<lambda>x. f1 (f2 x)) = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f1 (f2 x)) = sch_to_pr (Comp_op sch1 sch2)\n\ngoal (1 subgoal):\n 1. \\<exists>sch. (\\<lambda>x. f1 (f2 x)) = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. (\\<lambda>x. f1 (f2 x)) = sch_to_pr sch\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "fix f1 f2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "assume B1: \"\\<exists>sch. f1 = sch_to_pr sch\" and B2: \"\\<exists>sch. f2 = sch_to_pr sch\""], ["proof (state)\nthis:\n  \\<exists>sch. f1 = sch_to_pr sch\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B1"], ["proof (chain)\npicking this:\n  \\<exists>sch. f1 = sch_to_pr sch", "obtain sch1 where S1: \"f1 = sch_to_pr sch1\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f1 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch1.\n        f1 = sch_to_pr sch1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f1 = sch_to_pr sch1\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B2"], ["proof (chain)\npicking this:\n  \\<exists>sch. f2 = sch_to_pr sch", "obtain sch2 where S2: \"f2 = sch_to_pr sch2\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch2.\n        f2 = sch_to_pr sch2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f2 = sch_to_pr sch2\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from S1 S2"], ["proof (chain)\npicking this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2", "have \"c_f_pair f1 f2 = sch_to_pr (Pair_op sch1 sch2)\""], ["proof (prove)\nusing this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2\n\ngoal (1 subgoal):\n 1. c_f_pair f1 f2 = sch_to_pr (Pair_op sch1 sch2)", "by simp"], ["proof (state)\nthis:\n  c_f_pair f1 f2 = sch_to_pr (Pair_op sch1 sch2)\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. c_f_pair f g = sch_to_pr sch\n 2. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  c_f_pair f1 f2 = sch_to_pr (Pair_op sch1 sch2)", "show \"\\<exists>sch. c_f_pair f1 f2 = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  c_f_pair f1 f2 = sch_to_pr (Pair_op sch1 sch2)\n\ngoal (1 subgoal):\n 1. \\<exists>sch. c_f_pair f1 f2 = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. c_f_pair f1 f2 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "fix f1 f2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "assume B1: \"\\<exists>sch. f1 = sch_to_pr sch\" and B2: \"\\<exists>sch. f2 = sch_to_pr sch\""], ["proof (state)\nthis:\n  \\<exists>sch. f1 = sch_to_pr sch\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B1"], ["proof (chain)\npicking this:\n  \\<exists>sch. f1 = sch_to_pr sch", "obtain sch1 where S1: \"f1 = sch_to_pr sch1\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f1 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch1.\n        f1 = sch_to_pr sch1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f1 = sch_to_pr sch1\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from B2"], ["proof (chain)\npicking this:\n  \\<exists>sch. f2 = sch_to_pr sch", "obtain sch2 where S2: \"f2 = sch_to_pr sch2\""], ["proof (prove)\nusing this:\n  \\<exists>sch. f2 = sch_to_pr sch\n\ngoal (1 subgoal):\n 1. (\\<And>sch2.\n        f2 = sch_to_pr sch2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f2 = sch_to_pr sch2\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "from S1 S2"], ["proof (chain)\npicking this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2", "have \"UnaryRecOp f1 f2 = sch_to_pr (Rec_op sch1 sch2)\""], ["proof (prove)\nusing this:\n  f1 = sch_to_pr sch1\n  f2 = sch_to_pr sch2\n\ngoal (1 subgoal):\n 1. UnaryRecOp f1 f2 = sch_to_pr (Rec_op sch1 sch2)", "by simp"], ["proof (state)\nthis:\n  UnaryRecOp f1 f2 = sch_to_pr (Rec_op sch1 sch2)\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>f \\<in> PrimRec1'; \\<exists>sch. f = sch_to_pr sch;\n        g \\<in> PrimRec1'; \\<exists>sch. g = sch_to_pr sch\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sch. UnaryRecOp f g = sch_to_pr sch", "then"], ["proof (chain)\npicking this:\n  UnaryRecOp f1 f2 = sch_to_pr (Rec_op sch1 sch2)", "show \"\\<exists>sch. UnaryRecOp f1 f2 = sch_to_pr sch\""], ["proof (prove)\nusing this:\n  UnaryRecOp f1 f2 = sch_to_pr (Rec_op sch1 sch2)\n\ngoal (1 subgoal):\n 1. \\<exists>sch. UnaryRecOp f1 f2 = sch_to_pr sch", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>sch. UnaryRecOp f1 f2 = sch_to_pr sch\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>sch. f = sch_to_pr sch\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  loc_f :: \"nat \\<Rightarrow> PrimScheme \\<Rightarrow> PrimScheme \\<Rightarrow> PrimScheme\" where\n  \"loc_f n sch1 sch2 =\n    (if n=0 then Base_zero else\n     if n=1 then Base_suc else\n     if n=2 then Base_fst else\n     if n=3 then Base_snd else\n     if n=4 then (Comp_op sch1 sch2) else\n     if n=5 then (Pair_op sch1 sch2) else\n     if n=6 then (Rec_op sch1 sch2) else\n     Base_zero)\""], ["", "definition\n  mod7 :: \"nat \\<Rightarrow> nat\" where\n  \"mod7 = (\\<lambda> x. x mod 7)\""], ["", "lemma c_snd_snd_lt [termination_simp]: \"c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "let ?y = \"Suc (Suc x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "have \"?y > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Suc (Suc x)", "by simp"], ["proof (state)\nthis:\n  1 < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "then"], ["proof (chain)\npicking this:\n  1 < Suc (Suc x)", "have \"c_snd ?y < ?y\""], ["proof (prove)\nusing this:\n  1 < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc x)) < Suc (Suc x)", "by (rule c_snd_less_arg)"], ["proof (state)\nthis:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "moreover"], ["proof (state)\nthis:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "have \"c_snd (c_snd ?y) \\<le> c_snd ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))", "by (rule c_snd_le_arg)"], ["proof (state)\nthis:\n  c_snd (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))\n\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "ultimately"], ["proof (chain)\npicking this:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n  c_snd (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))", "show ?thesis"], ["proof (prove)\nusing this:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n  c_snd (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))\n\ngoal (1 subgoal):\n 1. c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)", "by simp"], ["proof (state)\nthis:\n  c_snd (c_snd (Suc (Suc x))) < Suc (Suc x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma c_fst_snd_lt [termination_simp]: \"c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "let ?y = \"Suc (Suc x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "have \"?y > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Suc (Suc x)", "by simp"], ["proof (state)\nthis:\n  1 < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "then"], ["proof (chain)\npicking this:\n  1 < Suc (Suc x)", "have \"c_snd ?y < ?y\""], ["proof (prove)\nusing this:\n  1 < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc x)) < Suc (Suc x)", "by (rule c_snd_less_arg)"], ["proof (state)\nthis:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "moreover"], ["proof (state)\nthis:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "have \"c_fst (c_snd ?y) \\<le> c_snd ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))", "by (rule c_fst_le_arg)"], ["proof (state)\nthis:\n  c_fst (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))\n\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "ultimately"], ["proof (chain)\npicking this:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n  c_fst (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))", "show ?thesis"], ["proof (prove)\nusing this:\n  c_snd (Suc (Suc x)) < Suc (Suc x)\n  c_fst (c_snd (Suc (Suc x))) \\<le> c_snd (Suc (Suc x))\n\ngoal (1 subgoal):\n 1. c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)", "by simp"], ["proof (state)\nthis:\n  c_fst (c_snd (Suc (Suc x))) < Suc (Suc x)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun nat_to_sch :: \"nat \\<Rightarrow> PrimScheme\" where\n  \"nat_to_sch 0 = Base_zero\"\n| \"nat_to_sch (Suc 0) = Base_zero\"\n| \"nat_to_sch x = (let u=mod7 (c_fst x); v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["", "primrec sch_to_nat :: \"PrimScheme \\<Rightarrow> nat\" where\n  \"sch_to_nat Base_zero = 0\"\n| \"sch_to_nat Base_suc = c_pair 1 0\"\n| \"sch_to_nat Base_fst = c_pair 2 0\"\n| \"sch_to_nat Base_snd = c_pair 3 0\"\n| \"sch_to_nat (Comp_op t1 t2) = c_pair 4 (c_pair (sch_to_nat t1) (sch_to_nat t2))\"\n| \"sch_to_nat (Pair_op t1 t2) = c_pair 5 (c_pair (sch_to_nat t1) (sch_to_nat t2))\"\n| \"sch_to_nat (Rec_op t1 t2)  = c_pair 6 (c_pair (sch_to_nat t1) (sch_to_nat t2))\""], ["", "lemma loc_srj_lm_1: \"nat_to_sch (Suc (Suc x)) = (let u=mod7 (c_fst (Suc (Suc x))); v=c_snd (Suc (Suc x)); v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc x)) =\n    (let u = mod7 (c_fst (Suc (Suc x))); v = c_snd (Suc (Suc x));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by simp"], ["", "lemma loc_srj_lm_2: \"x > 1 \\<Longrightarrow> nat_to_sch x = (let u=mod7 (c_fst x); v=c_snd x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "assume A1: \"x > 1\""], ["proof (state)\nthis:\n  1 < x\n\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "let ?y = \"x-(2::nat)\""], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from A1"], ["proof (chain)\npicking this:\n  1 < x", "have S1: \"x = Suc (Suc ?y)\""], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. x = Suc (Suc (x - 2))", "by arith"], ["proof (state)\nthis:\n  x = Suc (Suc (x - 2))\n\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "have S2: \"nat_to_sch (Suc (Suc ?y)) = (let u=mod7 (c_fst (Suc (Suc ?y))); v=c_snd (Suc (Suc ?y)); v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc (x - 2))) =\n    (let u = mod7 (c_fst (Suc (Suc (x - 2))));\n         v = c_snd (Suc (Suc (x - 2))); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_1)"], ["proof (state)\nthis:\n  nat_to_sch (Suc (Suc (x - 2))) =\n  (let u = mod7 (c_fst (Suc (Suc (x - 2)))); v = c_snd (Suc (Suc (x - 2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow>\n    nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "from S1 S2"], ["proof (chain)\npicking this:\n  x = Suc (Suc (x - 2))\n  nat_to_sch (Suc (Suc (x - 2))) =\n  (let u = mod7 (c_fst (Suc (Suc (x - 2)))); v = c_snd (Suc (Suc (x - 2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))", "show ?thesis"], ["proof (prove)\nusing this:\n  x = Suc (Suc (x - 2))\n  nat_to_sch (Suc (Suc (x - 2))) =\n  (let u = mod7 (c_fst (Suc (Suc (x - 2)))); v = c_snd (Suc (Suc (x - 2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch x =\n    (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by simp"], ["proof (state)\nthis:\n  nat_to_sch x =\n  (let u = mod7 (c_fst x); v = c_snd x; v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_0: \"nat_to_sch (c_pair 1 0) = Base_suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "let ?x = \"c_pair 1 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "have S1: \"?x = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair 1 0 = 2", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  c_pair 1 0 = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "then"], ["proof (chain)\npicking this:\n  c_pair 1 0 = 2", "have S2: \"?x = Suc (Suc 0)\""], ["proof (prove)\nusing this:\n  c_pair 1 0 = 2\n\ngoal (1 subgoal):\n 1. c_pair 1 0 = Suc (Suc 0)", "by simp"], ["proof (state)\nthis:\n  c_pair 1 0 = Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "let ?y = \"Suc (Suc 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "have S3: \"nat_to_sch ?y = (let u=mod7 (c_fst ?y); v=c_snd ?y; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc 0)) =\n    (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_1)"], ["proof (state)\nthis:\n  nat_to_sch (Suc (Suc 0)) =\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "have S4: \"c_fst ?y = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 0)) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 0)) = 1", "from S2"], ["proof (chain)\npicking this:\n  c_pair 1 0 = Suc (Suc 0)", "have \"c_fst ?y = c_fst ?x\""], ["proof (prove)\nusing this:\n  c_pair 1 0 = Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 0)) = c_fst (c_pair 1 0)", "by simp"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 0)) = c_fst (c_pair 1 0)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 0)) = 1", "then"], ["proof (chain)\npicking this:\n  c_fst (Suc (Suc 0)) = c_fst (c_pair 1 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (Suc (Suc 0)) = c_fst (c_pair 1 0)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 0)) = 1", "by simp"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 0)) = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 0)) = 1\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "have S5: \"c_snd ?y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 0)) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 0)) = 0", "from S2"], ["proof (chain)\npicking this:\n  c_pair 1 0 = Suc (Suc 0)", "have \"c_snd ?y = c_snd ?x\""], ["proof (prove)\nusing this:\n  c_pair 1 0 = Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 0)) = c_snd (c_pair 1 0)", "by simp"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 0)) = c_snd (c_pair 1 0)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 0)) = 0", "then"], ["proof (chain)\npicking this:\n  c_snd (Suc (Suc 0)) = c_snd (c_pair 1 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_snd (Suc (Suc 0)) = c_snd (c_pair 1 0)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 0)) = 0", "by simp"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 0)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 0)) = 0\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "from S4"], ["proof (chain)\npicking this:\n  c_fst (Suc (Suc 0)) = 1", "have S6: \"mod7 (c_fst ?y) = 1\""], ["proof (prove)\nusing this:\n  c_fst (Suc (Suc 0)) = 1\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (Suc (Suc 0))) = 1", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (Suc (Suc 0))) = 1\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "from S3 S5 S6"], ["proof (chain)\npicking this:\n  nat_to_sch (Suc (Suc 0)) =\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  c_snd (Suc (Suc 0)) = 0\n  mod7 (c_fst (Suc (Suc 0))) = 1", "have S9: \"?R = loc_f 1 Base_zero Base_zero\""], ["proof (prove)\nusing this:\n  nat_to_sch (Suc (Suc 0)) =\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  c_snd (Suc (Suc 0)) = 0\n  mod7 (c_fst (Suc (Suc 0))) = 1\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    loc_f 1 Base_zero Base_zero", "by (simp add: Let_def c_fst_at_0 c_snd_at_0)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 1 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "then"], ["proof (chain)\npicking this:\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 1 Base_zero Base_zero", "have S10: \"?R = Base_suc\""], ["proof (prove)\nusing this:\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 1 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Base_suc", "by (simp add: loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "with S3"], ["proof (chain)\npicking this:\n  nat_to_sch (Suc (Suc 0)) =\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_suc", "have S11: \"nat_to_sch ?y = Base_suc\""], ["proof (prove)\nusing this:\n  nat_to_sch (Suc (Suc 0)) =\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (Suc (Suc 0))); v = c_snd (Suc (Suc 0));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc 0)) = Base_suc", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (Suc (Suc 0)) = Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "from S2 this"], ["proof (chain)\npicking this:\n  c_pair 1 0 = Suc (Suc 0)\n  nat_to_sch (Suc (Suc 0)) = Base_suc", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair 1 0 = Suc (Suc 0)\n  nat_to_sch (Suc (Suc 0)) = Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 1 0) = Base_suc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_sch_at_2: \"nat_to_sch 2 = Base_suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch 2 = Base_suc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch 2 = Base_suc", "have S1: \"c_pair 1 0 = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair 1 0 = 2", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  c_pair 1 0 = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch 2 = Base_suc", "have S2: \"nat_to_sch (c_pair 1 0) = Base_suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc", "by (rule loc_srj_0)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 1 0) = Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch 2 = Base_suc", "from S1 S2"], ["proof (chain)\npicking this:\n  c_pair 1 0 = 2\n  nat_to_sch (c_pair 1 0) = Base_suc", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair 1 0 = 2\n  nat_to_sch (c_pair 1 0) = Base_suc\n\ngoal (1 subgoal):\n 1. nat_to_sch 2 = Base_suc", "by simp"], ["proof (state)\nthis:\n  nat_to_sch 2 = Base_suc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_1: \"nat_to_sch (c_pair 2 0) = Base_fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "let ?x = \"c_pair 2 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "have S1: \"?x = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_pair 2 0 = 5", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  c_pair 2 0 = 5\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "then"], ["proof (chain)\npicking this:\n  c_pair 2 0 = 5", "have S2: \"?x = Suc (Suc 3)\""], ["proof (prove)\nusing this:\n  c_pair 2 0 = 5\n\ngoal (1 subgoal):\n 1. c_pair 2 0 = Suc (Suc 3)", "by simp"], ["proof (state)\nthis:\n  c_pair 2 0 = Suc (Suc 3)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "let ?y = \"Suc (Suc 3)\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "have S3: \"nat_to_sch ?y = (let u=mod7 (c_fst ?y); v=c_snd ?y; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc 3)) =\n    (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_1)"], ["proof (state)\nthis:\n  nat_to_sch (Suc (Suc 3)) =\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "have S4: \"c_fst ?y = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 3)) = 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 3)) = 2", "from S2"], ["proof (chain)\npicking this:\n  c_pair 2 0 = Suc (Suc 3)", "have \"c_fst ?y = c_fst ?x\""], ["proof (prove)\nusing this:\n  c_pair 2 0 = Suc (Suc 3)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 3)) = c_fst (c_pair 2 0)", "by simp"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 3)) = c_fst (c_pair 2 0)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 3)) = 2", "then"], ["proof (chain)\npicking this:\n  c_fst (Suc (Suc 3)) = c_fst (c_pair 2 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_fst (Suc (Suc 3)) = c_fst (c_pair 2 0)\n\ngoal (1 subgoal):\n 1. c_fst (Suc (Suc 3)) = 2", "by simp"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 3)) = 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_fst (Suc (Suc 3)) = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "have S5: \"c_snd ?y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 3)) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 3)) = 0", "from S2"], ["proof (chain)\npicking this:\n  c_pair 2 0 = Suc (Suc 3)", "have \"c_snd ?y = c_snd ?x\""], ["proof (prove)\nusing this:\n  c_pair 2 0 = Suc (Suc 3)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 3)) = c_snd (c_pair 2 0)", "by simp"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 3)) = c_snd (c_pair 2 0)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 3)) = 0", "then"], ["proof (chain)\npicking this:\n  c_snd (Suc (Suc 3)) = c_snd (c_pair 2 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  c_snd (Suc (Suc 3)) = c_snd (c_pair 2 0)\n\ngoal (1 subgoal):\n 1. c_snd (Suc (Suc 3)) = 0", "by simp"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 3)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c_snd (Suc (Suc 3)) = 0\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "from S4"], ["proof (chain)\npicking this:\n  c_fst (Suc (Suc 3)) = 2", "have S6: \"mod7 (c_fst ?y) = 2\""], ["proof (prove)\nusing this:\n  c_fst (Suc (Suc 3)) = 2\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (Suc (Suc 3))) = 2", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (Suc (Suc 3))) = 2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "from S3 S5 S6"], ["proof (chain)\npicking this:\n  nat_to_sch (Suc (Suc 3)) =\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  c_snd (Suc (Suc 3)) = 0\n  mod7 (c_fst (Suc (Suc 3))) = 2", "have S9: \"?R = loc_f 2 Base_zero Base_zero\""], ["proof (prove)\nusing this:\n  nat_to_sch (Suc (Suc 3)) =\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  c_snd (Suc (Suc 3)) = 0\n  mod7 (c_fst (Suc (Suc 3))) = 2\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    loc_f 2 Base_zero Base_zero", "by (simp add: Let_def c_fst_at_0 c_snd_at_0)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 2 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "then"], ["proof (chain)\npicking this:\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 2 Base_zero Base_zero", "have S10: \"?R = Base_fst\""], ["proof (prove)\nusing this:\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 2 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Base_fst", "by (simp add: loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_fst\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "with S3"], ["proof (chain)\npicking this:\n  nat_to_sch (Suc (Suc 3)) =\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_fst", "have S11: \"nat_to_sch ?y = Base_fst\""], ["proof (prove)\nusing this:\n  nat_to_sch (Suc (Suc 3)) =\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (Suc (Suc 3))); v = c_snd (Suc (Suc 3));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_fst\n\ngoal (1 subgoal):\n 1. nat_to_sch (Suc (Suc 3)) = Base_fst", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (Suc (Suc 3)) = Base_fst\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "from S2 this"], ["proof (chain)\npicking this:\n  c_pair 2 0 = Suc (Suc 3)\n  nat_to_sch (Suc (Suc 3)) = Base_fst", "show ?thesis"], ["proof (prove)\nusing this:\n  c_pair 2 0 = Suc (Suc 3)\n  nat_to_sch (Suc (Suc 3)) = Base_fst\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 2 0) = Base_fst", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 2 0) = Base_fst\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_2: \"nat_to_sch (c_pair 3 0) = Base_snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "let ?x = \"c_pair 3 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 3 0", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 3 0\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 3 0", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 3 0\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) =\n    (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0);\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 3 0) =\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "have S3: \"c_fst ?x = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 3 0) = 3", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 3 0) = 3\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "have S4: \"c_snd ?x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 3 0) = 0", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 3 0) = 0\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 3 0) = 3", "have S6: \"mod7 (c_fst ?x) = 3\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 3 0) = 3\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 3 0)) = 3", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 3 0)) = 3\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "from S3 S4 S6"], ["proof (chain)\npicking this:\n  c_fst (c_pair 3 0) = 3\n  c_snd (c_pair 3 0) = 0\n  mod7 (c_fst (c_pair 3 0)) = 3", "have S7: \"?R = loc_f 3 Base_zero Base_zero\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 3 0) = 3\n  c_snd (c_pair 3 0) = 0\n  mod7 (c_fst (c_pair 3 0)) = 3\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0);\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    loc_f 3 Base_zero Base_zero", "by (simp add: Let_def c_fst_at_0 c_snd_at_0)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 3 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "then"], ["proof (chain)\npicking this:\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 3 Base_zero Base_zero", "have S8: \"?R = Base_snd\""], ["proof (prove)\nusing this:\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  loc_f 3 Base_zero Base_zero\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0);\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Base_snd", "by (simp add: loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_snd\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 3 0) =\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_snd", "have S10: \"nat_to_sch ?x = Base_snd\""], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 3 0) =\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Base_snd\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 3 0) = Base_snd\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "from S2 this"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 3 0) =\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  nat_to_sch (c_pair 3 0) = Base_snd", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 3 0) =\n  (let u = mod7 (c_fst (c_pair 3 0)); v = c_snd (c_pair 3 0); v1 = c_fst v;\n       v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  nat_to_sch (c_pair 3 0) = Base_snd\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 3 0) = Base_snd", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 3 0) = Base_snd\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_3: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Comp_op sch1 sch2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "assume A1: \"nat_to_sch (sch_to_nat sch1) = sch1\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch1) = sch1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "assume A2: \"nat_to_sch (sch_to_nat sch2) = sch2\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch2) = sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "let ?x = \"c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    (let u = mod7\n              (c_fst\n                (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "have S3: \"c_fst ?x = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 4", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "have S4: \"c_snd ?x = c_pair (sch_to_nat sch1) (sch_to_nat sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    c_pair (sch_to_nat sch1) (sch_to_nat sch2)", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 4", "have S5: \"mod7 (c_fst ?x) = 4\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 4\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 4", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 4\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "from A1 A2 S4 S5"], ["proof (chain)\npicking this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 4", "have \"?R = Comp_op sch1 sch2\""], ["proof (prove)\nusing this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 4\n\ngoal (1 subgoal):\n 1. (let u = mod7\n              (c_fst\n                (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Comp_op sch1 sch2", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op sch1 sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 4\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Comp_op sch1 sch2", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op sch1 sch2", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op sch1 sch2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    Comp_op sch1 sch2", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 4 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  Comp_op sch1 sch2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_3_1: \"nat_to_sch (c_pair 4 (c_pair n1 n2)) = Comp_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "let ?x = \"c_pair 4 (c_pair n1 n2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 4 (c_pair n1 n2)", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 4 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 4 (c_pair n1 n2)", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 4 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n         v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "have S3: \"c_fst ?x = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 4 (c_pair n1 n2)) = 4", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 4 (c_pair n1 n2)) = 4\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "have S4: \"c_snd ?x = c_pair n1 n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 4 (c_pair n1 n2)) = c_pair n1 n2", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 4 (c_pair n1 n2)) = c_pair n1 n2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 4 (c_pair n1 n2)) = 4", "have S5: \"mod7 (c_fst ?x) = 4\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 4 (c_pair n1 n2)) = 4\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 4 (c_pair n1 n2))) = 4", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 4 (c_pair n1 n2))) = 4\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "from S4 S5"], ["proof (chain)\npicking this:\n  c_snd (c_pair 4 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 4 (c_pair n1 n2))) = 4", "have \"?R = Comp_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\nusing this:\n  c_snd (c_pair 4 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 4 (c_pair n1 n2))) = 4\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n         v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op (nat_to_sch n1) (nat_to_sch n2)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 4 (c_pair n1 n2)));\n       v = c_snd (c_pair 4 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Comp_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n    Comp_op (nat_to_sch n1) (nat_to_sch n2)", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 4 (c_pair n1 n2)) =\n  Comp_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_4: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Pair_op sch1 sch2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "assume A1: \"nat_to_sch (sch_to_nat sch1) = sch1\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch1) = sch1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "assume A2: \"nat_to_sch (sch_to_nat sch2) = sch2\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch2) = sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "let ?x = \"c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    (let u = mod7\n              (c_fst\n                (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "have S3: \"c_fst ?x = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 5", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "have S4: \"c_snd ?x = c_pair (sch_to_nat sch1) (sch_to_nat sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    c_pair (sch_to_nat sch1) (sch_to_nat sch2)", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 5", "have S5: \"mod7 (c_fst ?x) = 5\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 5\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 5", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "from A1 A2 S4 S5"], ["proof (chain)\npicking this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 5", "have \"?R = Pair_op sch1 sch2\""], ["proof (prove)\nusing this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 5\n\ngoal (1 subgoal):\n 1. (let u = mod7\n              (c_fst\n                (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Pair_op sch1 sch2", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op sch1 sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 5\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Pair_op sch1 sch2", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op sch1 sch2", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op sch1 sch2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    Pair_op sch1 sch2", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 5 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  Pair_op sch1 sch2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_4_1: \"nat_to_sch (c_pair 5 (c_pair n1 n2)) = Pair_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "let ?x = \"c_pair 5 (c_pair n1 n2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 5 (c_pair n1 n2)", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 5 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 5 (c_pair n1 n2)", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 5 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n         v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "have S3: \"c_fst ?x = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 5 (c_pair n1 n2)) = 5", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 5 (c_pair n1 n2)) = 5\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "have S4: \"c_snd ?x = c_pair n1 n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 5 (c_pair n1 n2)) = c_pair n1 n2", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 5 (c_pair n1 n2)) = c_pair n1 n2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 5 (c_pair n1 n2)) = 5", "have S5: \"mod7 (c_fst ?x) = 5\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 5 (c_pair n1 n2)) = 5\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 5 (c_pair n1 n2))) = 5", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 5 (c_pair n1 n2))) = 5\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "from S4 S5"], ["proof (chain)\npicking this:\n  c_snd (c_pair 5 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 5 (c_pair n1 n2))) = 5", "have \"?R = Pair_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\nusing this:\n  c_snd (c_pair 5 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 5 (c_pair n1 n2))) = 5\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n         v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op (nat_to_sch n1) (nat_to_sch n2)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 5 (c_pair n1 n2)));\n       v = c_snd (c_pair 5 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Pair_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 5 (c_pair n1 n2)) =\n  Pair_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_5: \"\\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1; nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n       \\<Longrightarrow> nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = Rec_op sch1 sch2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "assume A1: \"nat_to_sch (sch_to_nat sch1) = sch1\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch1) = sch1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "assume A2: \"nat_to_sch (sch_to_nat sch2) = sch2\""], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat sch2) = sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "let ?x = \"c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    (let u = mod7\n              (c_fst\n                (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "have S3: \"c_fst ?x = 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 6", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "have S4: \"c_snd ?x = c_pair (sch_to_nat sch1) (sch_to_nat sch2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    c_pair (sch_to_nat sch1) (sch_to_nat sch2)", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 6", "have S5: \"mod7 (c_fst ?x) = 6\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) = 6\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 6", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 6\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "from A1 A2 S4 S5"], ["proof (chain)\npicking this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 6", "have \"?R = Rec_op sch1 sch2\""], ["proof (prove)\nusing this:\n  nat_to_sch (sch_to_nat sch1) = sch1\n  nat_to_sch (sch_to_nat sch2) = sch2\n  c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  c_pair (sch_to_nat sch1) (sch_to_nat sch2)\n  mod7 (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)))) = 6\n\ngoal (1 subgoal):\n 1. (let u = mod7\n              (c_fst\n                (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n         v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n         v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Rec_op sch1 sch2", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op sch1 sch2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>nat_to_sch (sch_to_nat sch1) = sch1;\n     nat_to_sch (sch_to_nat sch2) = sch2\\<rbrakk>\n    \\<Longrightarrow> nat_to_sch\n                       (c_pair 6\n                         (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n                      Rec_op sch1 sch2", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op sch1 sch2", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7\n            (c_fst (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))));\n       v = c_snd (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2)));\n       v1 = c_fst v; v2 = c_snd v; sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op sch1 sch2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n    Rec_op sch1 sch2", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 6 (c_pair (sch_to_nat sch1) (sch_to_nat sch2))) =\n  Rec_op sch1 sch2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loc_srj_5_1: \"nat_to_sch (c_pair 6 (c_pair n1 n2)) = Rec_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "let ?x = \"c_pair 6 (c_pair n1 n2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "have S1: \"?x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c_pair 6 (c_pair n1 n2)", "by (simp add: c_pair_def sf_def)"], ["proof (state)\nthis:\n  1 < c_pair 6 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "from S1"], ["proof (chain)\npicking this:\n  1 < c_pair 6 (c_pair n1 n2)", "have S2: \"nat_to_sch ?x = (let u=mod7 (c_fst ?x); v=c_snd ?x; v1=c_fst v; v2 = c_snd v; sch1=nat_to_sch v1; sch2=nat_to_sch v2 in loc_f u sch1 sch2)\" (is \"_ = ?R\")"], ["proof (prove)\nusing this:\n  1 < c_pair 6 (c_pair n1 n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n         v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1))", "by (rule loc_srj_lm_2)"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "have S3: \"c_fst ?x = 6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_fst (c_pair 6 (c_pair n1 n2)) = 6", "by simp"], ["proof (state)\nthis:\n  c_fst (c_pair 6 (c_pair n1 n2)) = 6\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "have S4: \"c_snd ?x = c_pair n1 n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_snd (c_pair 6 (c_pair n1 n2)) = c_pair n1 n2", "by simp"], ["proof (state)\nthis:\n  c_snd (c_pair 6 (c_pair n1 n2)) = c_pair n1 n2\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "from S3"], ["proof (chain)\npicking this:\n  c_fst (c_pair 6 (c_pair n1 n2)) = 6", "have S5: \"mod7 (c_fst ?x) = 6\""], ["proof (prove)\nusing this:\n  c_fst (c_pair 6 (c_pair n1 n2)) = 6\n\ngoal (1 subgoal):\n 1. mod7 (c_fst (c_pair 6 (c_pair n1 n2))) = 6", "by (simp add: mod7_def)"], ["proof (state)\nthis:\n  mod7 (c_fst (c_pair 6 (c_pair n1 n2))) = 6\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "from S4 S5"], ["proof (chain)\npicking this:\n  c_snd (c_pair 6 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 6 (c_pair n1 n2))) = 6", "have \"?R = Rec_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\nusing this:\n  c_snd (c_pair 6 (c_pair n1 n2)) = c_pair n1 n2\n  mod7 (c_fst (c_pair 6 (c_pair n1 n2))) = 6\n\ngoal (1 subgoal):\n 1. (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n         v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n         sch1 = nat_to_sch v1\n     in Let (nat_to_sch v2) (loc_f u sch1)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "by (simp add: Let_def c_fst_at_0 c_snd_at_0 loc_f_def)"], ["proof (state)\nthis:\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "with S2"], ["proof (chain)\npicking this:\n  nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op (nat_to_sch n1) (nat_to_sch n2)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1))\n  (let u = mod7 (c_fst (c_pair 6 (c_pair n1 n2)));\n       v = c_snd (c_pair 6 (c_pair n1 n2)); v1 = c_fst v; v2 = c_snd v;\n       sch1 = nat_to_sch v1\n   in Let (nat_to_sch v2) (loc_f u sch1)) =\n  Rec_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n    Rec_op (nat_to_sch n1) (nat_to_sch n2)", "by simp"], ["proof (state)\nthis:\n  nat_to_sch (c_pair 6 (c_pair n1 n2)) =\n  Rec_op (nat_to_sch n1) (nat_to_sch n2)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem nat_to_sch_srj: \"nat_to_sch (sch_to_nat sch) = sch\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (sch_to_nat sch) = sch", "apply(induct sch, auto simp add: loc_srj_0 loc_srj_1 loc_srj_2 loc_srj_3 loc_srj_4 loc_srj_5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair (Suc 0) 0) = Base_suc", "apply(insert loc_srj_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc \\<Longrightarrow>\n    nat_to_sch (c_pair (Suc 0) 0) = Base_suc", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Indexes of primitive recursive functions of one variables\\<close>"], ["", "definition\n  nat_to_pr :: \"nat \\<Rightarrow> (nat \\<Rightarrow> nat)\" where\n  \"nat_to_pr = (\\<lambda> x. sch_to_pr (nat_to_sch x))\""], ["", "theorem nat_to_pr_into_pr: \"nat_to_pr n \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n \\<in> PrimRec1", "by (simp add: nat_to_pr_def sch_to_pr_into_pr)"], ["", "lemma nat_to_pr_srj: \"f \\<in> PrimRec1 \\<Longrightarrow> (\\<exists> n. f = nat_to_pr n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "assume \"f \\<in> PrimRec1\""], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "then"], ["proof (chain)\npicking this:\n  f \\<in> PrimRec1", "have S1: \"(\\<exists> t. f = sch_to_pr t)\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<exists>t. f = sch_to_pr t", "by (rule sch_to_pr_srj)"], ["proof (state)\nthis:\n  \\<exists>t. f = sch_to_pr t\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "from S1"], ["proof (chain)\npicking this:\n  \\<exists>t. f = sch_to_pr t", "obtain t where S2: \"f = sch_to_pr t\""], ["proof (prove)\nusing this:\n  \\<exists>t. f = sch_to_pr t\n\ngoal (1 subgoal):\n 1. (\\<And>t. f = sch_to_pr t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f = sch_to_pr t\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "let ?n = \"sch_to_nat t\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "have S3: \"nat_to_pr ?n = sch_to_pr (nat_to_sch ?n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (sch_to_nat t) = sch_to_pr (nat_to_sch (sch_to_nat t))", "by (simp add: nat_to_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr (sch_to_nat t) = sch_to_pr (nat_to_sch (sch_to_nat t))\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "have S4: \"nat_to_sch ?n = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (sch_to_nat t) = t", "by (rule nat_to_sch_srj)"], ["proof (state)\nthis:\n  nat_to_sch (sch_to_nat t) = t\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "from S3 S4"], ["proof (chain)\npicking this:\n  nat_to_pr (sch_to_nat t) = sch_to_pr (nat_to_sch (sch_to_nat t))\n  nat_to_sch (sch_to_nat t) = t", "have S5: \"nat_to_pr ?n = sch_to_pr t\""], ["proof (prove)\nusing this:\n  nat_to_pr (sch_to_nat t) = sch_to_pr (nat_to_sch (sch_to_nat t))\n  nat_to_sch (sch_to_nat t) = t\n\ngoal (1 subgoal):\n 1. nat_to_pr (sch_to_nat t) = sch_to_pr t", "by simp"], ["proof (state)\nthis:\n  nat_to_pr (sch_to_nat t) = sch_to_pr t\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "from S2 S5"], ["proof (chain)\npicking this:\n  f = sch_to_pr t\n  nat_to_pr (sch_to_nat t) = sch_to_pr t", "have \"nat_to_pr ?n = f\""], ["proof (prove)\nusing this:\n  f = sch_to_pr t\n  nat_to_pr (sch_to_nat t) = sch_to_pr t\n\ngoal (1 subgoal):\n 1. nat_to_pr (sch_to_nat t) = f", "by simp"], ["proof (state)\nthis:\n  nat_to_pr (sch_to_nat t) = f\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (sch_to_nat t) = f", "have \"f = nat_to_pr ?n\""], ["proof (prove)\nusing this:\n  nat_to_pr (sch_to_nat t) = f\n\ngoal (1 subgoal):\n 1. f = nat_to_pr (sch_to_nat t)", "by simp"], ["proof (state)\nthis:\n  f = nat_to_pr (sch_to_nat t)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> \\<exists>n. f = nat_to_pr n", "then"], ["proof (chain)\npicking this:\n  f = nat_to_pr (sch_to_nat t)", "show ?thesis"], ["proof (prove)\nusing this:\n  f = nat_to_pr (sch_to_nat t)\n\ngoal (1 subgoal):\n 1. \\<exists>n. f = nat_to_pr n", ".."], ["proof (state)\nthis:\n  \\<exists>n. f = nat_to_pr n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_to_pr_at_0: \"nat_to_pr 0 = (\\<lambda> x. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr 0 = (\\<lambda>x. 0)", "by (simp add: nat_to_pr_def)"], ["", "definition\n  index_of_pr :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> nat\" where\n  \"index_of_pr f = (SOME n. f = nat_to_pr n)\""], ["", "theorem index_of_pr_is_real: \"f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f", "assume \"f \\<in> PrimRec1\""], ["proof (state)\nthis:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f", "hence \"\\<exists> n. f = nat_to_pr n\""], ["proof (prove)\nusing this:\n  f \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. \\<exists>n. f = nat_to_pr n", "by (rule nat_to_pr_srj)"], ["proof (state)\nthis:\n  \\<exists>n. f = nat_to_pr n\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f", "hence \"f = nat_to_pr (SOME n. f = nat_to_pr n)\""], ["proof (prove)\nusing this:\n  \\<exists>n. f = nat_to_pr n\n\ngoal (1 subgoal):\n 1. f = nat_to_pr (SOME n. f = nat_to_pr n)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  f = nat_to_pr (SOME n. f = nat_to_pr n)\n\ngoal (1 subgoal):\n 1. f \\<in> PrimRec1 \\<Longrightarrow> nat_to_pr (index_of_pr f) = f", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = nat_to_pr (SOME n. f = nat_to_pr n)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_pr f) = f", "by (simp add: index_of_pr_def)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_pr f) = f\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  comp_by_index :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"comp_by_index = (\\<lambda> n1 n2. c_pair 4 (c_pair n1 n2))\""], ["", "definition\n  pair_by_index :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"pair_by_index = (\\<lambda> n1 n2. c_pair 5 (c_pair n1 n2))\""], ["", "definition\n  rec_by_index :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"rec_by_index = (\\<lambda> n1 n2. c_pair 6 (c_pair n1 n2))\""], ["", "lemma comp_by_index_is_pr: \"comp_by_index \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_by_index \\<in> PrimRec2", "unfolding comp_by_index_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n1 n2. c_pair 4 (c_pair n1 n2)) \\<in> PrimRec2", "using const_is_pr_2 [of 4]"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. 4) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n1 n2. c_pair 4 (c_pair n1 n2)) \\<in> PrimRec2", "by prec"], ["", "lemma comp_by_index_inj: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "assume \"comp_by_index x1 y1 = comp_by_index x2 y2\""], ["proof (state)\nthis:\n  comp_by_index x1 y1 = comp_by_index x2 y2\n\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair 4 (c_pair x1 y1) = c_pair 4 (c_pair x2 y2)\""], ["proof (prove)\nusing this:\n  comp_by_index x1 y1 = comp_by_index x2 y2\n\ngoal (1 subgoal):\n 1. c_pair 4 (c_pair x1 y1) = c_pair 4 (c_pair x2 y2)", "by (unfold comp_by_index_def)"], ["proof (state)\nthis:\n  c_pair 4 (c_pair x1 y1) = c_pair 4 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair x1 y1 = c_pair x2 y2\""], ["proof (prove)\nusing this:\n  c_pair 4 (c_pair x1 y1) = c_pair 4 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. c_pair x1 y1 = c_pair x2 y2", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. x1 = x2 \\<and> y1 = y2", "by (rule c_pair_inj)"], ["proof (state)\nthis:\n  x1 = x2 \\<and> y1 = y2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_by_index_inj1: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> x1 = x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> x1 = x2", "by (frule comp_by_index_inj, drule conjunct1)"], ["", "lemma comp_by_index_inj2: \"comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> y1 = y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_by_index x1 y1 = comp_by_index x2 y2 \\<Longrightarrow> y1 = y2", "by (frule comp_by_index_inj, drule conjunct2)"], ["", "lemma comp_by_index_main: \"nat_to_pr (comp_by_index n1 n2) = (\\<lambda> x. (nat_to_pr n1) ((nat_to_pr n2) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (comp_by_index n1 n2) =\n    (\\<lambda>x. nat_to_pr n1 (nat_to_pr n2 x))", "by (unfold comp_by_index_def, unfold nat_to_pr_def, simp add: loc_srj_3_1)"], ["", "lemma pair_by_index_is_pr: \"pair_by_index \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_by_index \\<in> PrimRec2", "by (unfold pair_by_index_def, insert const_is_pr_2 [where ?n=\"(5::nat)\"], prec)"], ["", "lemma pair_by_index_inj: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "assume \"pair_by_index x1 y1 = pair_by_index x2 y2\""], ["proof (state)\nthis:\n  pair_by_index x1 y1 = pair_by_index x2 y2\n\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair 5 (c_pair x1 y1) = c_pair 5 (c_pair x2 y2)\""], ["proof (prove)\nusing this:\n  pair_by_index x1 y1 = pair_by_index x2 y2\n\ngoal (1 subgoal):\n 1. c_pair 5 (c_pair x1 y1) = c_pair 5 (c_pair x2 y2)", "by (unfold pair_by_index_def)"], ["proof (state)\nthis:\n  c_pair 5 (c_pair x1 y1) = c_pair 5 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair x1 y1 = c_pair x2 y2\""], ["proof (prove)\nusing this:\n  c_pair 5 (c_pair x1 y1) = c_pair 5 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. c_pair x1 y1 = c_pair x2 y2", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. x1 = x2 \\<and> y1 = y2", "by (rule c_pair_inj)"], ["proof (state)\nthis:\n  x1 = x2 \\<and> y1 = y2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pair_by_index_inj1: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> x1 = x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> x1 = x2", "by (frule pair_by_index_inj, drule conjunct1)"], ["", "lemma pair_by_index_inj2: \"pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> y1 = y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_by_index x1 y1 = pair_by_index x2 y2 \\<Longrightarrow> y1 = y2", "by (frule pair_by_index_inj, drule conjunct2)"], ["", "lemma pair_by_index_main: \"nat_to_pr (pair_by_index n1 n2) = c_f_pair (nat_to_pr n1) (nat_to_pr n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (pair_by_index n1 n2) = c_f_pair (nat_to_pr n1) (nat_to_pr n2)", "by (unfold pair_by_index_def, unfold nat_to_pr_def, simp add: loc_srj_4_1)"], ["", "lemma nat_to_sch_of_pair_by_index [simp]: \"nat_to_sch (pair_by_index n1 n2) = Pair_op (nat_to_sch n1) (nat_to_sch n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (pair_by_index n1 n2) =\n    Pair_op (nat_to_sch n1) (nat_to_sch n2)", "by (simp add: pair_by_index_def loc_srj_4_1)"], ["", "lemma rec_by_index_is_pr: \"rec_by_index \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_by_index \\<in> PrimRec2", "by (unfold rec_by_index_def, insert const_is_pr_2 [where ?n=\"(6::nat)\"], prec)"], ["", "lemma rec_by_index_inj: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "assume \"rec_by_index x1 y1 = rec_by_index x2 y2\""], ["proof (state)\nthis:\n  rec_by_index x1 y1 = rec_by_index x2 y2\n\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair 6 (c_pair x1 y1) = c_pair 6 (c_pair x2 y2)\""], ["proof (prove)\nusing this:\n  rec_by_index x1 y1 = rec_by_index x2 y2\n\ngoal (1 subgoal):\n 1. c_pair 6 (c_pair x1 y1) = c_pair 6 (c_pair x2 y2)", "by (unfold rec_by_index_def)"], ["proof (state)\nthis:\n  c_pair 6 (c_pair x1 y1) = c_pair 6 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "hence \"c_pair x1 y1 = c_pair x2 y2\""], ["proof (prove)\nusing this:\n  c_pair 6 (c_pair x1 y1) = c_pair 6 (c_pair x2 y2)\n\ngoal (1 subgoal):\n 1. c_pair x1 y1 = c_pair x2 y2", "by (rule c_pair_inj2)"], ["proof (state)\nthis:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow>\n    x1 = x2 \\<and> y1 = y2", "thus ?thesis"], ["proof (prove)\nusing this:\n  c_pair x1 y1 = c_pair x2 y2\n\ngoal (1 subgoal):\n 1. x1 = x2 \\<and> y1 = y2", "by (rule c_pair_inj)"], ["proof (state)\nthis:\n  x1 = x2 \\<and> y1 = y2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rec_by_index_inj1: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> x1 = x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> x1 = x2", "by (frule rec_by_index_inj, drule conjunct1)"], ["", "lemma rec_by_index_inj2: \"rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> y1 = y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_by_index x1 y1 = rec_by_index x2 y2 \\<Longrightarrow> y1 = y2", "by (frule rec_by_index_inj, drule conjunct2)"], ["", "lemma rec_by_index_main: \"nat_to_pr (rec_by_index n1 n2) = UnaryRecOp (nat_to_pr n1) (nat_to_pr n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (rec_by_index n1 n2) =\n    UnaryRecOp (nat_to_pr n1) (nat_to_pr n2)", "by (unfold rec_by_index_def, unfold nat_to_pr_def, simp add: loc_srj_5_1)"], ["", "subsection \\<open>s-1-1 theorem for primitive recursive functions of one variable\\<close>"], ["", "definition\n  index_of_const :: \"nat \\<Rightarrow> nat\" where\n  \"index_of_const = PrimRecOp1 0 (\\<lambda> x y. c_pair 4 (c_pair 2 y))\""], ["", "lemma index_of_const_is_pr: \"index_of_const \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_const \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index_of_const \\<in> PrimRec1", "have \"(\\<lambda> x y. c_pair (4::nat) (c_pair (2::nat) y)) \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. c_pair 4 (c_pair 2 y)) \\<in> PrimRec2", "by (insert const_is_pr_2 [where ?n=\"(4::nat)\"], prec)"], ["proof (state)\nthis:\n  (\\<lambda>x y. c_pair 4 (c_pair 2 y)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. index_of_const \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x y. c_pair 4 (c_pair 2 y)) \\<in> PrimRec2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x y. c_pair 4 (c_pair 2 y)) \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. index_of_const \\<in> PrimRec1", "by (simp add: index_of_const_def pr_rec1)"], ["proof (state)\nthis:\n  index_of_const \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_of_const_at_0: \"index_of_const 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_const 0 = 0", "by (simp add: index_of_const_def)"], ["", "lemma index_of_const_at_suc: \"index_of_const (Suc u) = c_pair 4 (c_pair 2 (index_of_const u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_const (Suc u) = c_pair 4 (c_pair 2 (index_of_const u))", "by (unfold index_of_const_def, induct u, auto)"], ["", "lemma index_of_const_main: \"nat_to_pr (index_of_const n) = (\\<lambda> x. n)\" (is \"?P n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_const n) = (\\<lambda>x. n)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. nat_to_pr (index_of_const 0) = (\\<lambda>x. 0)\n 2. \\<And>n.\n       nat_to_pr (index_of_const n) = (\\<lambda>x. n) \\<Longrightarrow>\n       nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "show \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_const 0) = (\\<lambda>x. 0)", "by (simp add: index_of_const_at_0 nat_to_pr_at_0)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_const 0) = (\\<lambda>x. 0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       nat_to_pr (index_of_const n) = (\\<lambda>x. n) \\<Longrightarrow>\n       nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       nat_to_pr (index_of_const n) = (\\<lambda>x. n) \\<Longrightarrow>\n       nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       nat_to_pr (index_of_const n) = (\\<lambda>x. n) \\<Longrightarrow>\n       nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "assume \"?P n\""], ["proof (state)\nthis:\n  nat_to_pr (index_of_const n) = (\\<lambda>x. n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       nat_to_pr (index_of_const n) = (\\<lambda>x. n) \\<Longrightarrow>\n       nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "then"], ["proof (chain)\npicking this:\n  nat_to_pr (index_of_const n) = (\\<lambda>x. n)", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  nat_to_pr (index_of_const n) = (\\<lambda>x. n)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)", "by ((simp add: index_of_const_at_suc nat_to_sch_at_2 nat_to_pr_def loc_srj_3_1))"], ["proof (state)\nthis:\n  nat_to_pr (index_of_const (Suc n)) = (\\<lambda>x. Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_of_const_lm_1: \"(nat_to_pr (index_of_const n)) 0 = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_const n) 0 = n", "by (simp add: index_of_const_main)"], ["", "lemma index_of_const_inj: \"index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2", "assume \"index_of_const n1 = index_of_const n2\""], ["proof (state)\nthis:\n  index_of_const n1 = index_of_const n2\n\ngoal (1 subgoal):\n 1. index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2", "then"], ["proof (chain)\npicking this:\n  index_of_const n1 = index_of_const n2", "have \"(nat_to_pr (index_of_const n1)) 0  = (nat_to_pr (index_of_const n2)) 0\""], ["proof (prove)\nusing this:\n  index_of_const n1 = index_of_const n2\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_const n1) 0 = nat_to_pr (index_of_const n2) 0", "by simp"], ["proof (state)\nthis:\n  nat_to_pr (index_of_const n1) 0 = nat_to_pr (index_of_const n2) 0\n\ngoal (1 subgoal):\n 1. index_of_const n1 = index_of_const n2 \\<Longrightarrow> n1 = n2", "thus ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr (index_of_const n1) 0 = nat_to_pr (index_of_const n2) 0\n\ngoal (1 subgoal):\n 1. n1 = n2", "by (simp add: index_of_const_lm_1)"], ["proof (state)\nthis:\n  n1 = n2\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"index_of_zero = sch_to_nat Base_zero\""], ["", "definition \"index_of_suc = sch_to_nat Base_suc\""], ["", "definition \"index_of_c_fst = sch_to_nat Base_fst\""], ["", "definition \"index_of_c_snd = sch_to_nat Base_snd\""], ["", "definition \"index_of_id = pair_by_index index_of_c_fst index_of_c_snd\""], ["", "lemma index_of_zero_main: \"nat_to_pr index_of_zero = (\\<lambda> x. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_zero = (\\<lambda>x. 0)", "by (simp add: index_of_zero_def nat_to_pr_def)"], ["", "lemma index_of_suc_main: \"nat_to_pr index_of_suc = Suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_suc = Suc", "apply(simp add: index_of_suc_def nat_to_pr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sch_to_pr (nat_to_sch (c_pair (Suc 0) 0)) = Suc", "apply(insert loc_srj_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch (c_pair 1 0) = Base_suc \\<Longrightarrow>\n    sch_to_pr (nat_to_sch (c_pair (Suc 0) 0)) = Suc", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma index_of_c_fst_main: \"nat_to_pr index_of_c_fst = c_fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_c_fst = c_fst", "by (simp add: index_of_c_fst_def nat_to_pr_def loc_srj_1)"], ["", "lemma [simp]: \"nat_to_sch index_of_c_fst = Base_fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch index_of_c_fst = Base_fst", "by (unfold index_of_c_fst_def, rule nat_to_sch_srj)"], ["", "lemma index_of_c_snd_main: \"nat_to_pr index_of_c_snd = c_snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_c_snd = c_snd", "by (simp add: index_of_c_snd_def nat_to_pr_def loc_srj_2)"], ["", "lemma [simp]: \"nat_to_sch index_of_c_snd = Base_snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_sch index_of_c_snd = Base_snd", "by (unfold index_of_c_snd_def, rule nat_to_sch_srj)"], ["", "lemma index_of_id_main: \"nat_to_pr index_of_id = (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr index_of_id = (\\<lambda>x. x)", "by (simp add: index_of_id_def nat_to_pr_def c_f_pair_def)"], ["", "definition\n  index_of_c_pair_n :: \"nat \\<Rightarrow> nat\" where\n  \"index_of_c_pair_n = (\\<lambda> n. pair_by_index (index_of_const n) index_of_id)\""], ["", "lemma index_of_c_pair_n_is_pr: \"index_of_c_pair_n \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_c_pair_n \\<in> PrimRec1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index_of_c_pair_n \\<in> PrimRec1", "have \"(\\<lambda> x. index_of_id) \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. index_of_id) \\<in> PrimRec1", "by (rule const_is_pr)"], ["proof (state)\nthis:\n  (\\<lambda>x. index_of_id) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n \\<in> PrimRec1", "with pair_by_index_is_pr index_of_const_is_pr"], ["proof (chain)\npicking this:\n  pair_by_index \\<in> PrimRec2\n  index_of_const \\<in> PrimRec1\n  (\\<lambda>x. index_of_id) \\<in> PrimRec1", "have \"(\\<lambda> n. pair_by_index (index_of_const n) index_of_id) \\<in> PrimRec1\""], ["proof (prove)\nusing this:\n  pair_by_index \\<in> PrimRec2\n  index_of_const \\<in> PrimRec1\n  (\\<lambda>x. index_of_id) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. pair_by_index (index_of_const n) index_of_id)\n    \\<in> PrimRec1", "by prec"], ["proof (state)\nthis:\n  (\\<lambda>n. pair_by_index (index_of_const n) index_of_id) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n \\<in> PrimRec1", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. pair_by_index (index_of_const n) index_of_id) \\<in> PrimRec1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. pair_by_index (index_of_const n) index_of_id) \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n \\<in> PrimRec1", "by (fold index_of_c_pair_n_def)"], ["proof (state)\nthis:\n  index_of_c_pair_n \\<in> PrimRec1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_of_c_pair_n_main: \"nat_to_pr (index_of_c_pair_n n) = (\\<lambda> x. c_pair n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "have \"nat_to_pr (index_of_c_pair_n n) = nat_to_pr (pair_by_index (index_of_const n) index_of_id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) =\n    nat_to_pr (pair_by_index (index_of_const n) index_of_id)", "by (simp add: index_of_c_pair_n_def)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_c_pair_n n) =\n  nat_to_pr (pair_by_index (index_of_const n) index_of_id)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "also"], ["proof (state)\nthis:\n  nat_to_pr (index_of_c_pair_n n) =\n  nat_to_pr (pair_by_index (index_of_const n) index_of_id)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "have \"\\<dots> = c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (pair_by_index (index_of_const n) index_of_id) =\n    c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id)", "by (simp add: pair_by_index_main)"], ["proof (state)\nthis:\n  nat_to_pr (pair_by_index (index_of_const n) index_of_id) =\n  c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "also"], ["proof (state)\nthis:\n  nat_to_pr (pair_by_index (index_of_const n) index_of_id) =\n  c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "have \"\\<dots> = c_f_pair (\\<lambda> x. n) (\\<lambda> x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id) =\n    c_f_pair (\\<lambda>x. n) (\\<lambda>x. x)", "by (simp add: index_of_const_main index_of_id_main)"], ["proof (state)\nthis:\n  c_f_pair (nat_to_pr (index_of_const n)) (nat_to_pr index_of_id) =\n  c_f_pair (\\<lambda>x. n) (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "finally"], ["proof (chain)\npicking this:\n  nat_to_pr (index_of_c_pair_n n) = c_f_pair (\\<lambda>x. n) (\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr (index_of_c_pair_n n) = c_f_pair (\\<lambda>x. n) (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. nat_to_pr (index_of_c_pair_n n) = c_pair n", "by (simp add: c_f_pair_def)"], ["proof (state)\nthis:\n  nat_to_pr (index_of_c_pair_n n) = c_pair n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_of_c_pair_n_inj: \"index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1=x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1 = x2", "assume \"index_of_c_pair_n x1 = index_of_c_pair_n x2\""], ["proof (state)\nthis:\n  index_of_c_pair_n x1 = index_of_c_pair_n x2\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1 = x2", "hence \"pair_by_index (index_of_const x1) index_of_id = pair_by_index (index_of_const x2) index_of_id\""], ["proof (prove)\nusing this:\n  index_of_c_pair_n x1 = index_of_c_pair_n x2\n\ngoal (1 subgoal):\n 1. pair_by_index (index_of_const x1) index_of_id =\n    pair_by_index (index_of_const x2) index_of_id", "by (unfold index_of_c_pair_n_def)"], ["proof (state)\nthis:\n  pair_by_index (index_of_const x1) index_of_id =\n  pair_by_index (index_of_const x2) index_of_id\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1 = x2", "hence \"index_of_const x1 = index_of_const x2\""], ["proof (prove)\nusing this:\n  pair_by_index (index_of_const x1) index_of_id =\n  pair_by_index (index_of_const x2) index_of_id\n\ngoal (1 subgoal):\n 1. index_of_const x1 = index_of_const x2", "by (rule pair_by_index_inj1)"], ["proof (state)\nthis:\n  index_of_const x1 = index_of_const x2\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n x1 = index_of_c_pair_n x2 \\<Longrightarrow> x1 = x2", "thus ?thesis"], ["proof (prove)\nusing this:\n  index_of_const x1 = index_of_const x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "by (rule index_of_const_inj)"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  s1_1 :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"s1_1 = (\\<lambda> n x. comp_by_index n (index_of_c_pair_n x))\""], ["", "lemma s1_1_is_pr: \"s1_1 \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1_1 \\<in> PrimRec2", "by (unfold s1_1_def, insert comp_by_index_is_pr index_of_c_pair_n_is_pr, prec)"], ["", "theorem s1_1_th: \"(\\<lambda> y. (nat_to_pr n) (c_pair x y)) = nat_to_pr (s1_1 n x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "have \"nat_to_pr (s1_1 n x) = nat_to_pr (comp_by_index n (index_of_c_pair_n x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (s1_1 n x) = nat_to_pr (comp_by_index n (index_of_c_pair_n x))", "by (simp add: s1_1_def)"], ["proof (state)\nthis:\n  nat_to_pr (s1_1 n x) = nat_to_pr (comp_by_index n (index_of_c_pair_n x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "also"], ["proof (state)\nthis:\n  nat_to_pr (s1_1 n x) = nat_to_pr (comp_by_index n (index_of_c_pair_n x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "have \"\\<dots> = (\\<lambda> z. (nat_to_pr n) ((nat_to_pr (index_of_c_pair_n x)) z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (comp_by_index n (index_of_c_pair_n x)) =\n    (\\<lambda>z. nat_to_pr n (nat_to_pr (index_of_c_pair_n x) z))", "by (simp add: comp_by_index_main)"], ["proof (state)\nthis:\n  nat_to_pr (comp_by_index n (index_of_c_pair_n x)) =\n  (\\<lambda>z. nat_to_pr n (nat_to_pr (index_of_c_pair_n x) z))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "also"], ["proof (state)\nthis:\n  nat_to_pr (comp_by_index n (index_of_c_pair_n x)) =\n  (\\<lambda>z. nat_to_pr n (nat_to_pr (index_of_c_pair_n x) z))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "have \"\\<dots> = (\\<lambda> z. (nat_to_pr n) ((\\<lambda> u. c_pair x u) z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>z. nat_to_pr n (nat_to_pr (index_of_c_pair_n x) z)) =\n    (\\<lambda>z. nat_to_pr n (c_pair x z))", "by (simp add: index_of_c_pair_n_main)"], ["proof (state)\nthis:\n  (\\<lambda>z. nat_to_pr n (nat_to_pr (index_of_c_pair_n x) z)) =\n  (\\<lambda>z. nat_to_pr n (c_pair x z))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "finally"], ["proof (chain)\npicking this:\n  nat_to_pr (s1_1 n x) = (\\<lambda>z. nat_to_pr n (c_pair x z))", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr (s1_1 n x) = (\\<lambda>z. nat_to_pr n (c_pair x z))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>y. nat_to_pr n (c_pair x y)) = nat_to_pr (s1_1 n x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma s1_1_inj: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1=x2 \\<and> y1=y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "assume \"s1_1 x1 y1 = s1_1 x2 y2\""], ["proof (state)\nthis:\n  s1_1 x1 y1 = s1_1 x2 y2\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "then"], ["proof (chain)\npicking this:\n  s1_1 x1 y1 = s1_1 x2 y2", "have \"comp_by_index x1 (index_of_c_pair_n y1) = comp_by_index x2 (index_of_c_pair_n y2)\""], ["proof (prove)\nusing this:\n  s1_1 x1 y1 = s1_1 x2 y2\n\ngoal (1 subgoal):\n 1. comp_by_index x1 (index_of_c_pair_n y1) =\n    comp_by_index x2 (index_of_c_pair_n y2)", "by (unfold s1_1_def)"], ["proof (state)\nthis:\n  comp_by_index x1 (index_of_c_pair_n y1) =\n  comp_by_index x2 (index_of_c_pair_n y2)\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "then"], ["proof (chain)\npicking this:\n  comp_by_index x1 (index_of_c_pair_n y1) =\n  comp_by_index x2 (index_of_c_pair_n y2)", "have S1: \"x1=x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2\""], ["proof (prove)\nusing this:\n  comp_by_index x1 (index_of_c_pair_n y1) =\n  comp_by_index x2 (index_of_c_pair_n y2)\n\ngoal (1 subgoal):\n 1. x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2", "by (rule comp_by_index_inj)"], ["proof (state)\nthis:\n  x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "then"], ["proof (chain)\npicking this:\n  x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2", "have S2: \"x1=x2\""], ["proof (prove)\nusing this:\n  x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2\n\ngoal (1 subgoal):\n 1. x1 = x2", ".."], ["proof (state)\nthis:\n  x1 = x2\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "from S1"], ["proof (chain)\npicking this:\n  x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2", "have \"index_of_c_pair_n y1 = index_of_c_pair_n y2\""], ["proof (prove)\nusing this:\n  x1 = x2 \\<and> index_of_c_pair_n y1 = index_of_c_pair_n y2\n\ngoal (1 subgoal):\n 1. index_of_c_pair_n y1 = index_of_c_pair_n y2", ".."], ["proof (state)\nthis:\n  index_of_c_pair_n y1 = index_of_c_pair_n y2\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "then"], ["proof (chain)\npicking this:\n  index_of_c_pair_n y1 = index_of_c_pair_n y2", "have \"y1 = y2\""], ["proof (prove)\nusing this:\n  index_of_c_pair_n y1 = index_of_c_pair_n y2\n\ngoal (1 subgoal):\n 1. y1 = y2", "by (rule index_of_c_pair_n_inj)"], ["proof (state)\nthis:\n  y1 = y2\n\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2 \\<and> y1 = y2", "with S2"], ["proof (chain)\npicking this:\n  x1 = x2\n  y1 = y2", "show ?thesis"], ["proof (prove)\nusing this:\n  x1 = x2\n  y1 = y2\n\ngoal (1 subgoal):\n 1. x1 = x2 \\<and> y1 = y2", ".."], ["proof (state)\nthis:\n  x1 = x2 \\<and> y1 = y2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma s1_1_inj1: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1=x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> x1 = x2", "by (frule s1_1_inj, drule conjunct1)"], ["", "lemma s1_1_inj2: \"s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> y1=y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1_1 x1 y1 = s1_1 x2 y2 \\<Longrightarrow> y1 = y2", "by (frule s1_1_inj, drule conjunct2)"], ["", "primrec\n  pr_index_enumerator :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nwhere\n  \"pr_index_enumerator n 0 = n\"\n| \"pr_index_enumerator n (Suc m) = comp_by_index index_of_id (pr_index_enumerator n m)\""], ["", "theorem pr_index_enumerator_is_pr: \"pr_index_enumerator \\<in> PrimRec2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "define g where \"g x = x\" for x :: nat"], ["proof (state)\nthis:\n  g ?x = ?x\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "have g_is_pr: \"g \\<in> PrimRec1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> PrimRec1", "by (unfold g_def, rule pr_id1_1)"], ["proof (state)\nthis:\n  g \\<in> PrimRec1\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "define h where \"h a b c = comp_by_index index_of_id b\" for a b c :: nat"], ["proof (state)\nthis:\n  h ?a ?b ?c = comp_by_index index_of_id ?b\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "from comp_by_index_is_pr"], ["proof (chain)\npicking this:\n  comp_by_index \\<in> PrimRec2", "have h_is_pr: \"h \\<in> PrimRec3\""], ["proof (prove)\nusing this:\n  comp_by_index \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. h \\<in> PrimRec3", "unfolding h_def"], ["proof (prove)\nusing this:\n  comp_by_index \\<in> PrimRec2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b c. comp_by_index index_of_id b) \\<in> PrimRec3", "by prec"], ["proof (state)\nthis:\n  h \\<in> PrimRec3\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "let ?f = \"pr_index_enumerator\""], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "from g_def"], ["proof (chain)\npicking this:\n  g ?x = ?x", "have f_at_0: \"\\<forall> x. ?f x 0 = g x\""], ["proof (prove)\nusing this:\n  g ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x. pr_index_enumerator x 0 = g x", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. pr_index_enumerator x 0 = g x\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "from h_def"], ["proof (chain)\npicking this:\n  h ?a ?b ?c = comp_by_index index_of_id ?b", "have f_at_Suc: \"\\<forall> x y. ?f x (Suc y) = h x (?f x y) y\""], ["proof (prove)\nusing this:\n  h ?a ?b ?c = comp_by_index index_of_id ?b\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       pr_index_enumerator x (Suc y) = h x (pr_index_enumerator x y) y", "by auto"], ["proof (state)\nthis:\n  \\<forall>x y.\n     pr_index_enumerator x (Suc y) = h x (pr_index_enumerator x y) y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "from g_is_pr h_is_pr f_at_0 f_at_Suc"], ["proof (chain)\npicking this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. pr_index_enumerator x 0 = g x\n  \\<forall>x y.\n     pr_index_enumerator x (Suc y) = h x (pr_index_enumerator x y) y", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> PrimRec1\n  h \\<in> PrimRec3\n  \\<forall>x. pr_index_enumerator x 0 = g x\n  \\<forall>x y.\n     pr_index_enumerator x (Suc y) = h x (pr_index_enumerator x y) y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator \\<in> PrimRec2", "by (rule pr_rec_last_scheme)"], ["proof (state)\nthis:\n  pr_index_enumerator \\<in> PrimRec2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_index_enumerator_increase1: \"pr_index_enumerator n m < pr_index_enumerator (n+1) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator (n + 1) m", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. pr_index_enumerator n 0 < pr_index_enumerator (n + 1) 0\n 2. \\<And>m.\n       pr_index_enumerator n m\n       < pr_index_enumerator (n + 1) m \\<Longrightarrow>\n       pr_index_enumerator n (Suc m) < pr_index_enumerator (n + 1) (Suc m)", "show \"pr_index_enumerator n 0 < pr_index_enumerator (n + 1) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n 0 < pr_index_enumerator (n + 1) 0", "by simp"], ["proof (state)\nthis:\n  pr_index_enumerator n 0 < pr_index_enumerator (n + 1) 0\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pr_index_enumerator n m\n       < pr_index_enumerator (n + 1) m \\<Longrightarrow>\n       pr_index_enumerator n (Suc m) < pr_index_enumerator (n + 1) (Suc m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       pr_index_enumerator n m\n       < pr_index_enumerator (n + 1) m \\<Longrightarrow>\n       pr_index_enumerator n (Suc m) < pr_index_enumerator (n + 1) (Suc m)", "fix na"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       pr_index_enumerator n m\n       < pr_index_enumerator (n + 1) m \\<Longrightarrow>\n       pr_index_enumerator n (Suc m) < pr_index_enumerator (n + 1) (Suc m)", "assume A: \"pr_index_enumerator n na < pr_index_enumerator (n + 1) na\""], ["proof (state)\nthis:\n  pr_index_enumerator n na < pr_index_enumerator (n + 1) na\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pr_index_enumerator n m\n       < pr_index_enumerator (n + 1) m \\<Longrightarrow>\n       pr_index_enumerator n (Suc m) < pr_index_enumerator (n + 1) (Suc m)", "show \"pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "let ?a = \"pr_index_enumerator n na\""], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "let ?b = \"pr_index_enumerator (n+1) na\""], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "have S1: \"pr_index_enumerator n (Suc na) = comp_by_index index_of_id ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) =\n    comp_by_index index_of_id (pr_index_enumerator n na)", "by simp"], ["proof (state)\nthis:\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "have L1: \"pr_index_enumerator (n+1) (Suc na) = comp_by_index index_of_id ?b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator (n + 1) (Suc na) =\n    comp_by_index index_of_id (pr_index_enumerator (n + 1) na)", "by simp"], ["proof (state)\nthis:\n  pr_index_enumerator (n + 1) (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator (n + 1) na)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "from A"], ["proof (chain)\npicking this:\n  pr_index_enumerator n na < pr_index_enumerator (n + 1) na", "have \"c_pair index_of_id ?a < c_pair index_of_id ?b\""], ["proof (prove)\nusing this:\n  pr_index_enumerator n na < pr_index_enumerator (n + 1) na\n\ngoal (1 subgoal):\n 1. c_pair index_of_id (pr_index_enumerator n na)\n    < c_pair index_of_id (pr_index_enumerator (n + 1) na)", "by (rule c_pair_strict_mono2)"], ["proof (state)\nthis:\n  c_pair index_of_id (pr_index_enumerator n na)\n  < c_pair index_of_id (pr_index_enumerator (n + 1) na)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "then"], ["proof (chain)\npicking this:\n  c_pair index_of_id (pr_index_enumerator n na)\n  < c_pair index_of_id (pr_index_enumerator (n + 1) na)", "have \"c_pair 4 (c_pair index_of_id ?a) < c_pair 4 (c_pair index_of_id ?b)\""], ["proof (prove)\nusing this:\n  c_pair index_of_id (pr_index_enumerator n na)\n  < c_pair index_of_id (pr_index_enumerator (n + 1) na)\n\ngoal (1 subgoal):\n 1. c_pair 4 (c_pair index_of_id (pr_index_enumerator n na))\n    < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))", "by (rule c_pair_strict_mono2)"], ["proof (state)\nthis:\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n na))\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "then"], ["proof (chain)\npicking this:\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n na))\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))", "have \"comp_by_index index_of_id ?a < c_pair 4 (c_pair index_of_id ?b)\""], ["proof (prove)\nusing this:\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n na))\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))\n\ngoal (1 subgoal):\n 1. comp_by_index index_of_id (pr_index_enumerator n na)\n    < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))", "by (simp add: comp_by_index_def)"], ["proof (state)\nthis:\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "then"], ["proof (chain)\npicking this:\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))", "have \"comp_by_index index_of_id ?a < comp_by_index index_of_id ?b\""], ["proof (prove)\nusing this:\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator (n + 1) na))\n\ngoal (1 subgoal):\n 1. comp_by_index index_of_id (pr_index_enumerator n na)\n    < comp_by_index index_of_id (pr_index_enumerator (n + 1) na)", "by (simp add: comp_by_index_def)"], ["proof (state)\nthis:\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < comp_by_index index_of_id (pr_index_enumerator (n + 1) na)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "with S1 L1"], ["proof (chain)\npicking this:\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  pr_index_enumerator (n + 1) (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator (n + 1) na)\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < comp_by_index index_of_id (pr_index_enumerator (n + 1) na)", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  pr_index_enumerator (n + 1) (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator (n + 1) na)\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  < comp_by_index index_of_id (pr_index_enumerator (n + 1) na)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)", "by auto"], ["proof (state)\nthis:\n  pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pr_index_enumerator n (Suc na) < pr_index_enumerator (n + 1) (Suc na)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_index_enumerator_increase2: \"pr_index_enumerator n m < pr_index_enumerator n (m + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "let ?a = \"pr_index_enumerator n m\""], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "have S1: \"pr_index_enumerator n (m + 1) = comp_by_index index_of_id ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (m + 1) =\n    comp_by_index index_of_id (pr_index_enumerator n m)", "by simp"], ["proof (state)\nthis:\n  pr_index_enumerator n (m + 1) =\n  comp_by_index index_of_id (pr_index_enumerator n m)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "have S2: \"comp_by_index index_of_id ?a = c_pair 4 (c_pair index_of_id ?a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_by_index index_of_id (pr_index_enumerator n m) =\n    c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "by (simp add: comp_by_index_def)"], ["proof (state)\nthis:\n  comp_by_index index_of_id (pr_index_enumerator n m) =\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "have S3: \"4 + c_pair index_of_id ?a \\<le> c_pair 4 (c_pair index_of_id ?a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 + c_pair index_of_id (pr_index_enumerator n m)\n    \\<le> c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "by (rule sum_le_c_pair)"], ["proof (state)\nthis:\n  4 + c_pair index_of_id (pr_index_enumerator n m)\n  \\<le> c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "then"], ["proof (chain)\npicking this:\n  4 + c_pair index_of_id (pr_index_enumerator n m)\n  \\<le> c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "have S4: \"c_pair index_of_id ?a < c_pair 4 (c_pair index_of_id ?a)\""], ["proof (prove)\nusing this:\n  4 + c_pair index_of_id (pr_index_enumerator n m)\n  \\<le> c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. c_pair index_of_id (pr_index_enumerator n m)\n    < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "by auto"], ["proof (state)\nthis:\n  c_pair index_of_id (pr_index_enumerator n m)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "have S5: \"?a \\<le> c_pair index_of_id ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m\n    \\<le> c_pair index_of_id (pr_index_enumerator n m)", "by (rule arg2_le_c_pair)"], ["proof (state)\nthis:\n  pr_index_enumerator n m \\<le> c_pair index_of_id (pr_index_enumerator n m)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "from S4 S5"], ["proof (chain)\npicking this:\n  c_pair index_of_id (pr_index_enumerator n m)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n  pr_index_enumerator n m \\<le> c_pair index_of_id (pr_index_enumerator n m)", "have S6: \"?a < c_pair 4 (c_pair index_of_id ?a)\""], ["proof (prove)\nusing this:\n  c_pair index_of_id (pr_index_enumerator n m)\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n  pr_index_enumerator n m \\<le> c_pair index_of_id (pr_index_enumerator n m)\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m\n    < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "by auto"], ["proof (state)\nthis:\n  pr_index_enumerator n m\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "with S1 S2"], ["proof (chain)\npicking this:\n  pr_index_enumerator n (m + 1) =\n  comp_by_index index_of_id (pr_index_enumerator n m)\n  comp_by_index index_of_id (pr_index_enumerator n m) =\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n  pr_index_enumerator n m\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_index_enumerator n (m + 1) =\n  comp_by_index index_of_id (pr_index_enumerator n m)\n  comp_by_index index_of_id (pr_index_enumerator n m) =\n  c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n  pr_index_enumerator n m\n  < c_pair 4 (c_pair index_of_id (pr_index_enumerator n m))\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m < pr_index_enumerator n (m + 1)", "by auto"], ["proof (state)\nthis:\n  pr_index_enumerator n m < pr_index_enumerator n (m + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_inc_mono: \"(\\<forall> (x::nat). (f::nat\\<Rightarrow>nat) x < f (x+1)) \\<Longrightarrow> \\<forall> (x::nat) (y::nat). (x < y \\<longrightarrow> f x < f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f x < f (x + 1) \\<Longrightarrow>\n    \\<forall>x y. x < y \\<longrightarrow> f x < f y", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x. f x < f (x + 1) \\<Longrightarrow>\n       x < y \\<longrightarrow> f x < f y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x. f x < f (x + 1) \\<Longrightarrow>\n       x < y \\<longrightarrow> f x < f y", "assume A: \"\\<forall> (x::nat). f x < f (x+1)\""], ["proof (state)\nthis:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x. f x < f (x + 1) \\<Longrightarrow>\n       x < y \\<longrightarrow> f x < f y", "show \" x < y \\<longrightarrow> f x < f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<longrightarrow> f x < f y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "assume A1: \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "have L1: \"\\<And> u v. f u < f (u + (v+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u v. f u < f (u + (v + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. f u < f (u + (v + 1))", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v. f u < f (u + (v + 1))", "show \"f u < f (u + (v+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u < f (u + (v + 1))", "proof (induct v)"], ["proof (state)\ngoal (2 subgoals):\n 1. f u < f (u + (0 + 1))\n 2. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. f x < f (x + 1)", "show \"f u < f (u + (0 + 1))\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. f u < f (u + (0 + 1))", "by auto"], ["proof (state)\nthis:\n  f u < f (u + (0 + 1))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "fix v n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "assume A2: \"f u < f (u + (n + 1))\""], ["proof (state)\nthis:\n  f u < f (u + (n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "from A"], ["proof (chain)\npicking this:\n  \\<forall>x. f x < f (x + 1)", "have S1: \"f (u + (n + 1)) < f (u + (Suc n + 1))\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. f (u + (n + 1)) < f (u + (Suc n + 1))", "by auto"], ["proof (state)\nthis:\n  f (u + (n + 1)) < f (u + (Suc n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       f u < f (u + (v + 1)) \\<Longrightarrow> f u < f (u + (Suc v + 1))", "from A2 S1"], ["proof (chain)\npicking this:\n  f u < f (u + (n + 1))\n  f (u + (n + 1)) < f (u + (Suc n + 1))", "show \" f u < f (u + (Suc n + 1))\""], ["proof (prove)\nusing this:\n  f u < f (u + (n + 1))\n  f (u + (n + 1)) < f (u + (Suc n + 1))\n\ngoal (1 subgoal):\n 1. f u < f (u + (Suc n + 1))", "by (rule less_trans)"], ["proof (state)\nthis:\n  f u < f (u + (Suc n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f u < f (u + (v + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ?u < f (?u + (?v + 1))\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "let ?v = \"(y - x) - 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "from A1"], ["proof (chain)\npicking this:\n  x < y", "have S2: \"y = x + (?v + 1)\""], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. y = x + (y - x - 1 + 1)", "by auto"], ["proof (state)\nthis:\n  y = x + (y - x - 1 + 1)\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "have \"f x < f (x + (?v + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x < f (x + (y - x - 1 + 1))", "by (rule L1)"], ["proof (state)\nthis:\n  f x < f (x + (y - x - 1 + 1))\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> f x < f y", "with S2"], ["proof (chain)\npicking this:\n  y = x + (y - x - 1 + 1)\n  f x < f (x + (y - x - 1 + 1))", "show \"f x < f y\""], ["proof (prove)\nusing this:\n  y = x + (y - x - 1 + 1)\n  f x < f (x + (y - x - 1 + 1))\n\ngoal (1 subgoal):\n 1. f x < f y", "by auto"], ["proof (state)\nthis:\n  f x < f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x < y \\<longrightarrow> f x < f y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_index_enumerator_mono1: \"n1 < n2 \\<Longrightarrow> pr_index_enumerator n1 m < pr_index_enumerator n2 m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "assume A: \"n1 < n2\""], ["proof (state)\nthis:\n  n1 < n2\n\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "define f where \"f x = pr_index_enumerator x m\" for x"], ["proof (state)\nthis:\n  f ?x = pr_index_enumerator ?x m\n\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "have f_inc: \"\\<forall> x. f x < f (x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f x < f (x + 1)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x < f (x + 1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x < f (x + 1)", "show \"f x < f (x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x < f (x + 1)", "by (unfold f_def, rule pr_index_enumerator_increase1)"], ["proof (state)\nthis:\n  f x < f (x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "from f_inc"], ["proof (chain)\npicking this:\n  \\<forall>x. f x < f (x + 1)", "have \"\\<forall> x y. (x < y \\<longrightarrow> f x < f y)\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> f x < f y", "by (rule f_inc_mono)"], ["proof (state)\nthis:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. n1 < n2 \\<Longrightarrow>\n    pr_index_enumerator n1 m < pr_index_enumerator n2 m", "with A f_def"], ["proof (chain)\npicking this:\n  n1 < n2\n  f ?x = pr_index_enumerator ?x m\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y", "show ?thesis"], ["proof (prove)\nusing this:\n  n1 < n2\n  f ?x = pr_index_enumerator ?x m\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m < pr_index_enumerator n2 m", "by auto"], ["proof (state)\nthis:\n  pr_index_enumerator n1 m < pr_index_enumerator n2 m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pr_index_enumerator_mono2: \"m1 < m2 \\<Longrightarrow> pr_index_enumerator n m1 < pr_index_enumerator n m2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "assume A: \"m1 < m2\""], ["proof (state)\nthis:\n  m1 < m2\n\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "define f where \"f x = pr_index_enumerator n x\" for x"], ["proof (state)\nthis:\n  f ?x = pr_index_enumerator n ?x\n\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "have f_inc: \"\\<forall> x. f x < f (x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f x < f (x + 1)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x < f (x + 1)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x < f (x + 1)", "show \"f x < f (x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x < f (x + 1)", "by (unfold f_def, rule pr_index_enumerator_increase2)"], ["proof (state)\nthis:\n  f x < f (x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "from f_inc"], ["proof (chain)\npicking this:\n  \\<forall>x. f x < f (x + 1)", "have \"\\<forall> x y. (x < y \\<longrightarrow> f x < f y)\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x < f (x + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> f x < f y", "by (rule f_inc_mono)"], ["proof (state)\nthis:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. m1 < m2 \\<Longrightarrow>\n    pr_index_enumerator n m1 < pr_index_enumerator n m2", "with A f_def"], ["proof (chain)\npicking this:\n  m1 < m2\n  f ?x = pr_index_enumerator n ?x\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y", "show ?thesis"], ["proof (prove)\nusing this:\n  m1 < m2\n  f ?x = pr_index_enumerator n ?x\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 < pr_index_enumerator n m2", "by auto"], ["proof (state)\nthis:\n  pr_index_enumerator n m1 < pr_index_enumerator n m2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_mono_inj: \"\\<forall> (x::nat) (y::nat). (x < y \\<longrightarrow> (f::nat\\<Rightarrow>nat) x < f y) \\<Longrightarrow> \\<forall> (x::nat) (y::nat). (f x = f y \\<longrightarrow> x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> f x < f y \\<Longrightarrow>\n    \\<forall>x y. f x = f y \\<longrightarrow> x = y", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y. x < y \\<longrightarrow> f x < f y \\<Longrightarrow>\n       f x = f y \\<longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y. x < y \\<longrightarrow> f x < f y \\<Longrightarrow>\n       f x = f y \\<longrightarrow> x = y", "assume A: \"\\<forall>x y. x < y \\<longrightarrow> f x < f y\""], ["proof (state)\nthis:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y. x < y \\<longrightarrow> f x < f y \\<Longrightarrow>\n       f x = f y \\<longrightarrow> x = y", "show \"f x = f y \\<longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = f y \\<longrightarrow> x = y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. f x = f y \\<Longrightarrow> x = y", "assume A1: \"f x = f y\""], ["proof (state)\nthis:\n  f x = f y\n\ngoal (1 subgoal):\n 1. f x = f y \\<Longrightarrow> x = y", "show \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "assume A2: \"x \\<noteq> y\""], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume A3: \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from A A3"], ["proof (chain)\npicking this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n  x < y", "have \"f x < f y\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n  x < y\n\ngoal (1 subgoal):\n 1. f x < f y", "by auto"], ["proof (state)\nthis:\n  f x < f y\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  f x = f y\n  f x < f y", "show False"], ["proof (prove)\nusing this:\n  f x = f y\n  f x < f y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "assume \"\\<not> x < y\""], ["proof (state)\nthis:\n  \\<not> x < y\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "with A2"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  \\<not> x < y", "have A4: \"y < x\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  \\<not> x < y\n\ngoal (1 subgoal):\n 1. y < x", "by auto"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "from A A4"], ["proof (chain)\npicking this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n  y < x", "have \"f y < f x\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n  y < x\n\ngoal (1 subgoal):\n 1. f y < f x", "by auto"], ["proof (state)\nthis:\n  f y < f x\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "with A1"], ["proof (chain)\npicking this:\n  f x = f y\n  f y < f x", "show False"], ["proof (prove)\nusing this:\n  f x = f y\n  f y < f x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f x = f y \\<longrightarrow> x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_index_enumerator_inj1: \"pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow> n1 = n2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "assume A: \"pr_index_enumerator n1 m = pr_index_enumerator n2 m\""], ["proof (state)\nthis:\n  pr_index_enumerator n1 m = pr_index_enumerator n2 m\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "define f where \"f x = pr_index_enumerator x m\" for x"], ["proof (state)\nthis:\n  f ?x = pr_index_enumerator ?x m\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "have f_mono: \"\\<forall> x y. (x < y \\<longrightarrow> f x < f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> f x < f y", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x < y \\<longrightarrow> f x < f y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x < y \\<longrightarrow> f x < f y", "show \"x < y \\<longrightarrow> f x < f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<longrightarrow> f x < f y", "by (unfold f_def, simp add: pr_index_enumerator_mono1)"], ["proof (state)\nthis:\n  x < y \\<longrightarrow> f x < f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "from f_mono"], ["proof (chain)\npicking this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y", "have \"\\<forall> x y. (f x = f y \\<longrightarrow> x = y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. \\<forall>x y. f x = f y \\<longrightarrow> x = y", "by (rule f_mono_inj)"], ["proof (state)\nthis:\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n1 m = pr_index_enumerator n2 m \\<Longrightarrow>\n    n1 = n2", "with A f_def"], ["proof (chain)\npicking this:\n  pr_index_enumerator n1 m = pr_index_enumerator n2 m\n  f ?x = pr_index_enumerator ?x m\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_index_enumerator n1 m = pr_index_enumerator n2 m\n  f ?x = pr_index_enumerator ?x m\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. n1 = n2", "by auto"], ["proof (state)\nthis:\n  n1 = n2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_index_enumerator_inj2: \"pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow> m1 = m2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "assume A: \"pr_index_enumerator n m1 = pr_index_enumerator n m2\""], ["proof (state)\nthis:\n  pr_index_enumerator n m1 = pr_index_enumerator n m2\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "define f where \"f x = pr_index_enumerator n x\" for x"], ["proof (state)\nthis:\n  f ?x = pr_index_enumerator n ?x\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "have f_mono: \"\\<forall> x y. (x < y \\<longrightarrow> f x < f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> f x < f y", "proof (rule allI, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x < y \\<longrightarrow> f x < f y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. x < y \\<longrightarrow> f x < f y", "show \"x < y \\<longrightarrow> f x < f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<longrightarrow> f x < f y", "by (unfold f_def, simp add: pr_index_enumerator_mono2)"], ["proof (state)\nthis:\n  x < y \\<longrightarrow> f x < f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "from f_mono"], ["proof (chain)\npicking this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y", "have \"\\<forall> x y. (f x = f y \\<longrightarrow> x = y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x < y \\<longrightarrow> f x < f y\n\ngoal (1 subgoal):\n 1. \\<forall>x y. f x = f y \\<longrightarrow> x = y", "by (rule f_mono_inj)"], ["proof (state)\nthis:\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. pr_index_enumerator n m1 = pr_index_enumerator n m2 \\<Longrightarrow>\n    m1 = m2", "with A f_def"], ["proof (chain)\npicking this:\n  pr_index_enumerator n m1 = pr_index_enumerator n m2\n  f ?x = pr_index_enumerator n ?x\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  pr_index_enumerator n m1 = pr_index_enumerator n m2\n  f ?x = pr_index_enumerator n ?x\n  \\<forall>x y. f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. m1 = m2", "by auto"], ["proof (state)\nthis:\n  m1 = m2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem pr_index_enumerator_main: \"nat_to_pr n = nat_to_pr (pr_index_enumerator n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n m)", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n 0)\n 2. \\<And>m.\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n m) \\<Longrightarrow>\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc m))", "show \"nat_to_pr n = nat_to_pr (pr_index_enumerator n 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n 0)", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n 0)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n m) \\<Longrightarrow>\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc m))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n m) \\<Longrightarrow>\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc m))", "fix na"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n m) \\<Longrightarrow>\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc m))", "assume A: \"nat_to_pr n = nat_to_pr (pr_index_enumerator n na)\""], ["proof (state)\nthis:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n na)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n m) \\<Longrightarrow>\n       nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc m))", "show \"nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "let ?a = \"pr_index_enumerator n na\""], ["proof (state)\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "have S1: \"pr_index_enumerator n (Suc na) = comp_by_index index_of_id ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pr_index_enumerator n (Suc na) =\n    comp_by_index index_of_id (pr_index_enumerator n na)", "by simp"], ["proof (state)\nthis:\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "have \"nat_to_pr (comp_by_index index_of_id ?a) = (\\<lambda> x. (nat_to_pr index_of_id) (nat_to_pr ?a x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n    (\\<lambda>x.\n        nat_to_pr index_of_id (nat_to_pr (pr_index_enumerator n na) x))", "by (rule comp_by_index_main)"], ["proof (state)\nthis:\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  (\\<lambda>x.\n      nat_to_pr index_of_id (nat_to_pr (pr_index_enumerator n na) x))\n\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "with index_of_id_main"], ["proof (chain)\npicking this:\n  nat_to_pr index_of_id = (\\<lambda>x. x)\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  (\\<lambda>x.\n      nat_to_pr index_of_id (nat_to_pr (pr_index_enumerator n na) x))", "have \"nat_to_pr (comp_by_index index_of_id ?a) = nat_to_pr ?a\""], ["proof (prove)\nusing this:\n  nat_to_pr index_of_id = (\\<lambda>x. x)\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  (\\<lambda>x.\n      nat_to_pr index_of_id (nat_to_pr (pr_index_enumerator n na) x))\n\ngoal (1 subgoal):\n 1. nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n    nat_to_pr (pr_index_enumerator n na)", "by simp"], ["proof (state)\nthis:\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  nat_to_pr (pr_index_enumerator n na)\n\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "with A S1"], ["proof (chain)\npicking this:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n na)\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  nat_to_pr (pr_index_enumerator n na)", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n na)\n  pr_index_enumerator n (Suc na) =\n  comp_by_index index_of_id (pr_index_enumerator n na)\n  nat_to_pr (comp_by_index index_of_id (pr_index_enumerator n na)) =\n  nat_to_pr (pr_index_enumerator n na)\n\ngoal (1 subgoal):\n 1. nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))", "by simp"], ["proof (state)\nthis:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat_to_pr n = nat_to_pr (pr_index_enumerator n (Suc na))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}